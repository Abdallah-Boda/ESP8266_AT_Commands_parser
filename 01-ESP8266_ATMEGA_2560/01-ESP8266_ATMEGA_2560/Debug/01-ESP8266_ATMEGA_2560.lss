
01-ESP8266_ATMEGA_2560.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000962  00800200  00003d34  00003dc8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003d34  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000100c  00800b62  00800b62  0000472a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000472a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004788  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000438  00000000  00000000  000047c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000700a  00000000  00000000  00004c00  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a5e  00000000  00000000  0000bc0a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002865  00000000  00000000  0000c668  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001198  00000000  00000000  0000eed0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001503  00000000  00000000  00010068  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00005e16  00000000  00000000  0001156b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000438  00000000  00000000  00017381  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	93 c0       	rjmp	.+294    	; 0x128 <__ctors_end>
       2:	00 00       	nop
       4:	b2 c0       	rjmp	.+356    	; 0x16a <__bad_interrupt>
       6:	00 00       	nop
       8:	b0 c0       	rjmp	.+352    	; 0x16a <__bad_interrupt>
       a:	00 00       	nop
       c:	ae c0       	rjmp	.+348    	; 0x16a <__bad_interrupt>
       e:	00 00       	nop
      10:	ac c0       	rjmp	.+344    	; 0x16a <__bad_interrupt>
      12:	00 00       	nop
      14:	aa c0       	rjmp	.+340    	; 0x16a <__bad_interrupt>
      16:	00 00       	nop
      18:	a8 c0       	rjmp	.+336    	; 0x16a <__bad_interrupt>
      1a:	00 00       	nop
      1c:	a6 c0       	rjmp	.+332    	; 0x16a <__bad_interrupt>
      1e:	00 00       	nop
      20:	a4 c0       	rjmp	.+328    	; 0x16a <__bad_interrupt>
      22:	00 00       	nop
      24:	a2 c0       	rjmp	.+324    	; 0x16a <__bad_interrupt>
      26:	00 00       	nop
      28:	a0 c0       	rjmp	.+320    	; 0x16a <__bad_interrupt>
      2a:	00 00       	nop
      2c:	9e c0       	rjmp	.+316    	; 0x16a <__bad_interrupt>
      2e:	00 00       	nop
      30:	9c c0       	rjmp	.+312    	; 0x16a <__bad_interrupt>
      32:	00 00       	nop
      34:	9a c0       	rjmp	.+308    	; 0x16a <__bad_interrupt>
      36:	00 00       	nop
      38:	98 c0       	rjmp	.+304    	; 0x16a <__bad_interrupt>
      3a:	00 00       	nop
      3c:	96 c0       	rjmp	.+300    	; 0x16a <__bad_interrupt>
      3e:	00 00       	nop
      40:	94 c0       	rjmp	.+296    	; 0x16a <__bad_interrupt>
      42:	00 00       	nop
      44:	92 c0       	rjmp	.+292    	; 0x16a <__bad_interrupt>
      46:	00 00       	nop
      48:	90 c0       	rjmp	.+288    	; 0x16a <__bad_interrupt>
      4a:	00 00       	nop
      4c:	8e c0       	rjmp	.+284    	; 0x16a <__bad_interrupt>
      4e:	00 00       	nop
      50:	8c c0       	rjmp	.+280    	; 0x16a <__bad_interrupt>
      52:	00 00       	nop
      54:	0c 94 64 17 	jmp	0x2ec8	; 0x2ec8 <__vector_21>
      58:	88 c0       	rjmp	.+272    	; 0x16a <__bad_interrupt>
      5a:	00 00       	nop
      5c:	86 c0       	rjmp	.+268    	; 0x16a <__bad_interrupt>
      5e:	00 00       	nop
      60:	84 c0       	rjmp	.+264    	; 0x16a <__bad_interrupt>
      62:	00 00       	nop
      64:	0c 94 92 17 	jmp	0x2f24	; 0x2f24 <__vector_25>
      68:	80 c0       	rjmp	.+256    	; 0x16a <__bad_interrupt>
      6a:	00 00       	nop
      6c:	7e c0       	rjmp	.+252    	; 0x16a <__bad_interrupt>
      6e:	00 00       	nop
      70:	7c c0       	rjmp	.+248    	; 0x16a <__bad_interrupt>
      72:	00 00       	nop
      74:	7a c0       	rjmp	.+244    	; 0x16a <__bad_interrupt>
      76:	00 00       	nop
      78:	78 c0       	rjmp	.+240    	; 0x16a <__bad_interrupt>
      7a:	00 00       	nop
      7c:	76 c0       	rjmp	.+236    	; 0x16a <__bad_interrupt>
      7e:	00 00       	nop
      80:	74 c0       	rjmp	.+232    	; 0x16a <__bad_interrupt>
      82:	00 00       	nop
      84:	72 c0       	rjmp	.+228    	; 0x16a <__bad_interrupt>
      86:	00 00       	nop
      88:	70 c0       	rjmp	.+224    	; 0x16a <__bad_interrupt>
      8a:	00 00       	nop
      8c:	6e c0       	rjmp	.+220    	; 0x16a <__bad_interrupt>
      8e:	00 00       	nop
      90:	0c 94 15 17 	jmp	0x2e2a	; 0x2e2a <__vector_36>
      94:	6a c0       	rjmp	.+212    	; 0x16a <__bad_interrupt>
      96:	00 00       	nop
      98:	68 c0       	rjmp	.+208    	; 0x16a <__bad_interrupt>
      9a:	00 00       	nop
      9c:	66 c0       	rjmp	.+204    	; 0x16a <__bad_interrupt>
      9e:	00 00       	nop
      a0:	64 c0       	rjmp	.+200    	; 0x16a <__bad_interrupt>
      a2:	00 00       	nop
      a4:	62 c0       	rjmp	.+196    	; 0x16a <__bad_interrupt>
      a6:	00 00       	nop
      a8:	60 c0       	rjmp	.+192    	; 0x16a <__bad_interrupt>
      aa:	00 00       	nop
      ac:	5e c0       	rjmp	.+188    	; 0x16a <__bad_interrupt>
      ae:	00 00       	nop
      b0:	5c c0       	rjmp	.+184    	; 0x16a <__bad_interrupt>
      b2:	00 00       	nop
      b4:	5a c0       	rjmp	.+180    	; 0x16a <__bad_interrupt>
      b6:	00 00       	nop
      b8:	58 c0       	rjmp	.+176    	; 0x16a <__bad_interrupt>
      ba:	00 00       	nop
      bc:	56 c0       	rjmp	.+172    	; 0x16a <__bad_interrupt>
      be:	00 00       	nop
      c0:	54 c0       	rjmp	.+168    	; 0x16a <__bad_interrupt>
      c2:	00 00       	nop
      c4:	52 c0       	rjmp	.+164    	; 0x16a <__bad_interrupt>
      c6:	00 00       	nop
      c8:	50 c0       	rjmp	.+160    	; 0x16a <__bad_interrupt>
      ca:	00 00       	nop
      cc:	4e c0       	rjmp	.+156    	; 0x16a <__bad_interrupt>
      ce:	00 00       	nop
      d0:	4c c0       	rjmp	.+152    	; 0x16a <__bad_interrupt>
      d2:	00 00       	nop
      d4:	4a c0       	rjmp	.+148    	; 0x16a <__bad_interrupt>
      d6:	00 00       	nop
      d8:	48 c0       	rjmp	.+144    	; 0x16a <__bad_interrupt>
      da:	00 00       	nop
      dc:	46 c0       	rjmp	.+140    	; 0x16a <__bad_interrupt>
      de:	00 00       	nop
      e0:	44 c0       	rjmp	.+136    	; 0x16a <__bad_interrupt>
      e2:	00 00       	nop
      e4:	dc 09       	sbc	r29, r12
      e6:	b5 0a       	sbc	r11, r21
      e8:	ec 09       	sbc	r30, r12
      ea:	cf 0d       	add	r28, r15
      ec:	ad 0c       	add	r10, r13
      ee:	c3 0c       	add	r12, r3
      f0:	2a 0d       	add	r18, r10
      f2:	d1 0c       	add	r13, r1
      f4:	2a 0d       	add	r18, r10
      f6:	f1 0c       	add	r15, r1
      f8:	2a 0d       	add	r18, r10
      fa:	a0 0b       	sbc	r26, r16
      fc:	81 0e       	add	r8, r17
      fe:	2a 0d       	add	r18, r10
     100:	3a 0d       	add	r19, r10
     102:	2a 0d       	add	r18, r10
     104:	2a 0d       	add	r18, r10
     106:	4d 0d       	add	r20, r13
     108:	26 0a       	sbc	r2, r22
     10a:	2a 0d       	add	r18, r10
     10c:	2a 0d       	add	r18, r10
     10e:	72 0c       	add	r7, r2
     110:	92 0c       	add	r9, r2
     112:	8d 0d       	add	r24, r13
     114:	ad 0d       	add	r26, r13
     116:	2a 0d       	add	r18, r10
     118:	29 0e       	add	r2, r25
     11a:	ed 0a       	sbc	r14, r29
     11c:	01 0b       	sbc	r16, r17
     11e:	15 0b       	sbc	r17, r21
     120:	2a 0b       	sbc	r18, r26
     122:	3e 0b       	sbc	r19, r30
     124:	53 0b       	sbc	r21, r19
     126:	68 0b       	sbc	r22, r24

00000128 <__ctors_end>:
     128:	11 24       	eor	r1, r1
     12a:	1f be       	out	0x3f, r1	; 63
     12c:	cf ef       	ldi	r28, 0xFF	; 255
     12e:	d1 e2       	ldi	r29, 0x21	; 33
     130:	de bf       	out	0x3e, r29	; 62
     132:	cd bf       	out	0x3d, r28	; 61
     134:	00 e0       	ldi	r16, 0x00	; 0
     136:	0c bf       	out	0x3c, r16	; 60

00000138 <__do_copy_data>:
     138:	1b e0       	ldi	r17, 0x0B	; 11
     13a:	a0 e0       	ldi	r26, 0x00	; 0
     13c:	b2 e0       	ldi	r27, 0x02	; 2
     13e:	e4 e3       	ldi	r30, 0x34	; 52
     140:	fd e3       	ldi	r31, 0x3D	; 61
     142:	00 e0       	ldi	r16, 0x00	; 0
     144:	0b bf       	out	0x3b, r16	; 59
     146:	02 c0       	rjmp	.+4      	; 0x14c <__do_copy_data+0x14>
     148:	07 90       	elpm	r0, Z+
     14a:	0d 92       	st	X+, r0
     14c:	a2 36       	cpi	r26, 0x62	; 98
     14e:	b1 07       	cpc	r27, r17
     150:	d9 f7       	brne	.-10     	; 0x148 <__do_copy_data+0x10>

00000152 <__do_clear_bss>:
     152:	2b e1       	ldi	r18, 0x1B	; 27
     154:	a2 e6       	ldi	r26, 0x62	; 98
     156:	bb e0       	ldi	r27, 0x0B	; 11
     158:	01 c0       	rjmp	.+2      	; 0x15c <.do_clear_bss_start>

0000015a <.do_clear_bss_loop>:
     15a:	1d 92       	st	X+, r1

0000015c <.do_clear_bss_start>:
     15c:	ae 36       	cpi	r26, 0x6E	; 110
     15e:	b2 07       	cpc	r27, r18
     160:	e1 f7       	brne	.-8      	; 0x15a <.do_clear_bss_loop>
     162:	0e 94 da 17 	call	0x2fb4	; 0x2fb4 <main>
     166:	0c 94 98 1e 	jmp	0x3d30	; 0x3d30 <_exit>

0000016a <__bad_interrupt>:
     16a:	4a cf       	rjmp	.-364    	; 0x0 <__vectors>

0000016c <BUFFER_Init>:
	}
	
	/* Clear flags */
	Buffer->Flags = 0;
	Buffer->Size = 0;
}
     16c:	cf 93       	push	r28
     16e:	df 93       	push	r29
     170:	ec 01       	movw	r28, r24
     172:	8c e0       	ldi	r24, 0x0C	; 12
     174:	fe 01       	movw	r30, r28
     176:	11 92       	st	Z+, r1
     178:	8a 95       	dec	r24
     17a:	e9 f7       	brne	.-6      	; 0x176 <BUFFER_Init+0xa>
     17c:	79 83       	std	Y+1, r23	; 0x01
     17e:	68 83       	st	Y, r22
     180:	5f 83       	std	Y+7, r21	; 0x07
     182:	4e 83       	std	Y+6, r20	; 0x06
     184:	8a e0       	ldi	r24, 0x0A	; 10
     186:	89 87       	std	Y+9, r24	; 0x09
     188:	45 2b       	or	r20, r21
     18a:	71 f4       	brne	.+28     	; 0x1a8 <BUFFER_Init+0x3c>
     18c:	cb 01       	movw	r24, r22
     18e:	0e 94 d8 19 	call	0x33b0	; 0x33b0 <malloc>
     192:	9f 83       	std	Y+7, r25	; 0x07
     194:	8e 83       	std	Y+6, r24	; 0x06
     196:	89 2b       	or	r24, r25
     198:	21 f4       	brne	.+8      	; 0x1a2 <BUFFER_Init+0x36>
     19a:	19 82       	std	Y+1, r1	; 0x01
     19c:	18 82       	st	Y, r1
     19e:	81 e0       	ldi	r24, 0x01	; 1
     1a0:	07 c0       	rjmp	.+14     	; 0x1b0 <BUFFER_Init+0x44>
     1a2:	88 85       	ldd	r24, Y+8	; 0x08
     1a4:	82 60       	ori	r24, 0x02	; 2
     1a6:	88 87       	std	Y+8, r24	; 0x08
     1a8:	88 85       	ldd	r24, Y+8	; 0x08
     1aa:	81 60       	ori	r24, 0x01	; 1
     1ac:	88 87       	std	Y+8, r24	; 0x08
     1ae:	80 e0       	ldi	r24, 0x00	; 0
     1b0:	df 91       	pop	r29
     1b2:	cf 91       	pop	r28
     1b4:	08 95       	ret

000001b6 <BUFFER_Write>:

uint16_t BUFFER_Write(BUFFER_t* Buffer, uint8_t* Data, uint16_t count) {
     1b6:	1f 93       	push	r17
     1b8:	cf 93       	push	r28
     1ba:	df 93       	push	r29
     1bc:	fc 01       	movw	r30, r24
	uint8_t i = 0;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
     1be:	89 2b       	or	r24, r25
     1c0:	e1 f1       	breq	.+120    	; 0x23a <BUFFER_Write+0x84>
		return 0;
	}

	/* Check input pointer */
	if (Buffer->In >= Buffer->Size) {
     1c2:	22 81       	ldd	r18, Z+2	; 0x02
     1c4:	33 81       	ldd	r19, Z+3	; 0x03
     1c6:	80 81       	ld	r24, Z
     1c8:	91 81       	ldd	r25, Z+1	; 0x01
     1ca:	28 17       	cp	r18, r24
     1cc:	39 07       	cpc	r19, r25
     1ce:	10 f0       	brcs	.+4      	; 0x1d4 <BUFFER_Write+0x1e>
		Buffer->In = 0;
     1d0:	13 82       	std	Z+3, r1	; 0x03
     1d2:	12 82       	std	Z+2, r1	; 0x02
     1d4:	16 2f       	mov	r17, r22
     1d6:	46 0f       	add	r20, r22
     1d8:	57 1f       	adc	r21, r23
	/* Clear flags */
	Buffer->Flags = 0;
	Buffer->Size = 0;
}

uint16_t BUFFER_Write(BUFFER_t* Buffer, uint8_t* Data, uint16_t count) {
     1da:	a6 2f       	mov	r26, r22
     1dc:	b7 2f       	mov	r27, r23
     1de:	26 c0       	rjmp	.+76     	; 0x22c <BUFFER_Write+0x76>
	
	/* Go through all elements */
	while (count--) {
		/* Check if buffer full */
		if (
			(Buffer->In == (Buffer->Out - 1)) ||
     1e0:	22 81       	ldd	r18, Z+2	; 0x02
     1e2:	33 81       	ldd	r19, Z+3	; 0x03
     1e4:	64 81       	ldd	r22, Z+4	; 0x04
     1e6:	75 81       	ldd	r23, Z+5	; 0x05
     1e8:	eb 01       	movw	r28, r22
     1ea:	21 97       	sbiw	r28, 0x01	; 1
	}
	
	/* Go through all elements */
	while (count--) {
		/* Check if buffer full */
		if (
     1ec:	2c 17       	cp	r18, r28
     1ee:	3d 07       	cpc	r19, r29
     1f0:	11 f1       	breq	.+68     	; 0x236 <BUFFER_Write+0x80>
			(Buffer->In == (Buffer->Out - 1)) ||
     1f2:	67 2b       	or	r22, r23
     1f4:	39 f4       	brne	.+14     	; 0x204 <BUFFER_Write+0x4e>
			(Buffer->Out == 0 && Buffer->In == (Buffer->Size - 1))
     1f6:	60 81       	ld	r22, Z
     1f8:	71 81       	ldd	r23, Z+1	; 0x01
     1fa:	61 50       	subi	r22, 0x01	; 1
     1fc:	71 09       	sbc	r23, r1
     1fe:	26 17       	cp	r18, r22
     200:	37 07       	cpc	r19, r23
     202:	c9 f0       	breq	.+50     	; 0x236 <BUFFER_Write+0x80>
		) {
			break;
		}
		
		/* Add to buffer */
		Buffer->Buffer[Buffer->In++] = *Data++;
     204:	66 81       	ldd	r22, Z+6	; 0x06
     206:	77 81       	ldd	r23, Z+7	; 0x07
     208:	c9 01       	movw	r24, r18
     20a:	01 96       	adiw	r24, 0x01	; 1
     20c:	93 83       	std	Z+3, r25	; 0x03
     20e:	82 83       	std	Z+2, r24	; 0x02
     210:	8d 91       	ld	r24, X+
     212:	eb 01       	movw	r28, r22
     214:	c2 0f       	add	r28, r18
     216:	d3 1f       	adc	r29, r19
     218:	88 83       	st	Y, r24
		
		/* Increase pointers */
		i++;
		
		/* Check input overflow */
		if (Buffer->In >= Buffer->Size) {
     21a:	22 81       	ldd	r18, Z+2	; 0x02
     21c:	33 81       	ldd	r19, Z+3	; 0x03
     21e:	80 81       	ld	r24, Z
     220:	91 81       	ldd	r25, Z+1	; 0x01
     222:	28 17       	cp	r18, r24
     224:	39 07       	cpc	r19, r25
     226:	10 f0       	brcs	.+4      	; 0x22c <BUFFER_Write+0x76>
			Buffer->In = 0;
     228:	13 82       	std	Z+3, r1	; 0x03
     22a:	12 82       	std	Z+2, r1	; 0x02
     22c:	8a 2f       	mov	r24, r26
     22e:	81 1b       	sub	r24, r17
	if (Buffer->In >= Buffer->Size) {
		Buffer->In = 0;
	}
	
	/* Go through all elements */
	while (count--) {
     230:	a4 17       	cp	r26, r20
     232:	b5 07       	cpc	r27, r21
     234:	a9 f6       	brne	.-86     	; 0x1e0 <BUFFER_Write+0x2a>
			Buffer->In = 0;
		}
	}
	
	/* Return number of elements stored in memory */
	return i;
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	02 c0       	rjmp	.+4      	; 0x23e <BUFFER_Write+0x88>
uint16_t BUFFER_Write(BUFFER_t* Buffer, uint8_t* Data, uint16_t count) {
	uint8_t i = 0;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
		return 0;
     23a:	80 e0       	ldi	r24, 0x00	; 0
     23c:	90 e0       	ldi	r25, 0x00	; 0
		}
	}
	
	/* Return number of elements stored in memory */
	return i;
}
     23e:	df 91       	pop	r29
     240:	cf 91       	pop	r28
     242:	1f 91       	pop	r17
     244:	08 95       	ret

00000246 <BUFFER_Read>:

uint16_t BUFFER_Read(BUFFER_t* Buffer, uint8_t* Data, uint16_t count) {
     246:	cf 93       	push	r28
     248:	df 93       	push	r29
     24a:	fc 01       	movw	r30, r24
	uint16_t i = 0;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
     24c:	89 2b       	or	r24, r25
     24e:	89 f1       	breq	.+98     	; 0x2b2 <BUFFER_Read+0x6c>
		return 0;
	}

	/* Check output pointer */
	if (Buffer->Out >= Buffer->Size) {
     250:	24 81       	ldd	r18, Z+4	; 0x04
     252:	35 81       	ldd	r19, Z+5	; 0x05
     254:	80 81       	ld	r24, Z
     256:	91 81       	ldd	r25, Z+1	; 0x01
     258:	28 17       	cp	r18, r24
     25a:	39 07       	cpc	r19, r25
     25c:	10 f0       	brcs	.+4      	; 0x262 <BUFFER_Read+0x1c>
		Buffer->Out = 0;
     25e:	15 82       	std	Z+5, r1	; 0x05
     260:	14 82       	std	Z+4, r1	; 0x04
     262:	a6 2f       	mov	r26, r22
     264:	b7 2f       	mov	r27, r23
	
	/* Return number of elements stored in memory */
	return i;
}

uint16_t BUFFER_Read(BUFFER_t* Buffer, uint8_t* Data, uint16_t count) {
     266:	20 e0       	ldi	r18, 0x00	; 0
     268:	30 e0       	ldi	r19, 0x00	; 0
     26a:	1d c0       	rjmp	.+58     	; 0x2a6 <BUFFER_Read+0x60>
	}
	
	/* Go through all elements */
	while (count--) {
		/* Check if pointers are same = buffer is empty */
		if (Buffer->Out == Buffer->In) {
     26c:	84 81       	ldd	r24, Z+4	; 0x04
     26e:	95 81       	ldd	r25, Z+5	; 0x05
     270:	62 81       	ldd	r22, Z+2	; 0x02
     272:	73 81       	ldd	r23, Z+3	; 0x03
     274:	86 17       	cp	r24, r22
     276:	97 07       	cpc	r25, r23
     278:	f9 f0       	breq	.+62     	; 0x2b8 <BUFFER_Read+0x72>
			break;
		}
		
		/* Save to user buffer */
		*Data++ = Buffer->Buffer[Buffer->Out++];
     27a:	66 81       	ldd	r22, Z+6	; 0x06
     27c:	77 81       	ldd	r23, Z+7	; 0x07
     27e:	ec 01       	movw	r28, r24
     280:	21 96       	adiw	r28, 0x01	; 1
     282:	d5 83       	std	Z+5, r29	; 0x05
     284:	c4 83       	std	Z+4, r28	; 0x04
     286:	eb 01       	movw	r28, r22
     288:	c8 0f       	add	r28, r24
     28a:	d9 1f       	adc	r29, r25
     28c:	88 81       	ld	r24, Y
     28e:	8d 93       	st	X+, r24
		
		/* Increase pointers */
		i++;
     290:	2f 5f       	subi	r18, 0xFF	; 255
     292:	3f 4f       	sbci	r19, 0xFF	; 255

		/* Check output overflow */
		if (Buffer->Out >= Buffer->Size) {
     294:	64 81       	ldd	r22, Z+4	; 0x04
     296:	75 81       	ldd	r23, Z+5	; 0x05
     298:	80 81       	ld	r24, Z
     29a:	91 81       	ldd	r25, Z+1	; 0x01
     29c:	68 17       	cp	r22, r24
     29e:	79 07       	cpc	r23, r25
     2a0:	10 f0       	brcs	.+4      	; 0x2a6 <BUFFER_Read+0x60>
			Buffer->Out = 0;
     2a2:	15 82       	std	Z+5, r1	; 0x05
     2a4:	14 82       	std	Z+4, r1	; 0x04
	if (Buffer->Out >= Buffer->Size) {
		Buffer->Out = 0;
	}
	
	/* Go through all elements */
	while (count--) {
     2a6:	24 17       	cp	r18, r20
     2a8:	35 07       	cpc	r19, r21
     2aa:	01 f7       	brne	.-64     	; 0x26c <BUFFER_Read+0x26>
     2ac:	84 2f       	mov	r24, r20
     2ae:	95 2f       	mov	r25, r21
     2b0:	05 c0       	rjmp	.+10     	; 0x2bc <BUFFER_Read+0x76>
uint16_t BUFFER_Read(BUFFER_t* Buffer, uint8_t* Data, uint16_t count) {
	uint16_t i = 0;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
		return 0;
     2b2:	80 e0       	ldi	r24, 0x00	; 0
     2b4:	90 e0       	ldi	r25, 0x00	; 0
     2b6:	02 c0       	rjmp	.+4      	; 0x2bc <BUFFER_Read+0x76>
     2b8:	82 2f       	mov	r24, r18
     2ba:	93 2f       	mov	r25, r19
		}
	}
	
	/* Return number of elements read from buffer */
	return i;
}
     2bc:	df 91       	pop	r29
     2be:	cf 91       	pop	r28
     2c0:	08 95       	ret

000002c2 <BUFFER_GetFree>:

uint16_t BUFFER_GetFree(BUFFER_t* Buffer) {
     2c2:	0f 93       	push	r16
     2c4:	1f 93       	push	r17
     2c6:	fc 01       	movw	r30, r24
	uint32_t size = 0, in, out;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
     2c8:	89 2b       	or	r24, r25
     2ca:	99 f1       	breq	.+102    	; 0x332 <BUFFER_GetFree+0x70>
		return 0;
	}
	
	/* Save values */
	in = Buffer->In;
     2cc:	02 81       	ldd	r16, Z+2	; 0x02
     2ce:	13 81       	ldd	r17, Z+3	; 0x03
     2d0:	20 e0       	ldi	r18, 0x00	; 0
     2d2:	30 e0       	ldi	r19, 0x00	; 0
	out = Buffer->Out;
     2d4:	44 81       	ldd	r20, Z+4	; 0x04
     2d6:	55 81       	ldd	r21, Z+5	; 0x05
     2d8:	60 e0       	ldi	r22, 0x00	; 0
     2da:	70 e0       	ldi	r23, 0x00	; 0
	
	/* Check if the same */
	if (in == out) {
     2dc:	04 17       	cp	r16, r20
     2de:	15 07       	cpc	r17, r21
     2e0:	26 07       	cpc	r18, r22
     2e2:	37 07       	cpc	r19, r23
     2e4:	21 f4       	brne	.+8      	; 0x2ee <BUFFER_GetFree+0x2c>
		size = Buffer->Size;
     2e6:	40 81       	ld	r20, Z
     2e8:	51 81       	ldd	r21, Z+1	; 0x01
     2ea:	ca 01       	movw	r24, r20
     2ec:	20 c0       	rjmp	.+64     	; 0x32e <BUFFER_GetFree+0x6c>
	}

	/* Check normal mode */
	if (out > in) {
     2ee:	04 17       	cp	r16, r20
     2f0:	15 07       	cpc	r17, r21
     2f2:	26 07       	cpc	r18, r22
     2f4:	37 07       	cpc	r19, r23
     2f6:	38 f4       	brcc	.+14     	; 0x306 <BUFFER_GetFree+0x44>
		size = out - in;
     2f8:	db 01       	movw	r26, r22
     2fa:	ca 01       	movw	r24, r20
     2fc:	80 1b       	sub	r24, r16
     2fe:	91 0b       	sbc	r25, r17
     300:	a2 0b       	sbc	r26, r18
     302:	b3 0b       	sbc	r27, r19
     304:	03 c0       	rjmp	.+6      	; 0x30c <BUFFER_GetFree+0x4a>
	/* Return number of elements read from buffer */
	return i;
}

uint16_t BUFFER_GetFree(BUFFER_t* Buffer) {
	uint32_t size = 0, in, out;
     306:	80 e0       	ldi	r24, 0x00	; 0
     308:	90 e0       	ldi	r25, 0x00	; 0
     30a:	dc 01       	movw	r26, r24
	if (out > in) {
		size = out - in;
	}
	
	/* Check if overflow mode */
	if (in > out) {
     30c:	40 17       	cp	r20, r16
     30e:	51 07       	cpc	r21, r17
     310:	62 07       	cpc	r22, r18
     312:	73 07       	cpc	r23, r19
     314:	60 f4       	brcc	.+24     	; 0x32e <BUFFER_GetFree+0x6c>
		size = Buffer->Size - (in - out);
     316:	80 81       	ld	r24, Z
     318:	91 81       	ldd	r25, Z+1	; 0x01
     31a:	48 0f       	add	r20, r24
     31c:	59 1f       	adc	r21, r25
     31e:	61 1d       	adc	r22, r1
     320:	71 1d       	adc	r23, r1
     322:	db 01       	movw	r26, r22
     324:	ca 01       	movw	r24, r20
     326:	80 1b       	sub	r24, r16
     328:	91 0b       	sbc	r25, r17
     32a:	a2 0b       	sbc	r26, r18
     32c:	b3 0b       	sbc	r27, r19
	}
	
	/* Return free memory */
	return size - 1;
     32e:	01 97       	sbiw	r24, 0x01	; 1
     330:	02 c0       	rjmp	.+4      	; 0x336 <BUFFER_GetFree+0x74>
uint16_t BUFFER_GetFree(BUFFER_t* Buffer) {
	uint32_t size = 0, in, out;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
		return 0;
     332:	80 e0       	ldi	r24, 0x00	; 0
     334:	90 e0       	ldi	r25, 0x00	; 0
		size = Buffer->Size - (in - out);
	}
	
	/* Return free memory */
	return size - 1;
}
     336:	1f 91       	pop	r17
     338:	0f 91       	pop	r16
     33a:	08 95       	ret

0000033c <BUFFER_GetFull>:

uint16_t BUFFER_GetFull(BUFFER_t* Buffer) {
     33c:	0f 93       	push	r16
     33e:	1f 93       	push	r17
     340:	fc 01       	movw	r30, r24
	uint32_t in, out, size;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
     342:	89 2b       	or	r24, r25
     344:	49 f1       	breq	.+82     	; 0x398 <BUFFER_GetFull+0x5c>
		return 0;
	}
	
	/* Save values */
	in = Buffer->In;
     346:	42 81       	ldd	r20, Z+2	; 0x02
     348:	53 81       	ldd	r21, Z+3	; 0x03
     34a:	60 e0       	ldi	r22, 0x00	; 0
     34c:	70 e0       	ldi	r23, 0x00	; 0
	out = Buffer->Out;
     34e:	04 81       	ldd	r16, Z+4	; 0x04
     350:	15 81       	ldd	r17, Z+5	; 0x05
     352:	20 e0       	ldi	r18, 0x00	; 0
     354:	30 e0       	ldi	r19, 0x00	; 0
		size = 0;
	}
	
	/* Check pointers and return values */
	/* Buffer is not in overflow mode */
	if (in > out) {
     356:	04 17       	cp	r16, r20
     358:	15 07       	cpc	r17, r21
     35a:	26 07       	cpc	r18, r22
     35c:	37 07       	cpc	r19, r23
     35e:	38 f4       	brcc	.+14     	; 0x36e <BUFFER_GetFull+0x32>
		size = in - out;
     360:	db 01       	movw	r26, r22
     362:	ca 01       	movw	r24, r20
     364:	80 1b       	sub	r24, r16
     366:	91 0b       	sbc	r25, r17
     368:	a2 0b       	sbc	r26, r18
     36a:	b3 0b       	sbc	r27, r19
     36c:	03 c0       	rjmp	.+6      	; 0x374 <BUFFER_GetFull+0x38>
     36e:	80 e0       	ldi	r24, 0x00	; 0
     370:	90 e0       	ldi	r25, 0x00	; 0
     372:	dc 01       	movw	r26, r24
	}
	
	/* Buffer is in overflow mode */
	if (out > in) {
     374:	40 17       	cp	r20, r16
     376:	51 07       	cpc	r21, r17
     378:	62 07       	cpc	r22, r18
     37a:	73 07       	cpc	r23, r19
     37c:	78 f4       	brcc	.+30     	; 0x39c <BUFFER_GetFull+0x60>
		size = Buffer->Size - (out - in);
     37e:	80 81       	ld	r24, Z
     380:	91 81       	ldd	r25, Z+1	; 0x01
     382:	48 0f       	add	r20, r24
     384:	59 1f       	adc	r21, r25
     386:	61 1d       	adc	r22, r1
     388:	71 1d       	adc	r23, r1
     38a:	db 01       	movw	r26, r22
     38c:	ca 01       	movw	r24, r20
     38e:	80 1b       	sub	r24, r16
     390:	91 0b       	sbc	r25, r17
     392:	a2 0b       	sbc	r26, r18
     394:	b3 0b       	sbc	r27, r19
	}
	
	/* Return number of elements in buffer */
	return size;
     396:	02 c0       	rjmp	.+4      	; 0x39c <BUFFER_GetFull+0x60>
uint16_t BUFFER_GetFull(BUFFER_t* Buffer) {
	uint32_t in, out, size;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
		return 0;
     398:	80 e0       	ldi	r24, 0x00	; 0
     39a:	90 e0       	ldi	r25, 0x00	; 0
		size = Buffer->Size - (out - in);
	}
	
	/* Return number of elements in buffer */
	return size;
}
     39c:	1f 91       	pop	r17
     39e:	0f 91       	pop	r16
     3a0:	08 95       	ret

000003a2 <BUFFER_Reset>:

void BUFFER_Reset(BUFFER_t* Buffer) {
	/* Check buffer structure */
	if (Buffer == NULL) {
     3a2:	00 97       	sbiw	r24, 0x00	; 0
     3a4:	29 f0       	breq	.+10     	; 0x3b0 <BUFFER_Reset+0xe>
		return;
	}
	
	/* Reset values */
	Buffer->In = 0;
     3a6:	fc 01       	movw	r30, r24
     3a8:	13 82       	std	Z+3, r1	; 0x03
     3aa:	12 82       	std	Z+2, r1	; 0x02
	Buffer->Out = 0;
     3ac:	15 82       	std	Z+5, r1	; 0x05
     3ae:	14 82       	std	Z+4, r1	; 0x04
     3b0:	08 95       	ret

000003b2 <BUFFER_FindElement>:
}

int16_t BUFFER_FindElement(BUFFER_t* Buffer, uint8_t Element) {
     3b2:	ef 92       	push	r14
     3b4:	ff 92       	push	r15
     3b6:	0f 93       	push	r16
     3b8:	1f 93       	push	r17
     3ba:	cf 93       	push	r28
	uint16_t Num, Out, retval = 0;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
     3bc:	00 97       	sbiw	r24, 0x00	; 0
     3be:	49 f1       	breq	.+82     	; 0x412 <BUFFER_FindElement+0x60>
     3c0:	c6 2f       	mov	r28, r22
     3c2:	7c 01       	movw	r14, r24
		return -1;
	}
	
	/* Create temporary variables */
	Num = BUFFER_GetFull(Buffer);
     3c4:	bb df       	rcall	.-138    	; 0x33c <BUFFER_GetFull>
     3c6:	bc 01       	movw	r22, r24
	Out = Buffer->Out;
     3c8:	f7 01       	movw	r30, r14
     3ca:	24 81       	ldd	r18, Z+4	; 0x04
     3cc:	35 81       	ldd	r19, Z+5	; 0x05
	
	/* Go through input elements */
	while (Num > 0) {
     3ce:	89 2b       	or	r24, r25
     3d0:	19 f1       	breq	.+70     	; 0x418 <BUFFER_FindElement+0x66>
		/* Check output overflow */
		if (Out >= Buffer->Size) {
     3d2:	00 81       	ld	r16, Z
     3d4:	11 81       	ldd	r17, Z+1	; 0x01
			Out = 0;
		}
		
		/* Check for element */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Element) {
     3d6:	a6 81       	ldd	r26, Z+6	; 0x06
     3d8:	b7 81       	ldd	r27, Z+7	; 0x07
     3da:	40 e0       	ldi	r20, 0x00	; 0
     3dc:	50 e0       	ldi	r21, 0x00	; 0
	
	/* Go through input elements */
	while (Num > 0) {
		/* Check output overflow */
		if (Out >= Buffer->Size) {
			Out = 0;
     3de:	f1 2c       	mov	r15, r1
     3e0:	80 e0       	ldi	r24, 0x00	; 0
	Out = Buffer->Out;
	
	/* Go through input elements */
	while (Num > 0) {
		/* Check output overflow */
		if (Out >= Buffer->Size) {
     3e2:	20 17       	cp	r18, r16
     3e4:	31 07       	cpc	r19, r17
     3e6:	10 f0       	brcs	.+4      	; 0x3ec <BUFFER_FindElement+0x3a>
			Out = 0;
     3e8:	2f 2d       	mov	r18, r15
     3ea:	38 2f       	mov	r19, r24
		}
		
		/* Check for element */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Element) {
     3ec:	fd 01       	movw	r30, r26
     3ee:	e2 0f       	add	r30, r18
     3f0:	f3 1f       	adc	r31, r19
     3f2:	90 81       	ld	r25, Z
     3f4:	9c 13       	cpse	r25, r28
     3f6:	03 c0       	rjmp	.+6      	; 0x3fe <BUFFER_FindElement+0x4c>
			/* Element found, return position in buffer */
			return retval;
     3f8:	84 2f       	mov	r24, r20
     3fa:	95 2f       	mov	r25, r21
     3fc:	0f c0       	rjmp	.+30     	; 0x41c <BUFFER_FindElement+0x6a>
		}
		
		/* Set new variables */
		Out++;
     3fe:	2f 5f       	subi	r18, 0xFF	; 255
     400:	3f 4f       	sbci	r19, 0xFF	; 255
		Num--;
		retval++;
     402:	4f 5f       	subi	r20, 0xFF	; 255
     404:	5f 4f       	sbci	r21, 0xFF	; 255
	/* Create temporary variables */
	Num = BUFFER_GetFull(Buffer);
	Out = Buffer->Out;
	
	/* Go through input elements */
	while (Num > 0) {
     406:	64 17       	cp	r22, r20
     408:	75 07       	cpc	r23, r21
     40a:	59 f7       	brne	.-42     	; 0x3e2 <BUFFER_FindElement+0x30>
		Num--;
		retval++;
	}
	
	/* Element is not in buffer */
	return -1;
     40c:	8f ef       	ldi	r24, 0xFF	; 255
     40e:	9f ef       	ldi	r25, 0xFF	; 255
     410:	05 c0       	rjmp	.+10     	; 0x41c <BUFFER_FindElement+0x6a>
int16_t BUFFER_FindElement(BUFFER_t* Buffer, uint8_t Element) {
	uint16_t Num, Out, retval = 0;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
		return -1;
     412:	8f ef       	ldi	r24, 0xFF	; 255
     414:	9f ef       	ldi	r25, 0xFF	; 255
     416:	02 c0       	rjmp	.+4      	; 0x41c <BUFFER_FindElement+0x6a>
		Num--;
		retval++;
	}
	
	/* Element is not in buffer */
	return -1;
     418:	8f ef       	ldi	r24, 0xFF	; 255
     41a:	9f ef       	ldi	r25, 0xFF	; 255
}
     41c:	cf 91       	pop	r28
     41e:	1f 91       	pop	r17
     420:	0f 91       	pop	r16
     422:	ff 90       	pop	r15
     424:	ef 90       	pop	r14
     426:	08 95       	ret

00000428 <BUFFER_Find>:

int16_t BUFFER_Find(BUFFER_t* Buffer, uint8_t* Data, uint16_t Size) {
     428:	2f 92       	push	r2
     42a:	3f 92       	push	r3
     42c:	4f 92       	push	r4
     42e:	5f 92       	push	r5
     430:	6f 92       	push	r6
     432:	7f 92       	push	r7
     434:	8f 92       	push	r8
     436:	9f 92       	push	r9
     438:	af 92       	push	r10
     43a:	bf 92       	push	r11
     43c:	cf 92       	push	r12
     43e:	df 92       	push	r13
     440:	ef 92       	push	r14
     442:	ff 92       	push	r15
     444:	0f 93       	push	r16
     446:	1f 93       	push	r17
     448:	cf 93       	push	r28
     44a:	df 93       	push	r29
	uint16_t Num, Out, i, retval = 0;
	uint8_t found = 0;

	/* Check buffer structure and number of elements in buffer */
	if (Buffer == NULL || (Num = BUFFER_GetFull(Buffer)) < Size) {
     44c:	00 97       	sbiw	r24, 0x00	; 0
     44e:	09 f4       	brne	.+2      	; 0x452 <BUFFER_Find+0x2a>
     450:	60 c0       	rjmp	.+192    	; 0x512 <BUFFER_Find+0xea>
     452:	8a 01       	movw	r16, r20
     454:	b7 2e       	mov	r11, r23
     456:	a6 2e       	mov	r10, r22
     458:	ec 01       	movw	r28, r24
     45a:	70 df       	rcall	.-288    	; 0x33c <BUFFER_GetFull>
     45c:	fc 01       	movw	r30, r24
     45e:	80 17       	cp	r24, r16
     460:	91 07       	cpc	r25, r17
     462:	08 f4       	brcc	.+2      	; 0x466 <BUFFER_Find+0x3e>
     464:	59 c0       	rjmp	.+178    	; 0x518 <BUFFER_Find+0xf0>
		return -1;
	}

	/* Create temporary variables */
	Out = Buffer->Out;
     466:	2c 81       	ldd	r18, Y+4	; 0x04
     468:	3d 81       	ldd	r19, Y+5	; 0x05

	/* Go through input elements in buffer */
	while (Num > 0) {
     46a:	89 2b       	or	r24, r25
     46c:	09 f4       	brne	.+2      	; 0x470 <BUFFER_Find+0x48>
     46e:	57 c0       	rjmp	.+174    	; 0x51e <BUFFER_Find+0xf6>
		/* Check output overflow */
		if (Out >= Buffer->Size) {
     470:	e8 80       	ld	r14, Y
     472:	f9 80       	ldd	r15, Y+1	; 0x01
			Out = 0;
		}

		/* Check if current element in buffer matches first element in data array */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {
     474:	4e 81       	ldd	r20, Y+6	; 0x06
     476:	5f 81       	ldd	r21, Y+7	; 0x07
     478:	ca 2c       	mov	r12, r10
     47a:	db 2c       	mov	r13, r11
     47c:	d6 01       	movw	r26, r12
     47e:	9d 90       	ld	r9, X+
     480:	6d 01       	movw	r12, r26
     482:	81 2c       	mov	r8, r1
     484:	80 e0       	ldi	r24, 0x00	; 0
     486:	90 e0       	ldi	r25, 0x00	; 0

	/* Go through input elements in buffer */
	while (Num > 0) {
		/* Check output overflow */
		if (Out >= Buffer->Size) {
			Out = 0;
     488:	71 2c       	mov	r7, r1
     48a:	51 2c       	mov	r5, r1
		}

		/* Check if current element in buffer matches first element in data array */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {
			found = 1;
     48c:	33 24       	eor	r3, r3
     48e:	33 94       	inc	r3
		/* We have found first element */
		if (found) {
			/* First character found */
			/* Check others */
			i = 1;
			while (i < Size) {
     490:	66 24       	eor	r6, r6
     492:	63 94       	inc	r6
     494:	41 2c       	mov	r4, r1
				/* Check output overflow */
				if (Out >= Buffer->Size) {
					Out = 0;
     496:	a7 2c       	mov	r10, r7
     498:	b5 2c       	mov	r11, r5
	Out = Buffer->Out;

	/* Go through input elements in buffer */
	while (Num > 0) {
		/* Check output overflow */
		if (Out >= Buffer->Size) {
     49a:	2e 15       	cp	r18, r14
     49c:	3f 05       	cpc	r19, r15
     49e:	10 f0       	brcs	.+4      	; 0x4a4 <BUFFER_Find+0x7c>
			Out = 0;
     4a0:	27 2d       	mov	r18, r7
     4a2:	35 2d       	mov	r19, r5
		}

		/* Check if current element in buffer matches first element in data array */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {
     4a4:	da 01       	movw	r26, r20
     4a6:	a2 0f       	add	r26, r18
     4a8:	b3 1f       	adc	r27, r19
     4aa:	6c 91       	ld	r22, X
     4ac:	69 15       	cp	r22, r9
     4ae:	d1 f1       	breq	.+116    	; 0x524 <BUFFER_Find+0xfc>
			found = 1;
		}

		/* Set new variables */
		Out++;
     4b0:	2f 5f       	subi	r18, 0xFF	; 255
     4b2:	3f 4f       	sbci	r19, 0xFF	; 255
		Num--;
     4b4:	31 97       	sbiw	r30, 0x01	; 1
		retval++;
     4b6:	01 96       	adiw	r24, 0x01	; 1

		/* We have found first element */
		if (found) {
     4b8:	88 20       	and	r8, r8
     4ba:	31 f1       	breq	.+76     	; 0x508 <BUFFER_Find+0xe0>
			/* First character found */
			/* Check others */
			i = 1;
			while (i < Size) {
     4bc:	02 30       	cpi	r16, 0x02	; 2
     4be:	11 05       	cpc	r17, r1
     4c0:	e0 f0       	brcs	.+56     	; 0x4fa <BUFFER_Find+0xd2>
     4c2:	d6 01       	movw	r26, r12
     4c4:	66 2d       	mov	r22, r6
     4c6:	74 2d       	mov	r23, r4
				/* Check output overflow */
				if (Out >= Buffer->Size) {
     4c8:	2e 15       	cp	r18, r14
     4ca:	3f 05       	cpc	r19, r15
     4cc:	10 f0       	brcs	.+4      	; 0x4d2 <BUFFER_Find+0xaa>
					Out = 0;
     4ce:	2a 2d       	mov	r18, r10
     4d0:	3b 2d       	mov	r19, r11
				}

				/* Check if current character in buffer matches character in string */
				if ((uint8_t)Buffer->Buffer[Out] != (uint8_t)Data[i]) {
     4d2:	2d 90       	ld	r2, X+
     4d4:	ea 01       	movw	r28, r20
     4d6:	c2 0f       	add	r28, r18
     4d8:	d3 1f       	adc	r29, r19
     4da:	c8 81       	ld	r28, Y
     4dc:	c2 15       	cp	r28, r2
     4de:	21 f0       	breq	.+8      	; 0x4e8 <BUFFER_Find+0xc0>
     4e0:	01 97       	sbiw	r24, 0x01	; 1
					retval += i - 1;
     4e2:	86 0f       	add	r24, r22
     4e4:	97 1f       	adc	r25, r23
					break;
     4e6:	0b c0       	rjmp	.+22     	; 0x4fe <BUFFER_Find+0xd6>
				}

				/* Set new variables */
				Out++;
     4e8:	2f 5f       	subi	r18, 0xFF	; 255
     4ea:	3f 4f       	sbci	r19, 0xFF	; 255
				Num--;
     4ec:	31 97       	sbiw	r30, 0x01	; 1
				i++;
     4ee:	6f 5f       	subi	r22, 0xFF	; 255
     4f0:	7f 4f       	sbci	r23, 0xFF	; 255
		/* We have found first element */
		if (found) {
			/* First character found */
			/* Check others */
			i = 1;
			while (i < Size) {
     4f2:	60 17       	cp	r22, r16
     4f4:	71 07       	cpc	r23, r17
     4f6:	41 f7       	brne	.-48     	; 0x4c8 <BUFFER_Find+0xa0>
     4f8:	05 c0       	rjmp	.+10     	; 0x504 <BUFFER_Find+0xdc>
     4fa:	66 2d       	mov	r22, r6
     4fc:	74 2d       	mov	r23, r4
				Num--;
				i++;
			}

			/* We have found data sequence in buffer */
			if (i == Size) {
     4fe:	60 17       	cp	r22, r16
     500:	71 07       	cpc	r23, r17
     502:	11 f4       	brne	.+4      	; 0x508 <BUFFER_Find+0xe0>
				return retval - 1;
     504:	01 97       	sbiw	r24, 0x01	; 1
     506:	14 c0       	rjmp	.+40     	; 0x530 <BUFFER_Find+0x108>

	/* Create temporary variables */
	Out = Buffer->Out;

	/* Go through input elements in buffer */
	while (Num > 0) {
     508:	30 97       	sbiw	r30, 0x00	; 0
     50a:	39 f6       	brne	.-114    	; 0x49a <BUFFER_Find+0x72>
			}
		}
	}

	/* Data sequence is not in buffer */
	return -1;
     50c:	8f ef       	ldi	r24, 0xFF	; 255
     50e:	9f ef       	ldi	r25, 0xFF	; 255
     510:	0f c0       	rjmp	.+30     	; 0x530 <BUFFER_Find+0x108>
	uint16_t Num, Out, i, retval = 0;
	uint8_t found = 0;

	/* Check buffer structure and number of elements in buffer */
	if (Buffer == NULL || (Num = BUFFER_GetFull(Buffer)) < Size) {
		return -1;
     512:	8f ef       	ldi	r24, 0xFF	; 255
     514:	9f ef       	ldi	r25, 0xFF	; 255
     516:	0c c0       	rjmp	.+24     	; 0x530 <BUFFER_Find+0x108>
     518:	8f ef       	ldi	r24, 0xFF	; 255
     51a:	9f ef       	ldi	r25, 0xFF	; 255
     51c:	09 c0       	rjmp	.+18     	; 0x530 <BUFFER_Find+0x108>
			}
		}
	}

	/* Data sequence is not in buffer */
	return -1;
     51e:	8f ef       	ldi	r24, 0xFF	; 255
     520:	9f ef       	ldi	r25, 0xFF	; 255
     522:	06 c0       	rjmp	.+12     	; 0x530 <BUFFER_Find+0x108>
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {
			found = 1;
		}

		/* Set new variables */
		Out++;
     524:	2f 5f       	subi	r18, 0xFF	; 255
     526:	3f 4f       	sbci	r19, 0xFF	; 255
		Num--;
     528:	31 97       	sbiw	r30, 0x01	; 1
		retval++;
     52a:	01 96       	adiw	r24, 0x01	; 1
			Out = 0;
		}

		/* Check if current element in buffer matches first element in data array */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {
			found = 1;
     52c:	83 2c       	mov	r8, r3
     52e:	c6 cf       	rjmp	.-116    	; 0x4bc <BUFFER_Find+0x94>
		}
	}

	/* Data sequence is not in buffer */
	return -1;
}
     530:	df 91       	pop	r29
     532:	cf 91       	pop	r28
     534:	1f 91       	pop	r17
     536:	0f 91       	pop	r16
     538:	ff 90       	pop	r15
     53a:	ef 90       	pop	r14
     53c:	df 90       	pop	r13
     53e:	cf 90       	pop	r12
     540:	bf 90       	pop	r11
     542:	af 90       	pop	r10
     544:	9f 90       	pop	r9
     546:	8f 90       	pop	r8
     548:	7f 90       	pop	r7
     54a:	6f 90       	pop	r6
     54c:	5f 90       	pop	r5
     54e:	4f 90       	pop	r4
     550:	3f 90       	pop	r3
     552:	2f 90       	pop	r2
     554:	08 95       	ret

00000556 <BUFFER_WriteString>:

uint16_t BUFFER_WriteString(BUFFER_t* Buffer, char* buff) {
	/* Write string to buffer */
	return BUFFER_Write(Buffer, (uint8_t *)buff, strlen(buff));
     556:	fb 01       	movw	r30, r22
     558:	01 90       	ld	r0, Z+
     55a:	00 20       	and	r0, r0
     55c:	e9 f7       	brne	.-6      	; 0x558 <BUFFER_WriteString+0x2>
     55e:	31 97       	sbiw	r30, 0x01	; 1
     560:	af 01       	movw	r20, r30
     562:	46 1b       	sub	r20, r22
     564:	57 0b       	sbc	r21, r23
     566:	27 ce       	rjmp	.-946    	; 0x1b6 <BUFFER_Write>
}
     568:	08 95       	ret

0000056a <BUFFER_ReadString>:

uint16_t BUFFER_ReadString(BUFFER_t* Buffer, char* buff, uint16_t buffsize) {
     56a:	8f 92       	push	r8
     56c:	9f 92       	push	r9
     56e:	af 92       	push	r10
     570:	bf 92       	push	r11
     572:	cf 92       	push	r12
     574:	df 92       	push	r13
     576:	ef 92       	push	r14
     578:	ff 92       	push	r15
     57a:	0f 93       	push	r16
     57c:	1f 93       	push	r17
     57e:	cf 93       	push	r28
     580:	df 93       	push	r29
     582:	1f 92       	push	r1
     584:	cd b7       	in	r28, 0x3d	; 61
     586:	de b7       	in	r29, 0x3e	; 62
	uint16_t i = 0;
	uint8_t ch;
	uint16_t freeMem;
	
	/* Check value buffer */
	if (Buffer == NULL) {
     588:	00 97       	sbiw	r24, 0x00	; 0
     58a:	09 f4       	brne	.+2      	; 0x58e <BUFFER_ReadString+0x24>
     58c:	43 c0       	rjmp	.+134    	; 0x614 <BUFFER_ReadString+0xaa>
     58e:	4a 01       	movw	r8, r20
     590:	5b 01       	movw	r10, r22
     592:	7c 01       	movw	r14, r24
		return 0;
	}
	
	/* Get free */
	freeMem = BUFFER_GetFree(Buffer);
     594:	96 de       	rcall	.-724    	; 0x2c2 <BUFFER_GetFree>
	
	/* Check for any data on USART */
	if (
     596:	89 2b       	or	r24, r25
     598:	09 f4       	brne	.+2      	; 0x59c <BUFFER_ReadString+0x32>
     59a:	3f c0       	rjmp	.+126    	; 0x61a <BUFFER_ReadString+0xb0>
		freeMem == 0 ||                                                /*!< Buffer empty */
		(
			BUFFER_FindElement(Buffer, Buffer->StringDelimiter) < 0 && /*!< String delimiter is not in buffer */
     59c:	f7 01       	movw	r30, r14
     59e:	61 85       	ldd	r22, Z+9	; 0x09
     5a0:	c7 01       	movw	r24, r14
     5a2:	07 df       	rcall	.-498    	; 0x3b2 <BUFFER_FindElement>
	/* Get free */
	freeMem = BUFFER_GetFree(Buffer);
	
	/* Check for any data on USART */
	if (
		freeMem == 0 ||                                                /*!< Buffer empty */
     5a4:	99 23       	and	r25, r25
     5a6:	2c f4       	brge	.+10     	; 0x5b2 <BUFFER_ReadString+0x48>
		(
			BUFFER_FindElement(Buffer, Buffer->StringDelimiter) < 0 && /*!< String delimiter is not in buffer */
			freeMem != 0 &&                                            /*!< Buffer is not full */
			BUFFER_GetFull(Buffer) < buffsize                          /*!< User buffer size is larger than number of elements in buffer */
     5a8:	c7 01       	movw	r24, r14
     5aa:	c8 de       	rcall	.-624    	; 0x33c <BUFFER_GetFull>
	/* Check for any data on USART */
	if (
		freeMem == 0 ||                                                /*!< Buffer empty */
		(
			BUFFER_FindElement(Buffer, Buffer->StringDelimiter) < 0 && /*!< String delimiter is not in buffer */
			freeMem != 0 &&                                            /*!< Buffer is not full */
     5ac:	88 15       	cp	r24, r8
     5ae:	99 05       	cpc	r25, r9
     5b0:	b8 f1       	brcs	.+110    	; 0x620 <BUFFER_ReadString+0xb6>
		/* Return 0 */
		return 0;
	}
	
	/* If available buffer size is more than 0 characters */
	while (i < (buffsize - 1)) {
     5b2:	f1 e0       	ldi	r31, 0x01	; 1
     5b4:	8f 1a       	sub	r8, r31
     5b6:	91 08       	sbc	r9, r1
     5b8:	d9 f0       	breq	.+54     	; 0x5f0 <BUFFER_ReadString+0x86>
     5ba:	65 01       	movw	r12, r10
     5bc:	00 e0       	ldi	r16, 0x00	; 0
     5be:	10 e0       	ldi	r17, 0x00	; 0
		/* We have available data */
		BUFFER_Read(Buffer, &ch, 1);
     5c0:	41 e0       	ldi	r20, 0x01	; 1
     5c2:	50 e0       	ldi	r21, 0x00	; 0
     5c4:	be 01       	movw	r22, r28
     5c6:	6f 5f       	subi	r22, 0xFF	; 255
     5c8:	7f 4f       	sbci	r23, 0xFF	; 255
     5ca:	c7 01       	movw	r24, r14
     5cc:	3c de       	rcall	.-904    	; 0x246 <BUFFER_Read>
		
		/* Save character */
		buff[i] = (char)ch;
     5ce:	89 81       	ldd	r24, Y+1	; 0x01
     5d0:	f6 01       	movw	r30, r12
     5d2:	81 93       	st	Z+, r24
     5d4:	6f 01       	movw	r12, r30
		
		/* Check for end of string */
		if ((char)buff[i] == (char)Buffer->StringDelimiter) {
     5d6:	f7 01       	movw	r30, r14
     5d8:	91 85       	ldd	r25, Z+9	; 0x09
     5da:	89 17       	cp	r24, r25
     5dc:	29 f0       	breq	.+10     	; 0x5e8 <BUFFER_ReadString+0x7e>
			/* Done */
			break;
		}
		
		/* Increase */
		i++;
     5de:	0f 5f       	subi	r16, 0xFF	; 255
     5e0:	1f 4f       	sbci	r17, 0xFF	; 255
		/* Return 0 */
		return 0;
	}
	
	/* If available buffer size is more than 0 characters */
	while (i < (buffsize - 1)) {
     5e2:	08 15       	cp	r16, r8
     5e4:	19 05       	cpc	r17, r9
     5e6:	60 f3       	brcs	.-40     	; 0x5c0 <BUFFER_ReadString+0x56>
		/* Increase */
		i++;
	}
	
	/* Add zero to the end of string */
	if (i == (buffsize - 1)) {
     5e8:	80 16       	cp	r8, r16
     5ea:	91 06       	cpc	r9, r17
     5ec:	51 f4       	brne	.+20     	; 0x602 <BUFFER_ReadString+0x98>
     5ee:	02 c0       	rjmp	.+4      	; 0x5f4 <BUFFER_ReadString+0x8a>
		/* Return 0 */
		return 0;
	}
	
	/* If available buffer size is more than 0 characters */
	while (i < (buffsize - 1)) {
     5f0:	00 e0       	ldi	r16, 0x00	; 0
     5f2:	10 e0       	ldi	r17, 0x00	; 0
		i++;
	}
	
	/* Add zero to the end of string */
	if (i == (buffsize - 1)) {
		buff[i] = 0;
     5f4:	f5 01       	movw	r30, r10
     5f6:	e0 0f       	add	r30, r16
     5f8:	f1 1f       	adc	r31, r17
     5fa:	10 82       	st	Z, r1
     5fc:	80 2f       	mov	r24, r16
     5fe:	91 2f       	mov	r25, r17
     600:	11 c0       	rjmp	.+34     	; 0x624 <BUFFER_ReadString+0xba>
	} else {
		buff[++i] = 0;
     602:	0f 5f       	subi	r16, 0xFF	; 255
     604:	1f 4f       	sbci	r17, 0xFF	; 255
     606:	f5 01       	movw	r30, r10
     608:	e0 0f       	add	r30, r16
     60a:	f1 1f       	adc	r31, r17
     60c:	10 82       	st	Z, r1
     60e:	80 2f       	mov	r24, r16
     610:	91 2f       	mov	r25, r17
     612:	08 c0       	rjmp	.+16     	; 0x624 <BUFFER_ReadString+0xba>
	uint8_t ch;
	uint16_t freeMem;
	
	/* Check value buffer */
	if (Buffer == NULL) {
		return 0;
     614:	80 e0       	ldi	r24, 0x00	; 0
     616:	90 e0       	ldi	r25, 0x00	; 0
     618:	05 c0       	rjmp	.+10     	; 0x624 <BUFFER_ReadString+0xba>
			freeMem != 0 &&                                            /*!< Buffer is not full */
			BUFFER_GetFull(Buffer) < buffsize                          /*!< User buffer size is larger than number of elements in buffer */
		)
	) {
		/* Return 0 */
		return 0;
     61a:	80 e0       	ldi	r24, 0x00	; 0
     61c:	90 e0       	ldi	r25, 0x00	; 0
     61e:	02 c0       	rjmp	.+4      	; 0x624 <BUFFER_ReadString+0xba>
     620:	80 e0       	ldi	r24, 0x00	; 0
     622:	90 e0       	ldi	r25, 0x00	; 0
		buff[++i] = 0;
	}

	/* Return number of characters in buffer */
	return i;
}
     624:	0f 90       	pop	r0
     626:	df 91       	pop	r29
     628:	cf 91       	pop	r28
     62a:	1f 91       	pop	r17
     62c:	0f 91       	pop	r16
     62e:	ff 90       	pop	r15
     630:	ef 90       	pop	r14
     632:	df 90       	pop	r13
     634:	cf 90       	pop	r12
     636:	bf 90       	pop	r11
     638:	af 90       	pop	r10
     63a:	9f 90       	pop	r9
     63c:	8f 90       	pop	r8
     63e:	08 95       	ret

00000640 <ParseNumber>:
	/* Send command */
	SendCommand(ESP8266, ESP8266_COMMAND_CWSAP, tmp, "AT+CWSAP");
	
	/* Return status */
	return ESP8266_Update(ESP8266);
}
     640:	cf 92       	push	r12
     642:	df 92       	push	r13
     644:	ef 92       	push	r14
     646:	ff 92       	push	r15
     648:	0f 93       	push	r16
     64a:	1f 93       	push	r17
     64c:	fc 01       	movw	r30, r24
     64e:	db 01       	movw	r26, r22
     650:	80 81       	ld	r24, Z
     652:	8d 32       	cpi	r24, 0x2D	; 45
     654:	19 f4       	brne	.+6      	; 0x65c <ParseNumber+0x1c>
     656:	31 96       	adiw	r30, 0x01	; 1
     658:	91 e0       	ldi	r25, 0x01	; 1
     65a:	01 c0       	rjmp	.+2      	; 0x65e <ParseNumber+0x1e>
     65c:	90 e0       	ldi	r25, 0x00	; 0
     65e:	00 81       	ld	r16, Z
     660:	80 ed       	ldi	r24, 0xD0	; 208
     662:	80 0f       	add	r24, r16
     664:	8a 30       	cpi	r24, 0x0A	; 10
     666:	48 f5       	brcc	.+82     	; 0x6ba <ParseNumber+0x7a>
     668:	31 96       	adiw	r30, 0x01	; 1
     66a:	89 2f       	mov	r24, r25
     66c:	40 e0       	ldi	r20, 0x00	; 0
     66e:	50 e0       	ldi	r21, 0x00	; 0
     670:	ba 01       	movw	r22, r20
     672:	44 0f       	add	r20, r20
     674:	55 1f       	adc	r21, r21
     676:	66 1f       	adc	r22, r22
     678:	77 1f       	adc	r23, r23
     67a:	6a 01       	movw	r12, r20
     67c:	7b 01       	movw	r14, r22
     67e:	cc 0c       	add	r12, r12
     680:	dd 1c       	adc	r13, r13
     682:	ee 1c       	adc	r14, r14
     684:	ff 1c       	adc	r15, r15
     686:	cc 0c       	add	r12, r12
     688:	dd 1c       	adc	r13, r13
     68a:	ee 1c       	adc	r14, r14
     68c:	ff 1c       	adc	r15, r15
     68e:	4c 0d       	add	r20, r12
     690:	5d 1d       	adc	r21, r13
     692:	6e 1d       	adc	r22, r14
     694:	7f 1d       	adc	r23, r15
     696:	10 e0       	ldi	r17, 0x00	; 0
     698:	00 53       	subi	r16, 0x30	; 48
     69a:	11 09       	sbc	r17, r1
     69c:	01 2e       	mov	r0, r17
     69e:	00 0c       	add	r0, r0
     6a0:	22 0b       	sbc	r18, r18
     6a2:	33 0b       	sbc	r19, r19
     6a4:	40 0f       	add	r20, r16
     6a6:	51 1f       	adc	r21, r17
     6a8:	62 1f       	adc	r22, r18
     6aa:	73 1f       	adc	r23, r19
     6ac:	8f 5f       	subi	r24, 0xFF	; 255
     6ae:	01 91       	ld	r16, Z+
     6b0:	20 ed       	ldi	r18, 0xD0	; 208
     6b2:	20 0f       	add	r18, r16
     6b4:	2a 30       	cpi	r18, 0x0A	; 10
     6b6:	e8 f2       	brcs	.-70     	; 0x672 <ParseNumber+0x32>
     6b8:	04 c0       	rjmp	.+8      	; 0x6c2 <ParseNumber+0x82>
     6ba:	89 2f       	mov	r24, r25
     6bc:	40 e0       	ldi	r20, 0x00	; 0
     6be:	50 e0       	ldi	r21, 0x00	; 0
     6c0:	ba 01       	movw	r22, r20
     6c2:	10 97       	sbiw	r26, 0x00	; 0
     6c4:	09 f0       	breq	.+2      	; 0x6c8 <ParseNumber+0x88>
     6c6:	8c 93       	st	X, r24
     6c8:	99 23       	and	r25, r25
     6ca:	51 f0       	breq	.+20     	; 0x6e0 <ParseNumber+0xa0>
     6cc:	8a 01       	movw	r16, r20
     6ce:	9b 01       	movw	r18, r22
     6d0:	66 27       	eor	r22, r22
     6d2:	77 27       	eor	r23, r23
     6d4:	cb 01       	movw	r24, r22
     6d6:	60 1b       	sub	r22, r16
     6d8:	71 0b       	sbc	r23, r17
     6da:	82 0b       	sbc	r24, r18
     6dc:	93 0b       	sbc	r25, r19
     6de:	02 c0       	rjmp	.+4      	; 0x6e4 <ParseNumber+0xa4>
     6e0:	cb 01       	movw	r24, r22
     6e2:	ba 01       	movw	r22, r20
     6e4:	1f 91       	pop	r17
     6e6:	0f 91       	pop	r16
     6e8:	ff 90       	pop	r15
     6ea:	ef 90       	pop	r14
     6ec:	df 90       	pop	r13
     6ee:	cf 90       	pop	r12
     6f0:	08 95       	ret

000006f2 <EscapeString>:
     6f2:	cf 93       	push	r28
     6f4:	df 93       	push	r29
     6f6:	fc 01       	movw	r30, r24
     6f8:	90 81       	ld	r25, Z
     6fa:	99 23       	and	r25, r25
     6fc:	b1 f0       	breq	.+44     	; 0x72a <EscapeString+0x38>
     6fe:	c4 e6       	ldi	r28, 0x64	; 100
     700:	db e0       	ldi	r29, 0x0B	; 11
     702:	2f e2       	ldi	r18, 0x2F	; 47
     704:	9c 32       	cpi	r25, 0x2C	; 44
     706:	21 f0       	breq	.+8      	; 0x710 <EscapeString+0x1e>
     708:	92 32       	cpi	r25, 0x22	; 34
     70a:	11 f0       	breq	.+4      	; 0x710 <EscapeString+0x1e>
     70c:	9c 35       	cpi	r25, 0x5C	; 92
     70e:	21 f4       	brne	.+8      	; 0x718 <EscapeString+0x26>
     710:	de 01       	movw	r26, r28
     712:	11 96       	adiw	r26, 0x01	; 1
     714:	28 83       	st	Y, r18
     716:	01 c0       	rjmp	.+2      	; 0x71a <EscapeString+0x28>
     718:	de 01       	movw	r26, r28
     71a:	ed 01       	movw	r28, r26
     71c:	21 96       	adiw	r28, 0x01	; 1
     71e:	81 91       	ld	r24, Z+
     720:	8c 93       	st	X, r24
     722:	90 81       	ld	r25, Z
     724:	91 11       	cpse	r25, r1
     726:	ee cf       	rjmp	.-36     	; 0x704 <EscapeString+0x12>
     728:	02 c0       	rjmp	.+4      	; 0x72e <EscapeString+0x3c>
     72a:	c4 e6       	ldi	r28, 0x64	; 100
     72c:	db e0       	ldi	r29, 0x0B	; 11
     72e:	18 82       	st	Y, r1
     730:	84 e6       	ldi	r24, 0x64	; 100
     732:	9b e0       	ldi	r25, 0x0B	; 11
     734:	df 91       	pop	r29
     736:	cf 91       	pop	r28
     738:	08 95       	ret

0000073a <ParseIP>:
     73a:	af 92       	push	r10
     73c:	bf 92       	push	r11
     73e:	cf 92       	push	r12
     740:	df 92       	push	r13
     742:	ef 92       	push	r14
     744:	ff 92       	push	r15
     746:	1f 93       	push	r17
     748:	cf 93       	push	r28
     74a:	df 93       	push	r29
     74c:	cd b7       	in	r28, 0x3d	; 61
     74e:	de b7       	in	r29, 0x3e	; 62
     750:	61 97       	sbiw	r28, 0x11	; 17
     752:	0f b6       	in	r0, 0x3f	; 63
     754:	f8 94       	cli
     756:	de bf       	out	0x3e, r29	; 62
     758:	0f be       	out	0x3f, r0	; 63
     75a:	cd bf       	out	0x3d, r28	; 61
     75c:	fc 01       	movw	r30, r24
     75e:	6b 01       	movw	r12, r22
     760:	5a 01       	movw	r10, r20
     762:	9f e0       	ldi	r25, 0x0F	; 15
     764:	de 01       	movw	r26, r28
     766:	12 96       	adiw	r26, 0x02	; 2
     768:	01 90       	ld	r0, Z+
     76a:	0d 92       	st	X+, r0
     76c:	9a 95       	dec	r25
     76e:	e1 f7       	brne	.-8      	; 0x768 <ParseIP+0x2e>
     770:	19 8a       	std	Y+17, r1	; 0x11
     772:	64 e1       	ldi	r22, 0x14	; 20
     774:	72 e0       	ldi	r23, 0x02	; 2
     776:	ce 01       	movw	r24, r28
     778:	02 96       	adiw	r24, 0x02	; 2
     77a:	0e 94 05 1b 	call	0x360a	; 0x360a <strtok>
     77e:	00 97       	sbiw	r24, 0x00	; 0
     780:	e9 f4       	brne	.+58     	; 0x7bc <ParseIP+0x82>
     782:	10 e0       	ldi	r17, 0x00	; 0
     784:	15 c0       	rjmp	.+42     	; 0x7b0 <ParseIP+0x76>
     786:	be 01       	movw	r22, r28
     788:	6f 5f       	subi	r22, 0xFF	; 255
     78a:	7f 4f       	sbci	r23, 0xFF	; 255
     78c:	59 df       	rcall	.-334    	; 0x640 <ParseNumber>
     78e:	f7 01       	movw	r30, r14
     790:	61 93       	st	Z+, r22
     792:	7f 01       	movw	r14, r30
     794:	89 81       	ldd	r24, Y+1	; 0x01
     796:	18 0f       	add	r17, r24
     798:	ec 15       	cp	r30, r12
     79a:	fd 05       	cpc	r31, r13
     79c:	49 f0       	breq	.+18     	; 0x7b0 <ParseIP+0x76>
     79e:	1f 5f       	subi	r17, 0xFF	; 255
     7a0:	64 e1       	ldi	r22, 0x14	; 20
     7a2:	72 e0       	ldi	r23, 0x02	; 2
     7a4:	80 e0       	ldi	r24, 0x00	; 0
     7a6:	90 e0       	ldi	r25, 0x00	; 0
     7a8:	0e 94 05 1b 	call	0x360a	; 0x360a <strtok>
     7ac:	00 97       	sbiw	r24, 0x00	; 0
     7ae:	59 f7       	brne	.-42     	; 0x786 <ParseIP+0x4c>
     7b0:	a1 14       	cp	r10, r1
     7b2:	b1 04       	cpc	r11, r1
     7b4:	79 f0       	breq	.+30     	; 0x7d4 <ParseIP+0x9a>
     7b6:	f5 01       	movw	r30, r10
     7b8:	10 83       	st	Z, r17
     7ba:	0c c0       	rjmp	.+24     	; 0x7d4 <ParseIP+0x9a>
     7bc:	be 01       	movw	r22, r28
     7be:	6f 5f       	subi	r22, 0xFF	; 255
     7c0:	7f 4f       	sbci	r23, 0xFF	; 255
     7c2:	3e df       	rcall	.-388    	; 0x640 <ParseNumber>
     7c4:	f6 01       	movw	r30, r12
     7c6:	61 93       	st	Z+, r22
     7c8:	7f 01       	movw	r14, r30
     7ca:	19 81       	ldd	r17, Y+1	; 0x01
     7cc:	f4 e0       	ldi	r31, 0x04	; 4
     7ce:	cf 0e       	add	r12, r31
     7d0:	d1 1c       	adc	r13, r1
     7d2:	e5 cf       	rjmp	.-54     	; 0x79e <ParseIP+0x64>
     7d4:	61 96       	adiw	r28, 0x11	; 17
     7d6:	0f b6       	in	r0, 0x3f	; 63
     7d8:	f8 94       	cli
     7da:	de bf       	out	0x3e, r29	; 62
     7dc:	0f be       	out	0x3f, r0	; 63
     7de:	cd bf       	out	0x3d, r28	; 61
     7e0:	df 91       	pop	r29
     7e2:	cf 91       	pop	r28
     7e4:	1f 91       	pop	r17
     7e6:	ff 90       	pop	r15
     7e8:	ef 90       	pop	r14
     7ea:	df 90       	pop	r13
     7ec:	cf 90       	pop	r12
     7ee:	bf 90       	pop	r11
     7f0:	af 90       	pop	r10
     7f2:	08 95       	ret

000007f4 <ParseCIPSTA>:
     7f4:	0f 93       	push	r16
     7f6:	1f 93       	push	r17
     7f8:	cf 93       	push	r28
     7fa:	df 93       	push	r29
     7fc:	ec 01       	movw	r28, r24
     7fe:	8b 01       	movw	r16, r22
     800:	4e e0       	ldi	r20, 0x0E	; 14
     802:	50 e0       	ldi	r21, 0x00	; 0
     804:	86 e1       	ldi	r24, 0x16	; 22
     806:	92 e0       	ldi	r25, 0x02	; 2
     808:	0e 94 2e 1b 	call	0x365c	; 0x365c <strncmp>
     80c:	89 2b       	or	r24, r25
     80e:	09 f4       	brne	.+2      	; 0x812 <ParseCIPSTA+0x1e>
     810:	6f c0       	rjmp	.+222    	; 0x8f0 <ParseCIPSTA+0xfc>
     812:	43 e1       	ldi	r20, 0x13	; 19
     814:	50 e0       	ldi	r21, 0x00	; 0
     816:	b8 01       	movw	r22, r16
     818:	85 e2       	ldi	r24, 0x25	; 37
     81a:	92 e0       	ldi	r25, 0x02	; 2
     81c:	0e 94 2e 1b 	call	0x365c	; 0x365c <strncmp>
     820:	89 2b       	or	r24, r25
     822:	09 f4       	brne	.+2      	; 0x826 <ParseCIPSTA+0x32>
     824:	79 c0       	rjmp	.+242    	; 0x918 <ParseCIPSTA+0x124>
     826:	43 e1       	ldi	r20, 0x13	; 19
     828:	50 e0       	ldi	r21, 0x00	; 0
     82a:	b8 01       	movw	r22, r16
     82c:	89 e3       	ldi	r24, 0x39	; 57
     82e:	92 e0       	ldi	r25, 0x02	; 2
     830:	0e 94 2e 1b 	call	0x365c	; 0x365c <strncmp>
     834:	89 2b       	or	r24, r25
     836:	09 f4       	brne	.+2      	; 0x83a <ParseCIPSTA+0x46>
     838:	82 c0       	rjmp	.+260    	; 0x93e <ParseCIPSTA+0x14a>
     83a:	4a e0       	ldi	r20, 0x0A	; 10
     83c:	50 e0       	ldi	r21, 0x00	; 0
     83e:	b8 01       	movw	r22, r16
     840:	8d e4       	ldi	r24, 0x4D	; 77
     842:	92 e0       	ldi	r25, 0x02	; 2
     844:	0e 94 2e 1b 	call	0x365c	; 0x365c <strncmp>
     848:	89 2b       	or	r24, r25
     84a:	09 f4       	brne	.+2      	; 0x84e <ParseCIPSTA+0x5a>
     84c:	53 c0       	rjmp	.+166    	; 0x8f4 <ParseCIPSTA+0x100>
     84e:	4f e0       	ldi	r20, 0x0F	; 15
     850:	50 e0       	ldi	r21, 0x00	; 0
     852:	b8 01       	movw	r22, r16
     854:	88 e5       	ldi	r24, 0x58	; 88
     856:	92 e0       	ldi	r25, 0x02	; 2
     858:	0e 94 2e 1b 	call	0x365c	; 0x365c <strncmp>
     85c:	89 2b       	or	r24, r25
     85e:	09 f4       	brne	.+2      	; 0x862 <ParseCIPSTA+0x6e>
     860:	5d c0       	rjmp	.+186    	; 0x91c <ParseCIPSTA+0x128>
     862:	4f e0       	ldi	r20, 0x0F	; 15
     864:	50 e0       	ldi	r21, 0x00	; 0
     866:	b8 01       	movw	r22, r16
     868:	88 e6       	ldi	r24, 0x68	; 104
     86a:	92 e0       	ldi	r25, 0x02	; 2
     86c:	0e 94 2e 1b 	call	0x365c	; 0x365c <strncmp>
     870:	89 2b       	or	r24, r25
     872:	09 f4       	brne	.+2      	; 0x876 <ParseCIPSTA+0x82>
     874:	66 c0       	rjmp	.+204    	; 0x942 <ParseCIPSTA+0x14e>
     876:	4d e0       	ldi	r20, 0x0D	; 13
     878:	50 e0       	ldi	r21, 0x00	; 0
     87a:	b8 01       	movw	r22, r16
     87c:	88 e7       	ldi	r24, 0x78	; 120
     87e:	92 e0       	ldi	r25, 0x02	; 2
     880:	0e 94 2e 1b 	call	0x365c	; 0x365c <strncmp>
     884:	89 2b       	or	r24, r25
     886:	09 f4       	brne	.+2      	; 0x88a <ParseCIPSTA+0x96>
     888:	6d c0       	rjmp	.+218    	; 0x964 <ParseCIPSTA+0x170>
     88a:	42 e1       	ldi	r20, 0x12	; 18
     88c:	50 e0       	ldi	r21, 0x00	; 0
     88e:	b8 01       	movw	r22, r16
     890:	86 e8       	ldi	r24, 0x86	; 134
     892:	92 e0       	ldi	r25, 0x02	; 2
     894:	0e 94 2e 1b 	call	0x365c	; 0x365c <strncmp>
     898:	89 2b       	or	r24, r25
     89a:	09 f4       	brne	.+2      	; 0x89e <ParseCIPSTA+0xaa>
     89c:	76 c0       	rjmp	.+236    	; 0x98a <ParseCIPSTA+0x196>
     89e:	42 e1       	ldi	r20, 0x12	; 18
     8a0:	50 e0       	ldi	r21, 0x00	; 0
     8a2:	b8 01       	movw	r22, r16
     8a4:	89 e9       	ldi	r24, 0x99	; 153
     8a6:	92 e0       	ldi	r25, 0x02	; 2
     8a8:	0e 94 2e 1b 	call	0x365c	; 0x365c <strncmp>
     8ac:	89 2b       	or	r24, r25
     8ae:	09 f4       	brne	.+2      	; 0x8b2 <ParseCIPSTA+0xbe>
     8b0:	7f c0       	rjmp	.+254    	; 0x9b0 <ParseCIPSTA+0x1bc>
     8b2:	49 e0       	ldi	r20, 0x09	; 9
     8b4:	50 e0       	ldi	r21, 0x00	; 0
     8b6:	b8 01       	movw	r22, r16
     8b8:	8c ea       	ldi	r24, 0xAC	; 172
     8ba:	92 e0       	ldi	r25, 0x02	; 2
     8bc:	0e 94 2e 1b 	call	0x365c	; 0x365c <strncmp>
     8c0:	89 2b       	or	r24, r25
     8c2:	09 f4       	brne	.+2      	; 0x8c6 <ParseCIPSTA+0xd2>
     8c4:	51 c0       	rjmp	.+162    	; 0x968 <ParseCIPSTA+0x174>
     8c6:	4e e0       	ldi	r20, 0x0E	; 14
     8c8:	50 e0       	ldi	r21, 0x00	; 0
     8ca:	b8 01       	movw	r22, r16
     8cc:	86 eb       	ldi	r24, 0xB6	; 182
     8ce:	92 e0       	ldi	r25, 0x02	; 2
     8d0:	0e 94 2e 1b 	call	0x365c	; 0x365c <strncmp>
     8d4:	89 2b       	or	r24, r25
     8d6:	09 f4       	brne	.+2      	; 0x8da <ParseCIPSTA+0xe6>
     8d8:	5a c0       	rjmp	.+180    	; 0x98e <ParseCIPSTA+0x19a>
     8da:	4e e0       	ldi	r20, 0x0E	; 14
     8dc:	50 e0       	ldi	r21, 0x00	; 0
     8de:	b8 01       	movw	r22, r16
     8e0:	85 ec       	ldi	r24, 0xC5	; 197
     8e2:	92 e0       	ldi	r25, 0x02	; 2
     8e4:	0e 94 2e 1b 	call	0x365c	; 0x365c <strncmp>
     8e8:	89 2b       	or	r24, r25
     8ea:	09 f4       	brne	.+2      	; 0x8ee <ParseCIPSTA+0xfa>
     8ec:	63 c0       	rjmp	.+198    	; 0x9b4 <ParseCIPSTA+0x1c0>
     8ee:	72 c0       	rjmp	.+228    	; 0x9d4 <ParseCIPSTA+0x1e0>
     8f0:	2e e0       	ldi	r18, 0x0E	; 14
     8f2:	01 c0       	rjmp	.+2      	; 0x8f6 <ParseCIPSTA+0x102>
     8f4:	2a e0       	ldi	r18, 0x0A	; 10
     8f6:	be 01       	movw	r22, r28
     8f8:	6e 55       	subi	r22, 0x5E	; 94
     8fa:	7e 4f       	sbci	r23, 0xFE	; 254
     8fc:	30 e0       	ldi	r19, 0x00	; 0
     8fe:	c9 01       	movw	r24, r18
     900:	02 96       	adiw	r24, 0x02	; 2
     902:	40 e0       	ldi	r20, 0x00	; 0
     904:	50 e0       	ldi	r21, 0x00	; 0
     906:	80 0f       	add	r24, r16
     908:	91 1f       	adc	r25, r17
     90a:	17 df       	rcall	.-466    	; 0x73a <ParseIP>
     90c:	ca 53       	subi	r28, 0x3A	; 58
     90e:	dd 4f       	sbci	r29, 0xFD	; 253
     910:	88 81       	ld	r24, Y
     912:	81 60       	ori	r24, 0x01	; 1
     914:	88 83       	st	Y, r24
     916:	5e c0       	rjmp	.+188    	; 0x9d4 <ParseCIPSTA+0x1e0>
     918:	83 e1       	ldi	r24, 0x13	; 19
     91a:	01 c0       	rjmp	.+2      	; 0x91e <ParseCIPSTA+0x12a>
     91c:	8f e0       	ldi	r24, 0x0F	; 15
     91e:	be 01       	movw	r22, r28
     920:	66 55       	subi	r22, 0x56	; 86
     922:	7e 4f       	sbci	r23, 0xFE	; 254
     924:	90 e0       	ldi	r25, 0x00	; 0
     926:	02 96       	adiw	r24, 0x02	; 2
     928:	40 e0       	ldi	r20, 0x00	; 0
     92a:	50 e0       	ldi	r21, 0x00	; 0
     92c:	80 0f       	add	r24, r16
     92e:	91 1f       	adc	r25, r17
     930:	04 df       	rcall	.-504    	; 0x73a <ParseIP>
     932:	ca 53       	subi	r28, 0x3A	; 58
     934:	dd 4f       	sbci	r29, 0xFD	; 253
     936:	88 81       	ld	r24, Y
     938:	82 60       	ori	r24, 0x02	; 2
     93a:	88 83       	st	Y, r24
     93c:	4b c0       	rjmp	.+150    	; 0x9d4 <ParseCIPSTA+0x1e0>
     93e:	83 e1       	ldi	r24, 0x13	; 19
     940:	01 c0       	rjmp	.+2      	; 0x944 <ParseCIPSTA+0x150>
     942:	8f e0       	ldi	r24, 0x0F	; 15
     944:	be 01       	movw	r22, r28
     946:	6a 55       	subi	r22, 0x5A	; 90
     948:	7e 4f       	sbci	r23, 0xFE	; 254
     94a:	90 e0       	ldi	r25, 0x00	; 0
     94c:	02 96       	adiw	r24, 0x02	; 2
     94e:	40 e0       	ldi	r20, 0x00	; 0
     950:	50 e0       	ldi	r21, 0x00	; 0
     952:	80 0f       	add	r24, r16
     954:	91 1f       	adc	r25, r17
     956:	f1 de       	rcall	.-542    	; 0x73a <ParseIP>
     958:	ca 53       	subi	r28, 0x3A	; 58
     95a:	dd 4f       	sbci	r29, 0xFD	; 253
     95c:	88 81       	ld	r24, Y
     95e:	84 60       	ori	r24, 0x04	; 4
     960:	88 83       	st	Y, r24
     962:	38 c0       	rjmp	.+112    	; 0x9d4 <ParseCIPSTA+0x1e0>
     964:	8d e0       	ldi	r24, 0x0D	; 13
     966:	01 c0       	rjmp	.+2      	; 0x96a <ParseCIPSTA+0x176>
     968:	89 e0       	ldi	r24, 0x09	; 9
     96a:	be 01       	movw	r22, r28
     96c:	6c 54       	subi	r22, 0x4C	; 76
     96e:	7e 4f       	sbci	r23, 0xFE	; 254
     970:	90 e0       	ldi	r25, 0x00	; 0
     972:	02 96       	adiw	r24, 0x02	; 2
     974:	40 e0       	ldi	r20, 0x00	; 0
     976:	50 e0       	ldi	r21, 0x00	; 0
     978:	80 0f       	add	r24, r16
     97a:	91 1f       	adc	r25, r17
     97c:	de de       	rcall	.-580    	; 0x73a <ParseIP>
     97e:	ca 53       	subi	r28, 0x3A	; 58
     980:	dd 4f       	sbci	r29, 0xFD	; 253
     982:	88 81       	ld	r24, Y
     984:	80 61       	ori	r24, 0x10	; 16
     986:	88 83       	st	Y, r24
     988:	25 c0       	rjmp	.+74     	; 0x9d4 <ParseCIPSTA+0x1e0>
     98a:	82 e1       	ldi	r24, 0x12	; 18
     98c:	01 c0       	rjmp	.+2      	; 0x990 <ParseCIPSTA+0x19c>
     98e:	8e e0       	ldi	r24, 0x0E	; 14
     990:	be 01       	movw	r22, r28
     992:	64 54       	subi	r22, 0x44	; 68
     994:	7e 4f       	sbci	r23, 0xFE	; 254
     996:	90 e0       	ldi	r25, 0x00	; 0
     998:	02 96       	adiw	r24, 0x02	; 2
     99a:	40 e0       	ldi	r20, 0x00	; 0
     99c:	50 e0       	ldi	r21, 0x00	; 0
     99e:	80 0f       	add	r24, r16
     9a0:	91 1f       	adc	r25, r17
     9a2:	cb de       	rcall	.-618    	; 0x73a <ParseIP>
     9a4:	ca 53       	subi	r28, 0x3A	; 58
     9a6:	dd 4f       	sbci	r29, 0xFD	; 253
     9a8:	88 81       	ld	r24, Y
     9aa:	80 62       	ori	r24, 0x20	; 32
     9ac:	88 83       	st	Y, r24
     9ae:	12 c0       	rjmp	.+36     	; 0x9d4 <ParseCIPSTA+0x1e0>
     9b0:	82 e1       	ldi	r24, 0x12	; 18
     9b2:	01 c0       	rjmp	.+2      	; 0x9b6 <ParseCIPSTA+0x1c2>
     9b4:	8e e0       	ldi	r24, 0x0E	; 14
     9b6:	be 01       	movw	r22, r28
     9b8:	68 54       	subi	r22, 0x48	; 72
     9ba:	7e 4f       	sbci	r23, 0xFE	; 254
     9bc:	90 e0       	ldi	r25, 0x00	; 0
     9be:	02 96       	adiw	r24, 0x02	; 2
     9c0:	40 e0       	ldi	r20, 0x00	; 0
     9c2:	50 e0       	ldi	r21, 0x00	; 0
     9c4:	80 0f       	add	r24, r16
     9c6:	91 1f       	adc	r25, r17
     9c8:	b8 de       	rcall	.-656    	; 0x73a <ParseIP>
     9ca:	ca 53       	subi	r28, 0x3A	; 58
     9cc:	dd 4f       	sbci	r29, 0xFD	; 253
     9ce:	88 81       	ld	r24, Y
     9d0:	80 64       	ori	r24, 0x40	; 64
     9d2:	88 83       	st	Y, r24
     9d4:	df 91       	pop	r29
     9d6:	cf 91       	pop	r28
     9d8:	1f 91       	pop	r17
     9da:	0f 91       	pop	r16
     9dc:	08 95       	ret

000009de <ParseMAC>:
     9de:	8f 92       	push	r8
     9e0:	9f 92       	push	r9
     9e2:	af 92       	push	r10
     9e4:	bf 92       	push	r11
     9e6:	cf 92       	push	r12
     9e8:	df 92       	push	r13
     9ea:	ef 92       	push	r14
     9ec:	ff 92       	push	r15
     9ee:	0f 93       	push	r16
     9f0:	1f 93       	push	r17
     9f2:	cf 93       	push	r28
     9f4:	df 93       	push	r29
     9f6:	8b 01       	movw	r16, r22
     9f8:	7a 01       	movw	r14, r20
     9fa:	6e ef       	ldi	r22, 0xFE	; 254
     9fc:	72 e0       	ldi	r23, 0x02	; 2
     9fe:	0e 94 05 1b 	call	0x360a	; 0x360a <strtok>
     a02:	00 97       	sbiw	r24, 0x00	; 0
     a04:	e1 f1       	breq	.+120    	; 0xa7e <ParseMAC+0xa0>
     a06:	e8 01       	movw	r28, r16
     a08:	0a 5f       	subi	r16, 0xFA	; 250
     a0a:	1f 4f       	sbci	r17, 0xFF	; 255
     a0c:	d1 2c       	mov	r13, r1
     a0e:	81 2c       	mov	r8, r1
     a10:	91 2c       	mov	r9, r1
     a12:	a1 2c       	mov	r10, r1
     a14:	b1 2c       	mov	r11, r1
     a16:	c1 2c       	mov	r12, r1
     a18:	28 2f       	mov	r18, r24
     a1a:	e8 2f       	mov	r30, r24
     a1c:	f9 2f       	mov	r31, r25
     a1e:	88 2d       	mov	r24, r8
     a20:	99 2d       	mov	r25, r9
     a22:	aa 2d       	mov	r26, r10
     a24:	bb 2d       	mov	r27, r11
     a26:	0d c0       	rjmp	.+26     	; 0xa42 <ParseMAC+0x64>
     a28:	37 55       	subi	r19, 0x57	; 87
     a2a:	07 c0       	rjmp	.+14     	; 0xa3a <ParseMAC+0x5c>
     a2c:	4f eb       	ldi	r20, 0xBF	; 191
     a2e:	43 0f       	add	r20, r19
     a30:	46 30       	cpi	r20, 0x06	; 6
     a32:	10 f4       	brcc	.+4      	; 0xa38 <ParseMAC+0x5a>
     a34:	37 53       	subi	r19, 0x37	; 55
     a36:	01 c0       	rjmp	.+2      	; 0xa3a <ParseMAC+0x5c>
     a38:	3c 2d       	mov	r19, r12
     a3a:	83 0f       	add	r24, r19
     a3c:	91 1d       	adc	r25, r1
     a3e:	a1 1d       	adc	r26, r1
     a40:	b1 1d       	adc	r27, r1
     a42:	5e 2f       	mov	r21, r30
     a44:	52 1b       	sub	r21, r18
     a46:	31 91       	ld	r19, Z+
     a48:	40 ed       	ldi	r20, 0xD0	; 208
     a4a:	43 0f       	add	r20, r19
     a4c:	4a 30       	cpi	r20, 0x0A	; 10
     a4e:	78 f1       	brcs	.+94     	; 0xaae <ParseMAC+0xd0>
     a50:	4f e9       	ldi	r20, 0x9F	; 159
     a52:	43 0f       	add	r20, r19
     a54:	46 30       	cpi	r20, 0x06	; 6
     a56:	e8 f1       	brcs	.+122    	; 0xad2 <ParseMAC+0xf4>
     a58:	4f eb       	ldi	r20, 0xBF	; 191
     a5a:	43 0f       	add	r20, r19
     a5c:	46 30       	cpi	r20, 0x06	; 6
     a5e:	b0 f0       	brcs	.+44     	; 0xa8c <ParseMAC+0xae>
     a60:	89 93       	st	Y+, r24
     a62:	d5 0e       	add	r13, r21
     a64:	c0 17       	cp	r28, r16
     a66:	d1 07       	cpc	r29, r17
     a68:	59 f0       	breq	.+22     	; 0xa80 <ParseMAC+0xa2>
     a6a:	d3 94       	inc	r13
     a6c:	6e ef       	ldi	r22, 0xFE	; 254
     a6e:	72 e0       	ldi	r23, 0x02	; 2
     a70:	80 e0       	ldi	r24, 0x00	; 0
     a72:	90 e0       	ldi	r25, 0x00	; 0
     a74:	0e 94 05 1b 	call	0x360a	; 0x360a <strtok>
     a78:	00 97       	sbiw	r24, 0x00	; 0
     a7a:	71 f6       	brne	.-100    	; 0xa18 <ParseMAC+0x3a>
     a7c:	01 c0       	rjmp	.+2      	; 0xa80 <ParseMAC+0xa2>
     a7e:	d1 2c       	mov	r13, r1
     a80:	e1 14       	cp	r14, r1
     a82:	f1 04       	cpc	r15, r1
     a84:	e1 f1       	breq	.+120    	; 0xafe <ParseMAC+0x120>
     a86:	f7 01       	movw	r30, r14
     a88:	d0 82       	st	Z, r13
     a8a:	39 c0       	rjmp	.+114    	; 0xafe <ParseMAC+0x120>
     a8c:	88 0f       	add	r24, r24
     a8e:	99 1f       	adc	r25, r25
     a90:	aa 1f       	adc	r26, r26
     a92:	bb 1f       	adc	r27, r27
     a94:	88 0f       	add	r24, r24
     a96:	99 1f       	adc	r25, r25
     a98:	aa 1f       	adc	r26, r26
     a9a:	bb 1f       	adc	r27, r27
     a9c:	88 0f       	add	r24, r24
     a9e:	99 1f       	adc	r25, r25
     aa0:	aa 1f       	adc	r26, r26
     aa2:	bb 1f       	adc	r27, r27
     aa4:	88 0f       	add	r24, r24
     aa6:	99 1f       	adc	r25, r25
     aa8:	aa 1f       	adc	r26, r26
     aaa:	bb 1f       	adc	r27, r27
     aac:	bf cf       	rjmp	.-130    	; 0xa2c <ParseMAC+0x4e>
     aae:	88 0f       	add	r24, r24
     ab0:	99 1f       	adc	r25, r25
     ab2:	aa 1f       	adc	r26, r26
     ab4:	bb 1f       	adc	r27, r27
     ab6:	88 0f       	add	r24, r24
     ab8:	99 1f       	adc	r25, r25
     aba:	aa 1f       	adc	r26, r26
     abc:	bb 1f       	adc	r27, r27
     abe:	88 0f       	add	r24, r24
     ac0:	99 1f       	adc	r25, r25
     ac2:	aa 1f       	adc	r26, r26
     ac4:	bb 1f       	adc	r27, r27
     ac6:	88 0f       	add	r24, r24
     ac8:	99 1f       	adc	r25, r25
     aca:	aa 1f       	adc	r26, r26
     acc:	bb 1f       	adc	r27, r27
     ace:	34 2f       	mov	r19, r20
     ad0:	b4 cf       	rjmp	.-152    	; 0xa3a <ParseMAC+0x5c>
     ad2:	88 0f       	add	r24, r24
     ad4:	99 1f       	adc	r25, r25
     ad6:	aa 1f       	adc	r26, r26
     ad8:	bb 1f       	adc	r27, r27
     ada:	88 0f       	add	r24, r24
     adc:	99 1f       	adc	r25, r25
     ade:	aa 1f       	adc	r26, r26
     ae0:	bb 1f       	adc	r27, r27
     ae2:	88 0f       	add	r24, r24
     ae4:	99 1f       	adc	r25, r25
     ae6:	aa 1f       	adc	r26, r26
     ae8:	bb 1f       	adc	r27, r27
     aea:	88 0f       	add	r24, r24
     aec:	99 1f       	adc	r25, r25
     aee:	aa 1f       	adc	r26, r26
     af0:	bb 1f       	adc	r27, r27
     af2:	4f e9       	ldi	r20, 0x9F	; 159
     af4:	43 0f       	add	r20, r19
     af6:	46 30       	cpi	r20, 0x06	; 6
     af8:	08 f0       	brcs	.+2      	; 0xafc <ParseMAC+0x11e>
     afa:	98 cf       	rjmp	.-208    	; 0xa2c <ParseMAC+0x4e>
     afc:	95 cf       	rjmp	.-214    	; 0xa28 <ParseMAC+0x4a>
     afe:	df 91       	pop	r29
     b00:	cf 91       	pop	r28
     b02:	1f 91       	pop	r17
     b04:	0f 91       	pop	r16
     b06:	ff 90       	pop	r15
     b08:	ef 90       	pop	r14
     b0a:	df 90       	pop	r13
     b0c:	cf 90       	pop	r12
     b0e:	bf 90       	pop	r11
     b10:	af 90       	pop	r10
     b12:	9f 90       	pop	r9
     b14:	8f 90       	pop	r8
     b16:	08 95       	ret

00000b18 <ESP8266_TimeUpdate>:
     b18:	0f 93       	push	r16
     b1a:	1f 93       	push	r17
     b1c:	fc 01       	movw	r30, r24
     b1e:	e4 5b       	subi	r30, 0xB4	; 180
     b20:	ff 4f       	sbci	r31, 0xFF	; 255
     b22:	00 81       	ld	r16, Z
     b24:	11 81       	ldd	r17, Z+1	; 0x01
     b26:	22 81       	ldd	r18, Z+2	; 0x02
     b28:	33 81       	ldd	r19, Z+3	; 0x03
     b2a:	40 0f       	add	r20, r16
     b2c:	51 1f       	adc	r21, r17
     b2e:	62 1f       	adc	r22, r18
     b30:	73 1f       	adc	r23, r19
     b32:	40 83       	st	Z, r20
     b34:	51 83       	std	Z+1, r21	; 0x01
     b36:	62 83       	std	Z+2, r22	; 0x02
     b38:	73 83       	std	Z+3, r23	; 0x03
     b3a:	1f 91       	pop	r17
     b3c:	0f 91       	pop	r16
     b3e:	08 95       	ret

00000b40 <ESP8266_DataReceived>:
     b40:	ab 01       	movw	r20, r22
     b42:	bc 01       	movw	r22, r24
     b44:	81 e8       	ldi	r24, 0x81	; 129
     b46:	98 e1       	ldi	r25, 0x18	; 24
     b48:	36 cb       	rjmp	.-2452   	; 0x1b6 <BUFFER_Write>
     b4a:	08 95       	ret

00000b4c <ESP8266_Callback_ServerConnectionActive>:
     b4c:	08 95       	ret

00000b4e <ESP8266_Callback_ServerConnectionClosed>:
     b4e:	08 95       	ret

00000b50 <ESP8266_Callback_ServerConnectionDataReceived>:
     b50:	08 95       	ret

00000b52 <ESP8266_Callback_ServerConnectionSendData>:
     b52:	80 e0       	ldi	r24, 0x00	; 0
     b54:	90 e0       	ldi	r25, 0x00	; 0
     b56:	08 95       	ret

00000b58 <ESP8266_Callback_ServerConnectionDataSent>:
     b58:	08 95       	ret

00000b5a <CallConnectionCallbacks>:
     b5a:	cf 92       	push	r12
     b5c:	df 92       	push	r13
     b5e:	ef 92       	push	r14
     b60:	ff 92       	push	r15
     b62:	0f 93       	push	r16
     b64:	1f 93       	push	r17
     b66:	cf 93       	push	r28
     b68:	df 93       	push	r29
     b6a:	7c 01       	movw	r14, r24
     b6c:	ec 01       	movw	r28, r24
     b6e:	c8 5a       	subi	r28, 0xA8	; 168
     b70:	df 4f       	sbci	r29, 0xFF	; 255
     b72:	8c 01       	movw	r16, r24
     b74:	00 59       	subi	r16, 0x90	; 144
     b76:	1f 4f       	sbci	r17, 0xFF	; 255
     b78:	6c 01       	movw	r12, r24
     b7a:	8e e5       	ldi	r24, 0x5E	; 94
     b7c:	c8 1a       	sub	r12, r24
     b7e:	8e ef       	ldi	r24, 0xFE	; 254
     b80:	d8 0a       	sbc	r13, r24
     b82:	f7 01       	movw	r30, r14
     b84:	84 81       	ldd	r24, Z+4	; 0x04
     b86:	95 81       	ldd	r25, Z+5	; 0x05
     b88:	a6 81       	ldd	r26, Z+6	; 0x06
     b8a:	b7 81       	ldd	r27, Z+7	; 0x07
     b8c:	89 2b       	or	r24, r25
     b8e:	8a 2b       	or	r24, r26
     b90:	8b 2b       	or	r24, r27
     b92:	b9 f4       	brne	.+46     	; 0xbc2 <CallConnectionCallbacks+0x68>
     b94:	be 01       	movw	r22, r28
     b96:	88 81       	ld	r24, Y
     b98:	88 23       	and	r24, r24
     b9a:	99 f0       	breq	.+38     	; 0xbc2 <CallConnectionCallbacks+0x68>
     b9c:	f8 01       	movw	r30, r16
     b9e:	80 81       	ld	r24, Z
     ba0:	88 23       	and	r24, r24
     ba2:	79 f0       	breq	.+30     	; 0xbc2 <CallConnectionCallbacks+0x68>
     ba4:	10 82       	st	Z, r1
     ba6:	76 97       	sbiw	r30, 0x16	; 22
     ba8:	80 81       	ld	r24, Z
     baa:	88 23       	and	r24, r24
     bac:	31 f0       	breq	.+12     	; 0xbba <CallConnectionCallbacks+0x60>
     bae:	4b 89       	ldd	r20, Y+19	; 0x13
     bb0:	5c 89       	ldd	r21, Y+20	; 0x14
     bb2:	c7 01       	movw	r24, r14
     bb4:	0e 94 36 19 	call	0x326c	; 0x326c <ESP8266_Callback_ClientConnectionDataReceived>
     bb8:	04 c0       	rjmp	.+8      	; 0xbc2 <CallConnectionCallbacks+0x68>
     bba:	4b 89       	ldd	r20, Y+19	; 0x13
     bbc:	5c 89       	ldd	r21, Y+20	; 0x14
     bbe:	c7 01       	movw	r24, r14
     bc0:	c7 df       	rcall	.-114    	; 0xb50 <ESP8266_Callback_ServerConnectionDataReceived>
     bc2:	ce 5b       	subi	r28, 0xBE	; 190
     bc4:	df 4f       	sbci	r29, 0xFF	; 255
     bc6:	0e 5b       	subi	r16, 0xBE	; 190
     bc8:	1f 4f       	sbci	r17, 0xFF	; 255
     bca:	cc 15       	cp	r28, r12
     bcc:	dd 05       	cpc	r29, r13
     bce:	c9 f6       	brne	.-78     	; 0xb82 <CallConnectionCallbacks+0x28>
     bd0:	df 91       	pop	r29
     bd2:	cf 91       	pop	r28
     bd4:	1f 91       	pop	r17
     bd6:	0f 91       	pop	r16
     bd8:	ff 90       	pop	r15
     bda:	ef 90       	pop	r14
     bdc:	df 90       	pop	r13
     bde:	cf 90       	pop	r12
     be0:	08 95       	ret

00000be2 <ESP8266_Callback_PingFinished>:
     be2:	08 95       	ret

00000be4 <ESP8266_Callback_FirmwareUpdateStatus>:
     be4:	08 95       	ret

00000be6 <ESP8266_Callback_FirmwareUpdateSuccess>:
     be6:	08 95       	ret

00000be8 <ESP8266_Callback_FirmwareUpdateError>:
     be8:	08 95       	ret

00000bea <ESP8266_Callback_ConnectedStationsDetected>:
     bea:	08 95       	ret

00000bec <mem_mem>:
     bec:	af 92       	push	r10
     bee:	bf 92       	push	r11
     bf0:	cf 92       	push	r12
     bf2:	df 92       	push	r13
     bf4:	ef 92       	push	r14
     bf6:	ff 92       	push	r15
     bf8:	0f 93       	push	r16
     bfa:	1f 93       	push	r17
     bfc:	cf 93       	push	r28
     bfe:	df 93       	push	r29
     c00:	61 15       	cp	r22, r1
     c02:	71 05       	cpc	r23, r1
     c04:	a1 f0       	breq	.+40     	; 0xc2e <mem_mem+0x42>
     c06:	69 01       	movw	r12, r18
     c08:	7a 01       	movw	r14, r20
     c0a:	8b 01       	movw	r16, r22
     c0c:	ec 01       	movw	r28, r24
     c0e:	08 0f       	add	r16, r24
     c10:	19 1f       	adc	r17, r25
     c12:	a6 01       	movw	r20, r12
     c14:	b7 01       	movw	r22, r14
     c16:	ce 01       	movw	r24, r28
     c18:	0e 94 08 1b 	call	0x3610	; 0x3610 <memcmp>
     c1c:	89 2b       	or	r24, r25
     c1e:	51 f0       	breq	.+20     	; 0xc34 <mem_mem+0x48>
     c20:	21 96       	adiw	r28, 0x01	; 1
     c22:	c0 17       	cp	r28, r16
     c24:	d1 07       	cpc	r29, r17
     c26:	a9 f7       	brne	.-22     	; 0xc12 <mem_mem+0x26>
     c28:	80 e0       	ldi	r24, 0x00	; 0
     c2a:	90 e0       	ldi	r25, 0x00	; 0
     c2c:	05 c0       	rjmp	.+10     	; 0xc38 <mem_mem+0x4c>
     c2e:	80 e0       	ldi	r24, 0x00	; 0
     c30:	90 e0       	ldi	r25, 0x00	; 0
     c32:	02 c0       	rjmp	.+4      	; 0xc38 <mem_mem+0x4c>
     c34:	8c 2f       	mov	r24, r28
     c36:	9d 2f       	mov	r25, r29
     c38:	df 91       	pop	r29
     c3a:	cf 91       	pop	r28
     c3c:	1f 91       	pop	r17
     c3e:	0f 91       	pop	r16
     c40:	ff 90       	pop	r15
     c42:	ef 90       	pop	r14
     c44:	df 90       	pop	r13
     c46:	cf 90       	pop	r12
     c48:	bf 90       	pop	r11
     c4a:	af 90       	pop	r10
     c4c:	08 95       	ret

00000c4e <ParseReceived>:
     c4e:	2f 92       	push	r2
     c50:	3f 92       	push	r3
     c52:	4f 92       	push	r4
     c54:	5f 92       	push	r5
     c56:	6f 92       	push	r6
     c58:	7f 92       	push	r7
     c5a:	8f 92       	push	r8
     c5c:	9f 92       	push	r9
     c5e:	af 92       	push	r10
     c60:	bf 92       	push	r11
     c62:	cf 92       	push	r12
     c64:	df 92       	push	r13
     c66:	ef 92       	push	r14
     c68:	ff 92       	push	r15
     c6a:	0f 93       	push	r16
     c6c:	1f 93       	push	r17
     c6e:	cf 93       	push	r28
     c70:	df 93       	push	r29
     c72:	1f 92       	push	r1
     c74:	1f 92       	push	r1
     c76:	cd b7       	in	r28, 0x3d	; 61
     c78:	de b7       	in	r29, 0x3e	; 62
     c7a:	fc 01       	movw	r30, r24
     c7c:	e0 5b       	subi	r30, 0xB0	; 176
     c7e:	ff 4f       	sbci	r31, 0xFF	; 255
     c80:	dc 01       	movw	r26, r24
     c82:	a4 5b       	subi	r26, 0xB4	; 180
     c84:	bf 4f       	sbci	r27, 0xFF	; 255
     c86:	cd 90       	ld	r12, X+
     c88:	dd 90       	ld	r13, X+
     c8a:	ed 90       	ld	r14, X+
     c8c:	fc 90       	ld	r15, X
     c8e:	c0 82       	st	Z, r12
     c90:	d1 82       	std	Z+1, r13	; 0x01
     c92:	e2 82       	std	Z+2, r14	; 0x02
     c94:	f3 82       	std	Z+3, r15	; 0x03
     c96:	22 30       	cpi	r18, 0x02	; 2
     c98:	31 05       	cpc	r19, r1
     c9a:	51 f4       	brne	.+20     	; 0xcb0 <ParseReceived+0x62>
     c9c:	db 01       	movw	r26, r22
     c9e:	5c 91       	ld	r21, X
     ca0:	5d 30       	cpi	r21, 0x0D	; 13
     ca2:	31 f4       	brne	.+12     	; 0xcb0 <ParseReceived+0x62>
     ca4:	11 96       	adiw	r26, 0x01	; 1
     ca6:	5c 91       	ld	r21, X
     ca8:	5a 30       	cpi	r21, 0x0A	; 10
     caa:	11 f4       	brne	.+4      	; 0xcb0 <ParseReceived+0x62>
     cac:	0c 94 eb 0e 	jmp	0x1dd6	; 0x1dd6 <ParseReceived+0x1188>
     cb0:	39 01       	movw	r6, r18
     cb2:	54 2e       	mov	r5, r20
     cb4:	7b 01       	movw	r14, r22
     cb6:	8c 01       	movw	r16, r24
     cb8:	fc 01       	movw	r30, r24
     cba:	84 81       	ldd	r24, Z+4	; 0x04
     cbc:	95 81       	ldd	r25, Z+5	; 0x05
     cbe:	a6 81       	ldd	r26, Z+6	; 0x06
     cc0:	b7 81       	ldd	r27, Z+7	; 0x07
     cc2:	89 2b       	or	r24, r25
     cc4:	8a 2b       	or	r24, r26
     cc6:	8b 2b       	or	r24, r27
     cc8:	09 f4       	brne	.+2      	; 0xccc <ParseReceived+0x7e>
     cca:	45 c0       	rjmp	.+138    	; 0xd56 <ParseReceived+0x108>
     ccc:	f1 e0       	ldi	r31, 0x01	; 1
     cce:	4f 13       	cpse	r20, r31
     cd0:	42 c0       	rjmp	.+132    	; 0xd56 <ParseReceived+0x108>
     cd2:	69 ed       	ldi	r22, 0xD9	; 217
     cd4:	72 e0       	ldi	r23, 0x02	; 2
     cd6:	c7 01       	movw	r24, r14
     cd8:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
     cdc:	89 2b       	or	r24, r25
     cde:	d9 f1       	breq	.+118    	; 0xd56 <ParseReceived+0x108>
     ce0:	64 ed       	ldi	r22, 0xD4	; 212
     ce2:	72 e0       	ldi	r23, 0x02	; 2
     ce4:	c7 01       	movw	r24, r14
     ce6:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
     cea:	89 2b       	or	r24, r25
     cec:	a1 f1       	breq	.+104    	; 0xd56 <ParseReceived+0x108>
     cee:	6e ed       	ldi	r22, 0xDE	; 222
     cf0:	72 e0       	ldi	r23, 0x02	; 2
     cf2:	c7 01       	movw	r24, r14
     cf4:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
     cf8:	89 2b       	or	r24, r25
     cfa:	69 f1       	breq	.+90     	; 0xd56 <ParseReceived+0x108>
     cfc:	66 ee       	ldi	r22, 0xE6	; 230
     cfe:	72 e0       	ldi	r23, 0x02	; 2
     d00:	c7 01       	movw	r24, r14
     d02:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
     d06:	89 2b       	or	r24, r25
     d08:	69 f1       	breq	.+90     	; 0xd64 <ParseReceived+0x116>
     d0a:	6e ee       	ldi	r22, 0xEE	; 238
     d0c:	72 e0       	ldi	r23, 0x02	; 2
     d0e:	c7 01       	movw	r24, r14
     d10:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
     d14:	89 2b       	or	r24, r25
     d16:	49 f1       	breq	.+82     	; 0xd6a <ParseReceived+0x11c>
     d18:	44 e0       	ldi	r20, 0x04	; 4
     d1a:	50 e0       	ldi	r21, 0x00	; 0
     d1c:	6a ef       	ldi	r22, 0xFA	; 250
     d1e:	72 e0       	ldi	r23, 0x02	; 2
     d20:	c7 01       	movw	r24, r14
     d22:	0e 94 2e 1b 	call	0x365c	; 0x365c <strncmp>
     d26:	89 2b       	or	r24, r25
     d28:	01 f1       	breq	.+64     	; 0xd6a <ParseReceived+0x11c>
     d2a:	b8 01       	movw	r22, r16
     d2c:	68 5f       	subi	r22, 0xF8	; 248
     d2e:	7f 4f       	sbci	r23, 0xFF	; 255
     d30:	fb 01       	movw	r30, r22
     d32:	01 90       	ld	r0, Z+
     d34:	00 20       	and	r0, r0
     d36:	e9 f7       	brne	.-6      	; 0xd32 <ParseReceived+0xe4>
     d38:	31 97       	sbiw	r30, 0x01	; 1
     d3a:	af 01       	movw	r20, r30
     d3c:	46 1b       	sub	r20, r22
     d3e:	57 0b       	sbc	r21, r23
     d40:	c7 01       	movw	r24, r14
     d42:	0e 94 2e 1b 	call	0x365c	; 0x365c <strncmp>
     d46:	89 2b       	or	r24, r25
     d48:	81 f0       	breq	.+32     	; 0xd6a <ParseReceived+0x11c>
     d4a:	b7 01       	movw	r22, r14
     d4c:	8d e8       	ldi	r24, 0x8D	; 141
     d4e:	98 e1       	ldi	r25, 0x18	; 24
     d50:	02 dc       	rcall	.-2044   	; 0x556 <BUFFER_WriteString>
     d52:	0c 94 eb 0e 	jmp	0x1dd6	; 0x1dd6 <ParseReceived+0x1188>
     d56:	66 ee       	ldi	r22, 0xE6	; 230
     d58:	72 e0       	ldi	r23, 0x02	; 2
     d5a:	c7 01       	movw	r24, r14
     d5c:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
     d60:	89 2b       	or	r24, r25
     d62:	19 f4       	brne	.+6      	; 0xd6a <ParseReceived+0x11c>
     d64:	c8 01       	movw	r24, r16
     d66:	0e 94 35 18 	call	0x306a	; 0x306a <ESP8266_Callback_DeviceReady>
     d6a:	60 e0       	ldi	r22, 0x00	; 0
     d6c:	73 e0       	ldi	r23, 0x03	; 3
     d6e:	c7 01       	movw	r24, r14
     d70:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
     d74:	89 2b       	or	r24, r25
     d76:	19 f4       	brne	.+6      	; 0xd7e <ParseReceived+0x130>
     d78:	c8 01       	movw	r24, r16
     d7a:	0e 94 39 18 	call	0x3072	; 0x3072 <ESP8266_Callback_WatchdogReset>
     d7e:	c8 01       	movw	r24, r16
     d80:	ec de       	rcall	.-552    	; 0xb5a <CallConnectionCallbacks>
     d82:	6c e0       	ldi	r22, 0x0C	; 12
     d84:	73 e0       	ldi	r23, 0x03	; 3
     d86:	c7 01       	movw	r24, r14
     d88:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
     d8c:	89 2b       	or	r24, r25
     d8e:	51 f4       	brne	.+20     	; 0xda4 <ParseReceived+0x156>
     d90:	f8 01       	movw	r30, r16
     d92:	ea 53       	subi	r30, 0x3A	; 58
     d94:	fd 4f       	sbci	r31, 0xFD	; 253
     d96:	81 81       	ldd	r24, Z+1	; 0x01
     d98:	84 60       	ori	r24, 0x04	; 4
     d9a:	81 83       	std	Z+1, r24	; 0x01
     d9c:	c8 01       	movw	r24, r16
     d9e:	0e 94 41 18 	call	0x3082	; 0x3082 <ESP8266_Callback_WifiConnected>
     da2:	33 c0       	rjmp	.+102    	; 0xe0a <ParseReceived+0x1bc>
     da4:	6d e1       	ldi	r22, 0x1D	; 29
     da6:	73 e0       	ldi	r23, 0x03	; 3
     da8:	c7 01       	movw	r24, r14
     daa:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
     dae:	89 2b       	or	r24, r25
     db0:	e1 f4       	brne	.+56     	; 0xdea <ParseReceived+0x19c>
     db2:	f8 01       	movw	r30, r16
     db4:	ea 53       	subi	r30, 0x3A	; 58
     db6:	fd 4f       	sbci	r31, 0xFD	; 253
     db8:	81 81       	ldd	r24, Z+1	; 0x01
     dba:	8b 7f       	andi	r24, 0xFB	; 251
     dbc:	87 7f       	andi	r24, 0xF7	; 247
     dbe:	81 83       	std	Z+1, r24	; 0x01
     dc0:	89 e1       	ldi	r24, 0x19	; 25
     dc2:	ea 58       	subi	r30, 0x8A	; 138
     dc4:	f1 09       	sbc	r31, r1
     dc6:	df 01       	movw	r26, r30
     dc8:	1d 92       	st	X+, r1
     dca:	8a 95       	dec	r24
     dcc:	e9 f7       	brne	.-6      	; 0xdc8 <ParseReceived+0x17a>
     dce:	8a e4       	ldi	r24, 0x4A	; 74
     dd0:	91 e0       	ldi	r25, 0x01	; 1
     dd2:	e4 5e       	subi	r30, 0xE4	; 228
     dd4:	f1 40       	sbci	r31, 0x01	; 1
     dd6:	df 01       	movw	r26, r30
     dd8:	9c 01       	movw	r18, r24
     dda:	1d 92       	st	X+, r1
     ddc:	21 50       	subi	r18, 0x01	; 1
     dde:	30 40       	sbci	r19, 0x00	; 0
     de0:	e1 f7       	brne	.-8      	; 0xdda <ParseReceived+0x18c>
     de2:	c8 01       	movw	r24, r16
     de4:	0e 94 3d 18 	call	0x307a	; 0x307a <ESP8266_Callback_WifiDisconnected>
     de8:	10 c0       	rjmp	.+32     	; 0xe0a <ParseReceived+0x1bc>
     dea:	6f e2       	ldi	r22, 0x2F	; 47
     dec:	73 e0       	ldi	r23, 0x03	; 3
     dee:	c7 01       	movw	r24, r14
     df0:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
     df4:	89 2b       	or	r24, r25
     df6:	49 f4       	brne	.+18     	; 0xe0a <ParseReceived+0x1bc>
     df8:	f8 01       	movw	r30, r16
     dfa:	ea 53       	subi	r30, 0x3A	; 58
     dfc:	fd 4f       	sbci	r31, 0xFD	; 253
     dfe:	81 81       	ldd	r24, Z+1	; 0x01
     e00:	88 60       	ori	r24, 0x08	; 8
     e02:	81 83       	std	Z+1, r24	; 0x01
     e04:	c8 01       	movw	r24, r16
     e06:	0e 94 55 18 	call	0x30aa	; 0x30aa <ESP8266_Callback_WifiGotIP>
     e0a:	64 ed       	ldi	r22, 0xD4	; 212
     e0c:	72 e0       	ldi	r23, 0x02	; 2
     e0e:	c7 01       	movw	r24, r14
     e10:	0e 94 4b 1b 	call	0x3696	; 0x3696 <strstr>
     e14:	89 2b       	or	r24, r25
     e16:	79 f1       	breq	.+94     	; 0xe76 <ParseReceived+0x228>
     e18:	d8 01       	movw	r26, r16
     e1a:	14 96       	adiw	r26, 0x04	; 4
     e1c:	1d 92       	st	X+, r1
     e1e:	1d 92       	st	X+, r1
     e20:	1d 92       	st	X+, r1
     e22:	1c 92       	st	X, r1
     e24:	17 97       	sbiw	r26, 0x07	; 7
     e26:	68 01       	movw	r12, r16
     e28:	ba e6       	ldi	r27, 0x6A	; 106
     e2a:	cb 0e       	add	r12, r27
     e2c:	d1 1c       	adc	r13, r1
     e2e:	58 01       	movw	r10, r16
     e30:	e8 e5       	ldi	r30, 0x58	; 88
     e32:	ae 0e       	add	r10, r30
     e34:	b1 1c       	adc	r11, r1
     e36:	48 01       	movw	r8, r16
     e38:	fc e4       	ldi	r31, 0x4C	; 76
     e3a:	8f 1a       	sub	r8, r31
     e3c:	fe ef       	ldi	r31, 0xFE	; 254
     e3e:	9f 0a       	sbc	r9, r31
     e40:	d6 01       	movw	r26, r12
     e42:	8c 91       	ld	r24, X
     e44:	88 23       	and	r24, r24
     e46:	71 f0       	breq	.+28     	; 0xe64 <ParseReceived+0x216>
     e48:	1c 92       	st	X, r1
     e4a:	f6 01       	movw	r30, r12
     e4c:	70 97       	sbiw	r30, 0x10	; 16
     e4e:	80 81       	ld	r24, Z
     e50:	88 23       	and	r24, r24
     e52:	29 f0       	breq	.+10     	; 0xe5e <ParseReceived+0x210>
     e54:	b5 01       	movw	r22, r10
     e56:	c8 01       	movw	r24, r16
     e58:	0e 94 32 19 	call	0x3264	; 0x3264 <ESP8266_Callback_ClientConnectionDataSent>
     e5c:	03 c0       	rjmp	.+6      	; 0xe64 <ParseReceived+0x216>
     e5e:	b5 01       	movw	r22, r10
     e60:	c8 01       	movw	r24, r16
     e62:	7a de       	rcall	.-780    	; 0xb58 <ESP8266_Callback_ServerConnectionDataSent>
     e64:	b2 e4       	ldi	r27, 0x42	; 66
     e66:	cb 0e       	add	r12, r27
     e68:	d1 1c       	adc	r13, r1
     e6a:	e2 e4       	ldi	r30, 0x42	; 66
     e6c:	ae 0e       	add	r10, r30
     e6e:	b1 1c       	adc	r11, r1
     e70:	c8 14       	cp	r12, r8
     e72:	d9 04       	cpc	r13, r9
     e74:	29 f7       	brne	.-54     	; 0xe40 <ParseReceived+0x1f2>
     e76:	44 e0       	ldi	r20, 0x04	; 4
     e78:	50 e0       	ldi	r21, 0x00	; 0
     e7a:	6d e3       	ldi	r22, 0x3D	; 61
     e7c:	73 e0       	ldi	r23, 0x03	; 3
     e7e:	c7 01       	movw	r24, r14
     e80:	0e 94 2e 1b 	call	0x365c	; 0x365c <strncmp>
     e84:	89 2b       	or	r24, r25
     e86:	09 f0       	breq	.+2      	; 0xe8a <ParseReceived+0x23c>
     e88:	6a c1       	rjmp	.+724    	; 0x115e <ParseReceived+0x510>
     e8a:	81 e0       	ldi	r24, 0x01	; 1
     e8c:	f8 01       	movw	r30, r16
     e8e:	e0 51       	subi	r30, 0x10	; 16
     e90:	fe 4f       	sbci	r31, 0xFE	; 254
     e92:	80 83       	st	Z, r24
     e94:	36 96       	adiw	r30, 0x06	; 6
     e96:	50 82       	st	Z, r5
     e98:	d7 01       	movw	r26, r14
     e9a:	15 96       	adiw	r26, 0x05	; 5
     e9c:	8c 91       	ld	r24, X
     e9e:	80 53       	subi	r24, 0x30	; 48
     ea0:	58 01       	movw	r10, r16
     ea2:	bb e0       	ldi	r27, 0x0B	; 11
     ea4:	ab 1a       	sub	r10, r27
     ea6:	be ef       	ldi	r27, 0xFE	; 254
     ea8:	bb 0a       	sbc	r11, r27
     eaa:	f5 01       	movw	r30, r10
     eac:	80 83       	st	Z, r24
     eae:	0f 2e       	mov	r0, r31
     eb0:	f2 e4       	ldi	r31, 0x42	; 66
     eb2:	9f 2e       	mov	r9, r31
     eb4:	f0 2d       	mov	r31, r0
     eb6:	68 01       	movw	r12, r16
     eb8:	98 9e       	mul	r9, r24
     eba:	c0 0c       	add	r12, r0
     ebc:	d1 1c       	adc	r13, r1
     ebe:	11 24       	eor	r1, r1
     ec0:	f6 01       	movw	r30, r12
     ec2:	e5 59       	subi	r30, 0x95	; 149
     ec4:	ff 4f       	sbci	r31, 0xFF	; 255
     ec6:	2c e8       	ldi	r18, 0x8C	; 140
     ec8:	3b e0       	ldi	r19, 0x0B	; 11
     eca:	31 83       	std	Z+1, r19	; 0x01
     ecc:	20 83       	st	Z, r18
     ece:	72 97       	sbiw	r30, 0x12	; 18
     ed0:	80 83       	st	Z, r24
     ed2:	be 01       	movw	r22, r28
     ed4:	6f 5f       	subi	r22, 0xFF	; 255
     ed6:	7f 4f       	sbci	r23, 0xFF	; 255
     ed8:	c7 01       	movw	r24, r14
     eda:	07 96       	adiw	r24, 0x07	; 7
     edc:	b1 db       	rcall	.-2206   	; 0x640 <ParseNumber>
     ede:	f6 01       	movw	r30, r12
     ee0:	ef 59       	subi	r30, 0x9F	; 159
     ee2:	ff 4f       	sbci	r31, 0xFF	; 255
     ee4:	60 83       	st	Z, r22
     ee6:	71 83       	std	Z+1, r23	; 0x01
     ee8:	82 83       	std	Z+2, r24	; 0x02
     eea:	93 83       	std	Z+3, r25	; 0x03
     eec:	d5 01       	movw	r26, r10
     eee:	8c 91       	ld	r24, X
     ef0:	28 2f       	mov	r18, r24
     ef2:	30 e0       	ldi	r19, 0x00	; 0
     ef4:	f8 01       	movw	r30, r16
     ef6:	98 9e       	mul	r9, r24
     ef8:	e0 0d       	add	r30, r0
     efa:	f1 1d       	adc	r31, r1
     efc:	11 24       	eor	r1, r1
     efe:	eb 59       	subi	r30, 0x9B	; 155
     f00:	ff 4f       	sbci	r31, 0xFF	; 255
     f02:	80 81       	ld	r24, Z
     f04:	91 81       	ldd	r25, Z+1	; 0x01
     f06:	a2 81       	ldd	r26, Z+2	; 0x02
     f08:	b3 81       	ldd	r27, Z+3	; 0x03
     f0a:	89 2b       	or	r24, r25
     f0c:	8a 2b       	or	r24, r26
     f0e:	8b 2b       	or	r24, r27
     f10:	81 f4       	brne	.+32     	; 0xf32 <ParseReceived+0x2e4>
     f12:	42 e4       	ldi	r20, 0x42	; 66
     f14:	42 9f       	mul	r20, r18
     f16:	c0 01       	movw	r24, r0
     f18:	43 9f       	mul	r20, r19
     f1a:	90 0d       	add	r25, r0
     f1c:	11 24       	eor	r1, r1
     f1e:	80 0f       	add	r24, r16
     f20:	91 1f       	adc	r25, r17
     f22:	fc 01       	movw	r30, r24
     f24:	e9 56       	subi	r30, 0x69	; 105
     f26:	ff 4f       	sbci	r31, 0xFF	; 255
     f28:	10 82       	st	Z, r1
     f2a:	31 96       	adiw	r30, 0x01	; 1
     f2c:	81 e0       	ldi	r24, 0x01	; 1
     f2e:	80 83       	st	Z, r24
     f30:	0b c0       	rjmp	.+22     	; 0xf48 <ParseReceived+0x2fa>
     f32:	82 e4       	ldi	r24, 0x42	; 66
     f34:	82 9f       	mul	r24, r18
     f36:	f0 01       	movw	r30, r0
     f38:	83 9f       	mul	r24, r19
     f3a:	f0 0d       	add	r31, r0
     f3c:	11 24       	eor	r1, r1
     f3e:	e0 0f       	add	r30, r16
     f40:	f1 1f       	adc	r31, r17
     f42:	e8 56       	subi	r30, 0x68	; 104
     f44:	ff 4f       	sbci	r31, 0xFF	; 255
     f46:	10 82       	st	Z, r1
     f48:	68 01       	movw	r12, r16
     f4a:	bb e0       	ldi	r27, 0x0B	; 11
     f4c:	cb 1a       	sub	r12, r27
     f4e:	be ef       	ldi	r27, 0xFE	; 254
     f50:	db 0a       	sbc	r13, r27
     f52:	f6 01       	movw	r30, r12
     f54:	20 81       	ld	r18, Z
     f56:	0f 2e       	mov	r0, r31
     f58:	f2 e4       	ldi	r31, 0x42	; 66
     f5a:	bf 2e       	mov	r11, r31
     f5c:	f0 2d       	mov	r31, r0
     f5e:	b2 9e       	mul	r11, r18
     f60:	90 01       	movw	r18, r0
     f62:	11 24       	eor	r1, r1
     f64:	f8 01       	movw	r30, r16
     f66:	e2 0f       	add	r30, r18
     f68:	f3 1f       	adc	r31, r19
     f6a:	df 01       	movw	r26, r30
     f6c:	ab 59       	subi	r26, 0x9B	; 155
     f6e:	bf 4f       	sbci	r27, 0xFF	; 255
     f70:	ef 59       	subi	r30, 0x9F	; 159
     f72:	ff 4f       	sbci	r31, 0xFF	; 255
     f74:	20 80       	ld	r2, Z
     f76:	31 80       	ldd	r3, Z+1	; 0x01
     f78:	42 80       	ldd	r4, Z+2	; 0x02
     f7a:	53 80       	ldd	r5, Z+3	; 0x03
     f7c:	4d 91       	ld	r20, X+
     f7e:	5d 91       	ld	r21, X+
     f80:	6d 91       	ld	r22, X+
     f82:	7c 91       	ld	r23, X
     f84:	13 97       	sbiw	r26, 0x03	; 3
     f86:	42 0d       	add	r20, r2
     f88:	53 1d       	adc	r21, r3
     f8a:	64 1d       	adc	r22, r4
     f8c:	75 1d       	adc	r23, r5
     f8e:	4d 93       	st	X+, r20
     f90:	5d 93       	st	X+, r21
     f92:	6d 93       	st	X+, r22
     f94:	7c 93       	st	X, r23
     f96:	13 97       	sbiw	r26, 0x03	; 3
     f98:	d8 01       	movw	r26, r16
     f9a:	a4 54       	subi	r26, 0x44	; 68
     f9c:	bd 4f       	sbci	r27, 0xFD	; 253
     f9e:	20 80       	ld	r2, Z
     fa0:	31 80       	ldd	r3, Z+1	; 0x01
     fa2:	42 80       	ldd	r4, Z+2	; 0x02
     fa4:	53 80       	ldd	r5, Z+3	; 0x03
     fa6:	4d 91       	ld	r20, X+
     fa8:	5d 91       	ld	r21, X+
     faa:	6d 91       	ld	r22, X+
     fac:	7c 91       	ld	r23, X
     fae:	13 97       	sbiw	r26, 0x03	; 3
     fb0:	42 0d       	add	r20, r2
     fb2:	53 1d       	adc	r21, r3
     fb4:	64 1d       	adc	r22, r4
     fb6:	75 1d       	adc	r23, r5
     fb8:	4d 93       	st	X+, r20
     fba:	5d 93       	st	X+, r21
     fbc:	6d 93       	st	X+, r22
     fbe:	7c 93       	st	X, r23
     fc0:	13 97       	sbiw	r26, 0x03	; 3
     fc2:	89 81       	ldd	r24, Y+1	; 0x01
     fc4:	90 e0       	ldi	r25, 0x00	; 0
     fc6:	01 96       	adiw	r24, 0x01	; 1
     fc8:	09 2e       	mov	r0, r25
     fca:	00 0c       	add	r0, r0
     fcc:	aa 0b       	sbc	r26, r26
     fce:	bb 0b       	sbc	r27, r27
     fd0:	1c 01       	movw	r2, r24
     fd2:	2d 01       	movw	r4, r26
     fd4:	f7 e0       	ldi	r31, 0x07	; 7
     fd6:	2f 0e       	add	r2, r31
     fd8:	31 1c       	adc	r3, r1
     fda:	41 1c       	adc	r4, r1
     fdc:	51 1c       	adc	r5, r1
     fde:	b9 01       	movw	r22, r18
     fe0:	63 5a       	subi	r22, 0xA3	; 163
     fe2:	7f 4f       	sbci	r23, 0xFF	; 255
     fe4:	60 0f       	add	r22, r16
     fe6:	71 1f       	adc	r23, r17
     fe8:	c7 01       	movw	r24, r14
     fea:	82 0d       	add	r24, r2
     fec:	93 1d       	adc	r25, r3
     fee:	ae 01       	movw	r20, r28
     ff0:	4f 5f       	subi	r20, 0xFF	; 255
     ff2:	5f 4f       	sbci	r21, 0xFF	; 255
     ff4:	a2 db       	rcall	.-2236   	; 0x73a <ParseIP>
     ff6:	d6 01       	movw	r26, r12
     ff8:	cc 90       	ld	r12, X
     ffa:	d1 2c       	mov	r13, r1
     ffc:	89 81       	ldd	r24, Y+1	; 0x01
     ffe:	90 e0       	ldi	r25, 0x00	; 0
    1000:	01 96       	adiw	r24, 0x01	; 1
    1002:	09 2e       	mov	r0, r25
    1004:	00 0c       	add	r0, r0
    1006:	aa 0b       	sbc	r26, r26
    1008:	bb 0b       	sbc	r27, r27
    100a:	82 0d       	add	r24, r2
    100c:	93 1d       	adc	r25, r3
    100e:	a4 1d       	adc	r26, r4
    1010:	b5 1d       	adc	r27, r5
    1012:	8e 0d       	add	r24, r14
    1014:	9f 1d       	adc	r25, r15
    1016:	be 01       	movw	r22, r28
    1018:	6f 5f       	subi	r22, 0xFF	; 255
    101a:	7f 4f       	sbci	r23, 0xFF	; 255
    101c:	11 db       	rcall	.-2526   	; 0x640 <ParseNumber>
    101e:	bc 9c       	mul	r11, r12
    1020:	f0 01       	movw	r30, r0
    1022:	bd 9c       	mul	r11, r13
    1024:	f0 0d       	add	r31, r0
    1026:	11 24       	eor	r1, r1
    1028:	e0 0f       	add	r30, r16
    102a:	f1 1f       	adc	r31, r17
    102c:	e5 5a       	subi	r30, 0xA5	; 165
    102e:	ff 4f       	sbci	r31, 0xFF	; 255
    1030:	71 83       	std	Z+1, r23	; 0x01
    1032:	60 83       	st	Z, r22
    1034:	f7 01       	movw	r30, r14
    1036:	80 81       	ld	r24, Z
    1038:	8a 33       	cpi	r24, 0x3A	; 58
    103a:	59 f0       	breq	.+22     	; 0x1052 <ParseReceived+0x404>
    103c:	31 96       	adiw	r30, 0x01	; 1
    103e:	80 e0       	ldi	r24, 0x00	; 0
    1040:	90 e0       	ldi	r25, 0x00	; 0
    1042:	dc 01       	movw	r26, r24
    1044:	01 96       	adiw	r24, 0x01	; 1
    1046:	a1 1d       	adc	r26, r1
    1048:	b1 1d       	adc	r27, r1
    104a:	21 91       	ld	r18, Z+
    104c:	2a 33       	cpi	r18, 0x3A	; 58
    104e:	d1 f7       	brne	.-12     	; 0x1044 <ParseReceived+0x3f6>
    1050:	03 c0       	rjmp	.+6      	; 0x1058 <ParseReceived+0x40a>
    1052:	80 e0       	ldi	r24, 0x00	; 0
    1054:	90 e0       	ldi	r25, 0x00	; 0
    1056:	dc 01       	movw	r26, r24
    1058:	1c 01       	movw	r2, r24
    105a:	2d 01       	movw	r4, r26
    105c:	ff ef       	ldi	r31, 0xFF	; 255
    105e:	2f 1a       	sub	r2, r31
    1060:	3f 0a       	sbc	r3, r31
    1062:	4f 0a       	sbc	r4, r31
    1064:	5f 0a       	sbc	r5, r31
    1066:	63 01       	movw	r12, r6
    1068:	c2 18       	sub	r12, r2
    106a:	d3 08       	sbc	r13, r3
    106c:	58 01       	movw	r10, r16
    106e:	2b e0       	ldi	r18, 0x0B	; 11
    1070:	a2 1a       	sub	r10, r18
    1072:	2e ef       	ldi	r18, 0xFE	; 254
    1074:	b2 0a       	sbc	r11, r18
    1076:	d5 01       	movw	r26, r10
    1078:	8c 91       	ld	r24, X
    107a:	0f 2e       	mov	r0, r31
    107c:	f2 e4       	ldi	r31, 0x42	; 66
    107e:	9f 2e       	mov	r9, r31
    1080:	f0 2d       	mov	r31, r0
    1082:	f8 01       	movw	r30, r16
    1084:	98 9e       	mul	r9, r24
    1086:	e0 0d       	add	r30, r0
    1088:	f1 1d       	adc	r31, r1
    108a:	11 24       	eor	r1, r1
    108c:	e5 59       	subi	r30, 0x95	; 149
    108e:	ff 4f       	sbci	r31, 0xFF	; 255
    1090:	b7 01       	movw	r22, r14
    1092:	62 0d       	add	r22, r2
    1094:	73 1d       	adc	r23, r3
    1096:	a6 01       	movw	r20, r12
    1098:	80 81       	ld	r24, Z
    109a:	91 81       	ldd	r25, Z+1	; 0x01
    109c:	0e 94 15 1b 	call	0x362a	; 0x362a <memcpy>
    10a0:	f5 01       	movw	r30, r10
    10a2:	80 81       	ld	r24, Z
    10a4:	28 2f       	mov	r18, r24
    10a6:	30 e0       	ldi	r19, 0x00	; 0
    10a8:	f8 01       	movw	r30, r16
    10aa:	98 9e       	mul	r9, r24
    10ac:	e0 0d       	add	r30, r0
    10ae:	f1 1d       	adc	r31, r1
    10b0:	11 24       	eor	r1, r1
    10b2:	ef 59       	subi	r30, 0x9F	; 159
    10b4:	ff 4f       	sbci	r31, 0xFF	; 255
    10b6:	40 81       	ld	r20, Z
    10b8:	51 81       	ldd	r21, Z+1	; 0x01
    10ba:	62 81       	ldd	r22, Z+2	; 0x02
    10bc:	73 81       	ldd	r23, Z+3	; 0x03
    10be:	c3 01       	movw	r24, r6
    10c0:	a0 e0       	ldi	r26, 0x00	; 0
    10c2:	b0 e0       	ldi	r27, 0x00	; 0
    10c4:	82 19       	sub	r24, r2
    10c6:	93 09       	sbc	r25, r3
    10c8:	a4 09       	sbc	r26, r4
    10ca:	b5 09       	sbc	r27, r5
    10cc:	48 17       	cp	r20, r24
    10ce:	59 07       	cpc	r21, r25
    10d0:	6a 07       	cpc	r22, r26
    10d2:	7b 07       	cpc	r23, r27
    10d4:	88 f4       	brcc	.+34     	; 0x10f8 <ParseReceived+0x4aa>
    10d6:	e2 e4       	ldi	r30, 0x42	; 66
    10d8:	e2 9f       	mul	r30, r18
    10da:	c0 01       	movw	r24, r0
    10dc:	e3 9f       	mul	r30, r19
    10de:	90 0d       	add	r25, r0
    10e0:	11 24       	eor	r1, r1
    10e2:	80 0f       	add	r24, r16
    10e4:	91 1f       	adc	r25, r17
    10e6:	fc 01       	movw	r30, r24
    10e8:	e5 59       	subi	r30, 0x95	; 149
    10ea:	ff 4f       	sbci	r31, 0xFF	; 255
    10ec:	80 81       	ld	r24, Z
    10ee:	91 81       	ldd	r25, Z+1	; 0x01
    10f0:	fc 01       	movw	r30, r24
    10f2:	e4 0f       	add	r30, r20
    10f4:	f5 1f       	adc	r31, r21
    10f6:	10 82       	st	Z, r1
    10f8:	f8 01       	movw	r30, r16
    10fa:	ed 50       	subi	r30, 0x0D	; 13
    10fc:	fe 4f       	sbci	r31, 0xFE	; 254
    10fe:	d1 82       	std	Z+1, r13	; 0x01
    1100:	c0 82       	st	Z, r12
    1102:	32 97       	sbiw	r30, 0x02	; 2
    1104:	d1 82       	std	Z+1, r13	; 0x01
    1106:	c0 82       	st	Z, r12
    1108:	34 96       	adiw	r30, 0x04	; 4
    110a:	80 81       	ld	r24, Z
    110c:	28 2f       	mov	r18, r24
    110e:	30 e0       	ldi	r19, 0x00	; 0
    1110:	f8 01       	movw	r30, r16
    1112:	42 e4       	ldi	r20, 0x42	; 66
    1114:	84 9f       	mul	r24, r20
    1116:	e0 0d       	add	r30, r0
    1118:	f1 1d       	adc	r31, r1
    111a:	11 24       	eor	r1, r1
    111c:	ef 59       	subi	r30, 0x9F	; 159
    111e:	ff 4f       	sbci	r31, 0xFF	; 255
    1120:	80 81       	ld	r24, Z
    1122:	91 81       	ldd	r25, Z+1	; 0x01
    1124:	a2 81       	ldd	r26, Z+2	; 0x02
    1126:	b3 81       	ldd	r27, Z+3	; 0x03
    1128:	28 16       	cp	r2, r24
    112a:	39 06       	cpc	r3, r25
    112c:	4a 06       	cpc	r4, r26
    112e:	5b 06       	cpc	r5, r27
    1130:	b0 f0       	brcs	.+44     	; 0x115e <ParseReceived+0x510>
    1132:	f8 01       	movw	r30, r16
    1134:	e0 51       	subi	r30, 0x10	; 16
    1136:	fe 4f       	sbci	r31, 0xFE	; 254
    1138:	10 82       	st	Z, r1
    113a:	42 e4       	ldi	r20, 0x42	; 66
    113c:	42 9f       	mul	r20, r18
    113e:	c0 01       	movw	r24, r0
    1140:	43 9f       	mul	r20, r19
    1142:	90 0d       	add	r25, r0
    1144:	11 24       	eor	r1, r1
    1146:	80 0f       	add	r24, r16
    1148:	91 1f       	adc	r25, r17
    114a:	fc 01       	movw	r30, r24
    114c:	e3 59       	subi	r30, 0x93	; 147
    114e:	ff 4f       	sbci	r31, 0xFF	; 255
    1150:	31 82       	std	Z+1, r3	; 0x01
    1152:	20 82       	st	Z, r2
    1154:	32 96       	adiw	r30, 0x02	; 2
    1156:	21 e0       	ldi	r18, 0x01	; 1
    1158:	20 83       	st	Z, r18
    115a:	31 96       	adiw	r30, 0x01	; 1
    115c:	20 83       	st	Z, r18
    115e:	2a e0       	ldi	r18, 0x0A	; 10
    1160:	30 e0       	ldi	r19, 0x00	; 0
    1162:	42 e4       	ldi	r20, 0x42	; 66
    1164:	53 e0       	ldi	r21, 0x03	; 3
    1166:	b3 01       	movw	r22, r6
    1168:	c7 01       	movw	r24, r14
    116a:	40 dd       	rcall	.-1408   	; 0xbec <mem_mem>
    116c:	00 97       	sbiw	r24, 0x00	; 0
    116e:	a1 f1       	breq	.+104    	; 0x11d8 <ParseReceived+0x58a>
    1170:	fc 01       	movw	r30, r24
    1172:	42 91       	ld	r20, -Z
    1174:	50 e0       	ldi	r21, 0x00	; 0
    1176:	40 53       	subi	r20, 0x30	; 48
    1178:	51 09       	sbc	r21, r1
    117a:	82 e4       	ldi	r24, 0x42	; 66
    117c:	84 9f       	mul	r24, r20
    117e:	90 01       	movw	r18, r0
    1180:	85 9f       	mul	r24, r21
    1182:	30 0d       	add	r19, r0
    1184:	11 24       	eor	r1, r1
    1186:	b9 01       	movw	r22, r18
    1188:	68 5a       	subi	r22, 0xA8	; 168
    118a:	7f 4f       	sbci	r23, 0xFF	; 255
    118c:	60 0f       	add	r22, r16
    118e:	71 1f       	adc	r23, r17
    1190:	20 0f       	add	r18, r16
    1192:	31 1f       	adc	r19, r17
    1194:	d9 01       	movw	r26, r18
    1196:	a8 5a       	subi	r26, 0xA8	; 168
    1198:	bf 4f       	sbci	r27, 0xFF	; 255
    119a:	81 e0       	ldi	r24, 0x01	; 1
    119c:	8c 93       	st	X, r24
    119e:	11 96       	adiw	r26, 0x01	; 1
    11a0:	80 81       	ld	r24, Z
    11a2:	80 53       	subi	r24, 0x30	; 48
    11a4:	8c 93       	st	X, r24
    11a6:	f9 01       	movw	r30, r18
    11a8:	e6 5a       	subi	r30, 0xA6	; 166
    11aa:	ff 4f       	sbci	r31, 0xFF	; 255
    11ac:	80 81       	ld	r24, Z
    11ae:	88 23       	and	r24, r24
    11b0:	89 f0       	breq	.+34     	; 0x11d4 <ParseReceived+0x586>
    11b2:	f8 01       	movw	r30, r16
    11b4:	84 81       	ldd	r24, Z+4	; 0x04
    11b6:	95 81       	ldd	r25, Z+5	; 0x05
    11b8:	a6 81       	ldd	r26, Z+6	; 0x06
    11ba:	b7 81       	ldd	r27, Z+7	; 0x07
    11bc:	0a 97       	sbiw	r24, 0x0a	; 10
    11be:	a1 05       	cpc	r26, r1
    11c0:	b1 05       	cpc	r27, r1
    11c2:	21 f4       	brne	.+8      	; 0x11cc <ParseReceived+0x57e>
    11c4:	14 82       	std	Z+4, r1	; 0x04
    11c6:	15 82       	std	Z+5, r1	; 0x05
    11c8:	16 82       	std	Z+6, r1	; 0x06
    11ca:	17 82       	std	Z+7, r1	; 0x07
    11cc:	c8 01       	movw	r24, r16
    11ce:	0e 94 d0 18 	call	0x31a0	; 0x31a0 <ESP8266_Callback_ClientConnectionConnected>
    11d2:	02 c0       	rjmp	.+4      	; 0x11d8 <ParseReceived+0x58a>
    11d4:	c8 01       	movw	r24, r16
    11d6:	ba dc       	rcall	.-1676   	; 0xb4c <ESP8266_Callback_ServerConnectionActive>
    11d8:	6d e4       	ldi	r22, 0x4D	; 77
    11da:	73 e0       	ldi	r23, 0x03	; 3
    11dc:	c7 01       	movw	r24, r14
    11de:	0e 94 4b 1b 	call	0x3696	; 0x3696 <strstr>
    11e2:	89 2b       	or	r24, r25
    11e4:	a1 f0       	breq	.+40     	; 0x120e <ParseReceived+0x5c0>
    11e6:	f8 01       	movw	r30, r16
    11e8:	ea 5a       	subi	r30, 0xAA	; 170
    11ea:	fd 4f       	sbci	r31, 0xFD	; 253
    11ec:	80 81       	ld	r24, Z
    11ee:	28 2f       	mov	r18, r24
    11f0:	08 2e       	mov	r0, r24
    11f2:	00 0c       	add	r0, r0
    11f4:	33 0b       	sbc	r19, r19
    11f6:	3f 93       	push	r19
    11f8:	8f 93       	push	r24
    11fa:	81 e6       	ldi	r24, 0x61	; 97
    11fc:	93 e0       	ldi	r25, 0x03	; 3
    11fe:	9f 93       	push	r25
    1200:	8f 93       	push	r24
    1202:	0e 94 8c 1b 	call	0x3718	; 0x3718 <printf>
    1206:	0f 90       	pop	r0
    1208:	0f 90       	pop	r0
    120a:	0f 90       	pop	r0
    120c:	0f 90       	pop	r0
    120e:	29 e0       	ldi	r18, 0x09	; 9
    1210:	30 e0       	ldi	r19, 0x00	; 0
    1212:	44 e8       	ldi	r20, 0x84	; 132
    1214:	53 e0       	ldi	r21, 0x03	; 3
    1216:	b3 01       	movw	r22, r6
    1218:	c7 01       	movw	r24, r14
    121a:	e8 dc       	rcall	.-1584   	; 0xbec <mem_mem>
    121c:	00 97       	sbiw	r24, 0x00	; 0
    121e:	09 f4       	brne	.+2      	; 0x1222 <ParseReceived+0x5d4>
    1220:	76 c0       	rjmp	.+236    	; 0x130e <ParseReceived+0x6c0>
    1222:	e8 16       	cp	r14, r24
    1224:	f9 06       	cpc	r15, r25
    1226:	09 f4       	brne	.+2      	; 0x122a <ParseReceived+0x5dc>
    1228:	72 c0       	rjmp	.+228    	; 0x130e <ParseReceived+0x6c0>
    122a:	97 01       	movw	r18, r14
    122c:	2f 5f       	subi	r18, 0xFF	; 255
    122e:	3f 4f       	sbci	r19, 0xFF	; 255
    1230:	82 17       	cp	r24, r18
    1232:	93 07       	cpc	r25, r19
    1234:	09 f0       	breq	.+2      	; 0x1238 <ParseReceived+0x5ea>
    1236:	62 c0       	rjmp	.+196    	; 0x12fc <ParseReceived+0x6ae>
    1238:	f7 01       	movw	r30, r14
    123a:	80 81       	ld	r24, Z
    123c:	90 e0       	ldi	r25, 0x00	; 0
    123e:	c0 97       	sbiw	r24, 0x30	; 48
    1240:	32 e4       	ldi	r19, 0x42	; 66
    1242:	38 9f       	mul	r19, r24
    1244:	f0 01       	movw	r30, r0
    1246:	39 9f       	mul	r19, r25
    1248:	f0 0d       	add	r31, r0
    124a:	11 24       	eor	r1, r1
    124c:	e0 0f       	add	r30, r16
    124e:	f1 1f       	adc	r31, r17
    1250:	df 01       	movw	r26, r30
    1252:	a6 5a       	subi	r26, 0xA6	; 166
    1254:	bf 4f       	sbci	r27, 0xFF	; 255
    1256:	2c 91       	ld	r18, X
    1258:	e8 5a       	subi	r30, 0xA8	; 168
    125a:	ff 4f       	sbci	r31, 0xFF	; 255
    125c:	40 81       	ld	r20, Z
    125e:	10 82       	st	Z, r1
    1260:	d7 01       	movw	r26, r14
    1262:	8c 91       	ld	r24, X
    1264:	90 e0       	ldi	r25, 0x00	; 0
    1266:	c0 97       	sbiw	r24, 0x30	; 48
    1268:	38 9f       	mul	r19, r24
    126a:	f0 01       	movw	r30, r0
    126c:	39 9f       	mul	r19, r25
    126e:	f0 0d       	add	r31, r0
    1270:	11 24       	eor	r1, r1
    1272:	e0 0f       	add	r30, r16
    1274:	f1 1f       	adc	r31, r17
    1276:	e6 5a       	subi	r30, 0xA6	; 166
    1278:	ff 4f       	sbci	r31, 0xFF	; 255
    127a:	10 82       	st	Z, r1
    127c:	8c 91       	ld	r24, X
    127e:	90 e0       	ldi	r25, 0x00	; 0
    1280:	c0 97       	sbiw	r24, 0x30	; 48
    1282:	38 9f       	mul	r19, r24
    1284:	f0 01       	movw	r30, r0
    1286:	39 9f       	mul	r19, r25
    1288:	f0 0d       	add	r31, r0
    128a:	11 24       	eor	r1, r1
    128c:	e0 0f       	add	r30, r16
    128e:	f1 1f       	adc	r31, r17
    1290:	e8 56       	subi	r30, 0x68	; 104
    1292:	ff 4f       	sbci	r31, 0xFF	; 255
    1294:	10 82       	st	Z, r1
    1296:	8c 91       	ld	r24, X
    1298:	90 e0       	ldi	r25, 0x00	; 0
    129a:	c0 97       	sbiw	r24, 0x30	; 48
    129c:	38 9f       	mul	r19, r24
    129e:	f0 01       	movw	r30, r0
    12a0:	39 9f       	mul	r19, r25
    12a2:	f0 0d       	add	r31, r0
    12a4:	11 24       	eor	r1, r1
    12a6:	e0 0f       	add	r30, r16
    12a8:	f1 1f       	adc	r31, r17
    12aa:	e9 56       	subi	r30, 0x69	; 105
    12ac:	ff 4f       	sbci	r31, 0xFF	; 255
    12ae:	10 82       	st	Z, r1
    12b0:	44 23       	and	r20, r20
    12b2:	69 f1       	breq	.+90     	; 0x130e <ParseReceived+0x6c0>
    12b4:	22 23       	and	r18, r18
    12b6:	89 f0       	breq	.+34     	; 0x12da <ParseReceived+0x68c>
    12b8:	8c 91       	ld	r24, X
    12ba:	90 e0       	ldi	r25, 0x00	; 0
    12bc:	c0 97       	sbiw	r24, 0x30	; 48
    12be:	22 e4       	ldi	r18, 0x42	; 66
    12c0:	28 9f       	mul	r18, r24
    12c2:	b0 01       	movw	r22, r0
    12c4:	29 9f       	mul	r18, r25
    12c6:	70 0d       	add	r23, r0
    12c8:	11 24       	eor	r1, r1
    12ca:	68 5a       	subi	r22, 0xA8	; 168
    12cc:	7f 4f       	sbci	r23, 0xFF	; 255
    12ce:	60 0f       	add	r22, r16
    12d0:	71 1f       	adc	r23, r17
    12d2:	c8 01       	movw	r24, r16
    12d4:	0e 94 7e 19 	call	0x32fc	; 0x32fc <ESP8266_Callback_ClientConnectionClosed>
    12d8:	1a c0       	rjmp	.+52     	; 0x130e <ParseReceived+0x6c0>
    12da:	f7 01       	movw	r30, r14
    12dc:	80 81       	ld	r24, Z
    12de:	90 e0       	ldi	r25, 0x00	; 0
    12e0:	c0 97       	sbiw	r24, 0x30	; 48
    12e2:	22 e4       	ldi	r18, 0x42	; 66
    12e4:	28 9f       	mul	r18, r24
    12e6:	b0 01       	movw	r22, r0
    12e8:	29 9f       	mul	r18, r25
    12ea:	70 0d       	add	r23, r0
    12ec:	11 24       	eor	r1, r1
    12ee:	68 5a       	subi	r22, 0xA8	; 168
    12f0:	7f 4f       	sbci	r23, 0xFF	; 255
    12f2:	60 0f       	add	r22, r16
    12f4:	71 1f       	adc	r23, r17
    12f6:	c8 01       	movw	r24, r16
    12f8:	2a dc       	rcall	.-1964   	; 0xb4e <ESP8266_Callback_ServerConnectionClosed>
    12fa:	09 c0       	rjmp	.+18     	; 0x130e <ParseReceived+0x6c0>
    12fc:	bc 01       	movw	r22, r24
    12fe:	61 50       	subi	r22, 0x01	; 1
    1300:	71 09       	sbc	r23, r1
    1302:	4a e0       	ldi	r20, 0x0A	; 10
    1304:	50 e0       	ldi	r21, 0x00	; 0
    1306:	8d e8       	ldi	r24, 0x8D	; 141
    1308:	98 e1       	ldi	r25, 0x18	; 24
    130a:	0e 94 db 00 	call	0x1b6	; 0x1b6 <BUFFER_Write>
    130e:	6e e8       	ldi	r22, 0x8E	; 142
    1310:	73 e0       	ldi	r23, 0x03	; 3
    1312:	c7 01       	movw	r24, r14
    1314:	0e 94 4b 1b 	call	0x3696	; 0x3696 <strstr>
    1318:	00 97       	sbiw	r24, 0x00	; 0
    131a:	e9 f1       	breq	.+122    	; 0x1396 <ParseReceived+0x748>
    131c:	dc 01       	movw	r26, r24
    131e:	2e 91       	ld	r18, -X
    1320:	30 e0       	ldi	r19, 0x00	; 0
    1322:	a9 01       	movw	r20, r18
    1324:	40 53       	subi	r20, 0x30	; 48
    1326:	51 09       	sbc	r21, r1
    1328:	82 e4       	ldi	r24, 0x42	; 66
    132a:	84 9f       	mul	r24, r20
    132c:	90 01       	movw	r18, r0
    132e:	85 9f       	mul	r24, r21
    1330:	30 0d       	add	r19, r0
    1332:	11 24       	eor	r1, r1
    1334:	20 0f       	add	r18, r16
    1336:	31 1f       	adc	r19, r17
    1338:	f9 01       	movw	r30, r18
    133a:	e8 5a       	subi	r30, 0xA8	; 168
    133c:	ff 4f       	sbci	r31, 0xFF	; 255
    133e:	10 82       	st	Z, r1
    1340:	b9 01       	movw	r22, r18
    1342:	66 5a       	subi	r22, 0xA6	; 166
    1344:	7f 4f       	sbci	r23, 0xFF	; 255
    1346:	fb 01       	movw	r30, r22
    1348:	10 82       	st	Z, r1
    134a:	fe 96       	adiw	r30, 0x3e	; 62
    134c:	10 82       	st	Z, r1
    134e:	31 97       	sbiw	r30, 0x01	; 1
    1350:	10 82       	st	Z, r1
    1352:	fe 97       	sbiw	r30, 0x3e	; 62
    1354:	8c 91       	ld	r24, X
    1356:	80 53       	subi	r24, 0x30	; 48
    1358:	80 83       	st	Z, r24
    135a:	db 01       	movw	r26, r22
    135c:	8c 91       	ld	r24, X
    135e:	88 23       	and	r24, r24
    1360:	d1 f0       	breq	.+52     	; 0x1396 <ParseReceived+0x748>
    1362:	f8 01       	movw	r30, r16
    1364:	84 81       	ldd	r24, Z+4	; 0x04
    1366:	95 81       	ldd	r25, Z+5	; 0x05
    1368:	a6 81       	ldd	r26, Z+6	; 0x06
    136a:	b7 81       	ldd	r27, Z+7	; 0x07
    136c:	0a 97       	sbiw	r24, 0x0a	; 10
    136e:	a1 05       	cpc	r26, r1
    1370:	b1 05       	cpc	r27, r1
    1372:	21 f4       	brne	.+8      	; 0x137c <ParseReceived+0x72e>
    1374:	14 82       	std	Z+4, r1	; 0x04
    1376:	15 82       	std	Z+5, r1	; 0x05
    1378:	16 82       	std	Z+6, r1	; 0x06
    137a:	17 82       	std	Z+7, r1	; 0x07
    137c:	82 e4       	ldi	r24, 0x42	; 66
    137e:	84 9f       	mul	r24, r20
    1380:	b0 01       	movw	r22, r0
    1382:	85 9f       	mul	r24, r21
    1384:	70 0d       	add	r23, r0
    1386:	11 24       	eor	r1, r1
    1388:	68 5a       	subi	r22, 0xA8	; 168
    138a:	7f 4f       	sbci	r23, 0xFF	; 255
    138c:	60 0f       	add	r22, r16
    138e:	71 1f       	adc	r23, r17
    1390:	c8 01       	movw	r24, r16
    1392:	0e 94 ec 18 	call	0x31d8	; 0x31d8 <ESP8266_Callback_ClientConnectionError>
    1396:	f8 01       	movw	r30, r16
    1398:	84 81       	ldd	r24, Z+4	; 0x04
    139a:	95 81       	ldd	r25, Z+5	; 0x05
    139c:	a6 81       	ldd	r26, Z+6	; 0x06
    139e:	b7 81       	ldd	r27, Z+7	; 0x07
    13a0:	fc 01       	movw	r30, r24
    13a2:	31 97       	sbiw	r30, 0x01	; 1
    13a4:	eb 31       	cpi	r30, 0x1B	; 27
    13a6:	f1 05       	cpc	r31, r1
    13a8:	08 f0       	brcs	.+2      	; 0x13ac <ParseReceived+0x75e>
    13aa:	ab c4       	rjmp	.+2390   	; 0x1d02 <ParseReceived+0x10b4>
    13ac:	88 27       	eor	r24, r24
    13ae:	ee 58       	subi	r30, 0x8E	; 142
    13b0:	ff 4f       	sbci	r31, 0xFF	; 255
    13b2:	8f 4f       	sbci	r24, 0xFF	; 255
    13b4:	0c 94 d0 19 	jmp	0x33a0	; 0x33a0 <__tablejump2__>
    13b8:	69 ed       	ldi	r22, 0xD9	; 217
    13ba:	72 e0       	ldi	r23, 0x02	; 2
    13bc:	c7 01       	movw	r24, r14
    13be:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    13c2:	89 2b       	or	r24, r25
    13c4:	09 f0       	breq	.+2      	; 0x13c8 <ParseReceived+0x77a>
    13c6:	b7 c4       	rjmp	.+2414   	; 0x1d36 <ParseReceived+0x10e8>
    13c8:	d8 01       	movw	r26, r16
    13ca:	14 96       	adiw	r26, 0x04	; 4
    13cc:	1d 92       	st	X+, r1
    13ce:	1d 92       	st	X+, r1
    13d0:	1d 92       	st	X+, r1
    13d2:	1c 92       	st	X, r1
    13d4:	17 97       	sbiw	r26, 0x07	; 7
    13d6:	95 c4       	rjmp	.+2346   	; 0x1d02 <ParseReceived+0x10b4>
    13d8:	47 e0       	ldi	r20, 0x07	; 7
    13da:	50 e0       	ldi	r21, 0x00	; 0
    13dc:	6e e9       	ldi	r22, 0x9E	; 158
    13de:	73 e0       	ldi	r23, 0x03	; 3
    13e0:	c7 01       	movw	r24, r14
    13e2:	0e 94 2e 1b 	call	0x365c	; 0x365c <strncmp>
    13e6:	89 2b       	or	r24, r25
    13e8:	89 f4       	brne	.+34     	; 0x140c <ParseReceived+0x7be>
    13ea:	87 e0       	ldi	r24, 0x07	; 7
    13ec:	e7 e9       	ldi	r30, 0x97	; 151
    13ee:	f3 e0       	ldi	r31, 0x03	; 3
    13f0:	d8 01       	movw	r26, r16
    13f2:	18 96       	adiw	r26, 0x08	; 8
    13f4:	01 90       	ld	r0, Z+
    13f6:	0d 92       	st	X+, r0
    13f8:	8a 95       	dec	r24
    13fa:	e1 f7       	brne	.-8      	; 0x13f4 <ParseReceived+0x7a6>
    13fc:	f8 01       	movw	r30, r16
    13fe:	eb 5a       	subi	r30, 0xAB	; 171
    1400:	fd 4f       	sbci	r31, 0xFD	; 253
    1402:	d7 01       	movw	r26, r14
    1404:	17 96       	adiw	r26, 0x07	; 7
    1406:	8c 91       	ld	r24, X
    1408:	80 53       	subi	r24, 0x30	; 48
    140a:	80 83       	st	Z, r24
    140c:	69 ed       	ldi	r22, 0xD9	; 217
    140e:	72 e0       	ldi	r23, 0x02	; 2
    1410:	c7 01       	movw	r24, r14
    1412:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    1416:	89 2b       	or	r24, r25
    1418:	09 f0       	breq	.+2      	; 0x141c <ParseReceived+0x7ce>
    141a:	bb c4       	rjmp	.+2422   	; 0x1d92 <ParseReceived+0x1144>
    141c:	f8 01       	movw	r30, r16
    141e:	14 82       	std	Z+4, r1	; 0x04
    1420:	15 82       	std	Z+5, r1	; 0x05
    1422:	16 82       	std	Z+6, r1	; 0x06
    1424:	17 82       	std	Z+7, r1	; 0x07
    1426:	67 e9       	ldi	r22, 0x97	; 151
    1428:	73 e0       	ldi	r23, 0x03	; 3
    142a:	c7 01       	movw	r24, r14
    142c:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    1430:	89 2b       	or	r24, r25
    1432:	09 f0       	breq	.+2      	; 0x1436 <ParseReceived+0x7e8>
    1434:	66 c4       	rjmp	.+2252   	; 0x1d02 <ParseReceived+0x10b4>
    1436:	d8 01       	movw	r26, r16
    1438:	14 96       	adiw	r26, 0x04	; 4
    143a:	1d 92       	st	X+, r1
    143c:	1d 92       	st	X+, r1
    143e:	1d 92       	st	X+, r1
    1440:	1c 92       	st	X, r1
    1442:	17 97       	sbiw	r26, 0x07	; 7
    1444:	c8 01       	movw	r24, r16
    1446:	0e 94 45 18 	call	0x308a	; 0x308a <ESP8266_Callback_WifiConnectFailed>
    144a:	5b c4       	rjmp	.+2230   	; 0x1d02 <ParseReceived+0x10b4>
    144c:	4b e0       	ldi	r20, 0x0B	; 11
    144e:	50 e0       	ldi	r21, 0x00	; 0
    1450:	66 ea       	ldi	r22, 0xA6	; 166
    1452:	73 e0       	ldi	r23, 0x03	; 3
    1454:	c7 01       	movw	r24, r14
    1456:	0e 94 2e 1b 	call	0x365c	; 0x365c <strncmp>
    145a:	89 2b       	or	r24, r25
    145c:	09 f0       	breq	.+2      	; 0x1460 <ParseReceived+0x812>
    145e:	75 c0       	rjmp	.+234    	; 0x154a <ParseReceived+0x8fc>
    1460:	62 eb       	ldi	r22, 0xB2	; 178
    1462:	73 e0       	ldi	r23, 0x03	; 3
    1464:	c7 01       	movw	r24, r14
    1466:	0e 94 4b 1b 	call	0x3696	; 0x3696 <strstr>
    146a:	89 2b       	or	r24, r25
    146c:	09 f4       	brne	.+2      	; 0x1470 <ParseReceived+0x822>
    146e:	6d c0       	rjmp	.+218    	; 0x154a <ParseReceived+0x8fc>
    1470:	f7 01       	movw	r30, r14
    1472:	80 81       	ld	r24, Z
    1474:	88 23       	and	r24, r24
    1476:	51 f0       	breq	.+20     	; 0x148c <ParseReceived+0x83e>
    1478:	82 32       	cpi	r24, 0x22	; 34
    147a:	51 f0       	breq	.+20     	; 0x1490 <ParseReceived+0x842>
    147c:	31 96       	adiw	r30, 0x01	; 1
    147e:	df 01       	movw	r26, r30
    1480:	81 91       	ld	r24, Z+
    1482:	88 23       	and	r24, r24
    1484:	31 f0       	breq	.+12     	; 0x1492 <ParseReceived+0x844>
    1486:	82 32       	cpi	r24, 0x22	; 34
    1488:	d1 f7       	brne	.-12     	; 0x147e <ParseReceived+0x830>
    148a:	03 c0       	rjmp	.+6      	; 0x1492 <ParseReceived+0x844>
    148c:	d7 01       	movw	r26, r14
    148e:	01 c0       	rjmp	.+2      	; 0x1492 <ParseReceived+0x844>
    1490:	d7 01       	movw	r26, r14
    1492:	bd 01       	movw	r22, r26
    1494:	6f 5f       	subi	r22, 0xFF	; 255
    1496:	7f 4f       	sbci	r23, 0xFF	; 255
    1498:	11 96       	adiw	r26, 0x01	; 1
    149a:	8c 91       	ld	r24, X
    149c:	11 97       	sbiw	r26, 0x01	; 1
    149e:	88 23       	and	r24, r24
    14a0:	21 f1       	breq	.+72     	; 0x14ea <ParseReceived+0x89c>
    14a2:	ad 01       	movw	r20, r26
    14a4:	4e 5f       	subi	r20, 0xFE	; 254
    14a6:	5f 4f       	sbci	r21, 0xFF	; 255
    14a8:	13 96       	adiw	r26, 0x03	; 3
    14aa:	90 e0       	ldi	r25, 0x00	; 0
    14ac:	10 c0       	rjmp	.+32     	; 0x14ce <ParseReceived+0x880>
    14ae:	21 e0       	ldi	r18, 0x01	; 1
    14b0:	29 0f       	add	r18, r25
    14b2:	ba 01       	movw	r22, r20
    14b4:	f8 01       	movw	r30, r16
    14b6:	e9 0f       	add	r30, r25
    14b8:	f1 1d       	adc	r31, r1
    14ba:	e4 5c       	subi	r30, 0xC4	; 196
    14bc:	fd 4f       	sbci	r31, 0xFD	; 253
    14be:	80 83       	st	Z, r24
    14c0:	fa 01       	movw	r30, r20
    14c2:	81 91       	ld	r24, Z+
    14c4:	af 01       	movw	r20, r30
    14c6:	11 96       	adiw	r26, 0x01	; 1
    14c8:	88 23       	and	r24, r24
    14ca:	81 f0       	breq	.+32     	; 0x14ec <ParseReceived+0x89e>
    14cc:	92 2f       	mov	r25, r18
    14ce:	ba 01       	movw	r22, r20
    14d0:	61 50       	subi	r22, 0x01	; 1
    14d2:	71 09       	sbc	r23, r1
    14d4:	82 32       	cpi	r24, 0x22	; 34
    14d6:	59 f7       	brne	.-42     	; 0x14ae <ParseReceived+0x860>
    14d8:	fa 01       	movw	r30, r20
    14da:	20 81       	ld	r18, Z
    14dc:	2c 32       	cpi	r18, 0x2C	; 44
    14de:	39 f7       	brne	.-50     	; 0x14ae <ParseReceived+0x860>
    14e0:	2c 91       	ld	r18, X
    14e2:	22 32       	cpi	r18, 0x22	; 34
    14e4:	21 f7       	brne	.-56     	; 0x14ae <ParseReceived+0x860>
    14e6:	29 2f       	mov	r18, r25
    14e8:	01 c0       	rjmp	.+2      	; 0x14ec <ParseReceived+0x89e>
    14ea:	20 e0       	ldi	r18, 0x00	; 0
    14ec:	f8 01       	movw	r30, r16
    14ee:	e2 0f       	add	r30, r18
    14f0:	f1 1d       	adc	r31, r1
    14f2:	e4 5c       	subi	r30, 0xC4	; 196
    14f4:	fd 4f       	sbci	r31, 0xFD	; 253
    14f6:	10 82       	st	Z, r1
    14f8:	6b 01       	movw	r12, r22
    14fa:	f3 e0       	ldi	r31, 0x03	; 3
    14fc:	cf 0e       	add	r12, r31
    14fe:	d1 1c       	adc	r13, r1
    1500:	ae 01       	movw	r20, r28
    1502:	4e 5f       	subi	r20, 0xFE	; 254
    1504:	5f 4f       	sbci	r21, 0xFF	; 255
    1506:	b8 01       	movw	r22, r16
    1508:	64 5b       	subi	r22, 0xB4	; 180
    150a:	7d 4f       	sbci	r23, 0xFD	; 253
    150c:	c6 01       	movw	r24, r12
    150e:	67 da       	rcall	.-2866   	; 0x9de <ParseMAC>
    1510:	2a 81       	ldd	r18, Y+2	; 0x02
    1512:	30 e0       	ldi	r19, 0x00	; 0
    1514:	2e 5f       	subi	r18, 0xFE	; 254
    1516:	3f 4f       	sbci	r19, 0xFF	; 255
    1518:	c2 0e       	add	r12, r18
    151a:	d3 1e       	adc	r13, r19
    151c:	be 01       	movw	r22, r28
    151e:	6e 5f       	subi	r22, 0xFE	; 254
    1520:	7f 4f       	sbci	r23, 0xFF	; 255
    1522:	c6 01       	movw	r24, r12
    1524:	8d d8       	rcall	.-3814   	; 0x640 <ParseNumber>
    1526:	f8 01       	movw	r30, r16
    1528:	ee 5a       	subi	r30, 0xAE	; 174
    152a:	fd 4f       	sbci	r31, 0xFD	; 253
    152c:	60 83       	st	Z, r22
    152e:	8a 81       	ldd	r24, Y+2	; 0x02
    1530:	90 e0       	ldi	r25, 0x00	; 0
    1532:	01 96       	adiw	r24, 0x01	; 1
    1534:	be 01       	movw	r22, r28
    1536:	6e 5f       	subi	r22, 0xFE	; 254
    1538:	7f 4f       	sbci	r23, 0xFF	; 255
    153a:	8c 0d       	add	r24, r12
    153c:	9d 1d       	adc	r25, r13
    153e:	80 d8       	rcall	.-3840   	; 0x640 <ParseNumber>
    1540:	f8 01       	movw	r30, r16
    1542:	ed 5a       	subi	r30, 0xAD	; 173
    1544:	fd 4f       	sbci	r31, 0xFD	; 253
    1546:	71 83       	std	Z+1, r23	; 0x01
    1548:	60 83       	st	Z, r22
    154a:	69 ed       	ldi	r22, 0xD9	; 217
    154c:	72 e0       	ldi	r23, 0x02	; 2
    154e:	c7 01       	movw	r24, r14
    1550:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    1554:	89 2b       	or	r24, r25
    1556:	09 f0       	breq	.+2      	; 0x155a <ParseReceived+0x90c>
    1558:	ee c3       	rjmp	.+2012   	; 0x1d36 <ParseReceived+0x10e8>
    155a:	d8 01       	movw	r26, r16
    155c:	14 96       	adiw	r26, 0x04	; 4
    155e:	1d 92       	st	X+, r1
    1560:	1d 92       	st	X+, r1
    1562:	1d 92       	st	X+, r1
    1564:	1c 92       	st	X, r1
    1566:	17 97       	sbiw	r26, 0x07	; 7
    1568:	cc c3       	rjmp	.+1944   	; 0x1d02 <ParseReceived+0x10b4>
    156a:	47 e0       	ldi	r20, 0x07	; 7
    156c:	50 e0       	ldi	r21, 0x00	; 0
    156e:	6a eb       	ldi	r22, 0xBA	; 186
    1570:	73 e0       	ldi	r23, 0x03	; 3
    1572:	c7 01       	movw	r24, r14
    1574:	0e 94 2e 1b 	call	0x365c	; 0x365c <strncmp>
    1578:	89 2b       	or	r24, r25
    157a:	09 f0       	breq	.+2      	; 0x157e <ParseReceived+0x930>
    157c:	ce c0       	rjmp	.+412    	; 0x171a <ParseReceived+0xacc>
    157e:	80 91 80 12 	lds	r24, 0x1280
    1582:	85 30       	cpi	r24, 0x05	; 5
    1584:	08 f0       	brcs	.+2      	; 0x1588 <ParseReceived+0x93a>
    1586:	c9 c0       	rjmp	.+402    	; 0x171a <ParseReceived+0xacc>
    1588:	f7 01       	movw	r30, r14
    158a:	87 81       	ldd	r24, Z+7	; 0x07
    158c:	88 32       	cpi	r24, 0x28	; 40
    158e:	11 f4       	brne	.+4      	; 0x1594 <ParseReceived+0x946>
    1590:	88 e0       	ldi	r24, 0x08	; 8
    1592:	01 c0       	rjmp	.+2      	; 0x1596 <ParseReceived+0x948>
    1594:	87 e0       	ldi	r24, 0x07	; 7
    1596:	62 ec       	ldi	r22, 0xC2	; 194
    1598:	73 e0       	ldi	r23, 0x03	; 3
    159a:	97 01       	movw	r18, r14
    159c:	28 0f       	add	r18, r24
    159e:	31 1d       	adc	r19, r1
    15a0:	c9 01       	movw	r24, r18
    15a2:	0e 94 05 1b 	call	0x360a	; 0x360a <strtok>
    15a6:	9c 01       	movw	r18, r24
    15a8:	89 2b       	or	r24, r25
    15aa:	09 f4       	brne	.+2      	; 0x15ae <ParseReceived+0x960>
    15ac:	b1 c0       	rjmp	.+354    	; 0x1710 <ParseReceived+0xac2>
    15ae:	80 e0       	ldi	r24, 0x00	; 0
    15b0:	0f 2e       	mov	r0, r31
    15b2:	f0 e8       	ldi	r31, 0x80	; 128
    15b4:	8f 2e       	mov	r8, r31
    15b6:	f2 e1       	ldi	r31, 0x12	; 18
    15b8:	9f 2e       	mov	r9, r31
    15ba:	f0 2d       	mov	r31, r0
    15bc:	dd 24       	eor	r13, r13
    15be:	d3 94       	inc	r13
    15c0:	d8 0e       	add	r13, r24
    15c2:	90 e0       	ldi	r25, 0x00	; 0
    15c4:	87 30       	cpi	r24, 0x07	; 7
    15c6:	91 05       	cpc	r25, r1
    15c8:	08 f0       	brcs	.+2      	; 0x15cc <ParseReceived+0x97e>
    15ca:	96 c0       	rjmp	.+300    	; 0x16f8 <ParseReceived+0xaaa>
    15cc:	fc 01       	movw	r30, r24
    15ce:	88 27       	eor	r24, r24
    15d0:	e3 57       	subi	r30, 0x73	; 115
    15d2:	ff 4f       	sbci	r31, 0xFF	; 255
    15d4:	8f 4f       	sbci	r24, 0xFF	; 255
    15d6:	0c 94 d0 19 	jmp	0x33a0	; 0x33a0 <__tablejump2__>
    15da:	d4 01       	movw	r26, r8
    15dc:	ac 90       	ld	r10, X
    15de:	b1 2c       	mov	r11, r1
    15e0:	60 e0       	ldi	r22, 0x00	; 0
    15e2:	70 e0       	ldi	r23, 0x00	; 0
    15e4:	c9 01       	movw	r24, r18
    15e6:	2c d8       	rcall	.-4008   	; 0x640 <ParseNumber>
    15e8:	f5 01       	movw	r30, r10
    15ea:	ee 0f       	add	r30, r30
    15ec:	ff 1f       	adc	r31, r31
    15ee:	e2 95       	swap	r30
    15f0:	f2 95       	swap	r31
    15f2:	f0 7f       	andi	r31, 0xF0	; 240
    15f4:	fe 27       	eor	r31, r30
    15f6:	e0 7f       	andi	r30, 0xF0	; 240
    15f8:	fe 27       	eor	r31, r30
    15fa:	e0 5c       	subi	r30, 0xC0	; 192
    15fc:	fe 4e       	sbci	r31, 0xEE	; 238
    15fe:	60 83       	st	Z, r22
    1600:	7b c0       	rjmp	.+246    	; 0x16f8 <ParseReceived+0xaaa>
    1602:	b9 01       	movw	r22, r18
    1604:	6f 5f       	subi	r22, 0xFF	; 255
    1606:	7f 4f       	sbci	r23, 0xFF	; 255
    1608:	fb 01       	movw	r30, r22
    160a:	01 90       	ld	r0, Z+
    160c:	00 20       	and	r0, r0
    160e:	e9 f7       	brne	.-6      	; 0x160a <ParseReceived+0x9bc>
    1610:	32 97       	sbiw	r30, 0x02	; 2
    1612:	10 82       	st	Z, r1
    1614:	f4 01       	movw	r30, r8
    1616:	80 81       	ld	r24, Z
    1618:	f0 e2       	ldi	r31, 0x20	; 32
    161a:	8f 9f       	mul	r24, r31
    161c:	c0 01       	movw	r24, r0
    161e:	11 24       	eor	r1, r1
    1620:	8f 5b       	subi	r24, 0xBF	; 191
    1622:	9e 4e       	sbci	r25, 0xEE	; 238
    1624:	0e 94 27 1b 	call	0x364e	; 0x364e <strcpy>
    1628:	67 c0       	rjmp	.+206    	; 0x16f8 <ParseReceived+0xaaa>
    162a:	d4 01       	movw	r26, r8
    162c:	ac 90       	ld	r10, X
    162e:	b1 2c       	mov	r11, r1
    1630:	60 e0       	ldi	r22, 0x00	; 0
    1632:	70 e0       	ldi	r23, 0x00	; 0
    1634:	c9 01       	movw	r24, r18
    1636:	04 d8       	rcall	.-4088   	; 0x640 <ParseNumber>
    1638:	f5 01       	movw	r30, r10
    163a:	ee 0f       	add	r30, r30
    163c:	ff 1f       	adc	r31, r31
    163e:	e2 95       	swap	r30
    1640:	f2 95       	swap	r31
    1642:	f0 7f       	andi	r31, 0xF0	; 240
    1644:	fe 27       	eor	r31, r30
    1646:	e0 7f       	andi	r30, 0xF0	; 240
    1648:	fe 27       	eor	r31, r30
    164a:	e0 5c       	subi	r30, 0xC0	; 192
    164c:	fe 4e       	sbci	r31, 0xEE	; 238
    164e:	76 8b       	std	Z+22, r23	; 0x16
    1650:	65 8b       	std	Z+21, r22	; 0x15
    1652:	52 c0       	rjmp	.+164    	; 0x16f8 <ParseReceived+0xaaa>
    1654:	c9 01       	movw	r24, r18
    1656:	01 96       	adiw	r24, 0x01	; 1
    1658:	fc 01       	movw	r30, r24
    165a:	01 90       	ld	r0, Z+
    165c:	00 20       	and	r0, r0
    165e:	e9 f7       	brne	.-6      	; 0x165a <ParseReceived+0xa0c>
    1660:	32 97       	sbiw	r30, 0x02	; 2
    1662:	10 82       	st	Z, r1
    1664:	f4 01       	movw	r30, r8
    1666:	60 81       	ld	r22, Z
    1668:	f0 e2       	ldi	r31, 0x20	; 32
    166a:	6f 9f       	mul	r22, r31
    166c:	b0 01       	movw	r22, r0
    166e:	11 24       	eor	r1, r1
    1670:	69 5a       	subi	r22, 0xA9	; 169
    1672:	7e 4e       	sbci	r23, 0xEE	; 238
    1674:	40 e0       	ldi	r20, 0x00	; 0
    1676:	50 e0       	ldi	r21, 0x00	; 0
    1678:	b2 d9       	rcall	.-3228   	; 0x9de <ParseMAC>
    167a:	3e c0       	rjmp	.+124    	; 0x16f8 <ParseReceived+0xaaa>
    167c:	d4 01       	movw	r26, r8
    167e:	ac 90       	ld	r10, X
    1680:	b1 2c       	mov	r11, r1
    1682:	60 e0       	ldi	r22, 0x00	; 0
    1684:	70 e0       	ldi	r23, 0x00	; 0
    1686:	c9 01       	movw	r24, r18
    1688:	0e 94 20 03 	call	0x640	; 0x640 <ParseNumber>
    168c:	f5 01       	movw	r30, r10
    168e:	ee 0f       	add	r30, r30
    1690:	ff 1f       	adc	r31, r31
    1692:	e2 95       	swap	r30
    1694:	f2 95       	swap	r31
    1696:	f0 7f       	andi	r31, 0xF0	; 240
    1698:	fe 27       	eor	r31, r30
    169a:	e0 7f       	andi	r30, 0xF0	; 240
    169c:	fe 27       	eor	r31, r30
    169e:	e0 5c       	subi	r30, 0xC0	; 192
    16a0:	fe 4e       	sbci	r31, 0xEE	; 238
    16a2:	65 8f       	std	Z+29, r22	; 0x1d
    16a4:	29 c0       	rjmp	.+82     	; 0x16f8 <ParseReceived+0xaaa>
    16a6:	f4 01       	movw	r30, r8
    16a8:	a0 80       	ld	r10, Z
    16aa:	b1 2c       	mov	r11, r1
    16ac:	60 e0       	ldi	r22, 0x00	; 0
    16ae:	70 e0       	ldi	r23, 0x00	; 0
    16b0:	c9 01       	movw	r24, r18
    16b2:	0e 94 20 03 	call	0x640	; 0x640 <ParseNumber>
    16b6:	f5 01       	movw	r30, r10
    16b8:	ee 0f       	add	r30, r30
    16ba:	ff 1f       	adc	r31, r31
    16bc:	e2 95       	swap	r30
    16be:	f2 95       	swap	r31
    16c0:	f0 7f       	andi	r31, 0xF0	; 240
    16c2:	fe 27       	eor	r31, r30
    16c4:	e0 7f       	andi	r30, 0xF0	; 240
    16c6:	fe 27       	eor	r31, r30
    16c8:	e0 5c       	subi	r30, 0xC0	; 192
    16ca:	fe 4e       	sbci	r31, 0xEE	; 238
    16cc:	66 8f       	std	Z+30, r22	; 0x1e
    16ce:	14 c0       	rjmp	.+40     	; 0x16f8 <ParseReceived+0xaaa>
    16d0:	d4 01       	movw	r26, r8
    16d2:	ac 90       	ld	r10, X
    16d4:	b1 2c       	mov	r11, r1
    16d6:	60 e0       	ldi	r22, 0x00	; 0
    16d8:	70 e0       	ldi	r23, 0x00	; 0
    16da:	c9 01       	movw	r24, r18
    16dc:	0e 94 20 03 	call	0x640	; 0x640 <ParseNumber>
    16e0:	f5 01       	movw	r30, r10
    16e2:	ee 0f       	add	r30, r30
    16e4:	ff 1f       	adc	r31, r31
    16e6:	e2 95       	swap	r30
    16e8:	f2 95       	swap	r31
    16ea:	f0 7f       	andi	r31, 0xF0	; 240
    16ec:	fe 27       	eor	r31, r30
    16ee:	e0 7f       	andi	r30, 0xF0	; 240
    16f0:	fe 27       	eor	r31, r30
    16f2:	e0 5c       	subi	r30, 0xC0	; 192
    16f4:	fe 4e       	sbci	r31, 0xEE	; 238
    16f6:	67 8f       	std	Z+31, r22	; 0x1f
    16f8:	62 ec       	ldi	r22, 0xC2	; 194
    16fa:	73 e0       	ldi	r23, 0x03	; 3
    16fc:	80 e0       	ldi	r24, 0x00	; 0
    16fe:	90 e0       	ldi	r25, 0x00	; 0
    1700:	0e 94 05 1b 	call	0x360a	; 0x360a <strtok>
    1704:	9c 01       	movw	r18, r24
    1706:	8d 2d       	mov	r24, r13
    1708:	21 15       	cp	r18, r1
    170a:	31 05       	cpc	r19, r1
    170c:	09 f0       	breq	.+2      	; 0x1710 <ParseReceived+0xac2>
    170e:	56 cf       	rjmp	.-340    	; 0x15bc <ParseReceived+0x96e>
    1710:	e0 e8       	ldi	r30, 0x80	; 128
    1712:	f2 e1       	ldi	r31, 0x12	; 18
    1714:	80 81       	ld	r24, Z
    1716:	8f 5f       	subi	r24, 0xFF	; 255
    1718:	80 83       	st	Z, r24
    171a:	69 ed       	ldi	r22, 0xD9	; 217
    171c:	72 e0       	ldi	r23, 0x02	; 2
    171e:	c7 01       	movw	r24, r14
    1720:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    1724:	89 2b       	or	r24, r25
    1726:	09 f0       	breq	.+2      	; 0x172a <ParseReceived+0xadc>
    1728:	06 c3       	rjmp	.+1548   	; 0x1d36 <ParseReceived+0x10e8>
    172a:	f8 01       	movw	r30, r16
    172c:	14 82       	std	Z+4, r1	; 0x04
    172e:	15 82       	std	Z+5, r1	; 0x05
    1730:	16 82       	std	Z+6, r1	; 0x06
    1732:	17 82       	std	Z+7, r1	; 0x07
    1734:	60 e4       	ldi	r22, 0x40	; 64
    1736:	71 e1       	ldi	r23, 0x11	; 17
    1738:	c8 01       	movw	r24, r16
    173a:	0e 94 8b 18 	call	0x3116	; 0x3116 <ESP8266_Callback_WifiDetected>
    173e:	e1 c2       	rjmp	.+1474   	; 0x1d02 <ParseReceived+0x10b4>
    1740:	46 e0       	ldi	r20, 0x06	; 6
    1742:	50 e0       	ldi	r21, 0x00	; 0
    1744:	6d e0       	ldi	r22, 0x0D	; 13
    1746:	76 e0       	ldi	r23, 0x06	; 6
    1748:	c7 01       	movw	r24, r14
    174a:	0e 94 2e 1b 	call	0x365c	; 0x365c <strncmp>
    174e:	89 2b       	or	r24, r25
    1750:	09 f0       	breq	.+2      	; 0x1754 <ParseReceived+0xb06>
    1752:	ba c0       	rjmp	.+372    	; 0x18c8 <ParseReceived+0xc7a>
    1754:	d7 01       	movw	r26, r14
    1756:	8c 91       	ld	r24, X
    1758:	88 23       	and	r24, r24
    175a:	59 f0       	breq	.+22     	; 0x1772 <ParseReceived+0xb24>
    175c:	8a 33       	cpi	r24, 0x3A	; 58
    175e:	59 f0       	breq	.+22     	; 0x1776 <ParseReceived+0xb28>
    1760:	11 96       	adiw	r26, 0x01	; 1
    1762:	02 c0       	rjmp	.+4      	; 0x1768 <ParseReceived+0xb1a>
    1764:	8a 33       	cpi	r24, 0x3A	; 58
    1766:	41 f0       	breq	.+16     	; 0x1778 <ParseReceived+0xb2a>
    1768:	fd 01       	movw	r30, r26
    176a:	8d 91       	ld	r24, X+
    176c:	81 11       	cpse	r24, r1
    176e:	fa cf       	rjmp	.-12     	; 0x1764 <ParseReceived+0xb16>
    1770:	03 c0       	rjmp	.+6      	; 0x1778 <ParseReceived+0xb2a>
    1772:	f7 01       	movw	r30, r14
    1774:	01 c0       	rjmp	.+2      	; 0x1778 <ParseReceived+0xb2a>
    1776:	f7 01       	movw	r30, r14
    1778:	30 97       	sbiw	r30, 0x00	; 0
    177a:	09 f4       	brne	.+2      	; 0x177e <ParseReceived+0xb30>
    177c:	a5 c0       	rjmp	.+330    	; 0x18c8 <ParseReceived+0xc7a>
    177e:	d8 01       	movw	r26, r16
    1780:	a8 53       	subi	r26, 0x38	; 56
    1782:	be 4f       	sbci	r27, 0xFE	; 254
    1784:	1c 92       	st	X, r1
    1786:	81 81       	ldd	r24, Z+1	; 0x01
    1788:	82 32       	cpi	r24, 0x22	; 34
    178a:	29 f0       	breq	.+10     	; 0x1796 <ParseReceived+0xb48>
    178c:	6f 01       	movw	r12, r30
    178e:	bf ef       	ldi	r27, 0xFF	; 255
    1790:	cb 1a       	sub	r12, r27
    1792:	db 0a       	sbc	r13, r27
    1794:	04 c0       	rjmp	.+8      	; 0x179e <ParseReceived+0xb50>
    1796:	6f 01       	movw	r12, r30
    1798:	22 e0       	ldi	r18, 0x02	; 2
    179a:	c2 0e       	add	r12, r18
    179c:	d1 1c       	adc	r13, r1
    179e:	d6 01       	movw	r26, r12
    17a0:	8c 91       	ld	r24, X
    17a2:	88 23       	and	r24, r24
    17a4:	29 f1       	breq	.+74     	; 0x17f0 <ParseReceived+0xba2>
    17a6:	11 96       	adiw	r26, 0x01	; 1
    17a8:	b6 01       	movw	r22, r12
    17aa:	6e 5f       	subi	r22, 0xFE	; 254
    17ac:	7f 4f       	sbci	r23, 0xFF	; 255
    17ae:	90 e0       	ldi	r25, 0x00	; 0
    17b0:	10 c0       	rjmp	.+32     	; 0x17d2 <ParseReceived+0xb84>
    17b2:	41 e0       	ldi	r20, 0x01	; 1
    17b4:	49 0f       	add	r20, r25
    17b6:	6d 01       	movw	r12, r26
    17b8:	98 01       	movw	r18, r16
    17ba:	29 0f       	add	r18, r25
    17bc:	31 1d       	adc	r19, r1
    17be:	28 53       	subi	r18, 0x38	; 56
    17c0:	3e 4f       	sbci	r19, 0xFE	; 254
    17c2:	f9 01       	movw	r30, r18
    17c4:	80 83       	st	Z, r24
    17c6:	8d 91       	ld	r24, X+
    17c8:	6f 5f       	subi	r22, 0xFF	; 255
    17ca:	7f 4f       	sbci	r23, 0xFF	; 255
    17cc:	88 23       	and	r24, r24
    17ce:	89 f0       	breq	.+34     	; 0x17f2 <ParseReceived+0xba4>
    17d0:	94 2f       	mov	r25, r20
    17d2:	6d 01       	movw	r12, r26
    17d4:	f1 e0       	ldi	r31, 0x01	; 1
    17d6:	cf 1a       	sub	r12, r31
    17d8:	d1 08       	sbc	r13, r1
    17da:	82 32       	cpi	r24, 0x22	; 34
    17dc:	51 f7       	brne	.-44     	; 0x17b2 <ParseReceived+0xb64>
    17de:	2c 91       	ld	r18, X
    17e0:	2c 32       	cpi	r18, 0x2C	; 44
    17e2:	39 f7       	brne	.-50     	; 0x17b2 <ParseReceived+0xb64>
    17e4:	fb 01       	movw	r30, r22
    17e6:	20 81       	ld	r18, Z
    17e8:	22 32       	cpi	r18, 0x22	; 34
    17ea:	19 f7       	brne	.-58     	; 0x17b2 <ParseReceived+0xb64>
    17ec:	49 2f       	mov	r20, r25
    17ee:	01 c0       	rjmp	.+2      	; 0x17f2 <ParseReceived+0xba4>
    17f0:	40 e0       	ldi	r20, 0x00	; 0
    17f2:	d8 01       	movw	r26, r16
    17f4:	a4 0f       	add	r26, r20
    17f6:	b1 1d       	adc	r27, r1
    17f8:	a8 53       	subi	r26, 0x38	; 56
    17fa:	be 4f       	sbci	r27, 0xFE	; 254
    17fc:	1c 92       	st	X, r1
    17fe:	a6 01       	movw	r20, r12
    1800:	4d 5f       	subi	r20, 0xFD	; 253
    1802:	5f 4f       	sbci	r21, 0xFF	; 255
    1804:	d6 01       	movw	r26, r12
    1806:	13 96       	adiw	r26, 0x03	; 3
    1808:	8c 91       	ld	r24, X
    180a:	88 23       	and	r24, r24
    180c:	d9 f0       	breq	.+54     	; 0x1844 <ParseReceived+0xbf6>
    180e:	f6 01       	movw	r30, r12
    1810:	34 96       	adiw	r30, 0x04	; 4
    1812:	90 e0       	ldi	r25, 0x00	; 0
    1814:	0d c0       	rjmp	.+26     	; 0x1830 <ParseReceived+0xbe2>
    1816:	21 e0       	ldi	r18, 0x01	; 1
    1818:	29 0f       	add	r18, r25
    181a:	af 01       	movw	r20, r30
    181c:	d8 01       	movw	r26, r16
    181e:	a9 0f       	add	r26, r25
    1820:	b1 1d       	adc	r27, r1
    1822:	a4 52       	subi	r26, 0x24	; 36
    1824:	be 4f       	sbci	r27, 0xFE	; 254
    1826:	8c 93       	st	X, r24
    1828:	81 91       	ld	r24, Z+
    182a:	88 23       	and	r24, r24
    182c:	61 f0       	breq	.+24     	; 0x1846 <ParseReceived+0xbf8>
    182e:	92 2f       	mov	r25, r18
    1830:	af 01       	movw	r20, r30
    1832:	41 50       	subi	r20, 0x01	; 1
    1834:	51 09       	sbc	r21, r1
    1836:	82 32       	cpi	r24, 0x22	; 34
    1838:	71 f7       	brne	.-36     	; 0x1816 <ParseReceived+0xbc8>
    183a:	20 81       	ld	r18, Z
    183c:	2c 32       	cpi	r18, 0x2C	; 44
    183e:	59 f7       	brne	.-42     	; 0x1816 <ParseReceived+0xbc8>
    1840:	29 2f       	mov	r18, r25
    1842:	01 c0       	rjmp	.+2      	; 0x1846 <ParseReceived+0xbf8>
    1844:	20 e0       	ldi	r18, 0x00	; 0
    1846:	f8 01       	movw	r30, r16
    1848:	e2 0f       	add	r30, r18
    184a:	f1 1d       	adc	r31, r1
    184c:	e4 52       	subi	r30, 0x24	; 36
    184e:	fe 4f       	sbci	r31, 0xFE	; 254
    1850:	10 82       	st	Z, r1
    1852:	6a 01       	movw	r12, r20
    1854:	b2 e0       	ldi	r27, 0x02	; 2
    1856:	cb 0e       	add	r12, r27
    1858:	d1 1c       	adc	r13, r1
    185a:	be 01       	movw	r22, r28
    185c:	6e 5f       	subi	r22, 0xFE	; 254
    185e:	7f 4f       	sbci	r23, 0xFF	; 255
    1860:	c6 01       	movw	r24, r12
    1862:	0e 94 20 03 	call	0x640	; 0x640 <ParseNumber>
    1866:	f8 01       	movw	r30, r16
    1868:	e3 51       	subi	r30, 0x13	; 19
    186a:	fe 4f       	sbci	r31, 0xFE	; 254
    186c:	60 83       	st	Z, r22
    186e:	4a 81       	ldd	r20, Y+2	; 0x02
    1870:	50 e0       	ldi	r21, 0x00	; 0
    1872:	4f 5f       	subi	r20, 0xFF	; 255
    1874:	5f 4f       	sbci	r21, 0xFF	; 255
    1876:	c4 0e       	add	r12, r20
    1878:	d5 1e       	adc	r13, r21
    187a:	be 01       	movw	r22, r28
    187c:	6e 5f       	subi	r22, 0xFE	; 254
    187e:	7f 4f       	sbci	r23, 0xFF	; 255
    1880:	c6 01       	movw	r24, r12
    1882:	0e 94 20 03 	call	0x640	; 0x640 <ParseNumber>
    1886:	f8 01       	movw	r30, r16
    1888:	e4 51       	subi	r30, 0x14	; 20
    188a:	fe 4f       	sbci	r31, 0xFE	; 254
    188c:	60 83       	st	Z, r22
    188e:	8a 81       	ldd	r24, Y+2	; 0x02
    1890:	90 e0       	ldi	r25, 0x00	; 0
    1892:	01 96       	adiw	r24, 0x01	; 1
    1894:	c8 0e       	add	r12, r24
    1896:	d9 1e       	adc	r13, r25
    1898:	be 01       	movw	r22, r28
    189a:	6e 5f       	subi	r22, 0xFE	; 254
    189c:	7f 4f       	sbci	r23, 0xFF	; 255
    189e:	c6 01       	movw	r24, r12
    18a0:	0e 94 20 03 	call	0x640	; 0x640 <ParseNumber>
    18a4:	f8 01       	movw	r30, r16
    18a6:	e2 51       	subi	r30, 0x12	; 18
    18a8:	fe 4f       	sbci	r31, 0xFE	; 254
    18aa:	60 83       	st	Z, r22
    18ac:	8a 81       	ldd	r24, Y+2	; 0x02
    18ae:	90 e0       	ldi	r25, 0x00	; 0
    18b0:	01 96       	adiw	r24, 0x01	; 1
    18b2:	be 01       	movw	r22, r28
    18b4:	6e 5f       	subi	r22, 0xFE	; 254
    18b6:	7f 4f       	sbci	r23, 0xFF	; 255
    18b8:	8c 0d       	add	r24, r12
    18ba:	9d 1d       	adc	r25, r13
    18bc:	0e 94 20 03 	call	0x640	; 0x640 <ParseNumber>
    18c0:	f8 01       	movw	r30, r16
    18c2:	e1 51       	subi	r30, 0x11	; 17
    18c4:	fe 4f       	sbci	r31, 0xFE	; 254
    18c6:	60 83       	st	Z, r22
    18c8:	69 ed       	ldi	r22, 0xD9	; 217
    18ca:	72 e0       	ldi	r23, 0x02	; 2
    18cc:	c7 01       	movw	r24, r14
    18ce:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    18d2:	89 2b       	or	r24, r25
    18d4:	09 f0       	breq	.+2      	; 0x18d8 <ParseReceived+0xc8a>
    18d6:	2f c2       	rjmp	.+1118   	; 0x1d36 <ParseReceived+0x10e8>
    18d8:	f8 01       	movw	r30, r16
    18da:	14 82       	std	Z+4, r1	; 0x04
    18dc:	15 82       	std	Z+5, r1	; 0x05
    18de:	16 82       	std	Z+6, r1	; 0x06
    18e0:	17 82       	std	Z+7, r1	; 0x07
    18e2:	0f c2       	rjmp	.+1054   	; 0x1d02 <ParseReceived+0x10b4>
    18e4:	47 e0       	ldi	r20, 0x07	; 7
    18e6:	50 e0       	ldi	r21, 0x00	; 0
    18e8:	64 ec       	ldi	r22, 0xC4	; 196
    18ea:	73 e0       	ldi	r23, 0x03	; 3
    18ec:	c7 01       	movw	r24, r14
    18ee:	0e 94 2e 1b 	call	0x365c	; 0x365c <strncmp>
    18f2:	89 2b       	or	r24, r25
    18f4:	21 f4       	brne	.+8      	; 0x18fe <ParseReceived+0xcb0>
    18f6:	b7 01       	movw	r22, r14
    18f8:	c8 01       	movw	r24, r16
    18fa:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <ParseCIPSTA>
    18fe:	69 ed       	ldi	r22, 0xD9	; 217
    1900:	72 e0       	ldi	r23, 0x02	; 2
    1902:	c7 01       	movw	r24, r14
    1904:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    1908:	89 2b       	or	r24, r25
    190a:	09 f0       	breq	.+2      	; 0x190e <ParseReceived+0xcc0>
    190c:	14 c2       	rjmp	.+1064   	; 0x1d36 <ParseReceived+0x10e8>
    190e:	d8 01       	movw	r26, r16
    1910:	14 96       	adiw	r26, 0x04	; 4
    1912:	1d 92       	st	X+, r1
    1914:	1d 92       	st	X+, r1
    1916:	1d 92       	st	X+, r1
    1918:	1c 92       	st	X, r1
    191a:	17 97       	sbiw	r26, 0x07	; 7
    191c:	c8 01       	movw	r24, r16
    191e:	0e 94 6b 18 	call	0x30d6	; 0x30d6 <ESP8266_Callback_WifiIPSet>
    1922:	ef c1       	rjmp	.+990    	; 0x1d02 <ParseReceived+0x10b4>
    1924:	46 e0       	ldi	r20, 0x06	; 6
    1926:	50 e0       	ldi	r21, 0x00	; 0
    1928:	6c ec       	ldi	r22, 0xCC	; 204
    192a:	73 e0       	ldi	r23, 0x03	; 3
    192c:	c7 01       	movw	r24, r14
    192e:	0e 94 2e 1b 	call	0x365c	; 0x365c <strncmp>
    1932:	89 2b       	or	r24, r25
    1934:	21 f4       	brne	.+8      	; 0x193e <ParseReceived+0xcf0>
    1936:	b7 01       	movw	r22, r14
    1938:	c8 01       	movw	r24, r16
    193a:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <ParseCIPSTA>
    193e:	69 ed       	ldi	r22, 0xD9	; 217
    1940:	72 e0       	ldi	r23, 0x02	; 2
    1942:	c7 01       	movw	r24, r14
    1944:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    1948:	89 2b       	or	r24, r25
    194a:	09 f0       	breq	.+2      	; 0x194e <ParseReceived+0xd00>
    194c:	f4 c1       	rjmp	.+1000   	; 0x1d36 <ParseReceived+0x10e8>
    194e:	f8 01       	movw	r30, r16
    1950:	14 82       	std	Z+4, r1	; 0x04
    1952:	15 82       	std	Z+5, r1	; 0x05
    1954:	16 82       	std	Z+6, r1	; 0x06
    1956:	17 82       	std	Z+7, r1	; 0x07
    1958:	d4 c1       	rjmp	.+936    	; 0x1d02 <ParseReceived+0x10b4>
    195a:	69 ed       	ldi	r22, 0xD9	; 217
    195c:	72 e0       	ldi	r23, 0x02	; 2
    195e:	c7 01       	movw	r24, r14
    1960:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    1964:	89 2b       	or	r24, r25
    1966:	09 f0       	breq	.+2      	; 0x196a <ParseReceived+0xd1c>
    1968:	e6 c1       	rjmp	.+972    	; 0x1d36 <ParseReceived+0x10e8>
    196a:	d8 01       	movw	r26, r16
    196c:	14 96       	adiw	r26, 0x04	; 4
    196e:	1d 92       	st	X+, r1
    1970:	1d 92       	st	X+, r1
    1972:	1d 92       	st	X+, r1
    1974:	1c 92       	st	X, r1
    1976:	17 97       	sbiw	r26, 0x07	; 7
    1978:	f8 01       	movw	r30, r16
    197a:	ea 53       	subi	r30, 0x3A	; 58
    197c:	fe 4f       	sbci	r31, 0xFE	; 254
    197e:	80 81       	ld	r24, Z
    1980:	31 96       	adiw	r30, 0x01	; 1
    1982:	80 83       	st	Z, r24
    1984:	be c1       	rjmp	.+892    	; 0x1d02 <ParseReceived+0x10b4>
    1986:	69 ed       	ldi	r22, 0xD9	; 217
    1988:	72 e0       	ldi	r23, 0x02	; 2
    198a:	c7 01       	movw	r24, r14
    198c:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    1990:	89 2b       	or	r24, r25
    1992:	09 f0       	breq	.+2      	; 0x1996 <ParseReceived+0xd48>
    1994:	d0 c1       	rjmp	.+928    	; 0x1d36 <ParseReceived+0x10e8>
    1996:	f8 01       	movw	r30, r16
    1998:	14 82       	std	Z+4, r1	; 0x04
    199a:	15 82       	std	Z+5, r1	; 0x05
    199c:	16 82       	std	Z+6, r1	; 0x06
    199e:	17 82       	std	Z+7, r1	; 0x07
    19a0:	b0 c1       	rjmp	.+864    	; 0x1d02 <ParseReceived+0x10b4>
    19a2:	69 ed       	ldi	r22, 0xD9	; 217
    19a4:	72 e0       	ldi	r23, 0x02	; 2
    19a6:	c7 01       	movw	r24, r14
    19a8:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    19ac:	89 2b       	or	r24, r25
    19ae:	09 f0       	breq	.+2      	; 0x19b2 <ParseReceived+0xd64>
    19b0:	c2 c1       	rjmp	.+900    	; 0x1d36 <ParseReceived+0x10e8>
    19b2:	8d e1       	ldi	r24, 0x1D	; 29
    19b4:	90 e0       	ldi	r25, 0x00	; 0
    19b6:	a0 e0       	ldi	r26, 0x00	; 0
    19b8:	b0 e0       	ldi	r27, 0x00	; 0
    19ba:	f8 01       	movw	r30, r16
    19bc:	84 83       	std	Z+4, r24	; 0x04
    19be:	95 83       	std	Z+5, r25	; 0x05
    19c0:	a6 83       	std	Z+6, r26	; 0x06
    19c2:	b7 83       	std	Z+7, r27	; 0x07
    19c4:	ea 53       	subi	r30, 0x3A	; 58
    19c6:	fd 4f       	sbci	r31, 0xFD	; 253
    19c8:	81 81       	ldd	r24, Z+1	; 0x01
    19ca:	81 60       	ori	r24, 0x01	; 1
    19cc:	81 83       	std	Z+1, r24	; 0x01
    19ce:	88 e0       	ldi	r24, 0x08	; 8
    19d0:	e3 ed       	ldi	r30, 0xD3	; 211
    19d2:	f3 e0       	ldi	r31, 0x03	; 3
    19d4:	d8 01       	movw	r26, r16
    19d6:	18 96       	adiw	r26, 0x08	; 8
    19d8:	01 90       	ld	r0, Z+
    19da:	0d 92       	st	X+, r0
    19dc:	8a 95       	dec	r24
    19de:	e1 f7       	brne	.-8      	; 0x19d8 <ParseReceived+0xd8a>
    19e0:	90 c1       	rjmp	.+800    	; 0x1d02 <ParseReceived+0x10b4>
    19e2:	69 ed       	ldi	r22, 0xD9	; 217
    19e4:	72 e0       	ldi	r23, 0x02	; 2
    19e6:	c7 01       	movw	r24, r14
    19e8:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    19ec:	89 2b       	or	r24, r25
    19ee:	09 f0       	breq	.+2      	; 0x19f2 <ParseReceived+0xda4>
    19f0:	e9 c1       	rjmp	.+978    	; 0x1dc4 <ParseReceived+0x1176>
    19f2:	d8 01       	movw	r26, r16
    19f4:	14 96       	adiw	r26, 0x04	; 4
    19f6:	1d 92       	st	X+, r1
    19f8:	1d 92       	st	X+, r1
    19fa:	1d 92       	st	X+, r1
    19fc:	1c 92       	st	X, r1
    19fe:	17 97       	sbiw	r26, 0x07	; 7
    1a00:	6e ed       	ldi	r22, 0xDE	; 222
    1a02:	72 e0       	ldi	r23, 0x02	; 2
    1a04:	c7 01       	movw	r24, r14
    1a06:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    1a0a:	89 2b       	or	r24, r25
    1a0c:	09 f0       	breq	.+2      	; 0x1a10 <ParseReceived+0xdc2>
    1a0e:	d1 c1       	rjmp	.+930    	; 0x1db2 <ParseReceived+0x1164>
    1a10:	f8 01       	movw	r30, r16
    1a12:	14 82       	std	Z+4, r1	; 0x04
    1a14:	15 82       	std	Z+5, r1	; 0x05
    1a16:	16 82       	std	Z+6, r1	; 0x06
    1a18:	17 82       	std	Z+7, r1	; 0x07
    1a1a:	ea 5a       	subi	r30, 0xAA	; 170
    1a1c:	fd 4f       	sbci	r31, 0xFD	; 253
    1a1e:	80 81       	ld	r24, Z
    1a20:	f2 e4       	ldi	r31, 0x42	; 66
    1a22:	8f 02       	muls	r24, r31
    1a24:	c0 01       	movw	r24, r0
    1a26:	11 24       	eor	r1, r1
    1a28:	98 01       	movw	r18, r16
    1a2a:	28 0f       	add	r18, r24
    1a2c:	39 1f       	adc	r19, r25
    1a2e:	f9 01       	movw	r30, r18
    1a30:	e8 5a       	subi	r30, 0xA8	; 168
    1a32:	ff 4f       	sbci	r31, 0xFF	; 255
    1a34:	10 82       	st	Z, r1
    1a36:	32 96       	adiw	r30, 0x02	; 2
    1a38:	10 82       	st	Z, r1
    1a3a:	fe 96       	adiw	r30, 0x3e	; 62
    1a3c:	10 82       	st	Z, r1
    1a3e:	31 97       	sbiw	r30, 0x01	; 1
    1a40:	10 82       	st	Z, r1
    1a42:	bc 01       	movw	r22, r24
    1a44:	68 5a       	subi	r22, 0xA8	; 168
    1a46:	7f 4f       	sbci	r23, 0xFF	; 255
    1a48:	60 0f       	add	r22, r16
    1a4a:	71 1f       	adc	r23, r17
    1a4c:	c8 01       	movw	r24, r16
    1a4e:	0e 94 ec 18 	call	0x31d8	; 0x31d8 <ESP8266_Callback_ClientConnectionError>
    1a52:	57 c1       	rjmp	.+686    	; 0x1d02 <ParseReceived+0x10b4>
    1a54:	69 ed       	ldi	r22, 0xD9	; 217
    1a56:	72 e0       	ldi	r23, 0x02	; 2
    1a58:	c7 01       	movw	r24, r14
    1a5a:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    1a5e:	89 2b       	or	r24, r25
    1a60:	09 f0       	breq	.+2      	; 0x1a64 <ParseReceived+0xe16>
    1a62:	69 c1       	rjmp	.+722    	; 0x1d36 <ParseReceived+0x10e8>
    1a64:	d8 01       	movw	r26, r16
    1a66:	14 96       	adiw	r26, 0x04	; 4
    1a68:	1d 92       	st	X+, r1
    1a6a:	1d 92       	st	X+, r1
    1a6c:	1d 92       	st	X+, r1
    1a6e:	1c 92       	st	X, r1
    1a70:	17 97       	sbiw	r26, 0x07	; 7
    1a72:	47 c1       	rjmp	.+654    	; 0x1d02 <ParseReceived+0x10b4>
    1a74:	66 ee       	ldi	r22, 0xE6	; 230
    1a76:	72 e0       	ldi	r23, 0x02	; 2
    1a78:	c7 01       	movw	r24, r14
    1a7a:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    1a7e:	89 2b       	or	r24, r25
    1a80:	09 f0       	breq	.+2      	; 0x1a84 <ParseReceived+0xe36>
    1a82:	3f c1       	rjmp	.+638    	; 0x1d02 <ParseReceived+0x10b4>
    1a84:	f8 01       	movw	r30, r16
    1a86:	14 82       	std	Z+4, r1	; 0x04
    1a88:	15 82       	std	Z+5, r1	; 0x05
    1a8a:	16 82       	std	Z+6, r1	; 0x06
    1a8c:	17 82       	std	Z+7, r1	; 0x07
    1a8e:	ea 53       	subi	r30, 0x3A	; 58
    1a90:	fd 4f       	sbci	r31, 0xFD	; 253
    1a92:	81 81       	ldd	r24, Z+1	; 0x01
    1a94:	82 60       	ori	r24, 0x02	; 2
    1a96:	81 83       	std	Z+1, r24	; 0x01
    1a98:	34 c1       	rjmp	.+616    	; 0x1d02 <ParseReceived+0x10b4>
    1a9a:	d7 01       	movw	r26, r14
    1a9c:	8c 91       	ld	r24, X
    1a9e:	8b 32       	cpi	r24, 0x2B	; 43
    1aa0:	69 f4       	brne	.+26     	; 0x1abc <ParseReceived+0xe6e>
    1aa2:	60 e0       	ldi	r22, 0x00	; 0
    1aa4:	70 e0       	ldi	r23, 0x00	; 0
    1aa6:	c7 01       	movw	r24, r14
    1aa8:	01 96       	adiw	r24, 0x01	; 1
    1aaa:	0e 94 20 03 	call	0x640	; 0x640 <ParseNumber>
    1aae:	f8 01       	movw	r30, r16
    1ab0:	e9 5c       	subi	r30, 0xC9	; 201
    1ab2:	fd 4f       	sbci	r31, 0xFD	; 253
    1ab4:	60 83       	st	Z, r22
    1ab6:	71 83       	std	Z+1, r23	; 0x01
    1ab8:	82 83       	std	Z+2, r24	; 0x02
    1aba:	93 83       	std	Z+3, r25	; 0x03
    1abc:	69 ed       	ldi	r22, 0xD9	; 217
    1abe:	72 e0       	ldi	r23, 0x02	; 2
    1ac0:	c7 01       	movw	r24, r14
    1ac2:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    1ac6:	89 2b       	or	r24, r25
    1ac8:	79 f4       	brne	.+30     	; 0x1ae8 <ParseReceived+0xe9a>
    1aca:	f8 01       	movw	r30, r16
    1acc:	14 82       	std	Z+4, r1	; 0x04
    1ace:	15 82       	std	Z+5, r1	; 0x05
    1ad0:	16 82       	std	Z+6, r1	; 0x06
    1ad2:	17 82       	std	Z+7, r1	; 0x07
    1ad4:	81 e0       	ldi	r24, 0x01	; 1
    1ad6:	e5 5c       	subi	r30, 0xC5	; 197
    1ad8:	fd 4f       	sbci	r31, 0xFD	; 253
    1ada:	80 83       	st	Z, r24
    1adc:	b8 01       	movw	r22, r16
    1ade:	69 50       	subi	r22, 0x09	; 9
    1ae0:	7e 4f       	sbci	r23, 0xFE	; 254
    1ae2:	c8 01       	movw	r24, r16
    1ae4:	7e d8       	rcall	.-3844   	; 0xbe2 <ESP8266_Callback_PingFinished>
    1ae6:	0d c1       	rjmp	.+538    	; 0x1d02 <ParseReceived+0x10b4>
    1ae8:	6e ed       	ldi	r22, 0xDE	; 222
    1aea:	72 e0       	ldi	r23, 0x02	; 2
    1aec:	c7 01       	movw	r24, r14
    1aee:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    1af2:	89 2b       	or	r24, r25
    1af4:	09 f0       	breq	.+2      	; 0x1af8 <ParseReceived+0xeaa>
    1af6:	1f c1       	rjmp	.+574    	; 0x1d36 <ParseReceived+0x10e8>
    1af8:	d8 01       	movw	r26, r16
    1afa:	14 96       	adiw	r26, 0x04	; 4
    1afc:	1d 92       	st	X+, r1
    1afe:	1d 92       	st	X+, r1
    1b00:	1d 92       	st	X+, r1
    1b02:	1c 92       	st	X, r1
    1b04:	17 97       	sbiw	r26, 0x07	; 7
    1b06:	f8 01       	movw	r30, r16
    1b08:	e5 5c       	subi	r30, 0xC5	; 197
    1b0a:	fd 4f       	sbci	r31, 0xFD	; 253
    1b0c:	10 82       	st	Z, r1
    1b0e:	b8 01       	movw	r22, r16
    1b10:	69 50       	subi	r22, 0x09	; 9
    1b12:	7e 4f       	sbci	r23, 0xFE	; 254
    1b14:	c8 01       	movw	r24, r16
    1b16:	65 d8       	rcall	.-3894   	; 0xbe2 <ESP8266_Callback_PingFinished>
    1b18:	f4 c0       	rjmp	.+488    	; 0x1d02 <ParseReceived+0x10b4>
    1b1a:	4a e0       	ldi	r20, 0x0A	; 10
    1b1c:	50 e0       	ldi	r21, 0x00	; 0
    1b1e:	6b ed       	ldi	r22, 0xDB	; 219
    1b20:	73 e0       	ldi	r23, 0x03	; 3
    1b22:	c7 01       	movw	r24, r14
    1b24:	0e 94 2e 1b 	call	0x365c	; 0x365c <strncmp>
    1b28:	89 2b       	or	r24, r25
    1b2a:	49 f4       	brne	.+18     	; 0x1b3e <ParseReceived+0xef0>
    1b2c:	40 e0       	ldi	r20, 0x00	; 0
    1b2e:	50 e0       	ldi	r21, 0x00	; 0
    1b30:	b8 01       	movw	r22, r16
    1b32:	62 55       	subi	r22, 0x52	; 82
    1b34:	7e 4f       	sbci	r23, 0xFE	; 254
    1b36:	c7 01       	movw	r24, r14
    1b38:	0c 96       	adiw	r24, 0x0c	; 12
    1b3a:	0e 94 ef 04 	call	0x9de	; 0x9de <ParseMAC>
    1b3e:	69 ed       	ldi	r22, 0xD9	; 217
    1b40:	72 e0       	ldi	r23, 0x02	; 2
    1b42:	c7 01       	movw	r24, r14
    1b44:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    1b48:	89 2b       	or	r24, r25
    1b4a:	09 f0       	breq	.+2      	; 0x1b4e <ParseReceived+0xf00>
    1b4c:	f4 c0       	rjmp	.+488    	; 0x1d36 <ParseReceived+0x10e8>
    1b4e:	f8 01       	movw	r30, r16
    1b50:	14 82       	std	Z+4, r1	; 0x04
    1b52:	15 82       	std	Z+5, r1	; 0x05
    1b54:	16 82       	std	Z+6, r1	; 0x06
    1b56:	17 82       	std	Z+7, r1	; 0x07
    1b58:	d4 c0       	rjmp	.+424    	; 0x1d02 <ParseReceived+0x10b4>
    1b5a:	49 e0       	ldi	r20, 0x09	; 9
    1b5c:	50 e0       	ldi	r21, 0x00	; 0
    1b5e:	66 ee       	ldi	r22, 0xE6	; 230
    1b60:	73 e0       	ldi	r23, 0x03	; 3
    1b62:	c7 01       	movw	r24, r14
    1b64:	0e 94 2e 1b 	call	0x365c	; 0x365c <strncmp>
    1b68:	89 2b       	or	r24, r25
    1b6a:	49 f4       	brne	.+18     	; 0x1b7e <ParseReceived+0xf30>
    1b6c:	40 e0       	ldi	r20, 0x00	; 0
    1b6e:	50 e0       	ldi	r21, 0x00	; 0
    1b70:	b8 01       	movw	r22, r16
    1b72:	60 54       	subi	r22, 0x40	; 64
    1b74:	7e 4f       	sbci	r23, 0xFE	; 254
    1b76:	c7 01       	movw	r24, r14
    1b78:	0b 96       	adiw	r24, 0x0b	; 11
    1b7a:	0e 94 ef 04 	call	0x9de	; 0x9de <ParseMAC>
    1b7e:	69 ed       	ldi	r22, 0xD9	; 217
    1b80:	72 e0       	ldi	r23, 0x02	; 2
    1b82:	c7 01       	movw	r24, r14
    1b84:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    1b88:	89 2b       	or	r24, r25
    1b8a:	09 f0       	breq	.+2      	; 0x1b8e <ParseReceived+0xf40>
    1b8c:	d4 c0       	rjmp	.+424    	; 0x1d36 <ParseReceived+0x10e8>
    1b8e:	d8 01       	movw	r26, r16
    1b90:	14 96       	adiw	r26, 0x04	; 4
    1b92:	1d 92       	st	X+, r1
    1b94:	1d 92       	st	X+, r1
    1b96:	1d 92       	st	X+, r1
    1b98:	1c 92       	st	X, r1
    1b9a:	17 97       	sbiw	r26, 0x07	; 7
    1b9c:	b2 c0       	rjmp	.+356    	; 0x1d02 <ParseReceived+0x10b4>
    1b9e:	4b e0       	ldi	r20, 0x0B	; 11
    1ba0:	50 e0       	ldi	r21, 0x00	; 0
    1ba2:	60 ef       	ldi	r22, 0xF0	; 240
    1ba4:	73 e0       	ldi	r23, 0x03	; 3
    1ba6:	c7 01       	movw	r24, r14
    1ba8:	0e 94 2e 1b 	call	0x365c	; 0x365c <strncmp>
    1bac:	89 2b       	or	r24, r25
    1bae:	91 f4       	brne	.+36     	; 0x1bd4 <ParseReceived+0xf86>
    1bb0:	f7 01       	movw	r30, r14
    1bb2:	63 85       	ldd	r22, Z+11	; 0x0b
    1bb4:	60 53       	subi	r22, 0x30	; 48
    1bb6:	64 30       	cpi	r22, 0x04	; 4
    1bb8:	59 f4       	brne	.+22     	; 0x1bd0 <ParseReceived+0xf82>
    1bba:	80 ee       	ldi	r24, 0xE0	; 224
    1bbc:	93 e9       	ldi	r25, 0x93	; 147
    1bbe:	a4 e0       	ldi	r26, 0x04	; 4
    1bc0:	b0 e0       	ldi	r27, 0x00	; 0
    1bc2:	f8 01       	movw	r30, r16
    1bc4:	ec 5a       	subi	r30, 0xAC	; 172
    1bc6:	ff 4f       	sbci	r31, 0xFF	; 255
    1bc8:	80 83       	st	Z, r24
    1bca:	91 83       	std	Z+1, r25	; 0x01
    1bcc:	a2 83       	std	Z+2, r26	; 0x02
    1bce:	b3 83       	std	Z+3, r27	; 0x03
    1bd0:	c8 01       	movw	r24, r16
    1bd2:	08 d8       	rcall	.-4080   	; 0xbe4 <ESP8266_Callback_FirmwareUpdateStatus>
    1bd4:	69 ed       	ldi	r22, 0xD9	; 217
    1bd6:	72 e0       	ldi	r23, 0x02	; 2
    1bd8:	c7 01       	movw	r24, r14
    1bda:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    1bde:	89 2b       	or	r24, r25
    1be0:	41 f0       	breq	.+16     	; 0x1bf2 <ParseReceived+0xfa4>
    1be2:	66 ee       	ldi	r22, 0xE6	; 230
    1be4:	72 e0       	ldi	r23, 0x02	; 2
    1be6:	c7 01       	movw	r24, r14
    1be8:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    1bec:	89 2b       	or	r24, r25
    1bee:	09 f0       	breq	.+2      	; 0x1bf2 <ParseReceived+0xfa4>
    1bf0:	d8 c0       	rjmp	.+432    	; 0x1da2 <ParseReceived+0x1154>
    1bf2:	d8 01       	movw	r26, r16
    1bf4:	14 96       	adiw	r26, 0x04	; 4
    1bf6:	1d 92       	st	X+, r1
    1bf8:	1d 92       	st	X+, r1
    1bfa:	1d 92       	st	X+, r1
    1bfc:	1c 92       	st	X, r1
    1bfe:	17 97       	sbiw	r26, 0x07	; 7
    1c00:	80 e3       	ldi	r24, 0x30	; 48
    1c02:	95 e7       	ldi	r25, 0x75	; 117
    1c04:	a0 e0       	ldi	r26, 0x00	; 0
    1c06:	b0 e0       	ldi	r27, 0x00	; 0
    1c08:	f8 01       	movw	r30, r16
    1c0a:	ec 5a       	subi	r30, 0xAC	; 172
    1c0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c0e:	80 83       	st	Z, r24
    1c10:	91 83       	std	Z+1, r25	; 0x01
    1c12:	a2 83       	std	Z+2, r26	; 0x02
    1c14:	b3 83       	std	Z+3, r27	; 0x03
    1c16:	c8 01       	movw	r24, r16
    1c18:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <ESP8266_Callback_FirmwareUpdateSuccess>
    1c1c:	6e ed       	ldi	r22, 0xDE	; 222
    1c1e:	72 e0       	ldi	r23, 0x02	; 2
    1c20:	c7 01       	movw	r24, r14
    1c22:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    1c26:	89 2b       	or	r24, r25
    1c28:	09 f0       	breq	.+2      	; 0x1c2c <ParseReceived+0xfde>
    1c2a:	c3 c0       	rjmp	.+390    	; 0x1db2 <ParseReceived+0x1164>
    1c2c:	f8 01       	movw	r30, r16
    1c2e:	14 82       	std	Z+4, r1	; 0x04
    1c30:	15 82       	std	Z+5, r1	; 0x05
    1c32:	16 82       	std	Z+6, r1	; 0x06
    1c34:	17 82       	std	Z+7, r1	; 0x07
    1c36:	80 e3       	ldi	r24, 0x30	; 48
    1c38:	95 e7       	ldi	r25, 0x75	; 117
    1c3a:	a0 e0       	ldi	r26, 0x00	; 0
    1c3c:	b0 e0       	ldi	r27, 0x00	; 0
    1c3e:	ec 5a       	subi	r30, 0xAC	; 172
    1c40:	ff 4f       	sbci	r31, 0xFF	; 255
    1c42:	80 83       	st	Z, r24
    1c44:	91 83       	std	Z+1, r25	; 0x01
    1c46:	a2 83       	std	Z+2, r26	; 0x02
    1c48:	b3 83       	std	Z+3, r27	; 0x03
    1c4a:	c8 01       	movw	r24, r16
    1c4c:	0e 94 f4 05 	call	0xbe8	; 0xbe8 <ESP8266_Callback_FirmwareUpdateError>
    1c50:	58 c0       	rjmp	.+176    	; 0x1d02 <ParseReceived+0x10b4>
    1c52:	d7 01       	movw	r26, r14
    1c54:	8c 91       	ld	r24, X
    1c56:	80 53       	subi	r24, 0x30	; 48
    1c58:	8a 30       	cpi	r24, 0x0A	; 10
    1c5a:	08 f0       	brcs	.+2      	; 0x1c5e <ParseReceived+0x1010>
    1c5c:	40 c0       	rjmp	.+128    	; 0x1cde <ParseReceived+0x1090>
    1c5e:	f8 01       	movw	r30, r16
    1c60:	e5 54       	subi	r30, 0x45	; 69
    1c62:	fd 4f       	sbci	r31, 0xFD	; 253
    1c64:	80 81       	ld	r24, Z
    1c66:	8a 30       	cpi	r24, 0x0A	; 10
    1c68:	d0 f5       	brcc	.+116    	; 0x1cde <ParseReceived+0x1090>
    1c6a:	90 e0       	ldi	r25, 0x00	; 0
    1c6c:	bc 01       	movw	r22, r24
    1c6e:	66 0f       	add	r22, r22
    1c70:	77 1f       	adc	r23, r23
    1c72:	88 0f       	add	r24, r24
    1c74:	99 1f       	adc	r25, r25
    1c76:	88 0f       	add	r24, r24
    1c78:	99 1f       	adc	r25, r25
    1c7a:	88 0f       	add	r24, r24
    1c7c:	99 1f       	adc	r25, r25
    1c7e:	68 0f       	add	r22, r24
    1c80:	79 1f       	adc	r23, r25
    1c82:	69 5a       	subi	r22, 0xA9	; 169
    1c84:	7d 4f       	sbci	r23, 0xFD	; 253
    1c86:	60 0f       	add	r22, r16
    1c88:	71 1f       	adc	r23, r17
    1c8a:	ae 01       	movw	r20, r28
    1c8c:	4e 5f       	subi	r20, 0xFE	; 254
    1c8e:	5f 4f       	sbci	r21, 0xFF	; 255
    1c90:	c7 01       	movw	r24, r14
    1c92:	0e 94 9d 03 	call	0x73a	; 0x73a <ParseIP>
    1c96:	68 01       	movw	r12, r16
    1c98:	b5 e4       	ldi	r27, 0x45	; 69
    1c9a:	cb 1a       	sub	r12, r27
    1c9c:	bd ef       	ldi	r27, 0xFD	; 253
    1c9e:	db 0a       	sbc	r13, r27
    1ca0:	f6 01       	movw	r30, r12
    1ca2:	80 81       	ld	r24, Z
    1ca4:	90 e0       	ldi	r25, 0x00	; 0
    1ca6:	bc 01       	movw	r22, r24
    1ca8:	66 0f       	add	r22, r22
    1caa:	77 1f       	adc	r23, r23
    1cac:	88 0f       	add	r24, r24
    1cae:	99 1f       	adc	r25, r25
    1cb0:	88 0f       	add	r24, r24
    1cb2:	99 1f       	adc	r25, r25
    1cb4:	88 0f       	add	r24, r24
    1cb6:	99 1f       	adc	r25, r25
    1cb8:	68 0f       	add	r22, r24
    1cba:	79 1f       	adc	r23, r25
    1cbc:	65 5a       	subi	r22, 0xA5	; 165
    1cbe:	7d 4f       	sbci	r23, 0xFD	; 253
    1cc0:	60 0f       	add	r22, r16
    1cc2:	71 1f       	adc	r23, r17
    1cc4:	8a 81       	ldd	r24, Y+2	; 0x02
    1cc6:	90 e0       	ldi	r25, 0x00	; 0
    1cc8:	01 96       	adiw	r24, 0x01	; 1
    1cca:	40 e0       	ldi	r20, 0x00	; 0
    1ccc:	50 e0       	ldi	r21, 0x00	; 0
    1cce:	8e 0d       	add	r24, r14
    1cd0:	9f 1d       	adc	r25, r15
    1cd2:	0e 94 ef 04 	call	0x9de	; 0x9de <ParseMAC>
    1cd6:	d6 01       	movw	r26, r12
    1cd8:	8c 91       	ld	r24, X
    1cda:	8f 5f       	subi	r24, 0xFF	; 255
    1cdc:	8c 93       	st	X, r24
    1cde:	69 ed       	ldi	r22, 0xD9	; 217
    1ce0:	72 e0       	ldi	r23, 0x02	; 2
    1ce2:	c7 01       	movw	r24, r14
    1ce4:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    1ce8:	89 2b       	or	r24, r25
    1cea:	29 f5       	brne	.+74     	; 0x1d36 <ParseReceived+0x10e8>
    1cec:	f8 01       	movw	r30, r16
    1cee:	14 82       	std	Z+4, r1	; 0x04
    1cf0:	15 82       	std	Z+5, r1	; 0x05
    1cf2:	16 82       	std	Z+6, r1	; 0x06
    1cf4:	17 82       	std	Z+7, r1	; 0x07
    1cf6:	b8 01       	movw	r22, r16
    1cf8:	69 5a       	subi	r22, 0xA9	; 169
    1cfa:	7d 4f       	sbci	r23, 0xFD	; 253
    1cfc:	c8 01       	movw	r24, r16
    1cfe:	0e 94 f5 05 	call	0xbea	; 0xbea <ESP8266_Callback_ConnectedStationsDetected>
    1d02:	69 ed       	ldi	r22, 0xD9	; 217
    1d04:	72 e0       	ldi	r23, 0x02	; 2
    1d06:	c7 01       	movw	r24, r14
    1d08:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    1d0c:	89 2b       	or	r24, r25
    1d0e:	99 f4       	brne	.+38     	; 0x1d36 <ParseReceived+0x10e8>
    1d10:	f8 01       	movw	r30, r16
    1d12:	ea 53       	subi	r30, 0x3A	; 58
    1d14:	fd 4f       	sbci	r31, 0xFD	; 253
    1d16:	81 81       	ldd	r24, Z+1	; 0x01
    1d18:	82 60       	ori	r24, 0x02	; 2
    1d1a:	81 83       	std	Z+1, r24	; 0x01
    1d1c:	f8 01       	movw	r30, r16
    1d1e:	84 81       	ldd	r24, Z+4	; 0x04
    1d20:	95 81       	ldd	r25, Z+5	; 0x05
    1d22:	a6 81       	ldd	r26, Z+6	; 0x06
    1d24:	b7 81       	ldd	r27, Z+7	; 0x07
    1d26:	08 97       	sbiw	r24, 0x08	; 8
    1d28:	a1 05       	cpc	r26, r1
    1d2a:	b1 05       	cpc	r27, r1
    1d2c:	21 f0       	breq	.+8      	; 0x1d36 <ParseReceived+0x10e8>
    1d2e:	14 82       	std	Z+4, r1	; 0x04
    1d30:	15 82       	std	Z+5, r1	; 0x05
    1d32:	16 82       	std	Z+6, r1	; 0x06
    1d34:	17 82       	std	Z+7, r1	; 0x07
    1d36:	6e ed       	ldi	r22, 0xDE	; 222
    1d38:	72 e0       	ldi	r23, 0x02	; 2
    1d3a:	c7 01       	movw	r24, r14
    1d3c:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    1d40:	89 2b       	or	r24, r25
    1d42:	39 f0       	breq	.+14     	; 0x1d52 <ParseReceived+0x1104>
    1d44:	6e ee       	ldi	r22, 0xEE	; 238
    1d46:	72 e0       	ldi	r23, 0x02	; 2
    1d48:	c7 01       	movw	r24, r14
    1d4a:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    1d4e:	89 2b       	or	r24, r25
    1d50:	59 f4       	brne	.+22     	; 0x1d68 <ParseReceived+0x111a>
    1d52:	f8 01       	movw	r30, r16
    1d54:	ea 53       	subi	r30, 0x3A	; 58
    1d56:	fd 4f       	sbci	r31, 0xFD	; 253
    1d58:	81 81       	ldd	r24, Z+1	; 0x01
    1d5a:	8d 7f       	andi	r24, 0xFD	; 253
    1d5c:	81 83       	std	Z+1, r24	; 0x01
    1d5e:	f8 01       	movw	r30, r16
    1d60:	14 82       	std	Z+4, r1	; 0x04
    1d62:	15 82       	std	Z+5, r1	; 0x05
    1d64:	16 82       	std	Z+6, r1	; 0x06
    1d66:	17 82       	std	Z+7, r1	; 0x07
    1d68:	64 ed       	ldi	r22, 0xD4	; 212
    1d6a:	72 e0       	ldi	r23, 0x02	; 2
    1d6c:	c7 01       	movw	r24, r14
    1d6e:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    1d72:	89 2b       	or	r24, r25
    1d74:	81 f5       	brne	.+96     	; 0x1dd6 <ParseReceived+0x1188>
    1d76:	d8 01       	movw	r26, r16
    1d78:	14 96       	adiw	r26, 0x04	; 4
    1d7a:	1d 92       	st	X+, r1
    1d7c:	1d 92       	st	X+, r1
    1d7e:	1d 92       	st	X+, r1
    1d80:	1c 92       	st	X, r1
    1d82:	17 97       	sbiw	r26, 0x07	; 7
    1d84:	f8 01       	movw	r30, r16
    1d86:	ea 53       	subi	r30, 0x3A	; 58
    1d88:	fd 4f       	sbci	r31, 0xFD	; 253
    1d8a:	81 81       	ldd	r24, Z+1	; 0x01
    1d8c:	8e 7f       	andi	r24, 0xFE	; 254
    1d8e:	81 83       	std	Z+1, r24	; 0x01
    1d90:	22 c0       	rjmp	.+68     	; 0x1dd6 <ParseReceived+0x1188>
    1d92:	67 e9       	ldi	r22, 0x97	; 151
    1d94:	73 e0       	ldi	r23, 0x03	; 3
    1d96:	c7 01       	movw	r24, r14
    1d98:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    1d9c:	89 2b       	or	r24, r25
    1d9e:	59 f6       	brne	.-106    	; 0x1d36 <ParseReceived+0x10e8>
    1da0:	4a cb       	rjmp	.-2412   	; 0x1436 <ParseReceived+0x7e8>
    1da2:	6e ed       	ldi	r22, 0xDE	; 222
    1da4:	72 e0       	ldi	r23, 0x02	; 2
    1da6:	c7 01       	movw	r24, r14
    1da8:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    1dac:	89 2b       	or	r24, r25
    1dae:	51 f6       	brne	.-108    	; 0x1d44 <ParseReceived+0x10f6>
    1db0:	3d cf       	rjmp	.-390    	; 0x1c2c <ParseReceived+0xfde>
    1db2:	69 ed       	ldi	r22, 0xD9	; 217
    1db4:	72 e0       	ldi	r23, 0x02	; 2
    1db6:	c7 01       	movw	r24, r14
    1db8:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    1dbc:	89 2b       	or	r24, r25
    1dbe:	09 f4       	brne	.+2      	; 0x1dc2 <ParseReceived+0x1174>
    1dc0:	a7 cf       	rjmp	.-178    	; 0x1d10 <ParseReceived+0x10c2>
    1dc2:	c0 cf       	rjmp	.-128    	; 0x1d44 <ParseReceived+0x10f6>
    1dc4:	6e ed       	ldi	r22, 0xDE	; 222
    1dc6:	72 e0       	ldi	r23, 0x02	; 2
    1dc8:	c7 01       	movw	r24, r14
    1dca:	0e 94 1e 1b 	call	0x363c	; 0x363c <strcmp>
    1dce:	89 2b       	or	r24, r25
    1dd0:	09 f0       	breq	.+2      	; 0x1dd4 <ParseReceived+0x1186>
    1dd2:	b8 cf       	rjmp	.-144    	; 0x1d44 <ParseReceived+0x10f6>
    1dd4:	1d ce       	rjmp	.-966    	; 0x1a10 <ParseReceived+0xdc2>
    1dd6:	0f 90       	pop	r0
    1dd8:	0f 90       	pop	r0
    1dda:	df 91       	pop	r29
    1ddc:	cf 91       	pop	r28
    1dde:	1f 91       	pop	r17
    1de0:	0f 91       	pop	r16
    1de2:	ff 90       	pop	r15
    1de4:	ef 90       	pop	r14
    1de6:	df 90       	pop	r13
    1de8:	cf 90       	pop	r12
    1dea:	bf 90       	pop	r11
    1dec:	af 90       	pop	r10
    1dee:	9f 90       	pop	r9
    1df0:	8f 90       	pop	r8
    1df2:	7f 90       	pop	r7
    1df4:	6f 90       	pop	r6
    1df6:	5f 90       	pop	r5
    1df8:	4f 90       	pop	r4
    1dfa:	3f 90       	pop	r3
    1dfc:	2f 90       	pop	r2
    1dfe:	08 95       	ret

00001e00 <ESP8266_Update>:
    1e00:	2f 92       	push	r2
    1e02:	3f 92       	push	r3
    1e04:	4f 92       	push	r4
    1e06:	5f 92       	push	r5
    1e08:	7f 92       	push	r7
    1e0a:	8f 92       	push	r8
    1e0c:	9f 92       	push	r9
    1e0e:	af 92       	push	r10
    1e10:	bf 92       	push	r11
    1e12:	cf 92       	push	r12
    1e14:	df 92       	push	r13
    1e16:	ef 92       	push	r14
    1e18:	ff 92       	push	r15
    1e1a:	0f 93       	push	r16
    1e1c:	1f 93       	push	r17
    1e1e:	cf 93       	push	r28
    1e20:	df 93       	push	r29
    1e22:	cd b7       	in	r28, 0x3d	; 61
    1e24:	de b7       	in	r29, 0x3e	; 62
    1e26:	c3 58       	subi	r28, 0x83	; 131
    1e28:	d1 09       	sbc	r29, r1
    1e2a:	0f b6       	in	r0, 0x3f	; 63
    1e2c:	f8 94       	cli
    1e2e:	de bf       	out	0x3e, r29	; 62
    1e30:	0f be       	out	0x3f, r0	; 63
    1e32:	cd bf       	out	0x3d, r28	; 61
    1e34:	8c 01       	movw	r16, r24
    1e36:	fc 01       	movw	r30, r24
    1e38:	ec 5a       	subi	r30, 0xAC	; 172
    1e3a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e3c:	80 81       	ld	r24, Z
    1e3e:	91 81       	ldd	r25, Z+1	; 0x01
    1e40:	a2 81       	ldd	r26, Z+2	; 0x02
    1e42:	b3 81       	ldd	r27, Z+3	; 0x03
    1e44:	89 2b       	or	r24, r25
    1e46:	8a 2b       	or	r24, r26
    1e48:	8b 2b       	or	r24, r27
    1e4a:	41 f4       	brne	.+16     	; 0x1e5c <ESP8266_Update+0x5c>
    1e4c:	80 e3       	ldi	r24, 0x30	; 48
    1e4e:	95 e7       	ldi	r25, 0x75	; 117
    1e50:	a0 e0       	ldi	r26, 0x00	; 0
    1e52:	b0 e0       	ldi	r27, 0x00	; 0
    1e54:	80 83       	st	Z, r24
    1e56:	91 83       	std	Z+1, r25	; 0x01
    1e58:	a2 83       	std	Z+2, r26	; 0x02
    1e5a:	b3 83       	std	Z+3, r27	; 0x03
    1e5c:	f8 01       	movw	r30, r16
    1e5e:	e4 5b       	subi	r30, 0xB4	; 180
    1e60:	ff 4f       	sbci	r31, 0xFF	; 255
    1e62:	80 81       	ld	r24, Z
    1e64:	91 81       	ldd	r25, Z+1	; 0x01
    1e66:	a2 81       	ldd	r26, Z+2	; 0x02
    1e68:	b3 81       	ldd	r27, Z+3	; 0x03
    1e6a:	34 97       	sbiw	r30, 0x04	; 4
    1e6c:	40 81       	ld	r20, Z
    1e6e:	51 81       	ldd	r21, Z+1	; 0x01
    1e70:	62 81       	ldd	r22, Z+2	; 0x02
    1e72:	73 81       	ldd	r23, Z+3	; 0x03
    1e74:	84 1b       	sub	r24, r20
    1e76:	95 0b       	sbc	r25, r21
    1e78:	a6 0b       	sbc	r26, r22
    1e7a:	b7 0b       	sbc	r27, r23
    1e7c:	3c 96       	adiw	r30, 0x0c	; 12
    1e7e:	40 81       	ld	r20, Z
    1e80:	51 81       	ldd	r21, Z+1	; 0x01
    1e82:	62 81       	ldd	r22, Z+2	; 0x02
    1e84:	73 81       	ldd	r23, Z+3	; 0x03
    1e86:	48 17       	cp	r20, r24
    1e88:	59 07       	cpc	r21, r25
    1e8a:	6a 07       	cpc	r22, r26
    1e8c:	7b 07       	cpc	r23, r27
    1e8e:	38 f5       	brcc	.+78     	; 0x1ede <ESP8266_Update+0xde>
    1e90:	d8 01       	movw	r26, r16
    1e92:	14 96       	adiw	r26, 0x04	; 4
    1e94:	8c 91       	ld	r24, X
    1e96:	f8 01       	movw	r30, r16
    1e98:	14 82       	std	Z+4, r1	; 0x04
    1e9a:	15 82       	std	Z+5, r1	; 0x05
    1e9c:	16 82       	std	Z+6, r1	; 0x06
    1e9e:	17 82       	std	Z+7, r1	; 0x07
    1ea0:	8a 30       	cpi	r24, 0x0A	; 10
    1ea2:	09 f0       	breq	.+2      	; 0x1ea6 <ESP8266_Update+0xa6>
    1ea4:	66 c2       	rjmp	.+1228   	; 0x2372 <__stack+0x173>
    1ea6:	ea 5a       	subi	r30, 0xAA	; 170
    1ea8:	fd 4f       	sbci	r31, 0xFD	; 253
    1eaa:	80 81       	ld	r24, Z
    1eac:	f2 e4       	ldi	r31, 0x42	; 66
    1eae:	8f 02       	muls	r24, r31
    1eb0:	c0 01       	movw	r24, r0
    1eb2:	11 24       	eor	r1, r1
    1eb4:	98 01       	movw	r18, r16
    1eb6:	28 0f       	add	r18, r24
    1eb8:	39 1f       	adc	r19, r25
    1eba:	f9 01       	movw	r30, r18
    1ebc:	e8 5a       	subi	r30, 0xA8	; 168
    1ebe:	ff 4f       	sbci	r31, 0xFF	; 255
    1ec0:	10 82       	st	Z, r1
    1ec2:	32 96       	adiw	r30, 0x02	; 2
    1ec4:	10 82       	st	Z, r1
    1ec6:	fe 96       	adiw	r30, 0x3e	; 62
    1ec8:	10 82       	st	Z, r1
    1eca:	31 97       	sbiw	r30, 0x01	; 1
    1ecc:	10 82       	st	Z, r1
    1ece:	bc 01       	movw	r22, r24
    1ed0:	68 5a       	subi	r22, 0xA8	; 168
    1ed2:	7f 4f       	sbci	r23, 0xFF	; 255
    1ed4:	60 0f       	add	r22, r16
    1ed6:	71 1f       	adc	r23, r17
    1ed8:	c8 01       	movw	r24, r16
    1eda:	0e 94 a0 19 	call	0x3340	; 0x3340 <ESP8266_Callback_ClientConnectionTimeout>
    1ede:	f8 01       	movw	r30, r16
    1ee0:	e9 53       	subi	r30, 0x39	; 57
    1ee2:	fd 4f       	sbci	r31, 0xFD	; 253
    1ee4:	80 81       	ld	r24, Z
    1ee6:	80 ff       	sbrs	r24, 0
    1ee8:	84 c0       	rjmp	.+264    	; 0x1ff2 <ESP8266_Update+0x1f2>
    1eea:	42 e0       	ldi	r20, 0x02	; 2
    1eec:	50 e0       	ldi	r21, 0x00	; 0
    1eee:	6c ef       	ldi	r22, 0xFC	; 252
    1ef0:	73 e0       	ldi	r23, 0x03	; 3
    1ef2:	81 e8       	ldi	r24, 0x81	; 129
    1ef4:	98 e1       	ldi	r25, 0x18	; 24
    1ef6:	0e 94 14 02 	call	0x428	; 0x428 <BUFFER_Find>
    1efa:	99 23       	and	r25, r25
    1efc:	64 f0       	brlt	.+24     	; 0x1f16 <ESP8266_Update+0x116>
    1efe:	89 2b       	or	r24, r25
    1f00:	09 f5       	brne	.+66     	; 0x1f44 <ESP8266_Update+0x144>
    1f02:	42 e0       	ldi	r20, 0x02	; 2
    1f04:	50 e0       	ldi	r21, 0x00	; 0
    1f06:	be 01       	movw	r22, r28
    1f08:	6e 57       	subi	r22, 0x7E	; 126
    1f0a:	7f 4f       	sbci	r23, 0xFF	; 255
    1f0c:	81 e8       	ldi	r24, 0x81	; 129
    1f0e:	98 e1       	ldi	r25, 0x18	; 24
    1f10:	0e 94 23 01 	call	0x246	; 0x246 <BUFFER_Read>
    1f14:	17 c0       	rjmp	.+46     	; 0x1f44 <ESP8266_Update+0x144>
    1f16:	40 e0       	ldi	r20, 0x00	; 0
    1f18:	50 e0       	ldi	r21, 0x00	; 0
    1f1a:	6c ef       	ldi	r22, 0xFC	; 252
    1f1c:	73 e0       	ldi	r23, 0x03	; 3
    1f1e:	8d e8       	ldi	r24, 0x8D	; 141
    1f20:	98 e1       	ldi	r25, 0x18	; 24
    1f22:	0e 94 14 02 	call	0x428	; 0x428 <BUFFER_Find>
    1f26:	00 97       	sbiw	r24, 0x00	; 0
    1f28:	51 f4       	brne	.+20     	; 0x1f3e <ESP8266_Update+0x13e>
    1f2a:	42 e0       	ldi	r20, 0x02	; 2
    1f2c:	50 e0       	ldi	r21, 0x00	; 0
    1f2e:	be 01       	movw	r22, r28
    1f30:	6e 57       	subi	r22, 0x7E	; 126
    1f32:	7f 4f       	sbci	r23, 0xFF	; 255
    1f34:	8d e8       	ldi	r24, 0x8D	; 141
    1f36:	98 e1       	ldi	r25, 0x18	; 24
    1f38:	0e 94 23 01 	call	0x246	; 0x246 <BUFFER_Read>
    1f3c:	03 c0       	rjmp	.+6      	; 0x1f44 <ESP8266_Update+0x144>
    1f3e:	99 23       	and	r25, r25
    1f40:	0c f4       	brge	.+2      	; 0x1f44 <ESP8266_Update+0x144>
    1f42:	57 c0       	rjmp	.+174    	; 0x1ff2 <ESP8266_Update+0x1f2>
    1f44:	f8 01       	movw	r30, r16
    1f46:	ec 53       	subi	r30, 0x3C	; 60
    1f48:	fd 4f       	sbci	r31, 0xFD	; 253
    1f4a:	c0 80       	ld	r12, Z
    1f4c:	d1 80       	ldd	r13, Z+1	; 0x01
    1f4e:	32 96       	adiw	r30, 0x02	; 2
    1f50:	81 81       	ldd	r24, Z+1	; 0x01
    1f52:	8e 7f       	andi	r24, 0xFE	; 254
    1f54:	81 83       	std	Z+1, r24	; 0x01
    1f56:	8d e1       	ldi	r24, 0x1D	; 29
    1f58:	90 e0       	ldi	r25, 0x00	; 0
    1f5a:	a0 e0       	ldi	r26, 0x00	; 0
    1f5c:	b0 e0       	ldi	r27, 0x00	; 0
    1f5e:	f8 01       	movw	r30, r16
    1f60:	84 83       	std	Z+4, r24	; 0x04
    1f62:	95 83       	std	Z+5, r25	; 0x05
    1f64:	a6 83       	std	Z+6, r26	; 0x06
    1f66:	b7 83       	std	Z+7, r27	; 0x07
    1f68:	d6 01       	movw	r26, r12
    1f6a:	12 96       	adiw	r26, 0x02	; 2
    1f6c:	8c 91       	ld	r24, X
    1f6e:	12 97       	sbiw	r26, 0x02	; 2
    1f70:	88 23       	and	r24, r24
    1f72:	59 f0       	breq	.+22     	; 0x1f8a <ESP8266_Update+0x18a>
    1f74:	53 96       	adiw	r26, 0x13	; 19
    1f76:	4d 91       	ld	r20, X+
    1f78:	5c 91       	ld	r21, X
    1f7a:	54 97       	sbiw	r26, 0x14	; 20
    1f7c:	24 eb       	ldi	r18, 0xB4	; 180
    1f7e:	35 e0       	ldi	r19, 0x05	; 5
    1f80:	b6 01       	movw	r22, r12
    1f82:	c8 01       	movw	r24, r16
    1f84:	0e 94 fa 18 	call	0x31f4	; 0x31f4 <ESP8266_Callback_ClientConnectionSendData>
    1f88:	09 c0       	rjmp	.+18     	; 0x1f9c <ESP8266_Update+0x19c>
    1f8a:	f6 01       	movw	r30, r12
    1f8c:	43 89       	ldd	r20, Z+19	; 0x13
    1f8e:	54 89       	ldd	r21, Z+20	; 0x14
    1f90:	24 eb       	ldi	r18, 0xB4	; 180
    1f92:	35 e0       	ldi	r19, 0x05	; 5
    1f94:	b6 01       	movw	r22, r12
    1f96:	c8 01       	movw	r24, r16
    1f98:	0e 94 a9 05 	call	0xb52	; 0xb52 <ESP8266_Callback_ServerConnectionSendData>
    1f9c:	e8 2e       	mov	r14, r24
    1f9e:	f9 2e       	mov	r15, r25
    1fa0:	f5 eb       	ldi	r31, 0xB5	; 181
    1fa2:	ef 16       	cp	r14, r31
    1fa4:	f5 e0       	ldi	r31, 0x05	; 5
    1fa6:	ff 06       	cpc	r15, r31
    1fa8:	30 f0       	brcs	.+12     	; 0x1fb6 <ESP8266_Update+0x1b6>
    1faa:	0f 2e       	mov	r0, r31
    1fac:	f4 eb       	ldi	r31, 0xB4	; 180
    1fae:	ef 2e       	mov	r14, r31
    1fb0:	f5 e0       	ldi	r31, 0x05	; 5
    1fb2:	ff 2e       	mov	r15, r31
    1fb4:	f0 2d       	mov	r31, r0
    1fb6:	e1 14       	cp	r14, r1
    1fb8:	f1 04       	cpc	r15, r1
    1fba:	b1 f0       	breq	.+44     	; 0x1fe8 <ESP8266_Update+0x1e8>
    1fbc:	b7 01       	movw	r22, r14
    1fbe:	d6 01       	movw	r26, r12
    1fc0:	53 96       	adiw	r26, 0x13	; 19
    1fc2:	8d 91       	ld	r24, X+
    1fc4:	9c 91       	ld	r25, X
    1fc6:	54 97       	sbiw	r26, 0x14	; 20
    1fc8:	14 d7       	rcall	.+3624   	; 0x2df2 <ESP8266_LL_USARTSend>
    1fca:	f8 01       	movw	r30, r16
    1fcc:	e0 54       	subi	r30, 0x40	; 64
    1fce:	fd 4f       	sbci	r31, 0xFD	; 253
    1fd0:	80 81       	ld	r24, Z
    1fd2:	91 81       	ldd	r25, Z+1	; 0x01
    1fd4:	a2 81       	ldd	r26, Z+2	; 0x02
    1fd6:	b3 81       	ldd	r27, Z+3	; 0x03
    1fd8:	8e 0d       	add	r24, r14
    1fda:	9f 1d       	adc	r25, r15
    1fdc:	a1 1d       	adc	r26, r1
    1fde:	b1 1d       	adc	r27, r1
    1fe0:	80 83       	st	Z, r24
    1fe2:	91 83       	std	Z+1, r25	; 0x01
    1fe4:	a2 83       	std	Z+2, r26	; 0x02
    1fe6:	b3 83       	std	Z+3, r27	; 0x03
    1fe8:	62 e0       	ldi	r22, 0x02	; 2
    1fea:	70 e0       	ldi	r23, 0x00	; 0
    1fec:	8f ef       	ldi	r24, 0xFF	; 255
    1fee:	93 e0       	ldi	r25, 0x03	; 3
    1ff0:	00 d7       	rcall	.+3584   	; 0x2df2 <ESP8266_LL_USARTSend>
    1ff2:	f8 01       	movw	r30, r16
    1ff4:	84 81       	ldd	r24, Z+4	; 0x04
    1ff6:	95 81       	ldd	r25, Z+5	; 0x05
    1ff8:	a6 81       	ldd	r26, Z+6	; 0x06
    1ffa:	b7 81       	ldd	r27, Z+7	; 0x07
    1ffc:	41 97       	sbiw	r24, 0x11	; 17
    1ffe:	a1 05       	cpc	r26, r1
    2000:	b1 05       	cpc	r27, r1
    2002:	01 f5       	brne	.+64     	; 0x2044 <ESP8266_Update+0x244>
    2004:	e0 51       	subi	r30, 0x10	; 16
    2006:	fe 4f       	sbci	r31, 0xFE	; 254
    2008:	80 81       	ld	r24, Z
    200a:	81 11       	cpse	r24, r1
    200c:	7d c0       	rjmp	.+250    	; 0x2108 <ESP8266_Update+0x308>
    200e:	43 e0       	ldi	r20, 0x03	; 3
    2010:	50 e0       	ldi	r21, 0x00	; 0
    2012:	62 e0       	ldi	r22, 0x02	; 2
    2014:	74 e0       	ldi	r23, 0x04	; 4
    2016:	81 e8       	ldi	r24, 0x81	; 129
    2018:	98 e1       	ldi	r25, 0x18	; 24
    201a:	0e 94 14 02 	call	0x428	; 0x428 <BUFFER_Find>
    201e:	99 23       	and	r25, r25
    2020:	8c f0       	brlt	.+34     	; 0x2044 <ESP8266_Update+0x244>
    2022:	81 e8       	ldi	r24, 0x81	; 129
    2024:	98 e1       	ldi	r25, 0x18	; 24
    2026:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <BUFFER_Reset>
    202a:	d8 01       	movw	r26, r16
    202c:	14 96       	adiw	r26, 0x04	; 4
    202e:	1d 92       	st	X+, r1
    2030:	1d 92       	st	X+, r1
    2032:	1d 92       	st	X+, r1
    2034:	1c 92       	st	X, r1
    2036:	17 97       	sbiw	r26, 0x07	; 7
    2038:	f8 01       	movw	r30, r16
    203a:	ea 53       	subi	r30, 0x3A	; 58
    203c:	fd 4f       	sbci	r31, 0xFD	; 253
    203e:	81 81       	ldd	r24, Z+1	; 0x01
    2040:	82 60       	ori	r24, 0x02	; 2
    2042:	81 83       	std	Z+1, r24	; 0x01
    2044:	f8 01       	movw	r30, r16
    2046:	e0 51       	subi	r30, 0x10	; 16
    2048:	fe 4f       	sbci	r31, 0xFE	; 254
    204a:	80 81       	ld	r24, Z
    204c:	88 23       	and	r24, r24
    204e:	f1 f0       	breq	.+60     	; 0x208c <ESP8266_Update+0x28c>
    2050:	54 c0       	rjmp	.+168    	; 0x20fa <ESP8266_Update+0x2fa>
    2052:	9c 01       	movw	r18, r24
    2054:	41 e0       	ldi	r20, 0x01	; 1
    2056:	be 01       	movw	r22, r28
    2058:	6f 5f       	subi	r22, 0xFF	; 255
    205a:	7f 4f       	sbci	r23, 0xFF	; 255
    205c:	c8 01       	movw	r24, r16
    205e:	0e 94 27 06 	call	0xc4e	; 0xc4e <ParseReceived>
    2062:	f7 01       	movw	r30, r14
    2064:	80 81       	ld	r24, Z
    2066:	88 23       	and	r24, r24
    2068:	b1 f0       	breq	.+44     	; 0x2096 <ESP8266_Update+0x296>
    206a:	47 c0       	rjmp	.+142    	; 0x20fa <ESP8266_Update+0x2fa>
    206c:	f8 01       	movw	r30, r16
    206e:	e0 51       	subi	r30, 0x10	; 16
    2070:	fe 4f       	sbci	r31, 0xFE	; 254
    2072:	80 81       	ld	r24, Z
    2074:	81 11       	cpse	r24, r1
    2076:	48 c0       	rjmp	.+144    	; 0x2108 <ESP8266_Update+0x308>
    2078:	f8 01       	movw	r30, r16
    207a:	84 81       	ldd	r24, Z+4	; 0x04
    207c:	95 81       	ldd	r25, Z+5	; 0x05
    207e:	a6 81       	ldd	r26, Z+6	; 0x06
    2080:	b7 81       	ldd	r27, Z+7	; 0x07
    2082:	89 2b       	or	r24, r25
    2084:	8a 2b       	or	r24, r26
    2086:	8b 2b       	or	r24, r27
    2088:	41 f1       	breq	.+80     	; 0x20da <ESP8266_Update+0x2da>
    208a:	7a c1       	rjmp	.+756    	; 0x2380 <__stack+0x181>
    208c:	78 01       	movw	r14, r16
    208e:	f0 e1       	ldi	r31, 0x10	; 16
    2090:	ef 1a       	sub	r14, r31
    2092:	fe ef       	ldi	r31, 0xFE	; 254
    2094:	ff 0a       	sbc	r15, r31
    2096:	40 e8       	ldi	r20, 0x80	; 128
    2098:	50 e0       	ldi	r21, 0x00	; 0
    209a:	be 01       	movw	r22, r28
    209c:	6f 5f       	subi	r22, 0xFF	; 255
    209e:	7f 4f       	sbci	r23, 0xFF	; 255
    20a0:	81 e8       	ldi	r24, 0x81	; 129
    20a2:	98 e1       	ldi	r25, 0x18	; 24
    20a4:	0e 94 b5 02 	call	0x56a	; 0x56a <BUFFER_ReadString>
    20a8:	00 97       	sbiw	r24, 0x00	; 0
    20aa:	99 f6       	brne	.-90     	; 0x2052 <ESP8266_Update+0x252>
    20ac:	df cf       	rjmp	.-66     	; 0x206c <ESP8266_Update+0x26c>
    20ae:	9c 01       	movw	r18, r24
    20b0:	40 e0       	ldi	r20, 0x00	; 0
    20b2:	be 01       	movw	r22, r28
    20b4:	6f 5f       	subi	r22, 0xFF	; 255
    20b6:	7f 4f       	sbci	r23, 0xFF	; 255
    20b8:	c8 01       	movw	r24, r16
    20ba:	0e 94 27 06 	call	0xc4e	; 0xc4e <ParseReceived>
    20be:	d7 01       	movw	r26, r14
    20c0:	8c 91       	ld	r24, X
    20c2:	81 11       	cpse	r24, r1
    20c4:	21 c0       	rjmp	.+66     	; 0x2108 <ESP8266_Update+0x308>
    20c6:	f8 01       	movw	r30, r16
    20c8:	84 81       	ldd	r24, Z+4	; 0x04
    20ca:	95 81       	ldd	r25, Z+5	; 0x05
    20cc:	a6 81       	ldd	r26, Z+6	; 0x06
    20ce:	b7 81       	ldd	r27, Z+7	; 0x07
    20d0:	89 2b       	or	r24, r25
    20d2:	8a 2b       	or	r24, r26
    20d4:	8b 2b       	or	r24, r27
    20d6:	31 f0       	breq	.+12     	; 0x20e4 <ESP8266_Update+0x2e4>
    20d8:	53 c1       	rjmp	.+678    	; 0x2380 <__stack+0x181>
    20da:	78 01       	movw	r14, r16
    20dc:	f0 e1       	ldi	r31, 0x10	; 16
    20de:	ef 1a       	sub	r14, r31
    20e0:	fe ef       	ldi	r31, 0xFE	; 254
    20e2:	ff 0a       	sbc	r15, r31
    20e4:	40 e8       	ldi	r20, 0x80	; 128
    20e6:	50 e0       	ldi	r21, 0x00	; 0
    20e8:	be 01       	movw	r22, r28
    20ea:	6f 5f       	subi	r22, 0xFF	; 255
    20ec:	7f 4f       	sbci	r23, 0xFF	; 255
    20ee:	8d e8       	ldi	r24, 0x8D	; 141
    20f0:	98 e1       	ldi	r25, 0x18	; 24
    20f2:	0e 94 b5 02 	call	0x56a	; 0x56a <BUFFER_ReadString>
    20f6:	00 97       	sbiw	r24, 0x00	; 0
    20f8:	d1 f6       	brne	.-76     	; 0x20ae <ESP8266_Update+0x2ae>
    20fa:	f8 01       	movw	r30, r16
    20fc:	e0 51       	subi	r30, 0x10	; 16
    20fe:	fe 4f       	sbci	r31, 0xFE	; 254
    2100:	80 81       	ld	r24, Z
    2102:	88 23       	and	r24, r24
    2104:	09 f4       	brne	.+2      	; 0x2108 <ESP8266_Update+0x308>
    2106:	3c c1       	rjmp	.+632    	; 0x2380 <__stack+0x181>
    2108:	f8 01       	movw	r30, r16
    210a:	ea 50       	subi	r30, 0x0A	; 10
    210c:	fe 4f       	sbci	r31, 0xFE	; 254
    210e:	80 81       	ld	r24, Z
    2110:	81 11       	cpse	r24, r1
    2112:	07 c0       	rjmp	.+14     	; 0x2122 <ESP8266_Update+0x322>
    2114:	0f 2e       	mov	r0, r31
    2116:	fd e8       	ldi	r31, 0x8D	; 141
    2118:	af 2e       	mov	r10, r31
    211a:	f8 e1       	ldi	r31, 0x18	; 24
    211c:	bf 2e       	mov	r11, r31
    211e:	f0 2d       	mov	r31, r0
    2120:	06 c0       	rjmp	.+12     	; 0x212e <ESP8266_Update+0x32e>
    2122:	0f 2e       	mov	r0, r31
    2124:	f1 e8       	ldi	r31, 0x81	; 129
    2126:	af 2e       	mov	r10, r31
    2128:	f8 e1       	ldi	r31, 0x18	; 24
    212a:	bf 2e       	mov	r11, r31
    212c:	f0 2d       	mov	r31, r0
    212e:	78 01       	movw	r14, r16
    2130:	2f e0       	ldi	r18, 0x0F	; 15
    2132:	e2 1a       	sub	r14, r18
    2134:	2e ef       	ldi	r18, 0xFE	; 254
    2136:	f2 0a       	sbc	r15, r18
    2138:	68 01       	movw	r12, r16
    213a:	3b e0       	ldi	r19, 0x0B	; 11
    213c:	c3 1a       	sub	r12, r19
    213e:	3e ef       	ldi	r19, 0xFE	; 254
    2140:	d3 0a       	sbc	r13, r19
    2142:	0f 2e       	mov	r0, r31
    2144:	f2 e4       	ldi	r31, 0x42	; 66
    2146:	7f 2e       	mov	r7, r31
    2148:	f0 2d       	mov	r31, r0
    214a:	48 01       	movw	r8, r16
    214c:	8d e0       	ldi	r24, 0x0D	; 13
    214e:	88 1a       	sub	r8, r24
    2150:	8e ef       	ldi	r24, 0xFE	; 254
    2152:	98 0a       	sbc	r9, r24
    2154:	83 c0       	rjmp	.+262    	; 0x225c <__stack+0x5d>
    2156:	41 e0       	ldi	r20, 0x01	; 1
    2158:	50 e0       	ldi	r21, 0x00	; 0
    215a:	be 01       	movw	r22, r28
    215c:	6f 57       	subi	r22, 0x7F	; 127
    215e:	7f 4f       	sbci	r23, 0xFF	; 255
    2160:	c5 01       	movw	r24, r10
    2162:	0e 94 23 01 	call	0x246	; 0x246 <BUFFER_Read>
    2166:	cf 57       	subi	r28, 0x7F	; 127
    2168:	df 4f       	sbci	r29, 0xFF	; 255
    216a:	28 81       	ld	r18, Y
    216c:	c1 58       	subi	r28, 0x81	; 129
    216e:	d0 40       	sbci	r29, 0x00	; 0
    2170:	d6 01       	movw	r26, r12
    2172:	8c 91       	ld	r24, X
    2174:	f8 01       	movw	r30, r16
    2176:	78 9e       	mul	r7, r24
    2178:	e0 0d       	add	r30, r0
    217a:	f1 1d       	adc	r31, r1
    217c:	11 24       	eor	r1, r1
    217e:	e5 59       	subi	r30, 0x95	; 149
    2180:	ff 4f       	sbci	r31, 0xFF	; 255
    2182:	01 90       	ld	r0, Z+
    2184:	f0 81       	ld	r31, Z
    2186:	e0 2d       	mov	r30, r0
    2188:	d7 01       	movw	r26, r14
    218a:	8d 91       	ld	r24, X+
    218c:	9c 91       	ld	r25, X
    218e:	11 97       	sbiw	r26, 0x01	; 1
    2190:	e8 0f       	add	r30, r24
    2192:	f9 1f       	adc	r31, r25
    2194:	20 83       	st	Z, r18
    2196:	8d 91       	ld	r24, X+
    2198:	9c 91       	ld	r25, X
    219a:	11 97       	sbiw	r26, 0x01	; 1
    219c:	01 96       	adiw	r24, 0x01	; 1
    219e:	8d 93       	st	X+, r24
    21a0:	9c 93       	st	X, r25
    21a2:	f4 01       	movw	r30, r8
    21a4:	20 81       	ld	r18, Z
    21a6:	31 81       	ldd	r19, Z+1	; 0x01
    21a8:	2f 5f       	subi	r18, 0xFF	; 255
    21aa:	3f 4f       	sbci	r19, 0xFF	; 255
    21ac:	31 83       	std	Z+1, r19	; 0x01
    21ae:	20 83       	st	Z, r18
    21b0:	84 3b       	cpi	r24, 0xB4	; 180
    21b2:	f5 e0       	ldi	r31, 0x05	; 5
    21b4:	9f 07       	cpc	r25, r31
    21b6:	08 f4       	brcc	.+2      	; 0x21ba <ESP8266_Update+0x3ba>
    21b8:	51 c0       	rjmp	.+162    	; 0x225c <__stack+0x5d>
    21ba:	d6 01       	movw	r26, r12
    21bc:	2c 91       	ld	r18, X
    21be:	1c 01       	movw	r2, r24
    21c0:	41 2c       	mov	r4, r1
    21c2:	51 2c       	mov	r5, r1
    21c4:	a2 2f       	mov	r26, r18
    21c6:	b0 e0       	ldi	r27, 0x00	; 0
    21c8:	f8 01       	movw	r30, r16
    21ca:	72 9e       	mul	r7, r18
    21cc:	e0 0d       	add	r30, r0
    21ce:	f1 1d       	adc	r31, r1
    21d0:	11 24       	eor	r1, r1
    21d2:	ef 59       	subi	r30, 0x9F	; 159
    21d4:	ff 4f       	sbci	r31, 0xFF	; 255
    21d6:	40 81       	ld	r20, Z
    21d8:	51 81       	ldd	r21, Z+1	; 0x01
    21da:	62 81       	ldd	r22, Z+2	; 0x02
    21dc:	73 81       	ldd	r23, Z+3	; 0x03
    21de:	24 16       	cp	r2, r20
    21e0:	35 06       	cpc	r3, r21
    21e2:	46 06       	cpc	r4, r22
    21e4:	57 06       	cpc	r5, r23
    21e6:	d1 f1       	breq	.+116    	; 0x225c <__stack+0x5d>
    21e8:	7a 9e       	mul	r7, r26
    21ea:	90 01       	movw	r18, r0
    21ec:	7b 9e       	mul	r7, r27
    21ee:	30 0d       	add	r19, r0
    21f0:	11 24       	eor	r1, r1
    21f2:	20 0f       	add	r18, r16
    21f4:	31 1f       	adc	r19, r17
    21f6:	f9 01       	movw	r30, r18
    21f8:	e3 59       	subi	r30, 0x93	; 147
    21fa:	ff 4f       	sbci	r31, 0xFF	; 255
    21fc:	91 83       	std	Z+1, r25	; 0x01
    21fe:	80 83       	st	Z, r24
    2200:	32 96       	adiw	r30, 0x02	; 2
    2202:	10 82       	st	Z, r1
    2204:	75 97       	sbiw	r30, 0x15	; 21
    2206:	80 81       	ld	r24, Z
    2208:	88 23       	and	r24, r24
    220a:	91 f0       	breq	.+36     	; 0x2230 <__stack+0x31>
    220c:	7a 9e       	mul	r7, r26
    220e:	b0 01       	movw	r22, r0
    2210:	7b 9e       	mul	r7, r27
    2212:	70 0d       	add	r23, r0
    2214:	11 24       	eor	r1, r1
    2216:	f9 01       	movw	r30, r18
    2218:	e5 59       	subi	r30, 0x95	; 149
    221a:	ff 4f       	sbci	r31, 0xFF	; 255
    221c:	40 81       	ld	r20, Z
    221e:	51 81       	ldd	r21, Z+1	; 0x01
    2220:	68 5a       	subi	r22, 0xA8	; 168
    2222:	7f 4f       	sbci	r23, 0xFF	; 255
    2224:	60 0f       	add	r22, r16
    2226:	71 1f       	adc	r23, r17
    2228:	c8 01       	movw	r24, r16
    222a:	0e 94 36 19 	call	0x326c	; 0x326c <ESP8266_Callback_ClientConnectionDataReceived>
    222e:	13 c0       	rjmp	.+38     	; 0x2256 <__stack+0x57>
    2230:	7a 9e       	mul	r7, r26
    2232:	b0 01       	movw	r22, r0
    2234:	7b 9e       	mul	r7, r27
    2236:	70 0d       	add	r23, r0
    2238:	11 24       	eor	r1, r1
    223a:	f8 01       	movw	r30, r16
    223c:	e6 0f       	add	r30, r22
    223e:	f7 1f       	adc	r31, r23
    2240:	e5 59       	subi	r30, 0x95	; 149
    2242:	ff 4f       	sbci	r31, 0xFF	; 255
    2244:	40 81       	ld	r20, Z
    2246:	51 81       	ldd	r21, Z+1	; 0x01
    2248:	68 5a       	subi	r22, 0xA8	; 168
    224a:	7f 4f       	sbci	r23, 0xFF	; 255
    224c:	60 0f       	add	r22, r16
    224e:	71 1f       	adc	r23, r17
    2250:	c8 01       	movw	r24, r16
    2252:	0e 94 a8 05 	call	0xb50	; 0xb50 <ESP8266_Callback_ServerConnectionDataReceived>
    2256:	f7 01       	movw	r30, r14
    2258:	11 82       	std	Z+1, r1	; 0x01
    225a:	10 82       	st	Z, r1
    225c:	d7 01       	movw	r26, r14
    225e:	8d 91       	ld	r24, X+
    2260:	9c 91       	ld	r25, X
    2262:	a0 e0       	ldi	r26, 0x00	; 0
    2264:	b0 e0       	ldi	r27, 0x00	; 0
    2266:	f6 01       	movw	r30, r12
    2268:	20 81       	ld	r18, Z
    226a:	f8 01       	movw	r30, r16
    226c:	72 9e       	mul	r7, r18
    226e:	e0 0d       	add	r30, r0
    2270:	f1 1d       	adc	r31, r1
    2272:	11 24       	eor	r1, r1
    2274:	ef 59       	subi	r30, 0x9F	; 159
    2276:	ff 4f       	sbci	r31, 0xFF	; 255
    2278:	40 81       	ld	r20, Z
    227a:	51 81       	ldd	r21, Z+1	; 0x01
    227c:	62 81       	ldd	r22, Z+2	; 0x02
    227e:	73 81       	ldd	r23, Z+3	; 0x03
    2280:	84 17       	cp	r24, r20
    2282:	95 07       	cpc	r25, r21
    2284:	a6 07       	cpc	r26, r22
    2286:	b7 07       	cpc	r27, r23
    2288:	30 f4       	brcc	.+12     	; 0x2296 <__stack+0x97>
    228a:	c5 01       	movw	r24, r10
    228c:	0e 94 9e 01 	call	0x33c	; 0x33c <BUFFER_GetFull>
    2290:	89 2b       	or	r24, r25
    2292:	09 f0       	breq	.+2      	; 0x2296 <__stack+0x97>
    2294:	60 cf       	rjmp	.-320    	; 0x2156 <ESP8266_Update+0x356>
    2296:	f8 01       	movw	r30, r16
    2298:	eb 50       	subi	r30, 0x0B	; 11
    229a:	fe 4f       	sbci	r31, 0xFE	; 254
    229c:	20 81       	ld	r18, Z
    229e:	32 97       	sbiw	r30, 0x02	; 2
    22a0:	80 81       	ld	r24, Z
    22a2:	91 81       	ldd	r25, Z+1	; 0x01
    22a4:	a0 e0       	ldi	r26, 0x00	; 0
    22a6:	b0 e0       	ldi	r27, 0x00	; 0
    22a8:	e2 2e       	mov	r14, r18
    22aa:	f1 2c       	mov	r15, r1
    22ac:	f8 01       	movw	r30, r16
    22ae:	32 e4       	ldi	r19, 0x42	; 66
    22b0:	23 9f       	mul	r18, r19
    22b2:	e0 0d       	add	r30, r0
    22b4:	f1 1d       	adc	r31, r1
    22b6:	11 24       	eor	r1, r1
    22b8:	ef 59       	subi	r30, 0x9F	; 159
    22ba:	ff 4f       	sbci	r31, 0xFF	; 255
    22bc:	40 81       	ld	r20, Z
    22be:	51 81       	ldd	r21, Z+1	; 0x01
    22c0:	62 81       	ldd	r22, Z+2	; 0x02
    22c2:	73 81       	ldd	r23, Z+3	; 0x03
    22c4:	84 17       	cp	r24, r20
    22c6:	95 07       	cpc	r25, r21
    22c8:	a6 07       	cpc	r26, r22
    22ca:	b7 07       	cpc	r27, r23
    22cc:	08 f4       	brcc	.+2      	; 0x22d0 <__stack+0xd1>
    22ce:	58 c0       	rjmp	.+176    	; 0x2380 <__stack+0x181>
    22d0:	f8 01       	movw	r30, r16
    22d2:	e0 51       	subi	r30, 0x10	; 16
    22d4:	fe 4f       	sbci	r31, 0xFE	; 254
    22d6:	10 82       	st	Z, r1
    22d8:	22 e4       	ldi	r18, 0x42	; 66
    22da:	2e 9d       	mul	r18, r14
    22dc:	c0 01       	movw	r24, r0
    22de:	2f 9d       	mul	r18, r15
    22e0:	90 0d       	add	r25, r0
    22e2:	11 24       	eor	r1, r1
    22e4:	80 0f       	add	r24, r16
    22e6:	91 1f       	adc	r25, r17
    22e8:	fc 01       	movw	r30, r24
    22ea:	e3 59       	subi	r30, 0x93	; 147
    22ec:	ff 4f       	sbci	r31, 0xFF	; 255
    22ee:	d8 01       	movw	r26, r16
    22f0:	af 50       	subi	r26, 0x0F	; 15
    22f2:	be 4f       	sbci	r27, 0xFE	; 254
    22f4:	2d 91       	ld	r18, X+
    22f6:	3c 91       	ld	r19, X
    22f8:	31 83       	std	Z+1, r19	; 0x01
    22fa:	20 83       	st	Z, r18
    22fc:	32 96       	adiw	r30, 0x02	; 2
    22fe:	21 e0       	ldi	r18, 0x01	; 1
    2300:	20 83       	st	Z, r18
    2302:	b9 96       	adiw	r30, 0x29	; 41
    2304:	80 81       	ld	r24, Z
    2306:	88 23       	and	r24, r24
    2308:	29 f1       	breq	.+74     	; 0x2354 <__stack+0x155>
    230a:	82 e4       	ldi	r24, 0x42	; 66
    230c:	8e 9d       	mul	r24, r14
    230e:	f0 01       	movw	r30, r0
    2310:	8f 9d       	mul	r24, r15
    2312:	f0 0d       	add	r31, r0
    2314:	11 24       	eor	r1, r1
    2316:	e0 0f       	add	r30, r16
    2318:	f1 1f       	adc	r31, r17
    231a:	e5 59       	subi	r30, 0x95	; 149
    231c:	ff 4f       	sbci	r31, 0xFF	; 255
    231e:	66 e0       	ldi	r22, 0x06	; 6
    2320:	74 e0       	ldi	r23, 0x04	; 4
    2322:	80 81       	ld	r24, Z
    2324:	91 81       	ldd	r25, Z+1	; 0x01
    2326:	0e 94 4b 1b 	call	0x3696	; 0x3696 <strstr>
    232a:	00 97       	sbiw	r24, 0x00	; 0
    232c:	99 f0       	breq	.+38     	; 0x2354 <__stack+0x155>
    232e:	60 e0       	ldi	r22, 0x00	; 0
    2330:	70 e0       	ldi	r23, 0x00	; 0
    2332:	40 96       	adiw	r24, 0x10	; 16
    2334:	0e 94 20 03 	call	0x640	; 0x640 <ParseNumber>
    2338:	22 e4       	ldi	r18, 0x42	; 66
    233a:	2e 9d       	mul	r18, r14
    233c:	f0 01       	movw	r30, r0
    233e:	2f 9d       	mul	r18, r15
    2340:	f0 0d       	add	r31, r0
    2342:	11 24       	eor	r1, r1
    2344:	e0 0f       	add	r30, r16
    2346:	f1 1f       	adc	r31, r17
    2348:	ef 58       	subi	r30, 0x8F	; 143
    234a:	ff 4f       	sbci	r31, 0xFF	; 255
    234c:	60 83       	st	Z, r22
    234e:	71 83       	std	Z+1, r23	; 0x01
    2350:	82 83       	std	Z+2, r24	; 0x02
    2352:	93 83       	std	Z+3, r25	; 0x03
    2354:	f8 01       	movw	r30, r16
    2356:	eb 50       	subi	r30, 0x0B	; 11
    2358:	fe 4f       	sbci	r31, 0xFE	; 254
    235a:	80 81       	ld	r24, Z
    235c:	f8 01       	movw	r30, r16
    235e:	92 e4       	ldi	r25, 0x42	; 66
    2360:	89 9f       	mul	r24, r25
    2362:	e0 0d       	add	r30, r0
    2364:	f1 1d       	adc	r31, r1
    2366:	11 24       	eor	r1, r1
    2368:	e0 59       	subi	r30, 0x90	; 144
    236a:	ff 4f       	sbci	r31, 0xFF	; 255
    236c:	81 e0       	ldi	r24, 0x01	; 1
    236e:	80 83       	st	Z, r24
    2370:	07 c0       	rjmp	.+14     	; 0x2380 <__stack+0x181>
    2372:	f8 01       	movw	r30, r16
    2374:	e9 53       	subi	r30, 0x39	; 57
    2376:	fd 4f       	sbci	r31, 0xFD	; 253
    2378:	80 81       	ld	r24, Z
    237a:	80 ff       	sbrs	r24, 0
    237c:	63 ce       	rjmp	.-826    	; 0x2044 <ESP8266_Update+0x244>
    237e:	b5 cd       	rjmp	.-1174   	; 0x1eea <ESP8266_Update+0xea>
    2380:	c8 01       	movw	r24, r16
    2382:	0e 94 ad 05 	call	0xb5a	; 0xb5a <CallConnectionCallbacks>
    2386:	f8 01       	movw	r30, r16
    2388:	e6 53       	subi	r30, 0x36	; 54
    238a:	fd 4f       	sbci	r31, 0xFD	; 253
    238c:	10 82       	st	Z, r1
    238e:	80 e0       	ldi	r24, 0x00	; 0
    2390:	cd 57       	subi	r28, 0x7D	; 125
    2392:	df 4f       	sbci	r29, 0xFF	; 255
    2394:	0f b6       	in	r0, 0x3f	; 63
    2396:	f8 94       	cli
    2398:	de bf       	out	0x3e, r29	; 62
    239a:	0f be       	out	0x3f, r0	; 63
    239c:	cd bf       	out	0x3d, r28	; 61
    239e:	df 91       	pop	r29
    23a0:	cf 91       	pop	r28
    23a2:	1f 91       	pop	r17
    23a4:	0f 91       	pop	r16
    23a6:	ff 90       	pop	r15
    23a8:	ef 90       	pop	r14
    23aa:	df 90       	pop	r13
    23ac:	cf 90       	pop	r12
    23ae:	bf 90       	pop	r11
    23b0:	af 90       	pop	r10
    23b2:	9f 90       	pop	r9
    23b4:	8f 90       	pop	r8
    23b6:	7f 90       	pop	r7
    23b8:	5f 90       	pop	r5
    23ba:	4f 90       	pop	r4
    23bc:	3f 90       	pop	r3
    23be:	2f 90       	pop	r2
    23c0:	08 95       	ret

000023c2 <SendCommand>:
    23c2:	cf 92       	push	r12
    23c4:	df 92       	push	r13
    23c6:	ff 92       	push	r15
    23c8:	0f 93       	push	r16
    23ca:	1f 93       	push	r17
    23cc:	cf 93       	push	r28
    23ce:	df 93       	push	r29
    23d0:	ec 01       	movw	r28, r24
    23d2:	f6 2e       	mov	r15, r22
    23d4:	6a 01       	movw	r12, r20
    23d6:	89 01       	movw	r16, r18
    23d8:	8c 81       	ldd	r24, Y+4	; 0x04
    23da:	9d 81       	ldd	r25, Y+5	; 0x05
    23dc:	ae 81       	ldd	r26, Y+6	; 0x06
    23de:	bf 81       	ldd	r27, Y+7	; 0x07
    23e0:	89 2b       	or	r24, r25
    23e2:	8a 2b       	or	r24, r26
    23e4:	8b 2b       	or	r24, r27
    23e6:	39 f0       	breq	.+14     	; 0x23f6 <SendCommand+0x34>
    23e8:	ce 01       	movw	r24, r28
    23ea:	0a dd       	rcall	.-1516   	; 0x1e00 <ESP8266_Update>
    23ec:	c6 53       	subi	r28, 0x36	; 54
    23ee:	dd 4f       	sbci	r29, 0xFD	; 253
    23f0:	87 e0       	ldi	r24, 0x07	; 7
    23f2:	88 83       	st	Y, r24
    23f4:	32 c0       	rjmp	.+100    	; 0x245a <SendCommand+0x98>
    23f6:	81 e1       	ldi	r24, 0x11	; 17
    23f8:	68 13       	cpse	r22, r24
    23fa:	04 c0       	rjmp	.+8      	; 0x2404 <SendCommand+0x42>
    23fc:	81 e8       	ldi	r24, 0x81	; 129
    23fe:	98 e1       	ldi	r25, 0x18	; 24
    2400:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <BUFFER_Reset>
    2404:	f6 01       	movw	r30, r12
    2406:	01 90       	ld	r0, Z+
    2408:	00 20       	and	r0, r0
    240a:	e9 f7       	brne	.-6      	; 0x2406 <SendCommand+0x44>
    240c:	31 97       	sbiw	r30, 0x01	; 1
    240e:	bf 01       	movw	r22, r30
    2410:	6c 19       	sub	r22, r12
    2412:	7d 09       	sbc	r23, r13
    2414:	c6 01       	movw	r24, r12
    2416:	ed d4       	rcall	.+2522   	; 0x2df2 <ESP8266_LL_USARTSend>
    2418:	8f 2d       	mov	r24, r15
    241a:	90 e0       	ldi	r25, 0x00	; 0
    241c:	a0 e0       	ldi	r26, 0x00	; 0
    241e:	b0 e0       	ldi	r27, 0x00	; 0
    2420:	8c 83       	std	Y+4, r24	; 0x04
    2422:	9d 83       	std	Y+5, r25	; 0x05
    2424:	ae 83       	std	Y+6, r26	; 0x06
    2426:	bf 83       	std	Y+7, r27	; 0x07
    2428:	18 86       	std	Y+8, r1	; 0x08
    242a:	b8 01       	movw	r22, r16
    242c:	ce 01       	movw	r24, r28
    242e:	08 96       	adiw	r24, 0x08	; 8
    2430:	0e 94 27 1b 	call	0x364e	; 0x364e <strcpy>
    2434:	fe 01       	movw	r30, r28
    2436:	e8 5b       	subi	r30, 0xB8	; 184
    2438:	ff 4f       	sbci	r31, 0xFF	; 255
    243a:	de 01       	movw	r26, r28
    243c:	a4 5b       	subi	r26, 0xB4	; 180
    243e:	bf 4f       	sbci	r27, 0xFF	; 255
    2440:	8d 91       	ld	r24, X+
    2442:	9d 91       	ld	r25, X+
    2444:	0d 90       	ld	r0, X+
    2446:	bc 91       	ld	r27, X
    2448:	a0 2d       	mov	r26, r0
    244a:	80 83       	st	Z, r24
    244c:	91 83       	std	Z+1, r25	; 0x01
    244e:	a2 83       	std	Z+2, r26	; 0x02
    2450:	b3 83       	std	Z+3, r27	; 0x03
    2452:	c6 53       	subi	r28, 0x36	; 54
    2454:	dd 4f       	sbci	r29, 0xFD	; 253
    2456:	18 82       	st	Y, r1
    2458:	80 e0       	ldi	r24, 0x00	; 0
    245a:	df 91       	pop	r29
    245c:	cf 91       	pop	r28
    245e:	1f 91       	pop	r17
    2460:	0f 91       	pop	r16
    2462:	ff 90       	pop	r15
    2464:	df 90       	pop	r13
    2466:	cf 90       	pop	r12
    2468:	08 95       	ret

0000246a <ESP8266_WifiDisconnect>:
    246a:	22 e5       	ldi	r18, 0x52	; 82
    246c:	34 e0       	ldi	r19, 0x04	; 4
    246e:	4b e5       	ldi	r20, 0x5B	; 91
    2470:	54 e0       	ldi	r21, 0x04	; 4
    2472:	61 e0       	ldi	r22, 0x01	; 1
    2474:	a6 cf       	rjmp	.-180    	; 0x23c2 <SendCommand>
    2476:	08 95       	ret

00002478 <ESP8266_WifiConnect>:
    2478:	cf 92       	push	r12
    247a:	df 92       	push	r13
    247c:	ef 92       	push	r14
    247e:	ff 92       	push	r15
    2480:	0f 93       	push	r16
    2482:	1f 93       	push	r17
    2484:	cf 93       	push	r28
    2486:	df 93       	push	r29
    2488:	cd b7       	in	r28, 0x3d	; 61
    248a:	de b7       	in	r29, 0x3e	; 62
    248c:	c8 59       	subi	r28, 0x98	; 152
    248e:	d1 09       	sbc	r29, r1
    2490:	0f b6       	in	r0, 0x3f	; 63
    2492:	f8 94       	cli
    2494:	de bf       	out	0x3e, r29	; 62
    2496:	0f be       	out	0x3f, r0	; 63
    2498:	cd bf       	out	0x3d, r28	; 61
    249a:	6c 01       	movw	r12, r24
    249c:	cb 01       	movw	r24, r22
    249e:	7a 01       	movw	r14, r20
    24a0:	0e 94 79 03 	call	0x6f2	; 0x6f2 <EscapeString>
    24a4:	8e 01       	movw	r16, r28
    24a6:	0f 5a       	subi	r16, 0xAF	; 175
    24a8:	1f 4f       	sbci	r17, 0xFF	; 255
    24aa:	bc 01       	movw	r22, r24
    24ac:	c8 01       	movw	r24, r16
    24ae:	0e 94 27 1b 	call	0x364e	; 0x364e <strcpy>
    24b2:	c7 01       	movw	r24, r14
    24b4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <EscapeString>
    24b8:	7e 01       	movw	r14, r28
    24ba:	29 e7       	ldi	r18, 0x79	; 121
    24bc:	e2 0e       	add	r14, r18
    24be:	f1 1c       	adc	r15, r1
    24c0:	bc 01       	movw	r22, r24
    24c2:	c7 01       	movw	r24, r14
    24c4:	0e 94 27 1b 	call	0x364e	; 0x364e <strcpy>
    24c8:	ff 92       	push	r15
    24ca:	ef 92       	push	r14
    24cc:	1f 93       	push	r17
    24ce:	0f 93       	push	r16
    24d0:	26 e6       	ldi	r18, 0x66	; 102
    24d2:	34 e0       	ldi	r19, 0x04	; 4
    24d4:	3f 93       	push	r19
    24d6:	2f 93       	push	r18
    24d8:	00 55       	subi	r16, 0x50	; 80
    24da:	11 09       	sbc	r17, r1
    24dc:	1f 93       	push	r17
    24de:	0f 93       	push	r16
    24e0:	0e 94 cf 1b 	call	0x379e	; 0x379e <sprintf>
    24e4:	2e e9       	ldi	r18, 0x9E	; 158
    24e6:	33 e0       	ldi	r19, 0x03	; 3
    24e8:	a8 01       	movw	r20, r16
    24ea:	63 e0       	ldi	r22, 0x03	; 3
    24ec:	c6 01       	movw	r24, r12
    24ee:	69 df       	rcall	.-302    	; 0x23c2 <SendCommand>
    24f0:	0f b6       	in	r0, 0x3f	; 63
    24f2:	f8 94       	cli
    24f4:	de bf       	out	0x3e, r29	; 62
    24f6:	0f be       	out	0x3f, r0	; 63
    24f8:	cd bf       	out	0x3d, r28	; 61
    24fa:	c8 56       	subi	r28, 0x68	; 104
    24fc:	df 4f       	sbci	r29, 0xFF	; 255
    24fe:	0f b6       	in	r0, 0x3f	; 63
    2500:	f8 94       	cli
    2502:	de bf       	out	0x3e, r29	; 62
    2504:	0f be       	out	0x3f, r0	; 63
    2506:	cd bf       	out	0x3d, r28	; 61
    2508:	df 91       	pop	r29
    250a:	cf 91       	pop	r28
    250c:	1f 91       	pop	r17
    250e:	0f 91       	pop	r16
    2510:	ff 90       	pop	r15
    2512:	ef 90       	pop	r14
    2514:	df 90       	pop	r13
    2516:	cf 90       	pop	r12
    2518:	08 95       	ret

0000251a <ESP8266_WifiGetConnected>:
    251a:	26 ea       	ldi	r18, 0xA6	; 166
    251c:	33 e0       	ldi	r19, 0x03	; 3
    251e:	48 e9       	ldi	r20, 0x98	; 152
    2520:	54 e0       	ldi	r21, 0x04	; 4
    2522:	63 e1       	ldi	r22, 0x13	; 19
    2524:	4e cf       	rjmp	.-356    	; 0x23c2 <SendCommand>
    2526:	08 95       	ret

00002528 <ESP8266_GetSTAIP>:
    2528:	cf 93       	push	r28
    252a:	df 93       	push	r29
    252c:	ec 01       	movw	r28, r24
    252e:	28 ea       	ldi	r18, 0xA8	; 168
    2530:	34 e0       	ldi	r19, 0x04	; 4
    2532:	44 eb       	ldi	r20, 0xB4	; 180
    2534:	54 e0       	ldi	r21, 0x04	; 4
    2536:	66 e1       	ldi	r22, 0x16	; 22
    2538:	44 df       	rcall	.-376    	; 0x23c2 <SendCommand>
    253a:	fe 01       	movw	r30, r28
    253c:	e6 53       	subi	r30, 0x36	; 54
    253e:	fd 4f       	sbci	r31, 0xFD	; 253
    2540:	80 81       	ld	r24, Z
    2542:	81 11       	cpse	r24, r1
    2544:	06 c0       	rjmp	.+12     	; 0x2552 <ESP8266_GetSTAIP+0x2a>
    2546:	ca 53       	subi	r28, 0x3A	; 58
    2548:	dd 4f       	sbci	r29, 0xFD	; 253
    254a:	98 81       	ld	r25, Y
    254c:	9c 7f       	andi	r25, 0xFC	; 252
    254e:	9b 7f       	andi	r25, 0xFB	; 251
    2550:	98 83       	st	Y, r25
    2552:	df 91       	pop	r29
    2554:	cf 91       	pop	r28
    2556:	08 95       	ret

00002558 <ESP8266_GetAPIP>:
    2558:	cf 93       	push	r28
    255a:	df 93       	push	r29
    255c:	ec 01       	movw	r28, r24
    255e:	25 ec       	ldi	r18, 0xC5	; 197
    2560:	34 e0       	ldi	r19, 0x04	; 4
    2562:	40 ed       	ldi	r20, 0xD0	; 208
    2564:	54 e0       	ldi	r21, 0x04	; 4
    2566:	67 e1       	ldi	r22, 0x17	; 23
    2568:	2c df       	rcall	.-424    	; 0x23c2 <SendCommand>
    256a:	fe 01       	movw	r30, r28
    256c:	e6 53       	subi	r30, 0x36	; 54
    256e:	fd 4f       	sbci	r31, 0xFD	; 253
    2570:	80 81       	ld	r24, Z
    2572:	81 11       	cpse	r24, r1
    2574:	06 c0       	rjmp	.+12     	; 0x2582 <ESP8266_GetAPIP+0x2a>
    2576:	ca 53       	subi	r28, 0x3A	; 58
    2578:	dd 4f       	sbci	r29, 0xFD	; 253
    257a:	98 81       	ld	r25, Y
    257c:	9f 7c       	andi	r25, 0xCF	; 207
    257e:	9f 7b       	andi	r25, 0xBF	; 191
    2580:	98 83       	st	Y, r25
    2582:	df 91       	pop	r29
    2584:	cf 91       	pop	r28
    2586:	08 95       	ret

00002588 <ESP8266_GetSTAMAC>:
    2588:	cf 93       	push	r28
    258a:	df 93       	push	r29
    258c:	ec 01       	movw	r28, r24
    258e:	2b ed       	ldi	r18, 0xDB	; 219
    2590:	33 e0       	ldi	r19, 0x03	; 3
    2592:	40 ee       	ldi	r20, 0xE0	; 224
    2594:	54 e0       	ldi	r21, 0x04	; 4
    2596:	68 e1       	ldi	r22, 0x18	; 24
    2598:	14 df       	rcall	.-472    	; 0x23c2 <SendCommand>
    259a:	fe 01       	movw	r30, r28
    259c:	e6 53       	subi	r30, 0x36	; 54
    259e:	fd 4f       	sbci	r31, 0xFD	; 253
    25a0:	80 81       	ld	r24, Z
    25a2:	81 11       	cpse	r24, r1
    25a4:	05 c0       	rjmp	.+10     	; 0x25b0 <ESP8266_GetSTAMAC+0x28>
    25a6:	ca 53       	subi	r28, 0x3A	; 58
    25a8:	dd 4f       	sbci	r29, 0xFD	; 253
    25aa:	98 81       	ld	r25, Y
    25ac:	97 7f       	andi	r25, 0xF7	; 247
    25ae:	98 83       	st	Y, r25
    25b0:	df 91       	pop	r29
    25b2:	cf 91       	pop	r28
    25b4:	08 95       	ret

000025b6 <ESP8266_GetAPMAC>:
    25b6:	cf 93       	push	r28
    25b8:	df 93       	push	r29
    25ba:	ec 01       	movw	r28, r24
    25bc:	26 ee       	ldi	r18, 0xE6	; 230
    25be:	33 e0       	ldi	r19, 0x03	; 3
    25c0:	40 ef       	ldi	r20, 0xF0	; 240
    25c2:	54 e0       	ldi	r21, 0x04	; 4
    25c4:	69 e1       	ldi	r22, 0x19	; 25
    25c6:	fd de       	rcall	.-518    	; 0x23c2 <SendCommand>
    25c8:	fe 01       	movw	r30, r28
    25ca:	e6 53       	subi	r30, 0x36	; 54
    25cc:	fd 4f       	sbci	r31, 0xFD	; 253
    25ce:	80 81       	ld	r24, Z
    25d0:	81 11       	cpse	r24, r1
    25d2:	05 c0       	rjmp	.+10     	; 0x25de <ESP8266_GetAPMAC+0x28>
    25d4:	ca 53       	subi	r28, 0x3A	; 58
    25d6:	dd 4f       	sbci	r29, 0xFD	; 253
    25d8:	98 81       	ld	r25, Y
    25da:	9f 77       	andi	r25, 0x7F	; 127
    25dc:	98 83       	st	Y, r25
    25de:	df 91       	pop	r29
    25e0:	cf 91       	pop	r28
    25e2:	08 95       	ret

000025e4 <ESP8266_ListWifiStations>:
    25e4:	10 92 80 12 	sts	0x1280, r1
    25e8:	2f ef       	ldi	r18, 0xFF	; 255
    25ea:	34 e0       	ldi	r19, 0x04	; 4
    25ec:	46 e0       	ldi	r20, 0x06	; 6
    25ee:	55 e0       	ldi	r21, 0x05	; 5
    25f0:	62 e0       	ldi	r22, 0x02	; 2
    25f2:	e7 ce       	rjmp	.-562    	; 0x23c2 <SendCommand>
    25f4:	08 95       	ret

000025f6 <ESP8266_WaitReady>:
    25f6:	0f 93       	push	r16
    25f8:	1f 93       	push	r17
    25fa:	cf 93       	push	r28
    25fc:	df 93       	push	r29
    25fe:	ec 01       	movw	r28, r24
    2600:	8c 01       	movw	r16, r24
    2602:	09 53       	subi	r16, 0x39	; 57
    2604:	1d 4f       	sbci	r17, 0xFD	; 253
    2606:	f8 01       	movw	r30, r16
    2608:	80 81       	ld	r24, Z
    260a:	80 ff       	sbrs	r24, 0
    260c:	11 c0       	rjmp	.+34     	; 0x2630 <ESP8266_WaitReady+0x3a>
    260e:	42 e0       	ldi	r20, 0x02	; 2
    2610:	50 e0       	ldi	r21, 0x00	; 0
    2612:	6c ef       	ldi	r22, 0xFC	; 252
    2614:	73 e0       	ldi	r23, 0x03	; 3
    2616:	81 e8       	ldi	r24, 0x81	; 129
    2618:	98 e1       	ldi	r25, 0x18	; 24
    261a:	0e 94 14 02 	call	0x428	; 0x428 <BUFFER_Find>
    261e:	99 23       	and	r25, r25
    2620:	3c f0       	brlt	.+14     	; 0x2630 <ESP8266_WaitReady+0x3a>
    2622:	fe 01       	movw	r30, r28
    2624:	ea 53       	subi	r30, 0x3A	; 58
    2626:	fd 4f       	sbci	r31, 0xFD	; 253
    2628:	81 81       	ldd	r24, Z+1	; 0x01
    262a:	8e 7f       	andi	r24, 0xFE	; 254
    262c:	81 83       	std	Z+1, r24	; 0x01
    262e:	0a c0       	rjmp	.+20     	; 0x2644 <ESP8266_WaitReady+0x4e>
    2630:	ce 01       	movw	r24, r28
    2632:	e6 db       	rcall	.-2100   	; 0x1e00 <ESP8266_Update>
    2634:	8c 81       	ldd	r24, Y+4	; 0x04
    2636:	9d 81       	ldd	r25, Y+5	; 0x05
    2638:	ae 81       	ldd	r26, Y+6	; 0x06
    263a:	bf 81       	ldd	r27, Y+7	; 0x07
    263c:	89 2b       	or	r24, r25
    263e:	8a 2b       	or	r24, r26
    2640:	8b 2b       	or	r24, r27
    2642:	09 f7       	brne	.-62     	; 0x2606 <ESP8266_WaitReady+0x10>
    2644:	c6 53       	subi	r28, 0x36	; 54
    2646:	dd 4f       	sbci	r29, 0xFD	; 253
    2648:	18 82       	st	Y, r1
    264a:	80 e0       	ldi	r24, 0x00	; 0
    264c:	df 91       	pop	r29
    264e:	cf 91       	pop	r28
    2650:	1f 91       	pop	r17
    2652:	0f 91       	pop	r16
    2654:	08 95       	ret

00002656 <ESP8266_SetMux>:
    2656:	ef 92       	push	r14
    2658:	ff 92       	push	r15
    265a:	0f 93       	push	r16
    265c:	1f 93       	push	r17
    265e:	cf 93       	push	r28
    2660:	df 93       	push	r29
    2662:	cd b7       	in	r28, 0x3d	; 61
    2664:	de b7       	in	r29, 0x3e	; 62
    2666:	2e 97       	sbiw	r28, 0x0e	; 14
    2668:	0f b6       	in	r0, 0x3f	; 63
    266a:	f8 94       	cli
    266c:	de bf       	out	0x3e, r29	; 62
    266e:	0f be       	out	0x3f, r0	; 63
    2670:	cd bf       	out	0x3d, r28	; 61
    2672:	8c 01       	movw	r16, r24
    2674:	1f 92       	push	r1
    2676:	6f 93       	push	r22
    2678:	8c e2       	ldi	r24, 0x2C	; 44
    267a:	95 e0       	ldi	r25, 0x05	; 5
    267c:	9f 93       	push	r25
    267e:	8f 93       	push	r24
    2680:	ce 01       	movw	r24, r28
    2682:	01 96       	adiw	r24, 0x01	; 1
    2684:	7c 01       	movw	r14, r24
    2686:	9f 93       	push	r25
    2688:	8f 93       	push	r24
    268a:	0e 94 cf 1b 	call	0x379e	; 0x379e <sprintf>
    268e:	2b e3       	ldi	r18, 0x3B	; 59
    2690:	35 e0       	ldi	r19, 0x05	; 5
    2692:	a7 01       	movw	r20, r14
    2694:	6b e0       	ldi	r22, 0x0B	; 11
    2696:	c8 01       	movw	r24, r16
    2698:	94 de       	rcall	.-728    	; 0x23c2 <SendCommand>
    269a:	f8 2e       	mov	r15, r24
    269c:	0f 90       	pop	r0
    269e:	0f 90       	pop	r0
    26a0:	0f 90       	pop	r0
    26a2:	0f 90       	pop	r0
    26a4:	0f 90       	pop	r0
    26a6:	0f 90       	pop	r0
    26a8:	88 23       	and	r24, r24
    26aa:	29 f0       	breq	.+10     	; 0x26b6 <ESP8266_SetMux+0x60>
    26ac:	f8 01       	movw	r30, r16
    26ae:	e6 53       	subi	r30, 0x36	; 54
    26b0:	fd 4f       	sbci	r31, 0xFD	; 253
    26b2:	f0 80       	ld	r15, Z
    26b4:	12 c0       	rjmp	.+36     	; 0x26da <ESP8266_SetMux+0x84>
    26b6:	c8 01       	movw	r24, r16
    26b8:	9e df       	rcall	.-196    	; 0x25f6 <ESP8266_WaitReady>
    26ba:	f8 01       	movw	r30, r16
    26bc:	e9 53       	subi	r30, 0x39	; 57
    26be:	fd 4f       	sbci	r31, 0xFD	; 253
    26c0:	80 81       	ld	r24, Z
    26c2:	81 fd       	sbrc	r24, 1
    26c4:	06 c0       	rjmp	.+12     	; 0x26d2 <ESP8266_SetMux+0x7c>
    26c6:	33 96       	adiw	r30, 0x03	; 3
    26c8:	81 e0       	ldi	r24, 0x01	; 1
    26ca:	80 83       	st	Z, r24
    26cc:	ff 24       	eor	r15, r15
    26ce:	f3 94       	inc	r15
    26d0:	04 c0       	rjmp	.+8      	; 0x26da <ESP8266_SetMux+0x84>
    26d2:	f8 01       	movw	r30, r16
    26d4:	e6 53       	subi	r30, 0x36	; 54
    26d6:	fd 4f       	sbci	r31, 0xFD	; 253
    26d8:	10 82       	st	Z, r1
    26da:	8f 2d       	mov	r24, r15
    26dc:	2e 96       	adiw	r28, 0x0e	; 14
    26de:	0f b6       	in	r0, 0x3f	; 63
    26e0:	f8 94       	cli
    26e2:	de bf       	out	0x3e, r29	; 62
    26e4:	0f be       	out	0x3f, r0	; 63
    26e6:	cd bf       	out	0x3d, r28	; 61
    26e8:	df 91       	pop	r29
    26ea:	cf 91       	pop	r28
    26ec:	1f 91       	pop	r17
    26ee:	0f 91       	pop	r16
    26f0:	ff 90       	pop	r15
    26f2:	ef 90       	pop	r14
    26f4:	08 95       	ret

000026f6 <ESP8266_Setdinfo>:
    26f6:	ef 92       	push	r14
    26f8:	ff 92       	push	r15
    26fa:	0f 93       	push	r16
    26fc:	1f 93       	push	r17
    26fe:	cf 93       	push	r28
    2700:	df 93       	push	r29
    2702:	cd b7       	in	r28, 0x3d	; 61
    2704:	de b7       	in	r29, 0x3e	; 62
    2706:	60 97       	sbiw	r28, 0x10	; 16
    2708:	0f b6       	in	r0, 0x3f	; 63
    270a:	f8 94       	cli
    270c:	de bf       	out	0x3e, r29	; 62
    270e:	0f be       	out	0x3f, r0	; 63
    2710:	cd bf       	out	0x3d, r28	; 61
    2712:	8c 01       	movw	r16, r24
    2714:	1f 92       	push	r1
    2716:	6f 93       	push	r22
    2718:	85 e4       	ldi	r24, 0x45	; 69
    271a:	95 e0       	ldi	r25, 0x05	; 5
    271c:	9f 93       	push	r25
    271e:	8f 93       	push	r24
    2720:	ce 01       	movw	r24, r28
    2722:	01 96       	adiw	r24, 0x01	; 1
    2724:	7c 01       	movw	r14, r24
    2726:	9f 93       	push	r25
    2728:	8f 93       	push	r24
    272a:	0e 94 cf 1b 	call	0x379e	; 0x379e <sprintf>
    272e:	26 e5       	ldi	r18, 0x56	; 86
    2730:	35 e0       	ldi	r19, 0x05	; 5
    2732:	a7 01       	movw	r20, r14
    2734:	67 e0       	ldi	r22, 0x07	; 7
    2736:	c8 01       	movw	r24, r16
    2738:	44 de       	rcall	.-888    	; 0x23c2 <SendCommand>
    273a:	f8 2e       	mov	r15, r24
    273c:	0f 90       	pop	r0
    273e:	0f 90       	pop	r0
    2740:	0f 90       	pop	r0
    2742:	0f 90       	pop	r0
    2744:	0f 90       	pop	r0
    2746:	0f 90       	pop	r0
    2748:	88 23       	and	r24, r24
    274a:	29 f0       	breq	.+10     	; 0x2756 <ESP8266_Setdinfo+0x60>
    274c:	f8 01       	movw	r30, r16
    274e:	e6 53       	subi	r30, 0x36	; 54
    2750:	fd 4f       	sbci	r31, 0xFD	; 253
    2752:	f0 80       	ld	r15, Z
    2754:	12 c0       	rjmp	.+36     	; 0x277a <ESP8266_Setdinfo+0x84>
    2756:	c8 01       	movw	r24, r16
    2758:	4e df       	rcall	.-356    	; 0x25f6 <ESP8266_WaitReady>
    275a:	f8 01       	movw	r30, r16
    275c:	e9 53       	subi	r30, 0x39	; 57
    275e:	fd 4f       	sbci	r31, 0xFD	; 253
    2760:	80 81       	ld	r24, Z
    2762:	81 fd       	sbrc	r24, 1
    2764:	06 c0       	rjmp	.+12     	; 0x2772 <ESP8266_Setdinfo+0x7c>
    2766:	33 96       	adiw	r30, 0x03	; 3
    2768:	81 e0       	ldi	r24, 0x01	; 1
    276a:	80 83       	st	Z, r24
    276c:	ff 24       	eor	r15, r15
    276e:	f3 94       	inc	r15
    2770:	04 c0       	rjmp	.+8      	; 0x277a <ESP8266_Setdinfo+0x84>
    2772:	f8 01       	movw	r30, r16
    2774:	e6 53       	subi	r30, 0x36	; 54
    2776:	fd 4f       	sbci	r31, 0xFD	; 253
    2778:	10 82       	st	Z, r1
    277a:	8f 2d       	mov	r24, r15
    277c:	60 96       	adiw	r28, 0x10	; 16
    277e:	0f b6       	in	r0, 0x3f	; 63
    2780:	f8 94       	cli
    2782:	de bf       	out	0x3e, r29	; 62
    2784:	0f be       	out	0x3f, r0	; 63
    2786:	cd bf       	out	0x3d, r28	; 61
    2788:	df 91       	pop	r29
    278a:	cf 91       	pop	r28
    278c:	1f 91       	pop	r17
    278e:	0f 91       	pop	r16
    2790:	ff 90       	pop	r15
    2792:	ef 90       	pop	r14
    2794:	08 95       	ret

00002796 <ESP8266_Init>:
    2796:	8f 92       	push	r8
    2798:	9f 92       	push	r9
    279a:	af 92       	push	r10
    279c:	bf 92       	push	r11
    279e:	cf 92       	push	r12
    27a0:	df 92       	push	r13
    27a2:	ef 92       	push	r14
    27a4:	ff 92       	push	r15
    27a6:	1f 93       	push	r17
    27a8:	cf 93       	push	r28
    27aa:	df 93       	push	r29
    27ac:	ec 01       	movw	r28, r24
    27ae:	6a 01       	movw	r12, r20
    27b0:	7b 01       	movw	r14, r22
    27b2:	fc 01       	movw	r30, r24
    27b4:	ec 5a       	subi	r30, 0xAC	; 172
    27b6:	ff 4f       	sbci	r31, 0xFF	; 255
    27b8:	10 82       	st	Z, r1
    27ba:	11 82       	std	Z+1, r1	; 0x01
    27bc:	12 82       	std	Z+2, r1	; 0x02
    27be:	13 82       	std	Z+3, r1	; 0x03
    27c0:	41 e8       	ldi	r20, 0x81	; 129
    27c2:	56 e1       	ldi	r21, 0x16	; 22
    27c4:	60 e0       	ldi	r22, 0x00	; 0
    27c6:	72 e0       	ldi	r23, 0x02	; 2
    27c8:	8d e8       	ldi	r24, 0x8D	; 141
    27ca:	98 e1       	ldi	r25, 0x18	; 24
    27cc:	0e 94 b6 00 	call	0x16c	; 0x16c <BUFFER_Init>
    27d0:	88 23       	and	r24, r24
    27d2:	29 f0       	breq	.+10     	; 0x27de <ESP8266_Init+0x48>
    27d4:	c6 53       	subi	r28, 0x36	; 54
    27d6:	dd 4f       	sbci	r29, 0xFD	; 253
    27d8:	85 e0       	ldi	r24, 0x05	; 5
    27da:	88 83       	st	Y, r24
    27dc:	d1 c0       	rjmp	.+418    	; 0x2980 <ESP8266_Init+0x1ea>
    27de:	41 e8       	ldi	r20, 0x81	; 129
    27e0:	52 e1       	ldi	r21, 0x12	; 18
    27e2:	60 e0       	ldi	r22, 0x00	; 0
    27e4:	74 e0       	ldi	r23, 0x04	; 4
    27e6:	81 e8       	ldi	r24, 0x81	; 129
    27e8:	98 e1       	ldi	r25, 0x18	; 24
    27ea:	0e 94 b6 00 	call	0x16c	; 0x16c <BUFFER_Init>
    27ee:	88 23       	and	r24, r24
    27f0:	29 f0       	breq	.+10     	; 0x27fc <ESP8266_Init+0x66>
    27f2:	c6 53       	subi	r28, 0x36	; 54
    27f4:	dd 4f       	sbci	r29, 0xFD	; 253
    27f6:	85 e0       	ldi	r24, 0x05	; 5
    27f8:	88 83       	st	Y, r24
    27fa:	c2 c0       	rjmp	.+388    	; 0x2980 <ESP8266_Init+0x1ea>
    27fc:	27 9a       	sbi	0x04, 7	; 4
    27fe:	2f 98       	cbi	0x05, 7	; 5
    2800:	24 e6       	ldi	r18, 0x64	; 100
    2802:	30 e0       	ldi	r19, 0x00	; 0
    2804:	8f e9       	ldi	r24, 0x9F	; 159
    2806:	9f e0       	ldi	r25, 0x0F	; 15
    2808:	01 97       	sbiw	r24, 0x01	; 1
    280a:	f1 f7       	brne	.-4      	; 0x2808 <ESP8266_Init+0x72>
    280c:	00 c0       	rjmp	.+0      	; 0x280e <ESP8266_Init+0x78>
    280e:	00 00       	nop
    2810:	21 50       	subi	r18, 0x01	; 1
    2812:	31 09       	sbc	r19, r1
    2814:	b9 f7       	brne	.-18     	; 0x2804 <ESP8266_Init+0x6e>
    2816:	2f 9a       	sbi	0x05, 7	; 5
    2818:	24 e6       	ldi	r18, 0x64	; 100
    281a:	30 e0       	ldi	r19, 0x00	; 0
    281c:	ef e9       	ldi	r30, 0x9F	; 159
    281e:	ff e0       	ldi	r31, 0x0F	; 15
    2820:	31 97       	sbiw	r30, 0x01	; 1
    2822:	f1 f7       	brne	.-4      	; 0x2820 <ESP8266_Init+0x8a>
    2824:	00 c0       	rjmp	.+0      	; 0x2826 <ESP8266_Init+0x90>
    2826:	00 00       	nop
    2828:	21 50       	subi	r18, 0x01	; 1
    282a:	31 09       	sbc	r19, r1
    282c:	b9 f7       	brne	.-18     	; 0x281c <ESP8266_Init+0x86>
    282e:	c8 82       	st	Y, r12
    2830:	d9 82       	std	Y+1, r13	; 0x01
    2832:	ea 82       	std	Y+2, r14	; 0x02
    2834:	fb 82       	std	Y+3, r15	; 0x03
    2836:	c7 01       	movw	r24, r14
    2838:	b6 01       	movw	r22, r12
    283a:	87 d2       	rcall	.+1294   	; 0x2d4a <ESP8266_LL_USARTInit>
    283c:	88 ee       	ldi	r24, 0xE8	; 232
    283e:	93 e0       	ldi	r25, 0x03	; 3
    2840:	a0 e0       	ldi	r26, 0x00	; 0
    2842:	b0 e0       	ldi	r27, 0x00	; 0
    2844:	fe 01       	movw	r30, r28
    2846:	ec 5a       	subi	r30, 0xAC	; 172
    2848:	ff 4f       	sbci	r31, 0xFF	; 255
    284a:	80 83       	st	Z, r24
    284c:	91 83       	std	Z+1, r25	; 0x01
    284e:	a2 83       	std	Z+2, r26	; 0x02
    2850:	b3 83       	std	Z+3, r27	; 0x03
    2852:	26 ee       	ldi	r18, 0xE6	; 230
    2854:	32 e0       	ldi	r19, 0x02	; 2
    2856:	42 e6       	ldi	r20, 0x62	; 98
    2858:	55 e0       	ldi	r21, 0x05	; 5
    285a:	6f e0       	ldi	r22, 0x0F	; 15
    285c:	ce 01       	movw	r24, r28
    285e:	b1 dd       	rcall	.-1182   	; 0x23c2 <SendCommand>
    2860:	ce 01       	movw	r24, r28
    2862:	c9 de       	rcall	.-622    	; 0x25f6 <ESP8266_WaitReady>
    2864:	fe 01       	movw	r30, r28
    2866:	e9 53       	subi	r30, 0x39	; 57
    2868:	fd 4f       	sbci	r31, 0xFD	; 253
    286a:	80 81       	ld	r24, Z
    286c:	81 fd       	sbrc	r24, 1
    286e:	48 c0       	rjmp	.+144    	; 0x2900 <ESP8266_Init+0x16a>
    2870:	10 e0       	ldi	r17, 0x00	; 0
    2872:	6e 01       	movw	r12, r28
    2874:	f4 e5       	ldi	r31, 0x54	; 84
    2876:	cf 0e       	add	r12, r31
    2878:	d1 1c       	adc	r13, r1
    287a:	0f 2e       	mov	r0, r31
    287c:	f8 ee       	ldi	r31, 0xE8	; 232
    287e:	8f 2e       	mov	r8, r31
    2880:	f3 e0       	ldi	r31, 0x03	; 3
    2882:	9f 2e       	mov	r9, r31
    2884:	a1 2c       	mov	r10, r1
    2886:	b1 2c       	mov	r11, r1
    2888:	f0 2d       	mov	r31, r0
    288a:	7e 01       	movw	r14, r28
    288c:	89 e3       	ldi	r24, 0x39	; 57
    288e:	e8 1a       	sub	r14, r24
    2890:	8d ef       	ldi	r24, 0xFD	; 253
    2892:	f8 0a       	sbc	r15, r24
    2894:	68 81       	ld	r22, Y
    2896:	79 81       	ldd	r23, Y+1	; 0x01
    2898:	8a 81       	ldd	r24, Y+2	; 0x02
    289a:	9b 81       	ldd	r25, Y+3	; 0x03
    289c:	56 d2       	rcall	.+1196   	; 0x2d4a <ESP8266_LL_USARTInit>
    289e:	f6 01       	movw	r30, r12
    28a0:	80 82       	st	Z, r8
    28a2:	91 82       	std	Z+1, r9	; 0x01
    28a4:	a2 82       	std	Z+2, r10	; 0x02
    28a6:	b3 82       	std	Z+3, r11	; 0x03
    28a8:	26 ee       	ldi	r18, 0xE6	; 230
    28aa:	32 e0       	ldi	r19, 0x02	; 2
    28ac:	42 e6       	ldi	r20, 0x62	; 98
    28ae:	55 e0       	ldi	r21, 0x05	; 5
    28b0:	6f e0       	ldi	r22, 0x0F	; 15
    28b2:	ce 01       	movw	r24, r28
    28b4:	86 dd       	rcall	.-1268   	; 0x23c2 <SendCommand>
    28b6:	ce 01       	movw	r24, r28
    28b8:	9e de       	rcall	.-708    	; 0x25f6 <ESP8266_WaitReady>
    28ba:	f7 01       	movw	r30, r14
    28bc:	80 81       	ld	r24, Z
    28be:	81 ff       	sbrs	r24, 1
    28c0:	17 c0       	rjmp	.+46     	; 0x28f0 <ESP8266_Init+0x15a>
    28c2:	e1 2f       	mov	r30, r17
    28c4:	f0 e0       	ldi	r31, 0x00	; 0
    28c6:	ee 0f       	add	r30, r30
    28c8:	ff 1f       	adc	r31, r31
    28ca:	ee 0f       	add	r30, r30
    28cc:	ff 1f       	adc	r31, r31
    28ce:	ec 5b       	subi	r30, 0xBC	; 188
    28d0:	f8 4f       	sbci	r31, 0xF8	; 248
    28d2:	80 81       	ld	r24, Z
    28d4:	91 81       	ldd	r25, Z+1	; 0x01
    28d6:	a2 81       	ldd	r26, Z+2	; 0x02
    28d8:	b3 81       	ldd	r27, Z+3	; 0x03
    28da:	88 83       	st	Y, r24
    28dc:	99 83       	std	Y+1, r25	; 0x01
    28de:	aa 83       	std	Y+2, r26	; 0x02
    28e0:	bb 83       	std	Y+3, r27	; 0x03
    28e2:	fe 01       	movw	r30, r28
    28e4:	e9 53       	subi	r30, 0x39	; 57
    28e6:	fd 4f       	sbci	r31, 0xFD	; 253
    28e8:	80 81       	ld	r24, Z
    28ea:	81 ff       	sbrs	r24, 1
    28ec:	04 c0       	rjmp	.+8      	; 0x28f6 <ESP8266_Init+0x160>
    28ee:	08 c0       	rjmp	.+16     	; 0x2900 <ESP8266_Init+0x16a>
    28f0:	1f 5f       	subi	r17, 0xFF	; 255
    28f2:	14 30       	cpi	r17, 0x04	; 4
    28f4:	79 f6       	brne	.-98     	; 0x2894 <ESP8266_Init+0xfe>
    28f6:	c6 53       	subi	r28, 0x36	; 54
    28f8:	dd 4f       	sbci	r29, 0xFD	; 253
    28fa:	82 e0       	ldi	r24, 0x02	; 2
    28fc:	88 83       	st	Y, r24
    28fe:	40 c0       	rjmp	.+128    	; 0x2980 <ESP8266_Init+0x1ea>
    2900:	80 e3       	ldi	r24, 0x30	; 48
    2902:	95 e7       	ldi	r25, 0x75	; 117
    2904:	a0 e0       	ldi	r26, 0x00	; 0
    2906:	b0 e0       	ldi	r27, 0x00	; 0
    2908:	fe 01       	movw	r30, r28
    290a:	ec 5a       	subi	r30, 0xAC	; 172
    290c:	ff 4f       	sbci	r31, 0xFF	; 255
    290e:	80 83       	st	Z, r24
    2910:	91 83       	std	Z+1, r25	; 0x01
    2912:	a2 83       	std	Z+2, r26	; 0x02
    2914:	b3 83       	std	Z+3, r27	; 0x03
    2916:	29 ed       	ldi	r18, 0xD9	; 217
    2918:	32 e0       	ldi	r19, 0x02	; 2
    291a:	4b e6       	ldi	r20, 0x6B	; 107
    291c:	55 e0       	ldi	r21, 0x05	; 5
    291e:	6e e0       	ldi	r22, 0x0E	; 14
    2920:	ce 01       	movw	r24, r28
    2922:	4f dd       	rcall	.-1378   	; 0x23c2 <SendCommand>
    2924:	ce 01       	movw	r24, r28
    2926:	67 de       	rcall	.-818    	; 0x25f6 <ESP8266_WaitReady>
    2928:	fe 01       	movw	r30, r28
    292a:	e9 53       	subi	r30, 0x39	; 57
    292c:	fd 4f       	sbci	r31, 0xFD	; 253
    292e:	80 81       	ld	r24, Z
    2930:	81 fd       	sbrc	r24, 1
    2932:	05 c0       	rjmp	.+10     	; 0x293e <ESP8266_Init+0x1a8>
    2934:	c6 53       	subi	r28, 0x36	; 54
    2936:	dd 4f       	sbci	r29, 0xFD	; 253
    2938:	82 e0       	ldi	r24, 0x02	; 2
    293a:	88 83       	st	Y, r24
    293c:	21 c0       	rjmp	.+66     	; 0x2980 <ESP8266_Init+0x1ea>
    293e:	20 e7       	ldi	r18, 0x70	; 112
    2940:	35 e0       	ldi	r19, 0x05	; 5
    2942:	45 e7       	ldi	r20, 0x75	; 117
    2944:	55 e0       	ldi	r21, 0x05	; 5
    2946:	6d e0       	ldi	r22, 0x0D	; 13
    2948:	ce 01       	movw	r24, r28
    294a:	3b dd       	rcall	.-1418   	; 0x23c2 <SendCommand>
    294c:	ce 01       	movw	r24, r28
    294e:	53 de       	rcall	.-858    	; 0x25f6 <ESP8266_WaitReady>
    2950:	61 e0       	ldi	r22, 0x01	; 1
    2952:	ce 01       	movw	r24, r28
    2954:	80 de       	rcall	.-768    	; 0x2656 <ESP8266_SetMux>
    2956:	81 11       	cpse	r24, r1
    2958:	fb cf       	rjmp	.-10     	; 0x2950 <ESP8266_Init+0x1ba>
    295a:	61 e0       	ldi	r22, 0x01	; 1
    295c:	ce 01       	movw	r24, r28
    295e:	cb de       	rcall	.-618    	; 0x26f6 <ESP8266_Setdinfo>
    2960:	81 11       	cpse	r24, r1
    2962:	fb cf       	rjmp	.-10     	; 0x295a <ESP8266_Init+0x1c4>
    2964:	ce 01       	movw	r24, r28
    2966:	10 de       	rcall	.-992    	; 0x2588 <ESP8266_GetSTAMAC>
    2968:	81 11       	cpse	r24, r1
    296a:	fc cf       	rjmp	.-8      	; 0x2964 <ESP8266_Init+0x1ce>
    296c:	ce 01       	movw	r24, r28
    296e:	23 de       	rcall	.-954    	; 0x25b6 <ESP8266_GetAPMAC>
    2970:	81 11       	cpse	r24, r1
    2972:	fc cf       	rjmp	.-8      	; 0x296c <ESP8266_Init+0x1d6>
    2974:	ce 01       	movw	r24, r28
    2976:	f0 dd       	rcall	.-1056   	; 0x2558 <ESP8266_GetAPIP>
    2978:	81 11       	cpse	r24, r1
    297a:	fc cf       	rjmp	.-8      	; 0x2974 <ESP8266_Init+0x1de>
    297c:	ce 01       	movw	r24, r28
    297e:	3b de       	rcall	.-906    	; 0x25f6 <ESP8266_WaitReady>
    2980:	df 91       	pop	r29
    2982:	cf 91       	pop	r28
    2984:	1f 91       	pop	r17
    2986:	ff 90       	pop	r15
    2988:	ef 90       	pop	r14
    298a:	df 90       	pop	r13
    298c:	cf 90       	pop	r12
    298e:	bf 90       	pop	r11
    2990:	af 90       	pop	r10
    2992:	9f 90       	pop	r9
    2994:	8f 90       	pop	r8
    2996:	08 95       	ret

00002998 <ESP8266_ServerEnable>:
    2998:	ef 92       	push	r14
    299a:	ff 92       	push	r15
    299c:	0f 93       	push	r16
    299e:	1f 93       	push	r17
    29a0:	cf 93       	push	r28
    29a2:	df 93       	push	r29
    29a4:	cd b7       	in	r28, 0x3d	; 61
    29a6:	de b7       	in	r29, 0x3e	; 62
    29a8:	63 97       	sbiw	r28, 0x13	; 19
    29aa:	0f b6       	in	r0, 0x3f	; 63
    29ac:	f8 94       	cli
    29ae:	de bf       	out	0x3e, r29	; 62
    29b0:	0f be       	out	0x3f, r0	; 63
    29b2:	cd bf       	out	0x3d, r28	; 61
    29b4:	8c 01       	movw	r16, r24
    29b6:	7f 93       	push	r23
    29b8:	6f 93       	push	r22
    29ba:	8c e7       	ldi	r24, 0x7C	; 124
    29bc:	95 e0       	ldi	r25, 0x05	; 5
    29be:	9f 93       	push	r25
    29c0:	8f 93       	push	r24
    29c2:	ce 01       	movw	r24, r28
    29c4:	01 96       	adiw	r24, 0x01	; 1
    29c6:	7c 01       	movw	r14, r24
    29c8:	9f 93       	push	r25
    29ca:	8f 93       	push	r24
    29cc:	e8 d6       	rcall	.+3536   	; 0x379e <sprintf>
    29ce:	20 e9       	ldi	r18, 0x90	; 144
    29d0:	35 e0       	ldi	r19, 0x05	; 5
    29d2:	a7 01       	movw	r20, r14
    29d4:	66 e0       	ldi	r22, 0x06	; 6
    29d6:	c8 01       	movw	r24, r16
    29d8:	f4 dc       	rcall	.-1560   	; 0x23c2 <SendCommand>
    29da:	f8 2e       	mov	r15, r24
    29dc:	0f 90       	pop	r0
    29de:	0f 90       	pop	r0
    29e0:	0f 90       	pop	r0
    29e2:	0f 90       	pop	r0
    29e4:	0f 90       	pop	r0
    29e6:	0f 90       	pop	r0
    29e8:	88 23       	and	r24, r24
    29ea:	29 f0       	breq	.+10     	; 0x29f6 <ESP8266_ServerEnable+0x5e>
    29ec:	f8 01       	movw	r30, r16
    29ee:	e6 53       	subi	r30, 0x36	; 54
    29f0:	fd 4f       	sbci	r31, 0xFD	; 253
    29f2:	f0 80       	ld	r15, Z
    29f4:	12 c0       	rjmp	.+36     	; 0x2a1a <ESP8266_ServerEnable+0x82>
    29f6:	c8 01       	movw	r24, r16
    29f8:	fe dd       	rcall	.-1028   	; 0x25f6 <ESP8266_WaitReady>
    29fa:	f8 01       	movw	r30, r16
    29fc:	e9 53       	subi	r30, 0x39	; 57
    29fe:	fd 4f       	sbci	r31, 0xFD	; 253
    2a00:	80 81       	ld	r24, Z
    2a02:	81 fd       	sbrc	r24, 1
    2a04:	06 c0       	rjmp	.+12     	; 0x2a12 <ESP8266_ServerEnable+0x7a>
    2a06:	33 96       	adiw	r30, 0x03	; 3
    2a08:	81 e0       	ldi	r24, 0x01	; 1
    2a0a:	80 83       	st	Z, r24
    2a0c:	ff 24       	eor	r15, r15
    2a0e:	f3 94       	inc	r15
    2a10:	04 c0       	rjmp	.+8      	; 0x2a1a <ESP8266_ServerEnable+0x82>
    2a12:	f8 01       	movw	r30, r16
    2a14:	e6 53       	subi	r30, 0x36	; 54
    2a16:	fd 4f       	sbci	r31, 0xFD	; 253
    2a18:	10 82       	st	Z, r1
    2a1a:	8f 2d       	mov	r24, r15
    2a1c:	63 96       	adiw	r28, 0x13	; 19
    2a1e:	0f b6       	in	r0, 0x3f	; 63
    2a20:	f8 94       	cli
    2a22:	de bf       	out	0x3e, r29	; 62
    2a24:	0f be       	out	0x3f, r0	; 63
    2a26:	cd bf       	out	0x3d, r28	; 61
    2a28:	df 91       	pop	r29
    2a2a:	cf 91       	pop	r28
    2a2c:	1f 91       	pop	r17
    2a2e:	0f 91       	pop	r16
    2a30:	ff 90       	pop	r15
    2a32:	ef 90       	pop	r14
    2a34:	08 95       	ret

00002a36 <ESP8266_GetAP>:
    2a36:	cf 93       	push	r28
    2a38:	df 93       	push	r29
    2a3a:	ec 01       	movw	r28, r24
    2a3c:	2d e0       	ldi	r18, 0x0D	; 13
    2a3e:	36 e0       	ldi	r19, 0x06	; 6
    2a40:	4d eb       	ldi	r20, 0xBD	; 189
    2a42:	55 e0       	ldi	r21, 0x05	; 5
    2a44:	6c e0       	ldi	r22, 0x0C	; 12
    2a46:	bd dc       	rcall	.-1670   	; 0x23c2 <SendCommand>
    2a48:	88 23       	and	r24, r24
    2a4a:	21 f0       	breq	.+8      	; 0x2a54 <ESP8266_GetAP+0x1e>
    2a4c:	c6 53       	subi	r28, 0x36	; 54
    2a4e:	dd 4f       	sbci	r29, 0xFD	; 253
    2a50:	88 81       	ld	r24, Y
    2a52:	02 c0       	rjmp	.+4      	; 0x2a58 <ESP8266_GetAP+0x22>
    2a54:	ce 01       	movw	r24, r28
    2a56:	cf dd       	rcall	.-1122   	; 0x25f6 <ESP8266_WaitReady>
    2a58:	df 91       	pop	r29
    2a5a:	cf 91       	pop	r28
    2a5c:	08 95       	ret

00002a5e <ESP8266_SetMode>:
    2a5e:	df 92       	push	r13
    2a60:	ef 92       	push	r14
    2a62:	ff 92       	push	r15
    2a64:	0f 93       	push	r16
    2a66:	1f 93       	push	r17
    2a68:	cf 93       	push	r28
    2a6a:	df 93       	push	r29
    2a6c:	cd b7       	in	r28, 0x3d	; 61
    2a6e:	de b7       	in	r29, 0x3e	; 62
    2a70:	61 97       	sbiw	r28, 0x11	; 17
    2a72:	0f b6       	in	r0, 0x3f	; 63
    2a74:	f8 94       	cli
    2a76:	de bf       	out	0x3e, r29	; 62
    2a78:	0f be       	out	0x3f, r0	; 63
    2a7a:	cd bf       	out	0x3d, r28	; 61
    2a7c:	8c 01       	movw	r16, r24
    2a7e:	d6 2e       	mov	r13, r22
    2a80:	1f 92       	push	r1
    2a82:	6f 93       	push	r22
    2a84:	89 ec       	ldi	r24, 0xC9	; 201
    2a86:	95 e0       	ldi	r25, 0x05	; 5
    2a88:	9f 93       	push	r25
    2a8a:	8f 93       	push	r24
    2a8c:	ce 01       	movw	r24, r28
    2a8e:	01 96       	adiw	r24, 0x01	; 1
    2a90:	7c 01       	movw	r14, r24
    2a92:	9f 93       	push	r25
    2a94:	8f 93       	push	r24
    2a96:	83 d6       	rcall	.+3334   	; 0x379e <sprintf>
    2a98:	2c ed       	ldi	r18, 0xDC	; 220
    2a9a:	35 e0       	ldi	r19, 0x05	; 5
    2a9c:	a7 01       	movw	r20, r14
    2a9e:	65 e0       	ldi	r22, 0x05	; 5
    2aa0:	c8 01       	movw	r24, r16
    2aa2:	8f dc       	rcall	.-1762   	; 0x23c2 <SendCommand>
    2aa4:	0f 90       	pop	r0
    2aa6:	0f 90       	pop	r0
    2aa8:	0f 90       	pop	r0
    2aaa:	0f 90       	pop	r0
    2aac:	0f 90       	pop	r0
    2aae:	0f 90       	pop	r0
    2ab0:	88 23       	and	r24, r24
    2ab2:	29 f0       	breq	.+10     	; 0x2abe <ESP8266_SetMode+0x60>
    2ab4:	f8 01       	movw	r30, r16
    2ab6:	e6 53       	subi	r30, 0x36	; 54
    2ab8:	fd 4f       	sbci	r31, 0xFD	; 253
    2aba:	80 81       	ld	r24, Z
    2abc:	13 c0       	rjmp	.+38     	; 0x2ae4 <ESP8266_SetMode+0x86>
    2abe:	f8 01       	movw	r30, r16
    2ac0:	ea 53       	subi	r30, 0x3A	; 58
    2ac2:	fe 4f       	sbci	r31, 0xFE	; 254
    2ac4:	d0 82       	st	Z, r13
    2ac6:	c8 01       	movw	r24, r16
    2ac8:	96 dd       	rcall	.-1236   	; 0x25f6 <ESP8266_WaitReady>
    2aca:	f8 01       	movw	r30, r16
    2acc:	e9 53       	subi	r30, 0x39	; 57
    2ace:	fe 4f       	sbci	r31, 0xFE	; 254
    2ad0:	80 81       	ld	r24, Z
    2ad2:	8d 15       	cp	r24, r13
    2ad4:	29 f0       	breq	.+10     	; 0x2ae0 <ESP8266_SetMode+0x82>
    2ad6:	ed 5f       	subi	r30, 0xFD	; 253
    2ad8:	fe 4f       	sbci	r31, 0xFE	; 254
    2ada:	81 e0       	ldi	r24, 0x01	; 1
    2adc:	80 83       	st	Z, r24
    2ade:	02 c0       	rjmp	.+4      	; 0x2ae4 <ESP8266_SetMode+0x86>
    2ae0:	c8 01       	movw	r24, r16
    2ae2:	a9 df       	rcall	.-174    	; 0x2a36 <ESP8266_GetAP>
    2ae4:	61 96       	adiw	r28, 0x11	; 17
    2ae6:	0f b6       	in	r0, 0x3f	; 63
    2ae8:	f8 94       	cli
    2aea:	de bf       	out	0x3e, r29	; 62
    2aec:	0f be       	out	0x3f, r0	; 63
    2aee:	cd bf       	out	0x3d, r28	; 61
    2af0:	df 91       	pop	r29
    2af2:	cf 91       	pop	r28
    2af4:	1f 91       	pop	r17
    2af6:	0f 91       	pop	r16
    2af8:	ff 90       	pop	r15
    2afa:	ef 90       	pop	r14
    2afc:	df 90       	pop	r13
    2afe:	08 95       	ret

00002b00 <ESP8266_RequestSendData>:
    2b00:	cf 92       	push	r12
    2b02:	df 92       	push	r13
    2b04:	ef 92       	push	r14
    2b06:	ff 92       	push	r15
    2b08:	0f 93       	push	r16
    2b0a:	1f 93       	push	r17
    2b0c:	cf 93       	push	r28
    2b0e:	df 93       	push	r29
    2b10:	cd b7       	in	r28, 0x3d	; 61
    2b12:	de b7       	in	r29, 0x3e	; 62
    2b14:	66 97       	sbiw	r28, 0x16	; 22
    2b16:	0f b6       	in	r0, 0x3f	; 63
    2b18:	f8 94       	cli
    2b1a:	de bf       	out	0x3e, r29	; 62
    2b1c:	0f be       	out	0x3f, r0	; 63
    2b1e:	cd bf       	out	0x3d, r28	; 61
    2b20:	8c 01       	movw	r16, r24
    2b22:	7b 01       	movw	r14, r22
    2b24:	fc 01       	movw	r30, r24
    2b26:	84 81       	ldd	r24, Z+4	; 0x04
    2b28:	95 81       	ldd	r25, Z+5	; 0x05
    2b2a:	a6 81       	ldd	r26, Z+6	; 0x06
    2b2c:	b7 81       	ldd	r27, Z+7	; 0x07
    2b2e:	89 2b       	or	r24, r25
    2b30:	8a 2b       	or	r24, r26
    2b32:	8b 2b       	or	r24, r27
    2b34:	41 f0       	breq	.+16     	; 0x2b46 <ESP8266_RequestSendData+0x46>
    2b36:	c8 01       	movw	r24, r16
    2b38:	63 d9       	rcall	.-3386   	; 0x1e00 <ESP8266_Update>
    2b3a:	f8 01       	movw	r30, r16
    2b3c:	e6 53       	subi	r30, 0x36	; 54
    2b3e:	fd 4f       	sbci	r31, 0xFD	; 253
    2b40:	87 e0       	ldi	r24, 0x07	; 7
    2b42:	80 83       	st	Z, r24
    2b44:	2f c0       	rjmp	.+94     	; 0x2ba4 <ESP8266_RequestSendData+0xa4>
    2b46:	fb 01       	movw	r30, r22
    2b48:	81 81       	ldd	r24, Z+1	; 0x01
    2b4a:	1f 92       	push	r1
    2b4c:	8f 93       	push	r24
    2b4e:	86 e6       	ldi	r24, 0x66	; 102
    2b50:	96 e0       	ldi	r25, 0x06	; 6
    2b52:	9f 93       	push	r25
    2b54:	8f 93       	push	r24
    2b56:	ce 01       	movw	r24, r28
    2b58:	01 96       	adiw	r24, 0x01	; 1
    2b5a:	6c 01       	movw	r12, r24
    2b5c:	9f 93       	push	r25
    2b5e:	8f 93       	push	r24
    2b60:	1e d6       	rcall	.+3132   	; 0x379e <sprintf>
    2b62:	2d e7       	ldi	r18, 0x7D	; 125
    2b64:	36 e0       	ldi	r19, 0x06	; 6
    2b66:	a6 01       	movw	r20, r12
    2b68:	68 e0       	ldi	r22, 0x08	; 8
    2b6a:	c8 01       	movw	r24, r16
    2b6c:	2a dc       	rcall	.-1964   	; 0x23c2 <SendCommand>
    2b6e:	0f 90       	pop	r0
    2b70:	0f 90       	pop	r0
    2b72:	0f 90       	pop	r0
    2b74:	0f 90       	pop	r0
    2b76:	0f 90       	pop	r0
    2b78:	0f 90       	pop	r0
    2b7a:	88 23       	and	r24, r24
    2b7c:	29 f0       	breq	.+10     	; 0x2b88 <ESP8266_RequestSendData+0x88>
    2b7e:	f8 01       	movw	r30, r16
    2b80:	e6 53       	subi	r30, 0x36	; 54
    2b82:	fd 4f       	sbci	r31, 0xFD	; 253
    2b84:	80 81       	ld	r24, Z
    2b86:	0e c0       	rjmp	.+28     	; 0x2ba4 <ESP8266_RequestSendData+0xa4>
    2b88:	81 e0       	ldi	r24, 0x01	; 1
    2b8a:	f7 01       	movw	r30, r14
    2b8c:	81 8b       	std	Z+17, r24	; 0x11
    2b8e:	f8 01       	movw	r30, r16
    2b90:	ea 53       	subi	r30, 0x3A	; 58
    2b92:	fd 4f       	sbci	r31, 0xFD	; 253
    2b94:	81 81       	ldd	r24, Z+1	; 0x01
    2b96:	81 60       	ori	r24, 0x01	; 1
    2b98:	81 83       	std	Z+1, r24	; 0x01
    2b9a:	32 97       	sbiw	r30, 0x02	; 2
    2b9c:	f1 82       	std	Z+1, r15	; 0x01
    2b9e:	e0 82       	st	Z, r14
    2ba0:	36 96       	adiw	r30, 0x06	; 6
    2ba2:	80 81       	ld	r24, Z
    2ba4:	66 96       	adiw	r28, 0x16	; 22
    2ba6:	0f b6       	in	r0, 0x3f	; 63
    2ba8:	f8 94       	cli
    2baa:	de bf       	out	0x3e, r29	; 62
    2bac:	0f be       	out	0x3f, r0	; 63
    2bae:	cd bf       	out	0x3d, r28	; 61
    2bb0:	df 91       	pop	r29
    2bb2:	cf 91       	pop	r28
    2bb4:	1f 91       	pop	r17
    2bb6:	0f 91       	pop	r16
    2bb8:	ff 90       	pop	r15
    2bba:	ef 90       	pop	r14
    2bbc:	df 90       	pop	r13
    2bbe:	cf 90       	pop	r12
    2bc0:	08 95       	ret

00002bc2 <ESP8266_StartClientConnection>:
}

/******************************************/
/*               TCP CLIENT               */
/******************************************/
ESP8266_Result_t ESP8266_StartClientConnection(ESP8266_t* ESP8266, char* name, char* location, uint16_t port, void* user_parameters) {
    2bc2:	7f 92       	push	r7
    2bc4:	8f 92       	push	r8
    2bc6:	9f 92       	push	r9
    2bc8:	af 92       	push	r10
    2bca:	bf 92       	push	r11
    2bcc:	cf 92       	push	r12
    2bce:	df 92       	push	r13
    2bd0:	ef 92       	push	r14
    2bd2:	ff 92       	push	r15
    2bd4:	0f 93       	push	r16
    2bd6:	1f 93       	push	r17
    2bd8:	cf 93       	push	r28
    2bda:	df 93       	push	r29
    2bdc:	cd b7       	in	r28, 0x3d	; 61
    2bde:	de b7       	in	r29, 0x3e	; 62
    2be0:	c4 56       	subi	r28, 0x64	; 100
    2be2:	d1 09       	sbc	r29, r1
    2be4:	0f b6       	in	r0, 0x3f	; 63
    2be6:	f8 94       	cli
    2be8:	de bf       	out	0x3e, r29	; 62
    2bea:	0f be       	out	0x3f, r0	; 63
    2bec:	cd bf       	out	0x3d, r28	; 61
    2bee:	7c 01       	movw	r14, r24
    2bf0:	5b 01       	movw	r10, r22
    2bf2:	68 01       	movw	r12, r16
	int8_t conn = -1;
	uint8_t i = 0;
	
	/* Check if IDLE */
	ESP8266_CHECK_IDLE(ESP8266);
    2bf4:	fc 01       	movw	r30, r24
    2bf6:	84 81       	ldd	r24, Z+4	; 0x04
    2bf8:	95 81       	ldd	r25, Z+5	; 0x05
    2bfa:	a6 81       	ldd	r26, Z+6	; 0x06
    2bfc:	b7 81       	ldd	r27, Z+7	; 0x07
    2bfe:	89 2b       	or	r24, r25
    2c00:	8a 2b       	or	r24, r26
    2c02:	8b 2b       	or	r24, r27
    2c04:	49 f0       	breq	.+18     	; 0x2c18 <ESP8266_StartClientConnection+0x56>
    2c06:	c7 01       	movw	r24, r14
    2c08:	fb d8       	rcall	.-3594   	; 0x1e00 <ESP8266_Update>
    2c0a:	f7 01       	movw	r30, r14
    2c0c:	e6 53       	subi	r30, 0x36	; 54
    2c0e:	fd 4f       	sbci	r31, 0xFD	; 253
    2c10:	87 e0       	ldi	r24, 0x07	; 7
    2c12:	80 83       	st	Z, r24
    2c14:	17 e0       	ldi	r17, 0x07	; 7
    2c16:	83 c0       	rjmp	.+262    	; 0x2d1e <ESP8266_StartClientConnection+0x15c>
	
	/* Check if connected to network */
	ESP8266_CHECK_WIFICONNECTED(ESP8266);
    2c18:	f7 01       	movw	r30, r14
    2c1a:	e9 53       	subi	r30, 0x39	; 57
    2c1c:	fd 4f       	sbci	r31, 0xFD	; 253
    2c1e:	80 81       	ld	r24, Z
    2c20:	82 ff       	sbrs	r24, 2
    2c22:	06 c0       	rjmp	.+12     	; 0x2c30 <ESP8266_StartClientConnection+0x6e>
	
	/* Find available connection */
	for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {
		if (!ESP8266->Connection[i].Active) {
    2c24:	ef 56       	subi	r30, 0x6F	; 111
    2c26:	f2 40       	sbci	r31, 0x02	; 2
    2c28:	80 81       	ld	r24, Z
    2c2a:	81 11       	cpse	r24, r1
    2c2c:	08 c0       	rjmp	.+16     	; 0x2c3e <ESP8266_StartClientConnection+0x7c>
    2c2e:	18 c0       	rjmp	.+48     	; 0x2c60 <ESP8266_StartClientConnection+0x9e>
	
	/* Check if IDLE */
	ESP8266_CHECK_IDLE(ESP8266);
	
	/* Check if connected to network */
	ESP8266_CHECK_WIFICONNECTED(ESP8266);
    2c30:	f7 01       	movw	r30, r14
    2c32:	e6 53       	subi	r30, 0x36	; 54
    2c34:	fd 4f       	sbci	r31, 0xFD	; 253
    2c36:	86 e0       	ldi	r24, 0x06	; 6
    2c38:	80 83       	st	Z, r24
    2c3a:	16 e0       	ldi	r17, 0x06	; 6
    2c3c:	70 c0       	rjmp	.+224    	; 0x2d1e <ESP8266_StartClientConnection+0x15c>
    2c3e:	f7 01       	movw	r30, r14
    2c40:	e6 56       	subi	r30, 0x66	; 102
    2c42:	ff 4f       	sbci	r31, 0xFF	; 255
	
	/* Find available connection */
	for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {
    2c44:	01 e0       	ldi	r16, 0x01	; 1
		if (!ESP8266->Connection[i].Active) {
    2c46:	80 81       	ld	r24, Z
    2c48:	81 11       	cpse	r24, r1
    2c4a:	04 c0       	rjmp	.+8      	; 0x2c54 <ESP8266_StartClientConnection+0x92>
			/* Save */
			conn = i;
    2c4c:	70 2e       	mov	r7, r16
			break;
		}
	}
	
	/* Try it */
	if (conn != -1) {
    2c4e:	0f 3f       	cpi	r16, 0xFF	; 255
    2c50:	49 f4       	brne	.+18     	; 0x2c64 <ESP8266_StartClientConnection+0xa2>
    2c52:	5f c0       	rjmp	.+190    	; 0x2d12 <ESP8266_StartClientConnection+0x150>
	
	/* Check if connected to network */
	ESP8266_CHECK_WIFICONNECTED(ESP8266);
	
	/* Find available connection */
	for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {
    2c54:	0f 5f       	subi	r16, 0xFF	; 255
    2c56:	ee 5b       	subi	r30, 0xBE	; 190
    2c58:	ff 4f       	sbci	r31, 0xFF	; 255
    2c5a:	05 30       	cpi	r16, 0x05	; 5
    2c5c:	a1 f7       	brne	.-24     	; 0x2c46 <ESP8266_StartClientConnection+0x84>
    2c5e:	59 c0       	rjmp	.+178    	; 0x2d12 <ESP8266_StartClientConnection+0x150>
		if (!ESP8266->Connection[i].Active) {
    2c60:	00 e0       	ldi	r16, 0x00	; 0
			/* Save */
			conn = i;
    2c62:	71 2c       	mov	r7, r1
	
	/* Try it */
	if (conn != -1) {
		char tmp[100];
		/* Format command */
		sprintf(tmp, "AT+CIPSTART=%d,\"TCP\",\"%s\",%d\r\n", conn, location, port);
    2c64:	3f 93       	push	r19
    2c66:	2f 93       	push	r18
    2c68:	5f 93       	push	r21
    2c6a:	4f 93       	push	r20
    2c6c:	87 2d       	mov	r24, r7
    2c6e:	07 2c       	mov	r0, r7
    2c70:	00 0c       	add	r0, r0
    2c72:	99 0b       	sbc	r25, r25
    2c74:	9f 93       	push	r25
    2c76:	7f 92       	push	r7
    2c78:	84 e1       	ldi	r24, 0x14	; 20
    2c7a:	97 e0       	ldi	r25, 0x07	; 7
    2c7c:	9f 93       	push	r25
    2c7e:	8f 93       	push	r24
    2c80:	ce 01       	movw	r24, r28
    2c82:	01 96       	adiw	r24, 0x01	; 1
    2c84:	4c 01       	movw	r8, r24
    2c86:	9f 93       	push	r25
    2c88:	8f 93       	push	r24
    2c8a:	89 d5       	rcall	.+2834   	; 0x379e <sprintf>
		
		/* Send command */
		if (SendCommand(ESP8266, ESP8266_COMMAND_CIPSTART, tmp, NULL) != ESP_OK) {
    2c8c:	20 e0       	ldi	r18, 0x00	; 0
    2c8e:	30 e0       	ldi	r19, 0x00	; 0
    2c90:	a4 01       	movw	r20, r8
    2c92:	6a e0       	ldi	r22, 0x0A	; 10
    2c94:	c7 01       	movw	r24, r14
    2c96:	95 db       	rcall	.-2262   	; 0x23c2 <SendCommand>
    2c98:	18 2f       	mov	r17, r24
    2c9a:	0f b6       	in	r0, 0x3f	; 63
    2c9c:	f8 94       	cli
    2c9e:	de bf       	out	0x3e, r29	; 62
    2ca0:	0f be       	out	0x3f, r0	; 63
    2ca2:	cd bf       	out	0x3d, r28	; 61
    2ca4:	88 23       	and	r24, r24
    2ca6:	29 f0       	breq	.+10     	; 0x2cb2 <ESP8266_StartClientConnection+0xf0>
			return ESP8266->Result;
    2ca8:	f7 01       	movw	r30, r14
    2caa:	e6 53       	subi	r30, 0x36	; 54
    2cac:	fd 4f       	sbci	r31, 0xFD	; 253
    2cae:	10 81       	ld	r17, Z
    2cb0:	36 c0       	rjmp	.+108    	; 0x2d1e <ESP8266_StartClientConnection+0x15c>
		}
		
		/* We are active now as client */
		ESP8266->Connection[i].Active = 1;
    2cb2:	f2 e4       	ldi	r31, 0x42	; 66
    2cb4:	0f 9f       	mul	r16, r31
    2cb6:	c0 01       	movw	r24, r0
    2cb8:	11 24       	eor	r1, r1
    2cba:	47 01       	movw	r8, r14
    2cbc:	88 0e       	add	r8, r24
    2cbe:	99 1e       	adc	r9, r25
    2cc0:	f4 01       	movw	r30, r8
    2cc2:	e8 5a       	subi	r30, 0xA8	; 168
    2cc4:	ff 4f       	sbci	r31, 0xFF	; 255
    2cc6:	21 e0       	ldi	r18, 0x01	; 1
    2cc8:	20 83       	st	Z, r18
		ESP8266->Connection[i].Client = 1;
    2cca:	32 96       	adiw	r30, 0x02	; 2
    2ccc:	20 83       	st	Z, r18
		ESP8266->Connection[i].TotalBytesReceived = 0;
    2cce:	3b 96       	adiw	r30, 0x0b	; 11
    2cd0:	10 82       	st	Z, r1
    2cd2:	11 82       	std	Z+1, r1	; 0x01
    2cd4:	12 82       	std	Z+2, r1	; 0x02
    2cd6:	13 82       	std	Z+3, r1	; 0x03
		ESP8266->Connection[i].Number = conn;
    2cd8:	3c 97       	sbiw	r30, 0x0c	; 12
    2cda:	00 83       	st	Z, r16
#if ESP8266_USE_SINGLE_CONNECTION_BUFFER == 1
		ESP8266->Connection[i].Data = ConnectionData;
    2cdc:	72 96       	adiw	r30, 0x12	; 18
    2cde:	2c e8       	ldi	r18, 0x8C	; 140
    2ce0:	3b e0       	ldi	r19, 0x0B	; 11
    2ce2:	31 83       	std	Z+1, r19	; 0x01
    2ce4:	20 83       	st	Z, r18
#endif
		ESP8266->StartConnectionSent = i;
    2ce6:	f7 01       	movw	r30, r14
    2ce8:	ea 5a       	subi	r30, 0xAA	; 170
    2cea:	fd 4f       	sbci	r31, 0xFD	; 253
    2cec:	70 82       	st	Z, r7
		
		/* Copy values */
		strncpy(ESP8266->Connection[i].Name, name, sizeof(ESP8266->Connection[i].Name));
    2cee:	8b 58       	subi	r24, 0x8B	; 139
    2cf0:	9f 4f       	sbci	r25, 0xFF	; 255
    2cf2:	40 e2       	ldi	r20, 0x20	; 32
    2cf4:	50 e0       	ldi	r21, 0x00	; 0
    2cf6:	b5 01       	movw	r22, r10
    2cf8:	8e 0d       	add	r24, r14
    2cfa:	9f 1d       	adc	r25, r15
    2cfc:	bd d4       	rcall	.+2426   	; 0x3678 <strncpy>
		ESP8266->Connection[i].UserParameters = user_parameters;
    2cfe:	f4 01       	movw	r30, r8
    2d00:	eb 56       	subi	r30, 0x6B	; 107
    2d02:	ff 4f       	sbci	r31, 0xFF	; 255
    2d04:	d1 82       	std	Z+1, r13	; 0x01
    2d06:	c0 82       	st	Z, r12
		
		/* Return OK */
		ESP8266_RETURNWITHSTATUS(ESP8266, ESP_OK);
    2d08:	f7 01       	movw	r30, r14
    2d0a:	e6 53       	subi	r30, 0x36	; 54
    2d0c:	fd 4f       	sbci	r31, 0xFD	; 253
    2d0e:	10 82       	st	Z, r1
    2d10:	06 c0       	rjmp	.+12     	; 0x2d1e <ESP8266_StartClientConnection+0x15c>
	}
	
	/* Return error */
	ESP8266_RETURNWITHSTATUS(ESP8266, ESP_ERROR);
    2d12:	f7 01       	movw	r30, r14
    2d14:	e6 53       	subi	r30, 0x36	; 54
    2d16:	fd 4f       	sbci	r31, 0xFD	; 253
    2d18:	81 e0       	ldi	r24, 0x01	; 1
    2d1a:	80 83       	st	Z, r24
    2d1c:	11 e0       	ldi	r17, 0x01	; 1
}
    2d1e:	81 2f       	mov	r24, r17
    2d20:	cc 59       	subi	r28, 0x9C	; 156
    2d22:	df 4f       	sbci	r29, 0xFF	; 255
    2d24:	0f b6       	in	r0, 0x3f	; 63
    2d26:	f8 94       	cli
    2d28:	de bf       	out	0x3e, r29	; 62
    2d2a:	0f be       	out	0x3f, r0	; 63
    2d2c:	cd bf       	out	0x3d, r28	; 61
    2d2e:	df 91       	pop	r29
    2d30:	cf 91       	pop	r28
    2d32:	1f 91       	pop	r17
    2d34:	0f 91       	pop	r16
    2d36:	ff 90       	pop	r15
    2d38:	ef 90       	pop	r14
    2d3a:	df 90       	pop	r13
    2d3c:	cf 90       	pop	r12
    2d3e:	bf 90       	pop	r11
    2d40:	af 90       	pop	r10
    2d42:	9f 90       	pop	r9
    2d44:	8f 90       	pop	r8
    2d46:	7f 90       	pop	r7
    2d48:	08 95       	ret

00002d4a <ESP8266_LL_USARTInit>:
 * | along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * |----------------------------------------------------------------------
 */
#include "esp8266_ll.h"

uint8_t ESP8266_LL_USARTInit(uint32_t baudrate) {
    2d4a:	cf 92       	push	r12
    2d4c:	df 92       	push	r13
    2d4e:	ef 92       	push	r14
    2d50:	ff 92       	push	r15
    2d52:	6b 01       	movw	r12, r22
    2d54:	7c 01       	movw	r14, r24
	
	/* Calculate prescaler for baudrate */
	prescaler =  (F_CPU / 4 / baudrate - 1) / 2; 
	
	/* Check valid input */
	if (((F_CPU == 16000000UL) && (baudrate == 57600)) || (prescaler > 4095)) {
    2d56:	61 15       	cp	r22, r1
    2d58:	71 4e       	sbci	r23, 0xE1	; 225
    2d5a:	81 05       	cpc	r24, r1
    2d5c:	91 05       	cpc	r25, r1
    2d5e:	a1 f0       	breq	.+40     	; 0x2d88 <ESP8266_LL_USARTInit+0x3e>

uint8_t ESP8266_LL_USARTInit(uint32_t baudrate) {
	uint16_t prescaler;
	
	/* Calculate prescaler for baudrate */
	prescaler =  (F_CPU / 4 / baudrate - 1) / 2; 
    2d60:	60 e0       	ldi	r22, 0x00	; 0
    2d62:	79 e0       	ldi	r23, 0x09	; 9
    2d64:	8d e3       	ldi	r24, 0x3D	; 61
    2d66:	90 e0       	ldi	r25, 0x00	; 0
    2d68:	a7 01       	movw	r20, r14
    2d6a:	96 01       	movw	r18, r12
    2d6c:	f7 d2       	rcall	.+1518   	; 0x335c <__udivmodsi4>
    2d6e:	da 01       	movw	r26, r20
    2d70:	c9 01       	movw	r24, r18
    2d72:	01 97       	sbiw	r24, 0x01	; 1
    2d74:	a1 09       	sbc	r26, r1
    2d76:	b1 09       	sbc	r27, r1
    2d78:	b6 95       	lsr	r27
    2d7a:	a7 95       	ror	r26
    2d7c:	97 95       	ror	r25
    2d7e:	87 95       	ror	r24
	
	/* Check valid input */
	if (((F_CPU == 16000000UL) && (baudrate == 57600)) || (prescaler > 4095)) {
    2d80:	81 15       	cp	r24, r1
    2d82:	20 e1       	ldi	r18, 0x10	; 16
    2d84:	92 07       	cpc	r25, r18
    2d86:	90 f0       	brcs	.+36     	; 0x2dac <ESP8266_LL_USARTInit+0x62>
		UCSR0A = 0;
    2d88:	10 92 c0 00 	sts	0x00C0, r1
		
		/* Calculate new value */
		prescaler = (F_CPU / 8 / baudrate - 1) / 2;
    2d8c:	60 e8       	ldi	r22, 0x80	; 128
    2d8e:	74 e8       	ldi	r23, 0x84	; 132
    2d90:	8e e1       	ldi	r24, 0x1E	; 30
    2d92:	90 e0       	ldi	r25, 0x00	; 0
    2d94:	a7 01       	movw	r20, r14
    2d96:	96 01       	movw	r18, r12
    2d98:	e1 d2       	rcall	.+1474   	; 0x335c <__udivmodsi4>
    2d9a:	da 01       	movw	r26, r20
    2d9c:	c9 01       	movw	r24, r18
    2d9e:	01 97       	sbiw	r24, 0x01	; 1
    2da0:	a1 09       	sbc	r26, r1
    2da2:	b1 09       	sbc	r27, r1
    2da4:	b6 95       	lsr	r27
    2da6:	a7 95       	ror	r26
    2da8:	97 95       	ror	r25
    2daa:	87 95       	ror	r24
	}
	
	/* Set UART prescaler for baudrate */
	UBRR1H = (prescaler >> 8) & 0xFF;
    2dac:	90 93 cd 00 	sts	0x00CD, r25
	UBRR1L = prescaler & 0xFF;
    2db0:	80 93 cc 00 	sts	0x00CC, r24
	
	/* Set double sampling */
	UCSR1A |= 1 << U2X1;
    2db4:	e8 ec       	ldi	r30, 0xC8	; 200
    2db6:	f0 e0       	ldi	r31, 0x00	; 0
    2db8:	80 81       	ld	r24, Z
    2dba:	82 60       	ori	r24, 0x02	; 2
    2dbc:	80 83       	st	Z, r24
	
	/* Data size 8 bits */
	UCSR1C |= (1 << UCSZ10) | (1 << UCSZ11);
    2dbe:	ea ec       	ldi	r30, 0xCA	; 202
    2dc0:	f0 e0       	ldi	r31, 0x00	; 0
    2dc2:	80 81       	ld	r24, Z
    2dc4:	86 60       	ori	r24, 0x06	; 6
    2dc6:	80 83       	st	Z, r24
	
	/* Enable receiver and transmitter */
	UCSR1B |= (1 << RXEN1) | (1 << TXEN1);
    2dc8:	e9 ec       	ldi	r30, 0xC9	; 201
    2dca:	f0 e0       	ldi	r31, 0x00	; 0
    2dcc:	80 81       	ld	r24, Z
    2dce:	88 61       	ori	r24, 0x18	; 24
    2dd0:	80 83       	st	Z, r24
	
	/* Enable RX Not empty interrupt */
	UCSR1B |= (1 << RXCIE1);
    2dd2:	80 81       	ld	r24, Z
    2dd4:	80 68       	ori	r24, 0x80	; 128
    2dd6:	80 83       	st	Z, r24
	
	/* Enable interrupts if not already */
	sei();
    2dd8:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    2dda:	8f e3       	ldi	r24, 0x3F	; 63
    2ddc:	9c e9       	ldi	r25, 0x9C	; 156
    2dde:	01 97       	sbiw	r24, 0x01	; 1
    2de0:	f1 f7       	brne	.-4      	; 0x2dde <ESP8266_LL_USARTInit+0x94>
    2de2:	00 c0       	rjmp	.+0      	; 0x2de4 <ESP8266_LL_USARTInit+0x9a>
    2de4:	00 00       	nop
	
	_delay_ms(10);
	
	/* Return 0 = Successful */
	return 0;
}
    2de6:	80 e0       	ldi	r24, 0x00	; 0
    2de8:	ff 90       	pop	r15
    2dea:	ef 90       	pop	r14
    2dec:	df 90       	pop	r13
    2dee:	cf 90       	pop	r12
    2df0:	08 95       	ret

00002df2 <ESP8266_LL_USARTSend>:

uint8_t ESP8266_LL_USARTSend(uint8_t* data, uint16_t count) {
    2df2:	cf 93       	push	r28
    2df4:	df 93       	push	r29
    2df6:	9c 01       	movw	r18, r24
	/* Wait till end */
	while ((UCSR1A & (1 << UDRE1)) == 0);
    2df8:	e8 ec       	ldi	r30, 0xC8	; 200
    2dfa:	f0 e0       	ldi	r31, 0x00	; 0
    2dfc:	90 81       	ld	r25, Z
    2dfe:	95 ff       	sbrs	r25, 5
    2e00:	fd cf       	rjmp	.-6      	; 0x2dfc <ESP8266_LL_USARTSend+0xa>
    2e02:	d9 01       	movw	r26, r18
    2e04:	62 0f       	add	r22, r18
    2e06:	73 1f       	adc	r23, r19
	
	/* Send data via USART */
	while (count--) {
		/* Send character */
		UDR1 = *data++;
    2e08:	ce ec       	ldi	r28, 0xCE	; 206
    2e0a:	d0 e0       	ldi	r29, 0x00	; 0

		/* Wait till done */
		while ((UCSR1A & (1 << UDRE1)) == 0);
    2e0c:	e8 ec       	ldi	r30, 0xC8	; 200
    2e0e:	f0 e0       	ldi	r31, 0x00	; 0
    2e10:	05 c0       	rjmp	.+10     	; 0x2e1c <ESP8266_LL_USARTSend+0x2a>
	while ((UCSR1A & (1 << UDRE1)) == 0);
	
	/* Send data via USART */
	while (count--) {
		/* Send character */
		UDR1 = *data++;
    2e12:	9d 91       	ld	r25, X+
    2e14:	98 83       	st	Y, r25

		/* Wait till done */
		while ((UCSR1A & (1 << UDRE1)) == 0);
    2e16:	90 81       	ld	r25, Z
    2e18:	95 ff       	sbrs	r25, 5
    2e1a:	fd cf       	rjmp	.-6      	; 0x2e16 <ESP8266_LL_USARTSend+0x24>
uint8_t ESP8266_LL_USARTSend(uint8_t* data, uint16_t count) {
	/* Wait till end */
	while ((UCSR1A & (1 << UDRE1)) == 0);
	
	/* Send data via USART */
	while (count--) {
    2e1c:	a6 17       	cp	r26, r22
    2e1e:	b7 07       	cpc	r27, r23
    2e20:	c1 f7       	brne	.-16     	; 0x2e12 <ESP8266_LL_USARTSend+0x20>
		while ((UCSR1A & (1 << UDRE1)) == 0);
	}
	
	/* Return 0 = Successful */
	return 0;
}
    2e22:	80 e0       	ldi	r24, 0x00	; 0
    2e24:	df 91       	pop	r29
    2e26:	cf 91       	pop	r28
    2e28:	08 95       	ret

00002e2a <__vector_36>:

/* USART receive interrupt handler */
ISR(USART1_RX_vect) {
    2e2a:	1f 92       	push	r1
    2e2c:	0f 92       	push	r0
    2e2e:	0f b6       	in	r0, 0x3f	; 63
    2e30:	0f 92       	push	r0
    2e32:	11 24       	eor	r1, r1
    2e34:	0b b6       	in	r0, 0x3b	; 59
    2e36:	0f 92       	push	r0
    2e38:	2f 93       	push	r18
    2e3a:	3f 93       	push	r19
    2e3c:	4f 93       	push	r20
    2e3e:	5f 93       	push	r21
    2e40:	6f 93       	push	r22
    2e42:	7f 93       	push	r23
    2e44:	8f 93       	push	r24
    2e46:	9f 93       	push	r25
    2e48:	af 93       	push	r26
    2e4a:	bf 93       	push	r27
    2e4c:	ef 93       	push	r30
    2e4e:	ff 93       	push	r31
    2e50:	cf 93       	push	r28
    2e52:	df 93       	push	r29
    2e54:	1f 92       	push	r1
    2e56:	cd b7       	in	r28, 0x3d	; 61
    2e58:	de b7       	in	r29, 0x3e	; 62
	uint8_t ch = UDR1;
    2e5a:	80 91 ce 00 	lds	r24, 0x00CE
    2e5e:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send received character to ESP stack */
	ESP8266_DataReceived(&ch, 1);
    2e60:	61 e0       	ldi	r22, 0x01	; 1
    2e62:	70 e0       	ldi	r23, 0x00	; 0
    2e64:	ce 01       	movw	r24, r28
    2e66:	01 96       	adiw	r24, 0x01	; 1
    2e68:	0e 94 a0 05 	call	0xb40	; 0xb40 <ESP8266_DataReceived>
}
    2e6c:	0f 90       	pop	r0
    2e6e:	df 91       	pop	r29
    2e70:	cf 91       	pop	r28
    2e72:	ff 91       	pop	r31
    2e74:	ef 91       	pop	r30
    2e76:	bf 91       	pop	r27
    2e78:	af 91       	pop	r26
    2e7a:	9f 91       	pop	r25
    2e7c:	8f 91       	pop	r24
    2e7e:	7f 91       	pop	r23
    2e80:	6f 91       	pop	r22
    2e82:	5f 91       	pop	r21
    2e84:	4f 91       	pop	r20
    2e86:	3f 91       	pop	r19
    2e88:	2f 91       	pop	r18
    2e8a:	0f 90       	pop	r0
    2e8c:	0b be       	out	0x3b, r0	; 59
    2e8e:	0f 90       	pop	r0
    2e90:	0f be       	out	0x3f, r0	; 63
    2e92:	0f 90       	pop	r0
    2e94:	1f 90       	pop	r1
    2e96:	18 95       	reti

00002e98 <Debug_Putc>:
	printf("Data successfully sent as client!\r\n");
}

/* Called when error returned trying to sent data */
void ESP8266_Callback_ClientConnectionDataSentError(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection) {
	printf("Error while sending data on connection %d!\r\n", Connection->Number);
    2e98:	80 93 c6 00 	sts	0x00C6, r24
    2e9c:	e0 ec       	ldi	r30, 0xC0	; 192
    2e9e:	f0 e0       	ldi	r31, 0x00	; 0
    2ea0:	80 81       	ld	r24, Z
    2ea2:	85 ff       	sbrs	r24, 5
    2ea4:	fd cf       	rjmp	.-6      	; 0x2ea0 <Debug_Putc+0x8>
    2ea6:	80 e0       	ldi	r24, 0x00	; 0
    2ea8:	90 e0       	ldi	r25, 0x00	; 0
    2eaa:	08 95       	ret

00002eac <TimerInit>:
    2eac:	84 b5       	in	r24, 0x24	; 36
    2eae:	82 60       	ori	r24, 0x02	; 2
    2eb0:	84 bd       	out	0x24, r24	; 36
    2eb2:	85 b5       	in	r24, 0x25	; 37
    2eb4:	83 60       	ori	r24, 0x03	; 3
    2eb6:	85 bd       	out	0x25, r24	; 37
    2eb8:	89 ef       	ldi	r24, 0xF9	; 249
    2eba:	87 bd       	out	0x27, r24	; 39
    2ebc:	ee e6       	ldi	r30, 0x6E	; 110
    2ebe:	f0 e0       	ldi	r31, 0x00	; 0
    2ec0:	80 81       	ld	r24, Z
    2ec2:	82 60       	ori	r24, 0x02	; 2
    2ec4:	80 83       	st	Z, r24
    2ec6:	08 95       	ret

00002ec8 <__vector_21>:
    2ec8:	1f 92       	push	r1
    2eca:	0f 92       	push	r0
    2ecc:	0f b6       	in	r0, 0x3f	; 63
    2ece:	0f 92       	push	r0
    2ed0:	11 24       	eor	r1, r1
    2ed2:	0b b6       	in	r0, 0x3b	; 59
    2ed4:	0f 92       	push	r0
    2ed6:	2f 93       	push	r18
    2ed8:	3f 93       	push	r19
    2eda:	4f 93       	push	r20
    2edc:	5f 93       	push	r21
    2ede:	6f 93       	push	r22
    2ee0:	7f 93       	push	r23
    2ee2:	8f 93       	push	r24
    2ee4:	9f 93       	push	r25
    2ee6:	af 93       	push	r26
    2ee8:	bf 93       	push	r27
    2eea:	ef 93       	push	r30
    2eec:	ff 93       	push	r31
    2eee:	41 e0       	ldi	r20, 0x01	; 1
    2ef0:	50 e0       	ldi	r21, 0x00	; 0
    2ef2:	60 e0       	ldi	r22, 0x00	; 0
    2ef4:	70 e0       	ldi	r23, 0x00	; 0
    2ef6:	89 e9       	ldi	r24, 0x99	; 153
    2ef8:	98 e1       	ldi	r25, 0x18	; 24
    2efa:	0e 94 8c 05 	call	0xb18	; 0xb18 <ESP8266_TimeUpdate>
    2efe:	ff 91       	pop	r31
    2f00:	ef 91       	pop	r30
    2f02:	bf 91       	pop	r27
    2f04:	af 91       	pop	r26
    2f06:	9f 91       	pop	r25
    2f08:	8f 91       	pop	r24
    2f0a:	7f 91       	pop	r23
    2f0c:	6f 91       	pop	r22
    2f0e:	5f 91       	pop	r21
    2f10:	4f 91       	pop	r20
    2f12:	3f 91       	pop	r19
    2f14:	2f 91       	pop	r18
    2f16:	0f 90       	pop	r0
    2f18:	0b be       	out	0x3b, r0	; 59
    2f1a:	0f 90       	pop	r0
    2f1c:	0f be       	out	0x3f, r0	; 63
    2f1e:	0f 90       	pop	r0
    2f20:	1f 90       	pop	r1
    2f22:	18 95       	reti

00002f24 <__vector_25>:
    2f24:	1f 92       	push	r1
    2f26:	0f 92       	push	r0
    2f28:	0f b6       	in	r0, 0x3f	; 63
    2f2a:	0f 92       	push	r0
    2f2c:	11 24       	eor	r1, r1
    2f2e:	0b b6       	in	r0, 0x3b	; 59
    2f30:	0f 92       	push	r0
    2f32:	8f 93       	push	r24
    2f34:	ef 93       	push	r30
    2f36:	ff 93       	push	r31
    2f38:	e6 ec       	ldi	r30, 0xC6	; 198
    2f3a:	f0 e0       	ldi	r31, 0x00	; 0
    2f3c:	80 81       	ld	r24, Z
    2f3e:	80 83       	st	Z, r24
    2f40:	e0 ec       	ldi	r30, 0xC0	; 192
    2f42:	f0 e0       	ldi	r31, 0x00	; 0
    2f44:	80 81       	ld	r24, Z
    2f46:	85 ff       	sbrs	r24, 5
    2f48:	fd cf       	rjmp	.-6      	; 0x2f44 <__vector_25+0x20>
    2f4a:	ff 91       	pop	r31
    2f4c:	ef 91       	pop	r30
    2f4e:	8f 91       	pop	r24
    2f50:	0f 90       	pop	r0
    2f52:	0b be       	out	0x3b, r0	; 59
    2f54:	0f 90       	pop	r0
    2f56:	0f be       	out	0x3f, r0	; 63
    2f58:	0f 90       	pop	r0
    2f5a:	1f 90       	pop	r1
    2f5c:	18 95       	reti

00002f5e <DebugUARTInit>:
    2f5e:	9b 01       	movw	r18, r22
    2f60:	ac 01       	movw	r20, r24
    2f62:	60 e0       	ldi	r22, 0x00	; 0
    2f64:	79 e0       	ldi	r23, 0x09	; 9
    2f66:	8d e3       	ldi	r24, 0x3D	; 61
    2f68:	90 e0       	ldi	r25, 0x00	; 0
    2f6a:	f8 d1       	rcall	.+1008   	; 0x335c <__udivmodsi4>
    2f6c:	da 01       	movw	r26, r20
    2f6e:	c9 01       	movw	r24, r18
    2f70:	01 97       	sbiw	r24, 0x01	; 1
    2f72:	a1 09       	sbc	r26, r1
    2f74:	b1 09       	sbc	r27, r1
    2f76:	ac 01       	movw	r20, r24
    2f78:	bd 01       	movw	r22, r26
    2f7a:	76 95       	lsr	r23
    2f7c:	67 95       	ror	r22
    2f7e:	57 95       	ror	r21
    2f80:	47 95       	ror	r20
    2f82:	85 2f       	mov	r24, r21
    2f84:	99 27       	eor	r25, r25
    2f86:	80 93 c5 00 	sts	0x00C5, r24
    2f8a:	40 93 c4 00 	sts	0x00C4, r20
    2f8e:	e0 ec       	ldi	r30, 0xC0	; 192
    2f90:	f0 e0       	ldi	r31, 0x00	; 0
    2f92:	80 81       	ld	r24, Z
    2f94:	82 60       	ori	r24, 0x02	; 2
    2f96:	80 83       	st	Z, r24
    2f98:	e2 ec       	ldi	r30, 0xC2	; 194
    2f9a:	f0 e0       	ldi	r31, 0x00	; 0
    2f9c:	80 81       	ld	r24, Z
    2f9e:	86 60       	ori	r24, 0x06	; 6
    2fa0:	80 83       	st	Z, r24
    2fa2:	e1 ec       	ldi	r30, 0xC1	; 193
    2fa4:	f0 e0       	ldi	r31, 0x00	; 0
    2fa6:	80 81       	ld	r24, Z
    2fa8:	88 61       	ori	r24, 0x18	; 24
    2faa:	80 83       	st	Z, r24
    2fac:	80 81       	ld	r24, Z
    2fae:	80 68       	ori	r24, 0x80	; 128
    2fb0:	80 83       	st	Z, r24
    2fb2:	08 95       	ret

00002fb4 <main>:
    2fb4:	86 e0       	ldi	r24, 0x06	; 6
    2fb6:	92 e0       	ldi	r25, 0x02	; 2
    2fb8:	90 93 6b 1b 	sts	0x1B6B, r25
    2fbc:	80 93 6a 1b 	sts	0x1B6A, r24
    2fc0:	60 e0       	ldi	r22, 0x00	; 0
    2fc2:	72 ec       	ldi	r23, 0xC2	; 194
    2fc4:	81 e0       	ldi	r24, 0x01	; 1
    2fc6:	90 e0       	ldi	r25, 0x00	; 0
    2fc8:	ca df       	rcall	.-108    	; 0x2f5e <DebugUARTInit>
    2fca:	70 df       	rcall	.-288    	; 0x2eac <TimerInit>
    2fcc:	78 94       	sei
    2fce:	84 e5       	ldi	r24, 0x54	; 84
    2fd0:	97 e0       	ldi	r25, 0x07	; 7
    2fd2:	b5 d3       	rcall	.+1898   	; 0x373e <puts>
    2fd4:	03 c0       	rjmp	.+6      	; 0x2fdc <main+0x28>
    2fd6:	88 e8       	ldi	r24, 0x88	; 136
    2fd8:	97 e0       	ldi	r25, 0x07	; 7
    2fda:	b1 d3       	rcall	.+1890   	; 0x373e <puts>
    2fdc:	40 e0       	ldi	r20, 0x00	; 0
    2fde:	52 ec       	ldi	r21, 0xC2	; 194
    2fe0:	61 e0       	ldi	r22, 0x01	; 1
    2fe2:	70 e0       	ldi	r23, 0x00	; 0
    2fe4:	89 e9       	ldi	r24, 0x99	; 153
    2fe6:	98 e1       	ldi	r25, 0x18	; 24
    2fe8:	d6 db       	rcall	.-2132   	; 0x2796 <ESP8266_Init>
    2fea:	81 11       	cpse	r24, r1
    2fec:	f4 cf       	rjmp	.-24     	; 0x2fd6 <main+0x22>
    2fee:	63 e0       	ldi	r22, 0x03	; 3
    2ff0:	89 e9       	ldi	r24, 0x99	; 153
    2ff2:	98 e1       	ldi	r25, 0x18	; 24
    2ff4:	34 dd       	rcall	.-1432   	; 0x2a5e <ESP8266_SetMode>
    2ff6:	81 11       	cpse	r24, r1
    2ff8:	fa cf       	rjmp	.-12     	; 0x2fee <main+0x3a>
    2ffa:	60 e5       	ldi	r22, 0x50	; 80
    2ffc:	70 e0       	ldi	r23, 0x00	; 0
    2ffe:	89 e9       	ldi	r24, 0x99	; 153
    3000:	98 e1       	ldi	r25, 0x18	; 24
    3002:	ca dc       	rcall	.-1644   	; 0x2998 <ESP8266_ServerEnable>
    3004:	81 11       	cpse	r24, r1
    3006:	f9 cf       	rjmp	.-14     	; 0x2ffa <main+0x46>
    3008:	83 eb       	ldi	r24, 0xB3	; 179
    300a:	97 e0       	ldi	r25, 0x07	; 7
    300c:	98 d3       	rcall	.+1840   	; 0x373e <puts>
    300e:	89 e9       	ldi	r24, 0x99	; 153
    3010:	98 e1       	ldi	r25, 0x18	; 24
    3012:	2b da       	rcall	.-2986   	; 0x246a <ESP8266_WifiDisconnect>
    3014:	89 e9       	ldi	r24, 0x99	; 153
    3016:	98 e1       	ldi	r25, 0x18	; 24
    3018:	e5 da       	rcall	.-2614   	; 0x25e4 <ESP8266_ListWifiStations>
    301a:	89 e9       	ldi	r24, 0x99	; 153
    301c:	98 e1       	ldi	r25, 0x18	; 24
    301e:	eb da       	rcall	.-2602   	; 0x25f6 <ESP8266_WaitReady>
    3020:	4d ec       	ldi	r20, 0xCD	; 205
    3022:	57 e0       	ldi	r21, 0x07	; 7
    3024:	66 ee       	ldi	r22, 0xE6	; 230
    3026:	77 e0       	ldi	r23, 0x07	; 7
    3028:	89 e9       	ldi	r24, 0x99	; 153
    302a:	98 e1       	ldi	r25, 0x18	; 24
    302c:	25 da       	rcall	.-2998   	; 0x2478 <ESP8266_WifiConnect>
    302e:	89 e9       	ldi	r24, 0x99	; 153
    3030:	98 e1       	ldi	r25, 0x18	; 24
    3032:	e1 da       	rcall	.-2622   	; 0x25f6 <ESP8266_WaitReady>
    3034:	89 e9       	ldi	r24, 0x99	; 153
    3036:	98 e1       	ldi	r25, 0x18	; 24
    3038:	70 da       	rcall	.-2848   	; 0x251a <ESP8266_WifiGetConnected>
    303a:	26 98       	cbi	0x04, 6	; 4
    303c:	2e 9a       	sbi	0x05, 6	; 5
    303e:	89 e9       	ldi	r24, 0x99	; 153
    3040:	98 e1       	ldi	r25, 0x18	; 24
    3042:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <ESP8266_Update>
    3046:	1e 99       	sbic	0x03, 6	; 3
    3048:	fa cf       	rjmp	.-12     	; 0x303e <main+0x8a>
    304a:	1e 9b       	sbis	0x03, 6	; 3
    304c:	fe cf       	rjmp	.-4      	; 0x304a <main+0x96>
    304e:	00 e0       	ldi	r16, 0x00	; 0
    3050:	10 e0       	ldi	r17, 0x00	; 0
    3052:	20 e5       	ldi	r18, 0x50	; 80
    3054:	30 e0       	ldi	r19, 0x00	; 0
    3056:	43 ef       	ldi	r20, 0xF3	; 243
    3058:	57 e0       	ldi	r21, 0x07	; 7
    305a:	69 e0       	ldi	r22, 0x09	; 9
    305c:	78 e0       	ldi	r23, 0x08	; 8
    305e:	89 e9       	ldi	r24, 0x99	; 153
    3060:	98 e1       	ldi	r25, 0x18	; 24
    3062:	af dd       	rcall	.-1186   	; 0x2bc2 <ESP8266_StartClientConnection>
    3064:	81 11       	cpse	r24, r1
    3066:	f3 cf       	rjmp	.-26     	; 0x304e <main+0x9a>
    3068:	ea cf       	rjmp	.-44     	; 0x303e <main+0x8a>

0000306a <ESP8266_Callback_DeviceReady>:
    306a:	86 e1       	ldi	r24, 0x16	; 22
    306c:	98 e0       	ldi	r25, 0x08	; 8
    306e:	67 c3       	rjmp	.+1742   	; 0x373e <puts>
    3070:	08 95       	ret

00003072 <ESP8266_Callback_WatchdogReset>:
    3072:	87 e2       	ldi	r24, 0x27	; 39
    3074:	98 e0       	ldi	r25, 0x08	; 8
    3076:	63 c3       	rjmp	.+1734   	; 0x373e <puts>
    3078:	08 95       	ret

0000307a <ESP8266_Callback_WifiDisconnected>:
    307a:	81 e4       	ldi	r24, 0x41	; 65
    307c:	98 e0       	ldi	r25, 0x08	; 8
    307e:	5f c3       	rjmp	.+1726   	; 0x373e <puts>
    3080:	08 95       	ret

00003082 <ESP8266_Callback_WifiConnected>:
    3082:	88 e5       	ldi	r24, 0x58	; 88
    3084:	98 e0       	ldi	r25, 0x08	; 8
    3086:	5b c3       	rjmp	.+1718   	; 0x373e <puts>
    3088:	08 95       	ret

0000308a <ESP8266_Callback_WifiConnectFailed>:
    308a:	fc 01       	movw	r30, r24
    308c:	eb 5a       	subi	r30, 0xAB	; 171
    308e:	fd 4f       	sbci	r31, 0xFD	; 253
    3090:	80 81       	ld	r24, Z
    3092:	1f 92       	push	r1
    3094:	8f 93       	push	r24
    3096:	8c e6       	ldi	r24, 0x6C	; 108
    3098:	98 e0       	ldi	r25, 0x08	; 8
    309a:	9f 93       	push	r25
    309c:	8f 93       	push	r24
    309e:	3c d3       	rcall	.+1656   	; 0x3718 <printf>
    30a0:	0f 90       	pop	r0
    30a2:	0f 90       	pop	r0
    30a4:	0f 90       	pop	r0
    30a6:	0f 90       	pop	r0
    30a8:	08 95       	ret

000030aa <ESP8266_Callback_WifiGotIP>:
    30aa:	cf 93       	push	r28
    30ac:	df 93       	push	r29
    30ae:	ec 01       	movw	r28, r24
    30b0:	8f e9       	ldi	r24, 0x9F	; 159
    30b2:	98 e0       	ldi	r25, 0x08	; 8
    30b4:	44 d3       	rcall	.+1672   	; 0x373e <puts>
    30b6:	ce 01       	movw	r24, r28
    30b8:	37 da       	rcall	.-2962   	; 0x2528 <ESP8266_GetSTAIP>
    30ba:	1f 92       	push	r1
    30bc:	8f 93       	push	r24
    30be:	87 eb       	ldi	r24, 0xB7	; 183
    30c0:	98 e0       	ldi	r25, 0x08	; 8
    30c2:	9f 93       	push	r25
    30c4:	8f 93       	push	r24
    30c6:	28 d3       	rcall	.+1616   	; 0x3718 <printf>
    30c8:	0f 90       	pop	r0
    30ca:	0f 90       	pop	r0
    30cc:	0f 90       	pop	r0
    30ce:	0f 90       	pop	r0
    30d0:	df 91       	pop	r29
    30d2:	cf 91       	pop	r28
    30d4:	08 95       	ret

000030d6 <ESP8266_Callback_WifiIPSet>:
    30d6:	fc 01       	movw	r30, r24
    30d8:	eb 55       	subi	r30, 0x5B	; 91
    30da:	fe 4f       	sbci	r31, 0xFE	; 254
    30dc:	20 81       	ld	r18, Z
    30de:	1f 92       	push	r1
    30e0:	2f 93       	push	r18
    30e2:	31 97       	sbiw	r30, 0x01	; 1
    30e4:	20 81       	ld	r18, Z
    30e6:	1f 92       	push	r1
    30e8:	2f 93       	push	r18
    30ea:	31 97       	sbiw	r30, 0x01	; 1
    30ec:	20 81       	ld	r18, Z
    30ee:	1f 92       	push	r1
    30f0:	2f 93       	push	r18
    30f2:	31 97       	sbiw	r30, 0x01	; 1
    30f4:	80 81       	ld	r24, Z
    30f6:	1f 92       	push	r1
    30f8:	8f 93       	push	r24
    30fa:	80 ed       	ldi	r24, 0xD0	; 208
    30fc:	98 e0       	ldi	r25, 0x08	; 8
    30fe:	9f 93       	push	r25
    3100:	8f 93       	push	r24
    3102:	0a d3       	rcall	.+1556   	; 0x3718 <printf>
    3104:	8d b7       	in	r24, 0x3d	; 61
    3106:	9e b7       	in	r25, 0x3e	; 62
    3108:	0a 96       	adiw	r24, 0x0a	; 10
    310a:	0f b6       	in	r0, 0x3f	; 63
    310c:	f8 94       	cli
    310e:	9e bf       	out	0x3e, r25	; 62
    3110:	0f be       	out	0x3f, r0	; 63
    3112:	8d bf       	out	0x3d, r24	; 61
    3114:	08 95       	ret

00003116 <ESP8266_Callback_WifiDetected>:
    3116:	cf 92       	push	r12
    3118:	df 92       	push	r13
    311a:	ef 92       	push	r14
    311c:	ff 92       	push	r15
    311e:	0f 93       	push	r16
    3120:	1f 93       	push	r17
    3122:	cf 93       	push	r28
    3124:	df 93       	push	r29
    3126:	7b 01       	movw	r14, r22
    3128:	eb 01       	movw	r28, r22
    312a:	c0 5c       	subi	r28, 0xC0	; 192
    312c:	de 4f       	sbci	r29, 0xFE	; 254
    312e:	88 81       	ld	r24, Y
    3130:	1f 92       	push	r1
    3132:	8f 93       	push	r24
    3134:	87 e0       	ldi	r24, 0x07	; 7
    3136:	99 e0       	ldi	r25, 0x09	; 9
    3138:	9f 93       	push	r25
    313a:	8f 93       	push	r24
    313c:	ed d2       	rcall	.+1498   	; 0x3718 <printf>
    313e:	0f 90       	pop	r0
    3140:	0f 90       	pop	r0
    3142:	0f 90       	pop	r0
    3144:	0f 90       	pop	r0
    3146:	88 81       	ld	r24, Y
    3148:	88 23       	and	r24, r24
    314a:	09 f1       	breq	.+66     	; 0x318e <ESP8266_Callback_WifiDetected+0x78>
    314c:	c0 e0       	ldi	r28, 0x00	; 0
    314e:	09 e2       	ldi	r16, 0x29	; 41
    3150:	19 e0       	ldi	r17, 0x09	; 9
    3152:	67 01       	movw	r12, r14
    3154:	20 ec       	ldi	r18, 0xC0	; 192
    3156:	c2 1a       	sub	r12, r18
    3158:	2e ef       	ldi	r18, 0xFE	; 254
    315a:	d2 0a       	sbc	r13, r18
    315c:	c7 01       	movw	r24, r14
    315e:	e0 e2       	ldi	r30, 0x20	; 32
    3160:	ce 9f       	mul	r28, r30
    3162:	80 0d       	add	r24, r0
    3164:	91 1d       	adc	r25, r1
    3166:	11 24       	eor	r1, r1
    3168:	01 96       	adiw	r24, 0x01	; 1
    316a:	9f 93       	push	r25
    316c:	8f 93       	push	r24
    316e:	1f 92       	push	r1
    3170:	cf 93       	push	r28
    3172:	1f 93       	push	r17
    3174:	0f 93       	push	r16
    3176:	d0 d2       	rcall	.+1440   	; 0x3718 <printf>
    3178:	cf 5f       	subi	r28, 0xFF	; 255
    317a:	0f 90       	pop	r0
    317c:	0f 90       	pop	r0
    317e:	0f 90       	pop	r0
    3180:	0f 90       	pop	r0
    3182:	0f 90       	pop	r0
    3184:	0f 90       	pop	r0
    3186:	f6 01       	movw	r30, r12
    3188:	80 81       	ld	r24, Z
    318a:	c8 17       	cp	r28, r24
    318c:	38 f3       	brcs	.-50     	; 0x315c <ESP8266_Callback_WifiDetected+0x46>
    318e:	df 91       	pop	r29
    3190:	cf 91       	pop	r28
    3192:	1f 91       	pop	r17
    3194:	0f 91       	pop	r16
    3196:	ff 90       	pop	r15
    3198:	ef 90       	pop	r14
    319a:	df 90       	pop	r13
    319c:	cf 90       	pop	r12
    319e:	08 95       	ret

000031a0 <ESP8266_Callback_ClientConnectionConnected>:
    31a0:	0f 93       	push	r16
    31a2:	1f 93       	push	r17
    31a4:	cf 93       	push	r28
    31a6:	df 93       	push	r29
    31a8:	8c 01       	movw	r16, r24
    31aa:	eb 01       	movw	r28, r22
    31ac:	9b 01       	movw	r18, r22
    31ae:	23 5e       	subi	r18, 0xE3	; 227
    31b0:	3f 4f       	sbci	r19, 0xFF	; 255
    31b2:	3f 93       	push	r19
    31b4:	2f 93       	push	r18
    31b6:	23 e3       	ldi	r18, 0x33	; 51
    31b8:	39 e0       	ldi	r19, 0x09	; 9
    31ba:	3f 93       	push	r19
    31bc:	2f 93       	push	r18
    31be:	ac d2       	rcall	.+1368   	; 0x3718 <printf>
    31c0:	be 01       	movw	r22, r28
    31c2:	c8 01       	movw	r24, r16
    31c4:	9d dc       	rcall	.-1734   	; 0x2b00 <ESP8266_RequestSendData>
    31c6:	0f 90       	pop	r0
    31c8:	0f 90       	pop	r0
    31ca:	0f 90       	pop	r0
    31cc:	0f 90       	pop	r0
    31ce:	df 91       	pop	r29
    31d0:	cf 91       	pop	r28
    31d2:	1f 91       	pop	r17
    31d4:	0f 91       	pop	r16
    31d6:	08 95       	ret

000031d8 <ESP8266_Callback_ClientConnectionError>:
    31d8:	fb 01       	movw	r30, r22
    31da:	81 81       	ldd	r24, Z+1	; 0x01
    31dc:	1f 92       	push	r1
    31de:	8f 93       	push	r24
    31e0:	87 e6       	ldi	r24, 0x67	; 103
    31e2:	99 e0       	ldi	r25, 0x09	; 9
    31e4:	9f 93       	push	r25
    31e6:	8f 93       	push	r24
    31e8:	97 d2       	rcall	.+1326   	; 0x3718 <printf>
    31ea:	0f 90       	pop	r0
    31ec:	0f 90       	pop	r0
    31ee:	0f 90       	pop	r0
    31f0:	0f 90       	pop	r0
    31f2:	08 95       	ret

000031f4 <ESP8266_Callback_ClientConnectionSendData>:
    31f4:	cf 93       	push	r28
    31f6:	df 93       	push	r29
    31f8:	81 e1       	ldi	r24, 0x11	; 17
    31fa:	e4 ea       	ldi	r30, 0xA4	; 164
    31fc:	f9 e0       	ldi	r31, 0x09	; 9
    31fe:	da 01       	movw	r26, r20
    3200:	01 90       	ld	r0, Z+
    3202:	0d 92       	st	X+, r0
    3204:	8a 95       	dec	r24
    3206:	e1 f7       	brne	.-8      	; 0x3200 <ESP8266_Callback_ClientConnectionSendData+0xc>
    3208:	da 01       	movw	r26, r20
    320a:	0d 90       	ld	r0, X+
    320c:	00 20       	and	r0, r0
    320e:	e9 f7       	brne	.-6      	; 0x320a <ESP8266_Callback_ClientConnectionSendData+0x16>
    3210:	11 97       	sbiw	r26, 0x01	; 1
    3212:	8e e1       	ldi	r24, 0x1E	; 30
    3214:	e5 eb       	ldi	r30, 0xB5	; 181
    3216:	f9 e0       	ldi	r31, 0x09	; 9
    3218:	01 90       	ld	r0, Z+
    321a:	0d 92       	st	X+, r0
    321c:	8a 95       	dec	r24
    321e:	e1 f7       	brne	.-8      	; 0x3218 <ESP8266_Callback_ClientConnectionSendData+0x24>
    3220:	da 01       	movw	r26, r20
    3222:	0d 90       	ld	r0, X+
    3224:	00 20       	and	r0, r0
    3226:	e9 f7       	brne	.-6      	; 0x3222 <ESP8266_Callback_ClientConnectionSendData+0x2e>
    3228:	11 97       	sbiw	r26, 0x01	; 1
    322a:	84 e1       	ldi	r24, 0x14	; 20
    322c:	e3 ed       	ldi	r30, 0xD3	; 211
    322e:	f9 e0       	ldi	r31, 0x09	; 9
    3230:	01 90       	ld	r0, Z+
    3232:	0d 92       	st	X+, r0
    3234:	8a 95       	dec	r24
    3236:	e1 f7       	brne	.-8      	; 0x3230 <ESP8266_Callback_ClientConnectionSendData+0x3c>
    3238:	fa 01       	movw	r30, r20
    323a:	01 90       	ld	r0, Z+
    323c:	00 20       	and	r0, r0
    323e:	e9 f7       	brne	.-6      	; 0x323a <ESP8266_Callback_ClientConnectionSendData+0x46>
    3240:	31 97       	sbiw	r30, 0x01	; 1
    3242:	8d e0       	ldi	r24, 0x0D	; 13
    3244:	9a e0       	ldi	r25, 0x0A	; 10
    3246:	a0 e0       	ldi	r26, 0x00	; 0
    3248:	80 83       	st	Z, r24
    324a:	91 83       	std	Z+1, r25	; 0x01
    324c:	a2 83       	std	Z+2, r26	; 0x02
    324e:	fa 01       	movw	r30, r20
    3250:	01 90       	ld	r0, Z+
    3252:	00 20       	and	r0, r0
    3254:	e9 f7       	brne	.-6      	; 0x3250 <ESP8266_Callback_ClientConnectionSendData+0x5c>
    3256:	cf 01       	movw	r24, r30
    3258:	01 97       	sbiw	r24, 0x01	; 1
    325a:	84 1b       	sub	r24, r20
    325c:	95 0b       	sbc	r25, r21
    325e:	df 91       	pop	r29
    3260:	cf 91       	pop	r28
    3262:	08 95       	ret

00003264 <ESP8266_Callback_ClientConnectionDataSent>:
    3264:	87 ee       	ldi	r24, 0xE7	; 231
    3266:	99 e0       	ldi	r25, 0x09	; 9
    3268:	6a c2       	rjmp	.+1236   	; 0x373e <puts>
    326a:	08 95       	ret

0000326c <ESP8266_Callback_ClientConnectionDataReceived>:
}

void ESP8266_Callback_ClientConnectionDataReceived(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection, char* Buffer) {
    326c:	cf 93       	push	r28
    326e:	df 93       	push	r29
    3270:	eb 01       	movw	r28, r22
	/* Data received from server back to client */
	printf("Data received from server on connection: %s; Number of bytes received: %lu; %lu / %lu;\r\n",
    3272:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3274:	8f 93       	push	r24
    3276:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3278:	8f 93       	push	r24
    327a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    327c:	8f 93       	push	r24
    327e:	89 8d       	ldd	r24, Y+25	; 0x19
    3280:	8f 93       	push	r24
    3282:	88 89       	ldd	r24, Y+16	; 0x10
    3284:	8f 93       	push	r24
    3286:	8f 85       	ldd	r24, Y+15	; 0x0f
    3288:	8f 93       	push	r24
    328a:	8e 85       	ldd	r24, Y+14	; 0x0e
    328c:	8f 93       	push	r24
    328e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3290:	8f 93       	push	r24
    3292:	8c 85       	ldd	r24, Y+12	; 0x0c
    3294:	8f 93       	push	r24
    3296:	8b 85       	ldd	r24, Y+11	; 0x0b
    3298:	8f 93       	push	r24
    329a:	8a 85       	ldd	r24, Y+10	; 0x0a
    329c:	8f 93       	push	r24
    329e:	89 85       	ldd	r24, Y+9	; 0x09
    32a0:	8f 93       	push	r24
    32a2:	cb 01       	movw	r24, r22
    32a4:	4d 96       	adiw	r24, 0x1d	; 29
    32a6:	9f 93       	push	r25
    32a8:	8f 93       	push	r24
    32aa:	87 e3       	ldi	r24, 0x37	; 55
    32ac:	9a e0       	ldi	r25, 0x0A	; 10
    32ae:	9f 93       	push	r25
    32b0:	8f 93       	push	r24
    32b2:	32 d2       	rcall	.+1124   	; 0x3718 <printf>
	Connection->TotalBytesReceived,
	Connection->ContentLength
	);
	
	/* Print message when first packet */
	if (Connection->FirstPacket) {
    32b4:	fe 01       	movw	r30, r28
    32b6:	e0 5c       	subi	r30, 0xC0	; 192
    32b8:	ff 4f       	sbci	r31, 0xFF	; 255
    32ba:	8d b7       	in	r24, 0x3d	; 61
    32bc:	9e b7       	in	r25, 0x3e	; 62
    32be:	40 96       	adiw	r24, 0x10	; 16
    32c0:	0f b6       	in	r0, 0x3f	; 63
    32c2:	f8 94       	cli
    32c4:	9e bf       	out	0x3e, r25	; 62
    32c6:	0f be       	out	0x3f, r0	; 63
    32c8:	8d bf       	out	0x3d, r24	; 61
    32ca:	80 81       	ld	r24, Z
    32cc:	88 23       	and	r24, r24
    32ce:	99 f0       	breq	.+38     	; 0x32f6 <ESP8266_Callback_ClientConnectionDataReceived+0x8a>
		
		/* Print first message */
		printf("This is first packet received. Content length on this connection is: %lu\r\n", Connection->ContentLength);
    32d0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    32d2:	8f 93       	push	r24
    32d4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    32d6:	8f 93       	push	r24
    32d8:	8a 8d       	ldd	r24, Y+26	; 0x1a
    32da:	8f 93       	push	r24
    32dc:	89 8d       	ldd	r24, Y+25	; 0x19
    32de:	8f 93       	push	r24
    32e0:	80 e9       	ldi	r24, 0x90	; 144
    32e2:	9a e0       	ldi	r25, 0x0A	; 10
    32e4:	9f 93       	push	r25
    32e6:	8f 93       	push	r24
    32e8:	17 d2       	rcall	.+1070   	; 0x3718 <printf>
    32ea:	0f 90       	pop	r0
    32ec:	0f 90       	pop	r0
    32ee:	0f 90       	pop	r0
    32f0:	0f 90       	pop	r0
    32f2:	0f 90       	pop	r0
    32f4:	0f 90       	pop	r0
	}
}
    32f6:	df 91       	pop	r29
    32f8:	cf 91       	pop	r28
    32fa:	08 95       	ret

000032fc <ESP8266_Callback_ClientConnectionClosed>:

/* Called when connection is closed */
void ESP8266_Callback_ClientConnectionClosed(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection) {
    32fc:	fb 01       	movw	r30, r22
	printf("Client connection closed, connection: %d; Total bytes received: %lu; Content-Length header: %lu\r\n",
    32fe:	84 8d       	ldd	r24, Z+28	; 0x1c
    3300:	8f 93       	push	r24
    3302:	83 8d       	ldd	r24, Z+27	; 0x1b
    3304:	8f 93       	push	r24
    3306:	82 8d       	ldd	r24, Z+26	; 0x1a
    3308:	8f 93       	push	r24
    330a:	81 8d       	ldd	r24, Z+25	; 0x19
    330c:	8f 93       	push	r24
    330e:	80 89       	ldd	r24, Z+16	; 0x10
    3310:	8f 93       	push	r24
    3312:	87 85       	ldd	r24, Z+15	; 0x0f
    3314:	8f 93       	push	r24
    3316:	86 85       	ldd	r24, Z+14	; 0x0e
    3318:	8f 93       	push	r24
    331a:	85 85       	ldd	r24, Z+13	; 0x0d
    331c:	8f 93       	push	r24
    331e:	81 81       	ldd	r24, Z+1	; 0x01
    3320:	1f 92       	push	r1
    3322:	8f 93       	push	r24
    3324:	8b ed       	ldi	r24, 0xDB	; 219
    3326:	9a e0       	ldi	r25, 0x0A	; 10
    3328:	9f 93       	push	r25
    332a:	8f 93       	push	r24
    332c:	f5 d1       	rcall	.+1002   	; 0x3718 <printf>
    332e:	8d b7       	in	r24, 0x3d	; 61
    3330:	9e b7       	in	r25, 0x3e	; 62
    3332:	0c 96       	adiw	r24, 0x0c	; 12
    3334:	0f b6       	in	r0, 0x3f	; 63
    3336:	f8 94       	cli
    3338:	9e bf       	out	0x3e, r25	; 62
    333a:	0f be       	out	0x3f, r0	; 63
    333c:	8d bf       	out	0x3d, r24	; 61
    333e:	08 95       	ret

00003340 <ESP8266_Callback_ClientConnectionTimeout>:
	);
}

/* Called when timeout is reached on connection to server */
void ESP8266_Callback_ClientConnectionTimeout(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection) {
	printf("Timeout reached on connection: %d\r\n", Connection->Number);
    3340:	fb 01       	movw	r30, r22
    3342:	81 81       	ldd	r24, Z+1	; 0x01
    3344:	1f 92       	push	r1
    3346:	8f 93       	push	r24
    3348:	8d e3       	ldi	r24, 0x3D	; 61
    334a:	9b e0       	ldi	r25, 0x0B	; 11
    334c:	9f 93       	push	r25
    334e:	8f 93       	push	r24
    3350:	e3 d1       	rcall	.+966    	; 0x3718 <printf>
    3352:	0f 90       	pop	r0
    3354:	0f 90       	pop	r0
    3356:	0f 90       	pop	r0
    3358:	0f 90       	pop	r0
    335a:	08 95       	ret

0000335c <__udivmodsi4>:
    335c:	a1 e2       	ldi	r26, 0x21	; 33
    335e:	1a 2e       	mov	r1, r26
    3360:	aa 1b       	sub	r26, r26
    3362:	bb 1b       	sub	r27, r27
    3364:	fd 01       	movw	r30, r26
    3366:	0d c0       	rjmp	.+26     	; 0x3382 <__udivmodsi4_ep>

00003368 <__udivmodsi4_loop>:
    3368:	aa 1f       	adc	r26, r26
    336a:	bb 1f       	adc	r27, r27
    336c:	ee 1f       	adc	r30, r30
    336e:	ff 1f       	adc	r31, r31
    3370:	a2 17       	cp	r26, r18
    3372:	b3 07       	cpc	r27, r19
    3374:	e4 07       	cpc	r30, r20
    3376:	f5 07       	cpc	r31, r21
    3378:	20 f0       	brcs	.+8      	; 0x3382 <__udivmodsi4_ep>
    337a:	a2 1b       	sub	r26, r18
    337c:	b3 0b       	sbc	r27, r19
    337e:	e4 0b       	sbc	r30, r20
    3380:	f5 0b       	sbc	r31, r21

00003382 <__udivmodsi4_ep>:
    3382:	66 1f       	adc	r22, r22
    3384:	77 1f       	adc	r23, r23
    3386:	88 1f       	adc	r24, r24
    3388:	99 1f       	adc	r25, r25
    338a:	1a 94       	dec	r1
    338c:	69 f7       	brne	.-38     	; 0x3368 <__udivmodsi4_loop>
    338e:	60 95       	com	r22
    3390:	70 95       	com	r23
    3392:	80 95       	com	r24
    3394:	90 95       	com	r25
    3396:	9b 01       	movw	r18, r22
    3398:	ac 01       	movw	r20, r24
    339a:	bd 01       	movw	r22, r26
    339c:	cf 01       	movw	r24, r30
    339e:	08 95       	ret

000033a0 <__tablejump2__>:
    33a0:	ee 0f       	add	r30, r30
    33a2:	ff 1f       	adc	r31, r31
    33a4:	88 1f       	adc	r24, r24
    33a6:	8b bf       	out	0x3b, r24	; 59
    33a8:	07 90       	elpm	r0, Z+
    33aa:	f6 91       	elpm	r31, Z
    33ac:	e0 2d       	mov	r30, r0
    33ae:	19 94       	eijmp

000033b0 <malloc>:
    33b0:	cf 93       	push	r28
    33b2:	df 93       	push	r29
    33b4:	82 30       	cpi	r24, 0x02	; 2
    33b6:	91 05       	cpc	r25, r1
    33b8:	10 f4       	brcc	.+4      	; 0x33be <malloc+0xe>
    33ba:	82 e0       	ldi	r24, 0x02	; 2
    33bc:	90 e0       	ldi	r25, 0x00	; 0
    33be:	e0 91 66 1b 	lds	r30, 0x1B66
    33c2:	f0 91 67 1b 	lds	r31, 0x1B67
    33c6:	20 e0       	ldi	r18, 0x00	; 0
    33c8:	30 e0       	ldi	r19, 0x00	; 0
    33ca:	c0 e0       	ldi	r28, 0x00	; 0
    33cc:	d0 e0       	ldi	r29, 0x00	; 0
    33ce:	30 97       	sbiw	r30, 0x00	; 0
    33d0:	11 f1       	breq	.+68     	; 0x3416 <malloc+0x66>
    33d2:	40 81       	ld	r20, Z
    33d4:	51 81       	ldd	r21, Z+1	; 0x01
    33d6:	48 17       	cp	r20, r24
    33d8:	59 07       	cpc	r21, r25
    33da:	c0 f0       	brcs	.+48     	; 0x340c <malloc+0x5c>
    33dc:	48 17       	cp	r20, r24
    33de:	59 07       	cpc	r21, r25
    33e0:	61 f4       	brne	.+24     	; 0x33fa <malloc+0x4a>
    33e2:	82 81       	ldd	r24, Z+2	; 0x02
    33e4:	93 81       	ldd	r25, Z+3	; 0x03
    33e6:	20 97       	sbiw	r28, 0x00	; 0
    33e8:	19 f0       	breq	.+6      	; 0x33f0 <malloc+0x40>
    33ea:	9b 83       	std	Y+3, r25	; 0x03
    33ec:	8a 83       	std	Y+2, r24	; 0x02
    33ee:	2b c0       	rjmp	.+86     	; 0x3446 <malloc+0x96>
    33f0:	90 93 67 1b 	sts	0x1B67, r25
    33f4:	80 93 66 1b 	sts	0x1B66, r24
    33f8:	26 c0       	rjmp	.+76     	; 0x3446 <malloc+0x96>
    33fa:	21 15       	cp	r18, r1
    33fc:	31 05       	cpc	r19, r1
    33fe:	19 f0       	breq	.+6      	; 0x3406 <malloc+0x56>
    3400:	42 17       	cp	r20, r18
    3402:	53 07       	cpc	r21, r19
    3404:	18 f4       	brcc	.+6      	; 0x340c <malloc+0x5c>
    3406:	9a 01       	movw	r18, r20
    3408:	be 01       	movw	r22, r28
    340a:	df 01       	movw	r26, r30
    340c:	ef 01       	movw	r28, r30
    340e:	02 80       	ldd	r0, Z+2	; 0x02
    3410:	f3 81       	ldd	r31, Z+3	; 0x03
    3412:	e0 2d       	mov	r30, r0
    3414:	dc cf       	rjmp	.-72     	; 0x33ce <malloc+0x1e>
    3416:	21 15       	cp	r18, r1
    3418:	31 05       	cpc	r19, r1
    341a:	09 f1       	breq	.+66     	; 0x345e <malloc+0xae>
    341c:	28 1b       	sub	r18, r24
    341e:	39 0b       	sbc	r19, r25
    3420:	24 30       	cpi	r18, 0x04	; 4
    3422:	31 05       	cpc	r19, r1
    3424:	90 f4       	brcc	.+36     	; 0x344a <malloc+0x9a>
    3426:	12 96       	adiw	r26, 0x02	; 2
    3428:	8d 91       	ld	r24, X+
    342a:	9c 91       	ld	r25, X
    342c:	13 97       	sbiw	r26, 0x03	; 3
    342e:	61 15       	cp	r22, r1
    3430:	71 05       	cpc	r23, r1
    3432:	21 f0       	breq	.+8      	; 0x343c <malloc+0x8c>
    3434:	fb 01       	movw	r30, r22
    3436:	93 83       	std	Z+3, r25	; 0x03
    3438:	82 83       	std	Z+2, r24	; 0x02
    343a:	04 c0       	rjmp	.+8      	; 0x3444 <malloc+0x94>
    343c:	90 93 67 1b 	sts	0x1B67, r25
    3440:	80 93 66 1b 	sts	0x1B66, r24
    3444:	fd 01       	movw	r30, r26
    3446:	32 96       	adiw	r30, 0x02	; 2
    3448:	44 c0       	rjmp	.+136    	; 0x34d2 <malloc+0x122>
    344a:	fd 01       	movw	r30, r26
    344c:	e2 0f       	add	r30, r18
    344e:	f3 1f       	adc	r31, r19
    3450:	81 93       	st	Z+, r24
    3452:	91 93       	st	Z+, r25
    3454:	22 50       	subi	r18, 0x02	; 2
    3456:	31 09       	sbc	r19, r1
    3458:	2d 93       	st	X+, r18
    345a:	3c 93       	st	X, r19
    345c:	3a c0       	rjmp	.+116    	; 0x34d2 <malloc+0x122>
    345e:	20 91 64 1b 	lds	r18, 0x1B64
    3462:	30 91 65 1b 	lds	r19, 0x1B65
    3466:	23 2b       	or	r18, r19
    3468:	41 f4       	brne	.+16     	; 0x347a <malloc+0xca>
    346a:	20 91 02 02 	lds	r18, 0x0202
    346e:	30 91 03 02 	lds	r19, 0x0203
    3472:	30 93 65 1b 	sts	0x1B65, r19
    3476:	20 93 64 1b 	sts	0x1B64, r18
    347a:	20 91 00 02 	lds	r18, 0x0200
    347e:	30 91 01 02 	lds	r19, 0x0201
    3482:	21 15       	cp	r18, r1
    3484:	31 05       	cpc	r19, r1
    3486:	41 f4       	brne	.+16     	; 0x3498 <malloc+0xe8>
    3488:	2d b7       	in	r18, 0x3d	; 61
    348a:	3e b7       	in	r19, 0x3e	; 62
    348c:	40 91 04 02 	lds	r20, 0x0204
    3490:	50 91 05 02 	lds	r21, 0x0205
    3494:	24 1b       	sub	r18, r20
    3496:	35 0b       	sbc	r19, r21
    3498:	e0 91 64 1b 	lds	r30, 0x1B64
    349c:	f0 91 65 1b 	lds	r31, 0x1B65
    34a0:	e2 17       	cp	r30, r18
    34a2:	f3 07       	cpc	r31, r19
    34a4:	a0 f4       	brcc	.+40     	; 0x34ce <malloc+0x11e>
    34a6:	2e 1b       	sub	r18, r30
    34a8:	3f 0b       	sbc	r19, r31
    34aa:	28 17       	cp	r18, r24
    34ac:	39 07       	cpc	r19, r25
    34ae:	78 f0       	brcs	.+30     	; 0x34ce <malloc+0x11e>
    34b0:	ac 01       	movw	r20, r24
    34b2:	4e 5f       	subi	r20, 0xFE	; 254
    34b4:	5f 4f       	sbci	r21, 0xFF	; 255
    34b6:	24 17       	cp	r18, r20
    34b8:	35 07       	cpc	r19, r21
    34ba:	48 f0       	brcs	.+18     	; 0x34ce <malloc+0x11e>
    34bc:	4e 0f       	add	r20, r30
    34be:	5f 1f       	adc	r21, r31
    34c0:	50 93 65 1b 	sts	0x1B65, r21
    34c4:	40 93 64 1b 	sts	0x1B64, r20
    34c8:	81 93       	st	Z+, r24
    34ca:	91 93       	st	Z+, r25
    34cc:	02 c0       	rjmp	.+4      	; 0x34d2 <malloc+0x122>
    34ce:	e0 e0       	ldi	r30, 0x00	; 0
    34d0:	f0 e0       	ldi	r31, 0x00	; 0
    34d2:	cf 01       	movw	r24, r30
    34d4:	df 91       	pop	r29
    34d6:	cf 91       	pop	r28
    34d8:	08 95       	ret

000034da <free>:
    34da:	0f 93       	push	r16
    34dc:	1f 93       	push	r17
    34de:	cf 93       	push	r28
    34e0:	df 93       	push	r29
    34e2:	00 97       	sbiw	r24, 0x00	; 0
    34e4:	09 f4       	brne	.+2      	; 0x34e8 <free+0xe>
    34e6:	8c c0       	rjmp	.+280    	; 0x3600 <free+0x126>
    34e8:	fc 01       	movw	r30, r24
    34ea:	32 97       	sbiw	r30, 0x02	; 2
    34ec:	13 82       	std	Z+3, r1	; 0x03
    34ee:	12 82       	std	Z+2, r1	; 0x02
    34f0:	00 91 66 1b 	lds	r16, 0x1B66
    34f4:	10 91 67 1b 	lds	r17, 0x1B67
    34f8:	01 15       	cp	r16, r1
    34fa:	11 05       	cpc	r17, r1
    34fc:	81 f4       	brne	.+32     	; 0x351e <free+0x44>
    34fe:	20 81       	ld	r18, Z
    3500:	31 81       	ldd	r19, Z+1	; 0x01
    3502:	82 0f       	add	r24, r18
    3504:	93 1f       	adc	r25, r19
    3506:	20 91 64 1b 	lds	r18, 0x1B64
    350a:	30 91 65 1b 	lds	r19, 0x1B65
    350e:	28 17       	cp	r18, r24
    3510:	39 07       	cpc	r19, r25
    3512:	79 f5       	brne	.+94     	; 0x3572 <free+0x98>
    3514:	f0 93 65 1b 	sts	0x1B65, r31
    3518:	e0 93 64 1b 	sts	0x1B64, r30
    351c:	71 c0       	rjmp	.+226    	; 0x3600 <free+0x126>
    351e:	d8 01       	movw	r26, r16
    3520:	40 e0       	ldi	r20, 0x00	; 0
    3522:	50 e0       	ldi	r21, 0x00	; 0
    3524:	ae 17       	cp	r26, r30
    3526:	bf 07       	cpc	r27, r31
    3528:	50 f4       	brcc	.+20     	; 0x353e <free+0x64>
    352a:	12 96       	adiw	r26, 0x02	; 2
    352c:	2d 91       	ld	r18, X+
    352e:	3c 91       	ld	r19, X
    3530:	13 97       	sbiw	r26, 0x03	; 3
    3532:	ad 01       	movw	r20, r26
    3534:	21 15       	cp	r18, r1
    3536:	31 05       	cpc	r19, r1
    3538:	09 f1       	breq	.+66     	; 0x357c <free+0xa2>
    353a:	d9 01       	movw	r26, r18
    353c:	f3 cf       	rjmp	.-26     	; 0x3524 <free+0x4a>
    353e:	9d 01       	movw	r18, r26
    3540:	da 01       	movw	r26, r20
    3542:	33 83       	std	Z+3, r19	; 0x03
    3544:	22 83       	std	Z+2, r18	; 0x02
    3546:	60 81       	ld	r22, Z
    3548:	71 81       	ldd	r23, Z+1	; 0x01
    354a:	86 0f       	add	r24, r22
    354c:	97 1f       	adc	r25, r23
    354e:	82 17       	cp	r24, r18
    3550:	93 07       	cpc	r25, r19
    3552:	69 f4       	brne	.+26     	; 0x356e <free+0x94>
    3554:	ec 01       	movw	r28, r24
    3556:	28 81       	ld	r18, Y
    3558:	39 81       	ldd	r19, Y+1	; 0x01
    355a:	26 0f       	add	r18, r22
    355c:	37 1f       	adc	r19, r23
    355e:	2e 5f       	subi	r18, 0xFE	; 254
    3560:	3f 4f       	sbci	r19, 0xFF	; 255
    3562:	31 83       	std	Z+1, r19	; 0x01
    3564:	20 83       	st	Z, r18
    3566:	8a 81       	ldd	r24, Y+2	; 0x02
    3568:	9b 81       	ldd	r25, Y+3	; 0x03
    356a:	93 83       	std	Z+3, r25	; 0x03
    356c:	82 83       	std	Z+2, r24	; 0x02
    356e:	45 2b       	or	r20, r21
    3570:	29 f4       	brne	.+10     	; 0x357c <free+0xa2>
    3572:	f0 93 67 1b 	sts	0x1B67, r31
    3576:	e0 93 66 1b 	sts	0x1B66, r30
    357a:	42 c0       	rjmp	.+132    	; 0x3600 <free+0x126>
    357c:	13 96       	adiw	r26, 0x03	; 3
    357e:	fc 93       	st	X, r31
    3580:	ee 93       	st	-X, r30
    3582:	12 97       	sbiw	r26, 0x02	; 2
    3584:	ed 01       	movw	r28, r26
    3586:	49 91       	ld	r20, Y+
    3588:	59 91       	ld	r21, Y+
    358a:	9e 01       	movw	r18, r28
    358c:	24 0f       	add	r18, r20
    358e:	35 1f       	adc	r19, r21
    3590:	e2 17       	cp	r30, r18
    3592:	f3 07       	cpc	r31, r19
    3594:	71 f4       	brne	.+28     	; 0x35b2 <free+0xd8>
    3596:	80 81       	ld	r24, Z
    3598:	91 81       	ldd	r25, Z+1	; 0x01
    359a:	84 0f       	add	r24, r20
    359c:	95 1f       	adc	r25, r21
    359e:	02 96       	adiw	r24, 0x02	; 2
    35a0:	11 96       	adiw	r26, 0x01	; 1
    35a2:	9c 93       	st	X, r25
    35a4:	8e 93       	st	-X, r24
    35a6:	82 81       	ldd	r24, Z+2	; 0x02
    35a8:	93 81       	ldd	r25, Z+3	; 0x03
    35aa:	13 96       	adiw	r26, 0x03	; 3
    35ac:	9c 93       	st	X, r25
    35ae:	8e 93       	st	-X, r24
    35b0:	12 97       	sbiw	r26, 0x02	; 2
    35b2:	e0 e0       	ldi	r30, 0x00	; 0
    35b4:	f0 e0       	ldi	r31, 0x00	; 0
    35b6:	d8 01       	movw	r26, r16
    35b8:	12 96       	adiw	r26, 0x02	; 2
    35ba:	8d 91       	ld	r24, X+
    35bc:	9c 91       	ld	r25, X
    35be:	13 97       	sbiw	r26, 0x03	; 3
    35c0:	00 97       	sbiw	r24, 0x00	; 0
    35c2:	19 f0       	breq	.+6      	; 0x35ca <free+0xf0>
    35c4:	f8 01       	movw	r30, r16
    35c6:	8c 01       	movw	r16, r24
    35c8:	f6 cf       	rjmp	.-20     	; 0x35b6 <free+0xdc>
    35ca:	8d 91       	ld	r24, X+
    35cc:	9c 91       	ld	r25, X
    35ce:	98 01       	movw	r18, r16
    35d0:	2e 5f       	subi	r18, 0xFE	; 254
    35d2:	3f 4f       	sbci	r19, 0xFF	; 255
    35d4:	82 0f       	add	r24, r18
    35d6:	93 1f       	adc	r25, r19
    35d8:	20 91 64 1b 	lds	r18, 0x1B64
    35dc:	30 91 65 1b 	lds	r19, 0x1B65
    35e0:	28 17       	cp	r18, r24
    35e2:	39 07       	cpc	r19, r25
    35e4:	69 f4       	brne	.+26     	; 0x3600 <free+0x126>
    35e6:	30 97       	sbiw	r30, 0x00	; 0
    35e8:	29 f4       	brne	.+10     	; 0x35f4 <free+0x11a>
    35ea:	10 92 67 1b 	sts	0x1B67, r1
    35ee:	10 92 66 1b 	sts	0x1B66, r1
    35f2:	02 c0       	rjmp	.+4      	; 0x35f8 <free+0x11e>
    35f4:	13 82       	std	Z+3, r1	; 0x03
    35f6:	12 82       	std	Z+2, r1	; 0x02
    35f8:	10 93 65 1b 	sts	0x1B65, r17
    35fc:	00 93 64 1b 	sts	0x1B64, r16
    3600:	df 91       	pop	r29
    3602:	cf 91       	pop	r28
    3604:	1f 91       	pop	r17
    3606:	0f 91       	pop	r16
    3608:	08 95       	ret

0000360a <strtok>:
    360a:	42 e6       	ldi	r20, 0x62	; 98
    360c:	5b e0       	ldi	r21, 0x0B	; 11
    360e:	5d c0       	rjmp	.+186    	; 0x36ca <strtok_r>

00003610 <memcmp>:
    3610:	fb 01       	movw	r30, r22
    3612:	dc 01       	movw	r26, r24
    3614:	04 c0       	rjmp	.+8      	; 0x361e <memcmp+0xe>
    3616:	8d 91       	ld	r24, X+
    3618:	01 90       	ld	r0, Z+
    361a:	80 19       	sub	r24, r0
    361c:	21 f4       	brne	.+8      	; 0x3626 <memcmp+0x16>
    361e:	41 50       	subi	r20, 0x01	; 1
    3620:	50 40       	sbci	r21, 0x00	; 0
    3622:	c8 f7       	brcc	.-14     	; 0x3616 <memcmp+0x6>
    3624:	88 1b       	sub	r24, r24
    3626:	99 0b       	sbc	r25, r25
    3628:	08 95       	ret

0000362a <memcpy>:
    362a:	fb 01       	movw	r30, r22
    362c:	dc 01       	movw	r26, r24
    362e:	02 c0       	rjmp	.+4      	; 0x3634 <memcpy+0xa>
    3630:	01 90       	ld	r0, Z+
    3632:	0d 92       	st	X+, r0
    3634:	41 50       	subi	r20, 0x01	; 1
    3636:	50 40       	sbci	r21, 0x00	; 0
    3638:	d8 f7       	brcc	.-10     	; 0x3630 <memcpy+0x6>
    363a:	08 95       	ret

0000363c <strcmp>:
    363c:	fb 01       	movw	r30, r22
    363e:	dc 01       	movw	r26, r24
    3640:	8d 91       	ld	r24, X+
    3642:	01 90       	ld	r0, Z+
    3644:	80 19       	sub	r24, r0
    3646:	01 10       	cpse	r0, r1
    3648:	d9 f3       	breq	.-10     	; 0x3640 <strcmp+0x4>
    364a:	99 0b       	sbc	r25, r25
    364c:	08 95       	ret

0000364e <strcpy>:
    364e:	fb 01       	movw	r30, r22
    3650:	dc 01       	movw	r26, r24
    3652:	01 90       	ld	r0, Z+
    3654:	0d 92       	st	X+, r0
    3656:	00 20       	and	r0, r0
    3658:	e1 f7       	brne	.-8      	; 0x3652 <strcpy+0x4>
    365a:	08 95       	ret

0000365c <strncmp>:
    365c:	fb 01       	movw	r30, r22
    365e:	dc 01       	movw	r26, r24
    3660:	41 50       	subi	r20, 0x01	; 1
    3662:	50 40       	sbci	r21, 0x00	; 0
    3664:	30 f0       	brcs	.+12     	; 0x3672 <strncmp+0x16>
    3666:	8d 91       	ld	r24, X+
    3668:	01 90       	ld	r0, Z+
    366a:	80 19       	sub	r24, r0
    366c:	19 f4       	brne	.+6      	; 0x3674 <strncmp+0x18>
    366e:	00 20       	and	r0, r0
    3670:	b9 f7       	brne	.-18     	; 0x3660 <strncmp+0x4>
    3672:	88 1b       	sub	r24, r24
    3674:	99 0b       	sbc	r25, r25
    3676:	08 95       	ret

00003678 <strncpy>:
    3678:	fb 01       	movw	r30, r22
    367a:	dc 01       	movw	r26, r24
    367c:	41 50       	subi	r20, 0x01	; 1
    367e:	50 40       	sbci	r21, 0x00	; 0
    3680:	48 f0       	brcs	.+18     	; 0x3694 <strncpy+0x1c>
    3682:	01 90       	ld	r0, Z+
    3684:	0d 92       	st	X+, r0
    3686:	00 20       	and	r0, r0
    3688:	c9 f7       	brne	.-14     	; 0x367c <strncpy+0x4>
    368a:	01 c0       	rjmp	.+2      	; 0x368e <strncpy+0x16>
    368c:	1d 92       	st	X+, r1
    368e:	41 50       	subi	r20, 0x01	; 1
    3690:	50 40       	sbci	r21, 0x00	; 0
    3692:	e0 f7       	brcc	.-8      	; 0x368c <strncpy+0x14>
    3694:	08 95       	ret

00003696 <strstr>:
    3696:	fb 01       	movw	r30, r22
    3698:	51 91       	ld	r21, Z+
    369a:	55 23       	and	r21, r21
    369c:	a9 f0       	breq	.+42     	; 0x36c8 <strstr+0x32>
    369e:	bf 01       	movw	r22, r30
    36a0:	dc 01       	movw	r26, r24
    36a2:	4d 91       	ld	r20, X+
    36a4:	45 17       	cp	r20, r21
    36a6:	41 11       	cpse	r20, r1
    36a8:	e1 f7       	brne	.-8      	; 0x36a2 <strstr+0xc>
    36aa:	59 f4       	brne	.+22     	; 0x36c2 <strstr+0x2c>
    36ac:	cd 01       	movw	r24, r26
    36ae:	01 90       	ld	r0, Z+
    36b0:	00 20       	and	r0, r0
    36b2:	49 f0       	breq	.+18     	; 0x36c6 <strstr+0x30>
    36b4:	4d 91       	ld	r20, X+
    36b6:	40 15       	cp	r20, r0
    36b8:	41 11       	cpse	r20, r1
    36ba:	c9 f3       	breq	.-14     	; 0x36ae <strstr+0x18>
    36bc:	fb 01       	movw	r30, r22
    36be:	41 11       	cpse	r20, r1
    36c0:	ef cf       	rjmp	.-34     	; 0x36a0 <strstr+0xa>
    36c2:	81 e0       	ldi	r24, 0x01	; 1
    36c4:	90 e0       	ldi	r25, 0x00	; 0
    36c6:	01 97       	sbiw	r24, 0x01	; 1
    36c8:	08 95       	ret

000036ca <strtok_r>:
    36ca:	fa 01       	movw	r30, r20
    36cc:	a1 91       	ld	r26, Z+
    36ce:	b0 81       	ld	r27, Z
    36d0:	00 97       	sbiw	r24, 0x00	; 0
    36d2:	19 f4       	brne	.+6      	; 0x36da <strtok_r+0x10>
    36d4:	10 97       	sbiw	r26, 0x00	; 0
    36d6:	e1 f0       	breq	.+56     	; 0x3710 <strtok_r+0x46>
    36d8:	cd 01       	movw	r24, r26
    36da:	dc 01       	movw	r26, r24
    36dc:	cd 01       	movw	r24, r26
    36de:	0d 90       	ld	r0, X+
    36e0:	00 20       	and	r0, r0
    36e2:	11 f4       	brne	.+4      	; 0x36e8 <strtok_r+0x1e>
    36e4:	c0 01       	movw	r24, r0
    36e6:	13 c0       	rjmp	.+38     	; 0x370e <strtok_r+0x44>
    36e8:	fb 01       	movw	r30, r22
    36ea:	21 91       	ld	r18, Z+
    36ec:	22 23       	and	r18, r18
    36ee:	19 f0       	breq	.+6      	; 0x36f6 <strtok_r+0x2c>
    36f0:	20 15       	cp	r18, r0
    36f2:	d9 f7       	brne	.-10     	; 0x36ea <strtok_r+0x20>
    36f4:	f3 cf       	rjmp	.-26     	; 0x36dc <strtok_r+0x12>
    36f6:	fb 01       	movw	r30, r22
    36f8:	21 91       	ld	r18, Z+
    36fa:	20 15       	cp	r18, r0
    36fc:	19 f4       	brne	.+6      	; 0x3704 <strtok_r+0x3a>
    36fe:	1e 92       	st	-X, r1
    3700:	11 96       	adiw	r26, 0x01	; 1
    3702:	06 c0       	rjmp	.+12     	; 0x3710 <strtok_r+0x46>
    3704:	22 23       	and	r18, r18
    3706:	c1 f7       	brne	.-16     	; 0x36f8 <strtok_r+0x2e>
    3708:	0d 90       	ld	r0, X+
    370a:	00 20       	and	r0, r0
    370c:	a1 f7       	brne	.-24     	; 0x36f6 <strtok_r+0x2c>
    370e:	d0 01       	movw	r26, r0
    3710:	fa 01       	movw	r30, r20
    3712:	a1 93       	st	Z+, r26
    3714:	b0 83       	st	Z, r27
    3716:	08 95       	ret

00003718 <printf>:
    3718:	cf 93       	push	r28
    371a:	df 93       	push	r29
    371c:	cd b7       	in	r28, 0x3d	; 61
    371e:	de b7       	in	r29, 0x3e	; 62
    3720:	ae 01       	movw	r20, r28
    3722:	4a 5f       	subi	r20, 0xFA	; 250
    3724:	5f 4f       	sbci	r21, 0xFF	; 255
    3726:	fa 01       	movw	r30, r20
    3728:	61 91       	ld	r22, Z+
    372a:	71 91       	ld	r23, Z+
    372c:	af 01       	movw	r20, r30
    372e:	80 91 6a 1b 	lds	r24, 0x1B6A
    3732:	90 91 6b 1b 	lds	r25, 0x1B6B
    3736:	62 d0       	rcall	.+196    	; 0x37fc <vfprintf>
    3738:	df 91       	pop	r29
    373a:	cf 91       	pop	r28
    373c:	08 95       	ret

0000373e <puts>:
    373e:	0f 93       	push	r16
    3740:	1f 93       	push	r17
    3742:	cf 93       	push	r28
    3744:	df 93       	push	r29
    3746:	e0 91 6a 1b 	lds	r30, 0x1B6A
    374a:	f0 91 6b 1b 	lds	r31, 0x1B6B
    374e:	23 81       	ldd	r18, Z+3	; 0x03
    3750:	21 ff       	sbrs	r18, 1
    3752:	1b c0       	rjmp	.+54     	; 0x378a <puts+0x4c>
    3754:	8c 01       	movw	r16, r24
    3756:	d0 e0       	ldi	r29, 0x00	; 0
    3758:	c0 e0       	ldi	r28, 0x00	; 0
    375a:	f8 01       	movw	r30, r16
    375c:	81 91       	ld	r24, Z+
    375e:	8f 01       	movw	r16, r30
    3760:	60 91 6a 1b 	lds	r22, 0x1B6A
    3764:	70 91 6b 1b 	lds	r23, 0x1B6B
    3768:	db 01       	movw	r26, r22
    376a:	18 96       	adiw	r26, 0x08	; 8
    376c:	ed 91       	ld	r30, X+
    376e:	fc 91       	ld	r31, X
    3770:	19 97       	sbiw	r26, 0x09	; 9
    3772:	88 23       	and	r24, r24
    3774:	31 f0       	breq	.+12     	; 0x3782 <puts+0x44>
    3776:	19 95       	eicall
    3778:	89 2b       	or	r24, r25
    377a:	79 f3       	breq	.-34     	; 0x375a <puts+0x1c>
    377c:	df ef       	ldi	r29, 0xFF	; 255
    377e:	cf ef       	ldi	r28, 0xFF	; 255
    3780:	ec cf       	rjmp	.-40     	; 0x375a <puts+0x1c>
    3782:	8a e0       	ldi	r24, 0x0A	; 10
    3784:	19 95       	eicall
    3786:	89 2b       	or	r24, r25
    3788:	19 f0       	breq	.+6      	; 0x3790 <puts+0x52>
    378a:	8f ef       	ldi	r24, 0xFF	; 255
    378c:	9f ef       	ldi	r25, 0xFF	; 255
    378e:	02 c0       	rjmp	.+4      	; 0x3794 <puts+0x56>
    3790:	8d 2f       	mov	r24, r29
    3792:	9c 2f       	mov	r25, r28
    3794:	df 91       	pop	r29
    3796:	cf 91       	pop	r28
    3798:	1f 91       	pop	r17
    379a:	0f 91       	pop	r16
    379c:	08 95       	ret

0000379e <sprintf>:
    379e:	0f 93       	push	r16
    37a0:	1f 93       	push	r17
    37a2:	cf 93       	push	r28
    37a4:	df 93       	push	r29
    37a6:	cd b7       	in	r28, 0x3d	; 61
    37a8:	de b7       	in	r29, 0x3e	; 62
    37aa:	2e 97       	sbiw	r28, 0x0e	; 14
    37ac:	0f b6       	in	r0, 0x3f	; 63
    37ae:	f8 94       	cli
    37b0:	de bf       	out	0x3e, r29	; 62
    37b2:	0f be       	out	0x3f, r0	; 63
    37b4:	cd bf       	out	0x3d, r28	; 61
    37b6:	0e 89       	ldd	r16, Y+22	; 0x16
    37b8:	1f 89       	ldd	r17, Y+23	; 0x17
    37ba:	86 e0       	ldi	r24, 0x06	; 6
    37bc:	8c 83       	std	Y+4, r24	; 0x04
    37be:	1a 83       	std	Y+2, r17	; 0x02
    37c0:	09 83       	std	Y+1, r16	; 0x01
    37c2:	8f ef       	ldi	r24, 0xFF	; 255
    37c4:	9f e7       	ldi	r25, 0x7F	; 127
    37c6:	9e 83       	std	Y+6, r25	; 0x06
    37c8:	8d 83       	std	Y+5, r24	; 0x05
    37ca:	ae 01       	movw	r20, r28
    37cc:	46 5e       	subi	r20, 0xE6	; 230
    37ce:	5f 4f       	sbci	r21, 0xFF	; 255
    37d0:	68 8d       	ldd	r22, Y+24	; 0x18
    37d2:	79 8d       	ldd	r23, Y+25	; 0x19
    37d4:	ce 01       	movw	r24, r28
    37d6:	01 96       	adiw	r24, 0x01	; 1
    37d8:	11 d0       	rcall	.+34     	; 0x37fc <vfprintf>
    37da:	2f 81       	ldd	r18, Y+7	; 0x07
    37dc:	38 85       	ldd	r19, Y+8	; 0x08
    37de:	f8 01       	movw	r30, r16
    37e0:	e2 0f       	add	r30, r18
    37e2:	f3 1f       	adc	r31, r19
    37e4:	10 82       	st	Z, r1
    37e6:	2e 96       	adiw	r28, 0x0e	; 14
    37e8:	0f b6       	in	r0, 0x3f	; 63
    37ea:	f8 94       	cli
    37ec:	de bf       	out	0x3e, r29	; 62
    37ee:	0f be       	out	0x3f, r0	; 63
    37f0:	cd bf       	out	0x3d, r28	; 61
    37f2:	df 91       	pop	r29
    37f4:	cf 91       	pop	r28
    37f6:	1f 91       	pop	r17
    37f8:	0f 91       	pop	r16
    37fa:	08 95       	ret

000037fc <vfprintf>:
    37fc:	2f 92       	push	r2
    37fe:	3f 92       	push	r3
    3800:	4f 92       	push	r4
    3802:	5f 92       	push	r5
    3804:	6f 92       	push	r6
    3806:	7f 92       	push	r7
    3808:	8f 92       	push	r8
    380a:	9f 92       	push	r9
    380c:	af 92       	push	r10
    380e:	bf 92       	push	r11
    3810:	cf 92       	push	r12
    3812:	df 92       	push	r13
    3814:	ef 92       	push	r14
    3816:	ff 92       	push	r15
    3818:	0f 93       	push	r16
    381a:	1f 93       	push	r17
    381c:	cf 93       	push	r28
    381e:	df 93       	push	r29
    3820:	cd b7       	in	r28, 0x3d	; 61
    3822:	de b7       	in	r29, 0x3e	; 62
    3824:	2c 97       	sbiw	r28, 0x0c	; 12
    3826:	0f b6       	in	r0, 0x3f	; 63
    3828:	f8 94       	cli
    382a:	de bf       	out	0x3e, r29	; 62
    382c:	0f be       	out	0x3f, r0	; 63
    382e:	cd bf       	out	0x3d, r28	; 61
    3830:	7c 01       	movw	r14, r24
    3832:	6b 01       	movw	r12, r22
    3834:	8a 01       	movw	r16, r20
    3836:	fc 01       	movw	r30, r24
    3838:	17 82       	std	Z+7, r1	; 0x07
    383a:	16 82       	std	Z+6, r1	; 0x06
    383c:	83 81       	ldd	r24, Z+3	; 0x03
    383e:	81 ff       	sbrs	r24, 1
    3840:	b0 c1       	rjmp	.+864    	; 0x3ba2 <vfprintf+0x3a6>
    3842:	ce 01       	movw	r24, r28
    3844:	01 96       	adiw	r24, 0x01	; 1
    3846:	4c 01       	movw	r8, r24
    3848:	f7 01       	movw	r30, r14
    384a:	93 81       	ldd	r25, Z+3	; 0x03
    384c:	f6 01       	movw	r30, r12
    384e:	93 fd       	sbrc	r25, 3
    3850:	85 91       	lpm	r24, Z+
    3852:	93 ff       	sbrs	r25, 3
    3854:	81 91       	ld	r24, Z+
    3856:	6f 01       	movw	r12, r30
    3858:	88 23       	and	r24, r24
    385a:	09 f4       	brne	.+2      	; 0x385e <vfprintf+0x62>
    385c:	9e c1       	rjmp	.+828    	; 0x3b9a <vfprintf+0x39e>
    385e:	85 32       	cpi	r24, 0x25	; 37
    3860:	39 f4       	brne	.+14     	; 0x3870 <vfprintf+0x74>
    3862:	93 fd       	sbrc	r25, 3
    3864:	85 91       	lpm	r24, Z+
    3866:	93 ff       	sbrs	r25, 3
    3868:	81 91       	ld	r24, Z+
    386a:	6f 01       	movw	r12, r30
    386c:	85 32       	cpi	r24, 0x25	; 37
    386e:	21 f4       	brne	.+8      	; 0x3878 <vfprintf+0x7c>
    3870:	b7 01       	movw	r22, r14
    3872:	90 e0       	ldi	r25, 0x00	; 0
    3874:	c7 d1       	rcall	.+910    	; 0x3c04 <fputc>
    3876:	e8 cf       	rjmp	.-48     	; 0x3848 <vfprintf+0x4c>
    3878:	51 2c       	mov	r5, r1
    387a:	31 2c       	mov	r3, r1
    387c:	20 e0       	ldi	r18, 0x00	; 0
    387e:	20 32       	cpi	r18, 0x20	; 32
    3880:	a0 f4       	brcc	.+40     	; 0x38aa <vfprintf+0xae>
    3882:	8b 32       	cpi	r24, 0x2B	; 43
    3884:	69 f0       	breq	.+26     	; 0x38a0 <vfprintf+0xa4>
    3886:	30 f4       	brcc	.+12     	; 0x3894 <vfprintf+0x98>
    3888:	80 32       	cpi	r24, 0x20	; 32
    388a:	59 f0       	breq	.+22     	; 0x38a2 <vfprintf+0xa6>
    388c:	83 32       	cpi	r24, 0x23	; 35
    388e:	69 f4       	brne	.+26     	; 0x38aa <vfprintf+0xae>
    3890:	20 61       	ori	r18, 0x10	; 16
    3892:	2c c0       	rjmp	.+88     	; 0x38ec <vfprintf+0xf0>
    3894:	8d 32       	cpi	r24, 0x2D	; 45
    3896:	39 f0       	breq	.+14     	; 0x38a6 <vfprintf+0xaa>
    3898:	80 33       	cpi	r24, 0x30	; 48
    389a:	39 f4       	brne	.+14     	; 0x38aa <vfprintf+0xae>
    389c:	21 60       	ori	r18, 0x01	; 1
    389e:	26 c0       	rjmp	.+76     	; 0x38ec <vfprintf+0xf0>
    38a0:	22 60       	ori	r18, 0x02	; 2
    38a2:	24 60       	ori	r18, 0x04	; 4
    38a4:	23 c0       	rjmp	.+70     	; 0x38ec <vfprintf+0xf0>
    38a6:	28 60       	ori	r18, 0x08	; 8
    38a8:	21 c0       	rjmp	.+66     	; 0x38ec <vfprintf+0xf0>
    38aa:	27 fd       	sbrc	r18, 7
    38ac:	27 c0       	rjmp	.+78     	; 0x38fc <vfprintf+0x100>
    38ae:	30 ed       	ldi	r19, 0xD0	; 208
    38b0:	38 0f       	add	r19, r24
    38b2:	3a 30       	cpi	r19, 0x0A	; 10
    38b4:	78 f4       	brcc	.+30     	; 0x38d4 <vfprintf+0xd8>
    38b6:	26 ff       	sbrs	r18, 6
    38b8:	06 c0       	rjmp	.+12     	; 0x38c6 <vfprintf+0xca>
    38ba:	fa e0       	ldi	r31, 0x0A	; 10
    38bc:	5f 9e       	mul	r5, r31
    38be:	30 0d       	add	r19, r0
    38c0:	11 24       	eor	r1, r1
    38c2:	53 2e       	mov	r5, r19
    38c4:	13 c0       	rjmp	.+38     	; 0x38ec <vfprintf+0xf0>
    38c6:	8a e0       	ldi	r24, 0x0A	; 10
    38c8:	38 9e       	mul	r3, r24
    38ca:	30 0d       	add	r19, r0
    38cc:	11 24       	eor	r1, r1
    38ce:	33 2e       	mov	r3, r19
    38d0:	20 62       	ori	r18, 0x20	; 32
    38d2:	0c c0       	rjmp	.+24     	; 0x38ec <vfprintf+0xf0>
    38d4:	8e 32       	cpi	r24, 0x2E	; 46
    38d6:	21 f4       	brne	.+8      	; 0x38e0 <vfprintf+0xe4>
    38d8:	26 fd       	sbrc	r18, 6
    38da:	5f c1       	rjmp	.+702    	; 0x3b9a <vfprintf+0x39e>
    38dc:	20 64       	ori	r18, 0x40	; 64
    38de:	06 c0       	rjmp	.+12     	; 0x38ec <vfprintf+0xf0>
    38e0:	8c 36       	cpi	r24, 0x6C	; 108
    38e2:	11 f4       	brne	.+4      	; 0x38e8 <vfprintf+0xec>
    38e4:	20 68       	ori	r18, 0x80	; 128
    38e6:	02 c0       	rjmp	.+4      	; 0x38ec <vfprintf+0xf0>
    38e8:	88 36       	cpi	r24, 0x68	; 104
    38ea:	41 f4       	brne	.+16     	; 0x38fc <vfprintf+0x100>
    38ec:	f6 01       	movw	r30, r12
    38ee:	93 fd       	sbrc	r25, 3
    38f0:	85 91       	lpm	r24, Z+
    38f2:	93 ff       	sbrs	r25, 3
    38f4:	81 91       	ld	r24, Z+
    38f6:	6f 01       	movw	r12, r30
    38f8:	81 11       	cpse	r24, r1
    38fa:	c1 cf       	rjmp	.-126    	; 0x387e <vfprintf+0x82>
    38fc:	98 2f       	mov	r25, r24
    38fe:	9f 7d       	andi	r25, 0xDF	; 223
    3900:	95 54       	subi	r25, 0x45	; 69
    3902:	93 30       	cpi	r25, 0x03	; 3
    3904:	28 f4       	brcc	.+10     	; 0x3910 <vfprintf+0x114>
    3906:	0c 5f       	subi	r16, 0xFC	; 252
    3908:	1f 4f       	sbci	r17, 0xFF	; 255
    390a:	ff e3       	ldi	r31, 0x3F	; 63
    390c:	f9 83       	std	Y+1, r31	; 0x01
    390e:	0d c0       	rjmp	.+26     	; 0x392a <vfprintf+0x12e>
    3910:	83 36       	cpi	r24, 0x63	; 99
    3912:	31 f0       	breq	.+12     	; 0x3920 <vfprintf+0x124>
    3914:	83 37       	cpi	r24, 0x73	; 115
    3916:	71 f0       	breq	.+28     	; 0x3934 <vfprintf+0x138>
    3918:	83 35       	cpi	r24, 0x53	; 83
    391a:	09 f0       	breq	.+2      	; 0x391e <vfprintf+0x122>
    391c:	57 c0       	rjmp	.+174    	; 0x39cc <vfprintf+0x1d0>
    391e:	21 c0       	rjmp	.+66     	; 0x3962 <vfprintf+0x166>
    3920:	f8 01       	movw	r30, r16
    3922:	80 81       	ld	r24, Z
    3924:	89 83       	std	Y+1, r24	; 0x01
    3926:	0e 5f       	subi	r16, 0xFE	; 254
    3928:	1f 4f       	sbci	r17, 0xFF	; 255
    392a:	44 24       	eor	r4, r4
    392c:	43 94       	inc	r4
    392e:	51 2c       	mov	r5, r1
    3930:	54 01       	movw	r10, r8
    3932:	14 c0       	rjmp	.+40     	; 0x395c <vfprintf+0x160>
    3934:	38 01       	movw	r6, r16
    3936:	f2 e0       	ldi	r31, 0x02	; 2
    3938:	6f 0e       	add	r6, r31
    393a:	71 1c       	adc	r7, r1
    393c:	f8 01       	movw	r30, r16
    393e:	a0 80       	ld	r10, Z
    3940:	b1 80       	ldd	r11, Z+1	; 0x01
    3942:	26 ff       	sbrs	r18, 6
    3944:	03 c0       	rjmp	.+6      	; 0x394c <vfprintf+0x150>
    3946:	65 2d       	mov	r22, r5
    3948:	70 e0       	ldi	r23, 0x00	; 0
    394a:	02 c0       	rjmp	.+4      	; 0x3950 <vfprintf+0x154>
    394c:	6f ef       	ldi	r22, 0xFF	; 255
    394e:	7f ef       	ldi	r23, 0xFF	; 255
    3950:	c5 01       	movw	r24, r10
    3952:	2c 87       	std	Y+12, r18	; 0x0c
    3954:	4c d1       	rcall	.+664    	; 0x3bee <strnlen>
    3956:	2c 01       	movw	r4, r24
    3958:	83 01       	movw	r16, r6
    395a:	2c 85       	ldd	r18, Y+12	; 0x0c
    395c:	2f 77       	andi	r18, 0x7F	; 127
    395e:	22 2e       	mov	r2, r18
    3960:	16 c0       	rjmp	.+44     	; 0x398e <vfprintf+0x192>
    3962:	38 01       	movw	r6, r16
    3964:	f2 e0       	ldi	r31, 0x02	; 2
    3966:	6f 0e       	add	r6, r31
    3968:	71 1c       	adc	r7, r1
    396a:	f8 01       	movw	r30, r16
    396c:	a0 80       	ld	r10, Z
    396e:	b1 80       	ldd	r11, Z+1	; 0x01
    3970:	26 ff       	sbrs	r18, 6
    3972:	03 c0       	rjmp	.+6      	; 0x397a <vfprintf+0x17e>
    3974:	65 2d       	mov	r22, r5
    3976:	70 e0       	ldi	r23, 0x00	; 0
    3978:	02 c0       	rjmp	.+4      	; 0x397e <vfprintf+0x182>
    397a:	6f ef       	ldi	r22, 0xFF	; 255
    397c:	7f ef       	ldi	r23, 0xFF	; 255
    397e:	c5 01       	movw	r24, r10
    3980:	2c 87       	std	Y+12, r18	; 0x0c
    3982:	2a d1       	rcall	.+596    	; 0x3bd8 <strnlen_P>
    3984:	2c 01       	movw	r4, r24
    3986:	2c 85       	ldd	r18, Y+12	; 0x0c
    3988:	20 68       	ori	r18, 0x80	; 128
    398a:	22 2e       	mov	r2, r18
    398c:	83 01       	movw	r16, r6
    398e:	23 fc       	sbrc	r2, 3
    3990:	19 c0       	rjmp	.+50     	; 0x39c4 <vfprintf+0x1c8>
    3992:	83 2d       	mov	r24, r3
    3994:	90 e0       	ldi	r25, 0x00	; 0
    3996:	48 16       	cp	r4, r24
    3998:	59 06       	cpc	r5, r25
    399a:	a0 f4       	brcc	.+40     	; 0x39c4 <vfprintf+0x1c8>
    399c:	b7 01       	movw	r22, r14
    399e:	80 e2       	ldi	r24, 0x20	; 32
    39a0:	90 e0       	ldi	r25, 0x00	; 0
    39a2:	30 d1       	rcall	.+608    	; 0x3c04 <fputc>
    39a4:	3a 94       	dec	r3
    39a6:	f5 cf       	rjmp	.-22     	; 0x3992 <vfprintf+0x196>
    39a8:	f5 01       	movw	r30, r10
    39aa:	27 fc       	sbrc	r2, 7
    39ac:	85 91       	lpm	r24, Z+
    39ae:	27 fe       	sbrs	r2, 7
    39b0:	81 91       	ld	r24, Z+
    39b2:	5f 01       	movw	r10, r30
    39b4:	b7 01       	movw	r22, r14
    39b6:	90 e0       	ldi	r25, 0x00	; 0
    39b8:	25 d1       	rcall	.+586    	; 0x3c04 <fputc>
    39ba:	31 10       	cpse	r3, r1
    39bc:	3a 94       	dec	r3
    39be:	f1 e0       	ldi	r31, 0x01	; 1
    39c0:	4f 1a       	sub	r4, r31
    39c2:	51 08       	sbc	r5, r1
    39c4:	41 14       	cp	r4, r1
    39c6:	51 04       	cpc	r5, r1
    39c8:	79 f7       	brne	.-34     	; 0x39a8 <vfprintf+0x1ac>
    39ca:	de c0       	rjmp	.+444    	; 0x3b88 <vfprintf+0x38c>
    39cc:	84 36       	cpi	r24, 0x64	; 100
    39ce:	11 f0       	breq	.+4      	; 0x39d4 <vfprintf+0x1d8>
    39d0:	89 36       	cpi	r24, 0x69	; 105
    39d2:	31 f5       	brne	.+76     	; 0x3a20 <vfprintf+0x224>
    39d4:	f8 01       	movw	r30, r16
    39d6:	27 ff       	sbrs	r18, 7
    39d8:	07 c0       	rjmp	.+14     	; 0x39e8 <vfprintf+0x1ec>
    39da:	60 81       	ld	r22, Z
    39dc:	71 81       	ldd	r23, Z+1	; 0x01
    39de:	82 81       	ldd	r24, Z+2	; 0x02
    39e0:	93 81       	ldd	r25, Z+3	; 0x03
    39e2:	0c 5f       	subi	r16, 0xFC	; 252
    39e4:	1f 4f       	sbci	r17, 0xFF	; 255
    39e6:	08 c0       	rjmp	.+16     	; 0x39f8 <vfprintf+0x1fc>
    39e8:	60 81       	ld	r22, Z
    39ea:	71 81       	ldd	r23, Z+1	; 0x01
    39ec:	07 2e       	mov	r0, r23
    39ee:	00 0c       	add	r0, r0
    39f0:	88 0b       	sbc	r24, r24
    39f2:	99 0b       	sbc	r25, r25
    39f4:	0e 5f       	subi	r16, 0xFE	; 254
    39f6:	1f 4f       	sbci	r17, 0xFF	; 255
    39f8:	2f 76       	andi	r18, 0x6F	; 111
    39fa:	72 2e       	mov	r7, r18
    39fc:	97 ff       	sbrs	r25, 7
    39fe:	09 c0       	rjmp	.+18     	; 0x3a12 <vfprintf+0x216>
    3a00:	90 95       	com	r25
    3a02:	80 95       	com	r24
    3a04:	70 95       	com	r23
    3a06:	61 95       	neg	r22
    3a08:	7f 4f       	sbci	r23, 0xFF	; 255
    3a0a:	8f 4f       	sbci	r24, 0xFF	; 255
    3a0c:	9f 4f       	sbci	r25, 0xFF	; 255
    3a0e:	20 68       	ori	r18, 0x80	; 128
    3a10:	72 2e       	mov	r7, r18
    3a12:	2a e0       	ldi	r18, 0x0A	; 10
    3a14:	30 e0       	ldi	r19, 0x00	; 0
    3a16:	a4 01       	movw	r20, r8
    3a18:	2d d1       	rcall	.+602    	; 0x3c74 <__ultoa_invert>
    3a1a:	a8 2e       	mov	r10, r24
    3a1c:	a8 18       	sub	r10, r8
    3a1e:	43 c0       	rjmp	.+134    	; 0x3aa6 <vfprintf+0x2aa>
    3a20:	85 37       	cpi	r24, 0x75	; 117
    3a22:	29 f4       	brne	.+10     	; 0x3a2e <vfprintf+0x232>
    3a24:	2f 7e       	andi	r18, 0xEF	; 239
    3a26:	b2 2e       	mov	r11, r18
    3a28:	2a e0       	ldi	r18, 0x0A	; 10
    3a2a:	30 e0       	ldi	r19, 0x00	; 0
    3a2c:	25 c0       	rjmp	.+74     	; 0x3a78 <vfprintf+0x27c>
    3a2e:	f2 2f       	mov	r31, r18
    3a30:	f9 7f       	andi	r31, 0xF9	; 249
    3a32:	bf 2e       	mov	r11, r31
    3a34:	8f 36       	cpi	r24, 0x6F	; 111
    3a36:	c1 f0       	breq	.+48     	; 0x3a68 <vfprintf+0x26c>
    3a38:	18 f4       	brcc	.+6      	; 0x3a40 <vfprintf+0x244>
    3a3a:	88 35       	cpi	r24, 0x58	; 88
    3a3c:	79 f0       	breq	.+30     	; 0x3a5c <vfprintf+0x260>
    3a3e:	ad c0       	rjmp	.+346    	; 0x3b9a <vfprintf+0x39e>
    3a40:	80 37       	cpi	r24, 0x70	; 112
    3a42:	19 f0       	breq	.+6      	; 0x3a4a <vfprintf+0x24e>
    3a44:	88 37       	cpi	r24, 0x78	; 120
    3a46:	21 f0       	breq	.+8      	; 0x3a50 <vfprintf+0x254>
    3a48:	a8 c0       	rjmp	.+336    	; 0x3b9a <vfprintf+0x39e>
    3a4a:	2f 2f       	mov	r18, r31
    3a4c:	20 61       	ori	r18, 0x10	; 16
    3a4e:	b2 2e       	mov	r11, r18
    3a50:	b4 fe       	sbrs	r11, 4
    3a52:	0d c0       	rjmp	.+26     	; 0x3a6e <vfprintf+0x272>
    3a54:	8b 2d       	mov	r24, r11
    3a56:	84 60       	ori	r24, 0x04	; 4
    3a58:	b8 2e       	mov	r11, r24
    3a5a:	09 c0       	rjmp	.+18     	; 0x3a6e <vfprintf+0x272>
    3a5c:	24 ff       	sbrs	r18, 4
    3a5e:	0a c0       	rjmp	.+20     	; 0x3a74 <vfprintf+0x278>
    3a60:	9f 2f       	mov	r25, r31
    3a62:	96 60       	ori	r25, 0x06	; 6
    3a64:	b9 2e       	mov	r11, r25
    3a66:	06 c0       	rjmp	.+12     	; 0x3a74 <vfprintf+0x278>
    3a68:	28 e0       	ldi	r18, 0x08	; 8
    3a6a:	30 e0       	ldi	r19, 0x00	; 0
    3a6c:	05 c0       	rjmp	.+10     	; 0x3a78 <vfprintf+0x27c>
    3a6e:	20 e1       	ldi	r18, 0x10	; 16
    3a70:	30 e0       	ldi	r19, 0x00	; 0
    3a72:	02 c0       	rjmp	.+4      	; 0x3a78 <vfprintf+0x27c>
    3a74:	20 e1       	ldi	r18, 0x10	; 16
    3a76:	32 e0       	ldi	r19, 0x02	; 2
    3a78:	f8 01       	movw	r30, r16
    3a7a:	b7 fe       	sbrs	r11, 7
    3a7c:	07 c0       	rjmp	.+14     	; 0x3a8c <vfprintf+0x290>
    3a7e:	60 81       	ld	r22, Z
    3a80:	71 81       	ldd	r23, Z+1	; 0x01
    3a82:	82 81       	ldd	r24, Z+2	; 0x02
    3a84:	93 81       	ldd	r25, Z+3	; 0x03
    3a86:	0c 5f       	subi	r16, 0xFC	; 252
    3a88:	1f 4f       	sbci	r17, 0xFF	; 255
    3a8a:	06 c0       	rjmp	.+12     	; 0x3a98 <vfprintf+0x29c>
    3a8c:	60 81       	ld	r22, Z
    3a8e:	71 81       	ldd	r23, Z+1	; 0x01
    3a90:	80 e0       	ldi	r24, 0x00	; 0
    3a92:	90 e0       	ldi	r25, 0x00	; 0
    3a94:	0e 5f       	subi	r16, 0xFE	; 254
    3a96:	1f 4f       	sbci	r17, 0xFF	; 255
    3a98:	a4 01       	movw	r20, r8
    3a9a:	ec d0       	rcall	.+472    	; 0x3c74 <__ultoa_invert>
    3a9c:	a8 2e       	mov	r10, r24
    3a9e:	a8 18       	sub	r10, r8
    3aa0:	fb 2d       	mov	r31, r11
    3aa2:	ff 77       	andi	r31, 0x7F	; 127
    3aa4:	7f 2e       	mov	r7, r31
    3aa6:	76 fe       	sbrs	r7, 6
    3aa8:	0b c0       	rjmp	.+22     	; 0x3ac0 <vfprintf+0x2c4>
    3aaa:	37 2d       	mov	r19, r7
    3aac:	3e 7f       	andi	r19, 0xFE	; 254
    3aae:	a5 14       	cp	r10, r5
    3ab0:	50 f4       	brcc	.+20     	; 0x3ac6 <vfprintf+0x2ca>
    3ab2:	74 fe       	sbrs	r7, 4
    3ab4:	0a c0       	rjmp	.+20     	; 0x3aca <vfprintf+0x2ce>
    3ab6:	72 fc       	sbrc	r7, 2
    3ab8:	08 c0       	rjmp	.+16     	; 0x3aca <vfprintf+0x2ce>
    3aba:	37 2d       	mov	r19, r7
    3abc:	3e 7e       	andi	r19, 0xEE	; 238
    3abe:	05 c0       	rjmp	.+10     	; 0x3aca <vfprintf+0x2ce>
    3ac0:	ba 2c       	mov	r11, r10
    3ac2:	37 2d       	mov	r19, r7
    3ac4:	03 c0       	rjmp	.+6      	; 0x3acc <vfprintf+0x2d0>
    3ac6:	ba 2c       	mov	r11, r10
    3ac8:	01 c0       	rjmp	.+2      	; 0x3acc <vfprintf+0x2d0>
    3aca:	b5 2c       	mov	r11, r5
    3acc:	34 ff       	sbrs	r19, 4
    3ace:	0d c0       	rjmp	.+26     	; 0x3aea <vfprintf+0x2ee>
    3ad0:	fe 01       	movw	r30, r28
    3ad2:	ea 0d       	add	r30, r10
    3ad4:	f1 1d       	adc	r31, r1
    3ad6:	80 81       	ld	r24, Z
    3ad8:	80 33       	cpi	r24, 0x30	; 48
    3ada:	11 f4       	brne	.+4      	; 0x3ae0 <vfprintf+0x2e4>
    3adc:	39 7e       	andi	r19, 0xE9	; 233
    3ade:	09 c0       	rjmp	.+18     	; 0x3af2 <vfprintf+0x2f6>
    3ae0:	32 ff       	sbrs	r19, 2
    3ae2:	06 c0       	rjmp	.+12     	; 0x3af0 <vfprintf+0x2f4>
    3ae4:	b3 94       	inc	r11
    3ae6:	b3 94       	inc	r11
    3ae8:	04 c0       	rjmp	.+8      	; 0x3af2 <vfprintf+0x2f6>
    3aea:	83 2f       	mov	r24, r19
    3aec:	86 78       	andi	r24, 0x86	; 134
    3aee:	09 f0       	breq	.+2      	; 0x3af2 <vfprintf+0x2f6>
    3af0:	b3 94       	inc	r11
    3af2:	33 fd       	sbrc	r19, 3
    3af4:	12 c0       	rjmp	.+36     	; 0x3b1a <vfprintf+0x31e>
    3af6:	30 ff       	sbrs	r19, 0
    3af8:	06 c0       	rjmp	.+12     	; 0x3b06 <vfprintf+0x30a>
    3afa:	5a 2c       	mov	r5, r10
    3afc:	b3 14       	cp	r11, r3
    3afe:	18 f4       	brcc	.+6      	; 0x3b06 <vfprintf+0x30a>
    3b00:	53 0c       	add	r5, r3
    3b02:	5b 18       	sub	r5, r11
    3b04:	b3 2c       	mov	r11, r3
    3b06:	b3 14       	cp	r11, r3
    3b08:	60 f4       	brcc	.+24     	; 0x3b22 <vfprintf+0x326>
    3b0a:	b7 01       	movw	r22, r14
    3b0c:	80 e2       	ldi	r24, 0x20	; 32
    3b0e:	90 e0       	ldi	r25, 0x00	; 0
    3b10:	3c 87       	std	Y+12, r19	; 0x0c
    3b12:	78 d0       	rcall	.+240    	; 0x3c04 <fputc>
    3b14:	b3 94       	inc	r11
    3b16:	3c 85       	ldd	r19, Y+12	; 0x0c
    3b18:	f6 cf       	rjmp	.-20     	; 0x3b06 <vfprintf+0x30a>
    3b1a:	b3 14       	cp	r11, r3
    3b1c:	10 f4       	brcc	.+4      	; 0x3b22 <vfprintf+0x326>
    3b1e:	3b 18       	sub	r3, r11
    3b20:	01 c0       	rjmp	.+2      	; 0x3b24 <vfprintf+0x328>
    3b22:	31 2c       	mov	r3, r1
    3b24:	34 ff       	sbrs	r19, 4
    3b26:	11 c0       	rjmp	.+34     	; 0x3b4a <vfprintf+0x34e>
    3b28:	b7 01       	movw	r22, r14
    3b2a:	80 e3       	ldi	r24, 0x30	; 48
    3b2c:	90 e0       	ldi	r25, 0x00	; 0
    3b2e:	3c 87       	std	Y+12, r19	; 0x0c
    3b30:	69 d0       	rcall	.+210    	; 0x3c04 <fputc>
    3b32:	3c 85       	ldd	r19, Y+12	; 0x0c
    3b34:	32 ff       	sbrs	r19, 2
    3b36:	16 c0       	rjmp	.+44     	; 0x3b64 <vfprintf+0x368>
    3b38:	31 fd       	sbrc	r19, 1
    3b3a:	03 c0       	rjmp	.+6      	; 0x3b42 <vfprintf+0x346>
    3b3c:	88 e7       	ldi	r24, 0x78	; 120
    3b3e:	90 e0       	ldi	r25, 0x00	; 0
    3b40:	02 c0       	rjmp	.+4      	; 0x3b46 <vfprintf+0x34a>
    3b42:	88 e5       	ldi	r24, 0x58	; 88
    3b44:	90 e0       	ldi	r25, 0x00	; 0
    3b46:	b7 01       	movw	r22, r14
    3b48:	0c c0       	rjmp	.+24     	; 0x3b62 <vfprintf+0x366>
    3b4a:	83 2f       	mov	r24, r19
    3b4c:	86 78       	andi	r24, 0x86	; 134
    3b4e:	51 f0       	breq	.+20     	; 0x3b64 <vfprintf+0x368>
    3b50:	31 ff       	sbrs	r19, 1
    3b52:	02 c0       	rjmp	.+4      	; 0x3b58 <vfprintf+0x35c>
    3b54:	8b e2       	ldi	r24, 0x2B	; 43
    3b56:	01 c0       	rjmp	.+2      	; 0x3b5a <vfprintf+0x35e>
    3b58:	80 e2       	ldi	r24, 0x20	; 32
    3b5a:	37 fd       	sbrc	r19, 7
    3b5c:	8d e2       	ldi	r24, 0x2D	; 45
    3b5e:	b7 01       	movw	r22, r14
    3b60:	90 e0       	ldi	r25, 0x00	; 0
    3b62:	50 d0       	rcall	.+160    	; 0x3c04 <fputc>
    3b64:	a5 14       	cp	r10, r5
    3b66:	30 f4       	brcc	.+12     	; 0x3b74 <vfprintf+0x378>
    3b68:	b7 01       	movw	r22, r14
    3b6a:	80 e3       	ldi	r24, 0x30	; 48
    3b6c:	90 e0       	ldi	r25, 0x00	; 0
    3b6e:	4a d0       	rcall	.+148    	; 0x3c04 <fputc>
    3b70:	5a 94       	dec	r5
    3b72:	f8 cf       	rjmp	.-16     	; 0x3b64 <vfprintf+0x368>
    3b74:	aa 94       	dec	r10
    3b76:	f4 01       	movw	r30, r8
    3b78:	ea 0d       	add	r30, r10
    3b7a:	f1 1d       	adc	r31, r1
    3b7c:	80 81       	ld	r24, Z
    3b7e:	b7 01       	movw	r22, r14
    3b80:	90 e0       	ldi	r25, 0x00	; 0
    3b82:	40 d0       	rcall	.+128    	; 0x3c04 <fputc>
    3b84:	a1 10       	cpse	r10, r1
    3b86:	f6 cf       	rjmp	.-20     	; 0x3b74 <vfprintf+0x378>
    3b88:	33 20       	and	r3, r3
    3b8a:	09 f4       	brne	.+2      	; 0x3b8e <vfprintf+0x392>
    3b8c:	5d ce       	rjmp	.-838    	; 0x3848 <vfprintf+0x4c>
    3b8e:	b7 01       	movw	r22, r14
    3b90:	80 e2       	ldi	r24, 0x20	; 32
    3b92:	90 e0       	ldi	r25, 0x00	; 0
    3b94:	37 d0       	rcall	.+110    	; 0x3c04 <fputc>
    3b96:	3a 94       	dec	r3
    3b98:	f7 cf       	rjmp	.-18     	; 0x3b88 <vfprintf+0x38c>
    3b9a:	f7 01       	movw	r30, r14
    3b9c:	86 81       	ldd	r24, Z+6	; 0x06
    3b9e:	97 81       	ldd	r25, Z+7	; 0x07
    3ba0:	02 c0       	rjmp	.+4      	; 0x3ba6 <vfprintf+0x3aa>
    3ba2:	8f ef       	ldi	r24, 0xFF	; 255
    3ba4:	9f ef       	ldi	r25, 0xFF	; 255
    3ba6:	2c 96       	adiw	r28, 0x0c	; 12
    3ba8:	0f b6       	in	r0, 0x3f	; 63
    3baa:	f8 94       	cli
    3bac:	de bf       	out	0x3e, r29	; 62
    3bae:	0f be       	out	0x3f, r0	; 63
    3bb0:	cd bf       	out	0x3d, r28	; 61
    3bb2:	df 91       	pop	r29
    3bb4:	cf 91       	pop	r28
    3bb6:	1f 91       	pop	r17
    3bb8:	0f 91       	pop	r16
    3bba:	ff 90       	pop	r15
    3bbc:	ef 90       	pop	r14
    3bbe:	df 90       	pop	r13
    3bc0:	cf 90       	pop	r12
    3bc2:	bf 90       	pop	r11
    3bc4:	af 90       	pop	r10
    3bc6:	9f 90       	pop	r9
    3bc8:	8f 90       	pop	r8
    3bca:	7f 90       	pop	r7
    3bcc:	6f 90       	pop	r6
    3bce:	5f 90       	pop	r5
    3bd0:	4f 90       	pop	r4
    3bd2:	3f 90       	pop	r3
    3bd4:	2f 90       	pop	r2
    3bd6:	08 95       	ret

00003bd8 <strnlen_P>:
    3bd8:	fc 01       	movw	r30, r24
    3bda:	05 90       	lpm	r0, Z+
    3bdc:	61 50       	subi	r22, 0x01	; 1
    3bde:	70 40       	sbci	r23, 0x00	; 0
    3be0:	01 10       	cpse	r0, r1
    3be2:	d8 f7       	brcc	.-10     	; 0x3bda <strnlen_P+0x2>
    3be4:	80 95       	com	r24
    3be6:	90 95       	com	r25
    3be8:	8e 0f       	add	r24, r30
    3bea:	9f 1f       	adc	r25, r31
    3bec:	08 95       	ret

00003bee <strnlen>:
    3bee:	fc 01       	movw	r30, r24
    3bf0:	61 50       	subi	r22, 0x01	; 1
    3bf2:	70 40       	sbci	r23, 0x00	; 0
    3bf4:	01 90       	ld	r0, Z+
    3bf6:	01 10       	cpse	r0, r1
    3bf8:	d8 f7       	brcc	.-10     	; 0x3bf0 <strnlen+0x2>
    3bfa:	80 95       	com	r24
    3bfc:	90 95       	com	r25
    3bfe:	8e 0f       	add	r24, r30
    3c00:	9f 1f       	adc	r25, r31
    3c02:	08 95       	ret

00003c04 <fputc>:
    3c04:	0f 93       	push	r16
    3c06:	1f 93       	push	r17
    3c08:	cf 93       	push	r28
    3c0a:	df 93       	push	r29
    3c0c:	fb 01       	movw	r30, r22
    3c0e:	23 81       	ldd	r18, Z+3	; 0x03
    3c10:	21 fd       	sbrc	r18, 1
    3c12:	03 c0       	rjmp	.+6      	; 0x3c1a <fputc+0x16>
    3c14:	8f ef       	ldi	r24, 0xFF	; 255
    3c16:	9f ef       	ldi	r25, 0xFF	; 255
    3c18:	28 c0       	rjmp	.+80     	; 0x3c6a <fputc+0x66>
    3c1a:	22 ff       	sbrs	r18, 2
    3c1c:	16 c0       	rjmp	.+44     	; 0x3c4a <fputc+0x46>
    3c1e:	46 81       	ldd	r20, Z+6	; 0x06
    3c20:	57 81       	ldd	r21, Z+7	; 0x07
    3c22:	24 81       	ldd	r18, Z+4	; 0x04
    3c24:	35 81       	ldd	r19, Z+5	; 0x05
    3c26:	42 17       	cp	r20, r18
    3c28:	53 07       	cpc	r21, r19
    3c2a:	44 f4       	brge	.+16     	; 0x3c3c <fputc+0x38>
    3c2c:	a0 81       	ld	r26, Z
    3c2e:	b1 81       	ldd	r27, Z+1	; 0x01
    3c30:	9d 01       	movw	r18, r26
    3c32:	2f 5f       	subi	r18, 0xFF	; 255
    3c34:	3f 4f       	sbci	r19, 0xFF	; 255
    3c36:	31 83       	std	Z+1, r19	; 0x01
    3c38:	20 83       	st	Z, r18
    3c3a:	8c 93       	st	X, r24
    3c3c:	26 81       	ldd	r18, Z+6	; 0x06
    3c3e:	37 81       	ldd	r19, Z+7	; 0x07
    3c40:	2f 5f       	subi	r18, 0xFF	; 255
    3c42:	3f 4f       	sbci	r19, 0xFF	; 255
    3c44:	37 83       	std	Z+7, r19	; 0x07
    3c46:	26 83       	std	Z+6, r18	; 0x06
    3c48:	10 c0       	rjmp	.+32     	; 0x3c6a <fputc+0x66>
    3c4a:	eb 01       	movw	r28, r22
    3c4c:	09 2f       	mov	r16, r25
    3c4e:	18 2f       	mov	r17, r24
    3c50:	00 84       	ldd	r0, Z+8	; 0x08
    3c52:	f1 85       	ldd	r31, Z+9	; 0x09
    3c54:	e0 2d       	mov	r30, r0
    3c56:	19 95       	eicall
    3c58:	89 2b       	or	r24, r25
    3c5a:	e1 f6       	brne	.-72     	; 0x3c14 <fputc+0x10>
    3c5c:	8e 81       	ldd	r24, Y+6	; 0x06
    3c5e:	9f 81       	ldd	r25, Y+7	; 0x07
    3c60:	01 96       	adiw	r24, 0x01	; 1
    3c62:	9f 83       	std	Y+7, r25	; 0x07
    3c64:	8e 83       	std	Y+6, r24	; 0x06
    3c66:	81 2f       	mov	r24, r17
    3c68:	90 2f       	mov	r25, r16
    3c6a:	df 91       	pop	r29
    3c6c:	cf 91       	pop	r28
    3c6e:	1f 91       	pop	r17
    3c70:	0f 91       	pop	r16
    3c72:	08 95       	ret

00003c74 <__ultoa_invert>:
    3c74:	fa 01       	movw	r30, r20
    3c76:	aa 27       	eor	r26, r26
    3c78:	28 30       	cpi	r18, 0x08	; 8
    3c7a:	51 f1       	breq	.+84     	; 0x3cd0 <__ultoa_invert+0x5c>
    3c7c:	20 31       	cpi	r18, 0x10	; 16
    3c7e:	81 f1       	breq	.+96     	; 0x3ce0 <__ultoa_invert+0x6c>
    3c80:	e8 94       	clt
    3c82:	6f 93       	push	r22
    3c84:	6e 7f       	andi	r22, 0xFE	; 254
    3c86:	6e 5f       	subi	r22, 0xFE	; 254
    3c88:	7f 4f       	sbci	r23, 0xFF	; 255
    3c8a:	8f 4f       	sbci	r24, 0xFF	; 255
    3c8c:	9f 4f       	sbci	r25, 0xFF	; 255
    3c8e:	af 4f       	sbci	r26, 0xFF	; 255
    3c90:	b1 e0       	ldi	r27, 0x01	; 1
    3c92:	3e d0       	rcall	.+124    	; 0x3d10 <__ultoa_invert+0x9c>
    3c94:	b4 e0       	ldi	r27, 0x04	; 4
    3c96:	3c d0       	rcall	.+120    	; 0x3d10 <__ultoa_invert+0x9c>
    3c98:	67 0f       	add	r22, r23
    3c9a:	78 1f       	adc	r23, r24
    3c9c:	89 1f       	adc	r24, r25
    3c9e:	9a 1f       	adc	r25, r26
    3ca0:	a1 1d       	adc	r26, r1
    3ca2:	68 0f       	add	r22, r24
    3ca4:	79 1f       	adc	r23, r25
    3ca6:	8a 1f       	adc	r24, r26
    3ca8:	91 1d       	adc	r25, r1
    3caa:	a1 1d       	adc	r26, r1
    3cac:	6a 0f       	add	r22, r26
    3cae:	71 1d       	adc	r23, r1
    3cb0:	81 1d       	adc	r24, r1
    3cb2:	91 1d       	adc	r25, r1
    3cb4:	a1 1d       	adc	r26, r1
    3cb6:	20 d0       	rcall	.+64     	; 0x3cf8 <__ultoa_invert+0x84>
    3cb8:	09 f4       	brne	.+2      	; 0x3cbc <__ultoa_invert+0x48>
    3cba:	68 94       	set
    3cbc:	3f 91       	pop	r19
    3cbe:	2a e0       	ldi	r18, 0x0A	; 10
    3cc0:	26 9f       	mul	r18, r22
    3cc2:	11 24       	eor	r1, r1
    3cc4:	30 19       	sub	r19, r0
    3cc6:	30 5d       	subi	r19, 0xD0	; 208
    3cc8:	31 93       	st	Z+, r19
    3cca:	de f6       	brtc	.-74     	; 0x3c82 <__ultoa_invert+0xe>
    3ccc:	cf 01       	movw	r24, r30
    3cce:	08 95       	ret
    3cd0:	46 2f       	mov	r20, r22
    3cd2:	47 70       	andi	r20, 0x07	; 7
    3cd4:	40 5d       	subi	r20, 0xD0	; 208
    3cd6:	41 93       	st	Z+, r20
    3cd8:	b3 e0       	ldi	r27, 0x03	; 3
    3cda:	0f d0       	rcall	.+30     	; 0x3cfa <__ultoa_invert+0x86>
    3cdc:	c9 f7       	brne	.-14     	; 0x3cd0 <__ultoa_invert+0x5c>
    3cde:	f6 cf       	rjmp	.-20     	; 0x3ccc <__ultoa_invert+0x58>
    3ce0:	46 2f       	mov	r20, r22
    3ce2:	4f 70       	andi	r20, 0x0F	; 15
    3ce4:	40 5d       	subi	r20, 0xD0	; 208
    3ce6:	4a 33       	cpi	r20, 0x3A	; 58
    3ce8:	18 f0       	brcs	.+6      	; 0x3cf0 <__ultoa_invert+0x7c>
    3cea:	49 5d       	subi	r20, 0xD9	; 217
    3cec:	31 fd       	sbrc	r19, 1
    3cee:	40 52       	subi	r20, 0x20	; 32
    3cf0:	41 93       	st	Z+, r20
    3cf2:	02 d0       	rcall	.+4      	; 0x3cf8 <__ultoa_invert+0x84>
    3cf4:	a9 f7       	brne	.-22     	; 0x3ce0 <__ultoa_invert+0x6c>
    3cf6:	ea cf       	rjmp	.-44     	; 0x3ccc <__ultoa_invert+0x58>
    3cf8:	b4 e0       	ldi	r27, 0x04	; 4
    3cfa:	a6 95       	lsr	r26
    3cfc:	97 95       	ror	r25
    3cfe:	87 95       	ror	r24
    3d00:	77 95       	ror	r23
    3d02:	67 95       	ror	r22
    3d04:	ba 95       	dec	r27
    3d06:	c9 f7       	brne	.-14     	; 0x3cfa <__ultoa_invert+0x86>
    3d08:	00 97       	sbiw	r24, 0x00	; 0
    3d0a:	61 05       	cpc	r22, r1
    3d0c:	71 05       	cpc	r23, r1
    3d0e:	08 95       	ret
    3d10:	9b 01       	movw	r18, r22
    3d12:	ac 01       	movw	r20, r24
    3d14:	0a 2e       	mov	r0, r26
    3d16:	06 94       	lsr	r0
    3d18:	57 95       	ror	r21
    3d1a:	47 95       	ror	r20
    3d1c:	37 95       	ror	r19
    3d1e:	27 95       	ror	r18
    3d20:	ba 95       	dec	r27
    3d22:	c9 f7       	brne	.-14     	; 0x3d16 <__ultoa_invert+0xa2>
    3d24:	62 0f       	add	r22, r18
    3d26:	73 1f       	adc	r23, r19
    3d28:	84 1f       	adc	r24, r20
    3d2a:	95 1f       	adc	r25, r21
    3d2c:	a0 1d       	adc	r26, r0
    3d2e:	08 95       	ret

00003d30 <_exit>:
    3d30:	f8 94       	cli

00003d32 <__stop_program>:
    3d32:	ff cf       	rjmp	.-2      	; 0x3d32 <__stop_program>
