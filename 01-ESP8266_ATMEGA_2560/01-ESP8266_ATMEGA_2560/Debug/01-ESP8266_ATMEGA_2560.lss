
01-ESP8266_ATMEGA_2560.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000890  00800200  000035e8  0000367c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000035e8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000d16  00800a90  00800a90  00003f0c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00003f0c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003f68  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000410  00000000  00000000  00003fa8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00006ff2  00000000  00000000  000043b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000aaf  00000000  00000000  0000b3aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000296e  00000000  00000000  0000be59  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001238  00000000  00000000  0000e7c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001411  00000000  00000000  0000fa00  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000607f  00000000  00000000  00010e11  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000460  00000000  00000000  00016e90  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	92 c0       	rjmp	.+292    	; 0x126 <__ctors_end>
       2:	00 00       	nop
       4:	b1 c0       	rjmp	.+354    	; 0x168 <__bad_interrupt>
       6:	00 00       	nop
       8:	af c0       	rjmp	.+350    	; 0x168 <__bad_interrupt>
       a:	00 00       	nop
       c:	ad c0       	rjmp	.+346    	; 0x168 <__bad_interrupt>
       e:	00 00       	nop
      10:	ab c0       	rjmp	.+342    	; 0x168 <__bad_interrupt>
      12:	00 00       	nop
      14:	a9 c0       	rjmp	.+338    	; 0x168 <__bad_interrupt>
      16:	00 00       	nop
      18:	a7 c0       	rjmp	.+334    	; 0x168 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	a5 c0       	rjmp	.+330    	; 0x168 <__bad_interrupt>
      1e:	00 00       	nop
      20:	a3 c0       	rjmp	.+326    	; 0x168 <__bad_interrupt>
      22:	00 00       	nop
      24:	a1 c0       	rjmp	.+322    	; 0x168 <__bad_interrupt>
      26:	00 00       	nop
      28:	9f c0       	rjmp	.+318    	; 0x168 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	9d c0       	rjmp	.+314    	; 0x168 <__bad_interrupt>
      2e:	00 00       	nop
      30:	9b c0       	rjmp	.+310    	; 0x168 <__bad_interrupt>
      32:	00 00       	nop
      34:	99 c0       	rjmp	.+306    	; 0x168 <__bad_interrupt>
      36:	00 00       	nop
      38:	97 c0       	rjmp	.+302    	; 0x168 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	95 c0       	rjmp	.+298    	; 0x168 <__bad_interrupt>
      3e:	00 00       	nop
      40:	93 c0       	rjmp	.+294    	; 0x168 <__bad_interrupt>
      42:	00 00       	nop
      44:	91 c0       	rjmp	.+290    	; 0x168 <__bad_interrupt>
      46:	00 00       	nop
      48:	8f c0       	rjmp	.+286    	; 0x168 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	8d c0       	rjmp	.+282    	; 0x168 <__bad_interrupt>
      4e:	00 00       	nop
      50:	8b c0       	rjmp	.+278    	; 0x168 <__bad_interrupt>
      52:	00 00       	nop
      54:	0c 94 1c 14 	jmp	0x2838	; 0x2838 <__vector_21>
      58:	87 c0       	rjmp	.+270    	; 0x168 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	85 c0       	rjmp	.+266    	; 0x168 <__bad_interrupt>
      5e:	00 00       	nop
      60:	83 c0       	rjmp	.+262    	; 0x168 <__bad_interrupt>
      62:	00 00       	nop
      64:	0c 94 4a 14 	jmp	0x2894	; 0x2894 <__vector_25>
      68:	7f c0       	rjmp	.+254    	; 0x168 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	7d c0       	rjmp	.+250    	; 0x168 <__bad_interrupt>
      6e:	00 00       	nop
      70:	7b c0       	rjmp	.+246    	; 0x168 <__bad_interrupt>
      72:	00 00       	nop
      74:	79 c0       	rjmp	.+242    	; 0x168 <__bad_interrupt>
      76:	00 00       	nop
      78:	77 c0       	rjmp	.+238    	; 0x168 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	75 c0       	rjmp	.+234    	; 0x168 <__bad_interrupt>
      7e:	00 00       	nop
      80:	73 c0       	rjmp	.+230    	; 0x168 <__bad_interrupt>
      82:	00 00       	nop
      84:	71 c0       	rjmp	.+226    	; 0x168 <__bad_interrupt>
      86:	00 00       	nop
      88:	6f c0       	rjmp	.+222    	; 0x168 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	6d c0       	rjmp	.+218    	; 0x168 <__bad_interrupt>
      8e:	00 00       	nop
      90:	0c 94 cd 13 	jmp	0x279a	; 0x279a <__vector_36>
      94:	69 c0       	rjmp	.+210    	; 0x168 <__bad_interrupt>
      96:	00 00       	nop
      98:	67 c0       	rjmp	.+206    	; 0x168 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	65 c0       	rjmp	.+202    	; 0x168 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	63 c0       	rjmp	.+198    	; 0x168 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	61 c0       	rjmp	.+194    	; 0x168 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	5f c0       	rjmp	.+190    	; 0x168 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	5d c0       	rjmp	.+186    	; 0x168 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	5b c0       	rjmp	.+182    	; 0x168 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	59 c0       	rjmp	.+178    	; 0x168 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	57 c0       	rjmp	.+174    	; 0x168 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	55 c0       	rjmp	.+170    	; 0x168 <__bad_interrupt>
      be:	00 00       	nop
      c0:	53 c0       	rjmp	.+166    	; 0x168 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	51 c0       	rjmp	.+162    	; 0x168 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	4f c0       	rjmp	.+158    	; 0x168 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	4d c0       	rjmp	.+154    	; 0x168 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	4b c0       	rjmp	.+150    	; 0x168 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	49 c0       	rjmp	.+146    	; 0x168 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	47 c0       	rjmp	.+142    	; 0x168 <__bad_interrupt>
      da:	00 00       	nop
      dc:	45 c0       	rjmp	.+138    	; 0x168 <__bad_interrupt>
      de:	00 00       	nop
      e0:	43 c0       	rjmp	.+134    	; 0x168 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	51 0d       	add	r21, r1
      e6:	b2 0d       	add	r27, r2
      e8:	02 0b       	sbc	r16, r18
      ea:	b2 0d       	add	r27, r2
      ec:	db 0c       	add	r13, r11
      ee:	ee 0c       	add	r14, r14
      f0:	51 0d       	add	r21, r1
      f2:	fe 0c       	add	r15, r14
      f4:	51 0d       	add	r21, r1
      f6:	1f 0d       	add	r17, r15
      f8:	51 0d       	add	r21, r1
      fa:	bb 0b       	sbc	r27, r27
      fc:	b2 0d       	add	r27, r2
      fe:	51 0d       	add	r21, r1
     100:	61 0d       	add	r22, r1
     102:	51 0d       	add	r21, r1
     104:	51 0d       	add	r21, r1
     106:	b2 0d       	add	r27, r2
     108:	3d 0b       	sbc	r19, r29
     10a:	51 0d       	add	r21, r1
     10c:	51 0d       	add	r21, r1
     10e:	a2 0c       	add	r10, r2
     110:	bf 0c       	add	r11, r15
     112:	74 0d       	add	r23, r4
     114:	95 0d       	add	r25, r5
     116:	51 0d       	add	r21, r1
     118:	b2 0d       	add	r27, r2
     11a:	b2 0d       	add	r27, r2
     11c:	b2 0d       	add	r27, r2
     11e:	b2 0d       	add	r27, r2
     120:	51 0d       	add	r21, r1
     122:	51 0d       	add	r21, r1
     124:	51 0d       	add	r21, r1

00000126 <__ctors_end>:
     126:	11 24       	eor	r1, r1
     128:	1f be       	out	0x3f, r1	; 63
     12a:	cf ef       	ldi	r28, 0xFF	; 255
     12c:	d1 e2       	ldi	r29, 0x21	; 33
     12e:	de bf       	out	0x3e, r29	; 62
     130:	cd bf       	out	0x3d, r28	; 61
     132:	00 e0       	ldi	r16, 0x00	; 0
     134:	0c bf       	out	0x3c, r16	; 60

00000136 <__do_copy_data>:
     136:	1a e0       	ldi	r17, 0x0A	; 10
     138:	a0 e0       	ldi	r26, 0x00	; 0
     13a:	b2 e0       	ldi	r27, 0x02	; 2
     13c:	e8 ee       	ldi	r30, 0xE8	; 232
     13e:	f5 e3       	ldi	r31, 0x35	; 53
     140:	00 e0       	ldi	r16, 0x00	; 0
     142:	0b bf       	out	0x3b, r16	; 59
     144:	02 c0       	rjmp	.+4      	; 0x14a <__do_copy_data+0x14>
     146:	07 90       	elpm	r0, Z+
     148:	0d 92       	st	X+, r0
     14a:	a0 39       	cpi	r26, 0x90	; 144
     14c:	b1 07       	cpc	r27, r17
     14e:	d9 f7       	brne	.-10     	; 0x146 <__do_copy_data+0x10>

00000150 <__do_clear_bss>:
     150:	27 e1       	ldi	r18, 0x17	; 23
     152:	a0 e9       	ldi	r26, 0x90	; 144
     154:	ba e0       	ldi	r27, 0x0A	; 10
     156:	01 c0       	rjmp	.+2      	; 0x15a <.do_clear_bss_start>

00000158 <.do_clear_bss_loop>:
     158:	1d 92       	st	X+, r1

0000015a <.do_clear_bss_start>:
     15a:	a6 3a       	cpi	r26, 0xA6	; 166
     15c:	b2 07       	cpc	r27, r18
     15e:	e1 f7       	brne	.-8      	; 0x158 <.do_clear_bss_loop>
     160:	0e 94 92 14 	call	0x2924	; 0x2924 <main>
     164:	0c 94 f2 1a 	jmp	0x35e4	; 0x35e4 <_exit>

00000168 <__bad_interrupt>:
     168:	4b cf       	rjmp	.-362    	; 0x0 <__vectors>

0000016a <BUFFER_Init>:
	}
	
	/* Clear flags */
	Buffer->Flags = 0;
	Buffer->Size = 0;
}
     16a:	cf 93       	push	r28
     16c:	df 93       	push	r29
     16e:	ec 01       	movw	r28, r24
     170:	82 e1       	ldi	r24, 0x12	; 18
     172:	fe 01       	movw	r30, r28
     174:	11 92       	st	Z+, r1
     176:	8a 95       	dec	r24
     178:	e9 f7       	brne	.-6      	; 0x174 <BUFFER_Init+0xa>
     17a:	cb 01       	movw	r24, r22
     17c:	a0 e0       	ldi	r26, 0x00	; 0
     17e:	b0 e0       	ldi	r27, 0x00	; 0
     180:	88 83       	st	Y, r24
     182:	99 83       	std	Y+1, r25	; 0x01
     184:	aa 83       	std	Y+2, r26	; 0x02
     186:	bb 83       	std	Y+3, r27	; 0x03
     188:	5d 87       	std	Y+13, r21	; 0x0d
     18a:	4c 87       	std	Y+12, r20	; 0x0c
     18c:	8a e0       	ldi	r24, 0x0A	; 10
     18e:	8f 87       	std	Y+15, r24	; 0x0f
     190:	45 2b       	or	r20, r21
     192:	81 f4       	brne	.+32     	; 0x1b4 <BUFFER_Init+0x4a>
     194:	cb 01       	movw	r24, r22
     196:	0e 94 48 16 	call	0x2c90	; 0x2c90 <malloc>
     19a:	9d 87       	std	Y+13, r25	; 0x0d
     19c:	8c 87       	std	Y+12, r24	; 0x0c
     19e:	89 2b       	or	r24, r25
     1a0:	31 f4       	brne	.+12     	; 0x1ae <BUFFER_Init+0x44>
     1a2:	18 82       	st	Y, r1
     1a4:	19 82       	std	Y+1, r1	; 0x01
     1a6:	1a 82       	std	Y+2, r1	; 0x02
     1a8:	1b 82       	std	Y+3, r1	; 0x03
     1aa:	81 e0       	ldi	r24, 0x01	; 1
     1ac:	07 c0       	rjmp	.+14     	; 0x1bc <BUFFER_Init+0x52>
     1ae:	8e 85       	ldd	r24, Y+14	; 0x0e
     1b0:	82 60       	ori	r24, 0x02	; 2
     1b2:	8e 87       	std	Y+14, r24	; 0x0e
     1b4:	8e 85       	ldd	r24, Y+14	; 0x0e
     1b6:	81 60       	ori	r24, 0x01	; 1
     1b8:	8e 87       	std	Y+14, r24	; 0x0e
     1ba:	80 e0       	ldi	r24, 0x00	; 0
     1bc:	df 91       	pop	r29
     1be:	cf 91       	pop	r28
     1c0:	08 95       	ret

000001c2 <BUFFER_GetFree>:
	/* Return number of elements stored in memory */
	return i;
#endif
}

uint16_t BUFFER_GetFree(BUFFER_t* Buffer) {
     1c2:	cf 92       	push	r12
     1c4:	df 92       	push	r13
     1c6:	ef 92       	push	r14
     1c8:	ff 92       	push	r15
     1ca:	0f 93       	push	r16
     1cc:	1f 93       	push	r17
     1ce:	fc 01       	movw	r30, r24
	uint32_t size = 0, in, out;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
     1d0:	89 2b       	or	r24, r25
     1d2:	b9 f1       	breq	.+110    	; 0x242 <BUFFER_GetFree+0x80>
		return 0;
	}
	
	/* Save values */
	in = Buffer->In;
     1d4:	04 81       	ldd	r16, Z+4	; 0x04
     1d6:	15 81       	ldd	r17, Z+5	; 0x05
     1d8:	26 81       	ldd	r18, Z+6	; 0x06
     1da:	37 81       	ldd	r19, Z+7	; 0x07
	out = Buffer->Out;
     1dc:	c0 84       	ldd	r12, Z+8	; 0x08
     1de:	d1 84       	ldd	r13, Z+9	; 0x09
     1e0:	e2 84       	ldd	r14, Z+10	; 0x0a
     1e2:	f3 84       	ldd	r15, Z+11	; 0x0b
	
	/* Check if the same */
	if (in == out) {
     1e4:	0c 15       	cp	r16, r12
     1e6:	1d 05       	cpc	r17, r13
     1e8:	2e 05       	cpc	r18, r14
     1ea:	3f 05       	cpc	r19, r15
     1ec:	29 f4       	brne	.+10     	; 0x1f8 <BUFFER_GetFree+0x36>
		size = Buffer->Size;
     1ee:	40 81       	ld	r20, Z
     1f0:	51 81       	ldd	r21, Z+1	; 0x01
     1f2:	62 81       	ldd	r22, Z+2	; 0x02
     1f4:	73 81       	ldd	r23, Z+3	; 0x03
     1f6:	22 c0       	rjmp	.+68     	; 0x23c <BUFFER_GetFree+0x7a>
	}

	/* Check normal mode */
	if (out > in) {
     1f8:	0c 15       	cp	r16, r12
     1fa:	1d 05       	cpc	r17, r13
     1fc:	2e 05       	cpc	r18, r14
     1fe:	3f 05       	cpc	r19, r15
     200:	38 f4       	brcc	.+14     	; 0x210 <BUFFER_GetFree+0x4e>
		size = out - in;
     202:	b7 01       	movw	r22, r14
     204:	a6 01       	movw	r20, r12
     206:	40 1b       	sub	r20, r16
     208:	51 0b       	sbc	r21, r17
     20a:	62 0b       	sbc	r22, r18
     20c:	73 0b       	sbc	r23, r19
     20e:	03 c0       	rjmp	.+6      	; 0x216 <BUFFER_GetFree+0x54>
	return i;
#endif
}

uint16_t BUFFER_GetFree(BUFFER_t* Buffer) {
	uint32_t size = 0, in, out;
     210:	40 e0       	ldi	r20, 0x00	; 0
     212:	50 e0       	ldi	r21, 0x00	; 0
     214:	ba 01       	movw	r22, r20
	if (out > in) {
		size = out - in;
	}
	
	/* Check if overflow mode */
	if (in > out) {
     216:	c0 16       	cp	r12, r16
     218:	d1 06       	cpc	r13, r17
     21a:	e2 06       	cpc	r14, r18
     21c:	f3 06       	cpc	r15, r19
     21e:	70 f4       	brcc	.+28     	; 0x23c <BUFFER_GetFree+0x7a>
     220:	80 81       	ld	r24, Z
     222:	91 81       	ldd	r25, Z+1	; 0x01
     224:	a2 81       	ldd	r26, Z+2	; 0x02
     226:	b3 81       	ldd	r27, Z+3	; 0x03
     228:	b7 01       	movw	r22, r14
     22a:	a6 01       	movw	r20, r12
     22c:	48 0f       	add	r20, r24
     22e:	59 1f       	adc	r21, r25
     230:	6a 1f       	adc	r22, r26
     232:	7b 1f       	adc	r23, r27
		size = Buffer->Size - (in - out);
     234:	40 1b       	sub	r20, r16
     236:	51 0b       	sbc	r21, r17
     238:	62 0b       	sbc	r22, r18
     23a:	73 0b       	sbc	r23, r19
	}
	
	/* Return free memory */
	return size - 1;
     23c:	ca 01       	movw	r24, r20
     23e:	01 97       	sbiw	r24, 0x01	; 1
     240:	02 c0       	rjmp	.+4      	; 0x246 <BUFFER_GetFree+0x84>
uint16_t BUFFER_GetFree(BUFFER_t* Buffer) {
	uint32_t size = 0, in, out;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
		return 0;
     242:	80 e0       	ldi	r24, 0x00	; 0
     244:	90 e0       	ldi	r25, 0x00	; 0
		size = Buffer->Size - (in - out);
	}
	
	/* Return free memory */
	return size - 1;
}
     246:	1f 91       	pop	r17
     248:	0f 91       	pop	r16
     24a:	ff 90       	pop	r15
     24c:	ef 90       	pop	r14
     24e:	df 90       	pop	r13
     250:	cf 90       	pop	r12
     252:	08 95       	ret

00000254 <BUFFER_Write>:
	/* Clear flags */
	Buffer->Flags = 0;
	Buffer->Size = 0;
}

uint16_t BUFFER_Write(BUFFER_t* Buffer, uint8_t* Data, uint16_t count) {
     254:	4f 92       	push	r4
     256:	5f 92       	push	r5
     258:	6f 92       	push	r6
     25a:	7f 92       	push	r7
     25c:	8f 92       	push	r8
     25e:	9f 92       	push	r9
     260:	af 92       	push	r10
     262:	bf 92       	push	r11
     264:	cf 92       	push	r12
     266:	df 92       	push	r13
     268:	ef 92       	push	r14
     26a:	ff 92       	push	r15
     26c:	0f 93       	push	r16
     26e:	1f 93       	push	r17
     270:	cf 93       	push	r28
     272:	df 93       	push	r29
     274:	ec 01       	movw	r28, r24
     276:	7b 01       	movw	r14, r22
     278:	8a 01       	movw	r16, r20
#if BUFFER_FAST
	uint32_t tocopy;
#endif

	/* Check buffer structure */
	if (Buffer == NULL || count == 0) {
     27a:	89 2b       	or	r24, r25
     27c:	09 f4       	brne	.+2      	; 0x280 <BUFFER_Write+0x2c>
     27e:	75 c0       	rjmp	.+234    	; 0x36a <BUFFER_Write+0x116>
     280:	45 2b       	or	r20, r21
     282:	09 f4       	brne	.+2      	; 0x286 <BUFFER_Write+0x32>
     284:	75 c0       	rjmp	.+234    	; 0x370 <BUFFER_Write+0x11c>
		return 0;
	}

	/* Check input pointer */
	if (Buffer->In >= Buffer->Size) {
     286:	88 80       	ld	r8, Y
     288:	99 80       	ldd	r9, Y+1	; 0x01
     28a:	aa 80       	ldd	r10, Y+2	; 0x02
     28c:	bb 80       	ldd	r11, Y+3	; 0x03
     28e:	8c 81       	ldd	r24, Y+4	; 0x04
     290:	9d 81       	ldd	r25, Y+5	; 0x05
     292:	ae 81       	ldd	r26, Y+6	; 0x06
     294:	bf 81       	ldd	r27, Y+7	; 0x07
     296:	88 15       	cp	r24, r8
     298:	99 05       	cpc	r25, r9
     29a:	aa 05       	cpc	r26, r10
     29c:	bb 05       	cpc	r27, r11
     29e:	20 f0       	brcs	.+8      	; 0x2a8 <BUFFER_Write+0x54>
		Buffer->In = 0;
     2a0:	1c 82       	std	Y+4, r1	; 0x04
     2a2:	1d 82       	std	Y+5, r1	; 0x05
     2a4:	1e 82       	std	Y+6, r1	; 0x06
     2a6:	1f 82       	std	Y+7, r1	; 0x07
	}

	/* Get free memory */
	free = BUFFER_GetFree(Buffer);
     2a8:	ce 01       	movw	r24, r28
     2aa:	8b df       	rcall	.-234    	; 0x1c2 <BUFFER_GetFree>
     2ac:	ac 01       	movw	r20, r24
     2ae:	60 e0       	ldi	r22, 0x00	; 0
     2b0:	70 e0       	ldi	r23, 0x00	; 0

	/* Check available memory */
	if (free < count) {
     2b2:	28 01       	movw	r4, r16
     2b4:	61 2c       	mov	r6, r1
     2b6:	71 2c       	mov	r7, r1
     2b8:	44 15       	cp	r20, r4
     2ba:	55 05       	cpc	r21, r5
     2bc:	66 05       	cpc	r22, r6
     2be:	77 05       	cpc	r23, r7
     2c0:	30 f4       	brcc	.+12     	; 0x2ce <BUFFER_Write+0x7a>
		/* If no memory, stop execution */
		if (free == 0) {
     2c2:	45 2b       	or	r20, r21
     2c4:	46 2b       	or	r20, r22
     2c6:	47 2b       	or	r20, r23
     2c8:	09 f4       	brne	.+2      	; 0x2cc <BUFFER_Write+0x78>
     2ca:	55 c0       	rjmp	.+170    	; 0x376 <BUFFER_Write+0x122>
			return 0;
		}

		/* Set values for write */
		count = free;
     2cc:	8c 01       	movw	r16, r24

	/* We have calculated memory for write */

#if BUFFER_FAST
	/* Calculate number of elements we can put at the end of buffer */
	tocopy = Buffer->Size - Buffer->In;
     2ce:	8c 81       	ldd	r24, Y+4	; 0x04
     2d0:	9d 81       	ldd	r25, Y+5	; 0x05
     2d2:	ae 81       	ldd	r26, Y+6	; 0x06
     2d4:	bf 81       	ldd	r27, Y+7	; 0x07
     2d6:	b5 01       	movw	r22, r10
     2d8:	a4 01       	movw	r20, r8
     2da:	48 1b       	sub	r20, r24
     2dc:	59 0b       	sbc	r21, r25
     2de:	6a 0b       	sbc	r22, r26
     2e0:	7b 0b       	sbc	r23, r27

	/* Check for copy count */
	if (tocopy > count) {
     2e2:	48 01       	movw	r8, r16
     2e4:	a1 2c       	mov	r10, r1
     2e6:	b1 2c       	mov	r11, r1
     2e8:	48 15       	cp	r20, r8
     2ea:	59 05       	cpc	r21, r9
     2ec:	6a 05       	cpc	r22, r10
     2ee:	7b 05       	cpc	r23, r11
     2f0:	10 f4       	brcc	.+4      	; 0x2f6 <BUFFER_Write+0xa2>
     2f2:	4a 01       	movw	r8, r20
     2f4:	5b 01       	movw	r10, r22
		tocopy = count;
	}

	/* Copy content to buffer */
	memcpy(&Buffer->Buffer[Buffer->In], Data, tocopy);
     2f6:	2c 85       	ldd	r18, Y+12	; 0x0c
     2f8:	3d 85       	ldd	r19, Y+13	; 0x0d
     2fa:	82 0f       	add	r24, r18
     2fc:	93 1f       	adc	r25, r19
     2fe:	a4 01       	movw	r20, r8
     300:	b7 01       	movw	r22, r14
     302:	0e 94 85 17 	call	0x2f0a	; 0x2f0a <memcpy>

	/* Increase number of bytes we copied already */
	i += tocopy;
	Buffer->In += tocopy;
     306:	8c 81       	ldd	r24, Y+4	; 0x04
     308:	9d 81       	ldd	r25, Y+5	; 0x05
     30a:	ae 81       	ldd	r26, Y+6	; 0x06
     30c:	bf 81       	ldd	r27, Y+7	; 0x07
     30e:	88 0d       	add	r24, r8
     310:	99 1d       	adc	r25, r9
     312:	aa 1d       	adc	r26, r10
     314:	bb 1d       	adc	r27, r11
     316:	8c 83       	std	Y+4, r24	; 0x04
     318:	9d 83       	std	Y+5, r25	; 0x05
     31a:	ae 83       	std	Y+6, r26	; 0x06
     31c:	bf 83       	std	Y+7, r27	; 0x07
	count -= tocopy;
     31e:	68 01       	movw	r12, r16
     320:	c8 18       	sub	r12, r8
     322:	d9 08       	sbc	r13, r9

	/* Check if anything to write */
	if (count > 0) {
     324:	71 f0       	breq	.+28     	; 0x342 <BUFFER_Write+0xee>
		/* Copy content */
		memcpy(Buffer->Buffer, &Data[i], count);
     326:	b7 01       	movw	r22, r14
     328:	68 0d       	add	r22, r8
     32a:	79 1d       	adc	r23, r9
     32c:	a6 01       	movw	r20, r12
     32e:	8c 85       	ldd	r24, Y+12	; 0x0c
     330:	9d 85       	ldd	r25, Y+13	; 0x0d
     332:	0e 94 85 17 	call	0x2f0a	; 0x2f0a <memcpy>

		/* Set input pointer */
		Buffer->In = count;
     336:	e1 2c       	mov	r14, r1
     338:	f1 2c       	mov	r15, r1
     33a:	cc 82       	std	Y+4, r12	; 0x04
     33c:	dd 82       	std	Y+5, r13	; 0x05
     33e:	ee 82       	std	Y+6, r14	; 0x06
     340:	ff 82       	std	Y+7, r15	; 0x07
	}

	/* Check input overflow */
	if (Buffer->In >= Buffer->Size) {
     342:	4c 81       	ldd	r20, Y+4	; 0x04
     344:	5d 81       	ldd	r21, Y+5	; 0x05
     346:	6e 81       	ldd	r22, Y+6	; 0x06
     348:	7f 81       	ldd	r23, Y+7	; 0x07
     34a:	88 81       	ld	r24, Y
     34c:	99 81       	ldd	r25, Y+1	; 0x01
     34e:	aa 81       	ldd	r26, Y+2	; 0x02
     350:	bb 81       	ldd	r27, Y+3	; 0x03
     352:	48 17       	cp	r20, r24
     354:	59 07       	cpc	r21, r25
     356:	6a 07       	cpc	r22, r26
     358:	7b 07       	cpc	r23, r27
     35a:	20 f0       	brcs	.+8      	; 0x364 <BUFFER_Write+0x110>
		Buffer->In = 0;
     35c:	1c 82       	std	Y+4, r1	; 0x04
     35e:	1d 82       	std	Y+5, r1	; 0x05
     360:	1e 82       	std	Y+6, r1	; 0x06
     362:	1f 82       	std	Y+7, r1	; 0x07
	}

	/* Return number of elements stored in memory */
	return (i + count);
     364:	80 2f       	mov	r24, r16
     366:	91 2f       	mov	r25, r17
     368:	08 c0       	rjmp	.+16     	; 0x37a <BUFFER_Write+0x126>
	uint32_t tocopy;
#endif

	/* Check buffer structure */
	if (Buffer == NULL || count == 0) {
		return 0;
     36a:	80 e0       	ldi	r24, 0x00	; 0
     36c:	90 e0       	ldi	r25, 0x00	; 0
     36e:	05 c0       	rjmp	.+10     	; 0x37a <BUFFER_Write+0x126>
     370:	80 e0       	ldi	r24, 0x00	; 0
     372:	90 e0       	ldi	r25, 0x00	; 0
     374:	02 c0       	rjmp	.+4      	; 0x37a <BUFFER_Write+0x126>

	/* Check available memory */
	if (free < count) {
		/* If no memory, stop execution */
		if (free == 0) {
			return 0;
     376:	80 e0       	ldi	r24, 0x00	; 0
     378:	90 e0       	ldi	r25, 0x00	; 0
	}

	/* Return number of elements written */
	return i;
#endif
}
     37a:	df 91       	pop	r29
     37c:	cf 91       	pop	r28
     37e:	1f 91       	pop	r17
     380:	0f 91       	pop	r16
     382:	ff 90       	pop	r15
     384:	ef 90       	pop	r14
     386:	df 90       	pop	r13
     388:	cf 90       	pop	r12
     38a:	bf 90       	pop	r11
     38c:	af 90       	pop	r10
     38e:	9f 90       	pop	r9
     390:	8f 90       	pop	r8
     392:	7f 90       	pop	r7
     394:	6f 90       	pop	r6
     396:	5f 90       	pop	r5
     398:	4f 90       	pop	r4
     39a:	08 95       	ret

0000039c <BUFFER_GetFull>:
	
	/* Return free memory */
	return size - 1;
}

uint16_t BUFFER_GetFull(BUFFER_t* Buffer) {
     39c:	cf 92       	push	r12
     39e:	df 92       	push	r13
     3a0:	ef 92       	push	r14
     3a2:	ff 92       	push	r15
     3a4:	0f 93       	push	r16
     3a6:	1f 93       	push	r17
     3a8:	fc 01       	movw	r30, r24
	uint32_t in, out, size;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
     3aa:	89 2b       	or	r24, r25
     3ac:	61 f1       	breq	.+88     	; 0x406 <BUFFER_GetFull+0x6a>
		return 0;
	}
	
	/* Save values */
	in = Buffer->In;
     3ae:	c4 80       	ldd	r12, Z+4	; 0x04
     3b0:	d5 80       	ldd	r13, Z+5	; 0x05
     3b2:	e6 80       	ldd	r14, Z+6	; 0x06
     3b4:	f7 80       	ldd	r15, Z+7	; 0x07
	out = Buffer->Out;
     3b6:	00 85       	ldd	r16, Z+8	; 0x08
     3b8:	11 85       	ldd	r17, Z+9	; 0x09
     3ba:	22 85       	ldd	r18, Z+10	; 0x0a
     3bc:	33 85       	ldd	r19, Z+11	; 0x0b
		size = 0;
	}
	
	/* Check pointers and return values */
	/* Buffer is not in overflow mode */
	if (in > out) {
     3be:	0c 15       	cp	r16, r12
     3c0:	1d 05       	cpc	r17, r13
     3c2:	2e 05       	cpc	r18, r14
     3c4:	3f 05       	cpc	r19, r15
     3c6:	38 f4       	brcc	.+14     	; 0x3d6 <BUFFER_GetFull+0x3a>
		size = in - out;
     3c8:	b7 01       	movw	r22, r14
     3ca:	a6 01       	movw	r20, r12
     3cc:	40 1b       	sub	r20, r16
     3ce:	51 0b       	sbc	r21, r17
     3d0:	62 0b       	sbc	r22, r18
     3d2:	73 0b       	sbc	r23, r19
     3d4:	03 c0       	rjmp	.+6      	; 0x3dc <BUFFER_GetFull+0x40>
     3d6:	40 e0       	ldi	r20, 0x00	; 0
     3d8:	50 e0       	ldi	r21, 0x00	; 0
     3da:	ba 01       	movw	r22, r20
	}
	
	/* Buffer is in overflow mode */
	if (out > in) {
     3dc:	c0 16       	cp	r12, r16
     3de:	d1 06       	cpc	r13, r17
     3e0:	e2 06       	cpc	r14, r18
     3e2:	f3 06       	cpc	r15, r19
     3e4:	70 f4       	brcc	.+28     	; 0x402 <BUFFER_GetFull+0x66>
     3e6:	80 81       	ld	r24, Z
     3e8:	91 81       	ldd	r25, Z+1	; 0x01
     3ea:	a2 81       	ldd	r26, Z+2	; 0x02
     3ec:	b3 81       	ldd	r27, Z+3	; 0x03
     3ee:	b7 01       	movw	r22, r14
     3f0:	a6 01       	movw	r20, r12
     3f2:	48 0f       	add	r20, r24
     3f4:	59 1f       	adc	r21, r25
     3f6:	6a 1f       	adc	r22, r26
     3f8:	7b 1f       	adc	r23, r27
		size = Buffer->Size - (out - in);
     3fa:	40 1b       	sub	r20, r16
     3fc:	51 0b       	sbc	r21, r17
     3fe:	62 0b       	sbc	r22, r18
     400:	73 0b       	sbc	r23, r19
	}
	
	/* Return number of elements in buffer */
	return size;
     402:	ca 01       	movw	r24, r20
     404:	02 c0       	rjmp	.+4      	; 0x40a <BUFFER_GetFull+0x6e>
uint16_t BUFFER_GetFull(BUFFER_t* Buffer) {
	uint32_t in, out, size;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
		return 0;
     406:	80 e0       	ldi	r24, 0x00	; 0
     408:	90 e0       	ldi	r25, 0x00	; 0
		size = Buffer->Size - (out - in);
	}
	
	/* Return number of elements in buffer */
	return size;
}
     40a:	1f 91       	pop	r17
     40c:	0f 91       	pop	r16
     40e:	ff 90       	pop	r15
     410:	ef 90       	pop	r14
     412:	df 90       	pop	r13
     414:	cf 90       	pop	r12
     416:	08 95       	ret

00000418 <BUFFER_Read>:
	/* Return number of elements written */
	return i;
#endif
}

uint16_t BUFFER_Read(BUFFER_t* Buffer, uint8_t* Data, uint16_t count) {
     418:	4f 92       	push	r4
     41a:	5f 92       	push	r5
     41c:	6f 92       	push	r6
     41e:	7f 92       	push	r7
     420:	8f 92       	push	r8
     422:	9f 92       	push	r9
     424:	af 92       	push	r10
     426:	bf 92       	push	r11
     428:	cf 92       	push	r12
     42a:	df 92       	push	r13
     42c:	ef 92       	push	r14
     42e:	ff 92       	push	r15
     430:	0f 93       	push	r16
     432:	1f 93       	push	r17
     434:	cf 93       	push	r28
     436:	df 93       	push	r29
     438:	ec 01       	movw	r28, r24
     43a:	7b 01       	movw	r14, r22
     43c:	8a 01       	movw	r16, r20
#if BUFFER_FAST
	uint32_t tocopy;
#endif

	/* Check buffer structure */
	if (Buffer == NULL || count == 0) {
     43e:	89 2b       	or	r24, r25
     440:	09 f4       	brne	.+2      	; 0x444 <BUFFER_Read+0x2c>
     442:	76 c0       	rjmp	.+236    	; 0x530 <BUFFER_Read+0x118>
     444:	45 2b       	or	r20, r21
     446:	09 f4       	brne	.+2      	; 0x44a <BUFFER_Read+0x32>
     448:	76 c0       	rjmp	.+236    	; 0x536 <BUFFER_Read+0x11e>
		return 0;
	}

	/* Check output pointer */
	if (Buffer->Out >= Buffer->Size) {
     44a:	88 80       	ld	r8, Y
     44c:	99 80       	ldd	r9, Y+1	; 0x01
     44e:	aa 80       	ldd	r10, Y+2	; 0x02
     450:	bb 80       	ldd	r11, Y+3	; 0x03
     452:	88 85       	ldd	r24, Y+8	; 0x08
     454:	99 85       	ldd	r25, Y+9	; 0x09
     456:	aa 85       	ldd	r26, Y+10	; 0x0a
     458:	bb 85       	ldd	r27, Y+11	; 0x0b
     45a:	88 15       	cp	r24, r8
     45c:	99 05       	cpc	r25, r9
     45e:	aa 05       	cpc	r26, r10
     460:	bb 05       	cpc	r27, r11
     462:	20 f0       	brcs	.+8      	; 0x46c <BUFFER_Read+0x54>
		Buffer->Out = 0;
     464:	18 86       	std	Y+8, r1	; 0x08
     466:	19 86       	std	Y+9, r1	; 0x09
     468:	1a 86       	std	Y+10, r1	; 0x0a
     46a:	1b 86       	std	Y+11, r1	; 0x0b
	}

	/* Get free memory */
	full = BUFFER_GetFull(Buffer);
     46c:	ce 01       	movw	r24, r28
     46e:	96 df       	rcall	.-212    	; 0x39c <BUFFER_GetFull>
     470:	ac 01       	movw	r20, r24
     472:	60 e0       	ldi	r22, 0x00	; 0
     474:	70 e0       	ldi	r23, 0x00	; 0

	/* Check available memory */
	if (full < count) {
     476:	28 01       	movw	r4, r16
     478:	61 2c       	mov	r6, r1
     47a:	71 2c       	mov	r7, r1
     47c:	44 15       	cp	r20, r4
     47e:	55 05       	cpc	r21, r5
     480:	66 05       	cpc	r22, r6
     482:	77 05       	cpc	r23, r7
     484:	30 f4       	brcc	.+12     	; 0x492 <BUFFER_Read+0x7a>
		/* If no memory, stop execution */
		if (full == 0) {
     486:	45 2b       	or	r20, r21
     488:	46 2b       	or	r20, r22
     48a:	47 2b       	or	r20, r23
     48c:	09 f4       	brne	.+2      	; 0x490 <BUFFER_Read+0x78>
     48e:	56 c0       	rjmp	.+172    	; 0x53c <BUFFER_Read+0x124>
			return 0;
		}

		/* Set values for write */
		count = full;
     490:	8c 01       	movw	r16, r24

	/* We have calculated memory for write */

#if BUFFER_FAST
	/* Calculate number of elements we can put at the end of buffer */
	tocopy = Buffer->Size - Buffer->Out;
     492:	48 85       	ldd	r20, Y+8	; 0x08
     494:	59 85       	ldd	r21, Y+9	; 0x09
     496:	6a 85       	ldd	r22, Y+10	; 0x0a
     498:	7b 85       	ldd	r23, Y+11	; 0x0b
     49a:	d5 01       	movw	r26, r10
     49c:	c4 01       	movw	r24, r8
     49e:	84 1b       	sub	r24, r20
     4a0:	95 0b       	sbc	r25, r21
     4a2:	a6 0b       	sbc	r26, r22
     4a4:	b7 0b       	sbc	r27, r23

	/* Check for copy count */
	if (tocopy > count) {
     4a6:	48 01       	movw	r8, r16
     4a8:	a1 2c       	mov	r10, r1
     4aa:	b1 2c       	mov	r11, r1
     4ac:	88 15       	cp	r24, r8
     4ae:	99 05       	cpc	r25, r9
     4b0:	aa 05       	cpc	r26, r10
     4b2:	bb 05       	cpc	r27, r11
     4b4:	10 f4       	brcc	.+4      	; 0x4ba <BUFFER_Read+0xa2>
     4b6:	4c 01       	movw	r8, r24
     4b8:	5d 01       	movw	r10, r26
		tocopy = count;
	}

	/* Copy content from buffer */
	memcpy(Data, &Buffer->Buffer[Buffer->Out], tocopy);
     4ba:	8c 85       	ldd	r24, Y+12	; 0x0c
     4bc:	9d 85       	ldd	r25, Y+13	; 0x0d
     4be:	bc 01       	movw	r22, r24
     4c0:	64 0f       	add	r22, r20
     4c2:	75 1f       	adc	r23, r21
     4c4:	a4 01       	movw	r20, r8
     4c6:	c7 01       	movw	r24, r14
     4c8:	0e 94 85 17 	call	0x2f0a	; 0x2f0a <memcpy>

	/* Increase number of bytes we copied already */
	i += tocopy;
	Buffer->Out += tocopy;
     4cc:	88 85       	ldd	r24, Y+8	; 0x08
     4ce:	99 85       	ldd	r25, Y+9	; 0x09
     4d0:	aa 85       	ldd	r26, Y+10	; 0x0a
     4d2:	bb 85       	ldd	r27, Y+11	; 0x0b
     4d4:	88 0d       	add	r24, r8
     4d6:	99 1d       	adc	r25, r9
     4d8:	aa 1d       	adc	r26, r10
     4da:	bb 1d       	adc	r27, r11
     4dc:	88 87       	std	Y+8, r24	; 0x08
     4de:	99 87       	std	Y+9, r25	; 0x09
     4e0:	aa 87       	std	Y+10, r26	; 0x0a
     4e2:	bb 87       	std	Y+11, r27	; 0x0b
	count -= tocopy;
     4e4:	68 01       	movw	r12, r16
     4e6:	c8 18       	sub	r12, r8
     4e8:	d9 08       	sbc	r13, r9

	/* Check if anything to read */
	if (count > 0) {
     4ea:	71 f0       	breq	.+28     	; 0x508 <BUFFER_Read+0xf0>
		/* Copy content */
		memcpy(&Data[i], Buffer->Buffer, count);
     4ec:	c7 01       	movw	r24, r14
     4ee:	88 0d       	add	r24, r8
     4f0:	99 1d       	adc	r25, r9
     4f2:	6c 85       	ldd	r22, Y+12	; 0x0c
     4f4:	7d 85       	ldd	r23, Y+13	; 0x0d
     4f6:	a6 01       	movw	r20, r12
     4f8:	0e 94 85 17 	call	0x2f0a	; 0x2f0a <memcpy>

		/* Set input pointer */
		Buffer->Out = count;
     4fc:	e1 2c       	mov	r14, r1
     4fe:	f1 2c       	mov	r15, r1
     500:	c8 86       	std	Y+8, r12	; 0x08
     502:	d9 86       	std	Y+9, r13	; 0x09
     504:	ea 86       	std	Y+10, r14	; 0x0a
     506:	fb 86       	std	Y+11, r15	; 0x0b
	}

	/* Check output overflow */
	if (Buffer->Out >= Buffer->Size) {
     508:	48 85       	ldd	r20, Y+8	; 0x08
     50a:	59 85       	ldd	r21, Y+9	; 0x09
     50c:	6a 85       	ldd	r22, Y+10	; 0x0a
     50e:	7b 85       	ldd	r23, Y+11	; 0x0b
     510:	88 81       	ld	r24, Y
     512:	99 81       	ldd	r25, Y+1	; 0x01
     514:	aa 81       	ldd	r26, Y+2	; 0x02
     516:	bb 81       	ldd	r27, Y+3	; 0x03
     518:	48 17       	cp	r20, r24
     51a:	59 07       	cpc	r21, r25
     51c:	6a 07       	cpc	r22, r26
     51e:	7b 07       	cpc	r23, r27
     520:	20 f0       	brcs	.+8      	; 0x52a <BUFFER_Read+0x112>
		Buffer->Out = 0;
     522:	18 86       	std	Y+8, r1	; 0x08
     524:	19 86       	std	Y+9, r1	; 0x09
     526:	1a 86       	std	Y+10, r1	; 0x0a
     528:	1b 86       	std	Y+11, r1	; 0x0b
	}

	/* Return number of elements stored in memory */
	return (i + count);
     52a:	80 2f       	mov	r24, r16
     52c:	91 2f       	mov	r25, r17
     52e:	08 c0       	rjmp	.+16     	; 0x540 <BUFFER_Read+0x128>
	uint32_t tocopy;
#endif

	/* Check buffer structure */
	if (Buffer == NULL || count == 0) {
		return 0;
     530:	80 e0       	ldi	r24, 0x00	; 0
     532:	90 e0       	ldi	r25, 0x00	; 0
     534:	05 c0       	rjmp	.+10     	; 0x540 <BUFFER_Read+0x128>
     536:	80 e0       	ldi	r24, 0x00	; 0
     538:	90 e0       	ldi	r25, 0x00	; 0
     53a:	02 c0       	rjmp	.+4      	; 0x540 <BUFFER_Read+0x128>

	/* Check available memory */
	if (full < count) {
		/* If no memory, stop execution */
		if (full == 0) {
			return 0;
     53c:	80 e0       	ldi	r24, 0x00	; 0
     53e:	90 e0       	ldi	r25, 0x00	; 0
	}

	/* Return number of elements stored in memory */
	return i;
#endif
}
     540:	df 91       	pop	r29
     542:	cf 91       	pop	r28
     544:	1f 91       	pop	r17
     546:	0f 91       	pop	r16
     548:	ff 90       	pop	r15
     54a:	ef 90       	pop	r14
     54c:	df 90       	pop	r13
     54e:	cf 90       	pop	r12
     550:	bf 90       	pop	r11
     552:	af 90       	pop	r10
     554:	9f 90       	pop	r9
     556:	8f 90       	pop	r8
     558:	7f 90       	pop	r7
     55a:	6f 90       	pop	r6
     55c:	5f 90       	pop	r5
     55e:	4f 90       	pop	r4
     560:	08 95       	ret

00000562 <BUFFER_Reset>:
	return size;
}

void BUFFER_Reset(BUFFER_t* Buffer) {
	/* Check buffer structure */
	if (Buffer == NULL) {
     562:	00 97       	sbiw	r24, 0x00	; 0
     564:	49 f0       	breq	.+18     	; 0x578 <BUFFER_Reset+0x16>
		return;
	}
	
	/* Reset values */
	Buffer->In = 0;
     566:	fc 01       	movw	r30, r24
     568:	14 82       	std	Z+4, r1	; 0x04
     56a:	15 82       	std	Z+5, r1	; 0x05
     56c:	16 82       	std	Z+6, r1	; 0x06
     56e:	17 82       	std	Z+7, r1	; 0x07
	Buffer->Out = 0;
     570:	10 86       	std	Z+8, r1	; 0x08
     572:	11 86       	std	Z+9, r1	; 0x09
     574:	12 86       	std	Z+10, r1	; 0x0a
     576:	13 86       	std	Z+11, r1	; 0x0b
     578:	08 95       	ret

0000057a <BUFFER_FindElement>:
}

int16_t BUFFER_FindElement(BUFFER_t* Buffer, uint8_t Element) {
     57a:	8f 92       	push	r8
     57c:	9f 92       	push	r9
     57e:	af 92       	push	r10
     580:	bf 92       	push	r11
     582:	cf 92       	push	r12
     584:	df 92       	push	r13
     586:	ef 92       	push	r14
     588:	ff 92       	push	r15
     58a:	cf 93       	push	r28
     58c:	df 93       	push	r29
	uint16_t Num, Out, retval = 0;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
     58e:	00 97       	sbiw	r24, 0x00	; 0
     590:	81 f1       	breq	.+96     	; 0x5f2 <BUFFER_FindElement+0x78>
     592:	c6 2f       	mov	r28, r22
     594:	7c 01       	movw	r14, r24
		return -1;
	}
	
	/* Create temporary variables */
	Num = BUFFER_GetFull(Buffer);
     596:	02 df       	rcall	.-508    	; 0x39c <BUFFER_GetFull>
     598:	bc 01       	movw	r22, r24
	Out = Buffer->Out;
     59a:	f7 01       	movw	r30, r14
     59c:	20 85       	ldd	r18, Z+8	; 0x08
     59e:	31 85       	ldd	r19, Z+9	; 0x09
	
	/* Go through input elements */
	while (Num > 0) {
     5a0:	89 2b       	or	r24, r25
     5a2:	51 f1       	breq	.+84     	; 0x5f8 <BUFFER_FindElement+0x7e>
		/* Check output overflow */
		if (Out >= Buffer->Size) {
     5a4:	80 80       	ld	r8, Z
     5a6:	91 80       	ldd	r9, Z+1	; 0x01
     5a8:	a2 80       	ldd	r10, Z+2	; 0x02
     5aa:	b3 80       	ldd	r11, Z+3	; 0x03
			Out = 0;
		}
		
		/* Check for element */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Element) {
     5ac:	a4 85       	ldd	r26, Z+12	; 0x0c
     5ae:	b5 85       	ldd	r27, Z+13	; 0x0d
     5b0:	40 e0       	ldi	r20, 0x00	; 0
     5b2:	50 e0       	ldi	r21, 0x00	; 0
	
	/* Go through input elements */
	while (Num > 0) {
		/* Check output overflow */
		if (Out >= Buffer->Size) {
			Out = 0;
     5b4:	d0 e0       	ldi	r29, 0x00	; 0
     5b6:	80 e0       	ldi	r24, 0x00	; 0
	Out = Buffer->Out;
	
	/* Go through input elements */
	while (Num > 0) {
		/* Check output overflow */
		if (Out >= Buffer->Size) {
     5b8:	69 01       	movw	r12, r18
     5ba:	e1 2c       	mov	r14, r1
     5bc:	f1 2c       	mov	r15, r1
     5be:	c8 14       	cp	r12, r8
     5c0:	d9 04       	cpc	r13, r9
     5c2:	ea 04       	cpc	r14, r10
     5c4:	fb 04       	cpc	r15, r11
     5c6:	10 f0       	brcs	.+4      	; 0x5cc <BUFFER_FindElement+0x52>
			Out = 0;
     5c8:	2d 2f       	mov	r18, r29
     5ca:	38 2f       	mov	r19, r24
		}
		
		/* Check for element */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Element) {
     5cc:	fd 01       	movw	r30, r26
     5ce:	e2 0f       	add	r30, r18
     5d0:	f3 1f       	adc	r31, r19
     5d2:	90 81       	ld	r25, Z
     5d4:	9c 13       	cpse	r25, r28
     5d6:	03 c0       	rjmp	.+6      	; 0x5de <BUFFER_FindElement+0x64>
			/* Element found, return position in buffer */
			return retval;
     5d8:	84 2f       	mov	r24, r20
     5da:	95 2f       	mov	r25, r21
     5dc:	0f c0       	rjmp	.+30     	; 0x5fc <BUFFER_FindElement+0x82>
		}
		
		/* Set new variables */
		Out++;
     5de:	2f 5f       	subi	r18, 0xFF	; 255
     5e0:	3f 4f       	sbci	r19, 0xFF	; 255
		Num--;
		retval++;
     5e2:	4f 5f       	subi	r20, 0xFF	; 255
     5e4:	5f 4f       	sbci	r21, 0xFF	; 255
	/* Create temporary variables */
	Num = BUFFER_GetFull(Buffer);
	Out = Buffer->Out;
	
	/* Go through input elements */
	while (Num > 0) {
     5e6:	64 17       	cp	r22, r20
     5e8:	75 07       	cpc	r23, r21
     5ea:	31 f7       	brne	.-52     	; 0x5b8 <BUFFER_FindElement+0x3e>
		Num--;
		retval++;
	}
	
	/* Element is not in buffer */
	return -1;
     5ec:	8f ef       	ldi	r24, 0xFF	; 255
     5ee:	9f ef       	ldi	r25, 0xFF	; 255
     5f0:	05 c0       	rjmp	.+10     	; 0x5fc <BUFFER_FindElement+0x82>
int16_t BUFFER_FindElement(BUFFER_t* Buffer, uint8_t Element) {
	uint16_t Num, Out, retval = 0;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
		return -1;
     5f2:	8f ef       	ldi	r24, 0xFF	; 255
     5f4:	9f ef       	ldi	r25, 0xFF	; 255
     5f6:	02 c0       	rjmp	.+4      	; 0x5fc <BUFFER_FindElement+0x82>
		Num--;
		retval++;
	}
	
	/* Element is not in buffer */
	return -1;
     5f8:	8f ef       	ldi	r24, 0xFF	; 255
     5fa:	9f ef       	ldi	r25, 0xFF	; 255
}
     5fc:	df 91       	pop	r29
     5fe:	cf 91       	pop	r28
     600:	ff 90       	pop	r15
     602:	ef 90       	pop	r14
     604:	df 90       	pop	r13
     606:	cf 90       	pop	r12
     608:	bf 90       	pop	r11
     60a:	af 90       	pop	r10
     60c:	9f 90       	pop	r9
     60e:	8f 90       	pop	r8
     610:	08 95       	ret

00000612 <BUFFER_Find>:

int16_t BUFFER_Find(BUFFER_t* Buffer, uint8_t* Data, uint16_t Size) {
     612:	2f 92       	push	r2
     614:	3f 92       	push	r3
     616:	4f 92       	push	r4
     618:	5f 92       	push	r5
     61a:	6f 92       	push	r6
     61c:	7f 92       	push	r7
     61e:	8f 92       	push	r8
     620:	9f 92       	push	r9
     622:	af 92       	push	r10
     624:	bf 92       	push	r11
     626:	cf 92       	push	r12
     628:	df 92       	push	r13
     62a:	ef 92       	push	r14
     62c:	ff 92       	push	r15
     62e:	0f 93       	push	r16
     630:	1f 93       	push	r17
     632:	cf 93       	push	r28
     634:	df 93       	push	r29
     636:	00 d0       	rcall	.+0      	; 0x638 <BUFFER_Find+0x26>
     638:	1f 92       	push	r1
     63a:	cd b7       	in	r28, 0x3d	; 61
     63c:	de b7       	in	r29, 0x3e	; 62
	uint16_t Num, Out, i, retval = 0;
	uint8_t found = 0;

	/* Check buffer structure and number of elements in buffer */
	if (Buffer == NULL || (Num = BUFFER_GetFull(Buffer)) < Size) {
     63e:	00 97       	sbiw	r24, 0x00	; 0
     640:	09 f4       	brne	.+2      	; 0x644 <BUFFER_Find+0x32>
     642:	7c c0       	rjmp	.+248    	; 0x73c <BUFFER_Find+0x12a>
     644:	8a 01       	movw	r16, r20
     646:	b7 2e       	mov	r11, r23
     648:	a6 2e       	mov	r10, r22
     64a:	4c 01       	movw	r8, r24
     64c:	a7 de       	rcall	.-690    	; 0x39c <BUFFER_GetFull>
     64e:	fc 01       	movw	r30, r24
     650:	80 17       	cp	r24, r16
     652:	91 07       	cpc	r25, r17
     654:	08 f4       	brcc	.+2      	; 0x658 <BUFFER_Find+0x46>
     656:	75 c0       	rjmp	.+234    	; 0x742 <BUFFER_Find+0x130>
		return -1;
	}

	/* Create temporary variables */
	Out = Buffer->Out;
     658:	d4 01       	movw	r26, r8
     65a:	18 96       	adiw	r26, 0x08	; 8
     65c:	2d 91       	ld	r18, X+
     65e:	3c 91       	ld	r19, X
     660:	19 97       	sbiw	r26, 0x09	; 9

	/* Go through input elements in buffer */
	while (Num > 0) {
     662:	89 2b       	or	r24, r25
     664:	09 f4       	brne	.+2      	; 0x668 <BUFFER_Find+0x56>
     666:	70 c0       	rjmp	.+224    	; 0x748 <BUFFER_Find+0x136>
		/* Check output overflow */
		if (Out >= Buffer->Size) {
     668:	cd 90       	ld	r12, X+
     66a:	dd 90       	ld	r13, X+
     66c:	ed 90       	ld	r14, X+
     66e:	fc 90       	ld	r15, X
     670:	13 97       	sbiw	r26, 0x03	; 3
			Out = 0;
		}

		/* Check if current element in buffer matches first element in data array */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {
     672:	1c 96       	adiw	r26, 0x0c	; 12
     674:	4d 91       	ld	r20, X+
     676:	5c 91       	ld	r21, X
     678:	1d 97       	sbiw	r26, 0x0d	; 13
     67a:	a9 82       	std	Y+1, r10	; 0x01
     67c:	ba 82       	std	Y+2, r11	; 0x02
     67e:	a9 81       	ldd	r26, Y+1	; 0x01
     680:	ba 81       	ldd	r27, Y+2	; 0x02
     682:	9d 90       	ld	r9, X+
     684:	ba 83       	std	Y+2, r27	; 0x02
     686:	a9 83       	std	Y+1, r26	; 0x01
     688:	81 2c       	mov	r8, r1
     68a:	80 e0       	ldi	r24, 0x00	; 0
     68c:	90 e0       	ldi	r25, 0x00	; 0

	/* Go through input elements in buffer */
	while (Num > 0) {
		/* Check output overflow */
		if (Out >= Buffer->Size) {
			Out = 0;
     68e:	21 2c       	mov	r2, r1
     690:	31 2c       	mov	r3, r1
			/* Check others */
			i = 1;
			while (i < Size) {
				/* Check output overflow */
				if (Out >= Buffer->Size) {
					Out = 0;
     692:	a2 2c       	mov	r10, r2
     694:	b3 2c       	mov	r11, r3
	Out = Buffer->Out;

	/* Go through input elements in buffer */
	while (Num > 0) {
		/* Check output overflow */
		if (Out >= Buffer->Size) {
     696:	29 01       	movw	r4, r18
     698:	61 2c       	mov	r6, r1
     69a:	71 2c       	mov	r7, r1
     69c:	4c 14       	cp	r4, r12
     69e:	5d 04       	cpc	r5, r13
     6a0:	6e 04       	cpc	r6, r14
     6a2:	7f 04       	cpc	r7, r15
     6a4:	10 f0       	brcs	.+4      	; 0x6aa <BUFFER_Find+0x98>
			Out = 0;
     6a6:	22 2d       	mov	r18, r2
     6a8:	33 2d       	mov	r19, r3
		}

		/* Check if current element in buffer matches first element in data array */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {
     6aa:	da 01       	movw	r26, r20
     6ac:	a2 0f       	add	r26, r18
     6ae:	b3 1f       	adc	r27, r19
     6b0:	6c 91       	ld	r22, X
     6b2:	69 15       	cp	r22, r9
     6b4:	09 f4       	brne	.+2      	; 0x6b8 <BUFFER_Find+0xa6>
     6b6:	4b c0       	rjmp	.+150    	; 0x74e <BUFFER_Find+0x13c>
			found = 1;
		}

		/* Set new variables */
		Out++;
     6b8:	2f 5f       	subi	r18, 0xFF	; 255
     6ba:	3f 4f       	sbci	r19, 0xFF	; 255
		Num--;
     6bc:	31 97       	sbiw	r30, 0x01	; 1
		retval++;
     6be:	01 96       	adiw	r24, 0x01	; 1

		/* We have found first element */
		if (found) {
     6c0:	88 20       	and	r8, r8
     6c2:	b1 f1       	breq	.+108    	; 0x730 <BUFFER_Find+0x11e>
			/* First character found */
			/* Check others */
			i = 1;
			while (i < Size) {
     6c4:	02 30       	cpi	r16, 0x02	; 2
     6c6:	11 05       	cpc	r17, r1
     6c8:	60 f1       	brcs	.+88     	; 0x722 <BUFFER_Find+0x110>
     6ca:	69 80       	ldd	r6, Y+1	; 0x01
     6cc:	7a 80       	ldd	r7, Y+2	; 0x02
     6ce:	61 e0       	ldi	r22, 0x01	; 1
     6d0:	70 e0       	ldi	r23, 0x00	; 0
     6d2:	d3 01       	movw	r26, r6
     6d4:	fc 83       	std	Y+4, r31	; 0x04
     6d6:	eb 83       	std	Y+3, r30	; 0x03
				/* Check output overflow */
				if (Out >= Buffer->Size) {
     6d8:	29 01       	movw	r4, r18
     6da:	61 2c       	mov	r6, r1
     6dc:	71 2c       	mov	r7, r1
     6de:	4c 14       	cp	r4, r12
     6e0:	5d 04       	cpc	r5, r13
     6e2:	6e 04       	cpc	r6, r14
     6e4:	7f 04       	cpc	r7, r15
     6e6:	10 f0       	brcs	.+4      	; 0x6ec <BUFFER_Find+0xda>
					Out = 0;
     6e8:	2a 2d       	mov	r18, r10
     6ea:	3b 2d       	mov	r19, r11
				}

				/* Check if current character in buffer matches character in string */
				if ((uint8_t)Buffer->Buffer[Out] != (uint8_t)Data[i]) {
     6ec:	7d 90       	ld	r7, X+
     6ee:	2a 01       	movw	r4, r20
     6f0:	42 0e       	add	r4, r18
     6f2:	53 1e       	adc	r5, r19
     6f4:	f2 01       	movw	r30, r4
     6f6:	60 80       	ld	r6, Z
     6f8:	67 14       	cp	r6, r7
     6fa:	31 f0       	breq	.+12     	; 0x708 <BUFFER_Find+0xf6>
     6fc:	eb 81       	ldd	r30, Y+3	; 0x03
     6fe:	fc 81       	ldd	r31, Y+4	; 0x04
     700:	01 97       	sbiw	r24, 0x01	; 1
					retval += i - 1;
     702:	86 0f       	add	r24, r22
     704:	97 1f       	adc	r25, r23
					break;
     706:	0f c0       	rjmp	.+30     	; 0x726 <BUFFER_Find+0x114>
				}

				/* Set new variables */
				Out++;
     708:	2f 5f       	subi	r18, 0xFF	; 255
     70a:	3f 4f       	sbci	r19, 0xFF	; 255
				Num--;
     70c:	eb 81       	ldd	r30, Y+3	; 0x03
     70e:	fc 81       	ldd	r31, Y+4	; 0x04
     710:	31 97       	sbiw	r30, 0x01	; 1
     712:	fc 83       	std	Y+4, r31	; 0x04
     714:	eb 83       	std	Y+3, r30	; 0x03
				i++;
     716:	6f 5f       	subi	r22, 0xFF	; 255
     718:	7f 4f       	sbci	r23, 0xFF	; 255
		/* We have found first element */
		if (found) {
			/* First character found */
			/* Check others */
			i = 1;
			while (i < Size) {
     71a:	60 17       	cp	r22, r16
     71c:	71 07       	cpc	r23, r17
     71e:	e1 f6       	brne	.-72     	; 0x6d8 <BUFFER_Find+0xc6>
     720:	05 c0       	rjmp	.+10     	; 0x72c <BUFFER_Find+0x11a>
     722:	61 e0       	ldi	r22, 0x01	; 1
     724:	70 e0       	ldi	r23, 0x00	; 0
				Num--;
				i++;
			}

			/* We have found data sequence in buffer */
			if (i == Size) {
     726:	60 17       	cp	r22, r16
     728:	71 07       	cpc	r23, r17
     72a:	11 f4       	brne	.+4      	; 0x730 <BUFFER_Find+0x11e>
				return retval - 1;
     72c:	01 97       	sbiw	r24, 0x01	; 1
     72e:	16 c0       	rjmp	.+44     	; 0x75c <BUFFER_Find+0x14a>

	/* Create temporary variables */
	Out = Buffer->Out;

	/* Go through input elements in buffer */
	while (Num > 0) {
     730:	30 97       	sbiw	r30, 0x00	; 0
     732:	09 f0       	breq	.+2      	; 0x736 <BUFFER_Find+0x124>
     734:	b0 cf       	rjmp	.-160    	; 0x696 <BUFFER_Find+0x84>
			}
		}
	}

	/* Data sequence is not in buffer */
	return -1;
     736:	8f ef       	ldi	r24, 0xFF	; 255
     738:	9f ef       	ldi	r25, 0xFF	; 255
     73a:	10 c0       	rjmp	.+32     	; 0x75c <BUFFER_Find+0x14a>
	uint16_t Num, Out, i, retval = 0;
	uint8_t found = 0;

	/* Check buffer structure and number of elements in buffer */
	if (Buffer == NULL || (Num = BUFFER_GetFull(Buffer)) < Size) {
		return -1;
     73c:	8f ef       	ldi	r24, 0xFF	; 255
     73e:	9f ef       	ldi	r25, 0xFF	; 255
     740:	0d c0       	rjmp	.+26     	; 0x75c <BUFFER_Find+0x14a>
     742:	8f ef       	ldi	r24, 0xFF	; 255
     744:	9f ef       	ldi	r25, 0xFF	; 255
     746:	0a c0       	rjmp	.+20     	; 0x75c <BUFFER_Find+0x14a>
			}
		}
	}

	/* Data sequence is not in buffer */
	return -1;
     748:	8f ef       	ldi	r24, 0xFF	; 255
     74a:	9f ef       	ldi	r25, 0xFF	; 255
     74c:	07 c0       	rjmp	.+14     	; 0x75c <BUFFER_Find+0x14a>
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {
			found = 1;
		}

		/* Set new variables */
		Out++;
     74e:	2f 5f       	subi	r18, 0xFF	; 255
     750:	3f 4f       	sbci	r19, 0xFF	; 255
		Num--;
     752:	31 97       	sbiw	r30, 0x01	; 1
		retval++;
     754:	01 96       	adiw	r24, 0x01	; 1
			Out = 0;
		}

		/* Check if current element in buffer matches first element in data array */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {
			found = 1;
     756:	88 24       	eor	r8, r8
     758:	83 94       	inc	r8
     75a:	b4 cf       	rjmp	.-152    	; 0x6c4 <BUFFER_Find+0xb2>
		}
	}

	/* Data sequence is not in buffer */
	return -1;
}
     75c:	0f 90       	pop	r0
     75e:	0f 90       	pop	r0
     760:	0f 90       	pop	r0
     762:	0f 90       	pop	r0
     764:	df 91       	pop	r29
     766:	cf 91       	pop	r28
     768:	1f 91       	pop	r17
     76a:	0f 91       	pop	r16
     76c:	ff 90       	pop	r15
     76e:	ef 90       	pop	r14
     770:	df 90       	pop	r13
     772:	cf 90       	pop	r12
     774:	bf 90       	pop	r11
     776:	af 90       	pop	r10
     778:	9f 90       	pop	r9
     77a:	8f 90       	pop	r8
     77c:	7f 90       	pop	r7
     77e:	6f 90       	pop	r6
     780:	5f 90       	pop	r5
     782:	4f 90       	pop	r4
     784:	3f 90       	pop	r3
     786:	2f 90       	pop	r2
     788:	08 95       	ret

0000078a <BUFFER_WriteString>:

uint16_t BUFFER_WriteString(BUFFER_t* Buffer, char* buff) {
	/* Write string to buffer */
	return BUFFER_Write(Buffer, (uint8_t *)buff, strlen(buff));
     78a:	fb 01       	movw	r30, r22
     78c:	01 90       	ld	r0, Z+
     78e:	00 20       	and	r0, r0
     790:	e9 f7       	brne	.-6      	; 0x78c <BUFFER_WriteString+0x2>
     792:	31 97       	sbiw	r30, 0x01	; 1
     794:	af 01       	movw	r20, r30
     796:	46 1b       	sub	r20, r22
     798:	57 0b       	sbc	r21, r23
     79a:	5c cd       	rjmp	.-1352   	; 0x254 <BUFFER_Write>
}
     79c:	08 95       	ret

0000079e <BUFFER_ReadString>:

uint16_t BUFFER_ReadString(BUFFER_t* Buffer, char* buff, uint16_t buffsize) {
     79e:	8f 92       	push	r8
     7a0:	9f 92       	push	r9
     7a2:	af 92       	push	r10
     7a4:	bf 92       	push	r11
     7a6:	cf 92       	push	r12
     7a8:	df 92       	push	r13
     7aa:	ef 92       	push	r14
     7ac:	ff 92       	push	r15
     7ae:	0f 93       	push	r16
     7b0:	1f 93       	push	r17
     7b2:	cf 93       	push	r28
     7b4:	df 93       	push	r29
     7b6:	1f 92       	push	r1
     7b8:	cd b7       	in	r28, 0x3d	; 61
     7ba:	de b7       	in	r29, 0x3e	; 62
	uint16_t i = 0;
	uint8_t ch;
	uint16_t freeMem;
	
	/* Check value buffer */
	if (Buffer == NULL) {
     7bc:	00 97       	sbiw	r24, 0x00	; 0
     7be:	09 f4       	brne	.+2      	; 0x7c2 <BUFFER_ReadString+0x24>
     7c0:	43 c0       	rjmp	.+134    	; 0x848 <BUFFER_ReadString+0xaa>
     7c2:	4a 01       	movw	r8, r20
     7c4:	5b 01       	movw	r10, r22
     7c6:	7c 01       	movw	r14, r24
		return 0;
	}
	
	/* Get free */
	freeMem = BUFFER_GetFree(Buffer);
     7c8:	fc dc       	rcall	.-1544   	; 0x1c2 <BUFFER_GetFree>
	
	/* Check for any data on USART */
	if (
     7ca:	89 2b       	or	r24, r25
     7cc:	09 f4       	brne	.+2      	; 0x7d0 <BUFFER_ReadString+0x32>
     7ce:	3f c0       	rjmp	.+126    	; 0x84e <BUFFER_ReadString+0xb0>
		freeMem == 0 ||                                                /*!< Buffer empty */
		(
			BUFFER_FindElement(Buffer, Buffer->StringDelimiter) < 0 && /*!< String delimiter is not in buffer */
     7d0:	f7 01       	movw	r30, r14
     7d2:	67 85       	ldd	r22, Z+15	; 0x0f
     7d4:	c7 01       	movw	r24, r14
     7d6:	d1 de       	rcall	.-606    	; 0x57a <BUFFER_FindElement>
	/* Get free */
	freeMem = BUFFER_GetFree(Buffer);
	
	/* Check for any data on USART */
	if (
		freeMem == 0 ||                                                /*!< Buffer empty */
     7d8:	99 23       	and	r25, r25
     7da:	2c f4       	brge	.+10     	; 0x7e6 <BUFFER_ReadString+0x48>
		(
			BUFFER_FindElement(Buffer, Buffer->StringDelimiter) < 0 && /*!< String delimiter is not in buffer */
			freeMem != 0 &&                                            /*!< Buffer is not full */
			BUFFER_GetFull(Buffer) < buffsize                          /*!< User buffer size is larger than number of elements in buffer */
     7dc:	c7 01       	movw	r24, r14
     7de:	de dd       	rcall	.-1092   	; 0x39c <BUFFER_GetFull>
	/* Check for any data on USART */
	if (
		freeMem == 0 ||                                                /*!< Buffer empty */
		(
			BUFFER_FindElement(Buffer, Buffer->StringDelimiter) < 0 && /*!< String delimiter is not in buffer */
			freeMem != 0 &&                                            /*!< Buffer is not full */
     7e0:	88 15       	cp	r24, r8
     7e2:	99 05       	cpc	r25, r9
     7e4:	b8 f1       	brcs	.+110    	; 0x854 <BUFFER_ReadString+0xb6>
		/* Return 0 */
		return 0;
	}
	
	/* If available buffer size is more than 0 characters */
	while (i < (buffsize - 1)) {
     7e6:	f1 e0       	ldi	r31, 0x01	; 1
     7e8:	8f 1a       	sub	r8, r31
     7ea:	91 08       	sbc	r9, r1
     7ec:	d9 f0       	breq	.+54     	; 0x824 <BUFFER_ReadString+0x86>
     7ee:	65 01       	movw	r12, r10
     7f0:	00 e0       	ldi	r16, 0x00	; 0
     7f2:	10 e0       	ldi	r17, 0x00	; 0
		/* We have available data */
		BUFFER_Read(Buffer, &ch, 1);
     7f4:	41 e0       	ldi	r20, 0x01	; 1
     7f6:	50 e0       	ldi	r21, 0x00	; 0
     7f8:	be 01       	movw	r22, r28
     7fa:	6f 5f       	subi	r22, 0xFF	; 255
     7fc:	7f 4f       	sbci	r23, 0xFF	; 255
     7fe:	c7 01       	movw	r24, r14
     800:	0b de       	rcall	.-1002   	; 0x418 <BUFFER_Read>
		
		/* Save character */
		buff[i] = (char)ch;
     802:	89 81       	ldd	r24, Y+1	; 0x01
     804:	f6 01       	movw	r30, r12
     806:	81 93       	st	Z+, r24
     808:	6f 01       	movw	r12, r30
		
		/* Check for end of string */
		if ((char)buff[i] == (char)Buffer->StringDelimiter) {
     80a:	f7 01       	movw	r30, r14
     80c:	97 85       	ldd	r25, Z+15	; 0x0f
     80e:	89 17       	cp	r24, r25
     810:	29 f0       	breq	.+10     	; 0x81c <BUFFER_ReadString+0x7e>
			/* Done */
			break;
		}
		
		/* Increase */
		i++;
     812:	0f 5f       	subi	r16, 0xFF	; 255
     814:	1f 4f       	sbci	r17, 0xFF	; 255
		/* Return 0 */
		return 0;
	}
	
	/* If available buffer size is more than 0 characters */
	while (i < (buffsize - 1)) {
     816:	08 15       	cp	r16, r8
     818:	19 05       	cpc	r17, r9
     81a:	60 f3       	brcs	.-40     	; 0x7f4 <BUFFER_ReadString+0x56>
		/* Increase */
		i++;
	}
	
	/* Add zero to the end of string */
	if (i == (buffsize - 1)) {
     81c:	80 16       	cp	r8, r16
     81e:	91 06       	cpc	r9, r17
     820:	51 f4       	brne	.+20     	; 0x836 <BUFFER_ReadString+0x98>
     822:	02 c0       	rjmp	.+4      	; 0x828 <BUFFER_ReadString+0x8a>
		/* Return 0 */
		return 0;
	}
	
	/* If available buffer size is more than 0 characters */
	while (i < (buffsize - 1)) {
     824:	00 e0       	ldi	r16, 0x00	; 0
     826:	10 e0       	ldi	r17, 0x00	; 0
		i++;
	}
	
	/* Add zero to the end of string */
	if (i == (buffsize - 1)) {
		buff[i] = 0;
     828:	f5 01       	movw	r30, r10
     82a:	e0 0f       	add	r30, r16
     82c:	f1 1f       	adc	r31, r17
     82e:	10 82       	st	Z, r1
     830:	80 2f       	mov	r24, r16
     832:	91 2f       	mov	r25, r17
     834:	11 c0       	rjmp	.+34     	; 0x858 <BUFFER_ReadString+0xba>
	} else {
		buff[++i] = 0;
     836:	0f 5f       	subi	r16, 0xFF	; 255
     838:	1f 4f       	sbci	r17, 0xFF	; 255
     83a:	f5 01       	movw	r30, r10
     83c:	e0 0f       	add	r30, r16
     83e:	f1 1f       	adc	r31, r17
     840:	10 82       	st	Z, r1
     842:	80 2f       	mov	r24, r16
     844:	91 2f       	mov	r25, r17
     846:	08 c0       	rjmp	.+16     	; 0x858 <BUFFER_ReadString+0xba>
	uint8_t ch;
	uint16_t freeMem;
	
	/* Check value buffer */
	if (Buffer == NULL) {
		return 0;
     848:	80 e0       	ldi	r24, 0x00	; 0
     84a:	90 e0       	ldi	r25, 0x00	; 0
     84c:	05 c0       	rjmp	.+10     	; 0x858 <BUFFER_ReadString+0xba>
			freeMem != 0 &&                                            /*!< Buffer is not full */
			BUFFER_GetFull(Buffer) < buffsize                          /*!< User buffer size is larger than number of elements in buffer */
		)
	) {
		/* Return 0 */
		return 0;
     84e:	80 e0       	ldi	r24, 0x00	; 0
     850:	90 e0       	ldi	r25, 0x00	; 0
     852:	02 c0       	rjmp	.+4      	; 0x858 <BUFFER_ReadString+0xba>
     854:	80 e0       	ldi	r24, 0x00	; 0
     856:	90 e0       	ldi	r25, 0x00	; 0
		buff[++i] = 0;
	}

	/* Return number of characters in buffer */
	return i;
}
     858:	0f 90       	pop	r0
     85a:	df 91       	pop	r29
     85c:	cf 91       	pop	r28
     85e:	1f 91       	pop	r17
     860:	0f 91       	pop	r16
     862:	ff 90       	pop	r15
     864:	ef 90       	pop	r14
     866:	df 90       	pop	r13
     868:	cf 90       	pop	r12
     86a:	bf 90       	pop	r11
     86c:	af 90       	pop	r10
     86e:	9f 90       	pop	r9
     870:	8f 90       	pop	r8
     872:	08 95       	ret

00000874 <ParseNumber>:
	/* Send command */
	SendCommand(ESP8266, ESP8266_COMMAND_AUTOCONN, NULL, NULL);
	
	/* Wait till end */
	return ESP8266_WaitReady(ESP8266);
}
     874:	cf 92       	push	r12
     876:	df 92       	push	r13
     878:	ef 92       	push	r14
     87a:	ff 92       	push	r15
     87c:	0f 93       	push	r16
     87e:	1f 93       	push	r17
     880:	fc 01       	movw	r30, r24
     882:	db 01       	movw	r26, r22
     884:	80 81       	ld	r24, Z
     886:	8d 32       	cpi	r24, 0x2D	; 45
     888:	19 f4       	brne	.+6      	; 0x890 <ParseNumber+0x1c>
     88a:	31 96       	adiw	r30, 0x01	; 1
     88c:	91 e0       	ldi	r25, 0x01	; 1
     88e:	01 c0       	rjmp	.+2      	; 0x892 <ParseNumber+0x1e>
     890:	90 e0       	ldi	r25, 0x00	; 0
     892:	00 81       	ld	r16, Z
     894:	80 ed       	ldi	r24, 0xD0	; 208
     896:	80 0f       	add	r24, r16
     898:	8a 30       	cpi	r24, 0x0A	; 10
     89a:	48 f5       	brcc	.+82     	; 0x8ee <ParseNumber+0x7a>
     89c:	31 96       	adiw	r30, 0x01	; 1
     89e:	89 2f       	mov	r24, r25
     8a0:	40 e0       	ldi	r20, 0x00	; 0
     8a2:	50 e0       	ldi	r21, 0x00	; 0
     8a4:	ba 01       	movw	r22, r20
     8a6:	44 0f       	add	r20, r20
     8a8:	55 1f       	adc	r21, r21
     8aa:	66 1f       	adc	r22, r22
     8ac:	77 1f       	adc	r23, r23
     8ae:	6a 01       	movw	r12, r20
     8b0:	7b 01       	movw	r14, r22
     8b2:	cc 0c       	add	r12, r12
     8b4:	dd 1c       	adc	r13, r13
     8b6:	ee 1c       	adc	r14, r14
     8b8:	ff 1c       	adc	r15, r15
     8ba:	cc 0c       	add	r12, r12
     8bc:	dd 1c       	adc	r13, r13
     8be:	ee 1c       	adc	r14, r14
     8c0:	ff 1c       	adc	r15, r15
     8c2:	4c 0d       	add	r20, r12
     8c4:	5d 1d       	adc	r21, r13
     8c6:	6e 1d       	adc	r22, r14
     8c8:	7f 1d       	adc	r23, r15
     8ca:	10 e0       	ldi	r17, 0x00	; 0
     8cc:	00 53       	subi	r16, 0x30	; 48
     8ce:	11 09       	sbc	r17, r1
     8d0:	01 2e       	mov	r0, r17
     8d2:	00 0c       	add	r0, r0
     8d4:	22 0b       	sbc	r18, r18
     8d6:	33 0b       	sbc	r19, r19
     8d8:	40 0f       	add	r20, r16
     8da:	51 1f       	adc	r21, r17
     8dc:	62 1f       	adc	r22, r18
     8de:	73 1f       	adc	r23, r19
     8e0:	8f 5f       	subi	r24, 0xFF	; 255
     8e2:	01 91       	ld	r16, Z+
     8e4:	20 ed       	ldi	r18, 0xD0	; 208
     8e6:	20 0f       	add	r18, r16
     8e8:	2a 30       	cpi	r18, 0x0A	; 10
     8ea:	e8 f2       	brcs	.-70     	; 0x8a6 <ParseNumber+0x32>
     8ec:	04 c0       	rjmp	.+8      	; 0x8f6 <ParseNumber+0x82>
     8ee:	89 2f       	mov	r24, r25
     8f0:	40 e0       	ldi	r20, 0x00	; 0
     8f2:	50 e0       	ldi	r21, 0x00	; 0
     8f4:	ba 01       	movw	r22, r20
     8f6:	10 97       	sbiw	r26, 0x00	; 0
     8f8:	09 f0       	breq	.+2      	; 0x8fc <ParseNumber+0x88>
     8fa:	8c 93       	st	X, r24
     8fc:	99 23       	and	r25, r25
     8fe:	51 f0       	breq	.+20     	; 0x914 <ParseNumber+0xa0>
     900:	8a 01       	movw	r16, r20
     902:	9b 01       	movw	r18, r22
     904:	66 27       	eor	r22, r22
     906:	77 27       	eor	r23, r23
     908:	cb 01       	movw	r24, r22
     90a:	60 1b       	sub	r22, r16
     90c:	71 0b       	sbc	r23, r17
     90e:	82 0b       	sbc	r24, r18
     910:	93 0b       	sbc	r25, r19
     912:	02 c0       	rjmp	.+4      	; 0x918 <ParseNumber+0xa4>
     914:	cb 01       	movw	r24, r22
     916:	ba 01       	movw	r22, r20
     918:	1f 91       	pop	r17
     91a:	0f 91       	pop	r16
     91c:	ff 90       	pop	r15
     91e:	ef 90       	pop	r14
     920:	df 90       	pop	r13
     922:	cf 90       	pop	r12
     924:	08 95       	ret

00000926 <EscapeStringAndSend>:
     926:	ef 92       	push	r14
     928:	ff 92       	push	r15
     92a:	0f 93       	push	r16
     92c:	1f 93       	push	r17
     92e:	cf 93       	push	r28
     930:	df 93       	push	r29
     932:	1f 92       	push	r1
     934:	cd b7       	in	r28, 0x3d	; 61
     936:	de b7       	in	r29, 0x3e	; 62
     938:	8c 01       	movw	r16, r24
     93a:	8c e5       	ldi	r24, 0x5C	; 92
     93c:	89 83       	std	Y+1, r24	; 0x01
     93e:	f8 01       	movw	r30, r16
     940:	90 81       	ld	r25, Z
     942:	99 23       	and	r25, r25
     944:	d9 f0       	breq	.+54     	; 0x97c <EscapeStringAndSend+0x56>
     946:	01 c0       	rjmp	.+2      	; 0x94a <EscapeStringAndSend+0x24>
     948:	87 01       	movw	r16, r14
     94a:	9c 32       	cpi	r25, 0x2C	; 44
     94c:	21 f0       	breq	.+8      	; 0x956 <EscapeStringAndSend+0x30>
     94e:	92 32       	cpi	r25, 0x22	; 34
     950:	11 f0       	breq	.+4      	; 0x956 <EscapeStringAndSend+0x30>
     952:	9c 35       	cpi	r25, 0x5C	; 92
     954:	31 f4       	brne	.+12     	; 0x962 <EscapeStringAndSend+0x3c>
     956:	61 e0       	ldi	r22, 0x01	; 1
     958:	70 e0       	ldi	r23, 0x00	; 0
     95a:	ce 01       	movw	r24, r28
     95c:	01 96       	adiw	r24, 0x01	; 1
     95e:	0e 94 b1 13 	call	0x2762	; 0x2762 <ESP8266_LL_USARTSend>
     962:	78 01       	movw	r14, r16
     964:	ff ef       	ldi	r31, 0xFF	; 255
     966:	ef 1a       	sub	r14, r31
     968:	ff 0a       	sbc	r15, r31
     96a:	61 e0       	ldi	r22, 0x01	; 1
     96c:	70 e0       	ldi	r23, 0x00	; 0
     96e:	c8 01       	movw	r24, r16
     970:	0e 94 b1 13 	call	0x2762	; 0x2762 <ESP8266_LL_USARTSend>
     974:	f8 01       	movw	r30, r16
     976:	91 81       	ldd	r25, Z+1	; 0x01
     978:	91 11       	cpse	r25, r1
     97a:	e6 cf       	rjmp	.-52     	; 0x948 <EscapeStringAndSend+0x22>
     97c:	0f 90       	pop	r0
     97e:	df 91       	pop	r29
     980:	cf 91       	pop	r28
     982:	1f 91       	pop	r17
     984:	0f 91       	pop	r16
     986:	ff 90       	pop	r15
     988:	ef 90       	pop	r14
     98a:	08 95       	ret

0000098c <Int2String>:
     98c:	7f 93       	push	r23
     98e:	6f 93       	push	r22
     990:	5f 93       	push	r21
     992:	4f 93       	push	r20
     994:	24 e1       	ldi	r18, 0x14	; 20
     996:	32 e0       	ldi	r19, 0x02	; 2
     998:	3f 93       	push	r19
     99a:	2f 93       	push	r18
     99c:	9f 93       	push	r25
     99e:	8f 93       	push	r24
     9a0:	0e 94 29 18 	call	0x3052	; 0x3052 <sprintf>
     9a4:	8d b7       	in	r24, 0x3d	; 61
     9a6:	9e b7       	in	r25, 0x3e	; 62
     9a8:	08 96       	adiw	r24, 0x08	; 8
     9aa:	0f b6       	in	r0, 0x3f	; 63
     9ac:	f8 94       	cli
     9ae:	9e bf       	out	0x3e, r25	; 62
     9b0:	0f be       	out	0x3f, r0	; 63
     9b2:	8d bf       	out	0x3d, r24	; 61
     9b4:	08 95       	ret

000009b6 <ParseIP>:
     9b6:	af 92       	push	r10
     9b8:	bf 92       	push	r11
     9ba:	cf 92       	push	r12
     9bc:	df 92       	push	r13
     9be:	ef 92       	push	r14
     9c0:	ff 92       	push	r15
     9c2:	1f 93       	push	r17
     9c4:	cf 93       	push	r28
     9c6:	df 93       	push	r29
     9c8:	cd b7       	in	r28, 0x3d	; 61
     9ca:	de b7       	in	r29, 0x3e	; 62
     9cc:	61 97       	sbiw	r28, 0x11	; 17
     9ce:	0f b6       	in	r0, 0x3f	; 63
     9d0:	f8 94       	cli
     9d2:	de bf       	out	0x3e, r29	; 62
     9d4:	0f be       	out	0x3f, r0	; 63
     9d6:	cd bf       	out	0x3d, r28	; 61
     9d8:	fc 01       	movw	r30, r24
     9da:	6b 01       	movw	r12, r22
     9dc:	5a 01       	movw	r10, r20
     9de:	9f e0       	ldi	r25, 0x0F	; 15
     9e0:	de 01       	movw	r26, r28
     9e2:	12 96       	adiw	r26, 0x02	; 2
     9e4:	01 90       	ld	r0, Z+
     9e6:	0d 92       	st	X+, r0
     9e8:	9a 95       	dec	r25
     9ea:	e1 f7       	brne	.-8      	; 0x9e4 <ParseIP+0x2e>
     9ec:	19 8a       	std	Y+17, r1	; 0x11
     9ee:	68 e1       	ldi	r22, 0x18	; 24
     9f0:	72 e0       	ldi	r23, 0x02	; 2
     9f2:	ce 01       	movw	r24, r28
     9f4:	02 96       	adiw	r24, 0x02	; 2
     9f6:	0e 94 75 17 	call	0x2eea	; 0x2eea <strtok>
     9fa:	00 97       	sbiw	r24, 0x00	; 0
     9fc:	e9 f4       	brne	.+58     	; 0xa38 <ParseIP+0x82>
     9fe:	10 e0       	ldi	r17, 0x00	; 0
     a00:	15 c0       	rjmp	.+42     	; 0xa2c <ParseIP+0x76>
     a02:	be 01       	movw	r22, r28
     a04:	6f 5f       	subi	r22, 0xFF	; 255
     a06:	7f 4f       	sbci	r23, 0xFF	; 255
     a08:	35 df       	rcall	.-406    	; 0x874 <ParseNumber>
     a0a:	f7 01       	movw	r30, r14
     a0c:	61 93       	st	Z+, r22
     a0e:	7f 01       	movw	r14, r30
     a10:	89 81       	ldd	r24, Y+1	; 0x01
     a12:	18 0f       	add	r17, r24
     a14:	ec 15       	cp	r30, r12
     a16:	fd 05       	cpc	r31, r13
     a18:	49 f0       	breq	.+18     	; 0xa2c <ParseIP+0x76>
     a1a:	1f 5f       	subi	r17, 0xFF	; 255
     a1c:	68 e1       	ldi	r22, 0x18	; 24
     a1e:	72 e0       	ldi	r23, 0x02	; 2
     a20:	80 e0       	ldi	r24, 0x00	; 0
     a22:	90 e0       	ldi	r25, 0x00	; 0
     a24:	0e 94 75 17 	call	0x2eea	; 0x2eea <strtok>
     a28:	00 97       	sbiw	r24, 0x00	; 0
     a2a:	59 f7       	brne	.-42     	; 0xa02 <ParseIP+0x4c>
     a2c:	a1 14       	cp	r10, r1
     a2e:	b1 04       	cpc	r11, r1
     a30:	79 f0       	breq	.+30     	; 0xa50 <ParseIP+0x9a>
     a32:	f5 01       	movw	r30, r10
     a34:	10 83       	st	Z, r17
     a36:	0c c0       	rjmp	.+24     	; 0xa50 <ParseIP+0x9a>
     a38:	be 01       	movw	r22, r28
     a3a:	6f 5f       	subi	r22, 0xFF	; 255
     a3c:	7f 4f       	sbci	r23, 0xFF	; 255
     a3e:	1a df       	rcall	.-460    	; 0x874 <ParseNumber>
     a40:	f6 01       	movw	r30, r12
     a42:	61 93       	st	Z+, r22
     a44:	7f 01       	movw	r14, r30
     a46:	19 81       	ldd	r17, Y+1	; 0x01
     a48:	f4 e0       	ldi	r31, 0x04	; 4
     a4a:	cf 0e       	add	r12, r31
     a4c:	d1 1c       	adc	r13, r1
     a4e:	e5 cf       	rjmp	.-54     	; 0xa1a <ParseIP+0x64>
     a50:	61 96       	adiw	r28, 0x11	; 17
     a52:	0f b6       	in	r0, 0x3f	; 63
     a54:	f8 94       	cli
     a56:	de bf       	out	0x3e, r29	; 62
     a58:	0f be       	out	0x3f, r0	; 63
     a5a:	cd bf       	out	0x3d, r28	; 61
     a5c:	df 91       	pop	r29
     a5e:	cf 91       	pop	r28
     a60:	1f 91       	pop	r17
     a62:	ff 90       	pop	r15
     a64:	ef 90       	pop	r14
     a66:	df 90       	pop	r13
     a68:	cf 90       	pop	r12
     a6a:	bf 90       	pop	r11
     a6c:	af 90       	pop	r10
     a6e:	08 95       	ret

00000a70 <ParseCIPSTA>:
     a70:	0f 93       	push	r16
     a72:	1f 93       	push	r17
     a74:	cf 93       	push	r28
     a76:	df 93       	push	r29
     a78:	ec 01       	movw	r28, r24
     a7a:	8b 01       	movw	r16, r22
     a7c:	4e e0       	ldi	r20, 0x0E	; 14
     a7e:	50 e0       	ldi	r21, 0x00	; 0
     a80:	8a e1       	ldi	r24, 0x1A	; 26
     a82:	92 e0       	ldi	r25, 0x02	; 2
     a84:	0e 94 97 17 	call	0x2f2e	; 0x2f2e <strncmp>
     a88:	89 2b       	or	r24, r25
     a8a:	09 f4       	brne	.+2      	; 0xa8e <ParseCIPSTA+0x1e>
     a8c:	6f c0       	rjmp	.+222    	; 0xb6c <ParseCIPSTA+0xfc>
     a8e:	43 e1       	ldi	r20, 0x13	; 19
     a90:	50 e0       	ldi	r21, 0x00	; 0
     a92:	b8 01       	movw	r22, r16
     a94:	89 e2       	ldi	r24, 0x29	; 41
     a96:	92 e0       	ldi	r25, 0x02	; 2
     a98:	0e 94 97 17 	call	0x2f2e	; 0x2f2e <strncmp>
     a9c:	89 2b       	or	r24, r25
     a9e:	09 f4       	brne	.+2      	; 0xaa2 <ParseCIPSTA+0x32>
     aa0:	79 c0       	rjmp	.+242    	; 0xb94 <ParseCIPSTA+0x124>
     aa2:	43 e1       	ldi	r20, 0x13	; 19
     aa4:	50 e0       	ldi	r21, 0x00	; 0
     aa6:	b8 01       	movw	r22, r16
     aa8:	8d e3       	ldi	r24, 0x3D	; 61
     aaa:	92 e0       	ldi	r25, 0x02	; 2
     aac:	0e 94 97 17 	call	0x2f2e	; 0x2f2e <strncmp>
     ab0:	89 2b       	or	r24, r25
     ab2:	09 f4       	brne	.+2      	; 0xab6 <ParseCIPSTA+0x46>
     ab4:	82 c0       	rjmp	.+260    	; 0xbba <ParseCIPSTA+0x14a>
     ab6:	4a e0       	ldi	r20, 0x0A	; 10
     ab8:	50 e0       	ldi	r21, 0x00	; 0
     aba:	b8 01       	movw	r22, r16
     abc:	81 e5       	ldi	r24, 0x51	; 81
     abe:	92 e0       	ldi	r25, 0x02	; 2
     ac0:	0e 94 97 17 	call	0x2f2e	; 0x2f2e <strncmp>
     ac4:	89 2b       	or	r24, r25
     ac6:	09 f4       	brne	.+2      	; 0xaca <ParseCIPSTA+0x5a>
     ac8:	53 c0       	rjmp	.+166    	; 0xb70 <ParseCIPSTA+0x100>
     aca:	4f e0       	ldi	r20, 0x0F	; 15
     acc:	50 e0       	ldi	r21, 0x00	; 0
     ace:	b8 01       	movw	r22, r16
     ad0:	8c e5       	ldi	r24, 0x5C	; 92
     ad2:	92 e0       	ldi	r25, 0x02	; 2
     ad4:	0e 94 97 17 	call	0x2f2e	; 0x2f2e <strncmp>
     ad8:	89 2b       	or	r24, r25
     ada:	09 f4       	brne	.+2      	; 0xade <ParseCIPSTA+0x6e>
     adc:	5d c0       	rjmp	.+186    	; 0xb98 <ParseCIPSTA+0x128>
     ade:	4f e0       	ldi	r20, 0x0F	; 15
     ae0:	50 e0       	ldi	r21, 0x00	; 0
     ae2:	b8 01       	movw	r22, r16
     ae4:	8c e6       	ldi	r24, 0x6C	; 108
     ae6:	92 e0       	ldi	r25, 0x02	; 2
     ae8:	0e 94 97 17 	call	0x2f2e	; 0x2f2e <strncmp>
     aec:	89 2b       	or	r24, r25
     aee:	09 f4       	brne	.+2      	; 0xaf2 <ParseCIPSTA+0x82>
     af0:	66 c0       	rjmp	.+204    	; 0xbbe <ParseCIPSTA+0x14e>
     af2:	4d e0       	ldi	r20, 0x0D	; 13
     af4:	50 e0       	ldi	r21, 0x00	; 0
     af6:	b8 01       	movw	r22, r16
     af8:	8c e7       	ldi	r24, 0x7C	; 124
     afa:	92 e0       	ldi	r25, 0x02	; 2
     afc:	0e 94 97 17 	call	0x2f2e	; 0x2f2e <strncmp>
     b00:	89 2b       	or	r24, r25
     b02:	09 f4       	brne	.+2      	; 0xb06 <ParseCIPSTA+0x96>
     b04:	6d c0       	rjmp	.+218    	; 0xbe0 <ParseCIPSTA+0x170>
     b06:	42 e1       	ldi	r20, 0x12	; 18
     b08:	50 e0       	ldi	r21, 0x00	; 0
     b0a:	b8 01       	movw	r22, r16
     b0c:	8a e8       	ldi	r24, 0x8A	; 138
     b0e:	92 e0       	ldi	r25, 0x02	; 2
     b10:	0e 94 97 17 	call	0x2f2e	; 0x2f2e <strncmp>
     b14:	89 2b       	or	r24, r25
     b16:	09 f4       	brne	.+2      	; 0xb1a <ParseCIPSTA+0xaa>
     b18:	76 c0       	rjmp	.+236    	; 0xc06 <ParseCIPSTA+0x196>
     b1a:	42 e1       	ldi	r20, 0x12	; 18
     b1c:	50 e0       	ldi	r21, 0x00	; 0
     b1e:	b8 01       	movw	r22, r16
     b20:	8d e9       	ldi	r24, 0x9D	; 157
     b22:	92 e0       	ldi	r25, 0x02	; 2
     b24:	0e 94 97 17 	call	0x2f2e	; 0x2f2e <strncmp>
     b28:	89 2b       	or	r24, r25
     b2a:	09 f4       	brne	.+2      	; 0xb2e <ParseCIPSTA+0xbe>
     b2c:	7f c0       	rjmp	.+254    	; 0xc2c <ParseCIPSTA+0x1bc>
     b2e:	49 e0       	ldi	r20, 0x09	; 9
     b30:	50 e0       	ldi	r21, 0x00	; 0
     b32:	b8 01       	movw	r22, r16
     b34:	80 eb       	ldi	r24, 0xB0	; 176
     b36:	92 e0       	ldi	r25, 0x02	; 2
     b38:	0e 94 97 17 	call	0x2f2e	; 0x2f2e <strncmp>
     b3c:	89 2b       	or	r24, r25
     b3e:	09 f4       	brne	.+2      	; 0xb42 <ParseCIPSTA+0xd2>
     b40:	51 c0       	rjmp	.+162    	; 0xbe4 <ParseCIPSTA+0x174>
     b42:	4e e0       	ldi	r20, 0x0E	; 14
     b44:	50 e0       	ldi	r21, 0x00	; 0
     b46:	b8 01       	movw	r22, r16
     b48:	8a eb       	ldi	r24, 0xBA	; 186
     b4a:	92 e0       	ldi	r25, 0x02	; 2
     b4c:	0e 94 97 17 	call	0x2f2e	; 0x2f2e <strncmp>
     b50:	89 2b       	or	r24, r25
     b52:	09 f4       	brne	.+2      	; 0xb56 <ParseCIPSTA+0xe6>
     b54:	5a c0       	rjmp	.+180    	; 0xc0a <ParseCIPSTA+0x19a>
     b56:	4e e0       	ldi	r20, 0x0E	; 14
     b58:	50 e0       	ldi	r21, 0x00	; 0
     b5a:	b8 01       	movw	r22, r16
     b5c:	89 ec       	ldi	r24, 0xC9	; 201
     b5e:	92 e0       	ldi	r25, 0x02	; 2
     b60:	0e 94 97 17 	call	0x2f2e	; 0x2f2e <strncmp>
     b64:	89 2b       	or	r24, r25
     b66:	09 f4       	brne	.+2      	; 0xb6a <ParseCIPSTA+0xfa>
     b68:	63 c0       	rjmp	.+198    	; 0xc30 <ParseCIPSTA+0x1c0>
     b6a:	72 c0       	rjmp	.+228    	; 0xc50 <ParseCIPSTA+0x1e0>
     b6c:	2e e0       	ldi	r18, 0x0E	; 14
     b6e:	01 c0       	rjmp	.+2      	; 0xb72 <ParseCIPSTA+0x102>
     b70:	2a e0       	ldi	r18, 0x0A	; 10
     b72:	be 01       	movw	r22, r28
     b74:	6d 52       	subi	r22, 0x2D	; 45
     b76:	7f 4f       	sbci	r23, 0xFF	; 255
     b78:	30 e0       	ldi	r19, 0x00	; 0
     b7a:	c9 01       	movw	r24, r18
     b7c:	02 96       	adiw	r24, 0x02	; 2
     b7e:	40 e0       	ldi	r20, 0x00	; 0
     b80:	50 e0       	ldi	r21, 0x00	; 0
     b82:	80 0f       	add	r24, r16
     b84:	91 1f       	adc	r25, r17
     b86:	17 df       	rcall	.-466    	; 0x9b6 <ParseIP>
     b88:	c3 5d       	subi	r28, 0xD3	; 211
     b8a:	de 4f       	sbci	r29, 0xFE	; 254
     b8c:	88 81       	ld	r24, Y
     b8e:	81 60       	ori	r24, 0x01	; 1
     b90:	88 83       	st	Y, r24
     b92:	5e c0       	rjmp	.+188    	; 0xc50 <ParseCIPSTA+0x1e0>
     b94:	83 e1       	ldi	r24, 0x13	; 19
     b96:	01 c0       	rjmp	.+2      	; 0xb9a <ParseCIPSTA+0x12a>
     b98:	8f e0       	ldi	r24, 0x0F	; 15
     b9a:	be 01       	movw	r22, r28
     b9c:	65 52       	subi	r22, 0x25	; 37
     b9e:	7f 4f       	sbci	r23, 0xFF	; 255
     ba0:	90 e0       	ldi	r25, 0x00	; 0
     ba2:	02 96       	adiw	r24, 0x02	; 2
     ba4:	40 e0       	ldi	r20, 0x00	; 0
     ba6:	50 e0       	ldi	r21, 0x00	; 0
     ba8:	80 0f       	add	r24, r16
     baa:	91 1f       	adc	r25, r17
     bac:	04 df       	rcall	.-504    	; 0x9b6 <ParseIP>
     bae:	c3 5d       	subi	r28, 0xD3	; 211
     bb0:	de 4f       	sbci	r29, 0xFE	; 254
     bb2:	88 81       	ld	r24, Y
     bb4:	82 60       	ori	r24, 0x02	; 2
     bb6:	88 83       	st	Y, r24
     bb8:	4b c0       	rjmp	.+150    	; 0xc50 <ParseCIPSTA+0x1e0>
     bba:	83 e1       	ldi	r24, 0x13	; 19
     bbc:	01 c0       	rjmp	.+2      	; 0xbc0 <ParseCIPSTA+0x150>
     bbe:	8f e0       	ldi	r24, 0x0F	; 15
     bc0:	be 01       	movw	r22, r28
     bc2:	69 52       	subi	r22, 0x29	; 41
     bc4:	7f 4f       	sbci	r23, 0xFF	; 255
     bc6:	90 e0       	ldi	r25, 0x00	; 0
     bc8:	02 96       	adiw	r24, 0x02	; 2
     bca:	40 e0       	ldi	r20, 0x00	; 0
     bcc:	50 e0       	ldi	r21, 0x00	; 0
     bce:	80 0f       	add	r24, r16
     bd0:	91 1f       	adc	r25, r17
     bd2:	f1 de       	rcall	.-542    	; 0x9b6 <ParseIP>
     bd4:	c3 5d       	subi	r28, 0xD3	; 211
     bd6:	de 4f       	sbci	r29, 0xFE	; 254
     bd8:	88 81       	ld	r24, Y
     bda:	84 60       	ori	r24, 0x04	; 4
     bdc:	88 83       	st	Y, r24
     bde:	38 c0       	rjmp	.+112    	; 0xc50 <ParseCIPSTA+0x1e0>
     be0:	8d e0       	ldi	r24, 0x0D	; 13
     be2:	01 c0       	rjmp	.+2      	; 0xbe6 <ParseCIPSTA+0x176>
     be4:	89 e0       	ldi	r24, 0x09	; 9
     be6:	be 01       	movw	r22, r28
     be8:	6b 51       	subi	r22, 0x1B	; 27
     bea:	7f 4f       	sbci	r23, 0xFF	; 255
     bec:	90 e0       	ldi	r25, 0x00	; 0
     bee:	02 96       	adiw	r24, 0x02	; 2
     bf0:	40 e0       	ldi	r20, 0x00	; 0
     bf2:	50 e0       	ldi	r21, 0x00	; 0
     bf4:	80 0f       	add	r24, r16
     bf6:	91 1f       	adc	r25, r17
     bf8:	de de       	rcall	.-580    	; 0x9b6 <ParseIP>
     bfa:	c3 5d       	subi	r28, 0xD3	; 211
     bfc:	de 4f       	sbci	r29, 0xFE	; 254
     bfe:	88 81       	ld	r24, Y
     c00:	80 61       	ori	r24, 0x10	; 16
     c02:	88 83       	st	Y, r24
     c04:	25 c0       	rjmp	.+74     	; 0xc50 <ParseCIPSTA+0x1e0>
     c06:	82 e1       	ldi	r24, 0x12	; 18
     c08:	01 c0       	rjmp	.+2      	; 0xc0c <ParseCIPSTA+0x19c>
     c0a:	8e e0       	ldi	r24, 0x0E	; 14
     c0c:	be 01       	movw	r22, r28
     c0e:	63 51       	subi	r22, 0x13	; 19
     c10:	7f 4f       	sbci	r23, 0xFF	; 255
     c12:	90 e0       	ldi	r25, 0x00	; 0
     c14:	02 96       	adiw	r24, 0x02	; 2
     c16:	40 e0       	ldi	r20, 0x00	; 0
     c18:	50 e0       	ldi	r21, 0x00	; 0
     c1a:	80 0f       	add	r24, r16
     c1c:	91 1f       	adc	r25, r17
     c1e:	cb de       	rcall	.-618    	; 0x9b6 <ParseIP>
     c20:	c3 5d       	subi	r28, 0xD3	; 211
     c22:	de 4f       	sbci	r29, 0xFE	; 254
     c24:	88 81       	ld	r24, Y
     c26:	80 62       	ori	r24, 0x20	; 32
     c28:	88 83       	st	Y, r24
     c2a:	12 c0       	rjmp	.+36     	; 0xc50 <ParseCIPSTA+0x1e0>
     c2c:	82 e1       	ldi	r24, 0x12	; 18
     c2e:	01 c0       	rjmp	.+2      	; 0xc32 <ParseCIPSTA+0x1c2>
     c30:	8e e0       	ldi	r24, 0x0E	; 14
     c32:	be 01       	movw	r22, r28
     c34:	67 51       	subi	r22, 0x17	; 23
     c36:	7f 4f       	sbci	r23, 0xFF	; 255
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	02 96       	adiw	r24, 0x02	; 2
     c3c:	40 e0       	ldi	r20, 0x00	; 0
     c3e:	50 e0       	ldi	r21, 0x00	; 0
     c40:	80 0f       	add	r24, r16
     c42:	91 1f       	adc	r25, r17
     c44:	b8 de       	rcall	.-656    	; 0x9b6 <ParseIP>
     c46:	c3 5d       	subi	r28, 0xD3	; 211
     c48:	de 4f       	sbci	r29, 0xFE	; 254
     c4a:	88 81       	ld	r24, Y
     c4c:	80 64       	ori	r24, 0x40	; 64
     c4e:	88 83       	st	Y, r24
     c50:	df 91       	pop	r29
     c52:	cf 91       	pop	r28
     c54:	1f 91       	pop	r17
     c56:	0f 91       	pop	r16
     c58:	08 95       	ret

00000c5a <ParseMAC>:
     c5a:	8f 92       	push	r8
     c5c:	9f 92       	push	r9
     c5e:	af 92       	push	r10
     c60:	bf 92       	push	r11
     c62:	cf 92       	push	r12
     c64:	df 92       	push	r13
     c66:	ef 92       	push	r14
     c68:	ff 92       	push	r15
     c6a:	0f 93       	push	r16
     c6c:	1f 93       	push	r17
     c6e:	cf 93       	push	r28
     c70:	df 93       	push	r29
     c72:	8b 01       	movw	r16, r22
     c74:	7a 01       	movw	r14, r20
     c76:	6d e8       	ldi	r22, 0x8D	; 141
     c78:	73 e0       	ldi	r23, 0x03	; 3
     c7a:	0e 94 75 17 	call	0x2eea	; 0x2eea <strtok>
     c7e:	00 97       	sbiw	r24, 0x00	; 0
     c80:	e1 f1       	breq	.+120    	; 0xcfa <ParseMAC+0xa0>
     c82:	e8 01       	movw	r28, r16
     c84:	0a 5f       	subi	r16, 0xFA	; 250
     c86:	1f 4f       	sbci	r17, 0xFF	; 255
     c88:	d1 2c       	mov	r13, r1
     c8a:	81 2c       	mov	r8, r1
     c8c:	91 2c       	mov	r9, r1
     c8e:	a1 2c       	mov	r10, r1
     c90:	b1 2c       	mov	r11, r1
     c92:	c1 2c       	mov	r12, r1
     c94:	28 2f       	mov	r18, r24
     c96:	e8 2f       	mov	r30, r24
     c98:	f9 2f       	mov	r31, r25
     c9a:	88 2d       	mov	r24, r8
     c9c:	99 2d       	mov	r25, r9
     c9e:	aa 2d       	mov	r26, r10
     ca0:	bb 2d       	mov	r27, r11
     ca2:	0d c0       	rjmp	.+26     	; 0xcbe <ParseMAC+0x64>
     ca4:	37 55       	subi	r19, 0x57	; 87
     ca6:	07 c0       	rjmp	.+14     	; 0xcb6 <ParseMAC+0x5c>
     ca8:	4f eb       	ldi	r20, 0xBF	; 191
     caa:	43 0f       	add	r20, r19
     cac:	46 30       	cpi	r20, 0x06	; 6
     cae:	10 f4       	brcc	.+4      	; 0xcb4 <ParseMAC+0x5a>
     cb0:	37 53       	subi	r19, 0x37	; 55
     cb2:	01 c0       	rjmp	.+2      	; 0xcb6 <ParseMAC+0x5c>
     cb4:	3c 2d       	mov	r19, r12
     cb6:	83 0f       	add	r24, r19
     cb8:	91 1d       	adc	r25, r1
     cba:	a1 1d       	adc	r26, r1
     cbc:	b1 1d       	adc	r27, r1
     cbe:	5e 2f       	mov	r21, r30
     cc0:	52 1b       	sub	r21, r18
     cc2:	31 91       	ld	r19, Z+
     cc4:	40 ed       	ldi	r20, 0xD0	; 208
     cc6:	43 0f       	add	r20, r19
     cc8:	4a 30       	cpi	r20, 0x0A	; 10
     cca:	78 f1       	brcs	.+94     	; 0xd2a <ParseMAC+0xd0>
     ccc:	4f e9       	ldi	r20, 0x9F	; 159
     cce:	43 0f       	add	r20, r19
     cd0:	46 30       	cpi	r20, 0x06	; 6
     cd2:	e8 f1       	brcs	.+122    	; 0xd4e <ParseMAC+0xf4>
     cd4:	4f eb       	ldi	r20, 0xBF	; 191
     cd6:	43 0f       	add	r20, r19
     cd8:	46 30       	cpi	r20, 0x06	; 6
     cda:	b0 f0       	brcs	.+44     	; 0xd08 <ParseMAC+0xae>
     cdc:	89 93       	st	Y+, r24
     cde:	d5 0e       	add	r13, r21
     ce0:	c0 17       	cp	r28, r16
     ce2:	d1 07       	cpc	r29, r17
     ce4:	59 f0       	breq	.+22     	; 0xcfc <ParseMAC+0xa2>
     ce6:	d3 94       	inc	r13
     ce8:	6d e8       	ldi	r22, 0x8D	; 141
     cea:	73 e0       	ldi	r23, 0x03	; 3
     cec:	80 e0       	ldi	r24, 0x00	; 0
     cee:	90 e0       	ldi	r25, 0x00	; 0
     cf0:	0e 94 75 17 	call	0x2eea	; 0x2eea <strtok>
     cf4:	00 97       	sbiw	r24, 0x00	; 0
     cf6:	71 f6       	brne	.-100    	; 0xc94 <ParseMAC+0x3a>
     cf8:	01 c0       	rjmp	.+2      	; 0xcfc <ParseMAC+0xa2>
     cfa:	d1 2c       	mov	r13, r1
     cfc:	e1 14       	cp	r14, r1
     cfe:	f1 04       	cpc	r15, r1
     d00:	e1 f1       	breq	.+120    	; 0xd7a <ParseMAC+0x120>
     d02:	f7 01       	movw	r30, r14
     d04:	d0 82       	st	Z, r13
     d06:	39 c0       	rjmp	.+114    	; 0xd7a <ParseMAC+0x120>
     d08:	88 0f       	add	r24, r24
     d0a:	99 1f       	adc	r25, r25
     d0c:	aa 1f       	adc	r26, r26
     d0e:	bb 1f       	adc	r27, r27
     d10:	88 0f       	add	r24, r24
     d12:	99 1f       	adc	r25, r25
     d14:	aa 1f       	adc	r26, r26
     d16:	bb 1f       	adc	r27, r27
     d18:	88 0f       	add	r24, r24
     d1a:	99 1f       	adc	r25, r25
     d1c:	aa 1f       	adc	r26, r26
     d1e:	bb 1f       	adc	r27, r27
     d20:	88 0f       	add	r24, r24
     d22:	99 1f       	adc	r25, r25
     d24:	aa 1f       	adc	r26, r26
     d26:	bb 1f       	adc	r27, r27
     d28:	bf cf       	rjmp	.-130    	; 0xca8 <ParseMAC+0x4e>
     d2a:	88 0f       	add	r24, r24
     d2c:	99 1f       	adc	r25, r25
     d2e:	aa 1f       	adc	r26, r26
     d30:	bb 1f       	adc	r27, r27
     d32:	88 0f       	add	r24, r24
     d34:	99 1f       	adc	r25, r25
     d36:	aa 1f       	adc	r26, r26
     d38:	bb 1f       	adc	r27, r27
     d3a:	88 0f       	add	r24, r24
     d3c:	99 1f       	adc	r25, r25
     d3e:	aa 1f       	adc	r26, r26
     d40:	bb 1f       	adc	r27, r27
     d42:	88 0f       	add	r24, r24
     d44:	99 1f       	adc	r25, r25
     d46:	aa 1f       	adc	r26, r26
     d48:	bb 1f       	adc	r27, r27
     d4a:	34 2f       	mov	r19, r20
     d4c:	b4 cf       	rjmp	.-152    	; 0xcb6 <ParseMAC+0x5c>
     d4e:	88 0f       	add	r24, r24
     d50:	99 1f       	adc	r25, r25
     d52:	aa 1f       	adc	r26, r26
     d54:	bb 1f       	adc	r27, r27
     d56:	88 0f       	add	r24, r24
     d58:	99 1f       	adc	r25, r25
     d5a:	aa 1f       	adc	r26, r26
     d5c:	bb 1f       	adc	r27, r27
     d5e:	88 0f       	add	r24, r24
     d60:	99 1f       	adc	r25, r25
     d62:	aa 1f       	adc	r26, r26
     d64:	bb 1f       	adc	r27, r27
     d66:	88 0f       	add	r24, r24
     d68:	99 1f       	adc	r25, r25
     d6a:	aa 1f       	adc	r26, r26
     d6c:	bb 1f       	adc	r27, r27
     d6e:	4f e9       	ldi	r20, 0x9F	; 159
     d70:	43 0f       	add	r20, r19
     d72:	46 30       	cpi	r20, 0x06	; 6
     d74:	08 f0       	brcs	.+2      	; 0xd78 <ParseMAC+0x11e>
     d76:	98 cf       	rjmp	.-208    	; 0xca8 <ParseMAC+0x4e>
     d78:	95 cf       	rjmp	.-214    	; 0xca4 <ParseMAC+0x4a>
     d7a:	df 91       	pop	r29
     d7c:	cf 91       	pop	r28
     d7e:	1f 91       	pop	r17
     d80:	0f 91       	pop	r16
     d82:	ff 90       	pop	r15
     d84:	ef 90       	pop	r14
     d86:	df 90       	pop	r13
     d88:	cf 90       	pop	r12
     d8a:	bf 90       	pop	r11
     d8c:	af 90       	pop	r10
     d8e:	9f 90       	pop	r9
     d90:	8f 90       	pop	r8
     d92:	08 95       	ret

00000d94 <ESP8266_Init>:
     d94:	cf 93       	push	r28
     d96:	df 93       	push	r29
     d98:	ec 01       	movw	r28, r24
     d9a:	1e 8a       	std	Y+22, r1	; 0x16
     d9c:	1f 8a       	std	Y+23, r1	; 0x17
     d9e:	18 8e       	std	Y+24, r1	; 0x18
     da0:	19 8e       	std	Y+25, r1	; 0x19
     da2:	46 e4       	ldi	r20, 0x46	; 70
     da4:	54 e1       	ldi	r21, 0x14	; 20
     da6:	60 e0       	ldi	r22, 0x00	; 0
     da8:	72 e0       	ldi	r23, 0x02	; 2
     daa:	88 e5       	ldi	r24, 0x58	; 88
     dac:	96 e1       	ldi	r25, 0x16	; 22
     dae:	dd d9       	rcall	.-3142   	; 0x16a <BUFFER_Init>
     db0:	88 23       	and	r24, r24
     db2:	29 f0       	breq	.+10     	; 0xdbe <ESP8266_Init+0x2a>
     db4:	cf 5c       	subi	r28, 0xCF	; 207
     db6:	de 4f       	sbci	r29, 0xFE	; 254
     db8:	85 e0       	ldi	r24, 0x05	; 5
     dba:	88 83       	st	Y, r24
     dbc:	11 c0       	rjmp	.+34     	; 0xde0 <ESP8266_Init+0x4c>
     dbe:	46 e4       	ldi	r20, 0x46	; 70
     dc0:	50 e1       	ldi	r21, 0x10	; 16
     dc2:	60 e0       	ldi	r22, 0x00	; 0
     dc4:	74 e0       	ldi	r23, 0x04	; 4
     dc6:	86 e4       	ldi	r24, 0x46	; 70
     dc8:	96 e1       	ldi	r25, 0x16	; 22
     dca:	cf d9       	rcall	.-3170   	; 0x16a <BUFFER_Init>
     dcc:	88 23       	and	r24, r24
     dce:	29 f0       	breq	.+10     	; 0xdda <ESP8266_Init+0x46>
     dd0:	cf 5c       	subi	r28, 0xCF	; 207
     dd2:	de 4f       	sbci	r29, 0xFE	; 254
     dd4:	85 e0       	ldi	r24, 0x05	; 5
     dd6:	88 83       	st	Y, r24
     dd8:	03 c0       	rjmp	.+6      	; 0xde0 <ESP8266_Init+0x4c>
     dda:	27 9a       	sbi	0x04, 7	; 4
     ddc:	2f 98       	cbi	0x05, 7	; 5
     dde:	ff cf       	rjmp	.-2      	; 0xdde <ESP8266_Init+0x4a>
     de0:	85 e0       	ldi	r24, 0x05	; 5
     de2:	df 91       	pop	r29
     de4:	cf 91       	pop	r28
     de6:	08 95       	ret

00000de8 <ESP8266_TimeUpdate>:
     de8:	0f 93       	push	r16
     dea:	1f 93       	push	r17
     dec:	fc 01       	movw	r30, r24
     dee:	06 85       	ldd	r16, Z+14	; 0x0e
     df0:	17 85       	ldd	r17, Z+15	; 0x0f
     df2:	20 89       	ldd	r18, Z+16	; 0x10
     df4:	31 89       	ldd	r19, Z+17	; 0x11
     df6:	40 0f       	add	r20, r16
     df8:	51 1f       	adc	r21, r17
     dfa:	62 1f       	adc	r22, r18
     dfc:	73 1f       	adc	r23, r19
     dfe:	46 87       	std	Z+14, r20	; 0x0e
     e00:	57 87       	std	Z+15, r21	; 0x0f
     e02:	60 8b       	std	Z+16, r22	; 0x10
     e04:	71 8b       	std	Z+17, r23	; 0x11
     e06:	1f 91       	pop	r17
     e08:	0f 91       	pop	r16
     e0a:	08 95       	ret

00000e0c <ESP8266_DataReceived>:
     e0c:	ab 01       	movw	r20, r22
     e0e:	bc 01       	movw	r22, r24
     e10:	86 e4       	ldi	r24, 0x46	; 70
     e12:	96 e1       	ldi	r25, 0x16	; 22
     e14:	1f ca       	rjmp	.-3010   	; 0x254 <BUFFER_Write>
     e16:	08 95       	ret

00000e18 <ESP8266_Callback_ServerConnectionActive>:
     e18:	08 95       	ret

00000e1a <ESP8266_Callback_ServerConnectionClosed>:
     e1a:	08 95       	ret

00000e1c <ESP8266_Callback_ServerConnectionDataReceived>:
     e1c:	08 95       	ret

00000e1e <ESP8266_Callback_ServerConnectionSendData>:
     e1e:	80 e0       	ldi	r24, 0x00	; 0
     e20:	90 e0       	ldi	r25, 0x00	; 0
     e22:	08 95       	ret

00000e24 <ESP8266_Callback_ServerConnectionDataSent>:
     e24:	08 95       	ret

00000e26 <CallConnectionCallbacks>:
     e26:	4f 92       	push	r4
     e28:	5f 92       	push	r5
     e2a:	6f 92       	push	r6
     e2c:	7f 92       	push	r7
     e2e:	af 92       	push	r10
     e30:	bf 92       	push	r11
     e32:	cf 92       	push	r12
     e34:	df 92       	push	r13
     e36:	ef 92       	push	r14
     e38:	ff 92       	push	r15
     e3a:	0f 93       	push	r16
     e3c:	1f 93       	push	r17
     e3e:	cf 93       	push	r28
     e40:	df 93       	push	r29
     e42:	6c 01       	movw	r12, r24
     e44:	ec 01       	movw	r28, r24
     e46:	6a 96       	adiw	r28, 0x1a	; 26
     e48:	7c 01       	movw	r14, r24
     e4a:	83 e3       	ldi	r24, 0x33	; 51
     e4c:	e8 0e       	add	r14, r24
     e4e:	f1 1c       	adc	r15, r1
     e50:	86 01       	movw	r16, r12
     e52:	04 5e       	subi	r16, 0xE4	; 228
     e54:	1f 4f       	sbci	r17, 0xFF	; 255
     e56:	56 01       	movw	r10, r12
     e58:	a5 ed       	ldi	r26, 0xD5	; 213
     e5a:	aa 0e       	add	r10, r26
     e5c:	b1 1c       	adc	r11, r1
     e5e:	6c 2f       	mov	r22, r28
     e60:	7d 2f       	mov	r23, r29
     e62:	98 81       	ld	r25, Y
     e64:	99 23       	and	r25, r25
     e66:	29 f1       	breq	.+74     	; 0xeb2 <CallConnectionCallbacks+0x8c>
     e68:	97 01       	movw	r18, r14
     e6a:	f7 01       	movw	r30, r14
     e6c:	80 81       	ld	r24, Z
     e6e:	88 23       	and	r24, r24
     e70:	01 f1       	breq	.+64     	; 0xeb2 <CallConnectionCallbacks+0x8c>
     e72:	d8 01       	movw	r26, r16
     e74:	8c 91       	ld	r24, X
     e76:	81 11       	cpse	r24, r1
     e78:	09 c0       	rjmp	.+18     	; 0xe8c <CallConnectionCallbacks+0x66>
     e7a:	f6 01       	movw	r30, r12
     e7c:	44 80       	ldd	r4, Z+4	; 0x04
     e7e:	55 80       	ldd	r5, Z+5	; 0x05
     e80:	66 80       	ldd	r6, Z+6	; 0x06
     e82:	77 80       	ldd	r7, Z+7	; 0x07
     e84:	45 28       	or	r4, r5
     e86:	46 28       	or	r4, r6
     e88:	47 28       	or	r4, r7
     e8a:	99 f4       	brne	.+38     	; 0xeb2 <CallConnectionCallbacks+0x8c>
     e8c:	f9 01       	movw	r30, r18
     e8e:	10 82       	st	Z, r1
     e90:	8c 91       	ld	r24, X
     e92:	88 23       	and	r24, r24
     e94:	41 f0       	breq	.+16     	; 0xea6 <CallConnectionCallbacks+0x80>
     e96:	52 96       	adiw	r26, 0x12	; 18
     e98:	4d 91       	ld	r20, X+
     e9a:	5c 91       	ld	r21, X
     e9c:	53 97       	sbiw	r26, 0x13	; 19
     e9e:	c6 01       	movw	r24, r12
     ea0:	0e 94 a9 15 	call	0x2b52	; 0x2b52 <ESP8266_Callback_ClientConnectionDataReceived>
     ea4:	06 c0       	rjmp	.+12     	; 0xeb2 <CallConnectionCallbacks+0x8c>
     ea6:	52 96       	adiw	r26, 0x12	; 18
     ea8:	4d 91       	ld	r20, X+
     eaa:	5c 91       	ld	r21, X
     eac:	53 97       	sbiw	r26, 0x13	; 19
     eae:	c6 01       	movw	r24, r12
     eb0:	b5 df       	rcall	.-150    	; 0xe1c <ESP8266_Callback_ServerConnectionDataReceived>
     eb2:	a5 96       	adiw	r28, 0x25	; 37
     eb4:	f5 e2       	ldi	r31, 0x25	; 37
     eb6:	ef 0e       	add	r14, r31
     eb8:	f1 1c       	adc	r15, r1
     eba:	0b 5d       	subi	r16, 0xDB	; 219
     ebc:	1f 4f       	sbci	r17, 0xFF	; 255
     ebe:	0a 15       	cp	r16, r10
     ec0:	1b 05       	cpc	r17, r11
     ec2:	69 f6       	brne	.-102    	; 0xe5e <CallConnectionCallbacks+0x38>
     ec4:	df 91       	pop	r29
     ec6:	cf 91       	pop	r28
     ec8:	1f 91       	pop	r17
     eca:	0f 91       	pop	r16
     ecc:	ff 90       	pop	r15
     ece:	ef 90       	pop	r14
     ed0:	df 90       	pop	r13
     ed2:	cf 90       	pop	r12
     ed4:	bf 90       	pop	r11
     ed6:	af 90       	pop	r10
     ed8:	7f 90       	pop	r7
     eda:	6f 90       	pop	r6
     edc:	5f 90       	pop	r5
     ede:	4f 90       	pop	r4
     ee0:	08 95       	ret

00000ee2 <ParseReceived>:
     ee2:	2f 92       	push	r2
     ee4:	3f 92       	push	r3
     ee6:	4f 92       	push	r4
     ee8:	5f 92       	push	r5
     eea:	6f 92       	push	r6
     eec:	7f 92       	push	r7
     eee:	8f 92       	push	r8
     ef0:	9f 92       	push	r9
     ef2:	af 92       	push	r10
     ef4:	bf 92       	push	r11
     ef6:	cf 92       	push	r12
     ef8:	df 92       	push	r13
     efa:	ef 92       	push	r14
     efc:	ff 92       	push	r15
     efe:	0f 93       	push	r16
     f00:	1f 93       	push	r17
     f02:	cf 93       	push	r28
     f04:	df 93       	push	r29
     f06:	1f 92       	push	r1
     f08:	1f 92       	push	r1
     f0a:	cd b7       	in	r28, 0x3d	; 61
     f0c:	de b7       	in	r29, 0x3e	; 62
     f0e:	8c 01       	movw	r16, r24
     f10:	6b 01       	movw	r12, r22
     f12:	54 2e       	mov	r5, r20
     f14:	49 01       	movw	r8, r18
     f16:	fc 01       	movw	r30, r24
     f18:	86 85       	ldd	r24, Z+14	; 0x0e
     f1a:	97 85       	ldd	r25, Z+15	; 0x0f
     f1c:	a0 89       	ldd	r26, Z+16	; 0x10
     f1e:	b1 89       	ldd	r27, Z+17	; 0x11
     f20:	82 8b       	std	Z+18, r24	; 0x12
     f22:	93 8b       	std	Z+19, r25	; 0x13
     f24:	a4 8b       	std	Z+20, r26	; 0x14
     f26:	b5 8b       	std	Z+21, r27	; 0x15
     f28:	22 30       	cpi	r18, 0x02	; 2
     f2a:	31 05       	cpc	r19, r1
     f2c:	49 f4       	brne	.+18     	; 0xf40 <ParseReceived+0x5e>
     f2e:	db 01       	movw	r26, r22
     f30:	8c 91       	ld	r24, X
     f32:	8d 30       	cpi	r24, 0x0D	; 13
     f34:	29 f4       	brne	.+10     	; 0xf40 <ParseReceived+0x5e>
     f36:	11 96       	adiw	r26, 0x01	; 1
     f38:	8c 91       	ld	r24, X
     f3a:	8a 30       	cpi	r24, 0x0A	; 10
     f3c:	09 f4       	brne	.+2      	; 0xf40 <ParseReceived+0x5e>
     f3e:	95 c6       	rjmp	.+3370   	; 0x1c6a <ParseReceived+0xd88>
     f40:	f8 01       	movw	r30, r16
     f42:	84 81       	ldd	r24, Z+4	; 0x04
     f44:	95 81       	ldd	r25, Z+5	; 0x05
     f46:	a6 81       	ldd	r26, Z+6	; 0x06
     f48:	b7 81       	ldd	r27, Z+7	; 0x07
     f4a:	89 2b       	or	r24, r25
     f4c:	8a 2b       	or	r24, r26
     f4e:	8b 2b       	or	r24, r27
     f50:	09 f4       	brne	.+2      	; 0xf54 <ParseReceived+0x72>
     f52:	46 c0       	rjmp	.+140    	; 0xfe0 <ParseReceived+0xfe>
     f54:	55 20       	and	r5, r5
     f56:	09 f4       	brne	.+2      	; 0xf5a <ParseReceived+0x78>
     f58:	43 c0       	rjmp	.+134    	; 0xfe0 <ParseReceived+0xfe>
     f5a:	6d ed       	ldi	r22, 0xDD	; 221
     f5c:	72 e0       	ldi	r23, 0x02	; 2
     f5e:	c6 01       	movw	r24, r12
     f60:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
     f64:	89 2b       	or	r24, r25
     f66:	e1 f1       	breq	.+120    	; 0xfe0 <ParseReceived+0xfe>
     f68:	68 ed       	ldi	r22, 0xD8	; 216
     f6a:	72 e0       	ldi	r23, 0x02	; 2
     f6c:	c6 01       	movw	r24, r12
     f6e:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
     f72:	89 2b       	or	r24, r25
     f74:	a9 f1       	breq	.+106    	; 0xfe0 <ParseReceived+0xfe>
     f76:	62 ee       	ldi	r22, 0xE2	; 226
     f78:	72 e0       	ldi	r23, 0x02	; 2
     f7a:	c6 01       	movw	r24, r12
     f7c:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
     f80:	89 2b       	or	r24, r25
     f82:	71 f1       	breq	.+92     	; 0xfe0 <ParseReceived+0xfe>
     f84:	6a ee       	ldi	r22, 0xEA	; 234
     f86:	72 e0       	ldi	r23, 0x02	; 2
     f88:	c6 01       	movw	r24, r12
     f8a:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
     f8e:	89 2b       	or	r24, r25
     f90:	71 f1       	breq	.+92     	; 0xfee <ParseReceived+0x10c>
     f92:	62 ef       	ldi	r22, 0xF2	; 242
     f94:	72 e0       	ldi	r23, 0x02	; 2
     f96:	c6 01       	movw	r24, r12
     f98:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
     f9c:	89 2b       	or	r24, r25
     f9e:	51 f1       	breq	.+84     	; 0xff4 <ParseReceived+0x112>
     fa0:	45 e0       	ldi	r20, 0x05	; 5
     fa2:	50 e0       	ldi	r21, 0x00	; 0
     fa4:	6e ef       	ldi	r22, 0xFE	; 254
     fa6:	72 e0       	ldi	r23, 0x02	; 2
     fa8:	c6 01       	movw	r24, r12
     faa:	0e 94 97 17 	call	0x2f2e	; 0x2f2e <strncmp>
     fae:	89 2b       	or	r24, r25
     fb0:	09 f1       	breq	.+66     	; 0xff4 <ParseReceived+0x112>
     fb2:	d8 01       	movw	r26, r16
     fb4:	18 96       	adiw	r26, 0x08	; 8
     fb6:	6d 91       	ld	r22, X+
     fb8:	7c 91       	ld	r23, X
     fba:	19 97       	sbiw	r26, 0x09	; 9
     fbc:	fb 01       	movw	r30, r22
     fbe:	01 90       	ld	r0, Z+
     fc0:	00 20       	and	r0, r0
     fc2:	e9 f7       	brne	.-6      	; 0xfbe <ParseReceived+0xdc>
     fc4:	31 97       	sbiw	r30, 0x01	; 1
     fc6:	af 01       	movw	r20, r30
     fc8:	46 1b       	sub	r20, r22
     fca:	57 0b       	sbc	r21, r23
     fcc:	c6 01       	movw	r24, r12
     fce:	0e 94 97 17 	call	0x2f2e	; 0x2f2e <strncmp>
     fd2:	89 2b       	or	r24, r25
     fd4:	79 f0       	breq	.+30     	; 0xff4 <ParseReceived+0x112>
     fd6:	b6 01       	movw	r22, r12
     fd8:	88 e5       	ldi	r24, 0x58	; 88
     fda:	96 e1       	ldi	r25, 0x16	; 22
     fdc:	d6 db       	rcall	.-2132   	; 0x78a <BUFFER_WriteString>
     fde:	45 c6       	rjmp	.+3210   	; 0x1c6a <ParseReceived+0xd88>
     fe0:	6a ee       	ldi	r22, 0xEA	; 234
     fe2:	72 e0       	ldi	r23, 0x02	; 2
     fe4:	c6 01       	movw	r24, r12
     fe6:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
     fea:	89 2b       	or	r24, r25
     fec:	19 f4       	brne	.+6      	; 0xff4 <ParseReceived+0x112>
     fee:	c8 01       	movw	r24, r16
     ff0:	0e 94 ea 14 	call	0x29d4	; 0x29d4 <ESP8266_Callback_DeviceReady>
     ff4:	64 e0       	ldi	r22, 0x04	; 4
     ff6:	73 e0       	ldi	r23, 0x03	; 3
     ff8:	c6 01       	movw	r24, r12
     ffa:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
     ffe:	89 2b       	or	r24, r25
    1000:	19 f4       	brne	.+6      	; 0x1008 <ParseReceived+0x126>
    1002:	c8 01       	movw	r24, r16
    1004:	0e 94 ee 14 	call	0x29dc	; 0x29dc <ESP8266_Callback_WatchdogReset>
    1008:	c8 01       	movw	r24, r16
    100a:	0d df       	rcall	.-486    	; 0xe26 <CallConnectionCallbacks>
    100c:	60 e1       	ldi	r22, 0x10	; 16
    100e:	73 e0       	ldi	r23, 0x03	; 3
    1010:	c6 01       	movw	r24, r12
    1012:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
    1016:	89 2b       	or	r24, r25
    1018:	51 f4       	brne	.+20     	; 0x102e <ParseReceived+0x14c>
    101a:	f8 01       	movw	r30, r16
    101c:	e3 5d       	subi	r30, 0xD3	; 211
    101e:	fe 4f       	sbci	r31, 0xFE	; 254
    1020:	81 81       	ldd	r24, Z+1	; 0x01
    1022:	84 60       	ori	r24, 0x04	; 4
    1024:	81 83       	std	Z+1, r24	; 0x01
    1026:	c8 01       	movw	r24, r16
    1028:	0e 94 f6 14 	call	0x29ec	; 0x29ec <ESP8266_Callback_WifiConnected>
    102c:	3a c0       	rjmp	.+116    	; 0x10a2 <ParseReceived+0x1c0>
    102e:	61 e2       	ldi	r22, 0x21	; 33
    1030:	73 e0       	ldi	r23, 0x03	; 3
    1032:	c6 01       	movw	r24, r12
    1034:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
    1038:	89 2b       	or	r24, r25
    103a:	c1 f4       	brne	.+48     	; 0x106c <ParseReceived+0x18a>
    103c:	f8 01       	movw	r30, r16
    103e:	e3 5d       	subi	r30, 0xD3	; 211
    1040:	fe 4f       	sbci	r31, 0xFE	; 254
    1042:	81 81       	ldd	r24, Z+1	; 0x01
    1044:	8b 7f       	andi	r24, 0xFB	; 251
    1046:	87 7f       	andi	r24, 0xF7	; 247
    1048:	81 83       	std	Z+1, r24	; 0x01
    104a:	89 e1       	ldi	r24, 0x19	; 25
    104c:	b5 97       	sbiw	r30, 0x25	; 37
    104e:	df 01       	movw	r26, r30
    1050:	1d 92       	st	X+, r1
    1052:	8a 95       	dec	r24
    1054:	e9 f7       	brne	.-6      	; 0x1050 <ParseReceived+0x16e>
    1056:	89 eb       	ldi	r24, 0xB9	; 185
    1058:	ee 5e       	subi	r30, 0xEE	; 238
    105a:	f1 09       	sbc	r31, r1
    105c:	df 01       	movw	r26, r30
    105e:	1d 92       	st	X+, r1
    1060:	8a 95       	dec	r24
    1062:	e9 f7       	brne	.-6      	; 0x105e <ParseReceived+0x17c>
    1064:	c8 01       	movw	r24, r16
    1066:	0e 94 f2 14 	call	0x29e4	; 0x29e4 <ESP8266_Callback_WifiDisconnected>
    106a:	1b c0       	rjmp	.+54     	; 0x10a2 <ParseReceived+0x1c0>
    106c:	63 e3       	ldi	r22, 0x33	; 51
    106e:	73 e0       	ldi	r23, 0x03	; 3
    1070:	c6 01       	movw	r24, r12
    1072:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
    1076:	89 2b       	or	r24, r25
    1078:	51 f4       	brne	.+20     	; 0x108e <ParseReceived+0x1ac>
    107a:	f8 01       	movw	r30, r16
    107c:	e3 5d       	subi	r30, 0xD3	; 211
    107e:	fe 4f       	sbci	r31, 0xFE	; 254
    1080:	81 81       	ldd	r24, Z+1	; 0x01
    1082:	88 60       	ori	r24, 0x08	; 8
    1084:	81 83       	std	Z+1, r24	; 0x01
    1086:	c8 01       	movw	r24, r16
    1088:	0e 94 0a 15 	call	0x2a14	; 0x2a14 <ESP8266_Callback_WifiGotIP>
    108c:	0a c0       	rjmp	.+20     	; 0x10a2 <ParseReceived+0x1c0>
    108e:	61 e4       	ldi	r22, 0x41	; 65
    1090:	73 e0       	ldi	r23, 0x03	; 3
    1092:	c6 01       	movw	r24, r12
    1094:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
    1098:	89 2b       	or	r24, r25
    109a:	19 f4       	brne	.+6      	; 0x10a2 <ParseReceived+0x1c0>
    109c:	c8 01       	movw	r24, r16
    109e:	0e 94 40 15 	call	0x2a80	; 0x2a80 <ESP8266_Callback_DHCPTimeout>
    10a2:	68 ed       	ldi	r22, 0xD8	; 216
    10a4:	72 e0       	ldi	r23, 0x02	; 2
    10a6:	c6 01       	movw	r24, r12
    10a8:	0e 94 a5 17 	call	0x2f4a	; 0x2f4a <strstr>
    10ac:	89 2b       	or	r24, r25
    10ae:	09 f4       	brne	.+2      	; 0x10b2 <ParseReceived+0x1d0>
    10b0:	c9 c5       	rjmp	.+2962   	; 0x1c44 <ParseReceived+0xd62>
    10b2:	f8 01       	movw	r30, r16
    10b4:	14 82       	std	Z+4, r1	; 0x04
    10b6:	15 82       	std	Z+5, r1	; 0x05
    10b8:	16 82       	std	Z+6, r1	; 0x06
    10ba:	17 82       	std	Z+7, r1	; 0x07
    10bc:	78 01       	movw	r14, r16
    10be:	fd e2       	ldi	r31, 0x2D	; 45
    10c0:	ef 0e       	add	r14, r31
    10c2:	f1 1c       	adc	r15, r1
    10c4:	58 01       	movw	r10, r16
    10c6:	2a e1       	ldi	r18, 0x1A	; 26
    10c8:	a2 0e       	add	r10, r18
    10ca:	b1 1c       	adc	r11, r1
    10cc:	38 01       	movw	r6, r16
    10ce:	86 ee       	ldi	r24, 0xE6	; 230
    10d0:	68 0e       	add	r6, r24
    10d2:	71 1c       	adc	r7, r1
    10d4:	d7 01       	movw	r26, r14
    10d6:	8c 91       	ld	r24, X
    10d8:	88 23       	and	r24, r24
    10da:	71 f0       	breq	.+28     	; 0x10f8 <ParseReceived+0x216>
    10dc:	1c 92       	st	X, r1
    10de:	f7 01       	movw	r30, r14
    10e0:	71 97       	sbiw	r30, 0x11	; 17
    10e2:	80 81       	ld	r24, Z
    10e4:	88 23       	and	r24, r24
    10e6:	29 f0       	breq	.+10     	; 0x10f2 <ParseReceived+0x210>
    10e8:	b5 01       	movw	r22, r10
    10ea:	c8 01       	movw	r24, r16
    10ec:	0e 94 a5 15 	call	0x2b4a	; 0x2b4a <ESP8266_Callback_ClientConnectionDataSent>
    10f0:	03 c0       	rjmp	.+6      	; 0x10f8 <ParseReceived+0x216>
    10f2:	b5 01       	movw	r22, r10
    10f4:	c8 01       	movw	r24, r16
    10f6:	96 de       	rcall	.-724    	; 0xe24 <ESP8266_Callback_ServerConnectionDataSent>
    10f8:	b5 e2       	ldi	r27, 0x25	; 37
    10fa:	eb 0e       	add	r14, r27
    10fc:	f1 1c       	adc	r15, r1
    10fe:	e5 e2       	ldi	r30, 0x25	; 37
    1100:	ae 0e       	add	r10, r30
    1102:	b1 1c       	adc	r11, r1
    1104:	e6 14       	cp	r14, r6
    1106:	f7 04       	cpc	r15, r7
    1108:	29 f7       	brne	.-54     	; 0x10d4 <ParseReceived+0x1f2>
    110a:	9c c5       	rjmp	.+2872   	; 0x1c44 <ParseReceived+0xd62>
    110c:	a1 2c       	mov	r10, r1
    110e:	b1 2c       	mov	r11, r1
    1110:	73 01       	movw	r14, r6
    1112:	ea 0c       	add	r14, r10
    1114:	fb 1c       	adc	r15, r11
    1116:	ec 0c       	add	r14, r12
    1118:	fd 1c       	adc	r15, r13
    111a:	4a e0       	ldi	r20, 0x0A	; 10
    111c:	50 e0       	ldi	r21, 0x00	; 0
    111e:	6e e4       	ldi	r22, 0x4E	; 78
    1120:	73 e0       	ldi	r23, 0x03	; 3
    1122:	c7 01       	movw	r24, r14
    1124:	0e 94 78 17 	call	0x2ef0	; 0x2ef0 <memcmp>
    1128:	89 2b       	or	r24, r25
    112a:	21 f4       	brne	.+8      	; 0x1134 <ParseReceived+0x252>
    112c:	e1 14       	cp	r14, r1
    112e:	f1 04       	cpc	r15, r1
    1130:	41 f4       	brne	.+16     	; 0x1142 <ParseReceived+0x260>
    1132:	34 c0       	rjmp	.+104    	; 0x119c <ParseReceived+0x2ba>
    1134:	ff ef       	ldi	r31, 0xFF	; 255
    1136:	af 1a       	sub	r10, r31
    1138:	bf 0a       	sbc	r11, r31
    113a:	a8 14       	cp	r10, r8
    113c:	b9 04       	cpc	r11, r9
    113e:	41 f7       	brne	.-48     	; 0x1110 <ParseReceived+0x22e>
    1140:	2d c0       	rjmp	.+90     	; 0x119c <ParseReceived+0x2ba>
    1142:	d7 01       	movw	r26, r14
    1144:	8e 91       	ld	r24, -X
    1146:	90 e0       	ldi	r25, 0x00	; 0
    1148:	c0 97       	sbiw	r24, 0x30	; 48
    114a:	25 e2       	ldi	r18, 0x25	; 37
    114c:	28 9f       	mul	r18, r24
    114e:	f0 01       	movw	r30, r0
    1150:	29 9f       	mul	r18, r25
    1152:	f0 0d       	add	r31, r0
    1154:	11 24       	eor	r1, r1
    1156:	bf 01       	movw	r22, r30
    1158:	66 5e       	subi	r22, 0xE6	; 230
    115a:	7f 4f       	sbci	r23, 0xFF	; 255
    115c:	60 0f       	add	r22, r16
    115e:	71 1f       	adc	r23, r17
    1160:	e0 0f       	add	r30, r16
    1162:	f1 1f       	adc	r31, r17
    1164:	81 e0       	ldi	r24, 0x01	; 1
    1166:	82 8f       	std	Z+26, r24	; 0x1a
    1168:	8c 91       	ld	r24, X
    116a:	80 53       	subi	r24, 0x30	; 48
    116c:	83 8f       	std	Z+27, r24	; 0x1b
    116e:	84 8d       	ldd	r24, Z+28	; 0x1c
    1170:	88 23       	and	r24, r24
    1172:	89 f0       	breq	.+34     	; 0x1196 <ParseReceived+0x2b4>
    1174:	f8 01       	movw	r30, r16
    1176:	84 81       	ldd	r24, Z+4	; 0x04
    1178:	95 81       	ldd	r25, Z+5	; 0x05
    117a:	a6 81       	ldd	r26, Z+6	; 0x06
    117c:	b7 81       	ldd	r27, Z+7	; 0x07
    117e:	0a 97       	sbiw	r24, 0x0a	; 10
    1180:	a1 05       	cpc	r26, r1
    1182:	b1 05       	cpc	r27, r1
    1184:	21 f4       	brne	.+8      	; 0x118e <ParseReceived+0x2ac>
    1186:	14 82       	std	Z+4, r1	; 0x04
    1188:	15 82       	std	Z+5, r1	; 0x05
    118a:	16 82       	std	Z+6, r1	; 0x06
    118c:	17 82       	std	Z+7, r1	; 0x07
    118e:	c8 01       	movw	r24, r16
    1190:	0e 94 44 15 	call	0x2a88	; 0x2a88 <ESP8266_Callback_ClientConnectionConnected>
    1194:	e0 c0       	rjmp	.+448    	; 0x1356 <ParseReceived+0x474>
    1196:	c8 01       	movw	r24, r16
    1198:	3f de       	rcall	.-898    	; 0xe18 <ESP8266_Callback_ServerConnectionActive>
    119a:	dd c0       	rjmp	.+442    	; 0x1356 <ParseReceived+0x474>
    119c:	69 e5       	ldi	r22, 0x59	; 89
    119e:	73 e0       	ldi	r23, 0x03	; 3
    11a0:	c6 01       	movw	r24, r12
    11a2:	0e 94 a5 17 	call	0x2f4a	; 0x2f4a <strstr>
    11a6:	89 2b       	or	r24, r25
    11a8:	09 f0       	breq	.+2      	; 0x11ac <ParseReceived+0x2ca>
    11aa:	d5 c0       	rjmp	.+426    	; 0x1356 <ParseReceived+0x474>
    11ac:	ba e0       	ldi	r27, 0x0A	; 10
    11ae:	8b 16       	cp	r8, r27
    11b0:	91 04       	cpc	r9, r1
    11b2:	08 f4       	brcc	.+2      	; 0x11b6 <ParseReceived+0x2d4>
    11b4:	8e c0       	rjmp	.+284    	; 0x12d2 <ParseReceived+0x3f0>
    11b6:	34 01       	movw	r6, r8
    11b8:	e9 e0       	ldi	r30, 0x09	; 9
    11ba:	6e 1a       	sub	r6, r30
    11bc:	71 08       	sbc	r7, r1
    11be:	81 14       	cp	r8, r1
    11c0:	91 04       	cpc	r9, r1
    11c2:	09 f4       	brne	.+2      	; 0x11c6 <ParseReceived+0x2e4>
    11c4:	c8 c0       	rjmp	.+400    	; 0x1356 <ParseReceived+0x474>
    11c6:	a1 2c       	mov	r10, r1
    11c8:	b1 2c       	mov	r11, r1
    11ca:	73 01       	movw	r14, r6
    11cc:	ea 0c       	add	r14, r10
    11ce:	fb 1c       	adc	r15, r11
    11d0:	ec 0c       	add	r14, r12
    11d2:	fd 1c       	adc	r15, r13
    11d4:	49 e0       	ldi	r20, 0x09	; 9
    11d6:	50 e0       	ldi	r21, 0x00	; 0
    11d8:	6d e6       	ldi	r22, 0x6D	; 109
    11da:	73 e0       	ldi	r23, 0x03	; 3
    11dc:	c7 01       	movw	r24, r14
    11de:	0e 94 78 17 	call	0x2ef0	; 0x2ef0 <memcmp>
    11e2:	89 2b       	or	r24, r25
    11e4:	21 f4       	brne	.+8      	; 0x11ee <ParseReceived+0x30c>
    11e6:	c7 01       	movw	r24, r14
    11e8:	89 2b       	or	r24, r25
    11ea:	41 f4       	brne	.+16     	; 0x11fc <ParseReceived+0x31a>
    11ec:	72 c0       	rjmp	.+228    	; 0x12d2 <ParseReceived+0x3f0>
    11ee:	ff ef       	ldi	r31, 0xFF	; 255
    11f0:	af 1a       	sub	r10, r31
    11f2:	bf 0a       	sbc	r11, r31
    11f4:	a8 14       	cp	r10, r8
    11f6:	b9 04       	cpc	r11, r9
    11f8:	41 f7       	brne	.-48     	; 0x11ca <ParseReceived+0x2e8>
    11fa:	6b c0       	rjmp	.+214    	; 0x12d2 <ParseReceived+0x3f0>
    11fc:	ce 14       	cp	r12, r14
    11fe:	df 04       	cpc	r13, r15
    1200:	09 f4       	brne	.+2      	; 0x1204 <ParseReceived+0x322>
    1202:	67 c0       	rjmp	.+206    	; 0x12d2 <ParseReceived+0x3f0>
    1204:	96 01       	movw	r18, r12
    1206:	2f 5f       	subi	r18, 0xFF	; 255
    1208:	3f 4f       	sbci	r19, 0xFF	; 255
    120a:	e2 16       	cp	r14, r18
    120c:	f3 06       	cpc	r15, r19
    120e:	09 f0       	breq	.+2      	; 0x1212 <ParseReceived+0x330>
    1210:	56 c0       	rjmp	.+172    	; 0x12be <ParseReceived+0x3dc>
    1212:	d6 01       	movw	r26, r12
    1214:	8c 91       	ld	r24, X
    1216:	90 e0       	ldi	r25, 0x00	; 0
    1218:	c0 97       	sbiw	r24, 0x30	; 48
    121a:	25 e2       	ldi	r18, 0x25	; 37
    121c:	28 9f       	mul	r18, r24
    121e:	f0 01       	movw	r30, r0
    1220:	29 9f       	mul	r18, r25
    1222:	f0 0d       	add	r31, r0
    1224:	11 24       	eor	r1, r1
    1226:	e0 0f       	add	r30, r16
    1228:	f1 1f       	adc	r31, r17
    122a:	34 8d       	ldd	r19, Z+28	; 0x1c
    122c:	42 8d       	ldd	r20, Z+26	; 0x1a
    122e:	12 8e       	std	Z+26, r1	; 0x1a
    1230:	8c 91       	ld	r24, X
    1232:	90 e0       	ldi	r25, 0x00	; 0
    1234:	c0 97       	sbiw	r24, 0x30	; 48
    1236:	28 9f       	mul	r18, r24
    1238:	f0 01       	movw	r30, r0
    123a:	29 9f       	mul	r18, r25
    123c:	f0 0d       	add	r31, r0
    123e:	11 24       	eor	r1, r1
    1240:	e0 0f       	add	r30, r16
    1242:	f1 1f       	adc	r31, r17
    1244:	14 8e       	std	Z+28, r1	; 0x1c
    1246:	8c 91       	ld	r24, X
    1248:	90 e0       	ldi	r25, 0x00	; 0
    124a:	c0 97       	sbiw	r24, 0x30	; 48
    124c:	28 9f       	mul	r18, r24
    124e:	f0 01       	movw	r30, r0
    1250:	29 9f       	mul	r18, r25
    1252:	f0 0d       	add	r31, r0
    1254:	11 24       	eor	r1, r1
    1256:	e0 0f       	add	r30, r16
    1258:	f1 1f       	adc	r31, r17
    125a:	15 ae       	std	Z+61, r1	; 0x3d
    125c:	8c 91       	ld	r24, X
    125e:	90 e0       	ldi	r25, 0x00	; 0
    1260:	c0 97       	sbiw	r24, 0x30	; 48
    1262:	28 9f       	mul	r18, r24
    1264:	f0 01       	movw	r30, r0
    1266:	29 9f       	mul	r18, r25
    1268:	f0 0d       	add	r31, r0
    126a:	11 24       	eor	r1, r1
    126c:	e0 0f       	add	r30, r16
    126e:	f1 1f       	adc	r31, r17
    1270:	14 ae       	std	Z+60, r1	; 0x3c
    1272:	44 23       	and	r20, r20
    1274:	09 f4       	brne	.+2      	; 0x1278 <ParseReceived+0x396>
    1276:	6f c0       	rjmp	.+222    	; 0x1356 <ParseReceived+0x474>
    1278:	33 23       	and	r19, r19
    127a:	81 f0       	breq	.+32     	; 0x129c <ParseReceived+0x3ba>
    127c:	8c 91       	ld	r24, X
    127e:	90 e0       	ldi	r25, 0x00	; 0
    1280:	c0 97       	sbiw	r24, 0x30	; 48
    1282:	28 9f       	mul	r18, r24
    1284:	b0 01       	movw	r22, r0
    1286:	29 9f       	mul	r18, r25
    1288:	70 0d       	add	r23, r0
    128a:	11 24       	eor	r1, r1
    128c:	66 5e       	subi	r22, 0xE6	; 230
    128e:	7f 4f       	sbci	r23, 0xFF	; 255
    1290:	60 0f       	add	r22, r16
    1292:	71 1f       	adc	r23, r17
    1294:	c8 01       	movw	r24, r16
    1296:	0e 94 ee 15 	call	0x2bdc	; 0x2bdc <ESP8266_Callback_ClientConnectionClosed>
    129a:	5d c0       	rjmp	.+186    	; 0x1356 <ParseReceived+0x474>
    129c:	f6 01       	movw	r30, r12
    129e:	80 81       	ld	r24, Z
    12a0:	90 e0       	ldi	r25, 0x00	; 0
    12a2:	c0 97       	sbiw	r24, 0x30	; 48
    12a4:	25 e2       	ldi	r18, 0x25	; 37
    12a6:	28 9f       	mul	r18, r24
    12a8:	b0 01       	movw	r22, r0
    12aa:	29 9f       	mul	r18, r25
    12ac:	70 0d       	add	r23, r0
    12ae:	11 24       	eor	r1, r1
    12b0:	66 5e       	subi	r22, 0xE6	; 230
    12b2:	7f 4f       	sbci	r23, 0xFF	; 255
    12b4:	60 0f       	add	r22, r16
    12b6:	71 1f       	adc	r23, r17
    12b8:	c8 01       	movw	r24, r16
    12ba:	af dd       	rcall	.-1186   	; 0xe1a <ESP8266_Callback_ServerConnectionClosed>
    12bc:	4c c0       	rjmp	.+152    	; 0x1356 <ParseReceived+0x474>
    12be:	b7 01       	movw	r22, r14
    12c0:	61 50       	subi	r22, 0x01	; 1
    12c2:	71 09       	sbc	r23, r1
    12c4:	4a e0       	ldi	r20, 0x0A	; 10
    12c6:	50 e0       	ldi	r21, 0x00	; 0
    12c8:	88 e5       	ldi	r24, 0x58	; 88
    12ca:	96 e1       	ldi	r25, 0x16	; 22
    12cc:	0e 94 2a 01 	call	0x254	; 0x254 <BUFFER_Write>
    12d0:	42 c0       	rjmp	.+132    	; 0x1356 <ParseReceived+0x474>
    12d2:	f1 e1       	ldi	r31, 0x11	; 17
    12d4:	8f 16       	cp	r8, r31
    12d6:	91 04       	cpc	r9, r1
    12d8:	f0 f1       	brcs	.+124    	; 0x1356 <ParseReceived+0x474>
    12da:	67 e7       	ldi	r22, 0x77	; 119
    12dc:	73 e0       	ldi	r23, 0x03	; 3
    12de:	c4 01       	movw	r24, r8
    12e0:	0f 97       	sbiw	r24, 0x0f	; 15
    12e2:	8c 0d       	add	r24, r12
    12e4:	9d 1d       	adc	r25, r13
    12e6:	0e 94 a5 17 	call	0x2f4a	; 0x2f4a <strstr>
    12ea:	00 97       	sbiw	r24, 0x00	; 0
    12ec:	a1 f1       	breq	.+104    	; 0x1356 <ParseReceived+0x474>
    12ee:	dc 01       	movw	r26, r24
    12f0:	8e 91       	ld	r24, -X
    12f2:	90 e0       	ldi	r25, 0x00	; 0
    12f4:	c0 97       	sbiw	r24, 0x30	; 48
    12f6:	25 e2       	ldi	r18, 0x25	; 37
    12f8:	28 9f       	mul	r18, r24
    12fa:	f0 01       	movw	r30, r0
    12fc:	29 9f       	mul	r18, r25
    12fe:	f0 0d       	add	r31, r0
    1300:	11 24       	eor	r1, r1
    1302:	e0 0f       	add	r30, r16
    1304:	f1 1f       	adc	r31, r17
    1306:	12 8e       	std	Z+26, r1	; 0x1a
    1308:	14 8e       	std	Z+28, r1	; 0x1c
    130a:	15 ae       	std	Z+61, r1	; 0x3d
    130c:	14 ae       	std	Z+60, r1	; 0x3c
    130e:	2c 91       	ld	r18, X
    1310:	20 53       	subi	r18, 0x30	; 48
    1312:	23 8f       	std	Z+27, r18	; 0x1b
    1314:	20 e0       	ldi	r18, 0x00	; 0
    1316:	22 23       	and	r18, r18
    1318:	f1 f0       	breq	.+60     	; 0x1356 <ParseReceived+0x474>
    131a:	d8 01       	movw	r26, r16
    131c:	14 96       	adiw	r26, 0x04	; 4
    131e:	4d 91       	ld	r20, X+
    1320:	5d 91       	ld	r21, X+
    1322:	6d 91       	ld	r22, X+
    1324:	7c 91       	ld	r23, X
    1326:	17 97       	sbiw	r26, 0x07	; 7
    1328:	4a 30       	cpi	r20, 0x0A	; 10
    132a:	51 05       	cpc	r21, r1
    132c:	61 05       	cpc	r22, r1
    132e:	71 05       	cpc	r23, r1
    1330:	29 f4       	brne	.+10     	; 0x133c <ParseReceived+0x45a>
    1332:	f8 01       	movw	r30, r16
    1334:	14 82       	std	Z+4, r1	; 0x04
    1336:	15 82       	std	Z+5, r1	; 0x05
    1338:	16 82       	std	Z+6, r1	; 0x06
    133a:	17 82       	std	Z+7, r1	; 0x07
    133c:	25 e2       	ldi	r18, 0x25	; 37
    133e:	28 9f       	mul	r18, r24
    1340:	b0 01       	movw	r22, r0
    1342:	29 9f       	mul	r18, r25
    1344:	70 0d       	add	r23, r0
    1346:	11 24       	eor	r1, r1
    1348:	66 5e       	subi	r22, 0xE6	; 230
    134a:	7f 4f       	sbci	r23, 0xFF	; 255
    134c:	60 0f       	add	r22, r16
    134e:	71 1f       	adc	r23, r17
    1350:	c8 01       	movw	r24, r16
    1352:	0e 94 5f 15 	call	0x2abe	; 0x2abe <ESP8266_Callback_ClientConnectionError>
    1356:	45 e0       	ldi	r20, 0x05	; 5
    1358:	50 e0       	ldi	r21, 0x00	; 0
    135a:	6e ef       	ldi	r22, 0xFE	; 254
    135c:	72 e0       	ldi	r23, 0x02	; 2
    135e:	c6 01       	movw	r24, r12
    1360:	0e 94 97 17 	call	0x2f2e	; 0x2f2e <strncmp>
    1364:	89 2b       	or	r24, r25
    1366:	09 f0       	breq	.+2      	; 0x136a <ParseReceived+0x488>
    1368:	3c c1       	rjmp	.+632    	; 0x15e2 <ParseReceived+0x700>
    136a:	81 e0       	ldi	r24, 0x01	; 1
    136c:	f8 01       	movw	r30, r16
    136e:	ef 5f       	subi	r30, 0xFF	; 255
    1370:	fe 4f       	sbci	r31, 0xFE	; 254
    1372:	80 83       	st	Z, r24
    1374:	36 96       	adiw	r30, 0x06	; 6
    1376:	50 82       	st	Z, r5
    1378:	d6 01       	movw	r26, r12
    137a:	15 96       	adiw	r26, 0x05	; 5
    137c:	8c 91       	ld	r24, X
    137e:	80 53       	subi	r24, 0x30	; 48
    1380:	31 97       	sbiw	r30, 0x01	; 1
    1382:	80 83       	st	Z, r24
    1384:	e8 2e       	mov	r14, r24
    1386:	f1 2c       	mov	r15, r1
    1388:	58 01       	movw	r10, r16
    138a:	b5 e2       	ldi	r27, 0x25	; 37
    138c:	8b 9f       	mul	r24, r27
    138e:	a0 0c       	add	r10, r0
    1390:	b1 1c       	adc	r11, r1
    1392:	11 24       	eor	r1, r1
    1394:	22 e9       	ldi	r18, 0x92	; 146
    1396:	3a e0       	ldi	r19, 0x0A	; 10
    1398:	f5 01       	movw	r30, r10
    139a:	37 a7       	std	Z+47, r19	; 0x2f
    139c:	26 a7       	std	Z+46, r18	; 0x2e
    139e:	83 8f       	std	Z+27, r24	; 0x1b
    13a0:	be 01       	movw	r22, r28
    13a2:	6f 5f       	subi	r22, 0xFF	; 255
    13a4:	7f 4f       	sbci	r23, 0xFF	; 255
    13a6:	c6 01       	movw	r24, r12
    13a8:	07 96       	adiw	r24, 0x07	; 7
    13aa:	64 da       	rcall	.-2872   	; 0x874 <ParseNumber>
    13ac:	d5 01       	movw	r26, r10
    13ae:	94 96       	adiw	r26, 0x24	; 36
    13b0:	6d 93       	st	X+, r22
    13b2:	7d 93       	st	X+, r23
    13b4:	8d 93       	st	X+, r24
    13b6:	9c 93       	st	X, r25
    13b8:	97 97       	sbiw	r26, 0x27	; 39
    13ba:	98 96       	adiw	r26, 0x28	; 40
    13bc:	8d 91       	ld	r24, X+
    13be:	9d 91       	ld	r25, X+
    13c0:	0d 90       	ld	r0, X+
    13c2:	bc 91       	ld	r27, X
    13c4:	a0 2d       	mov	r26, r0
    13c6:	89 2b       	or	r24, r25
    13c8:	8a 2b       	or	r24, r26
    13ca:	8b 2b       	or	r24, r27
    13cc:	61 f4       	brne	.+24     	; 0x13e6 <ParseReceived+0x504>
    13ce:	85 e2       	ldi	r24, 0x25	; 37
    13d0:	8e 9d       	mul	r24, r14
    13d2:	f0 01       	movw	r30, r0
    13d4:	8f 9d       	mul	r24, r15
    13d6:	f0 0d       	add	r31, r0
    13d8:	11 24       	eor	r1, r1
    13da:	e0 0f       	add	r30, r16
    13dc:	f1 1f       	adc	r31, r17
    13de:	14 ae       	std	Z+60, r1	; 0x3c
    13e0:	81 e0       	ldi	r24, 0x01	; 1
    13e2:	85 af       	std	Z+61, r24	; 0x3d
    13e4:	09 c0       	rjmp	.+18     	; 0x13f8 <ParseReceived+0x516>
    13e6:	85 e2       	ldi	r24, 0x25	; 37
    13e8:	8e 9d       	mul	r24, r14
    13ea:	f0 01       	movw	r30, r0
    13ec:	8f 9d       	mul	r24, r15
    13ee:	f0 0d       	add	r31, r0
    13f0:	11 24       	eor	r1, r1
    13f2:	e0 0f       	add	r30, r16
    13f4:	f1 1f       	adc	r31, r17
    13f6:	15 ae       	std	Z+61, r1	; 0x3d
    13f8:	85 e2       	ldi	r24, 0x25	; 37
    13fa:	8e 9d       	mul	r24, r14
    13fc:	b0 01       	movw	r22, r0
    13fe:	8f 9d       	mul	r24, r15
    1400:	70 0d       	add	r23, r0
    1402:	11 24       	eor	r1, r1
    1404:	58 01       	movw	r10, r16
    1406:	a6 0e       	add	r10, r22
    1408:	b7 1e       	adc	r11, r23
    140a:	f5 01       	movw	r30, r10
    140c:	44 a0       	ldd	r4, Z+36	; 0x24
    140e:	55 a0       	ldd	r5, Z+37	; 0x25
    1410:	66 a0       	ldd	r6, Z+38	; 0x26
    1412:	77 a0       	ldd	r7, Z+39	; 0x27
    1414:	80 a5       	ldd	r24, Z+40	; 0x28
    1416:	91 a5       	ldd	r25, Z+41	; 0x29
    1418:	a2 a5       	ldd	r26, Z+42	; 0x2a
    141a:	b3 a5       	ldd	r27, Z+43	; 0x2b
    141c:	84 0d       	add	r24, r4
    141e:	95 1d       	adc	r25, r5
    1420:	a6 1d       	adc	r26, r6
    1422:	b7 1d       	adc	r27, r7
    1424:	80 a7       	std	Z+40, r24	; 0x28
    1426:	91 a7       	std	Z+41, r25	; 0x29
    1428:	a2 a7       	std	Z+42, r26	; 0x2a
    142a:	b3 a7       	std	Z+43, r27	; 0x2b
    142c:	f8 01       	movw	r30, r16
    142e:	ed 5d       	subi	r30, 0xDD	; 221
    1430:	fe 4f       	sbci	r31, 0xFE	; 254
    1432:	80 81       	ld	r24, Z
    1434:	91 81       	ldd	r25, Z+1	; 0x01
    1436:	a2 81       	ldd	r26, Z+2	; 0x02
    1438:	b3 81       	ldd	r27, Z+3	; 0x03
    143a:	84 0d       	add	r24, r4
    143c:	95 1d       	adc	r25, r5
    143e:	a6 1d       	adc	r26, r6
    1440:	b7 1d       	adc	r27, r7
    1442:	80 83       	st	Z, r24
    1444:	91 83       	std	Z+1, r25	; 0x01
    1446:	a2 83       	std	Z+2, r26	; 0x02
    1448:	b3 83       	std	Z+3, r27	; 0x03
    144a:	89 81       	ldd	r24, Y+1	; 0x01
    144c:	90 e0       	ldi	r25, 0x00	; 0
    144e:	01 96       	adiw	r24, 0x01	; 1
    1450:	09 2e       	mov	r0, r25
    1452:	00 0c       	add	r0, r0
    1454:	aa 0b       	sbc	r26, r26
    1456:	bb 0b       	sbc	r27, r27
    1458:	2c 01       	movw	r4, r24
    145a:	3d 01       	movw	r6, r26
    145c:	e7 e0       	ldi	r30, 0x07	; 7
    145e:	4e 0e       	add	r4, r30
    1460:	51 1c       	adc	r5, r1
    1462:	61 1c       	adc	r6, r1
    1464:	71 1c       	adc	r7, r1
    1466:	61 5e       	subi	r22, 0xE1	; 225
    1468:	7f 4f       	sbci	r23, 0xFF	; 255
    146a:	60 0f       	add	r22, r16
    146c:	71 1f       	adc	r23, r17
    146e:	c6 01       	movw	r24, r12
    1470:	84 0d       	add	r24, r4
    1472:	95 1d       	adc	r25, r5
    1474:	ae 01       	movw	r20, r28
    1476:	4f 5f       	subi	r20, 0xFF	; 255
    1478:	5f 4f       	sbci	r21, 0xFF	; 255
    147a:	9d da       	rcall	.-2758   	; 0x9b6 <ParseIP>
    147c:	89 81       	ldd	r24, Y+1	; 0x01
    147e:	90 e0       	ldi	r25, 0x00	; 0
    1480:	01 96       	adiw	r24, 0x01	; 1
    1482:	09 2e       	mov	r0, r25
    1484:	00 0c       	add	r0, r0
    1486:	aa 0b       	sbc	r26, r26
    1488:	bb 0b       	sbc	r27, r27
    148a:	84 0d       	add	r24, r4
    148c:	95 1d       	adc	r25, r5
    148e:	a6 1d       	adc	r26, r6
    1490:	b7 1d       	adc	r27, r7
    1492:	8c 0d       	add	r24, r12
    1494:	9d 1d       	adc	r25, r13
    1496:	be 01       	movw	r22, r28
    1498:	6f 5f       	subi	r22, 0xFF	; 255
    149a:	7f 4f       	sbci	r23, 0xFF	; 255
    149c:	eb d9       	rcall	.-3114   	; 0x874 <ParseNumber>
    149e:	d5 01       	movw	r26, r10
    14a0:	5e 96       	adiw	r26, 0x1e	; 30
    14a2:	7c 93       	st	X, r23
    14a4:	6e 93       	st	-X, r22
    14a6:	5d 97       	sbiw	r26, 0x1d	; 29
    14a8:	f6 01       	movw	r30, r12
    14aa:	80 81       	ld	r24, Z
    14ac:	8a 33       	cpi	r24, 0x3A	; 58
    14ae:	d1 f0       	breq	.+52     	; 0x14e4 <ParseReceived+0x602>
    14b0:	a4 01       	movw	r20, r8
    14b2:	60 e0       	ldi	r22, 0x00	; 0
    14b4:	70 e0       	ldi	r23, 0x00	; 0
    14b6:	41 15       	cp	r20, r1
    14b8:	51 05       	cpc	r21, r1
    14ba:	61 05       	cpc	r22, r1
    14bc:	71 05       	cpc	r23, r1
    14be:	b1 f0       	breq	.+44     	; 0x14ec <ParseReceived+0x60a>
    14c0:	31 96       	adiw	r30, 0x01	; 1
    14c2:	41 2c       	mov	r4, r1
    14c4:	51 2c       	mov	r5, r1
    14c6:	32 01       	movw	r6, r4
    14c8:	2f ef       	ldi	r18, 0xFF	; 255
    14ca:	42 1a       	sub	r4, r18
    14cc:	52 0a       	sbc	r5, r18
    14ce:	62 0a       	sbc	r6, r18
    14d0:	72 0a       	sbc	r7, r18
    14d2:	81 91       	ld	r24, Z+
    14d4:	8a 33       	cpi	r24, 0x3A	; 58
    14d6:	69 f0       	breq	.+26     	; 0x14f2 <ParseReceived+0x610>
    14d8:	44 16       	cp	r4, r20
    14da:	55 06       	cpc	r5, r21
    14dc:	66 06       	cpc	r6, r22
    14de:	77 06       	cpc	r7, r23
    14e0:	98 f3       	brcs	.-26     	; 0x14c8 <ParseReceived+0x5e6>
    14e2:	07 c0       	rjmp	.+14     	; 0x14f2 <ParseReceived+0x610>
    14e4:	41 2c       	mov	r4, r1
    14e6:	51 2c       	mov	r5, r1
    14e8:	32 01       	movw	r6, r4
    14ea:	03 c0       	rjmp	.+6      	; 0x14f2 <ParseReceived+0x610>
    14ec:	41 2c       	mov	r4, r1
    14ee:	51 2c       	mov	r5, r1
    14f0:	32 01       	movw	r6, r4
    14f2:	8f ef       	ldi	r24, 0xFF	; 255
    14f4:	48 1a       	sub	r4, r24
    14f6:	58 0a       	sbc	r5, r24
    14f8:	68 0a       	sbc	r6, r24
    14fa:	78 0a       	sbc	r7, r24
    14fc:	85 e2       	ldi	r24, 0x25	; 37
    14fe:	8e 9d       	mul	r24, r14
    1500:	f0 01       	movw	r30, r0
    1502:	8f 9d       	mul	r24, r15
    1504:	f0 0d       	add	r31, r0
    1506:	11 24       	eor	r1, r1
    1508:	e0 0f       	add	r30, r16
    150a:	f1 1f       	adc	r31, r17
    150c:	44 a1       	ldd	r20, Z+36	; 0x24
    150e:	55 a1       	ldd	r21, Z+37	; 0x25
    1510:	66 a1       	ldd	r22, Z+38	; 0x26
    1512:	77 a1       	ldd	r23, Z+39	; 0x27
    1514:	c4 01       	movw	r24, r8
    1516:	a0 e0       	ldi	r26, 0x00	; 0
    1518:	b0 e0       	ldi	r27, 0x00	; 0
    151a:	84 19       	sub	r24, r4
    151c:	95 09       	sbc	r25, r5
    151e:	a6 09       	sbc	r26, r6
    1520:	b7 09       	sbc	r27, r7
    1522:	48 17       	cp	r20, r24
    1524:	59 07       	cpc	r21, r25
    1526:	6a 07       	cpc	r22, r26
    1528:	7b 07       	cpc	r23, r27
    152a:	18 f4       	brcc	.+6      	; 0x1532 <ParseReceived+0x650>
    152c:	42 01       	movw	r8, r4
    152e:	84 0e       	add	r8, r20
    1530:	95 1e       	adc	r9, r21
    1532:	54 01       	movw	r10, r8
    1534:	a4 18       	sub	r10, r4
    1536:	b5 08       	sbc	r11, r5
    1538:	85 e2       	ldi	r24, 0x25	; 37
    153a:	8e 9d       	mul	r24, r14
    153c:	10 01       	movw	r2, r0
    153e:	8f 9d       	mul	r24, r15
    1540:	30 0c       	add	r3, r0
    1542:	11 24       	eor	r1, r1
    1544:	20 0e       	add	r2, r16
    1546:	31 1e       	adc	r3, r17
    1548:	a5 01       	movw	r20, r10
    154a:	b6 01       	movw	r22, r12
    154c:	64 0d       	add	r22, r4
    154e:	75 1d       	adc	r23, r5
    1550:	d1 01       	movw	r26, r2
    1552:	9e 96       	adiw	r26, 0x2e	; 46
    1554:	8d 91       	ld	r24, X+
    1556:	9c 91       	ld	r25, X
    1558:	9f 97       	sbiw	r26, 0x2f	; 47
    155a:	0e 94 85 17 	call	0x2f0a	; 0x2f0a <memcpy>
    155e:	f1 01       	movw	r30, r2
    1560:	44 a1       	ldd	r20, Z+36	; 0x24
    1562:	55 a1       	ldd	r21, Z+37	; 0x25
    1564:	66 a1       	ldd	r22, Z+38	; 0x26
    1566:	77 a1       	ldd	r23, Z+39	; 0x27
    1568:	c4 01       	movw	r24, r8
    156a:	a0 e0       	ldi	r26, 0x00	; 0
    156c:	b0 e0       	ldi	r27, 0x00	; 0
    156e:	84 19       	sub	r24, r4
    1570:	95 09       	sbc	r25, r5
    1572:	a6 09       	sbc	r26, r6
    1574:	b7 09       	sbc	r27, r7
    1576:	48 17       	cp	r20, r24
    1578:	59 07       	cpc	r21, r25
    157a:	6a 07       	cpc	r22, r26
    157c:	7b 07       	cpc	r23, r27
    157e:	38 f4       	brcc	.+14     	; 0x158e <ParseReceived+0x6ac>
    1580:	f1 01       	movw	r30, r2
    1582:	86 a5       	ldd	r24, Z+46	; 0x2e
    1584:	97 a5       	ldd	r25, Z+47	; 0x2f
    1586:	fc 01       	movw	r30, r24
    1588:	e4 0f       	add	r30, r20
    158a:	f5 1f       	adc	r31, r21
    158c:	10 82       	st	Z, r1
    158e:	f8 01       	movw	r30, r16
    1590:	ec 5f       	subi	r30, 0xFC	; 252
    1592:	fe 4f       	sbci	r31, 0xFE	; 254
    1594:	b1 82       	std	Z+1, r11	; 0x01
    1596:	a0 82       	st	Z, r10
    1598:	32 97       	sbiw	r30, 0x02	; 2
    159a:	b1 82       	std	Z+1, r11	; 0x01
    159c:	a0 82       	st	Z, r10
    159e:	85 e2       	ldi	r24, 0x25	; 37
    15a0:	8e 9d       	mul	r24, r14
    15a2:	f0 01       	movw	r30, r0
    15a4:	8f 9d       	mul	r24, r15
    15a6:	f0 0d       	add	r31, r0
    15a8:	11 24       	eor	r1, r1
    15aa:	e0 0f       	add	r30, r16
    15ac:	f1 1f       	adc	r31, r17
    15ae:	84 a1       	ldd	r24, Z+36	; 0x24
    15b0:	95 a1       	ldd	r25, Z+37	; 0x25
    15b2:	a6 a1       	ldd	r26, Z+38	; 0x26
    15b4:	b7 a1       	ldd	r27, Z+39	; 0x27
    15b6:	48 16       	cp	r4, r24
    15b8:	59 06       	cpc	r5, r25
    15ba:	6a 06       	cpc	r6, r26
    15bc:	7b 06       	cpc	r7, r27
    15be:	88 f0       	brcs	.+34     	; 0x15e2 <ParseReceived+0x700>
    15c0:	f8 01       	movw	r30, r16
    15c2:	ef 5f       	subi	r30, 0xFF	; 255
    15c4:	fe 4f       	sbci	r31, 0xFE	; 254
    15c6:	10 82       	st	Z, r1
    15c8:	85 e2       	ldi	r24, 0x25	; 37
    15ca:	8e 9d       	mul	r24, r14
    15cc:	f0 01       	movw	r30, r0
    15ce:	8f 9d       	mul	r24, r15
    15d0:	f0 0d       	add	r31, r0
    15d2:	11 24       	eor	r1, r1
    15d4:	e0 0f       	add	r30, r16
    15d6:	f1 1f       	adc	r31, r17
    15d8:	51 aa       	std	Z+49, r5	; 0x31
    15da:	40 aa       	std	Z+48, r4	; 0x30
    15dc:	81 e0       	ldi	r24, 0x01	; 1
    15de:	82 ab       	std	Z+50, r24	; 0x32
    15e0:	83 ab       	std	Z+51, r24	; 0x33
    15e2:	f8 01       	movw	r30, r16
    15e4:	84 81       	ldd	r24, Z+4	; 0x04
    15e6:	95 81       	ldd	r25, Z+5	; 0x05
    15e8:	a6 81       	ldd	r26, Z+6	; 0x06
    15ea:	b7 81       	ldd	r27, Z+7	; 0x07
    15ec:	fc 01       	movw	r30, r24
    15ee:	31 97       	sbiw	r30, 0x01	; 1
    15f0:	e1 32       	cpi	r30, 0x21	; 33
    15f2:	f1 05       	cpc	r31, r1
    15f4:	08 f0       	brcs	.+2      	; 0x15f8 <ParseReceived+0x716>
    15f6:	b6 c2       	rjmp	.+1388   	; 0x1b64 <ParseReceived+0xc82>
    15f8:	88 27       	eor	r24, r24
    15fa:	ee 58       	subi	r30, 0x8E	; 142
    15fc:	ff 4f       	sbci	r31, 0xFF	; 255
    15fe:	8f 4f       	sbci	r24, 0xFF	; 255
    1600:	0c 94 40 16 	jmp	0x2c80	; 0x2c80 <__tablejump2__>
    1604:	47 e0       	ldi	r20, 0x07	; 7
    1606:	50 e0       	ldi	r21, 0x00	; 0
    1608:	67 e8       	ldi	r22, 0x87	; 135
    160a:	73 e0       	ldi	r23, 0x03	; 3
    160c:	c6 01       	movw	r24, r12
    160e:	0e 94 97 17 	call	0x2f2e	; 0x2f2e <strncmp>
    1612:	89 2b       	or	r24, r25
    1614:	91 f4       	brne	.+36     	; 0x163a <ParseReceived+0x758>
    1616:	f8 01       	movw	r30, r16
    1618:	a0 85       	ldd	r26, Z+8	; 0x08
    161a:	b1 85       	ldd	r27, Z+9	; 0x09
    161c:	87 e0       	ldi	r24, 0x07	; 7
    161e:	e0 e8       	ldi	r30, 0x80	; 128
    1620:	f3 e0       	ldi	r31, 0x03	; 3
    1622:	01 90       	ld	r0, Z+
    1624:	0d 92       	st	X+, r0
    1626:	8a 95       	dec	r24
    1628:	e1 f7       	brne	.-8      	; 0x1622 <ParseReceived+0x740>
    162a:	f8 01       	movw	r30, r16
    162c:	ef 5d       	subi	r30, 0xDF	; 223
    162e:	fe 4f       	sbci	r31, 0xFE	; 254
    1630:	d6 01       	movw	r26, r12
    1632:	17 96       	adiw	r26, 0x07	; 7
    1634:	8c 91       	ld	r24, X
    1636:	80 53       	subi	r24, 0x30	; 48
    1638:	80 83       	st	Z, r24
    163a:	6d ed       	ldi	r22, 0xDD	; 221
    163c:	72 e0       	ldi	r23, 0x02	; 2
    163e:	c6 01       	movw	r24, r12
    1640:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
    1644:	89 2b       	or	r24, r25
    1646:	09 f0       	breq	.+2      	; 0x164a <ParseReceived+0x768>
    1648:	db c2       	rjmp	.+1462   	; 0x1c00 <ParseReceived+0xd1e>
    164a:	f8 01       	movw	r30, r16
    164c:	14 82       	std	Z+4, r1	; 0x04
    164e:	15 82       	std	Z+5, r1	; 0x05
    1650:	16 82       	std	Z+6, r1	; 0x06
    1652:	17 82       	std	Z+7, r1	; 0x07
    1654:	60 e8       	ldi	r22, 0x80	; 128
    1656:	73 e0       	ldi	r23, 0x03	; 3
    1658:	c6 01       	movw	r24, r12
    165a:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
    165e:	89 2b       	or	r24, r25
    1660:	09 f0       	breq	.+2      	; 0x1664 <ParseReceived+0x782>
    1662:	80 c2       	rjmp	.+1280   	; 0x1b64 <ParseReceived+0xc82>
    1664:	d8 01       	movw	r26, r16
    1666:	14 96       	adiw	r26, 0x04	; 4
    1668:	1d 92       	st	X+, r1
    166a:	1d 92       	st	X+, r1
    166c:	1d 92       	st	X+, r1
    166e:	1c 92       	st	X, r1
    1670:	17 97       	sbiw	r26, 0x07	; 7
    1672:	c8 01       	movw	r24, r16
    1674:	0e 94 fa 14 	call	0x29f4	; 0x29f4 <ESP8266_Callback_WifiConnectFailed>
    1678:	75 c2       	rjmp	.+1258   	; 0x1b64 <ParseReceived+0xc82>
    167a:	4b e0       	ldi	r20, 0x0B	; 11
    167c:	50 e0       	ldi	r21, 0x00	; 0
    167e:	6f e8       	ldi	r22, 0x8F	; 143
    1680:	73 e0       	ldi	r23, 0x03	; 3
    1682:	c6 01       	movw	r24, r12
    1684:	0e 94 97 17 	call	0x2f2e	; 0x2f2e <strncmp>
    1688:	89 2b       	or	r24, r25
    168a:	09 f0       	breq	.+2      	; 0x168e <ParseReceived+0x7ac>
    168c:	66 c0       	rjmp	.+204    	; 0x175a <ParseReceived+0x878>
    168e:	6b e9       	ldi	r22, 0x9B	; 155
    1690:	73 e0       	ldi	r23, 0x03	; 3
    1692:	c6 01       	movw	r24, r12
    1694:	0e 94 a5 17 	call	0x2f4a	; 0x2f4a <strstr>
    1698:	89 2b       	or	r24, r25
    169a:	09 f4       	brne	.+2      	; 0x169e <ParseReceived+0x7bc>
    169c:	5e c0       	rjmp	.+188    	; 0x175a <ParseReceived+0x878>
    169e:	f6 01       	movw	r30, r12
    16a0:	80 81       	ld	r24, Z
    16a2:	88 23       	and	r24, r24
    16a4:	09 f4       	brne	.+2      	; 0x16a8 <ParseReceived+0x7c6>
    16a6:	59 c0       	rjmp	.+178    	; 0x175a <ParseReceived+0x878>
    16a8:	82 32       	cpi	r24, 0x22	; 34
    16aa:	09 f4       	brne	.+2      	; 0x16ae <ParseReceived+0x7cc>
    16ac:	b1 c2       	rjmp	.+1378   	; 0x1c10 <ParseReceived+0xd2e>
    16ae:	31 96       	adiw	r30, 0x01	; 1
    16b0:	df 01       	movw	r26, r30
    16b2:	81 91       	ld	r24, Z+
    16b4:	88 23       	and	r24, r24
    16b6:	09 f4       	brne	.+2      	; 0x16ba <ParseReceived+0x7d8>
    16b8:	50 c0       	rjmp	.+160    	; 0x175a <ParseReceived+0x878>
    16ba:	82 32       	cpi	r24, 0x22	; 34
    16bc:	c9 f7       	brne	.-14     	; 0x16b0 <ParseReceived+0x7ce>
    16be:	a9 c2       	rjmp	.+1362   	; 0x1c12 <ParseReceived+0xd30>
    16c0:	61 e0       	ldi	r22, 0x01	; 1
    16c2:	69 0f       	add	r22, r25
    16c4:	af 01       	movw	r20, r30
    16c6:	d8 01       	movw	r26, r16
    16c8:	a9 0f       	add	r26, r25
    16ca:	b1 1d       	adc	r27, r1
    16cc:	a8 5f       	subi	r26, 0xF8	; 248
    16ce:	be 4f       	sbci	r27, 0xFE	; 254
    16d0:	8c 93       	st	X, r24
    16d2:	81 91       	ld	r24, Z+
    16d4:	2f 5f       	subi	r18, 0xFF	; 255
    16d6:	3f 4f       	sbci	r19, 0xFF	; 255
    16d8:	88 23       	and	r24, r24
    16da:	81 f0       	breq	.+32     	; 0x16fc <ParseReceived+0x81a>
    16dc:	96 2f       	mov	r25, r22
    16de:	af 01       	movw	r20, r30
    16e0:	41 50       	subi	r20, 0x01	; 1
    16e2:	51 09       	sbc	r21, r1
    16e4:	82 32       	cpi	r24, 0x22	; 34
    16e6:	61 f7       	brne	.-40     	; 0x16c0 <ParseReceived+0x7de>
    16e8:	60 81       	ld	r22, Z
    16ea:	6c 32       	cpi	r22, 0x2C	; 44
    16ec:	49 f7       	brne	.-46     	; 0x16c0 <ParseReceived+0x7de>
    16ee:	d9 01       	movw	r26, r18
    16f0:	6c 91       	ld	r22, X
    16f2:	62 32       	cpi	r22, 0x22	; 34
    16f4:	29 f7       	brne	.-54     	; 0x16c0 <ParseReceived+0x7de>
    16f6:	69 2f       	mov	r22, r25
    16f8:	01 c0       	rjmp	.+2      	; 0x16fc <ParseReceived+0x81a>
    16fa:	60 e0       	ldi	r22, 0x00	; 0
    16fc:	f8 01       	movw	r30, r16
    16fe:	e6 0f       	add	r30, r22
    1700:	f1 1d       	adc	r31, r1
    1702:	e8 5f       	subi	r30, 0xF8	; 248
    1704:	fe 4f       	sbci	r31, 0xFE	; 254
    1706:	10 82       	st	Z, r1
    1708:	7a 01       	movw	r14, r20
    170a:	b3 e0       	ldi	r27, 0x03	; 3
    170c:	eb 0e       	add	r14, r27
    170e:	f1 1c       	adc	r15, r1
    1710:	ae 01       	movw	r20, r28
    1712:	4e 5f       	subi	r20, 0xFE	; 254
    1714:	5f 4f       	sbci	r21, 0xFF	; 255
    1716:	b8 01       	movw	r22, r16
    1718:	68 5e       	subi	r22, 0xE8	; 232
    171a:	7e 4f       	sbci	r23, 0xFE	; 254
    171c:	c7 01       	movw	r24, r14
    171e:	9d da       	rcall	.-2758   	; 0xc5a <ParseMAC>
    1720:	2a 81       	ldd	r18, Y+2	; 0x02
    1722:	30 e0       	ldi	r19, 0x00	; 0
    1724:	2e 5f       	subi	r18, 0xFE	; 254
    1726:	3f 4f       	sbci	r19, 0xFF	; 255
    1728:	e2 0e       	add	r14, r18
    172a:	f3 1e       	adc	r15, r19
    172c:	be 01       	movw	r22, r28
    172e:	6e 5f       	subi	r22, 0xFE	; 254
    1730:	7f 4f       	sbci	r23, 0xFF	; 255
    1732:	c7 01       	movw	r24, r14
    1734:	9f d8       	rcall	.-3778   	; 0x874 <ParseNumber>
    1736:	f8 01       	movw	r30, r16
    1738:	e2 5e       	subi	r30, 0xE2	; 226
    173a:	fe 4f       	sbci	r31, 0xFE	; 254
    173c:	60 83       	st	Z, r22
    173e:	8a 81       	ldd	r24, Y+2	; 0x02
    1740:	90 e0       	ldi	r25, 0x00	; 0
    1742:	01 96       	adiw	r24, 0x01	; 1
    1744:	be 01       	movw	r22, r28
    1746:	6e 5f       	subi	r22, 0xFE	; 254
    1748:	7f 4f       	sbci	r23, 0xFF	; 255
    174a:	8e 0d       	add	r24, r14
    174c:	9f 1d       	adc	r25, r15
    174e:	92 d8       	rcall	.-3804   	; 0x874 <ParseNumber>
    1750:	f8 01       	movw	r30, r16
    1752:	e1 5e       	subi	r30, 0xE1	; 225
    1754:	fe 4f       	sbci	r31, 0xFE	; 254
    1756:	71 83       	std	Z+1, r23	; 0x01
    1758:	60 83       	st	Z, r22
    175a:	6d ed       	ldi	r22, 0xDD	; 221
    175c:	72 e0       	ldi	r23, 0x02	; 2
    175e:	c6 01       	movw	r24, r12
    1760:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
    1764:	89 2b       	or	r24, r25
    1766:	09 f0       	breq	.+2      	; 0x176a <ParseReceived+0x888>
    1768:	1c c2       	rjmp	.+1080   	; 0x1ba2 <ParseReceived+0xcc0>
    176a:	f8 01       	movw	r30, r16
    176c:	14 82       	std	Z+4, r1	; 0x04
    176e:	15 82       	std	Z+5, r1	; 0x05
    1770:	16 82       	std	Z+6, r1	; 0x06
    1772:	17 82       	std	Z+7, r1	; 0x07
    1774:	f7 c1       	rjmp	.+1006   	; 0x1b64 <ParseReceived+0xc82>
    1776:	46 e0       	ldi	r20, 0x06	; 6
    1778:	50 e0       	ldi	r21, 0x00	; 0
    177a:	6d e3       	ldi	r22, 0x3D	; 61
    177c:	76 e0       	ldi	r23, 0x06	; 6
    177e:	c6 01       	movw	r24, r12
    1780:	0e 94 97 17 	call	0x2f2e	; 0x2f2e <strncmp>
    1784:	89 2b       	or	r24, r25
    1786:	09 f0       	breq	.+2      	; 0x178a <ParseReceived+0x8a8>
    1788:	cd c0       	rjmp	.+410    	; 0x1924 <ParseReceived+0xa42>
    178a:	d6 01       	movw	r26, r12
    178c:	8c 91       	ld	r24, X
    178e:	88 23       	and	r24, r24
    1790:	59 f0       	breq	.+22     	; 0x17a8 <ParseReceived+0x8c6>
    1792:	8a 33       	cpi	r24, 0x3A	; 58
    1794:	59 f0       	breq	.+22     	; 0x17ac <ParseReceived+0x8ca>
    1796:	11 96       	adiw	r26, 0x01	; 1
    1798:	02 c0       	rjmp	.+4      	; 0x179e <ParseReceived+0x8bc>
    179a:	8a 33       	cpi	r24, 0x3A	; 58
    179c:	41 f0       	breq	.+16     	; 0x17ae <ParseReceived+0x8cc>
    179e:	fd 01       	movw	r30, r26
    17a0:	8d 91       	ld	r24, X+
    17a2:	81 11       	cpse	r24, r1
    17a4:	fa cf       	rjmp	.-12     	; 0x179a <ParseReceived+0x8b8>
    17a6:	03 c0       	rjmp	.+6      	; 0x17ae <ParseReceived+0x8cc>
    17a8:	f6 01       	movw	r30, r12
    17aa:	01 c0       	rjmp	.+2      	; 0x17ae <ParseReceived+0x8cc>
    17ac:	f6 01       	movw	r30, r12
    17ae:	30 97       	sbiw	r30, 0x00	; 0
    17b0:	09 f4       	brne	.+2      	; 0x17b4 <ParseReceived+0x8d2>
    17b2:	b8 c0       	rjmp	.+368    	; 0x1924 <ParseReceived+0xa42>
    17b4:	d8 01       	movw	r26, r16
    17b6:	a7 50       	subi	r26, 0x07	; 7
    17b8:	bf 4f       	sbci	r27, 0xFF	; 255
    17ba:	0d 90       	ld	r0, X+
    17bc:	bc 91       	ld	r27, X
    17be:	a0 2d       	mov	r26, r0
    17c0:	1c 92       	st	X, r1
    17c2:	81 81       	ldd	r24, Z+1	; 0x01
    17c4:	82 32       	cpi	r24, 0x22	; 34
    17c6:	29 f0       	breq	.+10     	; 0x17d2 <ParseReceived+0x8f0>
    17c8:	5f 01       	movw	r10, r30
    17ca:	bf ef       	ldi	r27, 0xFF	; 255
    17cc:	ab 1a       	sub	r10, r27
    17ce:	bb 0a       	sbc	r11, r27
    17d0:	04 c0       	rjmp	.+8      	; 0x17da <ParseReceived+0x8f8>
    17d2:	5f 01       	movw	r10, r30
    17d4:	22 e0       	ldi	r18, 0x02	; 2
    17d6:	a2 0e       	add	r10, r18
    17d8:	b1 1c       	adc	r11, r1
    17da:	d5 01       	movw	r26, r10
    17dc:	8c 91       	ld	r24, X
    17de:	88 23       	and	r24, r24
    17e0:	49 f1       	breq	.+82     	; 0x1834 <ParseReceived+0x952>
    17e2:	11 96       	adiw	r26, 0x01	; 1
    17e4:	a5 01       	movw	r20, r10
    17e6:	4e 5f       	subi	r20, 0xFE	; 254
    17e8:	5f 4f       	sbci	r21, 0xFF	; 255
    17ea:	90 e0       	ldi	r25, 0x00	; 0
    17ec:	b8 01       	movw	r22, r16
    17ee:	67 50       	subi	r22, 0x07	; 7
    17f0:	7f 4f       	sbci	r23, 0xFF	; 255
    17f2:	11 c0       	rjmp	.+34     	; 0x1816 <ParseReceived+0x934>
    17f4:	ff 24       	eor	r15, r15
    17f6:	f3 94       	inc	r15
    17f8:	f9 0e       	add	r15, r25
    17fa:	5d 01       	movw	r10, r26
    17fc:	fb 01       	movw	r30, r22
    17fe:	20 81       	ld	r18, Z
    1800:	31 81       	ldd	r19, Z+1	; 0x01
    1802:	29 0f       	add	r18, r25
    1804:	31 1d       	adc	r19, r1
    1806:	f9 01       	movw	r30, r18
    1808:	80 83       	st	Z, r24
    180a:	8d 91       	ld	r24, X+
    180c:	4f 5f       	subi	r20, 0xFF	; 255
    180e:	5f 4f       	sbci	r21, 0xFF	; 255
    1810:	88 23       	and	r24, r24
    1812:	89 f0       	breq	.+34     	; 0x1836 <ParseReceived+0x954>
    1814:	9f 2d       	mov	r25, r15
    1816:	5d 01       	movw	r10, r26
    1818:	f1 e0       	ldi	r31, 0x01	; 1
    181a:	af 1a       	sub	r10, r31
    181c:	b1 08       	sbc	r11, r1
    181e:	82 32       	cpi	r24, 0x22	; 34
    1820:	49 f7       	brne	.-46     	; 0x17f4 <ParseReceived+0x912>
    1822:	2c 91       	ld	r18, X
    1824:	2c 32       	cpi	r18, 0x2C	; 44
    1826:	31 f7       	brne	.-52     	; 0x17f4 <ParseReceived+0x912>
    1828:	fa 01       	movw	r30, r20
    182a:	20 81       	ld	r18, Z
    182c:	22 32       	cpi	r18, 0x22	; 34
    182e:	11 f7       	brne	.-60     	; 0x17f4 <ParseReceived+0x912>
    1830:	f9 2e       	mov	r15, r25
    1832:	01 c0       	rjmp	.+2      	; 0x1836 <ParseReceived+0x954>
    1834:	f1 2c       	mov	r15, r1
    1836:	d8 01       	movw	r26, r16
    1838:	a7 50       	subi	r26, 0x07	; 7
    183a:	bf 4f       	sbci	r27, 0xFF	; 255
    183c:	0d 90       	ld	r0, X+
    183e:	bc 91       	ld	r27, X
    1840:	a0 2d       	mov	r26, r0
    1842:	af 0d       	add	r26, r15
    1844:	b1 1d       	adc	r27, r1
    1846:	1c 92       	st	X, r1
    1848:	95 01       	movw	r18, r10
    184a:	2d 5f       	subi	r18, 0xFD	; 253
    184c:	3f 4f       	sbci	r19, 0xFF	; 255
    184e:	d5 01       	movw	r26, r10
    1850:	13 96       	adiw	r26, 0x03	; 3
    1852:	8c 91       	ld	r24, X
    1854:	88 23       	and	r24, r24
    1856:	f9 f0       	breq	.+62     	; 0x1896 <ParseReceived+0x9b4>
    1858:	f5 01       	movw	r30, r10
    185a:	34 96       	adiw	r30, 0x04	; 4
    185c:	90 e0       	ldi	r25, 0x00	; 0
    185e:	b8 01       	movw	r22, r16
    1860:	65 50       	subi	r22, 0x05	; 5
    1862:	7f 4f       	sbci	r23, 0xFF	; 255
    1864:	0e c0       	rjmp	.+28     	; 0x1882 <ParseReceived+0x9a0>
    1866:	41 e0       	ldi	r20, 0x01	; 1
    1868:	49 0f       	add	r20, r25
    186a:	9f 01       	movw	r18, r30
    186c:	db 01       	movw	r26, r22
    186e:	ed 90       	ld	r14, X+
    1870:	fc 90       	ld	r15, X
    1872:	d7 01       	movw	r26, r14
    1874:	a9 0f       	add	r26, r25
    1876:	b1 1d       	adc	r27, r1
    1878:	8c 93       	st	X, r24
    187a:	81 91       	ld	r24, Z+
    187c:	88 23       	and	r24, r24
    187e:	61 f0       	breq	.+24     	; 0x1898 <ParseReceived+0x9b6>
    1880:	94 2f       	mov	r25, r20
    1882:	9f 01       	movw	r18, r30
    1884:	21 50       	subi	r18, 0x01	; 1
    1886:	31 09       	sbc	r19, r1
    1888:	82 32       	cpi	r24, 0x22	; 34
    188a:	69 f7       	brne	.-38     	; 0x1866 <ParseReceived+0x984>
    188c:	40 81       	ld	r20, Z
    188e:	4c 32       	cpi	r20, 0x2C	; 44
    1890:	51 f7       	brne	.-44     	; 0x1866 <ParseReceived+0x984>
    1892:	49 2f       	mov	r20, r25
    1894:	01 c0       	rjmp	.+2      	; 0x1898 <ParseReceived+0x9b6>
    1896:	40 e0       	ldi	r20, 0x00	; 0
    1898:	f8 01       	movw	r30, r16
    189a:	e5 50       	subi	r30, 0x05	; 5
    189c:	ff 4f       	sbci	r31, 0xFF	; 255
    189e:	01 90       	ld	r0, Z+
    18a0:	f0 81       	ld	r31, Z
    18a2:	e0 2d       	mov	r30, r0
    18a4:	e4 0f       	add	r30, r20
    18a6:	f1 1d       	adc	r31, r1
    18a8:	10 82       	st	Z, r1
    18aa:	79 01       	movw	r14, r18
    18ac:	b2 e0       	ldi	r27, 0x02	; 2
    18ae:	eb 0e       	add	r14, r27
    18b0:	f1 1c       	adc	r15, r1
    18b2:	be 01       	movw	r22, r28
    18b4:	6e 5f       	subi	r22, 0xFE	; 254
    18b6:	7f 4f       	sbci	r23, 0xFF	; 255
    18b8:	c7 01       	movw	r24, r14
    18ba:	0e 94 3a 04 	call	0x874	; 0x874 <ParseNumber>
    18be:	f8 01       	movw	r30, r16
    18c0:	e2 50       	subi	r30, 0x02	; 2
    18c2:	ff 4f       	sbci	r31, 0xFF	; 255
    18c4:	60 83       	st	Z, r22
    18c6:	4a 81       	ldd	r20, Y+2	; 0x02
    18c8:	50 e0       	ldi	r21, 0x00	; 0
    18ca:	4f 5f       	subi	r20, 0xFF	; 255
    18cc:	5f 4f       	sbci	r21, 0xFF	; 255
    18ce:	57 01       	movw	r10, r14
    18d0:	a4 0e       	add	r10, r20
    18d2:	b5 1e       	adc	r11, r21
    18d4:	be 01       	movw	r22, r28
    18d6:	6e 5f       	subi	r22, 0xFE	; 254
    18d8:	7f 4f       	sbci	r23, 0xFF	; 255
    18da:	c5 01       	movw	r24, r10
    18dc:	0e 94 3a 04 	call	0x874	; 0x874 <ParseNumber>
    18e0:	f8 01       	movw	r30, r16
    18e2:	e3 50       	subi	r30, 0x03	; 3
    18e4:	ff 4f       	sbci	r31, 0xFF	; 255
    18e6:	60 83       	st	Z, r22
    18e8:	ea 80       	ldd	r14, Y+2	; 0x02
    18ea:	f1 2c       	mov	r15, r1
    18ec:	ef ef       	ldi	r30, 0xFF	; 255
    18ee:	ee 1a       	sub	r14, r30
    18f0:	fe 0a       	sbc	r15, r30
    18f2:	ea 0c       	add	r14, r10
    18f4:	fb 1c       	adc	r15, r11
    18f6:	be 01       	movw	r22, r28
    18f8:	6e 5f       	subi	r22, 0xFE	; 254
    18fa:	7f 4f       	sbci	r23, 0xFF	; 255
    18fc:	c7 01       	movw	r24, r14
    18fe:	0e 94 3a 04 	call	0x874	; 0x874 <ParseNumber>
    1902:	f8 01       	movw	r30, r16
    1904:	e1 50       	subi	r30, 0x01	; 1
    1906:	ff 4f       	sbci	r31, 0xFF	; 255
    1908:	60 83       	st	Z, r22
    190a:	8a 81       	ldd	r24, Y+2	; 0x02
    190c:	90 e0       	ldi	r25, 0x00	; 0
    190e:	01 96       	adiw	r24, 0x01	; 1
    1910:	be 01       	movw	r22, r28
    1912:	6e 5f       	subi	r22, 0xFE	; 254
    1914:	7f 4f       	sbci	r23, 0xFF	; 255
    1916:	8e 0d       	add	r24, r14
    1918:	9f 1d       	adc	r25, r15
    191a:	0e 94 3a 04 	call	0x874	; 0x874 <ParseNumber>
    191e:	f8 01       	movw	r30, r16
    1920:	f3 95       	inc	r31
    1922:	60 83       	st	Z, r22
    1924:	6d ed       	ldi	r22, 0xDD	; 221
    1926:	72 e0       	ldi	r23, 0x02	; 2
    1928:	c6 01       	movw	r24, r12
    192a:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
    192e:	89 2b       	or	r24, r25
    1930:	09 f0       	breq	.+2      	; 0x1934 <ParseReceived+0xa52>
    1932:	37 c1       	rjmp	.+622    	; 0x1ba2 <ParseReceived+0xcc0>
    1934:	d8 01       	movw	r26, r16
    1936:	14 96       	adiw	r26, 0x04	; 4
    1938:	1d 92       	st	X+, r1
    193a:	1d 92       	st	X+, r1
    193c:	1d 92       	st	X+, r1
    193e:	1c 92       	st	X, r1
    1940:	17 97       	sbiw	r26, 0x07	; 7
    1942:	10 c1       	rjmp	.+544    	; 0x1b64 <ParseReceived+0xc82>
    1944:	47 e0       	ldi	r20, 0x07	; 7
    1946:	50 e0       	ldi	r21, 0x00	; 0
    1948:	63 ea       	ldi	r22, 0xA3	; 163
    194a:	73 e0       	ldi	r23, 0x03	; 3
    194c:	c6 01       	movw	r24, r12
    194e:	0e 94 97 17 	call	0x2f2e	; 0x2f2e <strncmp>
    1952:	89 2b       	or	r24, r25
    1954:	19 f4       	brne	.+6      	; 0x195c <ParseReceived+0xa7a>
    1956:	b6 01       	movw	r22, r12
    1958:	c8 01       	movw	r24, r16
    195a:	8a d8       	rcall	.-3820   	; 0xa70 <ParseCIPSTA>
    195c:	6d ed       	ldi	r22, 0xDD	; 221
    195e:	72 e0       	ldi	r23, 0x02	; 2
    1960:	c6 01       	movw	r24, r12
    1962:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
    1966:	89 2b       	or	r24, r25
    1968:	09 f0       	breq	.+2      	; 0x196c <ParseReceived+0xa8a>
    196a:	1b c1       	rjmp	.+566    	; 0x1ba2 <ParseReceived+0xcc0>
    196c:	f8 01       	movw	r30, r16
    196e:	14 82       	std	Z+4, r1	; 0x04
    1970:	15 82       	std	Z+5, r1	; 0x05
    1972:	16 82       	std	Z+6, r1	; 0x06
    1974:	17 82       	std	Z+7, r1	; 0x07
    1976:	c8 01       	movw	r24, r16
    1978:	0e 94 20 15 	call	0x2a40	; 0x2a40 <ESP8266_Callback_WifiIPSet>
    197c:	f3 c0       	rjmp	.+486    	; 0x1b64 <ParseReceived+0xc82>
    197e:	46 e0       	ldi	r20, 0x06	; 6
    1980:	50 e0       	ldi	r21, 0x00	; 0
    1982:	6b ea       	ldi	r22, 0xAB	; 171
    1984:	73 e0       	ldi	r23, 0x03	; 3
    1986:	c6 01       	movw	r24, r12
    1988:	0e 94 97 17 	call	0x2f2e	; 0x2f2e <strncmp>
    198c:	89 2b       	or	r24, r25
    198e:	19 f4       	brne	.+6      	; 0x1996 <ParseReceived+0xab4>
    1990:	b6 01       	movw	r22, r12
    1992:	c8 01       	movw	r24, r16
    1994:	6d d8       	rcall	.-3878   	; 0xa70 <ParseCIPSTA>
    1996:	6d ed       	ldi	r22, 0xDD	; 221
    1998:	72 e0       	ldi	r23, 0x02	; 2
    199a:	c6 01       	movw	r24, r12
    199c:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
    19a0:	89 2b       	or	r24, r25
    19a2:	09 f0       	breq	.+2      	; 0x19a6 <ParseReceived+0xac4>
    19a4:	fe c0       	rjmp	.+508    	; 0x1ba2 <ParseReceived+0xcc0>
    19a6:	d8 01       	movw	r26, r16
    19a8:	14 96       	adiw	r26, 0x04	; 4
    19aa:	1d 92       	st	X+, r1
    19ac:	1d 92       	st	X+, r1
    19ae:	1d 92       	st	X+, r1
    19b0:	1c 92       	st	X, r1
    19b2:	17 97       	sbiw	r26, 0x07	; 7
    19b4:	d7 c0       	rjmp	.+430    	; 0x1b64 <ParseReceived+0xc82>
    19b6:	6d ed       	ldi	r22, 0xDD	; 221
    19b8:	72 e0       	ldi	r23, 0x02	; 2
    19ba:	c6 01       	movw	r24, r12
    19bc:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
    19c0:	89 2b       	or	r24, r25
    19c2:	09 f0       	breq	.+2      	; 0x19c6 <ParseReceived+0xae4>
    19c4:	ee c0       	rjmp	.+476    	; 0x1ba2 <ParseReceived+0xcc0>
    19c6:	f8 01       	movw	r30, r16
    19c8:	14 82       	std	Z+4, r1	; 0x04
    19ca:	15 82       	std	Z+5, r1	; 0x05
    19cc:	16 82       	std	Z+6, r1	; 0x06
    19ce:	17 82       	std	Z+7, r1	; 0x07
    19d0:	e9 50       	subi	r30, 0x09	; 9
    19d2:	ff 4f       	sbci	r31, 0xFF	; 255
    19d4:	80 81       	ld	r24, Z
    19d6:	31 96       	adiw	r30, 0x01	; 1
    19d8:	80 83       	st	Z, r24
    19da:	c4 c0       	rjmp	.+392    	; 0x1b64 <ParseReceived+0xc82>
    19dc:	6d ed       	ldi	r22, 0xDD	; 221
    19de:	72 e0       	ldi	r23, 0x02	; 2
    19e0:	c6 01       	movw	r24, r12
    19e2:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
    19e6:	89 2b       	or	r24, r25
    19e8:	09 f0       	breq	.+2      	; 0x19ec <ParseReceived+0xb0a>
    19ea:	db c0       	rjmp	.+438    	; 0x1ba2 <ParseReceived+0xcc0>
    19ec:	d8 01       	movw	r26, r16
    19ee:	14 96       	adiw	r26, 0x04	; 4
    19f0:	1d 92       	st	X+, r1
    19f2:	1d 92       	st	X+, r1
    19f4:	1d 92       	st	X+, r1
    19f6:	1c 92       	st	X, r1
    19f8:	17 97       	sbiw	r26, 0x07	; 7
    19fa:	b4 c0       	rjmp	.+360    	; 0x1b64 <ParseReceived+0xc82>
    19fc:	6d ed       	ldi	r22, 0xDD	; 221
    19fe:	72 e0       	ldi	r23, 0x02	; 2
    1a00:	c6 01       	movw	r24, r12
    1a02:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
    1a06:	89 2b       	or	r24, r25
    1a08:	09 f0       	breq	.+2      	; 0x1a0c <ParseReceived+0xb2a>
    1a0a:	cb c0       	rjmp	.+406    	; 0x1ba2 <ParseReceived+0xcc0>
    1a0c:	8d e1       	ldi	r24, 0x1D	; 29
    1a0e:	90 e0       	ldi	r25, 0x00	; 0
    1a10:	a0 e0       	ldi	r26, 0x00	; 0
    1a12:	b0 e0       	ldi	r27, 0x00	; 0
    1a14:	f8 01       	movw	r30, r16
    1a16:	84 83       	std	Z+4, r24	; 0x04
    1a18:	95 83       	std	Z+5, r25	; 0x05
    1a1a:	a6 83       	std	Z+6, r26	; 0x06
    1a1c:	b7 83       	std	Z+7, r27	; 0x07
    1a1e:	e3 5d       	subi	r30, 0xD3	; 211
    1a20:	fe 4f       	sbci	r31, 0xFE	; 254
    1a22:	81 81       	ldd	r24, Z+1	; 0x01
    1a24:	81 60       	ori	r24, 0x01	; 1
    1a26:	81 83       	std	Z+1, r24	; 0x01
    1a28:	f8 01       	movw	r30, r16
    1a2a:	a0 85       	ldd	r26, Z+8	; 0x08
    1a2c:	b1 85       	ldd	r27, Z+9	; 0x09
    1a2e:	88 e0       	ldi	r24, 0x08	; 8
    1a30:	e2 eb       	ldi	r30, 0xB2	; 178
    1a32:	f3 e0       	ldi	r31, 0x03	; 3
    1a34:	01 90       	ld	r0, Z+
    1a36:	0d 92       	st	X+, r0
    1a38:	8a 95       	dec	r24
    1a3a:	e1 f7       	brne	.-8      	; 0x1a34 <ParseReceived+0xb52>
    1a3c:	93 c0       	rjmp	.+294    	; 0x1b64 <ParseReceived+0xc82>
    1a3e:	6d ed       	ldi	r22, 0xDD	; 221
    1a40:	72 e0       	ldi	r23, 0x02	; 2
    1a42:	c6 01       	movw	r24, r12
    1a44:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
    1a48:	89 2b       	or	r24, r25
    1a4a:	09 f0       	breq	.+2      	; 0x1a4e <ParseReceived+0xb6c>
    1a4c:	05 c1       	rjmp	.+522    	; 0x1c58 <ParseReceived+0xd76>
    1a4e:	d8 01       	movw	r26, r16
    1a50:	14 96       	adiw	r26, 0x04	; 4
    1a52:	1d 92       	st	X+, r1
    1a54:	1d 92       	st	X+, r1
    1a56:	1d 92       	st	X+, r1
    1a58:	1c 92       	st	X, r1
    1a5a:	17 97       	sbiw	r26, 0x07	; 7
    1a5c:	62 ee       	ldi	r22, 0xE2	; 226
    1a5e:	72 e0       	ldi	r23, 0x02	; 2
    1a60:	c6 01       	movw	r24, r12
    1a62:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
    1a66:	89 2b       	or	r24, r25
    1a68:	09 f0       	breq	.+2      	; 0x1a6c <ParseReceived+0xb8a>
    1a6a:	e3 c0       	rjmp	.+454    	; 0x1c32 <ParseReceived+0xd50>
    1a6c:	f8 01       	movw	r30, r16
    1a6e:	14 82       	std	Z+4, r1	; 0x04
    1a70:	15 82       	std	Z+5, r1	; 0x05
    1a72:	16 82       	std	Z+6, r1	; 0x06
    1a74:	17 82       	std	Z+7, r1	; 0x07
    1a76:	ee 5d       	subi	r30, 0xDE	; 222
    1a78:	fe 4f       	sbci	r31, 0xFE	; 254
    1a7a:	80 81       	ld	r24, Z
    1a7c:	f5 e2       	ldi	r31, 0x25	; 37
    1a7e:	8f 02       	muls	r24, r31
    1a80:	c0 01       	movw	r24, r0
    1a82:	11 24       	eor	r1, r1
    1a84:	f8 01       	movw	r30, r16
    1a86:	e8 0f       	add	r30, r24
    1a88:	f9 1f       	adc	r31, r25
    1a8a:	12 8e       	std	Z+26, r1	; 0x1a
    1a8c:	14 8e       	std	Z+28, r1	; 0x1c
    1a8e:	15 ae       	std	Z+61, r1	; 0x3d
    1a90:	14 ae       	std	Z+60, r1	; 0x3c
    1a92:	4a 96       	adiw	r24, 0x1a	; 26
    1a94:	b8 01       	movw	r22, r16
    1a96:	68 0f       	add	r22, r24
    1a98:	79 1f       	adc	r23, r25
    1a9a:	c8 01       	movw	r24, r16
    1a9c:	0e 94 5f 15 	call	0x2abe	; 0x2abe <ESP8266_Callback_ClientConnectionError>
    1aa0:	61 c0       	rjmp	.+194    	; 0x1b64 <ParseReceived+0xc82>
    1aa2:	6d ed       	ldi	r22, 0xDD	; 221
    1aa4:	72 e0       	ldi	r23, 0x02	; 2
    1aa6:	c6 01       	movw	r24, r12
    1aa8:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
    1aac:	89 2b       	or	r24, r25
    1aae:	09 f0       	breq	.+2      	; 0x1ab2 <ParseReceived+0xbd0>
    1ab0:	78 c0       	rjmp	.+240    	; 0x1ba2 <ParseReceived+0xcc0>
    1ab2:	d8 01       	movw	r26, r16
    1ab4:	14 96       	adiw	r26, 0x04	; 4
    1ab6:	1d 92       	st	X+, r1
    1ab8:	1d 92       	st	X+, r1
    1aba:	1d 92       	st	X+, r1
    1abc:	1c 92       	st	X, r1
    1abe:	17 97       	sbiw	r26, 0x07	; 7
    1ac0:	51 c0       	rjmp	.+162    	; 0x1b64 <ParseReceived+0xc82>
    1ac2:	6a ee       	ldi	r22, 0xEA	; 234
    1ac4:	72 e0       	ldi	r23, 0x02	; 2
    1ac6:	c6 01       	movw	r24, r12
    1ac8:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
    1acc:	89 2b       	or	r24, r25
    1ace:	09 f0       	breq	.+2      	; 0x1ad2 <ParseReceived+0xbf0>
    1ad0:	49 c0       	rjmp	.+146    	; 0x1b64 <ParseReceived+0xc82>
    1ad2:	f8 01       	movw	r30, r16
    1ad4:	14 82       	std	Z+4, r1	; 0x04
    1ad6:	15 82       	std	Z+5, r1	; 0x05
    1ad8:	16 82       	std	Z+6, r1	; 0x06
    1ada:	17 82       	std	Z+7, r1	; 0x07
    1adc:	e3 5d       	subi	r30, 0xD3	; 211
    1ade:	fe 4f       	sbci	r31, 0xFE	; 254
    1ae0:	81 81       	ldd	r24, Z+1	; 0x01
    1ae2:	82 60       	ori	r24, 0x02	; 2
    1ae4:	81 83       	std	Z+1, r24	; 0x01
    1ae6:	3e c0       	rjmp	.+124    	; 0x1b64 <ParseReceived+0xc82>
    1ae8:	4a e0       	ldi	r20, 0x0A	; 10
    1aea:	50 e0       	ldi	r21, 0x00	; 0
    1aec:	6a eb       	ldi	r22, 0xBA	; 186
    1aee:	73 e0       	ldi	r23, 0x03	; 3
    1af0:	c6 01       	movw	r24, r12
    1af2:	0e 94 97 17 	call	0x2f2e	; 0x2f2e <strncmp>
    1af6:	89 2b       	or	r24, r25
    1af8:	41 f4       	brne	.+16     	; 0x1b0a <ParseReceived+0xc28>
    1afa:	40 e0       	ldi	r20, 0x00	; 0
    1afc:	50 e0       	ldi	r21, 0x00	; 0
    1afe:	b8 01       	movw	r22, r16
    1b00:	61 52       	subi	r22, 0x21	; 33
    1b02:	7f 4f       	sbci	r23, 0xFF	; 255
    1b04:	c6 01       	movw	r24, r12
    1b06:	0c 96       	adiw	r24, 0x0c	; 12
    1b08:	a8 d8       	rcall	.-3760   	; 0xc5a <ParseMAC>
    1b0a:	6d ed       	ldi	r22, 0xDD	; 221
    1b0c:	72 e0       	ldi	r23, 0x02	; 2
    1b0e:	c6 01       	movw	r24, r12
    1b10:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
    1b14:	89 2b       	or	r24, r25
    1b16:	09 f0       	breq	.+2      	; 0x1b1a <ParseReceived+0xc38>
    1b18:	44 c0       	rjmp	.+136    	; 0x1ba2 <ParseReceived+0xcc0>
    1b1a:	d8 01       	movw	r26, r16
    1b1c:	14 96       	adiw	r26, 0x04	; 4
    1b1e:	1d 92       	st	X+, r1
    1b20:	1d 92       	st	X+, r1
    1b22:	1d 92       	st	X+, r1
    1b24:	1c 92       	st	X, r1
    1b26:	17 97       	sbiw	r26, 0x07	; 7
    1b28:	1d c0       	rjmp	.+58     	; 0x1b64 <ParseReceived+0xc82>
    1b2a:	49 e0       	ldi	r20, 0x09	; 9
    1b2c:	50 e0       	ldi	r21, 0x00	; 0
    1b2e:	65 ec       	ldi	r22, 0xC5	; 197
    1b30:	73 e0       	ldi	r23, 0x03	; 3
    1b32:	c6 01       	movw	r24, r12
    1b34:	0e 94 97 17 	call	0x2f2e	; 0x2f2e <strncmp>
    1b38:	89 2b       	or	r24, r25
    1b3a:	41 f4       	brne	.+16     	; 0x1b4c <ParseReceived+0xc6a>
    1b3c:	40 e0       	ldi	r20, 0x00	; 0
    1b3e:	50 e0       	ldi	r21, 0x00	; 0
    1b40:	b8 01       	movw	r22, r16
    1b42:	6f 50       	subi	r22, 0x0F	; 15
    1b44:	7f 4f       	sbci	r23, 0xFF	; 255
    1b46:	c6 01       	movw	r24, r12
    1b48:	0b 96       	adiw	r24, 0x0b	; 11
    1b4a:	87 d8       	rcall	.-3826   	; 0xc5a <ParseMAC>
    1b4c:	6d ed       	ldi	r22, 0xDD	; 221
    1b4e:	72 e0       	ldi	r23, 0x02	; 2
    1b50:	c6 01       	movw	r24, r12
    1b52:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
    1b56:	89 2b       	or	r24, r25
    1b58:	21 f5       	brne	.+72     	; 0x1ba2 <ParseReceived+0xcc0>
    1b5a:	f8 01       	movw	r30, r16
    1b5c:	14 82       	std	Z+4, r1	; 0x04
    1b5e:	15 82       	std	Z+5, r1	; 0x05
    1b60:	16 82       	std	Z+6, r1	; 0x06
    1b62:	17 82       	std	Z+7, r1	; 0x07
    1b64:	6d ed       	ldi	r22, 0xDD	; 221
    1b66:	72 e0       	ldi	r23, 0x02	; 2
    1b68:	c6 01       	movw	r24, r12
    1b6a:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
    1b6e:	89 2b       	or	r24, r25
    1b70:	c1 f4       	brne	.+48     	; 0x1ba2 <ParseReceived+0xcc0>
    1b72:	f8 01       	movw	r30, r16
    1b74:	e3 5d       	subi	r30, 0xD3	; 211
    1b76:	fe 4f       	sbci	r31, 0xFE	; 254
    1b78:	81 81       	ldd	r24, Z+1	; 0x01
    1b7a:	82 60       	ori	r24, 0x02	; 2
    1b7c:	81 83       	std	Z+1, r24	; 0x01
    1b7e:	f8 01       	movw	r30, r16
    1b80:	84 81       	ldd	r24, Z+4	; 0x04
    1b82:	95 81       	ldd	r25, Z+5	; 0x05
    1b84:	a6 81       	ldd	r26, Z+6	; 0x06
    1b86:	b7 81       	ldd	r27, Z+7	; 0x07
    1b88:	88 30       	cpi	r24, 0x08	; 8
    1b8a:	91 05       	cpc	r25, r1
    1b8c:	a1 05       	cpc	r26, r1
    1b8e:	b1 05       	cpc	r27, r1
    1b90:	41 f0       	breq	.+16     	; 0x1ba2 <ParseReceived+0xcc0>
    1b92:	4d 97       	sbiw	r24, 0x1d	; 29
    1b94:	a1 05       	cpc	r26, r1
    1b96:	b1 05       	cpc	r27, r1
    1b98:	21 f0       	breq	.+8      	; 0x1ba2 <ParseReceived+0xcc0>
    1b9a:	14 82       	std	Z+4, r1	; 0x04
    1b9c:	15 82       	std	Z+5, r1	; 0x05
    1b9e:	16 82       	std	Z+6, r1	; 0x06
    1ba0:	17 82       	std	Z+7, r1	; 0x07
    1ba2:	62 ee       	ldi	r22, 0xE2	; 226
    1ba4:	72 e0       	ldi	r23, 0x02	; 2
    1ba6:	c6 01       	movw	r24, r12
    1ba8:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
    1bac:	89 2b       	or	r24, r25
    1bae:	39 f0       	breq	.+14     	; 0x1bbe <ParseReceived+0xcdc>
    1bb0:	62 ef       	ldi	r22, 0xF2	; 242
    1bb2:	72 e0       	ldi	r23, 0x02	; 2
    1bb4:	c6 01       	movw	r24, r12
    1bb6:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
    1bba:	89 2b       	or	r24, r25
    1bbc:	59 f4       	brne	.+22     	; 0x1bd4 <ParseReceived+0xcf2>
    1bbe:	f8 01       	movw	r30, r16
    1bc0:	e3 5d       	subi	r30, 0xD3	; 211
    1bc2:	fe 4f       	sbci	r31, 0xFE	; 254
    1bc4:	81 81       	ldd	r24, Z+1	; 0x01
    1bc6:	8d 7f       	andi	r24, 0xFD	; 253
    1bc8:	81 83       	std	Z+1, r24	; 0x01
    1bca:	f8 01       	movw	r30, r16
    1bcc:	14 82       	std	Z+4, r1	; 0x04
    1bce:	15 82       	std	Z+5, r1	; 0x05
    1bd0:	16 82       	std	Z+6, r1	; 0x06
    1bd2:	17 82       	std	Z+7, r1	; 0x07
    1bd4:	68 ed       	ldi	r22, 0xD8	; 216
    1bd6:	72 e0       	ldi	r23, 0x02	; 2
    1bd8:	c6 01       	movw	r24, r12
    1bda:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
    1bde:	89 2b       	or	r24, r25
    1be0:	09 f0       	breq	.+2      	; 0x1be4 <ParseReceived+0xd02>
    1be2:	43 c0       	rjmp	.+134    	; 0x1c6a <ParseReceived+0xd88>
    1be4:	d8 01       	movw	r26, r16
    1be6:	14 96       	adiw	r26, 0x04	; 4
    1be8:	1d 92       	st	X+, r1
    1bea:	1d 92       	st	X+, r1
    1bec:	1d 92       	st	X+, r1
    1bee:	1c 92       	st	X, r1
    1bf0:	17 97       	sbiw	r26, 0x07	; 7
    1bf2:	f8 01       	movw	r30, r16
    1bf4:	e3 5d       	subi	r30, 0xD3	; 211
    1bf6:	fe 4f       	sbci	r31, 0xFE	; 254
    1bf8:	81 81       	ldd	r24, Z+1	; 0x01
    1bfa:	8e 7f       	andi	r24, 0xFE	; 254
    1bfc:	81 83       	std	Z+1, r24	; 0x01
    1bfe:	35 c0       	rjmp	.+106    	; 0x1c6a <ParseReceived+0xd88>
    1c00:	60 e8       	ldi	r22, 0x80	; 128
    1c02:	73 e0       	ldi	r23, 0x03	; 3
    1c04:	c6 01       	movw	r24, r12
    1c06:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
    1c0a:	89 2b       	or	r24, r25
    1c0c:	51 f6       	brne	.-108    	; 0x1ba2 <ParseReceived+0xcc0>
    1c0e:	2a cd       	rjmp	.-1452   	; 0x1664 <ParseReceived+0x782>
    1c10:	d6 01       	movw	r26, r12
    1c12:	ad 01       	movw	r20, r26
    1c14:	4f 5f       	subi	r20, 0xFF	; 255
    1c16:	5f 4f       	sbci	r21, 0xFF	; 255
    1c18:	11 96       	adiw	r26, 0x01	; 1
    1c1a:	8c 91       	ld	r24, X
    1c1c:	11 97       	sbiw	r26, 0x01	; 1
    1c1e:	88 23       	and	r24, r24
    1c20:	09 f4       	brne	.+2      	; 0x1c24 <ParseReceived+0xd42>
    1c22:	6b cd       	rjmp	.-1322   	; 0x16fa <ParseReceived+0x818>
    1c24:	fd 01       	movw	r30, r26
    1c26:	32 96       	adiw	r30, 0x02	; 2
    1c28:	9d 01       	movw	r18, r26
    1c2a:	2d 5f       	subi	r18, 0xFD	; 253
    1c2c:	3f 4f       	sbci	r19, 0xFF	; 255
    1c2e:	90 e0       	ldi	r25, 0x00	; 0
    1c30:	56 cd       	rjmp	.-1364   	; 0x16de <ParseReceived+0x7fc>
    1c32:	6d ed       	ldi	r22, 0xDD	; 221
    1c34:	72 e0       	ldi	r23, 0x02	; 2
    1c36:	c6 01       	movw	r24, r12
    1c38:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
    1c3c:	89 2b       	or	r24, r25
    1c3e:	09 f4       	brne	.+2      	; 0x1c42 <ParseReceived+0xd60>
    1c40:	98 cf       	rjmp	.-208    	; 0x1b72 <ParseReceived+0xc90>
    1c42:	b6 cf       	rjmp	.-148    	; 0x1bb0 <ParseReceived+0xcce>
    1c44:	34 01       	movw	r6, r8
    1c46:	ba e0       	ldi	r27, 0x0A	; 10
    1c48:	6b 1a       	sub	r6, r27
    1c4a:	71 08       	sbc	r7, r1
    1c4c:	eb e0       	ldi	r30, 0x0B	; 11
    1c4e:	8e 16       	cp	r8, r30
    1c50:	91 04       	cpc	r9, r1
    1c52:	08 f0       	brcs	.+2      	; 0x1c56 <ParseReceived+0xd74>
    1c54:	5b ca       	rjmp	.-2890   	; 0x110c <ParseReceived+0x22a>
    1c56:	a2 ca       	rjmp	.-2748   	; 0x119c <ParseReceived+0x2ba>
    1c58:	62 ee       	ldi	r22, 0xE2	; 226
    1c5a:	72 e0       	ldi	r23, 0x02	; 2
    1c5c:	c6 01       	movw	r24, r12
    1c5e:	0e 94 8e 17 	call	0x2f1c	; 0x2f1c <strcmp>
    1c62:	89 2b       	or	r24, r25
    1c64:	09 f0       	breq	.+2      	; 0x1c68 <ParseReceived+0xd86>
    1c66:	a4 cf       	rjmp	.-184    	; 0x1bb0 <ParseReceived+0xcce>
    1c68:	01 cf       	rjmp	.-510    	; 0x1a6c <ParseReceived+0xb8a>
    1c6a:	0f 90       	pop	r0
    1c6c:	0f 90       	pop	r0
    1c6e:	df 91       	pop	r29
    1c70:	cf 91       	pop	r28
    1c72:	1f 91       	pop	r17
    1c74:	0f 91       	pop	r16
    1c76:	ff 90       	pop	r15
    1c78:	ef 90       	pop	r14
    1c7a:	df 90       	pop	r13
    1c7c:	cf 90       	pop	r12
    1c7e:	bf 90       	pop	r11
    1c80:	af 90       	pop	r10
    1c82:	9f 90       	pop	r9
    1c84:	8f 90       	pop	r8
    1c86:	7f 90       	pop	r7
    1c88:	6f 90       	pop	r6
    1c8a:	5f 90       	pop	r5
    1c8c:	4f 90       	pop	r4
    1c8e:	3f 90       	pop	r3
    1c90:	2f 90       	pop	r2
    1c92:	08 95       	ret

00001c94 <ESP8266_Update>:
    1c94:	2f 92       	push	r2
    1c96:	3f 92       	push	r3
    1c98:	4f 92       	push	r4
    1c9a:	5f 92       	push	r5
    1c9c:	7f 92       	push	r7
    1c9e:	8f 92       	push	r8
    1ca0:	9f 92       	push	r9
    1ca2:	af 92       	push	r10
    1ca4:	bf 92       	push	r11
    1ca6:	cf 92       	push	r12
    1ca8:	df 92       	push	r13
    1caa:	ef 92       	push	r14
    1cac:	ff 92       	push	r15
    1cae:	0f 93       	push	r16
    1cb0:	1f 93       	push	r17
    1cb2:	cf 93       	push	r28
    1cb4:	df 93       	push	r29
    1cb6:	cd b7       	in	r28, 0x3d	; 61
    1cb8:	de b7       	in	r29, 0x3e	; 62
    1cba:	c3 58       	subi	r28, 0x83	; 131
    1cbc:	d1 09       	sbc	r29, r1
    1cbe:	0f b6       	in	r0, 0x3f	; 63
    1cc0:	f8 94       	cli
    1cc2:	de bf       	out	0x3e, r29	; 62
    1cc4:	0f be       	out	0x3f, r0	; 63
    1cc6:	cd bf       	out	0x3d, r28	; 61
    1cc8:	8c 01       	movw	r16, r24
    1cca:	fc 01       	movw	r30, r24
    1ccc:	86 89       	ldd	r24, Z+22	; 0x16
    1cce:	97 89       	ldd	r25, Z+23	; 0x17
    1cd0:	a0 8d       	ldd	r26, Z+24	; 0x18
    1cd2:	b1 8d       	ldd	r27, Z+25	; 0x19
    1cd4:	89 2b       	or	r24, r25
    1cd6:	8a 2b       	or	r24, r26
    1cd8:	8b 2b       	or	r24, r27
    1cda:	41 f4       	brne	.+16     	; 0x1cec <ESP8266_Update+0x58>
    1cdc:	80 e3       	ldi	r24, 0x30	; 48
    1cde:	95 e7       	ldi	r25, 0x75	; 117
    1ce0:	a0 e0       	ldi	r26, 0x00	; 0
    1ce2:	b0 e0       	ldi	r27, 0x00	; 0
    1ce4:	86 8b       	std	Z+22, r24	; 0x16
    1ce6:	97 8b       	std	Z+23, r25	; 0x17
    1ce8:	a0 8f       	std	Z+24, r26	; 0x18
    1cea:	b1 8f       	std	Z+25, r27	; 0x19
    1cec:	f8 01       	movw	r30, r16
    1cee:	86 85       	ldd	r24, Z+14	; 0x0e
    1cf0:	97 85       	ldd	r25, Z+15	; 0x0f
    1cf2:	a0 89       	ldd	r26, Z+16	; 0x10
    1cf4:	b1 89       	ldd	r27, Z+17	; 0x11
    1cf6:	42 85       	ldd	r20, Z+10	; 0x0a
    1cf8:	53 85       	ldd	r21, Z+11	; 0x0b
    1cfa:	64 85       	ldd	r22, Z+12	; 0x0c
    1cfc:	75 85       	ldd	r23, Z+13	; 0x0d
    1cfe:	84 1b       	sub	r24, r20
    1d00:	95 0b       	sbc	r25, r21
    1d02:	a6 0b       	sbc	r26, r22
    1d04:	b7 0b       	sbc	r27, r23
    1d06:	46 89       	ldd	r20, Z+22	; 0x16
    1d08:	57 89       	ldd	r21, Z+23	; 0x17
    1d0a:	60 8d       	ldd	r22, Z+24	; 0x18
    1d0c:	71 8d       	ldd	r23, Z+25	; 0x19
    1d0e:	48 17       	cp	r20, r24
    1d10:	59 07       	cpc	r21, r25
    1d12:	6a 07       	cpc	r22, r26
    1d14:	7b 07       	cpc	r23, r27
    1d16:	e0 f4       	brcc	.+56     	; 0x1d50 <ESP8266_Update+0xbc>
    1d18:	84 81       	ldd	r24, Z+4	; 0x04
    1d1a:	14 82       	std	Z+4, r1	; 0x04
    1d1c:	15 82       	std	Z+5, r1	; 0x05
    1d1e:	16 82       	std	Z+6, r1	; 0x06
    1d20:	17 82       	std	Z+7, r1	; 0x07
    1d22:	8a 30       	cpi	r24, 0x0A	; 10
    1d24:	09 f0       	breq	.+2      	; 0x1d28 <ESP8266_Update+0x94>
    1d26:	38 c2       	rjmp	.+1136   	; 0x2198 <ESP8266_Update+0x504>
    1d28:	ee 5d       	subi	r30, 0xDE	; 222
    1d2a:	fe 4f       	sbci	r31, 0xFE	; 254
    1d2c:	80 81       	ld	r24, Z
    1d2e:	b5 e2       	ldi	r27, 0x25	; 37
    1d30:	8b 02       	muls	r24, r27
    1d32:	c0 01       	movw	r24, r0
    1d34:	11 24       	eor	r1, r1
    1d36:	f8 01       	movw	r30, r16
    1d38:	e8 0f       	add	r30, r24
    1d3a:	f9 1f       	adc	r31, r25
    1d3c:	12 8e       	std	Z+26, r1	; 0x1a
    1d3e:	14 8e       	std	Z+28, r1	; 0x1c
    1d40:	15 ae       	std	Z+61, r1	; 0x3d
    1d42:	14 ae       	std	Z+60, r1	; 0x3c
    1d44:	4a 96       	adiw	r24, 0x1a	; 26
    1d46:	b8 01       	movw	r22, r16
    1d48:	68 0f       	add	r22, r24
    1d4a:	79 1f       	adc	r23, r25
    1d4c:	c8 01       	movw	r24, r16
    1d4e:	68 d7       	rcall	.+3792   	; 0x2c20 <ESP8266_Callback_ClientConnectionTimeout>
    1d50:	f8 01       	movw	r30, r16
    1d52:	e2 5d       	subi	r30, 0xD2	; 210
    1d54:	fe 4f       	sbci	r31, 0xFE	; 254
    1d56:	80 81       	ld	r24, Z
    1d58:	80 ff       	sbrs	r24, 0
    1d5a:	85 c0       	rjmp	.+266    	; 0x1e66 <ESP8266_Update+0x1d2>
    1d5c:	42 e0       	ldi	r20, 0x02	; 2
    1d5e:	50 e0       	ldi	r21, 0x00	; 0
    1d60:	6f ec       	ldi	r22, 0xCF	; 207
    1d62:	73 e0       	ldi	r23, 0x03	; 3
    1d64:	86 e4       	ldi	r24, 0x46	; 70
    1d66:	96 e1       	ldi	r25, 0x16	; 22
    1d68:	0e 94 09 03 	call	0x612	; 0x612 <BUFFER_Find>
    1d6c:	99 23       	and	r25, r25
    1d6e:	64 f0       	brlt	.+24     	; 0x1d88 <ESP8266_Update+0xf4>
    1d70:	89 2b       	or	r24, r25
    1d72:	09 f5       	brne	.+66     	; 0x1db6 <ESP8266_Update+0x122>
    1d74:	42 e0       	ldi	r20, 0x02	; 2
    1d76:	50 e0       	ldi	r21, 0x00	; 0
    1d78:	be 01       	movw	r22, r28
    1d7a:	6e 57       	subi	r22, 0x7E	; 126
    1d7c:	7f 4f       	sbci	r23, 0xFF	; 255
    1d7e:	86 e4       	ldi	r24, 0x46	; 70
    1d80:	96 e1       	ldi	r25, 0x16	; 22
    1d82:	0e 94 0c 02 	call	0x418	; 0x418 <BUFFER_Read>
    1d86:	17 c0       	rjmp	.+46     	; 0x1db6 <ESP8266_Update+0x122>
    1d88:	40 e0       	ldi	r20, 0x00	; 0
    1d8a:	50 e0       	ldi	r21, 0x00	; 0
    1d8c:	6f ec       	ldi	r22, 0xCF	; 207
    1d8e:	73 e0       	ldi	r23, 0x03	; 3
    1d90:	88 e5       	ldi	r24, 0x58	; 88
    1d92:	96 e1       	ldi	r25, 0x16	; 22
    1d94:	0e 94 09 03 	call	0x612	; 0x612 <BUFFER_Find>
    1d98:	00 97       	sbiw	r24, 0x00	; 0
    1d9a:	51 f4       	brne	.+20     	; 0x1db0 <ESP8266_Update+0x11c>
    1d9c:	42 e0       	ldi	r20, 0x02	; 2
    1d9e:	50 e0       	ldi	r21, 0x00	; 0
    1da0:	be 01       	movw	r22, r28
    1da2:	6e 57       	subi	r22, 0x7E	; 126
    1da4:	7f 4f       	sbci	r23, 0xFF	; 255
    1da6:	88 e5       	ldi	r24, 0x58	; 88
    1da8:	96 e1       	ldi	r25, 0x16	; 22
    1daa:	0e 94 0c 02 	call	0x418	; 0x418 <BUFFER_Read>
    1dae:	03 c0       	rjmp	.+6      	; 0x1db6 <ESP8266_Update+0x122>
    1db0:	99 23       	and	r25, r25
    1db2:	0c f4       	brge	.+2      	; 0x1db6 <ESP8266_Update+0x122>
    1db4:	58 c0       	rjmp	.+176    	; 0x1e66 <ESP8266_Update+0x1d2>
    1db6:	f8 01       	movw	r30, r16
    1db8:	e5 5d       	subi	r30, 0xD5	; 213
    1dba:	fe 4f       	sbci	r31, 0xFE	; 254
    1dbc:	c0 80       	ld	r12, Z
    1dbe:	d1 80       	ldd	r13, Z+1	; 0x01
    1dc0:	32 96       	adiw	r30, 0x02	; 2
    1dc2:	81 81       	ldd	r24, Z+1	; 0x01
    1dc4:	8e 7f       	andi	r24, 0xFE	; 254
    1dc6:	81 83       	std	Z+1, r24	; 0x01
    1dc8:	8d e1       	ldi	r24, 0x1D	; 29
    1dca:	90 e0       	ldi	r25, 0x00	; 0
    1dcc:	a0 e0       	ldi	r26, 0x00	; 0
    1dce:	b0 e0       	ldi	r27, 0x00	; 0
    1dd0:	f8 01       	movw	r30, r16
    1dd2:	84 83       	std	Z+4, r24	; 0x04
    1dd4:	95 83       	std	Z+5, r25	; 0x05
    1dd6:	a6 83       	std	Z+6, r26	; 0x06
    1dd8:	b7 83       	std	Z+7, r27	; 0x07
    1dda:	d6 01       	movw	r26, r12
    1ddc:	12 96       	adiw	r26, 0x02	; 2
    1dde:	8c 91       	ld	r24, X
    1de0:	12 97       	sbiw	r26, 0x02	; 2
    1de2:	88 23       	and	r24, r24
    1de4:	51 f0       	breq	.+20     	; 0x1dfa <ESP8266_Update+0x166>
    1de6:	54 96       	adiw	r26, 0x14	; 20
    1de8:	4d 91       	ld	r20, X+
    1dea:	5c 91       	ld	r21, X
    1dec:	55 97       	sbiw	r26, 0x15	; 21
    1dee:	24 eb       	ldi	r18, 0xB4	; 180
    1df0:	35 e0       	ldi	r19, 0x05	; 5
    1df2:	b6 01       	movw	r22, r12
    1df4:	c8 01       	movw	r24, r16
    1df6:	71 d6       	rcall	.+3298   	; 0x2ada <ESP8266_Callback_ClientConnectionSendData>
    1df8:	08 c0       	rjmp	.+16     	; 0x1e0a <ESP8266_Update+0x176>
    1dfa:	f6 01       	movw	r30, r12
    1dfc:	44 89       	ldd	r20, Z+20	; 0x14
    1dfe:	55 89       	ldd	r21, Z+21	; 0x15
    1e00:	24 eb       	ldi	r18, 0xB4	; 180
    1e02:	35 e0       	ldi	r19, 0x05	; 5
    1e04:	b6 01       	movw	r22, r12
    1e06:	c8 01       	movw	r24, r16
    1e08:	0a d8       	rcall	.-4076   	; 0xe1e <ESP8266_Callback_ServerConnectionSendData>
    1e0a:	e8 2e       	mov	r14, r24
    1e0c:	f9 2e       	mov	r15, r25
    1e0e:	f5 eb       	ldi	r31, 0xB5	; 181
    1e10:	ef 16       	cp	r14, r31
    1e12:	f5 e0       	ldi	r31, 0x05	; 5
    1e14:	ff 06       	cpc	r15, r31
    1e16:	30 f0       	brcs	.+12     	; 0x1e24 <ESP8266_Update+0x190>
    1e18:	0f 2e       	mov	r0, r31
    1e1a:	f4 eb       	ldi	r31, 0xB4	; 180
    1e1c:	ef 2e       	mov	r14, r31
    1e1e:	f5 e0       	ldi	r31, 0x05	; 5
    1e20:	ff 2e       	mov	r15, r31
    1e22:	f0 2d       	mov	r31, r0
    1e24:	e1 14       	cp	r14, r1
    1e26:	f1 04       	cpc	r15, r1
    1e28:	b1 f0       	breq	.+44     	; 0x1e56 <ESP8266_Update+0x1c2>
    1e2a:	b7 01       	movw	r22, r14
    1e2c:	d6 01       	movw	r26, r12
    1e2e:	54 96       	adiw	r26, 0x14	; 20
    1e30:	8d 91       	ld	r24, X+
    1e32:	9c 91       	ld	r25, X
    1e34:	55 97       	sbiw	r26, 0x15	; 21
    1e36:	95 d4       	rcall	.+2346   	; 0x2762 <ESP8266_LL_USARTSend>
    1e38:	f8 01       	movw	r30, r16
    1e3a:	e9 5d       	subi	r30, 0xD9	; 217
    1e3c:	fe 4f       	sbci	r31, 0xFE	; 254
    1e3e:	80 81       	ld	r24, Z
    1e40:	91 81       	ldd	r25, Z+1	; 0x01
    1e42:	a2 81       	ldd	r26, Z+2	; 0x02
    1e44:	b3 81       	ldd	r27, Z+3	; 0x03
    1e46:	8e 0d       	add	r24, r14
    1e48:	9f 1d       	adc	r25, r15
    1e4a:	a1 1d       	adc	r26, r1
    1e4c:	b1 1d       	adc	r27, r1
    1e4e:	80 83       	st	Z, r24
    1e50:	91 83       	std	Z+1, r25	; 0x01
    1e52:	a2 83       	std	Z+2, r26	; 0x02
    1e54:	b3 83       	std	Z+3, r27	; 0x03
    1e56:	62 e0       	ldi	r22, 0x02	; 2
    1e58:	70 e0       	ldi	r23, 0x00	; 0
    1e5a:	82 ed       	ldi	r24, 0xD2	; 210
    1e5c:	93 e0       	ldi	r25, 0x03	; 3
    1e5e:	81 d4       	rcall	.+2306   	; 0x2762 <ESP8266_LL_USARTSend>
    1e60:	81 e0       	ldi	r24, 0x01	; 1
    1e62:	f6 01       	movw	r30, r12
    1e64:	83 8b       	std	Z+19, r24	; 0x13
    1e66:	f8 01       	movw	r30, r16
    1e68:	84 81       	ldd	r24, Z+4	; 0x04
    1e6a:	95 81       	ldd	r25, Z+5	; 0x05
    1e6c:	a6 81       	ldd	r26, Z+6	; 0x06
    1e6e:	b7 81       	ldd	r27, Z+7	; 0x07
    1e70:	41 97       	sbiw	r24, 0x11	; 17
    1e72:	a1 05       	cpc	r26, r1
    1e74:	b1 05       	cpc	r27, r1
    1e76:	01 f5       	brne	.+64     	; 0x1eb8 <ESP8266_Update+0x224>
    1e78:	ef 5f       	subi	r30, 0xFF	; 255
    1e7a:	fe 4f       	sbci	r31, 0xFE	; 254
    1e7c:	80 81       	ld	r24, Z
    1e7e:	81 11       	cpse	r24, r1
    1e80:	7a c0       	rjmp	.+244    	; 0x1f76 <ESP8266_Update+0x2e2>
    1e82:	44 e0       	ldi	r20, 0x04	; 4
    1e84:	50 e0       	ldi	r21, 0x00	; 0
    1e86:	6d ed       	ldi	r22, 0xDD	; 221
    1e88:	72 e0       	ldi	r23, 0x02	; 2
    1e8a:	86 e4       	ldi	r24, 0x46	; 70
    1e8c:	96 e1       	ldi	r25, 0x16	; 22
    1e8e:	0e 94 09 03 	call	0x612	; 0x612 <BUFFER_Find>
    1e92:	99 23       	and	r25, r25
    1e94:	8c f0       	brlt	.+34     	; 0x1eb8 <ESP8266_Update+0x224>
    1e96:	86 e4       	ldi	r24, 0x46	; 70
    1e98:	96 e1       	ldi	r25, 0x16	; 22
    1e9a:	0e 94 b1 02 	call	0x562	; 0x562 <BUFFER_Reset>
    1e9e:	d8 01       	movw	r26, r16
    1ea0:	14 96       	adiw	r26, 0x04	; 4
    1ea2:	1d 92       	st	X+, r1
    1ea4:	1d 92       	st	X+, r1
    1ea6:	1d 92       	st	X+, r1
    1ea8:	1c 92       	st	X, r1
    1eaa:	17 97       	sbiw	r26, 0x07	; 7
    1eac:	f8 01       	movw	r30, r16
    1eae:	e3 5d       	subi	r30, 0xD3	; 211
    1eb0:	fe 4f       	sbci	r31, 0xFE	; 254
    1eb2:	81 81       	ldd	r24, Z+1	; 0x01
    1eb4:	82 60       	ori	r24, 0x02	; 2
    1eb6:	81 83       	std	Z+1, r24	; 0x01
    1eb8:	f8 01       	movw	r30, r16
    1eba:	ef 5f       	subi	r30, 0xFF	; 255
    1ebc:	fe 4f       	sbci	r31, 0xFE	; 254
    1ebe:	80 81       	ld	r24, Z
    1ec0:	88 23       	and	r24, r24
    1ec2:	e9 f0       	breq	.+58     	; 0x1efe <ESP8266_Update+0x26a>
    1ec4:	51 c0       	rjmp	.+162    	; 0x1f68 <ESP8266_Update+0x2d4>
    1ec6:	9c 01       	movw	r18, r24
    1ec8:	41 e0       	ldi	r20, 0x01	; 1
    1eca:	be 01       	movw	r22, r28
    1ecc:	6f 5f       	subi	r22, 0xFF	; 255
    1ece:	7f 4f       	sbci	r23, 0xFF	; 255
    1ed0:	c8 01       	movw	r24, r16
    1ed2:	07 d8       	rcall	.-4082   	; 0xee2 <ParseReceived>
    1ed4:	f7 01       	movw	r30, r14
    1ed6:	80 81       	ld	r24, Z
    1ed8:	88 23       	and	r24, r24
    1eda:	a9 f0       	breq	.+42     	; 0x1f06 <ESP8266_Update+0x272>
    1edc:	45 c0       	rjmp	.+138    	; 0x1f68 <ESP8266_Update+0x2d4>
    1ede:	f8 01       	movw	r30, r16
    1ee0:	ef 5f       	subi	r30, 0xFF	; 255
    1ee2:	fe 4f       	sbci	r31, 0xFE	; 254
    1ee4:	80 81       	ld	r24, Z
    1ee6:	81 11       	cpse	r24, r1
    1ee8:	46 c0       	rjmp	.+140    	; 0x1f76 <ESP8266_Update+0x2e2>
    1eea:	f8 01       	movw	r30, r16
    1eec:	84 81       	ldd	r24, Z+4	; 0x04
    1eee:	95 81       	ldd	r25, Z+5	; 0x05
    1ef0:	a6 81       	ldd	r26, Z+6	; 0x06
    1ef2:	b7 81       	ldd	r27, Z+7	; 0x07
    1ef4:	89 2b       	or	r24, r25
    1ef6:	8a 2b       	or	r24, r26
    1ef8:	8b 2b       	or	r24, r27
    1efa:	39 f1       	breq	.+78     	; 0x1f4a <ESP8266_Update+0x2b6>
    1efc:	54 c1       	rjmp	.+680    	; 0x21a6 <ESP8266_Update+0x512>
    1efe:	78 01       	movw	r14, r16
    1f00:	f1 e0       	ldi	r31, 0x01	; 1
    1f02:	ef 0e       	add	r14, r31
    1f04:	ff 1e       	adc	r15, r31
    1f06:	40 e8       	ldi	r20, 0x80	; 128
    1f08:	50 e0       	ldi	r21, 0x00	; 0
    1f0a:	be 01       	movw	r22, r28
    1f0c:	6f 5f       	subi	r22, 0xFF	; 255
    1f0e:	7f 4f       	sbci	r23, 0xFF	; 255
    1f10:	86 e4       	ldi	r24, 0x46	; 70
    1f12:	96 e1       	ldi	r25, 0x16	; 22
    1f14:	0e 94 cf 03 	call	0x79e	; 0x79e <BUFFER_ReadString>
    1f18:	00 97       	sbiw	r24, 0x00	; 0
    1f1a:	a9 f6       	brne	.-86     	; 0x1ec6 <ESP8266_Update+0x232>
    1f1c:	e0 cf       	rjmp	.-64     	; 0x1ede <ESP8266_Update+0x24a>
    1f1e:	9c 01       	movw	r18, r24
    1f20:	40 e0       	ldi	r20, 0x00	; 0
    1f22:	be 01       	movw	r22, r28
    1f24:	6f 5f       	subi	r22, 0xFF	; 255
    1f26:	7f 4f       	sbci	r23, 0xFF	; 255
    1f28:	c8 01       	movw	r24, r16
    1f2a:	0e 94 71 07 	call	0xee2	; 0xee2 <ParseReceived>
    1f2e:	d7 01       	movw	r26, r14
    1f30:	8c 91       	ld	r24, X
    1f32:	81 11       	cpse	r24, r1
    1f34:	20 c0       	rjmp	.+64     	; 0x1f76 <ESP8266_Update+0x2e2>
    1f36:	f8 01       	movw	r30, r16
    1f38:	84 81       	ldd	r24, Z+4	; 0x04
    1f3a:	95 81       	ldd	r25, Z+5	; 0x05
    1f3c:	a6 81       	ldd	r26, Z+6	; 0x06
    1f3e:	b7 81       	ldd	r27, Z+7	; 0x07
    1f40:	89 2b       	or	r24, r25
    1f42:	8a 2b       	or	r24, r26
    1f44:	8b 2b       	or	r24, r27
    1f46:	29 f0       	breq	.+10     	; 0x1f52 <ESP8266_Update+0x2be>
    1f48:	2e c1       	rjmp	.+604    	; 0x21a6 <ESP8266_Update+0x512>
    1f4a:	78 01       	movw	r14, r16
    1f4c:	f1 e0       	ldi	r31, 0x01	; 1
    1f4e:	ef 0e       	add	r14, r31
    1f50:	ff 1e       	adc	r15, r31
    1f52:	40 e8       	ldi	r20, 0x80	; 128
    1f54:	50 e0       	ldi	r21, 0x00	; 0
    1f56:	be 01       	movw	r22, r28
    1f58:	6f 5f       	subi	r22, 0xFF	; 255
    1f5a:	7f 4f       	sbci	r23, 0xFF	; 255
    1f5c:	88 e5       	ldi	r24, 0x58	; 88
    1f5e:	96 e1       	ldi	r25, 0x16	; 22
    1f60:	0e 94 cf 03 	call	0x79e	; 0x79e <BUFFER_ReadString>
    1f64:	00 97       	sbiw	r24, 0x00	; 0
    1f66:	d9 f6       	brne	.-74     	; 0x1f1e <ESP8266_Update+0x28a>
    1f68:	f8 01       	movw	r30, r16
    1f6a:	ef 5f       	subi	r30, 0xFF	; 255
    1f6c:	fe 4f       	sbci	r31, 0xFE	; 254
    1f6e:	80 81       	ld	r24, Z
    1f70:	88 23       	and	r24, r24
    1f72:	09 f4       	brne	.+2      	; 0x1f76 <ESP8266_Update+0x2e2>
    1f74:	18 c1       	rjmp	.+560    	; 0x21a6 <ESP8266_Update+0x512>
    1f76:	f8 01       	movw	r30, r16
    1f78:	e9 5f       	subi	r30, 0xF9	; 249
    1f7a:	fe 4f       	sbci	r31, 0xFE	; 254
    1f7c:	80 81       	ld	r24, Z
    1f7e:	81 11       	cpse	r24, r1
    1f80:	07 c0       	rjmp	.+14     	; 0x1f90 <ESP8266_Update+0x2fc>
    1f82:	0f 2e       	mov	r0, r31
    1f84:	f8 e5       	ldi	r31, 0x58	; 88
    1f86:	af 2e       	mov	r10, r31
    1f88:	f6 e1       	ldi	r31, 0x16	; 22
    1f8a:	bf 2e       	mov	r11, r31
    1f8c:	f0 2d       	mov	r31, r0
    1f8e:	06 c0       	rjmp	.+12     	; 0x1f9c <ESP8266_Update+0x308>
    1f90:	0f 2e       	mov	r0, r31
    1f92:	f6 e4       	ldi	r31, 0x46	; 70
    1f94:	af 2e       	mov	r10, r31
    1f96:	f6 e1       	ldi	r31, 0x16	; 22
    1f98:	bf 2e       	mov	r11, r31
    1f9a:	f0 2d       	mov	r31, r0
    1f9c:	78 01       	movw	r14, r16
    1f9e:	2e ef       	ldi	r18, 0xFE	; 254
    1fa0:	e2 1a       	sub	r14, r18
    1fa2:	f2 0a       	sbc	r15, r18
    1fa4:	68 01       	movw	r12, r16
    1fa6:	3a ef       	ldi	r19, 0xFA	; 250
    1fa8:	c3 1a       	sub	r12, r19
    1faa:	3e ef       	ldi	r19, 0xFE	; 254
    1fac:	d3 0a       	sbc	r13, r19
    1fae:	0f 2e       	mov	r0, r31
    1fb0:	f5 e2       	ldi	r31, 0x25	; 37
    1fb2:	7f 2e       	mov	r7, r31
    1fb4:	f0 2d       	mov	r31, r0
    1fb6:	48 01       	movw	r8, r16
    1fb8:	8c ef       	ldi	r24, 0xFC	; 252
    1fba:	88 1a       	sub	r8, r24
    1fbc:	8e ef       	ldi	r24, 0xFE	; 254
    1fbe:	98 0a       	sbc	r9, r24
    1fc0:	70 c0       	rjmp	.+224    	; 0x20a2 <ESP8266_Update+0x40e>
    1fc2:	41 e0       	ldi	r20, 0x01	; 1
    1fc4:	50 e0       	ldi	r21, 0x00	; 0
    1fc6:	be 01       	movw	r22, r28
    1fc8:	6f 57       	subi	r22, 0x7F	; 127
    1fca:	7f 4f       	sbci	r23, 0xFF	; 255
    1fcc:	c5 01       	movw	r24, r10
    1fce:	0e 94 0c 02 	call	0x418	; 0x418 <BUFFER_Read>
    1fd2:	cf 57       	subi	r28, 0x7F	; 127
    1fd4:	df 4f       	sbci	r29, 0xFF	; 255
    1fd6:	28 81       	ld	r18, Y
    1fd8:	c1 58       	subi	r28, 0x81	; 129
    1fda:	d0 40       	sbci	r29, 0x00	; 0
    1fdc:	d6 01       	movw	r26, r12
    1fde:	8c 91       	ld	r24, X
    1fe0:	f8 01       	movw	r30, r16
    1fe2:	78 9e       	mul	r7, r24
    1fe4:	e0 0d       	add	r30, r0
    1fe6:	f1 1d       	adc	r31, r1
    1fe8:	11 24       	eor	r1, r1
    1fea:	06 a4       	ldd	r0, Z+46	; 0x2e
    1fec:	f7 a5       	ldd	r31, Z+47	; 0x2f
    1fee:	e0 2d       	mov	r30, r0
    1ff0:	d7 01       	movw	r26, r14
    1ff2:	8d 91       	ld	r24, X+
    1ff4:	9c 91       	ld	r25, X
    1ff6:	11 97       	sbiw	r26, 0x01	; 1
    1ff8:	e8 0f       	add	r30, r24
    1ffa:	f9 1f       	adc	r31, r25
    1ffc:	20 83       	st	Z, r18
    1ffe:	8d 91       	ld	r24, X+
    2000:	9c 91       	ld	r25, X
    2002:	11 97       	sbiw	r26, 0x01	; 1
    2004:	01 96       	adiw	r24, 0x01	; 1
    2006:	8d 93       	st	X+, r24
    2008:	9c 93       	st	X, r25
    200a:	f4 01       	movw	r30, r8
    200c:	20 81       	ld	r18, Z
    200e:	31 81       	ldd	r19, Z+1	; 0x01
    2010:	2f 5f       	subi	r18, 0xFF	; 255
    2012:	3f 4f       	sbci	r19, 0xFF	; 255
    2014:	31 83       	std	Z+1, r19	; 0x01
    2016:	20 83       	st	Z, r18
    2018:	84 3b       	cpi	r24, 0xB4	; 180
    201a:	f5 e0       	ldi	r31, 0x05	; 5
    201c:	9f 07       	cpc	r25, r31
    201e:	08 f4       	brcc	.+2      	; 0x2022 <ESP8266_Update+0x38e>
    2020:	40 c0       	rjmp	.+128    	; 0x20a2 <ESP8266_Update+0x40e>
    2022:	d6 01       	movw	r26, r12
    2024:	ec 91       	ld	r30, X
    2026:	ac 01       	movw	r20, r24
    2028:	60 e0       	ldi	r22, 0x00	; 0
    202a:	70 e0       	ldi	r23, 0x00	; 0
    202c:	2e 2f       	mov	r18, r30
    202e:	30 e0       	ldi	r19, 0x00	; 0
    2030:	d8 01       	movw	r26, r16
    2032:	7e 9e       	mul	r7, r30
    2034:	a0 0d       	add	r26, r0
    2036:	b1 1d       	adc	r27, r1
    2038:	11 24       	eor	r1, r1
    203a:	fd 01       	movw	r30, r26
    203c:	24 a0       	ldd	r2, Z+36	; 0x24
    203e:	35 a0       	ldd	r3, Z+37	; 0x25
    2040:	46 a0       	ldd	r4, Z+38	; 0x26
    2042:	57 a0       	ldd	r5, Z+39	; 0x27
    2044:	42 15       	cp	r20, r2
    2046:	53 05       	cpc	r21, r3
    2048:	64 05       	cpc	r22, r4
    204a:	75 05       	cpc	r23, r5
    204c:	51 f1       	breq	.+84     	; 0x20a2 <ESP8266_Update+0x40e>
    204e:	fd 01       	movw	r30, r26
    2050:	91 ab       	std	Z+49, r25	; 0x31
    2052:	80 ab       	std	Z+48, r24	; 0x30
    2054:	12 aa       	std	Z+50, r1	; 0x32
    2056:	84 8d       	ldd	r24, Z+28	; 0x1c
    2058:	88 23       	and	r24, r24
    205a:	79 f0       	breq	.+30     	; 0x207a <ESP8266_Update+0x3e6>
    205c:	72 9e       	mul	r7, r18
    205e:	b0 01       	movw	r22, r0
    2060:	73 9e       	mul	r7, r19
    2062:	70 0d       	add	r23, r0
    2064:	11 24       	eor	r1, r1
    2066:	fd 01       	movw	r30, r26
    2068:	46 a5       	ldd	r20, Z+46	; 0x2e
    206a:	57 a5       	ldd	r21, Z+47	; 0x2f
    206c:	66 5e       	subi	r22, 0xE6	; 230
    206e:	7f 4f       	sbci	r23, 0xFF	; 255
    2070:	60 0f       	add	r22, r16
    2072:	71 1f       	adc	r23, r17
    2074:	c8 01       	movw	r24, r16
    2076:	6d d5       	rcall	.+2778   	; 0x2b52 <ESP8266_Callback_ClientConnectionDataReceived>
    2078:	11 c0       	rjmp	.+34     	; 0x209c <ESP8266_Update+0x408>
    207a:	72 9e       	mul	r7, r18
    207c:	b0 01       	movw	r22, r0
    207e:	73 9e       	mul	r7, r19
    2080:	70 0d       	add	r23, r0
    2082:	11 24       	eor	r1, r1
    2084:	f8 01       	movw	r30, r16
    2086:	e6 0f       	add	r30, r22
    2088:	f7 1f       	adc	r31, r23
    208a:	46 a5       	ldd	r20, Z+46	; 0x2e
    208c:	57 a5       	ldd	r21, Z+47	; 0x2f
    208e:	66 5e       	subi	r22, 0xE6	; 230
    2090:	7f 4f       	sbci	r23, 0xFF	; 255
    2092:	60 0f       	add	r22, r16
    2094:	71 1f       	adc	r23, r17
    2096:	c8 01       	movw	r24, r16
    2098:	0e 94 0e 07 	call	0xe1c	; 0xe1c <ESP8266_Callback_ServerConnectionDataReceived>
    209c:	f7 01       	movw	r30, r14
    209e:	11 82       	std	Z+1, r1	; 0x01
    20a0:	10 82       	st	Z, r1
    20a2:	d7 01       	movw	r26, r14
    20a4:	8d 91       	ld	r24, X+
    20a6:	9c 91       	ld	r25, X
    20a8:	a0 e0       	ldi	r26, 0x00	; 0
    20aa:	b0 e0       	ldi	r27, 0x00	; 0
    20ac:	f6 01       	movw	r30, r12
    20ae:	20 81       	ld	r18, Z
    20b0:	f8 01       	movw	r30, r16
    20b2:	72 9e       	mul	r7, r18
    20b4:	e0 0d       	add	r30, r0
    20b6:	f1 1d       	adc	r31, r1
    20b8:	11 24       	eor	r1, r1
    20ba:	44 a1       	ldd	r20, Z+36	; 0x24
    20bc:	55 a1       	ldd	r21, Z+37	; 0x25
    20be:	66 a1       	ldd	r22, Z+38	; 0x26
    20c0:	77 a1       	ldd	r23, Z+39	; 0x27
    20c2:	84 17       	cp	r24, r20
    20c4:	95 07       	cpc	r25, r21
    20c6:	a6 07       	cpc	r26, r22
    20c8:	b7 07       	cpc	r27, r23
    20ca:	30 f4       	brcc	.+12     	; 0x20d8 <ESP8266_Update+0x444>
    20cc:	c5 01       	movw	r24, r10
    20ce:	0e 94 ce 01 	call	0x39c	; 0x39c <BUFFER_GetFull>
    20d2:	89 2b       	or	r24, r25
    20d4:	09 f0       	breq	.+2      	; 0x20d8 <ESP8266_Update+0x444>
    20d6:	75 cf       	rjmp	.-278    	; 0x1fc2 <ESP8266_Update+0x32e>
    20d8:	f8 01       	movw	r30, r16
    20da:	ea 5f       	subi	r30, 0xFA	; 250
    20dc:	fe 4f       	sbci	r31, 0xFE	; 254
    20de:	20 81       	ld	r18, Z
    20e0:	32 97       	sbiw	r30, 0x02	; 2
    20e2:	80 81       	ld	r24, Z
    20e4:	91 81       	ldd	r25, Z+1	; 0x01
    20e6:	a0 e0       	ldi	r26, 0x00	; 0
    20e8:	b0 e0       	ldi	r27, 0x00	; 0
    20ea:	e2 2e       	mov	r14, r18
    20ec:	f1 2c       	mov	r15, r1
    20ee:	f8 01       	movw	r30, r16
    20f0:	35 e2       	ldi	r19, 0x25	; 37
    20f2:	23 9f       	mul	r18, r19
    20f4:	e0 0d       	add	r30, r0
    20f6:	f1 1d       	adc	r31, r1
    20f8:	11 24       	eor	r1, r1
    20fa:	44 a1       	ldd	r20, Z+36	; 0x24
    20fc:	55 a1       	ldd	r21, Z+37	; 0x25
    20fe:	66 a1       	ldd	r22, Z+38	; 0x26
    2100:	77 a1       	ldd	r23, Z+39	; 0x27
    2102:	84 17       	cp	r24, r20
    2104:	95 07       	cpc	r25, r21
    2106:	a6 07       	cpc	r26, r22
    2108:	b7 07       	cpc	r27, r23
    210a:	08 f4       	brcc	.+2      	; 0x210e <ESP8266_Update+0x47a>
    210c:	4c c0       	rjmp	.+152    	; 0x21a6 <ESP8266_Update+0x512>
    210e:	f8 01       	movw	r30, r16
    2110:	ef 5f       	subi	r30, 0xFF	; 255
    2112:	fe 4f       	sbci	r31, 0xFE	; 254
    2114:	10 82       	st	Z, r1
    2116:	85 e2       	ldi	r24, 0x25	; 37
    2118:	8e 9d       	mul	r24, r14
    211a:	f0 01       	movw	r30, r0
    211c:	8f 9d       	mul	r24, r15
    211e:	f0 0d       	add	r31, r0
    2120:	11 24       	eor	r1, r1
    2122:	e0 0f       	add	r30, r16
    2124:	f1 1f       	adc	r31, r17
    2126:	d8 01       	movw	r26, r16
    2128:	ae 5f       	subi	r26, 0xFE	; 254
    212a:	be 4f       	sbci	r27, 0xFE	; 254
    212c:	8d 91       	ld	r24, X+
    212e:	9c 91       	ld	r25, X
    2130:	91 ab       	std	Z+49, r25	; 0x31
    2132:	80 ab       	std	Z+48, r24	; 0x30
    2134:	81 e0       	ldi	r24, 0x01	; 1
    2136:	82 ab       	std	Z+50, r24	; 0x32
    2138:	85 ad       	ldd	r24, Z+61	; 0x3d
    213a:	88 23       	and	r24, r24
    213c:	01 f1       	breq	.+64     	; 0x217e <ESP8266_Update+0x4ea>
    213e:	85 e2       	ldi	r24, 0x25	; 37
    2140:	8e 9d       	mul	r24, r14
    2142:	f0 01       	movw	r30, r0
    2144:	8f 9d       	mul	r24, r15
    2146:	f0 0d       	add	r31, r0
    2148:	11 24       	eor	r1, r1
    214a:	e0 0f       	add	r30, r16
    214c:	f1 1f       	adc	r31, r17
    214e:	65 ed       	ldi	r22, 0xD5	; 213
    2150:	73 e0       	ldi	r23, 0x03	; 3
    2152:	86 a5       	ldd	r24, Z+46	; 0x2e
    2154:	97 a5       	ldd	r25, Z+47	; 0x2f
    2156:	f9 d6       	rcall	.+3570   	; 0x2f4a <strstr>
    2158:	00 97       	sbiw	r24, 0x00	; 0
    215a:	89 f0       	breq	.+34     	; 0x217e <ESP8266_Update+0x4ea>
    215c:	60 e0       	ldi	r22, 0x00	; 0
    215e:	70 e0       	ldi	r23, 0x00	; 0
    2160:	40 96       	adiw	r24, 0x10	; 16
    2162:	0e 94 3a 04 	call	0x874	; 0x874 <ParseNumber>
    2166:	25 e2       	ldi	r18, 0x25	; 37
    2168:	2e 9d       	mul	r18, r14
    216a:	f0 01       	movw	r30, r0
    216c:	2f 9d       	mul	r18, r15
    216e:	f0 0d       	add	r31, r0
    2170:	11 24       	eor	r1, r1
    2172:	e0 0f       	add	r30, r16
    2174:	f1 1f       	adc	r31, r17
    2176:	64 ab       	std	Z+52, r22	; 0x34
    2178:	75 ab       	std	Z+53, r23	; 0x35
    217a:	86 ab       	std	Z+54, r24	; 0x36
    217c:	97 ab       	std	Z+55, r25	; 0x37
    217e:	f8 01       	movw	r30, r16
    2180:	ea 5f       	subi	r30, 0xFA	; 250
    2182:	fe 4f       	sbci	r31, 0xFE	; 254
    2184:	80 81       	ld	r24, Z
    2186:	f8 01       	movw	r30, r16
    2188:	95 e2       	ldi	r25, 0x25	; 37
    218a:	89 9f       	mul	r24, r25
    218c:	e0 0d       	add	r30, r0
    218e:	f1 1d       	adc	r31, r1
    2190:	11 24       	eor	r1, r1
    2192:	81 e0       	ldi	r24, 0x01	; 1
    2194:	83 ab       	std	Z+51, r24	; 0x33
    2196:	07 c0       	rjmp	.+14     	; 0x21a6 <ESP8266_Update+0x512>
    2198:	f8 01       	movw	r30, r16
    219a:	e2 5d       	subi	r30, 0xD2	; 210
    219c:	fe 4f       	sbci	r31, 0xFE	; 254
    219e:	80 81       	ld	r24, Z
    21a0:	80 ff       	sbrs	r24, 0
    21a2:	8a ce       	rjmp	.-748    	; 0x1eb8 <ESP8266_Update+0x224>
    21a4:	db cd       	rjmp	.-1098   	; 0x1d5c <ESP8266_Update+0xc8>
    21a6:	c8 01       	movw	r24, r16
    21a8:	0e 94 13 07 	call	0xe26	; 0xe26 <CallConnectionCallbacks>
    21ac:	f8 01       	movw	r30, r16
    21ae:	ef 5c       	subi	r30, 0xCF	; 207
    21b0:	fe 4f       	sbci	r31, 0xFE	; 254
    21b2:	10 82       	st	Z, r1
    21b4:	80 e0       	ldi	r24, 0x00	; 0
    21b6:	cd 57       	subi	r28, 0x7D	; 125
    21b8:	df 4f       	sbci	r29, 0xFF	; 255
    21ba:	0f b6       	in	r0, 0x3f	; 63
    21bc:	f8 94       	cli
    21be:	de bf       	out	0x3e, r29	; 62
    21c0:	0f be       	out	0x3f, r0	; 63
    21c2:	cd bf       	out	0x3d, r28	; 61
    21c4:	df 91       	pop	r29
    21c6:	cf 91       	pop	r28
    21c8:	1f 91       	pop	r17
    21ca:	0f 91       	pop	r16
    21cc:	ff 90       	pop	r15
    21ce:	ef 90       	pop	r14
    21d0:	df 90       	pop	r13
    21d2:	cf 90       	pop	r12
    21d4:	bf 90       	pop	r11
    21d6:	af 90       	pop	r10
    21d8:	9f 90       	pop	r9
    21da:	8f 90       	pop	r8
    21dc:	7f 90       	pop	r7
    21de:	5f 90       	pop	r5
    21e0:	4f 90       	pop	r4
    21e2:	3f 90       	pop	r3
    21e4:	2f 90       	pop	r2
    21e6:	08 95       	ret

000021e8 <SendCommand>:
    21e8:	cf 92       	push	r12
    21ea:	df 92       	push	r13
    21ec:	ef 92       	push	r14
    21ee:	ff 92       	push	r15
    21f0:	1f 93       	push	r17
    21f2:	cf 93       	push	r28
    21f4:	df 93       	push	r29
    21f6:	ec 01       	movw	r28, r24
    21f8:	16 2f       	mov	r17, r22
    21fa:	6a 01       	movw	r12, r20
    21fc:	79 01       	movw	r14, r18
    21fe:	8c 81       	ldd	r24, Y+4	; 0x04
    2200:	9d 81       	ldd	r25, Y+5	; 0x05
    2202:	ae 81       	ldd	r26, Y+6	; 0x06
    2204:	bf 81       	ldd	r27, Y+7	; 0x07
    2206:	89 2b       	or	r24, r25
    2208:	8a 2b       	or	r24, r26
    220a:	8b 2b       	or	r24, r27
    220c:	39 f0       	breq	.+14     	; 0x221c <__stack+0x1d>
    220e:	ce 01       	movw	r24, r28
    2210:	41 dd       	rcall	.-1406   	; 0x1c94 <ESP8266_Update>
    2212:	cf 5c       	subi	r28, 0xCF	; 207
    2214:	de 4f       	sbci	r29, 0xFE	; 254
    2216:	87 e0       	ldi	r24, 0x07	; 7
    2218:	88 83       	st	Y, r24
    221a:	29 c0       	rjmp	.+82     	; 0x226e <__stack+0x6f>
    221c:	61 31       	cpi	r22, 0x11	; 17
    221e:	21 f4       	brne	.+8      	; 0x2228 <__stack+0x29>
    2220:	86 e4       	ldi	r24, 0x46	; 70
    2222:	96 e1       	ldi	r25, 0x16	; 22
    2224:	0e 94 b1 02 	call	0x562	; 0x562 <BUFFER_Reset>
    2228:	c1 14       	cp	r12, r1
    222a:	d1 04       	cpc	r13, r1
    222c:	51 f0       	breq	.+20     	; 0x2242 <__stack+0x43>
    222e:	f6 01       	movw	r30, r12
    2230:	01 90       	ld	r0, Z+
    2232:	00 20       	and	r0, r0
    2234:	e9 f7       	brne	.-6      	; 0x2230 <__stack+0x31>
    2236:	31 97       	sbiw	r30, 0x01	; 1
    2238:	bf 01       	movw	r22, r30
    223a:	6c 19       	sub	r22, r12
    223c:	7d 09       	sbc	r23, r13
    223e:	c6 01       	movw	r24, r12
    2240:	90 d2       	rcall	.+1312   	; 0x2762 <ESP8266_LL_USARTSend>
    2242:	81 2f       	mov	r24, r17
    2244:	90 e0       	ldi	r25, 0x00	; 0
    2246:	a0 e0       	ldi	r26, 0x00	; 0
    2248:	b0 e0       	ldi	r27, 0x00	; 0
    224a:	8c 83       	std	Y+4, r24	; 0x04
    224c:	9d 83       	std	Y+5, r25	; 0x05
    224e:	ae 83       	std	Y+6, r26	; 0x06
    2250:	bf 83       	std	Y+7, r27	; 0x07
    2252:	f9 86       	std	Y+9, r15	; 0x09
    2254:	e8 86       	std	Y+8, r14	; 0x08
    2256:	8e 85       	ldd	r24, Y+14	; 0x0e
    2258:	9f 85       	ldd	r25, Y+15	; 0x0f
    225a:	a8 89       	ldd	r26, Y+16	; 0x10
    225c:	b9 89       	ldd	r27, Y+17	; 0x11
    225e:	8a 87       	std	Y+10, r24	; 0x0a
    2260:	9b 87       	std	Y+11, r25	; 0x0b
    2262:	ac 87       	std	Y+12, r26	; 0x0c
    2264:	bd 87       	std	Y+13, r27	; 0x0d
    2266:	cf 5c       	subi	r28, 0xCF	; 207
    2268:	de 4f       	sbci	r29, 0xFE	; 254
    226a:	18 82       	st	Y, r1
    226c:	80 e0       	ldi	r24, 0x00	; 0
    226e:	df 91       	pop	r29
    2270:	cf 91       	pop	r28
    2272:	1f 91       	pop	r17
    2274:	ff 90       	pop	r15
    2276:	ef 90       	pop	r14
    2278:	df 90       	pop	r13
    227a:	cf 90       	pop	r12
    227c:	08 95       	ret

0000227e <ESP8266_WifiDisconnect>:
    227e:	22 e0       	ldi	r18, 0x02	; 2
    2280:	34 e0       	ldi	r19, 0x04	; 4
    2282:	4b e0       	ldi	r20, 0x0B	; 11
    2284:	54 e0       	ldi	r21, 0x04	; 4
    2286:	61 e0       	ldi	r22, 0x01	; 1
    2288:	af cf       	rjmp	.-162    	; 0x21e8 <SendCommand>
    228a:	08 95       	ret

0000228c <ESP8266_WifiGetConnected>:
    228c:	2f e8       	ldi	r18, 0x8F	; 143
    228e:	33 e0       	ldi	r19, 0x03	; 3
    2290:	46 e1       	ldi	r20, 0x16	; 22
    2292:	54 e0       	ldi	r21, 0x04	; 4
    2294:	63 e1       	ldi	r22, 0x13	; 19
    2296:	a8 cf       	rjmp	.-176    	; 0x21e8 <SendCommand>
    2298:	08 95       	ret

0000229a <ESP8266_GetSTAIP>:
    229a:	cf 93       	push	r28
    229c:	df 93       	push	r29
    229e:	ec 01       	movw	r28, r24
    22a0:	26 e2       	ldi	r18, 0x26	; 38
    22a2:	34 e0       	ldi	r19, 0x04	; 4
    22a4:	42 e3       	ldi	r20, 0x32	; 50
    22a6:	54 e0       	ldi	r21, 0x04	; 4
    22a8:	66 e1       	ldi	r22, 0x16	; 22
    22aa:	9e df       	rcall	.-196    	; 0x21e8 <SendCommand>
    22ac:	fe 01       	movw	r30, r28
    22ae:	ef 5c       	subi	r30, 0xCF	; 207
    22b0:	fe 4f       	sbci	r31, 0xFE	; 254
    22b2:	80 81       	ld	r24, Z
    22b4:	81 11       	cpse	r24, r1
    22b6:	06 c0       	rjmp	.+12     	; 0x22c4 <ESP8266_GetSTAIP+0x2a>
    22b8:	c3 5d       	subi	r28, 0xD3	; 211
    22ba:	de 4f       	sbci	r29, 0xFE	; 254
    22bc:	98 81       	ld	r25, Y
    22be:	9c 7f       	andi	r25, 0xFC	; 252
    22c0:	9b 7f       	andi	r25, 0xFB	; 251
    22c2:	98 83       	st	Y, r25
    22c4:	df 91       	pop	r29
    22c6:	cf 91       	pop	r28
    22c8:	08 95       	ret

000022ca <ESP8266_WaitReady>:
    22ca:	0f 93       	push	r16
    22cc:	1f 93       	push	r17
    22ce:	cf 93       	push	r28
    22d0:	df 93       	push	r29
    22d2:	ec 01       	movw	r28, r24
    22d4:	8c 01       	movw	r16, r24
    22d6:	02 5d       	subi	r16, 0xD2	; 210
    22d8:	1e 4f       	sbci	r17, 0xFE	; 254
    22da:	f8 01       	movw	r30, r16
    22dc:	80 81       	ld	r24, Z
    22de:	80 ff       	sbrs	r24, 0
    22e0:	11 c0       	rjmp	.+34     	; 0x2304 <ESP8266_WaitReady+0x3a>
    22e2:	42 e0       	ldi	r20, 0x02	; 2
    22e4:	50 e0       	ldi	r21, 0x00	; 0
    22e6:	6f ec       	ldi	r22, 0xCF	; 207
    22e8:	73 e0       	ldi	r23, 0x03	; 3
    22ea:	86 e4       	ldi	r24, 0x46	; 70
    22ec:	96 e1       	ldi	r25, 0x16	; 22
    22ee:	0e 94 09 03 	call	0x612	; 0x612 <BUFFER_Find>
    22f2:	99 23       	and	r25, r25
    22f4:	3c f0       	brlt	.+14     	; 0x2304 <ESP8266_WaitReady+0x3a>
    22f6:	fe 01       	movw	r30, r28
    22f8:	e3 5d       	subi	r30, 0xD3	; 211
    22fa:	fe 4f       	sbci	r31, 0xFE	; 254
    22fc:	81 81       	ldd	r24, Z+1	; 0x01
    22fe:	8e 7f       	andi	r24, 0xFE	; 254
    2300:	81 83       	std	Z+1, r24	; 0x01
    2302:	0a c0       	rjmp	.+20     	; 0x2318 <ESP8266_WaitReady+0x4e>
    2304:	ce 01       	movw	r24, r28
    2306:	c6 dc       	rcall	.-1652   	; 0x1c94 <ESP8266_Update>
    2308:	8c 81       	ldd	r24, Y+4	; 0x04
    230a:	9d 81       	ldd	r25, Y+5	; 0x05
    230c:	ae 81       	ldd	r26, Y+6	; 0x06
    230e:	bf 81       	ldd	r27, Y+7	; 0x07
    2310:	89 2b       	or	r24, r25
    2312:	8a 2b       	or	r24, r26
    2314:	8b 2b       	or	r24, r27
    2316:	09 f7       	brne	.-62     	; 0x22da <ESP8266_WaitReady+0x10>
    2318:	cf 5c       	subi	r28, 0xCF	; 207
    231a:	de 4f       	sbci	r29, 0xFE	; 254
    231c:	18 82       	st	Y, r1
    231e:	80 e0       	ldi	r24, 0x00	; 0
    2320:	df 91       	pop	r29
    2322:	cf 91       	pop	r28
    2324:	1f 91       	pop	r17
    2326:	0f 91       	pop	r16
    2328:	08 95       	ret

0000232a <ESP8266_ServerEnable>:
    232a:	ef 92       	push	r14
    232c:	ff 92       	push	r15
    232e:	0f 93       	push	r16
    2330:	1f 93       	push	r17
    2332:	cf 93       	push	r28
    2334:	df 93       	push	r29
    2336:	cd b7       	in	r28, 0x3d	; 61
    2338:	de b7       	in	r29, 0x3e	; 62
    233a:	63 97       	sbiw	r28, 0x13	; 19
    233c:	0f b6       	in	r0, 0x3f	; 63
    233e:	f8 94       	cli
    2340:	de bf       	out	0x3e, r29	; 62
    2342:	0f be       	out	0x3f, r0	; 63
    2344:	cd bf       	out	0x3d, r28	; 61
    2346:	8c 01       	movw	r16, r24
    2348:	7f 93       	push	r23
    234a:	6f 93       	push	r22
    234c:	86 e9       	ldi	r24, 0x96	; 150
    234e:	94 e0       	ldi	r25, 0x04	; 4
    2350:	9f 93       	push	r25
    2352:	8f 93       	push	r24
    2354:	ce 01       	movw	r24, r28
    2356:	01 96       	adiw	r24, 0x01	; 1
    2358:	7c 01       	movw	r14, r24
    235a:	9f 93       	push	r25
    235c:	8f 93       	push	r24
    235e:	79 d6       	rcall	.+3314   	; 0x3052 <sprintf>
    2360:	2a ea       	ldi	r18, 0xAA	; 170
    2362:	34 e0       	ldi	r19, 0x04	; 4
    2364:	a7 01       	movw	r20, r14
    2366:	66 e0       	ldi	r22, 0x06	; 6
    2368:	c8 01       	movw	r24, r16
    236a:	3e df       	rcall	.-388    	; 0x21e8 <SendCommand>
    236c:	f8 2e       	mov	r15, r24
    236e:	0f 90       	pop	r0
    2370:	0f 90       	pop	r0
    2372:	0f 90       	pop	r0
    2374:	0f 90       	pop	r0
    2376:	0f 90       	pop	r0
    2378:	0f 90       	pop	r0
    237a:	88 23       	and	r24, r24
    237c:	29 f0       	breq	.+10     	; 0x2388 <ESP8266_ServerEnable+0x5e>
    237e:	f8 01       	movw	r30, r16
    2380:	ef 5c       	subi	r30, 0xCF	; 207
    2382:	fe 4f       	sbci	r31, 0xFE	; 254
    2384:	f0 80       	ld	r15, Z
    2386:	12 c0       	rjmp	.+36     	; 0x23ac <ESP8266_ServerEnable+0x82>
    2388:	c8 01       	movw	r24, r16
    238a:	9f df       	rcall	.-194    	; 0x22ca <ESP8266_WaitReady>
    238c:	f8 01       	movw	r30, r16
    238e:	e2 5d       	subi	r30, 0xD2	; 210
    2390:	fe 4f       	sbci	r31, 0xFE	; 254
    2392:	80 81       	ld	r24, Z
    2394:	81 fd       	sbrc	r24, 1
    2396:	06 c0       	rjmp	.+12     	; 0x23a4 <ESP8266_ServerEnable+0x7a>
    2398:	33 96       	adiw	r30, 0x03	; 3
    239a:	81 e0       	ldi	r24, 0x01	; 1
    239c:	80 83       	st	Z, r24
    239e:	ff 24       	eor	r15, r15
    23a0:	f3 94       	inc	r15
    23a2:	04 c0       	rjmp	.+8      	; 0x23ac <ESP8266_ServerEnable+0x82>
    23a4:	f8 01       	movw	r30, r16
    23a6:	ef 5c       	subi	r30, 0xCF	; 207
    23a8:	fe 4f       	sbci	r31, 0xFE	; 254
    23aa:	10 82       	st	Z, r1
    23ac:	8f 2d       	mov	r24, r15
    23ae:	63 96       	adiw	r28, 0x13	; 19
    23b0:	0f b6       	in	r0, 0x3f	; 63
    23b2:	f8 94       	cli
    23b4:	de bf       	out	0x3e, r29	; 62
    23b6:	0f be       	out	0x3f, r0	; 63
    23b8:	cd bf       	out	0x3d, r28	; 61
    23ba:	df 91       	pop	r29
    23bc:	cf 91       	pop	r28
    23be:	1f 91       	pop	r17
    23c0:	0f 91       	pop	r16
    23c2:	ff 90       	pop	r15
    23c4:	ef 90       	pop	r14
    23c6:	08 95       	ret

000023c8 <ESP8266_GetAP>:
    23c8:	cf 93       	push	r28
    23ca:	df 93       	push	r29
    23cc:	ec 01       	movw	r28, r24
    23ce:	2d e3       	ldi	r18, 0x3D	; 61
    23d0:	36 e0       	ldi	r19, 0x06	; 6
    23d2:	47 ed       	ldi	r20, 0xD7	; 215
    23d4:	54 e0       	ldi	r21, 0x04	; 4
    23d6:	6c e0       	ldi	r22, 0x0C	; 12
    23d8:	07 df       	rcall	.-498    	; 0x21e8 <SendCommand>
    23da:	88 23       	and	r24, r24
    23dc:	21 f0       	breq	.+8      	; 0x23e6 <ESP8266_GetAP+0x1e>
    23de:	cf 5c       	subi	r28, 0xCF	; 207
    23e0:	de 4f       	sbci	r29, 0xFE	; 254
    23e2:	88 81       	ld	r24, Y
    23e4:	02 c0       	rjmp	.+4      	; 0x23ea <ESP8266_GetAP+0x22>
    23e6:	ce 01       	movw	r24, r28
    23e8:	70 df       	rcall	.-288    	; 0x22ca <ESP8266_WaitReady>
    23ea:	df 91       	pop	r29
    23ec:	cf 91       	pop	r28
    23ee:	08 95       	ret

000023f0 <ESP8266_SetMode>:
    23f0:	ff 92       	push	r15
    23f2:	0f 93       	push	r16
    23f4:	1f 93       	push	r17
    23f6:	cf 93       	push	r28
    23f8:	df 93       	push	r29
    23fa:	1f 92       	push	r1
    23fc:	cd b7       	in	r28, 0x3d	; 61
    23fe:	de b7       	in	r29, 0x3e	; 62
    2400:	8c 01       	movw	r16, r24
    2402:	f6 2e       	mov	r15, r22
    2404:	69 83       	std	Y+1, r22	; 0x01
    2406:	fc 01       	movw	r30, r24
    2408:	84 81       	ldd	r24, Z+4	; 0x04
    240a:	95 81       	ldd	r25, Z+5	; 0x05
    240c:	a6 81       	ldd	r26, Z+6	; 0x06
    240e:	b7 81       	ldd	r27, Z+7	; 0x07
    2410:	89 2b       	or	r24, r25
    2412:	8a 2b       	or	r24, r26
    2414:	8b 2b       	or	r24, r27
    2416:	41 f0       	breq	.+16     	; 0x2428 <ESP8266_SetMode+0x38>
    2418:	c8 01       	movw	r24, r16
    241a:	3c dc       	rcall	.-1928   	; 0x1c94 <ESP8266_Update>
    241c:	f8 01       	movw	r30, r16
    241e:	ef 5c       	subi	r30, 0xCF	; 207
    2420:	fe 4f       	sbci	r31, 0xFE	; 254
    2422:	87 e0       	ldi	r24, 0x07	; 7
    2424:	80 83       	st	Z, r24
    2426:	32 c0       	rjmp	.+100    	; 0x248c <ESP8266_SetMode+0x9c>
    2428:	80 e3       	ldi	r24, 0x30	; 48
    242a:	86 0f       	add	r24, r22
    242c:	89 83       	std	Y+1, r24	; 0x01
    242e:	6e e0       	ldi	r22, 0x0E	; 14
    2430:	70 e0       	ldi	r23, 0x00	; 0
    2432:	88 e2       	ldi	r24, 0x28	; 40
    2434:	95 e0       	ldi	r25, 0x05	; 5
    2436:	95 d1       	rcall	.+810    	; 0x2762 <ESP8266_LL_USARTSend>
    2438:	61 e0       	ldi	r22, 0x01	; 1
    243a:	70 e0       	ldi	r23, 0x00	; 0
    243c:	ce 01       	movw	r24, r28
    243e:	01 96       	adiw	r24, 0x01	; 1
    2440:	90 d1       	rcall	.+800    	; 0x2762 <ESP8266_LL_USARTSend>
    2442:	62 e0       	ldi	r22, 0x02	; 2
    2444:	70 e0       	ldi	r23, 0x00	; 0
    2446:	82 e6       	ldi	r24, 0x62	; 98
    2448:	99 e0       	ldi	r25, 0x09	; 9
    244a:	8b d1       	rcall	.+790    	; 0x2762 <ESP8266_LL_USARTSend>
    244c:	27 e3       	ldi	r18, 0x37	; 55
    244e:	35 e0       	ldi	r19, 0x05	; 5
    2450:	40 e0       	ldi	r20, 0x00	; 0
    2452:	50 e0       	ldi	r21, 0x00	; 0
    2454:	65 e0       	ldi	r22, 0x05	; 5
    2456:	c8 01       	movw	r24, r16
    2458:	c7 de       	rcall	.-626    	; 0x21e8 <SendCommand>
    245a:	88 23       	and	r24, r24
    245c:	29 f0       	breq	.+10     	; 0x2468 <ESP8266_SetMode+0x78>
    245e:	f8 01       	movw	r30, r16
    2460:	ef 5c       	subi	r30, 0xCF	; 207
    2462:	fe 4f       	sbci	r31, 0xFE	; 254
    2464:	80 81       	ld	r24, Z
    2466:	12 c0       	rjmp	.+36     	; 0x248c <ESP8266_SetMode+0x9c>
    2468:	f8 01       	movw	r30, r16
    246a:	e9 50       	subi	r30, 0x09	; 9
    246c:	ff 4f       	sbci	r31, 0xFF	; 255
    246e:	f0 82       	st	Z, r15
    2470:	c8 01       	movw	r24, r16
    2472:	2b df       	rcall	.-426    	; 0x22ca <ESP8266_WaitReady>
    2474:	f8 01       	movw	r30, r16
    2476:	e8 50       	subi	r30, 0x08	; 8
    2478:	ff 4f       	sbci	r31, 0xFF	; 255
    247a:	80 81       	ld	r24, Z
    247c:	8f 15       	cp	r24, r15
    247e:	21 f0       	breq	.+8      	; 0x2488 <ESP8266_SetMode+0x98>
    2480:	f9 96       	adiw	r30, 0x39	; 57
    2482:	81 e0       	ldi	r24, 0x01	; 1
    2484:	80 83       	st	Z, r24
    2486:	02 c0       	rjmp	.+4      	; 0x248c <ESP8266_SetMode+0x9c>
    2488:	c8 01       	movw	r24, r16
    248a:	9e df       	rcall	.-196    	; 0x23c8 <ESP8266_GetAP>
    248c:	0f 90       	pop	r0
    248e:	df 91       	pop	r29
    2490:	cf 91       	pop	r28
    2492:	1f 91       	pop	r17
    2494:	0f 91       	pop	r16
    2496:	ff 90       	pop	r15
    2498:	08 95       	ret

0000249a <ESP8266_RequestSendData>:
    249a:	0f 93       	push	r16
    249c:	1f 93       	push	r17
    249e:	cf 93       	push	r28
    24a0:	df 93       	push	r29
    24a2:	ec 01       	movw	r28, r24
    24a4:	8b 01       	movw	r16, r22
    24a6:	8c 81       	ldd	r24, Y+4	; 0x04
    24a8:	9d 81       	ldd	r25, Y+5	; 0x05
    24aa:	ae 81       	ldd	r26, Y+6	; 0x06
    24ac:	bf 81       	ldd	r27, Y+7	; 0x07
    24ae:	89 2b       	or	r24, r25
    24b0:	8a 2b       	or	r24, r26
    24b2:	8b 2b       	or	r24, r27
    24b4:	39 f0       	breq	.+14     	; 0x24c4 <ESP8266_RequestSendData+0x2a>
    24b6:	ce 01       	movw	r24, r28
    24b8:	ed db       	rcall	.-2086   	; 0x1c94 <ESP8266_Update>
    24ba:	cf 5c       	subi	r28, 0xCF	; 207
    24bc:	de 4f       	sbci	r29, 0xFE	; 254
    24be:	87 e0       	ldi	r24, 0x07	; 7
    24c0:	88 83       	st	Y, r24
    24c2:	33 c0       	rjmp	.+102    	; 0x252a <ESP8266_RequestSendData+0x90>
    24c4:	fb 01       	movw	r30, r22
    24c6:	81 81       	ldd	r24, Z+1	; 0x01
    24c8:	80 5d       	subi	r24, 0xD0	; 208
    24ca:	81 83       	std	Z+1, r24	; 0x01
    24cc:	6d e0       	ldi	r22, 0x0D	; 13
    24ce:	70 e0       	ldi	r23, 0x00	; 0
    24d0:	81 e4       	ldi	r24, 0x41	; 65
    24d2:	95 e0       	ldi	r25, 0x05	; 5
    24d4:	46 d1       	rcall	.+652    	; 0x2762 <ESP8266_LL_USARTSend>
    24d6:	61 e0       	ldi	r22, 0x01	; 1
    24d8:	70 e0       	ldi	r23, 0x00	; 0
    24da:	c8 01       	movw	r24, r16
    24dc:	01 96       	adiw	r24, 0x01	; 1
    24de:	41 d1       	rcall	.+642    	; 0x2762 <ESP8266_LL_USARTSend>
    24e0:	67 e0       	ldi	r22, 0x07	; 7
    24e2:	70 e0       	ldi	r23, 0x00	; 0
    24e4:	8f e4       	ldi	r24, 0x4F	; 79
    24e6:	95 e0       	ldi	r25, 0x05	; 5
    24e8:	3c d1       	rcall	.+632    	; 0x2762 <ESP8266_LL_USARTSend>
    24ea:	f8 01       	movw	r30, r16
    24ec:	81 81       	ldd	r24, Z+1	; 0x01
    24ee:	80 53       	subi	r24, 0x30	; 48
    24f0:	81 83       	std	Z+1, r24	; 0x01
    24f2:	27 e5       	ldi	r18, 0x57	; 87
    24f4:	35 e0       	ldi	r19, 0x05	; 5
    24f6:	40 e0       	ldi	r20, 0x00	; 0
    24f8:	50 e0       	ldi	r21, 0x00	; 0
    24fa:	68 e0       	ldi	r22, 0x08	; 8
    24fc:	ce 01       	movw	r24, r28
    24fe:	74 de       	rcall	.-792    	; 0x21e8 <SendCommand>
    2500:	88 23       	and	r24, r24
    2502:	21 f0       	breq	.+8      	; 0x250c <ESP8266_RequestSendData+0x72>
    2504:	cf 5c       	subi	r28, 0xCF	; 207
    2506:	de 4f       	sbci	r29, 0xFE	; 254
    2508:	88 81       	ld	r24, Y
    250a:	0f c0       	rjmp	.+30     	; 0x252a <ESP8266_RequestSendData+0x90>
    250c:	81 e0       	ldi	r24, 0x01	; 1
    250e:	f8 01       	movw	r30, r16
    2510:	82 8b       	std	Z+18, r24	; 0x12
    2512:	fe 01       	movw	r30, r28
    2514:	e3 5d       	subi	r30, 0xD3	; 211
    2516:	fe 4f       	sbci	r31, 0xFE	; 254
    2518:	81 81       	ldd	r24, Z+1	; 0x01
    251a:	81 60       	ori	r24, 0x01	; 1
    251c:	81 83       	std	Z+1, r24	; 0x01
    251e:	32 97       	sbiw	r30, 0x02	; 2
    2520:	11 83       	std	Z+1, r17	; 0x01
    2522:	00 83       	st	Z, r16
    2524:	cf 5c       	subi	r28, 0xCF	; 207
    2526:	de 4f       	sbci	r29, 0xFE	; 254
    2528:	88 81       	ld	r24, Y
    252a:	df 91       	pop	r29
    252c:	cf 91       	pop	r28
    252e:	1f 91       	pop	r17
    2530:	0f 91       	pop	r16
    2532:	08 95       	ret

00002534 <ESP8266_WifiConnect>:
    2534:	cf 92       	push	r12
    2536:	df 92       	push	r13
    2538:	ef 92       	push	r14
    253a:	ff 92       	push	r15
    253c:	0f 93       	push	r16
    253e:	1f 93       	push	r17
    2540:	cf 93       	push	r28
    2542:	df 93       	push	r29
    2544:	ec 01       	movw	r28, r24
    2546:	6b 01       	movw	r12, r22
    2548:	7a 01       	movw	r14, r20
    254a:	0c 81       	ldd	r16, Y+4	; 0x04
    254c:	1d 81       	ldd	r17, Y+5	; 0x05
    254e:	2e 81       	ldd	r18, Y+6	; 0x06
    2550:	3f 81       	ldd	r19, Y+7	; 0x07
    2552:	01 2b       	or	r16, r17
    2554:	02 2b       	or	r16, r18
    2556:	03 2b       	or	r16, r19
    2558:	31 f0       	breq	.+12     	; 0x2566 <ESP8266_WifiConnect+0x32>
    255a:	9c db       	rcall	.-2248   	; 0x1c94 <ESP8266_Update>
    255c:	cf 5c       	subi	r28, 0xCF	; 207
    255e:	de 4f       	sbci	r29, 0xFE	; 254
    2560:	87 e0       	ldi	r24, 0x07	; 7
    2562:	88 83       	st	Y, r24
    2564:	1c c0       	rjmp	.+56     	; 0x259e <ESP8266_WifiConnect+0x6a>
    2566:	6e e0       	ldi	r22, 0x0E	; 14
    2568:	70 e0       	ldi	r23, 0x00	; 0
    256a:	87 ea       	ldi	r24, 0xA7	; 167
    256c:	95 e0       	ldi	r25, 0x05	; 5
    256e:	f9 d0       	rcall	.+498    	; 0x2762 <ESP8266_LL_USARTSend>
    2570:	c6 01       	movw	r24, r12
    2572:	0e 94 93 04 	call	0x926	; 0x926 <EscapeStringAndSend>
    2576:	63 e0       	ldi	r22, 0x03	; 3
    2578:	70 e0       	ldi	r23, 0x00	; 0
    257a:	8d e7       	ldi	r24, 0x7D	; 125
    257c:	96 e0       	ldi	r25, 0x06	; 6
    257e:	f1 d0       	rcall	.+482    	; 0x2762 <ESP8266_LL_USARTSend>
    2580:	c7 01       	movw	r24, r14
    2582:	0e 94 93 04 	call	0x926	; 0x926 <EscapeStringAndSend>
    2586:	63 e0       	ldi	r22, 0x03	; 3
    2588:	70 e0       	ldi	r23, 0x00	; 0
    258a:	86 eb       	ldi	r24, 0xB6	; 182
    258c:	95 e0       	ldi	r25, 0x05	; 5
    258e:	e9 d0       	rcall	.+466    	; 0x2762 <ESP8266_LL_USARTSend>
    2590:	27 e8       	ldi	r18, 0x87	; 135
    2592:	33 e0       	ldi	r19, 0x03	; 3
    2594:	40 e0       	ldi	r20, 0x00	; 0
    2596:	50 e0       	ldi	r21, 0x00	; 0
    2598:	63 e0       	ldi	r22, 0x03	; 3
    259a:	ce 01       	movw	r24, r28
    259c:	25 de       	rcall	.-950    	; 0x21e8 <SendCommand>
    259e:	df 91       	pop	r29
    25a0:	cf 91       	pop	r28
    25a2:	1f 91       	pop	r17
    25a4:	0f 91       	pop	r16
    25a6:	ff 90       	pop	r15
    25a8:	ef 90       	pop	r14
    25aa:	df 90       	pop	r13
    25ac:	cf 90       	pop	r12
    25ae:	08 95       	ret

000025b0 <ESP8266_StartClientConnectionTCP>:

/******************************************/
/*               TCP CLIENT               */
/******************************************/
ESP8266_Result_t ESP8266_StartClientConnectionTCP(ESP8266_t* ESP8266, const char* name, char* location, uint16_t port, void* user_parameters) {
    25b0:	6f 92       	push	r6
    25b2:	7f 92       	push	r7
    25b4:	8f 92       	push	r8
    25b6:	9f 92       	push	r9
    25b8:	af 92       	push	r10
    25ba:	bf 92       	push	r11
    25bc:	cf 92       	push	r12
    25be:	df 92       	push	r13
    25c0:	ef 92       	push	r14
    25c2:	ff 92       	push	r15
    25c4:	0f 93       	push	r16
    25c6:	1f 93       	push	r17
    25c8:	cf 93       	push	r28
    25ca:	df 93       	push	r29
    25cc:	cd b7       	in	r28, 0x3d	; 61
    25ce:	de b7       	in	r29, 0x3e	; 62
    25d0:	27 97       	sbiw	r28, 0x07	; 7
    25d2:	0f b6       	in	r0, 0x3f	; 63
    25d4:	f8 94       	cli
    25d6:	de bf       	out	0x3e, r29	; 62
    25d8:	0f be       	out	0x3f, r0	; 63
    25da:	cd bf       	out	0x3d, r28	; 61
    25dc:	7c 01       	movw	r14, r24
    25de:	5b 01       	movw	r10, r22
    25e0:	6a 01       	movw	r12, r20
	int8_t conn = -1;
    25e2:	8f ef       	ldi	r24, 0xFF	; 255
    25e4:	89 83       	std	Y+1, r24	; 0x01
	uint8_t i = 0;
	
	/* Check if IDLE */
	ESP8266_CHECK_IDLE(ESP8266);
    25e6:	f7 01       	movw	r30, r14
    25e8:	84 81       	ldd	r24, Z+4	; 0x04
    25ea:	95 81       	ldd	r25, Z+5	; 0x05
    25ec:	a6 81       	ldd	r26, Z+6	; 0x06
    25ee:	b7 81       	ldd	r27, Z+7	; 0x07
    25f0:	89 2b       	or	r24, r25
    25f2:	8a 2b       	or	r24, r26
    25f4:	8b 2b       	or	r24, r27
    25f6:	41 f0       	breq	.+16     	; 0x2608 <ESP8266_StartClientConnectionTCP+0x58>
    25f8:	c7 01       	movw	r24, r14
    25fa:	4c db       	rcall	.-2408   	; 0x1c94 <ESP8266_Update>
    25fc:	f7 01       	movw	r30, r14
    25fe:	ef 5c       	subi	r30, 0xCF	; 207
    2600:	fe 4f       	sbci	r31, 0xFE	; 254
    2602:	87 e0       	ldi	r24, 0x07	; 7
    2604:	80 83       	st	Z, r24
    2606:	98 c0       	rjmp	.+304    	; 0x2738 <ESP8266_StartClientConnectionTCP+0x188>
	
	/* Check if connected to network */
	ESP8266_CHECK_WIFICONNECTED(ESP8266);
    2608:	f7 01       	movw	r30, r14
    260a:	e2 5d       	subi	r30, 0xD2	; 210
    260c:	fe 4f       	sbci	r31, 0xFE	; 254
    260e:	80 81       	ld	r24, Z
    2610:	82 ff       	sbrs	r24, 2
    2612:	05 c0       	rjmp	.+10     	; 0x261e <ESP8266_StartClientConnectionTCP+0x6e>
	
	/* Find available connection */
	for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {
		if (!ESP8266->Connection[i].Active) {
    2614:	f7 01       	movw	r30, r14
    2616:	82 8d       	ldd	r24, Z+26	; 0x1a
    2618:	81 11       	cpse	r24, r1
    261a:	07 c0       	rjmp	.+14     	; 0x262a <ESP8266_StartClientConnectionTCP+0x7a>
    261c:	89 c0       	rjmp	.+274    	; 0x2730 <ESP8266_StartClientConnectionTCP+0x180>
	
	/* Check if IDLE */
	ESP8266_CHECK_IDLE(ESP8266);
	
	/* Check if connected to network */
	ESP8266_CHECK_WIFICONNECTED(ESP8266);
    261e:	f7 01       	movw	r30, r14
    2620:	ef 5c       	subi	r30, 0xCF	; 207
    2622:	fe 4f       	sbci	r31, 0xFE	; 254
    2624:	86 e0       	ldi	r24, 0x06	; 6
    2626:	80 83       	st	Z, r24
    2628:	87 c0       	rjmp	.+270    	; 0x2738 <ESP8266_StartClientConnectionTCP+0x188>
    262a:	f7 01       	movw	r30, r14
    262c:	ff 96       	adiw	r30, 0x3f	; 63
	
	/* Find available connection */
	for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {
    262e:	77 24       	eor	r7, r7
    2630:	73 94       	inc	r7
		if (!ESP8266->Connection[i].Active) {
    2632:	80 81       	ld	r24, Z
    2634:	81 11       	cpse	r24, r1
    2636:	06 c0       	rjmp	.+12     	; 0x2644 <ESP8266_StartClientConnectionTCP+0x94>
			/* Save */
			conn = i;
    2638:	67 2c       	mov	r6, r7
    263a:	79 82       	std	Y+1, r7	; 0x01
			break;
		}
	}
	
	/* Try it */
	if (conn != -1) {
    263c:	ff ef       	ldi	r31, 0xFF	; 255
    263e:	7f 12       	cpse	r7, r31
    2640:	07 c0       	rjmp	.+14     	; 0x2650 <ESP8266_StartClientConnectionTCP+0xa0>
    2642:	70 c0       	rjmp	.+224    	; 0x2724 <ESP8266_StartClientConnectionTCP+0x174>
	
	/* Check if connected to network */
	ESP8266_CHECK_WIFICONNECTED(ESP8266);
	
	/* Find available connection */
	for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {
    2644:	73 94       	inc	r7
    2646:	b5 96       	adiw	r30, 0x25	; 37
    2648:	85 e0       	ldi	r24, 0x05	; 5
    264a:	78 12       	cpse	r7, r24
    264c:	f2 cf       	rjmp	.-28     	; 0x2632 <ESP8266_StartClientConnectionTCP+0x82>
    264e:	6a c0       	rjmp	.+212    	; 0x2724 <ESP8266_StartClientConnectionTCP+0x174>
	/* Try it */
	if (conn != -1) {
		char tmp[6];
		
		/* Format port */
		Int2String(tmp, port);
    2650:	a9 01       	movw	r20, r18
    2652:	60 e0       	ldi	r22, 0x00	; 0
    2654:	70 e0       	ldi	r23, 0x00	; 0
    2656:	4e 01       	movw	r8, r28
    2658:	e2 e0       	ldi	r30, 0x02	; 2
    265a:	8e 0e       	add	r8, r30
    265c:	91 1c       	adc	r9, r1
    265e:	c4 01       	movw	r24, r8
    2660:	0e 94 c6 04 	call	0x98c	; 0x98c <Int2String>
		
		/* Go to ASCII number */
		conn += '0';
    2664:	89 81       	ldd	r24, Y+1	; 0x01
    2666:	80 5d       	subi	r24, 0xD0	; 208
    2668:	89 83       	std	Y+1, r24	; 0x01
		
		/* Send separate */
		ESP8266_USARTSENDSTRING("AT+CIPSTART=");
    266a:	6c e0       	ldi	r22, 0x0C	; 12
    266c:	70 e0       	ldi	r23, 0x00	; 0
    266e:	82 e6       	ldi	r24, 0x62	; 98
    2670:	96 e0       	ldi	r25, 0x06	; 6
    2672:	77 d0       	rcall	.+238    	; 0x2762 <ESP8266_LL_USARTSend>
		ESP8266_USARTSENDCHAR(&conn);
    2674:	61 e0       	ldi	r22, 0x01	; 1
    2676:	70 e0       	ldi	r23, 0x00	; 0
    2678:	ce 01       	movw	r24, r28
    267a:	01 96       	adiw	r24, 0x01	; 1
    267c:	72 d0       	rcall	.+228    	; 0x2762 <ESP8266_LL_USARTSend>
		ESP8266_USARTSENDSTRING(",\"TCP\",\"");
    267e:	68 e0       	ldi	r22, 0x08	; 8
    2680:	70 e0       	ldi	r23, 0x00	; 0
    2682:	8f e6       	ldi	r24, 0x6F	; 111
    2684:	96 e0       	ldi	r25, 0x06	; 6
    2686:	6d d0       	rcall	.+218    	; 0x2762 <ESP8266_LL_USARTSend>
		ESP8266_USARTSENDSTRING(location);
    2688:	f6 01       	movw	r30, r12
    268a:	01 90       	ld	r0, Z+
    268c:	00 20       	and	r0, r0
    268e:	e9 f7       	brne	.-6      	; 0x268a <ESP8266_StartClientConnectionTCP+0xda>
    2690:	31 97       	sbiw	r30, 0x01	; 1
    2692:	bf 01       	movw	r22, r30
    2694:	6c 19       	sub	r22, r12
    2696:	7d 09       	sbc	r23, r13
    2698:	c6 01       	movw	r24, r12
    269a:	63 d0       	rcall	.+198    	; 0x2762 <ESP8266_LL_USARTSend>
		ESP8266_USARTSENDSTRING("\",");
    269c:	62 e0       	ldi	r22, 0x02	; 2
    269e:	70 e0       	ldi	r23, 0x00	; 0
    26a0:	88 e3       	ldi	r24, 0x38	; 56
    26a2:	96 e0       	ldi	r25, 0x06	; 6
    26a4:	5e d0       	rcall	.+188    	; 0x2762 <ESP8266_LL_USARTSend>
		ESP8266_USARTSENDSTRING(tmp);
    26a6:	f4 01       	movw	r30, r8
    26a8:	01 90       	ld	r0, Z+
    26aa:	00 20       	and	r0, r0
    26ac:	e9 f7       	brne	.-6      	; 0x26a8 <ESP8266_StartClientConnectionTCP+0xf8>
    26ae:	31 97       	sbiw	r30, 0x01	; 1
    26b0:	bf 01       	movw	r22, r30
    26b2:	68 19       	sub	r22, r8
    26b4:	79 09       	sbc	r23, r9
    26b6:	c4 01       	movw	r24, r8
    26b8:	54 d0       	rcall	.+168    	; 0x2762 <ESP8266_LL_USARTSend>
		ESP8266_USARTSENDSTRING("\r\n");
    26ba:	62 e0       	ldi	r22, 0x02	; 2
    26bc:	70 e0       	ldi	r23, 0x00	; 0
    26be:	82 e6       	ldi	r24, 0x62	; 98
    26c0:	99 e0       	ldi	r25, 0x09	; 9
    26c2:	4f d0       	rcall	.+158    	; 0x2762 <ESP8266_LL_USARTSend>
		
		/* Send command */
		if (SendCommand(ESP8266, ESP8266_COMMAND_CIPSTART, NULL, NULL) != ESP_OK) {
    26c4:	20 e0       	ldi	r18, 0x00	; 0
    26c6:	30 e0       	ldi	r19, 0x00	; 0
    26c8:	40 e0       	ldi	r20, 0x00	; 0
    26ca:	50 e0       	ldi	r21, 0x00	; 0
    26cc:	6a e0       	ldi	r22, 0x0A	; 10
    26ce:	c7 01       	movw	r24, r14
    26d0:	8b dd       	rcall	.-1258   	; 0x21e8 <SendCommand>
    26d2:	88 23       	and	r24, r24
    26d4:	29 f0       	breq	.+10     	; 0x26e0 <ESP8266_StartClientConnectionTCP+0x130>
			return ESP8266->Result;
    26d6:	f7 01       	movw	r30, r14
    26d8:	ef 5c       	subi	r30, 0xCF	; 207
    26da:	fe 4f       	sbci	r31, 0xFE	; 254
    26dc:	80 81       	ld	r24, Z
    26de:	2c c0       	rjmp	.+88     	; 0x2738 <ESP8266_StartClientConnectionTCP+0x188>
		}
		
		/* Go back from ASCII number to real number */
		conn -= '0';
    26e0:	99 81       	ldd	r25, Y+1	; 0x01
    26e2:	90 53       	subi	r25, 0x30	; 48
		
		/* We are active now as client */
		ESP8266->Connection[i].Active = 1;
    26e4:	f7 01       	movw	r30, r14
    26e6:	25 e2       	ldi	r18, 0x25	; 37
    26e8:	72 9e       	mul	r7, r18
    26ea:	e0 0d       	add	r30, r0
    26ec:	f1 1d       	adc	r31, r1
    26ee:	11 24       	eor	r1, r1
    26f0:	21 e0       	ldi	r18, 0x01	; 1
    26f2:	22 8f       	std	Z+26, r18	; 0x1a
		ESP8266->Connection[i].Client = 1;
    26f4:	24 8f       	std	Z+28, r18	; 0x1c
		ESP8266->Connection[i].Type = ESP8266_ConnectionType_TCP;
    26f6:	13 a2       	std	Z+35, r1	; 0x23
		ESP8266->Connection[i].TotalBytesReceived = 0;
    26f8:	10 a6       	std	Z+40, r1	; 0x28
    26fa:	11 a6       	std	Z+41, r1	; 0x29
    26fc:	12 a6       	std	Z+42, r1	; 0x2a
    26fe:	13 a6       	std	Z+43, r1	; 0x2b
		ESP8266->Connection[i].Number = conn;
    2700:	93 8f       	std	Z+27, r25	; 0x1b
#if ESP8266_USE_SINGLE_CONNECTION_BUFFER == 1
		ESP8266->Connection[i].Data = ConnectionData;
    2702:	22 e9       	ldi	r18, 0x92	; 146
    2704:	3a e0       	ldi	r19, 0x0A	; 10
    2706:	37 a7       	std	Z+47, r19	; 0x2f
    2708:	26 a7       	std	Z+46, r18	; 0x2e
#endif
		ESP8266->StartConnectionSent = i;
    270a:	d7 01       	movw	r26, r14
    270c:	ae 5d       	subi	r26, 0xDE	; 222
    270e:	be 4f       	sbci	r27, 0xFE	; 254
    2710:	6c 92       	st	X, r6
		
		/* Copy values */
		ESP8266->Connection[i].Name = (char *)name;
    2712:	b1 ae       	std	Z+57, r11	; 0x39
    2714:	a0 ae       	std	Z+56, r10	; 0x38
		ESP8266->Connection[i].UserParameters = user_parameters;
    2716:	13 af       	std	Z+59, r17	; 0x3b
    2718:	02 af       	std	Z+58, r16	; 0x3a
		
		/* Return OK */
		ESP8266_RETURNWITHSTATUS(ESP8266, ESP_OK);
    271a:	f7 01       	movw	r30, r14
    271c:	ef 5c       	subi	r30, 0xCF	; 207
    271e:	fe 4f       	sbci	r31, 0xFE	; 254
    2720:	10 82       	st	Z, r1
    2722:	0a c0       	rjmp	.+20     	; 0x2738 <ESP8266_StartClientConnectionTCP+0x188>
	}
	
	/* Return error */
	ESP8266_RETURNWITHSTATUS(ESP8266, ESP_ERROR);
    2724:	f7 01       	movw	r30, r14
    2726:	ef 5c       	subi	r30, 0xCF	; 207
    2728:	fe 4f       	sbci	r31, 0xFE	; 254
    272a:	81 e0       	ldi	r24, 0x01	; 1
    272c:	80 83       	st	Z, r24
    272e:	04 c0       	rjmp	.+8      	; 0x2738 <ESP8266_StartClientConnectionTCP+0x188>
	
	/* Find available connection */
	for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {
		if (!ESP8266->Connection[i].Active) {
			/* Save */
			conn = i;
    2730:	19 82       	std	Y+1, r1	; 0x01
    2732:	71 2c       	mov	r7, r1
    2734:	61 2c       	mov	r6, r1
    2736:	8c cf       	rjmp	.-232    	; 0x2650 <ESP8266_StartClientConnectionTCP+0xa0>
		ESP8266_RETURNWITHSTATUS(ESP8266, ESP_OK);
	}
	
	/* Return error */
	ESP8266_RETURNWITHSTATUS(ESP8266, ESP_ERROR);
}
    2738:	27 96       	adiw	r28, 0x07	; 7
    273a:	0f b6       	in	r0, 0x3f	; 63
    273c:	f8 94       	cli
    273e:	de bf       	out	0x3e, r29	; 62
    2740:	0f be       	out	0x3f, r0	; 63
    2742:	cd bf       	out	0x3d, r28	; 61
    2744:	df 91       	pop	r29
    2746:	cf 91       	pop	r28
    2748:	1f 91       	pop	r17
    274a:	0f 91       	pop	r16
    274c:	ff 90       	pop	r15
    274e:	ef 90       	pop	r14
    2750:	df 90       	pop	r13
    2752:	cf 90       	pop	r12
    2754:	bf 90       	pop	r11
    2756:	af 90       	pop	r10
    2758:	9f 90       	pop	r9
    275a:	8f 90       	pop	r8
    275c:	7f 90       	pop	r7
    275e:	6f 90       	pop	r6
    2760:	08 95       	ret

00002762 <ESP8266_LL_USARTSend>:
	
	/* Return 0 = Successful */
	return 0;
}

uint8_t ESP8266_LL_USARTSend(uint8_t* data, uint16_t count) {
    2762:	cf 93       	push	r28
    2764:	df 93       	push	r29
    2766:	9c 01       	movw	r18, r24
	/* Wait till end */
	while ((UCSR1A & (1 << UDRE1)) == 0);
    2768:	e8 ec       	ldi	r30, 0xC8	; 200
    276a:	f0 e0       	ldi	r31, 0x00	; 0
    276c:	90 81       	ld	r25, Z
    276e:	95 ff       	sbrs	r25, 5
    2770:	fd cf       	rjmp	.-6      	; 0x276c <ESP8266_LL_USARTSend+0xa>
    2772:	d9 01       	movw	r26, r18
    2774:	62 0f       	add	r22, r18
    2776:	73 1f       	adc	r23, r19
	
	/* Send data via USART */
	while (count--) {
		/* Send character */
		UDR1 = *data++;
    2778:	ce ec       	ldi	r28, 0xCE	; 206
    277a:	d0 e0       	ldi	r29, 0x00	; 0

		/* Wait till done */
		while ((UCSR1A & (1 << UDRE1)) == 0);
    277c:	e8 ec       	ldi	r30, 0xC8	; 200
    277e:	f0 e0       	ldi	r31, 0x00	; 0
    2780:	05 c0       	rjmp	.+10     	; 0x278c <ESP8266_LL_USARTSend+0x2a>
	while ((UCSR1A & (1 << UDRE1)) == 0);
	
	/* Send data via USART */
	while (count--) {
		/* Send character */
		UDR1 = *data++;
    2782:	9d 91       	ld	r25, X+
    2784:	98 83       	st	Y, r25

		/* Wait till done */
		while ((UCSR1A & (1 << UDRE1)) == 0);
    2786:	90 81       	ld	r25, Z
    2788:	95 ff       	sbrs	r25, 5
    278a:	fd cf       	rjmp	.-6      	; 0x2786 <ESP8266_LL_USARTSend+0x24>
uint8_t ESP8266_LL_USARTSend(uint8_t* data, uint16_t count) {
	/* Wait till end */
	while ((UCSR1A & (1 << UDRE1)) == 0);
	
	/* Send data via USART */
	while (count--) {
    278c:	a6 17       	cp	r26, r22
    278e:	b7 07       	cpc	r27, r23
    2790:	c1 f7       	brne	.-16     	; 0x2782 <ESP8266_LL_USARTSend+0x20>
		while ((UCSR1A & (1 << UDRE1)) == 0);
	}
	
	/* Return 0 = Successful */
	return 0;
}
    2792:	80 e0       	ldi	r24, 0x00	; 0
    2794:	df 91       	pop	r29
    2796:	cf 91       	pop	r28
    2798:	08 95       	ret

0000279a <__vector_36>:

/* USART receive interrupt handler */
ISR(USART1_RX_vect) {
    279a:	1f 92       	push	r1
    279c:	0f 92       	push	r0
    279e:	0f b6       	in	r0, 0x3f	; 63
    27a0:	0f 92       	push	r0
    27a2:	11 24       	eor	r1, r1
    27a4:	0b b6       	in	r0, 0x3b	; 59
    27a6:	0f 92       	push	r0
    27a8:	2f 93       	push	r18
    27aa:	3f 93       	push	r19
    27ac:	4f 93       	push	r20
    27ae:	5f 93       	push	r21
    27b0:	6f 93       	push	r22
    27b2:	7f 93       	push	r23
    27b4:	8f 93       	push	r24
    27b6:	9f 93       	push	r25
    27b8:	af 93       	push	r26
    27ba:	bf 93       	push	r27
    27bc:	ef 93       	push	r30
    27be:	ff 93       	push	r31
    27c0:	cf 93       	push	r28
    27c2:	df 93       	push	r29
    27c4:	1f 92       	push	r1
    27c6:	cd b7       	in	r28, 0x3d	; 61
    27c8:	de b7       	in	r29, 0x3e	; 62
	uint8_t ch = UDR1;
    27ca:	80 91 ce 00 	lds	r24, 0x00CE
    27ce:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send received character to ESP stack */
	ESP8266_DataReceived(&ch, 1);
    27d0:	61 e0       	ldi	r22, 0x01	; 1
    27d2:	70 e0       	ldi	r23, 0x00	; 0
    27d4:	ce 01       	movw	r24, r28
    27d6:	01 96       	adiw	r24, 0x01	; 1
    27d8:	0e 94 06 07 	call	0xe0c	; 0xe0c <ESP8266_DataReceived>
}
    27dc:	0f 90       	pop	r0
    27de:	df 91       	pop	r29
    27e0:	cf 91       	pop	r28
    27e2:	ff 91       	pop	r31
    27e4:	ef 91       	pop	r30
    27e6:	bf 91       	pop	r27
    27e8:	af 91       	pop	r26
    27ea:	9f 91       	pop	r25
    27ec:	8f 91       	pop	r24
    27ee:	7f 91       	pop	r23
    27f0:	6f 91       	pop	r22
    27f2:	5f 91       	pop	r21
    27f4:	4f 91       	pop	r20
    27f6:	3f 91       	pop	r19
    27f8:	2f 91       	pop	r18
    27fa:	0f 90       	pop	r0
    27fc:	0b be       	out	0x3b, r0	; 59
    27fe:	0f 90       	pop	r0
    2800:	0f be       	out	0x3f, r0	; 63
    2802:	0f 90       	pop	r0
    2804:	1f 90       	pop	r1
    2806:	18 95       	reti

00002808 <Debug_Putc>:
	printf("Data successfully sent as client!\r\n");
}

/* Called when error returned trying to sent data */
void ESP8266_Callback_ClientConnectionDataSentError(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection) {
	printf("Error while sending data on connection %d!\r\n", Connection->Number);
    2808:	80 93 c6 00 	sts	0x00C6, r24
    280c:	e0 ec       	ldi	r30, 0xC0	; 192
    280e:	f0 e0       	ldi	r31, 0x00	; 0
    2810:	80 81       	ld	r24, Z
    2812:	85 ff       	sbrs	r24, 5
    2814:	fd cf       	rjmp	.-6      	; 0x2810 <Debug_Putc+0x8>
    2816:	80 e0       	ldi	r24, 0x00	; 0
    2818:	90 e0       	ldi	r25, 0x00	; 0
    281a:	08 95       	ret

0000281c <TimerInit>:
    281c:	84 b5       	in	r24, 0x24	; 36
    281e:	82 60       	ori	r24, 0x02	; 2
    2820:	84 bd       	out	0x24, r24	; 36
    2822:	85 b5       	in	r24, 0x25	; 37
    2824:	83 60       	ori	r24, 0x03	; 3
    2826:	85 bd       	out	0x25, r24	; 37
    2828:	89 ef       	ldi	r24, 0xF9	; 249
    282a:	87 bd       	out	0x27, r24	; 39
    282c:	ee e6       	ldi	r30, 0x6E	; 110
    282e:	f0 e0       	ldi	r31, 0x00	; 0
    2830:	80 81       	ld	r24, Z
    2832:	82 60       	ori	r24, 0x02	; 2
    2834:	80 83       	st	Z, r24
    2836:	08 95       	ret

00002838 <__vector_21>:
    2838:	1f 92       	push	r1
    283a:	0f 92       	push	r0
    283c:	0f b6       	in	r0, 0x3f	; 63
    283e:	0f 92       	push	r0
    2840:	11 24       	eor	r1, r1
    2842:	0b b6       	in	r0, 0x3b	; 59
    2844:	0f 92       	push	r0
    2846:	2f 93       	push	r18
    2848:	3f 93       	push	r19
    284a:	4f 93       	push	r20
    284c:	5f 93       	push	r21
    284e:	6f 93       	push	r22
    2850:	7f 93       	push	r23
    2852:	8f 93       	push	r24
    2854:	9f 93       	push	r25
    2856:	af 93       	push	r26
    2858:	bf 93       	push	r27
    285a:	ef 93       	push	r30
    285c:	ff 93       	push	r31
    285e:	41 e0       	ldi	r20, 0x01	; 1
    2860:	50 e0       	ldi	r21, 0x00	; 0
    2862:	60 e0       	ldi	r22, 0x00	; 0
    2864:	70 e0       	ldi	r23, 0x00	; 0
    2866:	8a e6       	ldi	r24, 0x6A	; 106
    2868:	96 e1       	ldi	r25, 0x16	; 22
    286a:	0e 94 f4 06 	call	0xde8	; 0xde8 <ESP8266_TimeUpdate>
    286e:	ff 91       	pop	r31
    2870:	ef 91       	pop	r30
    2872:	bf 91       	pop	r27
    2874:	af 91       	pop	r26
    2876:	9f 91       	pop	r25
    2878:	8f 91       	pop	r24
    287a:	7f 91       	pop	r23
    287c:	6f 91       	pop	r22
    287e:	5f 91       	pop	r21
    2880:	4f 91       	pop	r20
    2882:	3f 91       	pop	r19
    2884:	2f 91       	pop	r18
    2886:	0f 90       	pop	r0
    2888:	0b be       	out	0x3b, r0	; 59
    288a:	0f 90       	pop	r0
    288c:	0f be       	out	0x3f, r0	; 63
    288e:	0f 90       	pop	r0
    2890:	1f 90       	pop	r1
    2892:	18 95       	reti

00002894 <__vector_25>:
    2894:	1f 92       	push	r1
    2896:	0f 92       	push	r0
    2898:	0f b6       	in	r0, 0x3f	; 63
    289a:	0f 92       	push	r0
    289c:	11 24       	eor	r1, r1
    289e:	0b b6       	in	r0, 0x3b	; 59
    28a0:	0f 92       	push	r0
    28a2:	8f 93       	push	r24
    28a4:	ef 93       	push	r30
    28a6:	ff 93       	push	r31
    28a8:	e6 ec       	ldi	r30, 0xC6	; 198
    28aa:	f0 e0       	ldi	r31, 0x00	; 0
    28ac:	80 81       	ld	r24, Z
    28ae:	80 83       	st	Z, r24
    28b0:	e0 ec       	ldi	r30, 0xC0	; 192
    28b2:	f0 e0       	ldi	r31, 0x00	; 0
    28b4:	80 81       	ld	r24, Z
    28b6:	85 ff       	sbrs	r24, 5
    28b8:	fd cf       	rjmp	.-6      	; 0x28b4 <__vector_25+0x20>
    28ba:	ff 91       	pop	r31
    28bc:	ef 91       	pop	r30
    28be:	8f 91       	pop	r24
    28c0:	0f 90       	pop	r0
    28c2:	0b be       	out	0x3b, r0	; 59
    28c4:	0f 90       	pop	r0
    28c6:	0f be       	out	0x3f, r0	; 63
    28c8:	0f 90       	pop	r0
    28ca:	1f 90       	pop	r1
    28cc:	18 95       	reti

000028ce <DebugUARTInit>:
    28ce:	9b 01       	movw	r18, r22
    28d0:	ac 01       	movw	r20, r24
    28d2:	60 e0       	ldi	r22, 0x00	; 0
    28d4:	79 e0       	ldi	r23, 0x09	; 9
    28d6:	8d e3       	ldi	r24, 0x3D	; 61
    28d8:	90 e0       	ldi	r25, 0x00	; 0
    28da:	b0 d1       	rcall	.+864    	; 0x2c3c <__udivmodsi4>
    28dc:	da 01       	movw	r26, r20
    28de:	c9 01       	movw	r24, r18
    28e0:	01 97       	sbiw	r24, 0x01	; 1
    28e2:	a1 09       	sbc	r26, r1
    28e4:	b1 09       	sbc	r27, r1
    28e6:	ac 01       	movw	r20, r24
    28e8:	bd 01       	movw	r22, r26
    28ea:	76 95       	lsr	r23
    28ec:	67 95       	ror	r22
    28ee:	57 95       	ror	r21
    28f0:	47 95       	ror	r20
    28f2:	85 2f       	mov	r24, r21
    28f4:	99 27       	eor	r25, r25
    28f6:	80 93 c5 00 	sts	0x00C5, r24
    28fa:	40 93 c4 00 	sts	0x00C4, r20
    28fe:	e0 ec       	ldi	r30, 0xC0	; 192
    2900:	f0 e0       	ldi	r31, 0x00	; 0
    2902:	80 81       	ld	r24, Z
    2904:	82 60       	ori	r24, 0x02	; 2
    2906:	80 83       	st	Z, r24
    2908:	e2 ec       	ldi	r30, 0xC2	; 194
    290a:	f0 e0       	ldi	r31, 0x00	; 0
    290c:	80 81       	ld	r24, Z
    290e:	86 60       	ori	r24, 0x06	; 6
    2910:	80 83       	st	Z, r24
    2912:	e1 ec       	ldi	r30, 0xC1	; 193
    2914:	f0 e0       	ldi	r31, 0x00	; 0
    2916:	80 81       	ld	r24, Z
    2918:	88 61       	ori	r24, 0x18	; 24
    291a:	80 83       	st	Z, r24
    291c:	80 81       	ld	r24, Z
    291e:	80 68       	ori	r24, 0x80	; 128
    2920:	80 83       	st	Z, r24
    2922:	08 95       	ret

00002924 <main>:
    2924:	86 e0       	ldi	r24, 0x06	; 6
    2926:	92 e0       	ldi	r25, 0x02	; 2
    2928:	90 93 a3 17 	sts	0x17A3, r25
    292c:	80 93 a2 17 	sts	0x17A2, r24
    2930:	60 e0       	ldi	r22, 0x00	; 0
    2932:	72 ec       	ldi	r23, 0xC2	; 194
    2934:	81 e0       	ldi	r24, 0x01	; 1
    2936:	90 e0       	ldi	r25, 0x00	; 0
    2938:	ca df       	rcall	.-108    	; 0x28ce <DebugUARTInit>
    293a:	70 df       	rcall	.-288    	; 0x281c <TimerInit>
    293c:	78 94       	sei
    293e:	80 e9       	ldi	r24, 0x90	; 144
    2940:	96 e0       	ldi	r25, 0x06	; 6
    2942:	57 d3       	rcall	.+1710   	; 0x2ff2 <puts>
    2944:	03 c0       	rjmp	.+6      	; 0x294c <main+0x28>
    2946:	84 ec       	ldi	r24, 0xC4	; 196
    2948:	96 e0       	ldi	r25, 0x06	; 6
    294a:	53 d3       	rcall	.+1702   	; 0x2ff2 <puts>
    294c:	40 e0       	ldi	r20, 0x00	; 0
    294e:	52 ec       	ldi	r21, 0xC2	; 194
    2950:	61 e0       	ldi	r22, 0x01	; 1
    2952:	70 e0       	ldi	r23, 0x00	; 0
    2954:	8a e6       	ldi	r24, 0x6A	; 106
    2956:	96 e1       	ldi	r25, 0x16	; 22
    2958:	0e 94 ca 06 	call	0xd94	; 0xd94 <ESP8266_Init>
    295c:	81 11       	cpse	r24, r1
    295e:	f3 cf       	rjmp	.-26     	; 0x2946 <main+0x22>
    2960:	63 e0       	ldi	r22, 0x03	; 3
    2962:	8a e6       	ldi	r24, 0x6A	; 106
    2964:	96 e1       	ldi	r25, 0x16	; 22
    2966:	44 dd       	rcall	.-1400   	; 0x23f0 <ESP8266_SetMode>
    2968:	81 11       	cpse	r24, r1
    296a:	fa cf       	rjmp	.-12     	; 0x2960 <main+0x3c>
    296c:	60 e5       	ldi	r22, 0x50	; 80
    296e:	70 e0       	ldi	r23, 0x00	; 0
    2970:	8a e6       	ldi	r24, 0x6A	; 106
    2972:	96 e1       	ldi	r25, 0x16	; 22
    2974:	da dc       	rcall	.-1612   	; 0x232a <ESP8266_ServerEnable>
    2976:	81 11       	cpse	r24, r1
    2978:	f9 cf       	rjmp	.-14     	; 0x296c <main+0x48>
    297a:	8f ee       	ldi	r24, 0xEF	; 239
    297c:	96 e0       	ldi	r25, 0x06	; 6
    297e:	39 d3       	rcall	.+1650   	; 0x2ff2 <puts>
    2980:	8a e6       	ldi	r24, 0x6A	; 106
    2982:	96 e1       	ldi	r25, 0x16	; 22
    2984:	7c dc       	rcall	.-1800   	; 0x227e <ESP8266_WifiDisconnect>
    2986:	8a e6       	ldi	r24, 0x6A	; 106
    2988:	96 e1       	ldi	r25, 0x16	; 22
    298a:	9f dc       	rcall	.-1730   	; 0x22ca <ESP8266_WaitReady>
    298c:	49 e0       	ldi	r20, 0x09	; 9
    298e:	57 e0       	ldi	r21, 0x07	; 7
    2990:	67 e1       	ldi	r22, 0x17	; 23
    2992:	77 e0       	ldi	r23, 0x07	; 7
    2994:	8a e6       	ldi	r24, 0x6A	; 106
    2996:	96 e1       	ldi	r25, 0x16	; 22
    2998:	cd dd       	rcall	.-1126   	; 0x2534 <ESP8266_WifiConnect>
    299a:	8a e6       	ldi	r24, 0x6A	; 106
    299c:	96 e1       	ldi	r25, 0x16	; 22
    299e:	95 dc       	rcall	.-1750   	; 0x22ca <ESP8266_WaitReady>
    29a0:	8a e6       	ldi	r24, 0x6A	; 106
    29a2:	96 e1       	ldi	r25, 0x16	; 22
    29a4:	73 dc       	rcall	.-1818   	; 0x228c <ESP8266_WifiGetConnected>
    29a6:	26 98       	cbi	0x04, 6	; 4
    29a8:	2e 9a       	sbi	0x05, 6	; 5
    29aa:	8a e6       	ldi	r24, 0x6A	; 106
    29ac:	96 e1       	ldi	r25, 0x16	; 22
    29ae:	72 d9       	rcall	.-3356   	; 0x1c94 <ESP8266_Update>
    29b0:	1e 99       	sbic	0x03, 6	; 3
    29b2:	fb cf       	rjmp	.-10     	; 0x29aa <main+0x86>
    29b4:	1e 9b       	sbis	0x03, 6	; 3
    29b6:	fe cf       	rjmp	.-4      	; 0x29b4 <main+0x90>
    29b8:	00 e0       	ldi	r16, 0x00	; 0
    29ba:	10 e0       	ldi	r17, 0x00	; 0
    29bc:	20 e5       	ldi	r18, 0x50	; 80
    29be:	30 e0       	ldi	r19, 0x00	; 0
    29c0:	41 e2       	ldi	r20, 0x21	; 33
    29c2:	57 e0       	ldi	r21, 0x07	; 7
    29c4:	67 e3       	ldi	r22, 0x37	; 55
    29c6:	77 e0       	ldi	r23, 0x07	; 7
    29c8:	8a e6       	ldi	r24, 0x6A	; 106
    29ca:	96 e1       	ldi	r25, 0x16	; 22
    29cc:	f1 dd       	rcall	.-1054   	; 0x25b0 <ESP8266_StartClientConnectionTCP>
    29ce:	81 11       	cpse	r24, r1
    29d0:	f3 cf       	rjmp	.-26     	; 0x29b8 <main+0x94>
    29d2:	eb cf       	rjmp	.-42     	; 0x29aa <main+0x86>

000029d4 <ESP8266_Callback_DeviceReady>:
    29d4:	84 e4       	ldi	r24, 0x44	; 68
    29d6:	97 e0       	ldi	r25, 0x07	; 7
    29d8:	0c c3       	rjmp	.+1560   	; 0x2ff2 <puts>
    29da:	08 95       	ret

000029dc <ESP8266_Callback_WatchdogReset>:
    29dc:	85 e5       	ldi	r24, 0x55	; 85
    29de:	97 e0       	ldi	r25, 0x07	; 7
    29e0:	08 c3       	rjmp	.+1552   	; 0x2ff2 <puts>
    29e2:	08 95       	ret

000029e4 <ESP8266_Callback_WifiDisconnected>:
    29e4:	8f e6       	ldi	r24, 0x6F	; 111
    29e6:	97 e0       	ldi	r25, 0x07	; 7
    29e8:	04 c3       	rjmp	.+1544   	; 0x2ff2 <puts>
    29ea:	08 95       	ret

000029ec <ESP8266_Callback_WifiConnected>:
    29ec:	86 e8       	ldi	r24, 0x86	; 134
    29ee:	97 e0       	ldi	r25, 0x07	; 7
    29f0:	00 c3       	rjmp	.+1536   	; 0x2ff2 <puts>
    29f2:	08 95       	ret

000029f4 <ESP8266_Callback_WifiConnectFailed>:
    29f4:	fc 01       	movw	r30, r24
    29f6:	ef 5d       	subi	r30, 0xDF	; 223
    29f8:	fe 4f       	sbci	r31, 0xFE	; 254
    29fa:	80 81       	ld	r24, Z
    29fc:	1f 92       	push	r1
    29fe:	8f 93       	push	r24
    2a00:	8a e9       	ldi	r24, 0x9A	; 154
    2a02:	97 e0       	ldi	r25, 0x07	; 7
    2a04:	9f 93       	push	r25
    2a06:	8f 93       	push	r24
    2a08:	e1 d2       	rcall	.+1474   	; 0x2fcc <printf>
    2a0a:	0f 90       	pop	r0
    2a0c:	0f 90       	pop	r0
    2a0e:	0f 90       	pop	r0
    2a10:	0f 90       	pop	r0
    2a12:	08 95       	ret

00002a14 <ESP8266_Callback_WifiGotIP>:
    2a14:	cf 93       	push	r28
    2a16:	df 93       	push	r29
    2a18:	ec 01       	movw	r28, r24
    2a1a:	8d ec       	ldi	r24, 0xCD	; 205
    2a1c:	97 e0       	ldi	r25, 0x07	; 7
    2a1e:	e9 d2       	rcall	.+1490   	; 0x2ff2 <puts>
    2a20:	ce 01       	movw	r24, r28
    2a22:	3b dc       	rcall	.-1930   	; 0x229a <ESP8266_GetSTAIP>
    2a24:	1f 92       	push	r1
    2a26:	8f 93       	push	r24
    2a28:	85 ee       	ldi	r24, 0xE5	; 229
    2a2a:	97 e0       	ldi	r25, 0x07	; 7
    2a2c:	9f 93       	push	r25
    2a2e:	8f 93       	push	r24
    2a30:	cd d2       	rcall	.+1434   	; 0x2fcc <printf>
    2a32:	0f 90       	pop	r0
    2a34:	0f 90       	pop	r0
    2a36:	0f 90       	pop	r0
    2a38:	0f 90       	pop	r0
    2a3a:	df 91       	pop	r29
    2a3c:	cf 91       	pop	r28
    2a3e:	08 95       	ret

00002a40 <ESP8266_Callback_WifiIPSet>:
    2a40:	fc 01       	movw	r30, r24
    2a42:	ea 52       	subi	r30, 0x2A	; 42
    2a44:	ff 4f       	sbci	r31, 0xFF	; 255
    2a46:	20 81       	ld	r18, Z
    2a48:	1f 92       	push	r1
    2a4a:	2f 93       	push	r18
    2a4c:	31 97       	sbiw	r30, 0x01	; 1
    2a4e:	20 81       	ld	r18, Z
    2a50:	1f 92       	push	r1
    2a52:	2f 93       	push	r18
    2a54:	31 97       	sbiw	r30, 0x01	; 1
    2a56:	20 81       	ld	r18, Z
    2a58:	1f 92       	push	r1
    2a5a:	2f 93       	push	r18
    2a5c:	31 97       	sbiw	r30, 0x01	; 1
    2a5e:	80 81       	ld	r24, Z
    2a60:	1f 92       	push	r1
    2a62:	8f 93       	push	r24
    2a64:	8e ef       	ldi	r24, 0xFE	; 254
    2a66:	97 e0       	ldi	r25, 0x07	; 7
    2a68:	9f 93       	push	r25
    2a6a:	8f 93       	push	r24
    2a6c:	af d2       	rcall	.+1374   	; 0x2fcc <printf>
    2a6e:	8d b7       	in	r24, 0x3d	; 61
    2a70:	9e b7       	in	r25, 0x3e	; 62
    2a72:	0a 96       	adiw	r24, 0x0a	; 10
    2a74:	0f b6       	in	r0, 0x3f	; 63
    2a76:	f8 94       	cli
    2a78:	9e bf       	out	0x3e, r25	; 62
    2a7a:	0f be       	out	0x3f, r0	; 63
    2a7c:	8d bf       	out	0x3d, r24	; 61
    2a7e:	08 95       	ret

00002a80 <ESP8266_Callback_DHCPTimeout>:
    2a80:	86 e2       	ldi	r24, 0x26	; 38
    2a82:	98 e0       	ldi	r25, 0x08	; 8
    2a84:	b6 c2       	rjmp	.+1388   	; 0x2ff2 <puts>
    2a86:	08 95       	ret

00002a88 <ESP8266_Callback_ClientConnectionConnected>:
    2a88:	0f 93       	push	r16
    2a8a:	1f 93       	push	r17
    2a8c:	cf 93       	push	r28
    2a8e:	df 93       	push	r29
    2a90:	8c 01       	movw	r16, r24
    2a92:	eb 01       	movw	r28, r22
    2a94:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2a96:	8f 93       	push	r24
    2a98:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2a9a:	8f 93       	push	r24
    2a9c:	21 e6       	ldi	r18, 0x61	; 97
    2a9e:	38 e0       	ldi	r19, 0x08	; 8
    2aa0:	3f 93       	push	r19
    2aa2:	2f 93       	push	r18
    2aa4:	93 d2       	rcall	.+1318   	; 0x2fcc <printf>
    2aa6:	be 01       	movw	r22, r28
    2aa8:	c8 01       	movw	r24, r16
    2aaa:	f7 dc       	rcall	.-1554   	; 0x249a <ESP8266_RequestSendData>
    2aac:	0f 90       	pop	r0
    2aae:	0f 90       	pop	r0
    2ab0:	0f 90       	pop	r0
    2ab2:	0f 90       	pop	r0
    2ab4:	df 91       	pop	r29
    2ab6:	cf 91       	pop	r28
    2ab8:	1f 91       	pop	r17
    2aba:	0f 91       	pop	r16
    2abc:	08 95       	ret

00002abe <ESP8266_Callback_ClientConnectionError>:
    2abe:	fb 01       	movw	r30, r22
    2ac0:	81 81       	ldd	r24, Z+1	; 0x01
    2ac2:	1f 92       	push	r1
    2ac4:	8f 93       	push	r24
    2ac6:	85 e9       	ldi	r24, 0x95	; 149
    2ac8:	98 e0       	ldi	r25, 0x08	; 8
    2aca:	9f 93       	push	r25
    2acc:	8f 93       	push	r24
    2ace:	7e d2       	rcall	.+1276   	; 0x2fcc <printf>
    2ad0:	0f 90       	pop	r0
    2ad2:	0f 90       	pop	r0
    2ad4:	0f 90       	pop	r0
    2ad6:	0f 90       	pop	r0
    2ad8:	08 95       	ret

00002ada <ESP8266_Callback_ClientConnectionSendData>:
    2ada:	cf 93       	push	r28
    2adc:	df 93       	push	r29
    2ade:	81 e1       	ldi	r24, 0x11	; 17
    2ae0:	e2 ed       	ldi	r30, 0xD2	; 210
    2ae2:	f8 e0       	ldi	r31, 0x08	; 8
    2ae4:	da 01       	movw	r26, r20
    2ae6:	01 90       	ld	r0, Z+
    2ae8:	0d 92       	st	X+, r0
    2aea:	8a 95       	dec	r24
    2aec:	e1 f7       	brne	.-8      	; 0x2ae6 <ESP8266_Callback_ClientConnectionSendData+0xc>
    2aee:	da 01       	movw	r26, r20
    2af0:	0d 90       	ld	r0, X+
    2af2:	00 20       	and	r0, r0
    2af4:	e9 f7       	brne	.-6      	; 0x2af0 <ESP8266_Callback_ClientConnectionSendData+0x16>
    2af6:	11 97       	sbiw	r26, 0x01	; 1
    2af8:	8e e1       	ldi	r24, 0x1E	; 30
    2afa:	e3 ee       	ldi	r30, 0xE3	; 227
    2afc:	f8 e0       	ldi	r31, 0x08	; 8
    2afe:	01 90       	ld	r0, Z+
    2b00:	0d 92       	st	X+, r0
    2b02:	8a 95       	dec	r24
    2b04:	e1 f7       	brne	.-8      	; 0x2afe <ESP8266_Callback_ClientConnectionSendData+0x24>
    2b06:	da 01       	movw	r26, r20
    2b08:	0d 90       	ld	r0, X+
    2b0a:	00 20       	and	r0, r0
    2b0c:	e9 f7       	brne	.-6      	; 0x2b08 <ESP8266_Callback_ClientConnectionSendData+0x2e>
    2b0e:	11 97       	sbiw	r26, 0x01	; 1
    2b10:	84 e1       	ldi	r24, 0x14	; 20
    2b12:	e1 e0       	ldi	r30, 0x01	; 1
    2b14:	f9 e0       	ldi	r31, 0x09	; 9
    2b16:	01 90       	ld	r0, Z+
    2b18:	0d 92       	st	X+, r0
    2b1a:	8a 95       	dec	r24
    2b1c:	e1 f7       	brne	.-8      	; 0x2b16 <ESP8266_Callback_ClientConnectionSendData+0x3c>
    2b1e:	fa 01       	movw	r30, r20
    2b20:	01 90       	ld	r0, Z+
    2b22:	00 20       	and	r0, r0
    2b24:	e9 f7       	brne	.-6      	; 0x2b20 <ESP8266_Callback_ClientConnectionSendData+0x46>
    2b26:	31 97       	sbiw	r30, 0x01	; 1
    2b28:	8d e0       	ldi	r24, 0x0D	; 13
    2b2a:	9a e0       	ldi	r25, 0x0A	; 10
    2b2c:	a0 e0       	ldi	r26, 0x00	; 0
    2b2e:	80 83       	st	Z, r24
    2b30:	91 83       	std	Z+1, r25	; 0x01
    2b32:	a2 83       	std	Z+2, r26	; 0x02
    2b34:	fa 01       	movw	r30, r20
    2b36:	01 90       	ld	r0, Z+
    2b38:	00 20       	and	r0, r0
    2b3a:	e9 f7       	brne	.-6      	; 0x2b36 <ESP8266_Callback_ClientConnectionSendData+0x5c>
    2b3c:	cf 01       	movw	r24, r30
    2b3e:	01 97       	sbiw	r24, 0x01	; 1
    2b40:	84 1b       	sub	r24, r20
    2b42:	95 0b       	sbc	r25, r21
    2b44:	df 91       	pop	r29
    2b46:	cf 91       	pop	r28
    2b48:	08 95       	ret

00002b4a <ESP8266_Callback_ClientConnectionDataSent>:
    2b4a:	85 e1       	ldi	r24, 0x15	; 21
    2b4c:	99 e0       	ldi	r25, 0x09	; 9
    2b4e:	51 c2       	rjmp	.+1186   	; 0x2ff2 <puts>
    2b50:	08 95       	ret

00002b52 <ESP8266_Callback_ClientConnectionDataReceived>:
}

void ESP8266_Callback_ClientConnectionDataReceived(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection, char* Buffer) {
    2b52:	cf 93       	push	r28
    2b54:	df 93       	push	r29
    2b56:	eb 01       	movw	r28, r22
	/* Data received from server back to client */
	printf("Data received from server on connection: %s; Number of bytes received: %lu; %lu / %lu;\r\n",
    2b58:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2b5a:	8f 93       	push	r24
    2b5c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2b5e:	8f 93       	push	r24
    2b60:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2b62:	8f 93       	push	r24
    2b64:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2b66:	8f 93       	push	r24
    2b68:	89 89       	ldd	r24, Y+17	; 0x11
    2b6a:	8f 93       	push	r24
    2b6c:	88 89       	ldd	r24, Y+16	; 0x10
    2b6e:	8f 93       	push	r24
    2b70:	8f 85       	ldd	r24, Y+15	; 0x0f
    2b72:	8f 93       	push	r24
    2b74:	8e 85       	ldd	r24, Y+14	; 0x0e
    2b76:	8f 93       	push	r24
    2b78:	8d 85       	ldd	r24, Y+13	; 0x0d
    2b7a:	8f 93       	push	r24
    2b7c:	8c 85       	ldd	r24, Y+12	; 0x0c
    2b7e:	8f 93       	push	r24
    2b80:	8b 85       	ldd	r24, Y+11	; 0x0b
    2b82:	8f 93       	push	r24
    2b84:	8a 85       	ldd	r24, Y+10	; 0x0a
    2b86:	8f 93       	push	r24
    2b88:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2b8a:	8f 93       	push	r24
    2b8c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2b8e:	8f 93       	push	r24
    2b90:	85 e6       	ldi	r24, 0x65	; 101
    2b92:	99 e0       	ldi	r25, 0x09	; 9
    2b94:	9f 93       	push	r25
    2b96:	8f 93       	push	r24
    2b98:	19 d2       	rcall	.+1074   	; 0x2fcc <printf>
	Connection->TotalBytesReceived,
	Connection->ContentLength
	);
	
	/* Print message when first packet */
	if (Connection->FirstPacket) {
    2b9a:	8d b7       	in	r24, 0x3d	; 61
    2b9c:	9e b7       	in	r25, 0x3e	; 62
    2b9e:	40 96       	adiw	r24, 0x10	; 16
    2ba0:	0f b6       	in	r0, 0x3f	; 63
    2ba2:	f8 94       	cli
    2ba4:	9e bf       	out	0x3e, r25	; 62
    2ba6:	0f be       	out	0x3f, r0	; 63
    2ba8:	8d bf       	out	0x3d, r24	; 61
    2baa:	8b a1       	ldd	r24, Y+35	; 0x23
    2bac:	88 23       	and	r24, r24
    2bae:	99 f0       	breq	.+38     	; 0x2bd6 <ESP8266_Callback_ClientConnectionDataReceived+0x84>
		
		/* Print first message */
		printf("This is first packet received. Content length on this connection is: %lu\r\n", Connection->ContentLength);
    2bb0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2bb2:	8f 93       	push	r24
    2bb4:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2bb6:	8f 93       	push	r24
    2bb8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2bba:	8f 93       	push	r24
    2bbc:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2bbe:	8f 93       	push	r24
    2bc0:	8e eb       	ldi	r24, 0xBE	; 190
    2bc2:	99 e0       	ldi	r25, 0x09	; 9
    2bc4:	9f 93       	push	r25
    2bc6:	8f 93       	push	r24
    2bc8:	01 d2       	rcall	.+1026   	; 0x2fcc <printf>
    2bca:	0f 90       	pop	r0
    2bcc:	0f 90       	pop	r0
    2bce:	0f 90       	pop	r0
    2bd0:	0f 90       	pop	r0
    2bd2:	0f 90       	pop	r0
    2bd4:	0f 90       	pop	r0
	}
}
    2bd6:	df 91       	pop	r29
    2bd8:	cf 91       	pop	r28
    2bda:	08 95       	ret

00002bdc <ESP8266_Callback_ClientConnectionClosed>:

/* Called when connection is closed */
void ESP8266_Callback_ClientConnectionClosed(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection) {
    2bdc:	fb 01       	movw	r30, r22
	printf("Client connection closed, connection: %d; Total bytes received: %lu; Content-Length header: %lu\r\n",
    2bde:	85 8d       	ldd	r24, Z+29	; 0x1d
    2be0:	8f 93       	push	r24
    2be2:	84 8d       	ldd	r24, Z+28	; 0x1c
    2be4:	8f 93       	push	r24
    2be6:	83 8d       	ldd	r24, Z+27	; 0x1b
    2be8:	8f 93       	push	r24
    2bea:	82 8d       	ldd	r24, Z+26	; 0x1a
    2bec:	8f 93       	push	r24
    2bee:	81 89       	ldd	r24, Z+17	; 0x11
    2bf0:	8f 93       	push	r24
    2bf2:	80 89       	ldd	r24, Z+16	; 0x10
    2bf4:	8f 93       	push	r24
    2bf6:	87 85       	ldd	r24, Z+15	; 0x0f
    2bf8:	8f 93       	push	r24
    2bfa:	86 85       	ldd	r24, Z+14	; 0x0e
    2bfc:	8f 93       	push	r24
    2bfe:	81 81       	ldd	r24, Z+1	; 0x01
    2c00:	1f 92       	push	r1
    2c02:	8f 93       	push	r24
    2c04:	89 e0       	ldi	r24, 0x09	; 9
    2c06:	9a e0       	ldi	r25, 0x0A	; 10
    2c08:	9f 93       	push	r25
    2c0a:	8f 93       	push	r24
    2c0c:	df d1       	rcall	.+958    	; 0x2fcc <printf>
    2c0e:	8d b7       	in	r24, 0x3d	; 61
    2c10:	9e b7       	in	r25, 0x3e	; 62
    2c12:	0c 96       	adiw	r24, 0x0c	; 12
    2c14:	0f b6       	in	r0, 0x3f	; 63
    2c16:	f8 94       	cli
    2c18:	9e bf       	out	0x3e, r25	; 62
    2c1a:	0f be       	out	0x3f, r0	; 63
    2c1c:	8d bf       	out	0x3d, r24	; 61
    2c1e:	08 95       	ret

00002c20 <ESP8266_Callback_ClientConnectionTimeout>:
	);
}

/* Called when timeout is reached on connection to server */
void ESP8266_Callback_ClientConnectionTimeout(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection) {
	printf("Timeout reached on connection: %d\r\n", Connection->Number);
    2c20:	fb 01       	movw	r30, r22
    2c22:	81 81       	ldd	r24, Z+1	; 0x01
    2c24:	1f 92       	push	r1
    2c26:	8f 93       	push	r24
    2c28:	8b e6       	ldi	r24, 0x6B	; 107
    2c2a:	9a e0       	ldi	r25, 0x0A	; 10
    2c2c:	9f 93       	push	r25
    2c2e:	8f 93       	push	r24
    2c30:	cd d1       	rcall	.+922    	; 0x2fcc <printf>
    2c32:	0f 90       	pop	r0
    2c34:	0f 90       	pop	r0
    2c36:	0f 90       	pop	r0
    2c38:	0f 90       	pop	r0
    2c3a:	08 95       	ret

00002c3c <__udivmodsi4>:
    2c3c:	a1 e2       	ldi	r26, 0x21	; 33
    2c3e:	1a 2e       	mov	r1, r26
    2c40:	aa 1b       	sub	r26, r26
    2c42:	bb 1b       	sub	r27, r27
    2c44:	fd 01       	movw	r30, r26
    2c46:	0d c0       	rjmp	.+26     	; 0x2c62 <__udivmodsi4_ep>

00002c48 <__udivmodsi4_loop>:
    2c48:	aa 1f       	adc	r26, r26
    2c4a:	bb 1f       	adc	r27, r27
    2c4c:	ee 1f       	adc	r30, r30
    2c4e:	ff 1f       	adc	r31, r31
    2c50:	a2 17       	cp	r26, r18
    2c52:	b3 07       	cpc	r27, r19
    2c54:	e4 07       	cpc	r30, r20
    2c56:	f5 07       	cpc	r31, r21
    2c58:	20 f0       	brcs	.+8      	; 0x2c62 <__udivmodsi4_ep>
    2c5a:	a2 1b       	sub	r26, r18
    2c5c:	b3 0b       	sbc	r27, r19
    2c5e:	e4 0b       	sbc	r30, r20
    2c60:	f5 0b       	sbc	r31, r21

00002c62 <__udivmodsi4_ep>:
    2c62:	66 1f       	adc	r22, r22
    2c64:	77 1f       	adc	r23, r23
    2c66:	88 1f       	adc	r24, r24
    2c68:	99 1f       	adc	r25, r25
    2c6a:	1a 94       	dec	r1
    2c6c:	69 f7       	brne	.-38     	; 0x2c48 <__udivmodsi4_loop>
    2c6e:	60 95       	com	r22
    2c70:	70 95       	com	r23
    2c72:	80 95       	com	r24
    2c74:	90 95       	com	r25
    2c76:	9b 01       	movw	r18, r22
    2c78:	ac 01       	movw	r20, r24
    2c7a:	bd 01       	movw	r22, r26
    2c7c:	cf 01       	movw	r24, r30
    2c7e:	08 95       	ret

00002c80 <__tablejump2__>:
    2c80:	ee 0f       	add	r30, r30
    2c82:	ff 1f       	adc	r31, r31
    2c84:	88 1f       	adc	r24, r24
    2c86:	8b bf       	out	0x3b, r24	; 59
    2c88:	07 90       	elpm	r0, Z+
    2c8a:	f6 91       	elpm	r31, Z
    2c8c:	e0 2d       	mov	r30, r0
    2c8e:	19 94       	eijmp

00002c90 <malloc>:
    2c90:	cf 93       	push	r28
    2c92:	df 93       	push	r29
    2c94:	82 30       	cpi	r24, 0x02	; 2
    2c96:	91 05       	cpc	r25, r1
    2c98:	10 f4       	brcc	.+4      	; 0x2c9e <malloc+0xe>
    2c9a:	82 e0       	ldi	r24, 0x02	; 2
    2c9c:	90 e0       	ldi	r25, 0x00	; 0
    2c9e:	e0 91 9e 17 	lds	r30, 0x179E
    2ca2:	f0 91 9f 17 	lds	r31, 0x179F
    2ca6:	20 e0       	ldi	r18, 0x00	; 0
    2ca8:	30 e0       	ldi	r19, 0x00	; 0
    2caa:	c0 e0       	ldi	r28, 0x00	; 0
    2cac:	d0 e0       	ldi	r29, 0x00	; 0
    2cae:	30 97       	sbiw	r30, 0x00	; 0
    2cb0:	11 f1       	breq	.+68     	; 0x2cf6 <malloc+0x66>
    2cb2:	40 81       	ld	r20, Z
    2cb4:	51 81       	ldd	r21, Z+1	; 0x01
    2cb6:	48 17       	cp	r20, r24
    2cb8:	59 07       	cpc	r21, r25
    2cba:	c0 f0       	brcs	.+48     	; 0x2cec <malloc+0x5c>
    2cbc:	48 17       	cp	r20, r24
    2cbe:	59 07       	cpc	r21, r25
    2cc0:	61 f4       	brne	.+24     	; 0x2cda <malloc+0x4a>
    2cc2:	82 81       	ldd	r24, Z+2	; 0x02
    2cc4:	93 81       	ldd	r25, Z+3	; 0x03
    2cc6:	20 97       	sbiw	r28, 0x00	; 0
    2cc8:	19 f0       	breq	.+6      	; 0x2cd0 <malloc+0x40>
    2cca:	9b 83       	std	Y+3, r25	; 0x03
    2ccc:	8a 83       	std	Y+2, r24	; 0x02
    2cce:	2b c0       	rjmp	.+86     	; 0x2d26 <malloc+0x96>
    2cd0:	90 93 9f 17 	sts	0x179F, r25
    2cd4:	80 93 9e 17 	sts	0x179E, r24
    2cd8:	26 c0       	rjmp	.+76     	; 0x2d26 <malloc+0x96>
    2cda:	21 15       	cp	r18, r1
    2cdc:	31 05       	cpc	r19, r1
    2cde:	19 f0       	breq	.+6      	; 0x2ce6 <malloc+0x56>
    2ce0:	42 17       	cp	r20, r18
    2ce2:	53 07       	cpc	r21, r19
    2ce4:	18 f4       	brcc	.+6      	; 0x2cec <malloc+0x5c>
    2ce6:	9a 01       	movw	r18, r20
    2ce8:	be 01       	movw	r22, r28
    2cea:	df 01       	movw	r26, r30
    2cec:	ef 01       	movw	r28, r30
    2cee:	02 80       	ldd	r0, Z+2	; 0x02
    2cf0:	f3 81       	ldd	r31, Z+3	; 0x03
    2cf2:	e0 2d       	mov	r30, r0
    2cf4:	dc cf       	rjmp	.-72     	; 0x2cae <malloc+0x1e>
    2cf6:	21 15       	cp	r18, r1
    2cf8:	31 05       	cpc	r19, r1
    2cfa:	09 f1       	breq	.+66     	; 0x2d3e <malloc+0xae>
    2cfc:	28 1b       	sub	r18, r24
    2cfe:	39 0b       	sbc	r19, r25
    2d00:	24 30       	cpi	r18, 0x04	; 4
    2d02:	31 05       	cpc	r19, r1
    2d04:	90 f4       	brcc	.+36     	; 0x2d2a <malloc+0x9a>
    2d06:	12 96       	adiw	r26, 0x02	; 2
    2d08:	8d 91       	ld	r24, X+
    2d0a:	9c 91       	ld	r25, X
    2d0c:	13 97       	sbiw	r26, 0x03	; 3
    2d0e:	61 15       	cp	r22, r1
    2d10:	71 05       	cpc	r23, r1
    2d12:	21 f0       	breq	.+8      	; 0x2d1c <malloc+0x8c>
    2d14:	fb 01       	movw	r30, r22
    2d16:	93 83       	std	Z+3, r25	; 0x03
    2d18:	82 83       	std	Z+2, r24	; 0x02
    2d1a:	04 c0       	rjmp	.+8      	; 0x2d24 <malloc+0x94>
    2d1c:	90 93 9f 17 	sts	0x179F, r25
    2d20:	80 93 9e 17 	sts	0x179E, r24
    2d24:	fd 01       	movw	r30, r26
    2d26:	32 96       	adiw	r30, 0x02	; 2
    2d28:	44 c0       	rjmp	.+136    	; 0x2db2 <malloc+0x122>
    2d2a:	fd 01       	movw	r30, r26
    2d2c:	e2 0f       	add	r30, r18
    2d2e:	f3 1f       	adc	r31, r19
    2d30:	81 93       	st	Z+, r24
    2d32:	91 93       	st	Z+, r25
    2d34:	22 50       	subi	r18, 0x02	; 2
    2d36:	31 09       	sbc	r19, r1
    2d38:	2d 93       	st	X+, r18
    2d3a:	3c 93       	st	X, r19
    2d3c:	3a c0       	rjmp	.+116    	; 0x2db2 <malloc+0x122>
    2d3e:	20 91 9c 17 	lds	r18, 0x179C
    2d42:	30 91 9d 17 	lds	r19, 0x179D
    2d46:	23 2b       	or	r18, r19
    2d48:	41 f4       	brne	.+16     	; 0x2d5a <malloc+0xca>
    2d4a:	20 91 02 02 	lds	r18, 0x0202
    2d4e:	30 91 03 02 	lds	r19, 0x0203
    2d52:	30 93 9d 17 	sts	0x179D, r19
    2d56:	20 93 9c 17 	sts	0x179C, r18
    2d5a:	20 91 00 02 	lds	r18, 0x0200
    2d5e:	30 91 01 02 	lds	r19, 0x0201
    2d62:	21 15       	cp	r18, r1
    2d64:	31 05       	cpc	r19, r1
    2d66:	41 f4       	brne	.+16     	; 0x2d78 <malloc+0xe8>
    2d68:	2d b7       	in	r18, 0x3d	; 61
    2d6a:	3e b7       	in	r19, 0x3e	; 62
    2d6c:	40 91 04 02 	lds	r20, 0x0204
    2d70:	50 91 05 02 	lds	r21, 0x0205
    2d74:	24 1b       	sub	r18, r20
    2d76:	35 0b       	sbc	r19, r21
    2d78:	e0 91 9c 17 	lds	r30, 0x179C
    2d7c:	f0 91 9d 17 	lds	r31, 0x179D
    2d80:	e2 17       	cp	r30, r18
    2d82:	f3 07       	cpc	r31, r19
    2d84:	a0 f4       	brcc	.+40     	; 0x2dae <malloc+0x11e>
    2d86:	2e 1b       	sub	r18, r30
    2d88:	3f 0b       	sbc	r19, r31
    2d8a:	28 17       	cp	r18, r24
    2d8c:	39 07       	cpc	r19, r25
    2d8e:	78 f0       	brcs	.+30     	; 0x2dae <malloc+0x11e>
    2d90:	ac 01       	movw	r20, r24
    2d92:	4e 5f       	subi	r20, 0xFE	; 254
    2d94:	5f 4f       	sbci	r21, 0xFF	; 255
    2d96:	24 17       	cp	r18, r20
    2d98:	35 07       	cpc	r19, r21
    2d9a:	48 f0       	brcs	.+18     	; 0x2dae <malloc+0x11e>
    2d9c:	4e 0f       	add	r20, r30
    2d9e:	5f 1f       	adc	r21, r31
    2da0:	50 93 9d 17 	sts	0x179D, r21
    2da4:	40 93 9c 17 	sts	0x179C, r20
    2da8:	81 93       	st	Z+, r24
    2daa:	91 93       	st	Z+, r25
    2dac:	02 c0       	rjmp	.+4      	; 0x2db2 <malloc+0x122>
    2dae:	e0 e0       	ldi	r30, 0x00	; 0
    2db0:	f0 e0       	ldi	r31, 0x00	; 0
    2db2:	cf 01       	movw	r24, r30
    2db4:	df 91       	pop	r29
    2db6:	cf 91       	pop	r28
    2db8:	08 95       	ret

00002dba <free>:
    2dba:	0f 93       	push	r16
    2dbc:	1f 93       	push	r17
    2dbe:	cf 93       	push	r28
    2dc0:	df 93       	push	r29
    2dc2:	00 97       	sbiw	r24, 0x00	; 0
    2dc4:	09 f4       	brne	.+2      	; 0x2dc8 <free+0xe>
    2dc6:	8c c0       	rjmp	.+280    	; 0x2ee0 <free+0x126>
    2dc8:	fc 01       	movw	r30, r24
    2dca:	32 97       	sbiw	r30, 0x02	; 2
    2dcc:	13 82       	std	Z+3, r1	; 0x03
    2dce:	12 82       	std	Z+2, r1	; 0x02
    2dd0:	00 91 9e 17 	lds	r16, 0x179E
    2dd4:	10 91 9f 17 	lds	r17, 0x179F
    2dd8:	01 15       	cp	r16, r1
    2dda:	11 05       	cpc	r17, r1
    2ddc:	81 f4       	brne	.+32     	; 0x2dfe <free+0x44>
    2dde:	20 81       	ld	r18, Z
    2de0:	31 81       	ldd	r19, Z+1	; 0x01
    2de2:	82 0f       	add	r24, r18
    2de4:	93 1f       	adc	r25, r19
    2de6:	20 91 9c 17 	lds	r18, 0x179C
    2dea:	30 91 9d 17 	lds	r19, 0x179D
    2dee:	28 17       	cp	r18, r24
    2df0:	39 07       	cpc	r19, r25
    2df2:	79 f5       	brne	.+94     	; 0x2e52 <free+0x98>
    2df4:	f0 93 9d 17 	sts	0x179D, r31
    2df8:	e0 93 9c 17 	sts	0x179C, r30
    2dfc:	71 c0       	rjmp	.+226    	; 0x2ee0 <free+0x126>
    2dfe:	d8 01       	movw	r26, r16
    2e00:	40 e0       	ldi	r20, 0x00	; 0
    2e02:	50 e0       	ldi	r21, 0x00	; 0
    2e04:	ae 17       	cp	r26, r30
    2e06:	bf 07       	cpc	r27, r31
    2e08:	50 f4       	brcc	.+20     	; 0x2e1e <free+0x64>
    2e0a:	12 96       	adiw	r26, 0x02	; 2
    2e0c:	2d 91       	ld	r18, X+
    2e0e:	3c 91       	ld	r19, X
    2e10:	13 97       	sbiw	r26, 0x03	; 3
    2e12:	ad 01       	movw	r20, r26
    2e14:	21 15       	cp	r18, r1
    2e16:	31 05       	cpc	r19, r1
    2e18:	09 f1       	breq	.+66     	; 0x2e5c <free+0xa2>
    2e1a:	d9 01       	movw	r26, r18
    2e1c:	f3 cf       	rjmp	.-26     	; 0x2e04 <free+0x4a>
    2e1e:	9d 01       	movw	r18, r26
    2e20:	da 01       	movw	r26, r20
    2e22:	33 83       	std	Z+3, r19	; 0x03
    2e24:	22 83       	std	Z+2, r18	; 0x02
    2e26:	60 81       	ld	r22, Z
    2e28:	71 81       	ldd	r23, Z+1	; 0x01
    2e2a:	86 0f       	add	r24, r22
    2e2c:	97 1f       	adc	r25, r23
    2e2e:	82 17       	cp	r24, r18
    2e30:	93 07       	cpc	r25, r19
    2e32:	69 f4       	brne	.+26     	; 0x2e4e <free+0x94>
    2e34:	ec 01       	movw	r28, r24
    2e36:	28 81       	ld	r18, Y
    2e38:	39 81       	ldd	r19, Y+1	; 0x01
    2e3a:	26 0f       	add	r18, r22
    2e3c:	37 1f       	adc	r19, r23
    2e3e:	2e 5f       	subi	r18, 0xFE	; 254
    2e40:	3f 4f       	sbci	r19, 0xFF	; 255
    2e42:	31 83       	std	Z+1, r19	; 0x01
    2e44:	20 83       	st	Z, r18
    2e46:	8a 81       	ldd	r24, Y+2	; 0x02
    2e48:	9b 81       	ldd	r25, Y+3	; 0x03
    2e4a:	93 83       	std	Z+3, r25	; 0x03
    2e4c:	82 83       	std	Z+2, r24	; 0x02
    2e4e:	45 2b       	or	r20, r21
    2e50:	29 f4       	brne	.+10     	; 0x2e5c <free+0xa2>
    2e52:	f0 93 9f 17 	sts	0x179F, r31
    2e56:	e0 93 9e 17 	sts	0x179E, r30
    2e5a:	42 c0       	rjmp	.+132    	; 0x2ee0 <free+0x126>
    2e5c:	13 96       	adiw	r26, 0x03	; 3
    2e5e:	fc 93       	st	X, r31
    2e60:	ee 93       	st	-X, r30
    2e62:	12 97       	sbiw	r26, 0x02	; 2
    2e64:	ed 01       	movw	r28, r26
    2e66:	49 91       	ld	r20, Y+
    2e68:	59 91       	ld	r21, Y+
    2e6a:	9e 01       	movw	r18, r28
    2e6c:	24 0f       	add	r18, r20
    2e6e:	35 1f       	adc	r19, r21
    2e70:	e2 17       	cp	r30, r18
    2e72:	f3 07       	cpc	r31, r19
    2e74:	71 f4       	brne	.+28     	; 0x2e92 <free+0xd8>
    2e76:	80 81       	ld	r24, Z
    2e78:	91 81       	ldd	r25, Z+1	; 0x01
    2e7a:	84 0f       	add	r24, r20
    2e7c:	95 1f       	adc	r25, r21
    2e7e:	02 96       	adiw	r24, 0x02	; 2
    2e80:	11 96       	adiw	r26, 0x01	; 1
    2e82:	9c 93       	st	X, r25
    2e84:	8e 93       	st	-X, r24
    2e86:	82 81       	ldd	r24, Z+2	; 0x02
    2e88:	93 81       	ldd	r25, Z+3	; 0x03
    2e8a:	13 96       	adiw	r26, 0x03	; 3
    2e8c:	9c 93       	st	X, r25
    2e8e:	8e 93       	st	-X, r24
    2e90:	12 97       	sbiw	r26, 0x02	; 2
    2e92:	e0 e0       	ldi	r30, 0x00	; 0
    2e94:	f0 e0       	ldi	r31, 0x00	; 0
    2e96:	d8 01       	movw	r26, r16
    2e98:	12 96       	adiw	r26, 0x02	; 2
    2e9a:	8d 91       	ld	r24, X+
    2e9c:	9c 91       	ld	r25, X
    2e9e:	13 97       	sbiw	r26, 0x03	; 3
    2ea0:	00 97       	sbiw	r24, 0x00	; 0
    2ea2:	19 f0       	breq	.+6      	; 0x2eaa <free+0xf0>
    2ea4:	f8 01       	movw	r30, r16
    2ea6:	8c 01       	movw	r16, r24
    2ea8:	f6 cf       	rjmp	.-20     	; 0x2e96 <free+0xdc>
    2eaa:	8d 91       	ld	r24, X+
    2eac:	9c 91       	ld	r25, X
    2eae:	98 01       	movw	r18, r16
    2eb0:	2e 5f       	subi	r18, 0xFE	; 254
    2eb2:	3f 4f       	sbci	r19, 0xFF	; 255
    2eb4:	82 0f       	add	r24, r18
    2eb6:	93 1f       	adc	r25, r19
    2eb8:	20 91 9c 17 	lds	r18, 0x179C
    2ebc:	30 91 9d 17 	lds	r19, 0x179D
    2ec0:	28 17       	cp	r18, r24
    2ec2:	39 07       	cpc	r19, r25
    2ec4:	69 f4       	brne	.+26     	; 0x2ee0 <free+0x126>
    2ec6:	30 97       	sbiw	r30, 0x00	; 0
    2ec8:	29 f4       	brne	.+10     	; 0x2ed4 <free+0x11a>
    2eca:	10 92 9f 17 	sts	0x179F, r1
    2ece:	10 92 9e 17 	sts	0x179E, r1
    2ed2:	02 c0       	rjmp	.+4      	; 0x2ed8 <free+0x11e>
    2ed4:	13 82       	std	Z+3, r1	; 0x03
    2ed6:	12 82       	std	Z+2, r1	; 0x02
    2ed8:	10 93 9d 17 	sts	0x179D, r17
    2edc:	00 93 9c 17 	sts	0x179C, r16
    2ee0:	df 91       	pop	r29
    2ee2:	cf 91       	pop	r28
    2ee4:	1f 91       	pop	r17
    2ee6:	0f 91       	pop	r16
    2ee8:	08 95       	ret

00002eea <strtok>:
    2eea:	40 e9       	ldi	r20, 0x90	; 144
    2eec:	5a e0       	ldi	r21, 0x0A	; 10
    2eee:	47 c0       	rjmp	.+142    	; 0x2f7e <strtok_r>

00002ef0 <memcmp>:
    2ef0:	fb 01       	movw	r30, r22
    2ef2:	dc 01       	movw	r26, r24
    2ef4:	04 c0       	rjmp	.+8      	; 0x2efe <memcmp+0xe>
    2ef6:	8d 91       	ld	r24, X+
    2ef8:	01 90       	ld	r0, Z+
    2efa:	80 19       	sub	r24, r0
    2efc:	21 f4       	brne	.+8      	; 0x2f06 <memcmp+0x16>
    2efe:	41 50       	subi	r20, 0x01	; 1
    2f00:	50 40       	sbci	r21, 0x00	; 0
    2f02:	c8 f7       	brcc	.-14     	; 0x2ef6 <memcmp+0x6>
    2f04:	88 1b       	sub	r24, r24
    2f06:	99 0b       	sbc	r25, r25
    2f08:	08 95       	ret

00002f0a <memcpy>:
    2f0a:	fb 01       	movw	r30, r22
    2f0c:	dc 01       	movw	r26, r24
    2f0e:	02 c0       	rjmp	.+4      	; 0x2f14 <memcpy+0xa>
    2f10:	01 90       	ld	r0, Z+
    2f12:	0d 92       	st	X+, r0
    2f14:	41 50       	subi	r20, 0x01	; 1
    2f16:	50 40       	sbci	r21, 0x00	; 0
    2f18:	d8 f7       	brcc	.-10     	; 0x2f10 <memcpy+0x6>
    2f1a:	08 95       	ret

00002f1c <strcmp>:
    2f1c:	fb 01       	movw	r30, r22
    2f1e:	dc 01       	movw	r26, r24
    2f20:	8d 91       	ld	r24, X+
    2f22:	01 90       	ld	r0, Z+
    2f24:	80 19       	sub	r24, r0
    2f26:	01 10       	cpse	r0, r1
    2f28:	d9 f3       	breq	.-10     	; 0x2f20 <strcmp+0x4>
    2f2a:	99 0b       	sbc	r25, r25
    2f2c:	08 95       	ret

00002f2e <strncmp>:
    2f2e:	fb 01       	movw	r30, r22
    2f30:	dc 01       	movw	r26, r24
    2f32:	41 50       	subi	r20, 0x01	; 1
    2f34:	50 40       	sbci	r21, 0x00	; 0
    2f36:	30 f0       	brcs	.+12     	; 0x2f44 <strncmp+0x16>
    2f38:	8d 91       	ld	r24, X+
    2f3a:	01 90       	ld	r0, Z+
    2f3c:	80 19       	sub	r24, r0
    2f3e:	19 f4       	brne	.+6      	; 0x2f46 <strncmp+0x18>
    2f40:	00 20       	and	r0, r0
    2f42:	b9 f7       	brne	.-18     	; 0x2f32 <strncmp+0x4>
    2f44:	88 1b       	sub	r24, r24
    2f46:	99 0b       	sbc	r25, r25
    2f48:	08 95       	ret

00002f4a <strstr>:
    2f4a:	fb 01       	movw	r30, r22
    2f4c:	51 91       	ld	r21, Z+
    2f4e:	55 23       	and	r21, r21
    2f50:	a9 f0       	breq	.+42     	; 0x2f7c <strstr+0x32>
    2f52:	bf 01       	movw	r22, r30
    2f54:	dc 01       	movw	r26, r24
    2f56:	4d 91       	ld	r20, X+
    2f58:	45 17       	cp	r20, r21
    2f5a:	41 11       	cpse	r20, r1
    2f5c:	e1 f7       	brne	.-8      	; 0x2f56 <strstr+0xc>
    2f5e:	59 f4       	brne	.+22     	; 0x2f76 <strstr+0x2c>
    2f60:	cd 01       	movw	r24, r26
    2f62:	01 90       	ld	r0, Z+
    2f64:	00 20       	and	r0, r0
    2f66:	49 f0       	breq	.+18     	; 0x2f7a <strstr+0x30>
    2f68:	4d 91       	ld	r20, X+
    2f6a:	40 15       	cp	r20, r0
    2f6c:	41 11       	cpse	r20, r1
    2f6e:	c9 f3       	breq	.-14     	; 0x2f62 <strstr+0x18>
    2f70:	fb 01       	movw	r30, r22
    2f72:	41 11       	cpse	r20, r1
    2f74:	ef cf       	rjmp	.-34     	; 0x2f54 <strstr+0xa>
    2f76:	81 e0       	ldi	r24, 0x01	; 1
    2f78:	90 e0       	ldi	r25, 0x00	; 0
    2f7a:	01 97       	sbiw	r24, 0x01	; 1
    2f7c:	08 95       	ret

00002f7e <strtok_r>:
    2f7e:	fa 01       	movw	r30, r20
    2f80:	a1 91       	ld	r26, Z+
    2f82:	b0 81       	ld	r27, Z
    2f84:	00 97       	sbiw	r24, 0x00	; 0
    2f86:	19 f4       	brne	.+6      	; 0x2f8e <strtok_r+0x10>
    2f88:	10 97       	sbiw	r26, 0x00	; 0
    2f8a:	e1 f0       	breq	.+56     	; 0x2fc4 <strtok_r+0x46>
    2f8c:	cd 01       	movw	r24, r26
    2f8e:	dc 01       	movw	r26, r24
    2f90:	cd 01       	movw	r24, r26
    2f92:	0d 90       	ld	r0, X+
    2f94:	00 20       	and	r0, r0
    2f96:	11 f4       	brne	.+4      	; 0x2f9c <strtok_r+0x1e>
    2f98:	c0 01       	movw	r24, r0
    2f9a:	13 c0       	rjmp	.+38     	; 0x2fc2 <strtok_r+0x44>
    2f9c:	fb 01       	movw	r30, r22
    2f9e:	21 91       	ld	r18, Z+
    2fa0:	22 23       	and	r18, r18
    2fa2:	19 f0       	breq	.+6      	; 0x2faa <strtok_r+0x2c>
    2fa4:	20 15       	cp	r18, r0
    2fa6:	d9 f7       	brne	.-10     	; 0x2f9e <strtok_r+0x20>
    2fa8:	f3 cf       	rjmp	.-26     	; 0x2f90 <strtok_r+0x12>
    2faa:	fb 01       	movw	r30, r22
    2fac:	21 91       	ld	r18, Z+
    2fae:	20 15       	cp	r18, r0
    2fb0:	19 f4       	brne	.+6      	; 0x2fb8 <strtok_r+0x3a>
    2fb2:	1e 92       	st	-X, r1
    2fb4:	11 96       	adiw	r26, 0x01	; 1
    2fb6:	06 c0       	rjmp	.+12     	; 0x2fc4 <strtok_r+0x46>
    2fb8:	22 23       	and	r18, r18
    2fba:	c1 f7       	brne	.-16     	; 0x2fac <strtok_r+0x2e>
    2fbc:	0d 90       	ld	r0, X+
    2fbe:	00 20       	and	r0, r0
    2fc0:	a1 f7       	brne	.-24     	; 0x2faa <strtok_r+0x2c>
    2fc2:	d0 01       	movw	r26, r0
    2fc4:	fa 01       	movw	r30, r20
    2fc6:	a1 93       	st	Z+, r26
    2fc8:	b0 83       	st	Z, r27
    2fca:	08 95       	ret

00002fcc <printf>:
    2fcc:	cf 93       	push	r28
    2fce:	df 93       	push	r29
    2fd0:	cd b7       	in	r28, 0x3d	; 61
    2fd2:	de b7       	in	r29, 0x3e	; 62
    2fd4:	ae 01       	movw	r20, r28
    2fd6:	4a 5f       	subi	r20, 0xFA	; 250
    2fd8:	5f 4f       	sbci	r21, 0xFF	; 255
    2fda:	fa 01       	movw	r30, r20
    2fdc:	61 91       	ld	r22, Z+
    2fde:	71 91       	ld	r23, Z+
    2fe0:	af 01       	movw	r20, r30
    2fe2:	80 91 a2 17 	lds	r24, 0x17A2
    2fe6:	90 91 a3 17 	lds	r25, 0x17A3
    2fea:	62 d0       	rcall	.+196    	; 0x30b0 <vfprintf>
    2fec:	df 91       	pop	r29
    2fee:	cf 91       	pop	r28
    2ff0:	08 95       	ret

00002ff2 <puts>:
    2ff2:	0f 93       	push	r16
    2ff4:	1f 93       	push	r17
    2ff6:	cf 93       	push	r28
    2ff8:	df 93       	push	r29
    2ffa:	e0 91 a2 17 	lds	r30, 0x17A2
    2ffe:	f0 91 a3 17 	lds	r31, 0x17A3
    3002:	23 81       	ldd	r18, Z+3	; 0x03
    3004:	21 ff       	sbrs	r18, 1
    3006:	1b c0       	rjmp	.+54     	; 0x303e <puts+0x4c>
    3008:	8c 01       	movw	r16, r24
    300a:	d0 e0       	ldi	r29, 0x00	; 0
    300c:	c0 e0       	ldi	r28, 0x00	; 0
    300e:	f8 01       	movw	r30, r16
    3010:	81 91       	ld	r24, Z+
    3012:	8f 01       	movw	r16, r30
    3014:	60 91 a2 17 	lds	r22, 0x17A2
    3018:	70 91 a3 17 	lds	r23, 0x17A3
    301c:	db 01       	movw	r26, r22
    301e:	18 96       	adiw	r26, 0x08	; 8
    3020:	ed 91       	ld	r30, X+
    3022:	fc 91       	ld	r31, X
    3024:	19 97       	sbiw	r26, 0x09	; 9
    3026:	88 23       	and	r24, r24
    3028:	31 f0       	breq	.+12     	; 0x3036 <puts+0x44>
    302a:	19 95       	eicall
    302c:	89 2b       	or	r24, r25
    302e:	79 f3       	breq	.-34     	; 0x300e <puts+0x1c>
    3030:	df ef       	ldi	r29, 0xFF	; 255
    3032:	cf ef       	ldi	r28, 0xFF	; 255
    3034:	ec cf       	rjmp	.-40     	; 0x300e <puts+0x1c>
    3036:	8a e0       	ldi	r24, 0x0A	; 10
    3038:	19 95       	eicall
    303a:	89 2b       	or	r24, r25
    303c:	19 f0       	breq	.+6      	; 0x3044 <puts+0x52>
    303e:	8f ef       	ldi	r24, 0xFF	; 255
    3040:	9f ef       	ldi	r25, 0xFF	; 255
    3042:	02 c0       	rjmp	.+4      	; 0x3048 <puts+0x56>
    3044:	8d 2f       	mov	r24, r29
    3046:	9c 2f       	mov	r25, r28
    3048:	df 91       	pop	r29
    304a:	cf 91       	pop	r28
    304c:	1f 91       	pop	r17
    304e:	0f 91       	pop	r16
    3050:	08 95       	ret

00003052 <sprintf>:
    3052:	0f 93       	push	r16
    3054:	1f 93       	push	r17
    3056:	cf 93       	push	r28
    3058:	df 93       	push	r29
    305a:	cd b7       	in	r28, 0x3d	; 61
    305c:	de b7       	in	r29, 0x3e	; 62
    305e:	2e 97       	sbiw	r28, 0x0e	; 14
    3060:	0f b6       	in	r0, 0x3f	; 63
    3062:	f8 94       	cli
    3064:	de bf       	out	0x3e, r29	; 62
    3066:	0f be       	out	0x3f, r0	; 63
    3068:	cd bf       	out	0x3d, r28	; 61
    306a:	0e 89       	ldd	r16, Y+22	; 0x16
    306c:	1f 89       	ldd	r17, Y+23	; 0x17
    306e:	86 e0       	ldi	r24, 0x06	; 6
    3070:	8c 83       	std	Y+4, r24	; 0x04
    3072:	1a 83       	std	Y+2, r17	; 0x02
    3074:	09 83       	std	Y+1, r16	; 0x01
    3076:	8f ef       	ldi	r24, 0xFF	; 255
    3078:	9f e7       	ldi	r25, 0x7F	; 127
    307a:	9e 83       	std	Y+6, r25	; 0x06
    307c:	8d 83       	std	Y+5, r24	; 0x05
    307e:	ae 01       	movw	r20, r28
    3080:	46 5e       	subi	r20, 0xE6	; 230
    3082:	5f 4f       	sbci	r21, 0xFF	; 255
    3084:	68 8d       	ldd	r22, Y+24	; 0x18
    3086:	79 8d       	ldd	r23, Y+25	; 0x19
    3088:	ce 01       	movw	r24, r28
    308a:	01 96       	adiw	r24, 0x01	; 1
    308c:	11 d0       	rcall	.+34     	; 0x30b0 <vfprintf>
    308e:	2f 81       	ldd	r18, Y+7	; 0x07
    3090:	38 85       	ldd	r19, Y+8	; 0x08
    3092:	f8 01       	movw	r30, r16
    3094:	e2 0f       	add	r30, r18
    3096:	f3 1f       	adc	r31, r19
    3098:	10 82       	st	Z, r1
    309a:	2e 96       	adiw	r28, 0x0e	; 14
    309c:	0f b6       	in	r0, 0x3f	; 63
    309e:	f8 94       	cli
    30a0:	de bf       	out	0x3e, r29	; 62
    30a2:	0f be       	out	0x3f, r0	; 63
    30a4:	cd bf       	out	0x3d, r28	; 61
    30a6:	df 91       	pop	r29
    30a8:	cf 91       	pop	r28
    30aa:	1f 91       	pop	r17
    30ac:	0f 91       	pop	r16
    30ae:	08 95       	ret

000030b0 <vfprintf>:
    30b0:	2f 92       	push	r2
    30b2:	3f 92       	push	r3
    30b4:	4f 92       	push	r4
    30b6:	5f 92       	push	r5
    30b8:	6f 92       	push	r6
    30ba:	7f 92       	push	r7
    30bc:	8f 92       	push	r8
    30be:	9f 92       	push	r9
    30c0:	af 92       	push	r10
    30c2:	bf 92       	push	r11
    30c4:	cf 92       	push	r12
    30c6:	df 92       	push	r13
    30c8:	ef 92       	push	r14
    30ca:	ff 92       	push	r15
    30cc:	0f 93       	push	r16
    30ce:	1f 93       	push	r17
    30d0:	cf 93       	push	r28
    30d2:	df 93       	push	r29
    30d4:	cd b7       	in	r28, 0x3d	; 61
    30d6:	de b7       	in	r29, 0x3e	; 62
    30d8:	2c 97       	sbiw	r28, 0x0c	; 12
    30da:	0f b6       	in	r0, 0x3f	; 63
    30dc:	f8 94       	cli
    30de:	de bf       	out	0x3e, r29	; 62
    30e0:	0f be       	out	0x3f, r0	; 63
    30e2:	cd bf       	out	0x3d, r28	; 61
    30e4:	7c 01       	movw	r14, r24
    30e6:	6b 01       	movw	r12, r22
    30e8:	8a 01       	movw	r16, r20
    30ea:	fc 01       	movw	r30, r24
    30ec:	17 82       	std	Z+7, r1	; 0x07
    30ee:	16 82       	std	Z+6, r1	; 0x06
    30f0:	83 81       	ldd	r24, Z+3	; 0x03
    30f2:	81 ff       	sbrs	r24, 1
    30f4:	b0 c1       	rjmp	.+864    	; 0x3456 <vfprintf+0x3a6>
    30f6:	ce 01       	movw	r24, r28
    30f8:	01 96       	adiw	r24, 0x01	; 1
    30fa:	4c 01       	movw	r8, r24
    30fc:	f7 01       	movw	r30, r14
    30fe:	93 81       	ldd	r25, Z+3	; 0x03
    3100:	f6 01       	movw	r30, r12
    3102:	93 fd       	sbrc	r25, 3
    3104:	85 91       	lpm	r24, Z+
    3106:	93 ff       	sbrs	r25, 3
    3108:	81 91       	ld	r24, Z+
    310a:	6f 01       	movw	r12, r30
    310c:	88 23       	and	r24, r24
    310e:	09 f4       	brne	.+2      	; 0x3112 <vfprintf+0x62>
    3110:	9e c1       	rjmp	.+828    	; 0x344e <vfprintf+0x39e>
    3112:	85 32       	cpi	r24, 0x25	; 37
    3114:	39 f4       	brne	.+14     	; 0x3124 <vfprintf+0x74>
    3116:	93 fd       	sbrc	r25, 3
    3118:	85 91       	lpm	r24, Z+
    311a:	93 ff       	sbrs	r25, 3
    311c:	81 91       	ld	r24, Z+
    311e:	6f 01       	movw	r12, r30
    3120:	85 32       	cpi	r24, 0x25	; 37
    3122:	21 f4       	brne	.+8      	; 0x312c <vfprintf+0x7c>
    3124:	b7 01       	movw	r22, r14
    3126:	90 e0       	ldi	r25, 0x00	; 0
    3128:	c7 d1       	rcall	.+910    	; 0x34b8 <fputc>
    312a:	e8 cf       	rjmp	.-48     	; 0x30fc <vfprintf+0x4c>
    312c:	51 2c       	mov	r5, r1
    312e:	31 2c       	mov	r3, r1
    3130:	20 e0       	ldi	r18, 0x00	; 0
    3132:	20 32       	cpi	r18, 0x20	; 32
    3134:	a0 f4       	brcc	.+40     	; 0x315e <vfprintf+0xae>
    3136:	8b 32       	cpi	r24, 0x2B	; 43
    3138:	69 f0       	breq	.+26     	; 0x3154 <vfprintf+0xa4>
    313a:	30 f4       	brcc	.+12     	; 0x3148 <vfprintf+0x98>
    313c:	80 32       	cpi	r24, 0x20	; 32
    313e:	59 f0       	breq	.+22     	; 0x3156 <vfprintf+0xa6>
    3140:	83 32       	cpi	r24, 0x23	; 35
    3142:	69 f4       	brne	.+26     	; 0x315e <vfprintf+0xae>
    3144:	20 61       	ori	r18, 0x10	; 16
    3146:	2c c0       	rjmp	.+88     	; 0x31a0 <vfprintf+0xf0>
    3148:	8d 32       	cpi	r24, 0x2D	; 45
    314a:	39 f0       	breq	.+14     	; 0x315a <vfprintf+0xaa>
    314c:	80 33       	cpi	r24, 0x30	; 48
    314e:	39 f4       	brne	.+14     	; 0x315e <vfprintf+0xae>
    3150:	21 60       	ori	r18, 0x01	; 1
    3152:	26 c0       	rjmp	.+76     	; 0x31a0 <vfprintf+0xf0>
    3154:	22 60       	ori	r18, 0x02	; 2
    3156:	24 60       	ori	r18, 0x04	; 4
    3158:	23 c0       	rjmp	.+70     	; 0x31a0 <vfprintf+0xf0>
    315a:	28 60       	ori	r18, 0x08	; 8
    315c:	21 c0       	rjmp	.+66     	; 0x31a0 <vfprintf+0xf0>
    315e:	27 fd       	sbrc	r18, 7
    3160:	27 c0       	rjmp	.+78     	; 0x31b0 <vfprintf+0x100>
    3162:	30 ed       	ldi	r19, 0xD0	; 208
    3164:	38 0f       	add	r19, r24
    3166:	3a 30       	cpi	r19, 0x0A	; 10
    3168:	78 f4       	brcc	.+30     	; 0x3188 <vfprintf+0xd8>
    316a:	26 ff       	sbrs	r18, 6
    316c:	06 c0       	rjmp	.+12     	; 0x317a <vfprintf+0xca>
    316e:	fa e0       	ldi	r31, 0x0A	; 10
    3170:	5f 9e       	mul	r5, r31
    3172:	30 0d       	add	r19, r0
    3174:	11 24       	eor	r1, r1
    3176:	53 2e       	mov	r5, r19
    3178:	13 c0       	rjmp	.+38     	; 0x31a0 <vfprintf+0xf0>
    317a:	8a e0       	ldi	r24, 0x0A	; 10
    317c:	38 9e       	mul	r3, r24
    317e:	30 0d       	add	r19, r0
    3180:	11 24       	eor	r1, r1
    3182:	33 2e       	mov	r3, r19
    3184:	20 62       	ori	r18, 0x20	; 32
    3186:	0c c0       	rjmp	.+24     	; 0x31a0 <vfprintf+0xf0>
    3188:	8e 32       	cpi	r24, 0x2E	; 46
    318a:	21 f4       	brne	.+8      	; 0x3194 <vfprintf+0xe4>
    318c:	26 fd       	sbrc	r18, 6
    318e:	5f c1       	rjmp	.+702    	; 0x344e <vfprintf+0x39e>
    3190:	20 64       	ori	r18, 0x40	; 64
    3192:	06 c0       	rjmp	.+12     	; 0x31a0 <vfprintf+0xf0>
    3194:	8c 36       	cpi	r24, 0x6C	; 108
    3196:	11 f4       	brne	.+4      	; 0x319c <vfprintf+0xec>
    3198:	20 68       	ori	r18, 0x80	; 128
    319a:	02 c0       	rjmp	.+4      	; 0x31a0 <vfprintf+0xf0>
    319c:	88 36       	cpi	r24, 0x68	; 104
    319e:	41 f4       	brne	.+16     	; 0x31b0 <vfprintf+0x100>
    31a0:	f6 01       	movw	r30, r12
    31a2:	93 fd       	sbrc	r25, 3
    31a4:	85 91       	lpm	r24, Z+
    31a6:	93 ff       	sbrs	r25, 3
    31a8:	81 91       	ld	r24, Z+
    31aa:	6f 01       	movw	r12, r30
    31ac:	81 11       	cpse	r24, r1
    31ae:	c1 cf       	rjmp	.-126    	; 0x3132 <vfprintf+0x82>
    31b0:	98 2f       	mov	r25, r24
    31b2:	9f 7d       	andi	r25, 0xDF	; 223
    31b4:	95 54       	subi	r25, 0x45	; 69
    31b6:	93 30       	cpi	r25, 0x03	; 3
    31b8:	28 f4       	brcc	.+10     	; 0x31c4 <vfprintf+0x114>
    31ba:	0c 5f       	subi	r16, 0xFC	; 252
    31bc:	1f 4f       	sbci	r17, 0xFF	; 255
    31be:	ff e3       	ldi	r31, 0x3F	; 63
    31c0:	f9 83       	std	Y+1, r31	; 0x01
    31c2:	0d c0       	rjmp	.+26     	; 0x31de <vfprintf+0x12e>
    31c4:	83 36       	cpi	r24, 0x63	; 99
    31c6:	31 f0       	breq	.+12     	; 0x31d4 <vfprintf+0x124>
    31c8:	83 37       	cpi	r24, 0x73	; 115
    31ca:	71 f0       	breq	.+28     	; 0x31e8 <vfprintf+0x138>
    31cc:	83 35       	cpi	r24, 0x53	; 83
    31ce:	09 f0       	breq	.+2      	; 0x31d2 <vfprintf+0x122>
    31d0:	57 c0       	rjmp	.+174    	; 0x3280 <vfprintf+0x1d0>
    31d2:	21 c0       	rjmp	.+66     	; 0x3216 <vfprintf+0x166>
    31d4:	f8 01       	movw	r30, r16
    31d6:	80 81       	ld	r24, Z
    31d8:	89 83       	std	Y+1, r24	; 0x01
    31da:	0e 5f       	subi	r16, 0xFE	; 254
    31dc:	1f 4f       	sbci	r17, 0xFF	; 255
    31de:	44 24       	eor	r4, r4
    31e0:	43 94       	inc	r4
    31e2:	51 2c       	mov	r5, r1
    31e4:	54 01       	movw	r10, r8
    31e6:	14 c0       	rjmp	.+40     	; 0x3210 <vfprintf+0x160>
    31e8:	38 01       	movw	r6, r16
    31ea:	f2 e0       	ldi	r31, 0x02	; 2
    31ec:	6f 0e       	add	r6, r31
    31ee:	71 1c       	adc	r7, r1
    31f0:	f8 01       	movw	r30, r16
    31f2:	a0 80       	ld	r10, Z
    31f4:	b1 80       	ldd	r11, Z+1	; 0x01
    31f6:	26 ff       	sbrs	r18, 6
    31f8:	03 c0       	rjmp	.+6      	; 0x3200 <vfprintf+0x150>
    31fa:	65 2d       	mov	r22, r5
    31fc:	70 e0       	ldi	r23, 0x00	; 0
    31fe:	02 c0       	rjmp	.+4      	; 0x3204 <vfprintf+0x154>
    3200:	6f ef       	ldi	r22, 0xFF	; 255
    3202:	7f ef       	ldi	r23, 0xFF	; 255
    3204:	c5 01       	movw	r24, r10
    3206:	2c 87       	std	Y+12, r18	; 0x0c
    3208:	4c d1       	rcall	.+664    	; 0x34a2 <strnlen>
    320a:	2c 01       	movw	r4, r24
    320c:	83 01       	movw	r16, r6
    320e:	2c 85       	ldd	r18, Y+12	; 0x0c
    3210:	2f 77       	andi	r18, 0x7F	; 127
    3212:	22 2e       	mov	r2, r18
    3214:	16 c0       	rjmp	.+44     	; 0x3242 <vfprintf+0x192>
    3216:	38 01       	movw	r6, r16
    3218:	f2 e0       	ldi	r31, 0x02	; 2
    321a:	6f 0e       	add	r6, r31
    321c:	71 1c       	adc	r7, r1
    321e:	f8 01       	movw	r30, r16
    3220:	a0 80       	ld	r10, Z
    3222:	b1 80       	ldd	r11, Z+1	; 0x01
    3224:	26 ff       	sbrs	r18, 6
    3226:	03 c0       	rjmp	.+6      	; 0x322e <vfprintf+0x17e>
    3228:	65 2d       	mov	r22, r5
    322a:	70 e0       	ldi	r23, 0x00	; 0
    322c:	02 c0       	rjmp	.+4      	; 0x3232 <vfprintf+0x182>
    322e:	6f ef       	ldi	r22, 0xFF	; 255
    3230:	7f ef       	ldi	r23, 0xFF	; 255
    3232:	c5 01       	movw	r24, r10
    3234:	2c 87       	std	Y+12, r18	; 0x0c
    3236:	2a d1       	rcall	.+596    	; 0x348c <strnlen_P>
    3238:	2c 01       	movw	r4, r24
    323a:	2c 85       	ldd	r18, Y+12	; 0x0c
    323c:	20 68       	ori	r18, 0x80	; 128
    323e:	22 2e       	mov	r2, r18
    3240:	83 01       	movw	r16, r6
    3242:	23 fc       	sbrc	r2, 3
    3244:	19 c0       	rjmp	.+50     	; 0x3278 <vfprintf+0x1c8>
    3246:	83 2d       	mov	r24, r3
    3248:	90 e0       	ldi	r25, 0x00	; 0
    324a:	48 16       	cp	r4, r24
    324c:	59 06       	cpc	r5, r25
    324e:	a0 f4       	brcc	.+40     	; 0x3278 <vfprintf+0x1c8>
    3250:	b7 01       	movw	r22, r14
    3252:	80 e2       	ldi	r24, 0x20	; 32
    3254:	90 e0       	ldi	r25, 0x00	; 0
    3256:	30 d1       	rcall	.+608    	; 0x34b8 <fputc>
    3258:	3a 94       	dec	r3
    325a:	f5 cf       	rjmp	.-22     	; 0x3246 <vfprintf+0x196>
    325c:	f5 01       	movw	r30, r10
    325e:	27 fc       	sbrc	r2, 7
    3260:	85 91       	lpm	r24, Z+
    3262:	27 fe       	sbrs	r2, 7
    3264:	81 91       	ld	r24, Z+
    3266:	5f 01       	movw	r10, r30
    3268:	b7 01       	movw	r22, r14
    326a:	90 e0       	ldi	r25, 0x00	; 0
    326c:	25 d1       	rcall	.+586    	; 0x34b8 <fputc>
    326e:	31 10       	cpse	r3, r1
    3270:	3a 94       	dec	r3
    3272:	f1 e0       	ldi	r31, 0x01	; 1
    3274:	4f 1a       	sub	r4, r31
    3276:	51 08       	sbc	r5, r1
    3278:	41 14       	cp	r4, r1
    327a:	51 04       	cpc	r5, r1
    327c:	79 f7       	brne	.-34     	; 0x325c <vfprintf+0x1ac>
    327e:	de c0       	rjmp	.+444    	; 0x343c <vfprintf+0x38c>
    3280:	84 36       	cpi	r24, 0x64	; 100
    3282:	11 f0       	breq	.+4      	; 0x3288 <vfprintf+0x1d8>
    3284:	89 36       	cpi	r24, 0x69	; 105
    3286:	31 f5       	brne	.+76     	; 0x32d4 <vfprintf+0x224>
    3288:	f8 01       	movw	r30, r16
    328a:	27 ff       	sbrs	r18, 7
    328c:	07 c0       	rjmp	.+14     	; 0x329c <vfprintf+0x1ec>
    328e:	60 81       	ld	r22, Z
    3290:	71 81       	ldd	r23, Z+1	; 0x01
    3292:	82 81       	ldd	r24, Z+2	; 0x02
    3294:	93 81       	ldd	r25, Z+3	; 0x03
    3296:	0c 5f       	subi	r16, 0xFC	; 252
    3298:	1f 4f       	sbci	r17, 0xFF	; 255
    329a:	08 c0       	rjmp	.+16     	; 0x32ac <vfprintf+0x1fc>
    329c:	60 81       	ld	r22, Z
    329e:	71 81       	ldd	r23, Z+1	; 0x01
    32a0:	07 2e       	mov	r0, r23
    32a2:	00 0c       	add	r0, r0
    32a4:	88 0b       	sbc	r24, r24
    32a6:	99 0b       	sbc	r25, r25
    32a8:	0e 5f       	subi	r16, 0xFE	; 254
    32aa:	1f 4f       	sbci	r17, 0xFF	; 255
    32ac:	2f 76       	andi	r18, 0x6F	; 111
    32ae:	72 2e       	mov	r7, r18
    32b0:	97 ff       	sbrs	r25, 7
    32b2:	09 c0       	rjmp	.+18     	; 0x32c6 <vfprintf+0x216>
    32b4:	90 95       	com	r25
    32b6:	80 95       	com	r24
    32b8:	70 95       	com	r23
    32ba:	61 95       	neg	r22
    32bc:	7f 4f       	sbci	r23, 0xFF	; 255
    32be:	8f 4f       	sbci	r24, 0xFF	; 255
    32c0:	9f 4f       	sbci	r25, 0xFF	; 255
    32c2:	20 68       	ori	r18, 0x80	; 128
    32c4:	72 2e       	mov	r7, r18
    32c6:	2a e0       	ldi	r18, 0x0A	; 10
    32c8:	30 e0       	ldi	r19, 0x00	; 0
    32ca:	a4 01       	movw	r20, r8
    32cc:	2d d1       	rcall	.+602    	; 0x3528 <__ultoa_invert>
    32ce:	a8 2e       	mov	r10, r24
    32d0:	a8 18       	sub	r10, r8
    32d2:	43 c0       	rjmp	.+134    	; 0x335a <vfprintf+0x2aa>
    32d4:	85 37       	cpi	r24, 0x75	; 117
    32d6:	29 f4       	brne	.+10     	; 0x32e2 <vfprintf+0x232>
    32d8:	2f 7e       	andi	r18, 0xEF	; 239
    32da:	b2 2e       	mov	r11, r18
    32dc:	2a e0       	ldi	r18, 0x0A	; 10
    32de:	30 e0       	ldi	r19, 0x00	; 0
    32e0:	25 c0       	rjmp	.+74     	; 0x332c <vfprintf+0x27c>
    32e2:	f2 2f       	mov	r31, r18
    32e4:	f9 7f       	andi	r31, 0xF9	; 249
    32e6:	bf 2e       	mov	r11, r31
    32e8:	8f 36       	cpi	r24, 0x6F	; 111
    32ea:	c1 f0       	breq	.+48     	; 0x331c <vfprintf+0x26c>
    32ec:	18 f4       	brcc	.+6      	; 0x32f4 <vfprintf+0x244>
    32ee:	88 35       	cpi	r24, 0x58	; 88
    32f0:	79 f0       	breq	.+30     	; 0x3310 <vfprintf+0x260>
    32f2:	ad c0       	rjmp	.+346    	; 0x344e <vfprintf+0x39e>
    32f4:	80 37       	cpi	r24, 0x70	; 112
    32f6:	19 f0       	breq	.+6      	; 0x32fe <vfprintf+0x24e>
    32f8:	88 37       	cpi	r24, 0x78	; 120
    32fa:	21 f0       	breq	.+8      	; 0x3304 <vfprintf+0x254>
    32fc:	a8 c0       	rjmp	.+336    	; 0x344e <vfprintf+0x39e>
    32fe:	2f 2f       	mov	r18, r31
    3300:	20 61       	ori	r18, 0x10	; 16
    3302:	b2 2e       	mov	r11, r18
    3304:	b4 fe       	sbrs	r11, 4
    3306:	0d c0       	rjmp	.+26     	; 0x3322 <vfprintf+0x272>
    3308:	8b 2d       	mov	r24, r11
    330a:	84 60       	ori	r24, 0x04	; 4
    330c:	b8 2e       	mov	r11, r24
    330e:	09 c0       	rjmp	.+18     	; 0x3322 <vfprintf+0x272>
    3310:	24 ff       	sbrs	r18, 4
    3312:	0a c0       	rjmp	.+20     	; 0x3328 <vfprintf+0x278>
    3314:	9f 2f       	mov	r25, r31
    3316:	96 60       	ori	r25, 0x06	; 6
    3318:	b9 2e       	mov	r11, r25
    331a:	06 c0       	rjmp	.+12     	; 0x3328 <vfprintf+0x278>
    331c:	28 e0       	ldi	r18, 0x08	; 8
    331e:	30 e0       	ldi	r19, 0x00	; 0
    3320:	05 c0       	rjmp	.+10     	; 0x332c <vfprintf+0x27c>
    3322:	20 e1       	ldi	r18, 0x10	; 16
    3324:	30 e0       	ldi	r19, 0x00	; 0
    3326:	02 c0       	rjmp	.+4      	; 0x332c <vfprintf+0x27c>
    3328:	20 e1       	ldi	r18, 0x10	; 16
    332a:	32 e0       	ldi	r19, 0x02	; 2
    332c:	f8 01       	movw	r30, r16
    332e:	b7 fe       	sbrs	r11, 7
    3330:	07 c0       	rjmp	.+14     	; 0x3340 <vfprintf+0x290>
    3332:	60 81       	ld	r22, Z
    3334:	71 81       	ldd	r23, Z+1	; 0x01
    3336:	82 81       	ldd	r24, Z+2	; 0x02
    3338:	93 81       	ldd	r25, Z+3	; 0x03
    333a:	0c 5f       	subi	r16, 0xFC	; 252
    333c:	1f 4f       	sbci	r17, 0xFF	; 255
    333e:	06 c0       	rjmp	.+12     	; 0x334c <vfprintf+0x29c>
    3340:	60 81       	ld	r22, Z
    3342:	71 81       	ldd	r23, Z+1	; 0x01
    3344:	80 e0       	ldi	r24, 0x00	; 0
    3346:	90 e0       	ldi	r25, 0x00	; 0
    3348:	0e 5f       	subi	r16, 0xFE	; 254
    334a:	1f 4f       	sbci	r17, 0xFF	; 255
    334c:	a4 01       	movw	r20, r8
    334e:	ec d0       	rcall	.+472    	; 0x3528 <__ultoa_invert>
    3350:	a8 2e       	mov	r10, r24
    3352:	a8 18       	sub	r10, r8
    3354:	fb 2d       	mov	r31, r11
    3356:	ff 77       	andi	r31, 0x7F	; 127
    3358:	7f 2e       	mov	r7, r31
    335a:	76 fe       	sbrs	r7, 6
    335c:	0b c0       	rjmp	.+22     	; 0x3374 <vfprintf+0x2c4>
    335e:	37 2d       	mov	r19, r7
    3360:	3e 7f       	andi	r19, 0xFE	; 254
    3362:	a5 14       	cp	r10, r5
    3364:	50 f4       	brcc	.+20     	; 0x337a <vfprintf+0x2ca>
    3366:	74 fe       	sbrs	r7, 4
    3368:	0a c0       	rjmp	.+20     	; 0x337e <vfprintf+0x2ce>
    336a:	72 fc       	sbrc	r7, 2
    336c:	08 c0       	rjmp	.+16     	; 0x337e <vfprintf+0x2ce>
    336e:	37 2d       	mov	r19, r7
    3370:	3e 7e       	andi	r19, 0xEE	; 238
    3372:	05 c0       	rjmp	.+10     	; 0x337e <vfprintf+0x2ce>
    3374:	ba 2c       	mov	r11, r10
    3376:	37 2d       	mov	r19, r7
    3378:	03 c0       	rjmp	.+6      	; 0x3380 <vfprintf+0x2d0>
    337a:	ba 2c       	mov	r11, r10
    337c:	01 c0       	rjmp	.+2      	; 0x3380 <vfprintf+0x2d0>
    337e:	b5 2c       	mov	r11, r5
    3380:	34 ff       	sbrs	r19, 4
    3382:	0d c0       	rjmp	.+26     	; 0x339e <vfprintf+0x2ee>
    3384:	fe 01       	movw	r30, r28
    3386:	ea 0d       	add	r30, r10
    3388:	f1 1d       	adc	r31, r1
    338a:	80 81       	ld	r24, Z
    338c:	80 33       	cpi	r24, 0x30	; 48
    338e:	11 f4       	brne	.+4      	; 0x3394 <vfprintf+0x2e4>
    3390:	39 7e       	andi	r19, 0xE9	; 233
    3392:	09 c0       	rjmp	.+18     	; 0x33a6 <vfprintf+0x2f6>
    3394:	32 ff       	sbrs	r19, 2
    3396:	06 c0       	rjmp	.+12     	; 0x33a4 <vfprintf+0x2f4>
    3398:	b3 94       	inc	r11
    339a:	b3 94       	inc	r11
    339c:	04 c0       	rjmp	.+8      	; 0x33a6 <vfprintf+0x2f6>
    339e:	83 2f       	mov	r24, r19
    33a0:	86 78       	andi	r24, 0x86	; 134
    33a2:	09 f0       	breq	.+2      	; 0x33a6 <vfprintf+0x2f6>
    33a4:	b3 94       	inc	r11
    33a6:	33 fd       	sbrc	r19, 3
    33a8:	12 c0       	rjmp	.+36     	; 0x33ce <vfprintf+0x31e>
    33aa:	30 ff       	sbrs	r19, 0
    33ac:	06 c0       	rjmp	.+12     	; 0x33ba <vfprintf+0x30a>
    33ae:	5a 2c       	mov	r5, r10
    33b0:	b3 14       	cp	r11, r3
    33b2:	18 f4       	brcc	.+6      	; 0x33ba <vfprintf+0x30a>
    33b4:	53 0c       	add	r5, r3
    33b6:	5b 18       	sub	r5, r11
    33b8:	b3 2c       	mov	r11, r3
    33ba:	b3 14       	cp	r11, r3
    33bc:	60 f4       	brcc	.+24     	; 0x33d6 <vfprintf+0x326>
    33be:	b7 01       	movw	r22, r14
    33c0:	80 e2       	ldi	r24, 0x20	; 32
    33c2:	90 e0       	ldi	r25, 0x00	; 0
    33c4:	3c 87       	std	Y+12, r19	; 0x0c
    33c6:	78 d0       	rcall	.+240    	; 0x34b8 <fputc>
    33c8:	b3 94       	inc	r11
    33ca:	3c 85       	ldd	r19, Y+12	; 0x0c
    33cc:	f6 cf       	rjmp	.-20     	; 0x33ba <vfprintf+0x30a>
    33ce:	b3 14       	cp	r11, r3
    33d0:	10 f4       	brcc	.+4      	; 0x33d6 <vfprintf+0x326>
    33d2:	3b 18       	sub	r3, r11
    33d4:	01 c0       	rjmp	.+2      	; 0x33d8 <vfprintf+0x328>
    33d6:	31 2c       	mov	r3, r1
    33d8:	34 ff       	sbrs	r19, 4
    33da:	11 c0       	rjmp	.+34     	; 0x33fe <vfprintf+0x34e>
    33dc:	b7 01       	movw	r22, r14
    33de:	80 e3       	ldi	r24, 0x30	; 48
    33e0:	90 e0       	ldi	r25, 0x00	; 0
    33e2:	3c 87       	std	Y+12, r19	; 0x0c
    33e4:	69 d0       	rcall	.+210    	; 0x34b8 <fputc>
    33e6:	3c 85       	ldd	r19, Y+12	; 0x0c
    33e8:	32 ff       	sbrs	r19, 2
    33ea:	16 c0       	rjmp	.+44     	; 0x3418 <vfprintf+0x368>
    33ec:	31 fd       	sbrc	r19, 1
    33ee:	03 c0       	rjmp	.+6      	; 0x33f6 <vfprintf+0x346>
    33f0:	88 e7       	ldi	r24, 0x78	; 120
    33f2:	90 e0       	ldi	r25, 0x00	; 0
    33f4:	02 c0       	rjmp	.+4      	; 0x33fa <vfprintf+0x34a>
    33f6:	88 e5       	ldi	r24, 0x58	; 88
    33f8:	90 e0       	ldi	r25, 0x00	; 0
    33fa:	b7 01       	movw	r22, r14
    33fc:	0c c0       	rjmp	.+24     	; 0x3416 <vfprintf+0x366>
    33fe:	83 2f       	mov	r24, r19
    3400:	86 78       	andi	r24, 0x86	; 134
    3402:	51 f0       	breq	.+20     	; 0x3418 <vfprintf+0x368>
    3404:	31 ff       	sbrs	r19, 1
    3406:	02 c0       	rjmp	.+4      	; 0x340c <vfprintf+0x35c>
    3408:	8b e2       	ldi	r24, 0x2B	; 43
    340a:	01 c0       	rjmp	.+2      	; 0x340e <vfprintf+0x35e>
    340c:	80 e2       	ldi	r24, 0x20	; 32
    340e:	37 fd       	sbrc	r19, 7
    3410:	8d e2       	ldi	r24, 0x2D	; 45
    3412:	b7 01       	movw	r22, r14
    3414:	90 e0       	ldi	r25, 0x00	; 0
    3416:	50 d0       	rcall	.+160    	; 0x34b8 <fputc>
    3418:	a5 14       	cp	r10, r5
    341a:	30 f4       	brcc	.+12     	; 0x3428 <vfprintf+0x378>
    341c:	b7 01       	movw	r22, r14
    341e:	80 e3       	ldi	r24, 0x30	; 48
    3420:	90 e0       	ldi	r25, 0x00	; 0
    3422:	4a d0       	rcall	.+148    	; 0x34b8 <fputc>
    3424:	5a 94       	dec	r5
    3426:	f8 cf       	rjmp	.-16     	; 0x3418 <vfprintf+0x368>
    3428:	aa 94       	dec	r10
    342a:	f4 01       	movw	r30, r8
    342c:	ea 0d       	add	r30, r10
    342e:	f1 1d       	adc	r31, r1
    3430:	80 81       	ld	r24, Z
    3432:	b7 01       	movw	r22, r14
    3434:	90 e0       	ldi	r25, 0x00	; 0
    3436:	40 d0       	rcall	.+128    	; 0x34b8 <fputc>
    3438:	a1 10       	cpse	r10, r1
    343a:	f6 cf       	rjmp	.-20     	; 0x3428 <vfprintf+0x378>
    343c:	33 20       	and	r3, r3
    343e:	09 f4       	brne	.+2      	; 0x3442 <vfprintf+0x392>
    3440:	5d ce       	rjmp	.-838    	; 0x30fc <vfprintf+0x4c>
    3442:	b7 01       	movw	r22, r14
    3444:	80 e2       	ldi	r24, 0x20	; 32
    3446:	90 e0       	ldi	r25, 0x00	; 0
    3448:	37 d0       	rcall	.+110    	; 0x34b8 <fputc>
    344a:	3a 94       	dec	r3
    344c:	f7 cf       	rjmp	.-18     	; 0x343c <vfprintf+0x38c>
    344e:	f7 01       	movw	r30, r14
    3450:	86 81       	ldd	r24, Z+6	; 0x06
    3452:	97 81       	ldd	r25, Z+7	; 0x07
    3454:	02 c0       	rjmp	.+4      	; 0x345a <vfprintf+0x3aa>
    3456:	8f ef       	ldi	r24, 0xFF	; 255
    3458:	9f ef       	ldi	r25, 0xFF	; 255
    345a:	2c 96       	adiw	r28, 0x0c	; 12
    345c:	0f b6       	in	r0, 0x3f	; 63
    345e:	f8 94       	cli
    3460:	de bf       	out	0x3e, r29	; 62
    3462:	0f be       	out	0x3f, r0	; 63
    3464:	cd bf       	out	0x3d, r28	; 61
    3466:	df 91       	pop	r29
    3468:	cf 91       	pop	r28
    346a:	1f 91       	pop	r17
    346c:	0f 91       	pop	r16
    346e:	ff 90       	pop	r15
    3470:	ef 90       	pop	r14
    3472:	df 90       	pop	r13
    3474:	cf 90       	pop	r12
    3476:	bf 90       	pop	r11
    3478:	af 90       	pop	r10
    347a:	9f 90       	pop	r9
    347c:	8f 90       	pop	r8
    347e:	7f 90       	pop	r7
    3480:	6f 90       	pop	r6
    3482:	5f 90       	pop	r5
    3484:	4f 90       	pop	r4
    3486:	3f 90       	pop	r3
    3488:	2f 90       	pop	r2
    348a:	08 95       	ret

0000348c <strnlen_P>:
    348c:	fc 01       	movw	r30, r24
    348e:	05 90       	lpm	r0, Z+
    3490:	61 50       	subi	r22, 0x01	; 1
    3492:	70 40       	sbci	r23, 0x00	; 0
    3494:	01 10       	cpse	r0, r1
    3496:	d8 f7       	brcc	.-10     	; 0x348e <strnlen_P+0x2>
    3498:	80 95       	com	r24
    349a:	90 95       	com	r25
    349c:	8e 0f       	add	r24, r30
    349e:	9f 1f       	adc	r25, r31
    34a0:	08 95       	ret

000034a2 <strnlen>:
    34a2:	fc 01       	movw	r30, r24
    34a4:	61 50       	subi	r22, 0x01	; 1
    34a6:	70 40       	sbci	r23, 0x00	; 0
    34a8:	01 90       	ld	r0, Z+
    34aa:	01 10       	cpse	r0, r1
    34ac:	d8 f7       	brcc	.-10     	; 0x34a4 <strnlen+0x2>
    34ae:	80 95       	com	r24
    34b0:	90 95       	com	r25
    34b2:	8e 0f       	add	r24, r30
    34b4:	9f 1f       	adc	r25, r31
    34b6:	08 95       	ret

000034b8 <fputc>:
    34b8:	0f 93       	push	r16
    34ba:	1f 93       	push	r17
    34bc:	cf 93       	push	r28
    34be:	df 93       	push	r29
    34c0:	fb 01       	movw	r30, r22
    34c2:	23 81       	ldd	r18, Z+3	; 0x03
    34c4:	21 fd       	sbrc	r18, 1
    34c6:	03 c0       	rjmp	.+6      	; 0x34ce <fputc+0x16>
    34c8:	8f ef       	ldi	r24, 0xFF	; 255
    34ca:	9f ef       	ldi	r25, 0xFF	; 255
    34cc:	28 c0       	rjmp	.+80     	; 0x351e <fputc+0x66>
    34ce:	22 ff       	sbrs	r18, 2
    34d0:	16 c0       	rjmp	.+44     	; 0x34fe <fputc+0x46>
    34d2:	46 81       	ldd	r20, Z+6	; 0x06
    34d4:	57 81       	ldd	r21, Z+7	; 0x07
    34d6:	24 81       	ldd	r18, Z+4	; 0x04
    34d8:	35 81       	ldd	r19, Z+5	; 0x05
    34da:	42 17       	cp	r20, r18
    34dc:	53 07       	cpc	r21, r19
    34de:	44 f4       	brge	.+16     	; 0x34f0 <fputc+0x38>
    34e0:	a0 81       	ld	r26, Z
    34e2:	b1 81       	ldd	r27, Z+1	; 0x01
    34e4:	9d 01       	movw	r18, r26
    34e6:	2f 5f       	subi	r18, 0xFF	; 255
    34e8:	3f 4f       	sbci	r19, 0xFF	; 255
    34ea:	31 83       	std	Z+1, r19	; 0x01
    34ec:	20 83       	st	Z, r18
    34ee:	8c 93       	st	X, r24
    34f0:	26 81       	ldd	r18, Z+6	; 0x06
    34f2:	37 81       	ldd	r19, Z+7	; 0x07
    34f4:	2f 5f       	subi	r18, 0xFF	; 255
    34f6:	3f 4f       	sbci	r19, 0xFF	; 255
    34f8:	37 83       	std	Z+7, r19	; 0x07
    34fa:	26 83       	std	Z+6, r18	; 0x06
    34fc:	10 c0       	rjmp	.+32     	; 0x351e <fputc+0x66>
    34fe:	eb 01       	movw	r28, r22
    3500:	09 2f       	mov	r16, r25
    3502:	18 2f       	mov	r17, r24
    3504:	00 84       	ldd	r0, Z+8	; 0x08
    3506:	f1 85       	ldd	r31, Z+9	; 0x09
    3508:	e0 2d       	mov	r30, r0
    350a:	19 95       	eicall
    350c:	89 2b       	or	r24, r25
    350e:	e1 f6       	brne	.-72     	; 0x34c8 <fputc+0x10>
    3510:	8e 81       	ldd	r24, Y+6	; 0x06
    3512:	9f 81       	ldd	r25, Y+7	; 0x07
    3514:	01 96       	adiw	r24, 0x01	; 1
    3516:	9f 83       	std	Y+7, r25	; 0x07
    3518:	8e 83       	std	Y+6, r24	; 0x06
    351a:	81 2f       	mov	r24, r17
    351c:	90 2f       	mov	r25, r16
    351e:	df 91       	pop	r29
    3520:	cf 91       	pop	r28
    3522:	1f 91       	pop	r17
    3524:	0f 91       	pop	r16
    3526:	08 95       	ret

00003528 <__ultoa_invert>:
    3528:	fa 01       	movw	r30, r20
    352a:	aa 27       	eor	r26, r26
    352c:	28 30       	cpi	r18, 0x08	; 8
    352e:	51 f1       	breq	.+84     	; 0x3584 <__ultoa_invert+0x5c>
    3530:	20 31       	cpi	r18, 0x10	; 16
    3532:	81 f1       	breq	.+96     	; 0x3594 <__ultoa_invert+0x6c>
    3534:	e8 94       	clt
    3536:	6f 93       	push	r22
    3538:	6e 7f       	andi	r22, 0xFE	; 254
    353a:	6e 5f       	subi	r22, 0xFE	; 254
    353c:	7f 4f       	sbci	r23, 0xFF	; 255
    353e:	8f 4f       	sbci	r24, 0xFF	; 255
    3540:	9f 4f       	sbci	r25, 0xFF	; 255
    3542:	af 4f       	sbci	r26, 0xFF	; 255
    3544:	b1 e0       	ldi	r27, 0x01	; 1
    3546:	3e d0       	rcall	.+124    	; 0x35c4 <__ultoa_invert+0x9c>
    3548:	b4 e0       	ldi	r27, 0x04	; 4
    354a:	3c d0       	rcall	.+120    	; 0x35c4 <__ultoa_invert+0x9c>
    354c:	67 0f       	add	r22, r23
    354e:	78 1f       	adc	r23, r24
    3550:	89 1f       	adc	r24, r25
    3552:	9a 1f       	adc	r25, r26
    3554:	a1 1d       	adc	r26, r1
    3556:	68 0f       	add	r22, r24
    3558:	79 1f       	adc	r23, r25
    355a:	8a 1f       	adc	r24, r26
    355c:	91 1d       	adc	r25, r1
    355e:	a1 1d       	adc	r26, r1
    3560:	6a 0f       	add	r22, r26
    3562:	71 1d       	adc	r23, r1
    3564:	81 1d       	adc	r24, r1
    3566:	91 1d       	adc	r25, r1
    3568:	a1 1d       	adc	r26, r1
    356a:	20 d0       	rcall	.+64     	; 0x35ac <__ultoa_invert+0x84>
    356c:	09 f4       	brne	.+2      	; 0x3570 <__ultoa_invert+0x48>
    356e:	68 94       	set
    3570:	3f 91       	pop	r19
    3572:	2a e0       	ldi	r18, 0x0A	; 10
    3574:	26 9f       	mul	r18, r22
    3576:	11 24       	eor	r1, r1
    3578:	30 19       	sub	r19, r0
    357a:	30 5d       	subi	r19, 0xD0	; 208
    357c:	31 93       	st	Z+, r19
    357e:	de f6       	brtc	.-74     	; 0x3536 <__ultoa_invert+0xe>
    3580:	cf 01       	movw	r24, r30
    3582:	08 95       	ret
    3584:	46 2f       	mov	r20, r22
    3586:	47 70       	andi	r20, 0x07	; 7
    3588:	40 5d       	subi	r20, 0xD0	; 208
    358a:	41 93       	st	Z+, r20
    358c:	b3 e0       	ldi	r27, 0x03	; 3
    358e:	0f d0       	rcall	.+30     	; 0x35ae <__ultoa_invert+0x86>
    3590:	c9 f7       	brne	.-14     	; 0x3584 <__ultoa_invert+0x5c>
    3592:	f6 cf       	rjmp	.-20     	; 0x3580 <__ultoa_invert+0x58>
    3594:	46 2f       	mov	r20, r22
    3596:	4f 70       	andi	r20, 0x0F	; 15
    3598:	40 5d       	subi	r20, 0xD0	; 208
    359a:	4a 33       	cpi	r20, 0x3A	; 58
    359c:	18 f0       	brcs	.+6      	; 0x35a4 <__ultoa_invert+0x7c>
    359e:	49 5d       	subi	r20, 0xD9	; 217
    35a0:	31 fd       	sbrc	r19, 1
    35a2:	40 52       	subi	r20, 0x20	; 32
    35a4:	41 93       	st	Z+, r20
    35a6:	02 d0       	rcall	.+4      	; 0x35ac <__ultoa_invert+0x84>
    35a8:	a9 f7       	brne	.-22     	; 0x3594 <__ultoa_invert+0x6c>
    35aa:	ea cf       	rjmp	.-44     	; 0x3580 <__ultoa_invert+0x58>
    35ac:	b4 e0       	ldi	r27, 0x04	; 4
    35ae:	a6 95       	lsr	r26
    35b0:	97 95       	ror	r25
    35b2:	87 95       	ror	r24
    35b4:	77 95       	ror	r23
    35b6:	67 95       	ror	r22
    35b8:	ba 95       	dec	r27
    35ba:	c9 f7       	brne	.-14     	; 0x35ae <__ultoa_invert+0x86>
    35bc:	00 97       	sbiw	r24, 0x00	; 0
    35be:	61 05       	cpc	r22, r1
    35c0:	71 05       	cpc	r23, r1
    35c2:	08 95       	ret
    35c4:	9b 01       	movw	r18, r22
    35c6:	ac 01       	movw	r20, r24
    35c8:	0a 2e       	mov	r0, r26
    35ca:	06 94       	lsr	r0
    35cc:	57 95       	ror	r21
    35ce:	47 95       	ror	r20
    35d0:	37 95       	ror	r19
    35d2:	27 95       	ror	r18
    35d4:	ba 95       	dec	r27
    35d6:	c9 f7       	brne	.-14     	; 0x35ca <__ultoa_invert+0xa2>
    35d8:	62 0f       	add	r22, r18
    35da:	73 1f       	adc	r23, r19
    35dc:	84 1f       	adc	r24, r20
    35de:	95 1f       	adc	r25, r21
    35e0:	a0 1d       	adc	r26, r0
    35e2:	08 95       	ret

000035e4 <_exit>:
    35e4:	f8 94       	cli

000035e6 <__stop_program>:
    35e6:	ff cf       	rjmp	.-2      	; 0x35e6 <__stop_program>
