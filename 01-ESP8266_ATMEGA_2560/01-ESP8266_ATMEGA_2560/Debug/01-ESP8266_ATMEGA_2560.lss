
01-ESP8266_ATMEGA_2560.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000008d8  00800200  00003a02  00003a96  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003a02  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000e63  00800ad8  00800ad8  0000436e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000436e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000043cc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000408  00000000  00000000  0000440c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000705c  00000000  00000000  00004814  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a94  00000000  00000000  0000b870  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000292b  00000000  00000000  0000c304  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000115c  00000000  00000000  0000ec30  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000013dc  00000000  00000000  0000fd8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00006067  00000000  00000000  00011168  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000408  00000000  00000000  000171cf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	8c c0       	rjmp	.+280    	; 0x11a <__ctors_end>
       2:	00 00       	nop
       4:	ab c0       	rjmp	.+342    	; 0x15c <__bad_interrupt>
       6:	00 00       	nop
       8:	a9 c0       	rjmp	.+338    	; 0x15c <__bad_interrupt>
       a:	00 00       	nop
       c:	a7 c0       	rjmp	.+334    	; 0x15c <__bad_interrupt>
       e:	00 00       	nop
      10:	a5 c0       	rjmp	.+330    	; 0x15c <__bad_interrupt>
      12:	00 00       	nop
      14:	a3 c0       	rjmp	.+326    	; 0x15c <__bad_interrupt>
      16:	00 00       	nop
      18:	a1 c0       	rjmp	.+322    	; 0x15c <__bad_interrupt>
      1a:	00 00       	nop
      1c:	9f c0       	rjmp	.+318    	; 0x15c <__bad_interrupt>
      1e:	00 00       	nop
      20:	9d c0       	rjmp	.+314    	; 0x15c <__bad_interrupt>
      22:	00 00       	nop
      24:	9b c0       	rjmp	.+310    	; 0x15c <__bad_interrupt>
      26:	00 00       	nop
      28:	99 c0       	rjmp	.+306    	; 0x15c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	97 c0       	rjmp	.+302    	; 0x15c <__bad_interrupt>
      2e:	00 00       	nop
      30:	95 c0       	rjmp	.+298    	; 0x15c <__bad_interrupt>
      32:	00 00       	nop
      34:	93 c0       	rjmp	.+294    	; 0x15c <__bad_interrupt>
      36:	00 00       	nop
      38:	91 c0       	rjmp	.+290    	; 0x15c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	8f c0       	rjmp	.+286    	; 0x15c <__bad_interrupt>
      3e:	00 00       	nop
      40:	8d c0       	rjmp	.+282    	; 0x15c <__bad_interrupt>
      42:	00 00       	nop
      44:	8b c0       	rjmp	.+278    	; 0x15c <__bad_interrupt>
      46:	00 00       	nop
      48:	89 c0       	rjmp	.+274    	; 0x15c <__bad_interrupt>
      4a:	00 00       	nop
      4c:	87 c0       	rjmp	.+270    	; 0x15c <__bad_interrupt>
      4e:	00 00       	nop
      50:	85 c0       	rjmp	.+266    	; 0x15c <__bad_interrupt>
      52:	00 00       	nop
      54:	0c 94 13 16 	jmp	0x2c26	; 0x2c26 <__vector_21>
      58:	81 c0       	rjmp	.+258    	; 0x15c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	7f c0       	rjmp	.+254    	; 0x15c <__bad_interrupt>
      5e:	00 00       	nop
      60:	7d c0       	rjmp	.+250    	; 0x15c <__bad_interrupt>
      62:	00 00       	nop
      64:	0c 94 41 16 	jmp	0x2c82	; 0x2c82 <__vector_25>
      68:	79 c0       	rjmp	.+242    	; 0x15c <__bad_interrupt>
      6a:	00 00       	nop
      6c:	77 c0       	rjmp	.+238    	; 0x15c <__bad_interrupt>
      6e:	00 00       	nop
      70:	75 c0       	rjmp	.+234    	; 0x15c <__bad_interrupt>
      72:	00 00       	nop
      74:	73 c0       	rjmp	.+230    	; 0x15c <__bad_interrupt>
      76:	00 00       	nop
      78:	71 c0       	rjmp	.+226    	; 0x15c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	6f c0       	rjmp	.+222    	; 0x15c <__bad_interrupt>
      7e:	00 00       	nop
      80:	6d c0       	rjmp	.+218    	; 0x15c <__bad_interrupt>
      82:	00 00       	nop
      84:	6b c0       	rjmp	.+214    	; 0x15c <__bad_interrupt>
      86:	00 00       	nop
      88:	69 c0       	rjmp	.+210    	; 0x15c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	67 c0       	rjmp	.+206    	; 0x15c <__bad_interrupt>
      8e:	00 00       	nop
      90:	0c 94 c4 15 	jmp	0x2b88	; 0x2b88 <__vector_36>
      94:	63 c0       	rjmp	.+198    	; 0x15c <__bad_interrupt>
      96:	00 00       	nop
      98:	61 c0       	rjmp	.+194    	; 0x15c <__bad_interrupt>
      9a:	00 00       	nop
      9c:	5f c0       	rjmp	.+190    	; 0x15c <__bad_interrupt>
      9e:	00 00       	nop
      a0:	5d c0       	rjmp	.+186    	; 0x15c <__bad_interrupt>
      a2:	00 00       	nop
      a4:	5b c0       	rjmp	.+182    	; 0x15c <__bad_interrupt>
      a6:	00 00       	nop
      a8:	59 c0       	rjmp	.+178    	; 0x15c <__bad_interrupt>
      aa:	00 00       	nop
      ac:	57 c0       	rjmp	.+174    	; 0x15c <__bad_interrupt>
      ae:	00 00       	nop
      b0:	55 c0       	rjmp	.+170    	; 0x15c <__bad_interrupt>
      b2:	00 00       	nop
      b4:	53 c0       	rjmp	.+166    	; 0x15c <__bad_interrupt>
      b6:	00 00       	nop
      b8:	51 c0       	rjmp	.+162    	; 0x15c <__bad_interrupt>
      ba:	00 00       	nop
      bc:	4f c0       	rjmp	.+158    	; 0x15c <__bad_interrupt>
      be:	00 00       	nop
      c0:	4d c0       	rjmp	.+154    	; 0x15c <__bad_interrupt>
      c2:	00 00       	nop
      c4:	4b c0       	rjmp	.+150    	; 0x15c <__bad_interrupt>
      c6:	00 00       	nop
      c8:	49 c0       	rjmp	.+146    	; 0x15c <__bad_interrupt>
      ca:	00 00       	nop
      cc:	47 c0       	rjmp	.+142    	; 0x15c <__bad_interrupt>
      ce:	00 00       	nop
      d0:	45 c0       	rjmp	.+138    	; 0x15c <__bad_interrupt>
      d2:	00 00       	nop
      d4:	43 c0       	rjmp	.+134    	; 0x15c <__bad_interrupt>
      d6:	00 00       	nop
      d8:	41 c0       	rjmp	.+130    	; 0x15c <__bad_interrupt>
      da:	00 00       	nop
      dc:	3f c0       	rjmp	.+126    	; 0x15c <__bad_interrupt>
      de:	00 00       	nop
      e0:	3d c0       	rjmp	.+122    	; 0x15c <__bad_interrupt>
      e2:	00 00       	nop
      e4:	e8 09       	sbc	r30, r8
      e6:	03 0d       	add	r16, r3
      e8:	f8 09       	sbc	r31, r8
      ea:	03 0d       	add	r16, r3
      ec:	cd 0b       	sbc	r28, r29
      ee:	e3 0b       	sbc	r30, r19
      f0:	4a 0c       	add	r4, r10
      f2:	f1 0b       	sbc	r31, r17
      f4:	4a 0c       	add	r4, r10
      f6:	11 0c       	add	r1, r1
      f8:	4a 0c       	add	r4, r10
      fa:	c1 0a       	sbc	r12, r17
      fc:	03 0d       	add	r16, r3
      fe:	4a 0c       	add	r4, r10
     100:	5a 0c       	add	r5, r10
     102:	4a 0c       	add	r4, r10
     104:	4a 0c       	add	r4, r10
     106:	03 0d       	add	r16, r3
     108:	32 0a       	sbc	r3, r18
     10a:	4a 0c       	add	r4, r10
     10c:	4a 0c       	add	r4, r10
     10e:	94 0b       	sbc	r25, r20
     110:	b3 0b       	sbc	r27, r19
     112:	6d 0c       	add	r6, r13
     114:	8e 0c       	add	r8, r14
     116:	4a 0c       	add	r4, r10
     118:	ad 0c       	add	r10, r13

0000011a <__ctors_end>:
     11a:	11 24       	eor	r1, r1
     11c:	1f be       	out	0x3f, r1	; 63
     11e:	cf ef       	ldi	r28, 0xFF	; 255
     120:	d1 e2       	ldi	r29, 0x21	; 33
     122:	de bf       	out	0x3e, r29	; 62
     124:	cd bf       	out	0x3d, r28	; 61
     126:	00 e0       	ldi	r16, 0x00	; 0
     128:	0c bf       	out	0x3c, r16	; 60

0000012a <__do_copy_data>:
     12a:	1a e0       	ldi	r17, 0x0A	; 10
     12c:	a0 e0       	ldi	r26, 0x00	; 0
     12e:	b2 e0       	ldi	r27, 0x02	; 2
     130:	e2 e0       	ldi	r30, 0x02	; 2
     132:	fa e3       	ldi	r31, 0x3A	; 58
     134:	00 e0       	ldi	r16, 0x00	; 0
     136:	0b bf       	out	0x3b, r16	; 59
     138:	02 c0       	rjmp	.+4      	; 0x13e <__do_copy_data+0x14>
     13a:	07 90       	elpm	r0, Z+
     13c:	0d 92       	st	X+, r0
     13e:	a8 3d       	cpi	r26, 0xD8	; 216
     140:	b1 07       	cpc	r27, r17
     142:	d9 f7       	brne	.-10     	; 0x13a <__do_copy_data+0x10>

00000144 <__do_clear_bss>:
     144:	29 e1       	ldi	r18, 0x19	; 25
     146:	a8 ed       	ldi	r26, 0xD8	; 216
     148:	ba e0       	ldi	r27, 0x0A	; 10
     14a:	01 c0       	rjmp	.+2      	; 0x14e <.do_clear_bss_start>

0000014c <.do_clear_bss_loop>:
     14c:	1d 92       	st	X+, r1

0000014e <.do_clear_bss_start>:
     14e:	ab 33       	cpi	r26, 0x3B	; 59
     150:	b2 07       	cpc	r27, r18
     152:	e1 f7       	brne	.-8      	; 0x14c <.do_clear_bss_loop>
     154:	0e 94 89 16 	call	0x2d12	; 0x2d12 <main>
     158:	0c 94 ff 1c 	jmp	0x39fe	; 0x39fe <_exit>

0000015c <__bad_interrupt>:
     15c:	51 cf       	rjmp	.-350    	; 0x0 <__vectors>

0000015e <BUFFER_Init>:
	}
	
	/* Clear flags */
	Buffer->Flags = 0;
	Buffer->Size = 0;
}
     15e:	cf 93       	push	r28
     160:	df 93       	push	r29
     162:	ec 01       	movw	r28, r24
     164:	8c e0       	ldi	r24, 0x0C	; 12
     166:	fe 01       	movw	r30, r28
     168:	11 92       	st	Z+, r1
     16a:	8a 95       	dec	r24
     16c:	e9 f7       	brne	.-6      	; 0x168 <BUFFER_Init+0xa>
     16e:	79 83       	std	Y+1, r23	; 0x01
     170:	68 83       	st	Y, r22
     172:	5f 83       	std	Y+7, r21	; 0x07
     174:	4e 83       	std	Y+6, r20	; 0x06
     176:	8a e0       	ldi	r24, 0x0A	; 10
     178:	89 87       	std	Y+9, r24	; 0x09
     17a:	45 2b       	or	r20, r21
     17c:	71 f4       	brne	.+28     	; 0x19a <BUFFER_Init+0x3c>
     17e:	cb 01       	movw	r24, r22
     180:	0e 94 3f 18 	call	0x307e	; 0x307e <malloc>
     184:	9f 83       	std	Y+7, r25	; 0x07
     186:	8e 83       	std	Y+6, r24	; 0x06
     188:	89 2b       	or	r24, r25
     18a:	21 f4       	brne	.+8      	; 0x194 <BUFFER_Init+0x36>
     18c:	19 82       	std	Y+1, r1	; 0x01
     18e:	18 82       	st	Y, r1
     190:	81 e0       	ldi	r24, 0x01	; 1
     192:	07 c0       	rjmp	.+14     	; 0x1a2 <BUFFER_Init+0x44>
     194:	88 85       	ldd	r24, Y+8	; 0x08
     196:	82 60       	ori	r24, 0x02	; 2
     198:	88 87       	std	Y+8, r24	; 0x08
     19a:	88 85       	ldd	r24, Y+8	; 0x08
     19c:	81 60       	ori	r24, 0x01	; 1
     19e:	88 87       	std	Y+8, r24	; 0x08
     1a0:	80 e0       	ldi	r24, 0x00	; 0
     1a2:	df 91       	pop	r29
     1a4:	cf 91       	pop	r28
     1a6:	08 95       	ret

000001a8 <BUFFER_Write>:

uint16_t BUFFER_Write(BUFFER_t* Buffer, uint8_t* Data, uint16_t count) {
     1a8:	1f 93       	push	r17
     1aa:	cf 93       	push	r28
     1ac:	df 93       	push	r29
     1ae:	fc 01       	movw	r30, r24
	uint8_t i = 0;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
     1b0:	89 2b       	or	r24, r25
     1b2:	e1 f1       	breq	.+120    	; 0x22c <BUFFER_Write+0x84>
		return 0;
	}

	/* Check input pointer */
	if (Buffer->In >= Buffer->Size) {
     1b4:	22 81       	ldd	r18, Z+2	; 0x02
     1b6:	33 81       	ldd	r19, Z+3	; 0x03
     1b8:	80 81       	ld	r24, Z
     1ba:	91 81       	ldd	r25, Z+1	; 0x01
     1bc:	28 17       	cp	r18, r24
     1be:	39 07       	cpc	r19, r25
     1c0:	10 f0       	brcs	.+4      	; 0x1c6 <BUFFER_Write+0x1e>
		Buffer->In = 0;
     1c2:	13 82       	std	Z+3, r1	; 0x03
     1c4:	12 82       	std	Z+2, r1	; 0x02
     1c6:	16 2f       	mov	r17, r22
     1c8:	46 0f       	add	r20, r22
     1ca:	57 1f       	adc	r21, r23
	/* Clear flags */
	Buffer->Flags = 0;
	Buffer->Size = 0;
}

uint16_t BUFFER_Write(BUFFER_t* Buffer, uint8_t* Data, uint16_t count) {
     1cc:	a6 2f       	mov	r26, r22
     1ce:	b7 2f       	mov	r27, r23
     1d0:	26 c0       	rjmp	.+76     	; 0x21e <BUFFER_Write+0x76>
	
	/* Go through all elements */
	while (count--) {
		/* Check if buffer full */
		if (
			(Buffer->In == (Buffer->Out - 1)) ||
     1d2:	22 81       	ldd	r18, Z+2	; 0x02
     1d4:	33 81       	ldd	r19, Z+3	; 0x03
     1d6:	64 81       	ldd	r22, Z+4	; 0x04
     1d8:	75 81       	ldd	r23, Z+5	; 0x05
     1da:	eb 01       	movw	r28, r22
     1dc:	21 97       	sbiw	r28, 0x01	; 1
	}
	
	/* Go through all elements */
	while (count--) {
		/* Check if buffer full */
		if (
     1de:	2c 17       	cp	r18, r28
     1e0:	3d 07       	cpc	r19, r29
     1e2:	11 f1       	breq	.+68     	; 0x228 <BUFFER_Write+0x80>
			(Buffer->In == (Buffer->Out - 1)) ||
     1e4:	67 2b       	or	r22, r23
     1e6:	39 f4       	brne	.+14     	; 0x1f6 <BUFFER_Write+0x4e>
			(Buffer->Out == 0 && Buffer->In == (Buffer->Size - 1))
     1e8:	60 81       	ld	r22, Z
     1ea:	71 81       	ldd	r23, Z+1	; 0x01
     1ec:	61 50       	subi	r22, 0x01	; 1
     1ee:	71 09       	sbc	r23, r1
     1f0:	26 17       	cp	r18, r22
     1f2:	37 07       	cpc	r19, r23
     1f4:	c9 f0       	breq	.+50     	; 0x228 <BUFFER_Write+0x80>
		) {
			break;
		}
		
		/* Add to buffer */
		Buffer->Buffer[Buffer->In++] = *Data++;
     1f6:	66 81       	ldd	r22, Z+6	; 0x06
     1f8:	77 81       	ldd	r23, Z+7	; 0x07
     1fa:	c9 01       	movw	r24, r18
     1fc:	01 96       	adiw	r24, 0x01	; 1
     1fe:	93 83       	std	Z+3, r25	; 0x03
     200:	82 83       	std	Z+2, r24	; 0x02
     202:	8d 91       	ld	r24, X+
     204:	eb 01       	movw	r28, r22
     206:	c2 0f       	add	r28, r18
     208:	d3 1f       	adc	r29, r19
     20a:	88 83       	st	Y, r24
		
		/* Increase pointers */
		i++;
		
		/* Check input overflow */
		if (Buffer->In >= Buffer->Size) {
     20c:	22 81       	ldd	r18, Z+2	; 0x02
     20e:	33 81       	ldd	r19, Z+3	; 0x03
     210:	80 81       	ld	r24, Z
     212:	91 81       	ldd	r25, Z+1	; 0x01
     214:	28 17       	cp	r18, r24
     216:	39 07       	cpc	r19, r25
     218:	10 f0       	brcs	.+4      	; 0x21e <BUFFER_Write+0x76>
			Buffer->In = 0;
     21a:	13 82       	std	Z+3, r1	; 0x03
     21c:	12 82       	std	Z+2, r1	; 0x02
     21e:	8a 2f       	mov	r24, r26
     220:	81 1b       	sub	r24, r17
	if (Buffer->In >= Buffer->Size) {
		Buffer->In = 0;
	}
	
	/* Go through all elements */
	while (count--) {
     222:	a4 17       	cp	r26, r20
     224:	b5 07       	cpc	r27, r21
     226:	a9 f6       	brne	.-86     	; 0x1d2 <BUFFER_Write+0x2a>
			Buffer->In = 0;
		}
	}
	
	/* Return number of elements stored in memory */
	return i;
     228:	90 e0       	ldi	r25, 0x00	; 0
     22a:	02 c0       	rjmp	.+4      	; 0x230 <BUFFER_Write+0x88>
uint16_t BUFFER_Write(BUFFER_t* Buffer, uint8_t* Data, uint16_t count) {
	uint8_t i = 0;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
		return 0;
     22c:	80 e0       	ldi	r24, 0x00	; 0
     22e:	90 e0       	ldi	r25, 0x00	; 0
		}
	}
	
	/* Return number of elements stored in memory */
	return i;
}
     230:	df 91       	pop	r29
     232:	cf 91       	pop	r28
     234:	1f 91       	pop	r17
     236:	08 95       	ret

00000238 <BUFFER_Read>:

uint16_t BUFFER_Read(BUFFER_t* Buffer, uint8_t* Data, uint16_t count) {
     238:	cf 93       	push	r28
     23a:	df 93       	push	r29
     23c:	fc 01       	movw	r30, r24
	uint16_t i = 0;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
     23e:	89 2b       	or	r24, r25
     240:	89 f1       	breq	.+98     	; 0x2a4 <BUFFER_Read+0x6c>
		return 0;
	}

	/* Check output pointer */
	if (Buffer->Out >= Buffer->Size) {
     242:	24 81       	ldd	r18, Z+4	; 0x04
     244:	35 81       	ldd	r19, Z+5	; 0x05
     246:	80 81       	ld	r24, Z
     248:	91 81       	ldd	r25, Z+1	; 0x01
     24a:	28 17       	cp	r18, r24
     24c:	39 07       	cpc	r19, r25
     24e:	10 f0       	brcs	.+4      	; 0x254 <BUFFER_Read+0x1c>
		Buffer->Out = 0;
     250:	15 82       	std	Z+5, r1	; 0x05
     252:	14 82       	std	Z+4, r1	; 0x04
     254:	a6 2f       	mov	r26, r22
     256:	b7 2f       	mov	r27, r23
	
	/* Return number of elements stored in memory */
	return i;
}

uint16_t BUFFER_Read(BUFFER_t* Buffer, uint8_t* Data, uint16_t count) {
     258:	20 e0       	ldi	r18, 0x00	; 0
     25a:	30 e0       	ldi	r19, 0x00	; 0
     25c:	1d c0       	rjmp	.+58     	; 0x298 <BUFFER_Read+0x60>
	}
	
	/* Go through all elements */
	while (count--) {
		/* Check if pointers are same = buffer is empty */
		if (Buffer->Out == Buffer->In) {
     25e:	84 81       	ldd	r24, Z+4	; 0x04
     260:	95 81       	ldd	r25, Z+5	; 0x05
     262:	62 81       	ldd	r22, Z+2	; 0x02
     264:	73 81       	ldd	r23, Z+3	; 0x03
     266:	86 17       	cp	r24, r22
     268:	97 07       	cpc	r25, r23
     26a:	f9 f0       	breq	.+62     	; 0x2aa <BUFFER_Read+0x72>
			break;
		}
		
		/* Save to user buffer */
		*Data++ = Buffer->Buffer[Buffer->Out++];
     26c:	66 81       	ldd	r22, Z+6	; 0x06
     26e:	77 81       	ldd	r23, Z+7	; 0x07
     270:	ec 01       	movw	r28, r24
     272:	21 96       	adiw	r28, 0x01	; 1
     274:	d5 83       	std	Z+5, r29	; 0x05
     276:	c4 83       	std	Z+4, r28	; 0x04
     278:	eb 01       	movw	r28, r22
     27a:	c8 0f       	add	r28, r24
     27c:	d9 1f       	adc	r29, r25
     27e:	88 81       	ld	r24, Y
     280:	8d 93       	st	X+, r24
		
		/* Increase pointers */
		i++;
     282:	2f 5f       	subi	r18, 0xFF	; 255
     284:	3f 4f       	sbci	r19, 0xFF	; 255

		/* Check output overflow */
		if (Buffer->Out >= Buffer->Size) {
     286:	64 81       	ldd	r22, Z+4	; 0x04
     288:	75 81       	ldd	r23, Z+5	; 0x05
     28a:	80 81       	ld	r24, Z
     28c:	91 81       	ldd	r25, Z+1	; 0x01
     28e:	68 17       	cp	r22, r24
     290:	79 07       	cpc	r23, r25
     292:	10 f0       	brcs	.+4      	; 0x298 <BUFFER_Read+0x60>
			Buffer->Out = 0;
     294:	15 82       	std	Z+5, r1	; 0x05
     296:	14 82       	std	Z+4, r1	; 0x04
	if (Buffer->Out >= Buffer->Size) {
		Buffer->Out = 0;
	}
	
	/* Go through all elements */
	while (count--) {
     298:	24 17       	cp	r18, r20
     29a:	35 07       	cpc	r19, r21
     29c:	01 f7       	brne	.-64     	; 0x25e <BUFFER_Read+0x26>
     29e:	84 2f       	mov	r24, r20
     2a0:	95 2f       	mov	r25, r21
     2a2:	05 c0       	rjmp	.+10     	; 0x2ae <BUFFER_Read+0x76>
uint16_t BUFFER_Read(BUFFER_t* Buffer, uint8_t* Data, uint16_t count) {
	uint16_t i = 0;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
		return 0;
     2a4:	80 e0       	ldi	r24, 0x00	; 0
     2a6:	90 e0       	ldi	r25, 0x00	; 0
     2a8:	02 c0       	rjmp	.+4      	; 0x2ae <BUFFER_Read+0x76>
     2aa:	82 2f       	mov	r24, r18
     2ac:	93 2f       	mov	r25, r19
		}
	}
	
	/* Return number of elements read from buffer */
	return i;
}
     2ae:	df 91       	pop	r29
     2b0:	cf 91       	pop	r28
     2b2:	08 95       	ret

000002b4 <BUFFER_GetFree>:

uint16_t BUFFER_GetFree(BUFFER_t* Buffer) {
     2b4:	0f 93       	push	r16
     2b6:	1f 93       	push	r17
     2b8:	fc 01       	movw	r30, r24
	uint32_t size = 0, in, out;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
     2ba:	89 2b       	or	r24, r25
     2bc:	99 f1       	breq	.+102    	; 0x324 <BUFFER_GetFree+0x70>
		return 0;
	}
	
	/* Save values */
	in = Buffer->In;
     2be:	02 81       	ldd	r16, Z+2	; 0x02
     2c0:	13 81       	ldd	r17, Z+3	; 0x03
     2c2:	20 e0       	ldi	r18, 0x00	; 0
     2c4:	30 e0       	ldi	r19, 0x00	; 0
	out = Buffer->Out;
     2c6:	44 81       	ldd	r20, Z+4	; 0x04
     2c8:	55 81       	ldd	r21, Z+5	; 0x05
     2ca:	60 e0       	ldi	r22, 0x00	; 0
     2cc:	70 e0       	ldi	r23, 0x00	; 0
	
	/* Check if the same */
	if (in == out) {
     2ce:	04 17       	cp	r16, r20
     2d0:	15 07       	cpc	r17, r21
     2d2:	26 07       	cpc	r18, r22
     2d4:	37 07       	cpc	r19, r23
     2d6:	21 f4       	brne	.+8      	; 0x2e0 <BUFFER_GetFree+0x2c>
		size = Buffer->Size;
     2d8:	40 81       	ld	r20, Z
     2da:	51 81       	ldd	r21, Z+1	; 0x01
     2dc:	ca 01       	movw	r24, r20
     2de:	20 c0       	rjmp	.+64     	; 0x320 <BUFFER_GetFree+0x6c>
	}

	/* Check normal mode */
	if (out > in) {
     2e0:	04 17       	cp	r16, r20
     2e2:	15 07       	cpc	r17, r21
     2e4:	26 07       	cpc	r18, r22
     2e6:	37 07       	cpc	r19, r23
     2e8:	38 f4       	brcc	.+14     	; 0x2f8 <BUFFER_GetFree+0x44>
		size = out - in;
     2ea:	db 01       	movw	r26, r22
     2ec:	ca 01       	movw	r24, r20
     2ee:	80 1b       	sub	r24, r16
     2f0:	91 0b       	sbc	r25, r17
     2f2:	a2 0b       	sbc	r26, r18
     2f4:	b3 0b       	sbc	r27, r19
     2f6:	03 c0       	rjmp	.+6      	; 0x2fe <BUFFER_GetFree+0x4a>
	/* Return number of elements read from buffer */
	return i;
}

uint16_t BUFFER_GetFree(BUFFER_t* Buffer) {
	uint32_t size = 0, in, out;
     2f8:	80 e0       	ldi	r24, 0x00	; 0
     2fa:	90 e0       	ldi	r25, 0x00	; 0
     2fc:	dc 01       	movw	r26, r24
	if (out > in) {
		size = out - in;
	}
	
	/* Check if overflow mode */
	if (in > out) {
     2fe:	40 17       	cp	r20, r16
     300:	51 07       	cpc	r21, r17
     302:	62 07       	cpc	r22, r18
     304:	73 07       	cpc	r23, r19
     306:	60 f4       	brcc	.+24     	; 0x320 <BUFFER_GetFree+0x6c>
		size = Buffer->Size - (in - out);
     308:	80 81       	ld	r24, Z
     30a:	91 81       	ldd	r25, Z+1	; 0x01
     30c:	48 0f       	add	r20, r24
     30e:	59 1f       	adc	r21, r25
     310:	61 1d       	adc	r22, r1
     312:	71 1d       	adc	r23, r1
     314:	db 01       	movw	r26, r22
     316:	ca 01       	movw	r24, r20
     318:	80 1b       	sub	r24, r16
     31a:	91 0b       	sbc	r25, r17
     31c:	a2 0b       	sbc	r26, r18
     31e:	b3 0b       	sbc	r27, r19
	}
	
	/* Return free memory */
	return size - 1;
     320:	01 97       	sbiw	r24, 0x01	; 1
     322:	02 c0       	rjmp	.+4      	; 0x328 <BUFFER_GetFree+0x74>
uint16_t BUFFER_GetFree(BUFFER_t* Buffer) {
	uint32_t size = 0, in, out;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
		return 0;
     324:	80 e0       	ldi	r24, 0x00	; 0
     326:	90 e0       	ldi	r25, 0x00	; 0
		size = Buffer->Size - (in - out);
	}
	
	/* Return free memory */
	return size - 1;
}
     328:	1f 91       	pop	r17
     32a:	0f 91       	pop	r16
     32c:	08 95       	ret

0000032e <BUFFER_GetFull>:

uint16_t BUFFER_GetFull(BUFFER_t* Buffer) {
     32e:	0f 93       	push	r16
     330:	1f 93       	push	r17
     332:	fc 01       	movw	r30, r24
	uint32_t in, out, size;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
     334:	89 2b       	or	r24, r25
     336:	49 f1       	breq	.+82     	; 0x38a <BUFFER_GetFull+0x5c>
		return 0;
	}
	
	/* Save values */
	in = Buffer->In;
     338:	42 81       	ldd	r20, Z+2	; 0x02
     33a:	53 81       	ldd	r21, Z+3	; 0x03
     33c:	60 e0       	ldi	r22, 0x00	; 0
     33e:	70 e0       	ldi	r23, 0x00	; 0
	out = Buffer->Out;
     340:	04 81       	ldd	r16, Z+4	; 0x04
     342:	15 81       	ldd	r17, Z+5	; 0x05
     344:	20 e0       	ldi	r18, 0x00	; 0
     346:	30 e0       	ldi	r19, 0x00	; 0
		size = 0;
	}
	
	/* Check pointers and return values */
	/* Buffer is not in overflow mode */
	if (in > out) {
     348:	04 17       	cp	r16, r20
     34a:	15 07       	cpc	r17, r21
     34c:	26 07       	cpc	r18, r22
     34e:	37 07       	cpc	r19, r23
     350:	38 f4       	brcc	.+14     	; 0x360 <BUFFER_GetFull+0x32>
		size = in - out;
     352:	db 01       	movw	r26, r22
     354:	ca 01       	movw	r24, r20
     356:	80 1b       	sub	r24, r16
     358:	91 0b       	sbc	r25, r17
     35a:	a2 0b       	sbc	r26, r18
     35c:	b3 0b       	sbc	r27, r19
     35e:	03 c0       	rjmp	.+6      	; 0x366 <BUFFER_GetFull+0x38>
     360:	80 e0       	ldi	r24, 0x00	; 0
     362:	90 e0       	ldi	r25, 0x00	; 0
     364:	dc 01       	movw	r26, r24
	}
	
	/* Buffer is in overflow mode */
	if (out > in) {
     366:	40 17       	cp	r20, r16
     368:	51 07       	cpc	r21, r17
     36a:	62 07       	cpc	r22, r18
     36c:	73 07       	cpc	r23, r19
     36e:	78 f4       	brcc	.+30     	; 0x38e <BUFFER_GetFull+0x60>
		size = Buffer->Size - (out - in);
     370:	80 81       	ld	r24, Z
     372:	91 81       	ldd	r25, Z+1	; 0x01
     374:	48 0f       	add	r20, r24
     376:	59 1f       	adc	r21, r25
     378:	61 1d       	adc	r22, r1
     37a:	71 1d       	adc	r23, r1
     37c:	db 01       	movw	r26, r22
     37e:	ca 01       	movw	r24, r20
     380:	80 1b       	sub	r24, r16
     382:	91 0b       	sbc	r25, r17
     384:	a2 0b       	sbc	r26, r18
     386:	b3 0b       	sbc	r27, r19
	}
	
	/* Return number of elements in buffer */
	return size;
     388:	02 c0       	rjmp	.+4      	; 0x38e <BUFFER_GetFull+0x60>
uint16_t BUFFER_GetFull(BUFFER_t* Buffer) {
	uint32_t in, out, size;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
		return 0;
     38a:	80 e0       	ldi	r24, 0x00	; 0
     38c:	90 e0       	ldi	r25, 0x00	; 0
		size = Buffer->Size - (out - in);
	}
	
	/* Return number of elements in buffer */
	return size;
}
     38e:	1f 91       	pop	r17
     390:	0f 91       	pop	r16
     392:	08 95       	ret

00000394 <BUFFER_Reset>:

void BUFFER_Reset(BUFFER_t* Buffer) {
	/* Check buffer structure */
	if (Buffer == NULL) {
     394:	00 97       	sbiw	r24, 0x00	; 0
     396:	29 f0       	breq	.+10     	; 0x3a2 <BUFFER_Reset+0xe>
		return;
	}
	
	/* Reset values */
	Buffer->In = 0;
     398:	fc 01       	movw	r30, r24
     39a:	13 82       	std	Z+3, r1	; 0x03
     39c:	12 82       	std	Z+2, r1	; 0x02
	Buffer->Out = 0;
     39e:	15 82       	std	Z+5, r1	; 0x05
     3a0:	14 82       	std	Z+4, r1	; 0x04
     3a2:	08 95       	ret

000003a4 <BUFFER_FindElement>:
}

int16_t BUFFER_FindElement(BUFFER_t* Buffer, uint8_t Element) {
     3a4:	ef 92       	push	r14
     3a6:	ff 92       	push	r15
     3a8:	0f 93       	push	r16
     3aa:	1f 93       	push	r17
     3ac:	cf 93       	push	r28
	uint16_t Num, Out, retval = 0;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
     3ae:	00 97       	sbiw	r24, 0x00	; 0
     3b0:	49 f1       	breq	.+82     	; 0x404 <BUFFER_FindElement+0x60>
     3b2:	c6 2f       	mov	r28, r22
     3b4:	7c 01       	movw	r14, r24
		return -1;
	}
	
	/* Create temporary variables */
	Num = BUFFER_GetFull(Buffer);
     3b6:	bb df       	rcall	.-138    	; 0x32e <BUFFER_GetFull>
     3b8:	bc 01       	movw	r22, r24
	Out = Buffer->Out;
     3ba:	f7 01       	movw	r30, r14
     3bc:	24 81       	ldd	r18, Z+4	; 0x04
     3be:	35 81       	ldd	r19, Z+5	; 0x05
	
	/* Go through input elements */
	while (Num > 0) {
     3c0:	89 2b       	or	r24, r25
     3c2:	19 f1       	breq	.+70     	; 0x40a <BUFFER_FindElement+0x66>
		/* Check output overflow */
		if (Out >= Buffer->Size) {
     3c4:	00 81       	ld	r16, Z
     3c6:	11 81       	ldd	r17, Z+1	; 0x01
			Out = 0;
		}
		
		/* Check for element */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Element) {
     3c8:	a6 81       	ldd	r26, Z+6	; 0x06
     3ca:	b7 81       	ldd	r27, Z+7	; 0x07
     3cc:	40 e0       	ldi	r20, 0x00	; 0
     3ce:	50 e0       	ldi	r21, 0x00	; 0
	
	/* Go through input elements */
	while (Num > 0) {
		/* Check output overflow */
		if (Out >= Buffer->Size) {
			Out = 0;
     3d0:	f1 2c       	mov	r15, r1
     3d2:	80 e0       	ldi	r24, 0x00	; 0
	Out = Buffer->Out;
	
	/* Go through input elements */
	while (Num > 0) {
		/* Check output overflow */
		if (Out >= Buffer->Size) {
     3d4:	20 17       	cp	r18, r16
     3d6:	31 07       	cpc	r19, r17
     3d8:	10 f0       	brcs	.+4      	; 0x3de <BUFFER_FindElement+0x3a>
			Out = 0;
     3da:	2f 2d       	mov	r18, r15
     3dc:	38 2f       	mov	r19, r24
		}
		
		/* Check for element */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Element) {
     3de:	fd 01       	movw	r30, r26
     3e0:	e2 0f       	add	r30, r18
     3e2:	f3 1f       	adc	r31, r19
     3e4:	90 81       	ld	r25, Z
     3e6:	9c 13       	cpse	r25, r28
     3e8:	03 c0       	rjmp	.+6      	; 0x3f0 <BUFFER_FindElement+0x4c>
			/* Element found, return position in buffer */
			return retval;
     3ea:	84 2f       	mov	r24, r20
     3ec:	95 2f       	mov	r25, r21
     3ee:	0f c0       	rjmp	.+30     	; 0x40e <BUFFER_FindElement+0x6a>
		}
		
		/* Set new variables */
		Out++;
     3f0:	2f 5f       	subi	r18, 0xFF	; 255
     3f2:	3f 4f       	sbci	r19, 0xFF	; 255
		Num--;
		retval++;
     3f4:	4f 5f       	subi	r20, 0xFF	; 255
     3f6:	5f 4f       	sbci	r21, 0xFF	; 255
	/* Create temporary variables */
	Num = BUFFER_GetFull(Buffer);
	Out = Buffer->Out;
	
	/* Go through input elements */
	while (Num > 0) {
     3f8:	64 17       	cp	r22, r20
     3fa:	75 07       	cpc	r23, r21
     3fc:	59 f7       	brne	.-42     	; 0x3d4 <BUFFER_FindElement+0x30>
		Num--;
		retval++;
	}
	
	/* Element is not in buffer */
	return -1;
     3fe:	8f ef       	ldi	r24, 0xFF	; 255
     400:	9f ef       	ldi	r25, 0xFF	; 255
     402:	05 c0       	rjmp	.+10     	; 0x40e <BUFFER_FindElement+0x6a>
int16_t BUFFER_FindElement(BUFFER_t* Buffer, uint8_t Element) {
	uint16_t Num, Out, retval = 0;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
		return -1;
     404:	8f ef       	ldi	r24, 0xFF	; 255
     406:	9f ef       	ldi	r25, 0xFF	; 255
     408:	02 c0       	rjmp	.+4      	; 0x40e <BUFFER_FindElement+0x6a>
		Num--;
		retval++;
	}
	
	/* Element is not in buffer */
	return -1;
     40a:	8f ef       	ldi	r24, 0xFF	; 255
     40c:	9f ef       	ldi	r25, 0xFF	; 255
}
     40e:	cf 91       	pop	r28
     410:	1f 91       	pop	r17
     412:	0f 91       	pop	r16
     414:	ff 90       	pop	r15
     416:	ef 90       	pop	r14
     418:	08 95       	ret

0000041a <BUFFER_Find>:

int16_t BUFFER_Find(BUFFER_t* Buffer, uint8_t* Data, uint16_t Size) {
     41a:	2f 92       	push	r2
     41c:	3f 92       	push	r3
     41e:	4f 92       	push	r4
     420:	5f 92       	push	r5
     422:	6f 92       	push	r6
     424:	7f 92       	push	r7
     426:	8f 92       	push	r8
     428:	9f 92       	push	r9
     42a:	af 92       	push	r10
     42c:	bf 92       	push	r11
     42e:	cf 92       	push	r12
     430:	df 92       	push	r13
     432:	ef 92       	push	r14
     434:	ff 92       	push	r15
     436:	0f 93       	push	r16
     438:	1f 93       	push	r17
     43a:	cf 93       	push	r28
     43c:	df 93       	push	r29
	uint16_t Num, Out, i, retval = 0;
	uint8_t found = 0;

	/* Check buffer structure and number of elements in buffer */
	if (Buffer == NULL || (Num = BUFFER_GetFull(Buffer)) < Size) {
     43e:	00 97       	sbiw	r24, 0x00	; 0
     440:	09 f4       	brne	.+2      	; 0x444 <BUFFER_Find+0x2a>
     442:	60 c0       	rjmp	.+192    	; 0x504 <BUFFER_Find+0xea>
     444:	8a 01       	movw	r16, r20
     446:	b7 2e       	mov	r11, r23
     448:	a6 2e       	mov	r10, r22
     44a:	ec 01       	movw	r28, r24
     44c:	70 df       	rcall	.-288    	; 0x32e <BUFFER_GetFull>
     44e:	fc 01       	movw	r30, r24
     450:	80 17       	cp	r24, r16
     452:	91 07       	cpc	r25, r17
     454:	08 f4       	brcc	.+2      	; 0x458 <BUFFER_Find+0x3e>
     456:	59 c0       	rjmp	.+178    	; 0x50a <BUFFER_Find+0xf0>
		return -1;
	}

	/* Create temporary variables */
	Out = Buffer->Out;
     458:	2c 81       	ldd	r18, Y+4	; 0x04
     45a:	3d 81       	ldd	r19, Y+5	; 0x05

	/* Go through input elements in buffer */
	while (Num > 0) {
     45c:	89 2b       	or	r24, r25
     45e:	09 f4       	brne	.+2      	; 0x462 <BUFFER_Find+0x48>
     460:	57 c0       	rjmp	.+174    	; 0x510 <BUFFER_Find+0xf6>
		/* Check output overflow */
		if (Out >= Buffer->Size) {
     462:	e8 80       	ld	r14, Y
     464:	f9 80       	ldd	r15, Y+1	; 0x01
			Out = 0;
		}

		/* Check if current element in buffer matches first element in data array */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {
     466:	4e 81       	ldd	r20, Y+6	; 0x06
     468:	5f 81       	ldd	r21, Y+7	; 0x07
     46a:	ca 2c       	mov	r12, r10
     46c:	db 2c       	mov	r13, r11
     46e:	d6 01       	movw	r26, r12
     470:	9d 90       	ld	r9, X+
     472:	6d 01       	movw	r12, r26
     474:	81 2c       	mov	r8, r1
     476:	80 e0       	ldi	r24, 0x00	; 0
     478:	90 e0       	ldi	r25, 0x00	; 0

	/* Go through input elements in buffer */
	while (Num > 0) {
		/* Check output overflow */
		if (Out >= Buffer->Size) {
			Out = 0;
     47a:	71 2c       	mov	r7, r1
     47c:	51 2c       	mov	r5, r1
		}

		/* Check if current element in buffer matches first element in data array */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {
			found = 1;
     47e:	33 24       	eor	r3, r3
     480:	33 94       	inc	r3
		/* We have found first element */
		if (found) {
			/* First character found */
			/* Check others */
			i = 1;
			while (i < Size) {
     482:	66 24       	eor	r6, r6
     484:	63 94       	inc	r6
     486:	41 2c       	mov	r4, r1
				/* Check output overflow */
				if (Out >= Buffer->Size) {
					Out = 0;
     488:	a7 2c       	mov	r10, r7
     48a:	b5 2c       	mov	r11, r5
	Out = Buffer->Out;

	/* Go through input elements in buffer */
	while (Num > 0) {
		/* Check output overflow */
		if (Out >= Buffer->Size) {
     48c:	2e 15       	cp	r18, r14
     48e:	3f 05       	cpc	r19, r15
     490:	10 f0       	brcs	.+4      	; 0x496 <BUFFER_Find+0x7c>
			Out = 0;
     492:	27 2d       	mov	r18, r7
     494:	35 2d       	mov	r19, r5
		}

		/* Check if current element in buffer matches first element in data array */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {
     496:	da 01       	movw	r26, r20
     498:	a2 0f       	add	r26, r18
     49a:	b3 1f       	adc	r27, r19
     49c:	6c 91       	ld	r22, X
     49e:	69 15       	cp	r22, r9
     4a0:	d1 f1       	breq	.+116    	; 0x516 <BUFFER_Find+0xfc>
			found = 1;
		}

		/* Set new variables */
		Out++;
     4a2:	2f 5f       	subi	r18, 0xFF	; 255
     4a4:	3f 4f       	sbci	r19, 0xFF	; 255
		Num--;
     4a6:	31 97       	sbiw	r30, 0x01	; 1
		retval++;
     4a8:	01 96       	adiw	r24, 0x01	; 1

		/* We have found first element */
		if (found) {
     4aa:	88 20       	and	r8, r8
     4ac:	31 f1       	breq	.+76     	; 0x4fa <BUFFER_Find+0xe0>
			/* First character found */
			/* Check others */
			i = 1;
			while (i < Size) {
     4ae:	02 30       	cpi	r16, 0x02	; 2
     4b0:	11 05       	cpc	r17, r1
     4b2:	e0 f0       	brcs	.+56     	; 0x4ec <BUFFER_Find+0xd2>
     4b4:	d6 01       	movw	r26, r12
     4b6:	66 2d       	mov	r22, r6
     4b8:	74 2d       	mov	r23, r4
				/* Check output overflow */
				if (Out >= Buffer->Size) {
     4ba:	2e 15       	cp	r18, r14
     4bc:	3f 05       	cpc	r19, r15
     4be:	10 f0       	brcs	.+4      	; 0x4c4 <BUFFER_Find+0xaa>
					Out = 0;
     4c0:	2a 2d       	mov	r18, r10
     4c2:	3b 2d       	mov	r19, r11
				}

				/* Check if current character in buffer matches character in string */
				if ((uint8_t)Buffer->Buffer[Out] != (uint8_t)Data[i]) {
     4c4:	2d 90       	ld	r2, X+
     4c6:	ea 01       	movw	r28, r20
     4c8:	c2 0f       	add	r28, r18
     4ca:	d3 1f       	adc	r29, r19
     4cc:	c8 81       	ld	r28, Y
     4ce:	c2 15       	cp	r28, r2
     4d0:	21 f0       	breq	.+8      	; 0x4da <BUFFER_Find+0xc0>
     4d2:	01 97       	sbiw	r24, 0x01	; 1
					retval += i - 1;
     4d4:	86 0f       	add	r24, r22
     4d6:	97 1f       	adc	r25, r23
					break;
     4d8:	0b c0       	rjmp	.+22     	; 0x4f0 <BUFFER_Find+0xd6>
				}

				/* Set new variables */
				Out++;
     4da:	2f 5f       	subi	r18, 0xFF	; 255
     4dc:	3f 4f       	sbci	r19, 0xFF	; 255
				Num--;
     4de:	31 97       	sbiw	r30, 0x01	; 1
				i++;
     4e0:	6f 5f       	subi	r22, 0xFF	; 255
     4e2:	7f 4f       	sbci	r23, 0xFF	; 255
		/* We have found first element */
		if (found) {
			/* First character found */
			/* Check others */
			i = 1;
			while (i < Size) {
     4e4:	60 17       	cp	r22, r16
     4e6:	71 07       	cpc	r23, r17
     4e8:	41 f7       	brne	.-48     	; 0x4ba <BUFFER_Find+0xa0>
     4ea:	05 c0       	rjmp	.+10     	; 0x4f6 <BUFFER_Find+0xdc>
     4ec:	66 2d       	mov	r22, r6
     4ee:	74 2d       	mov	r23, r4
				Num--;
				i++;
			}

			/* We have found data sequence in buffer */
			if (i == Size) {
     4f0:	60 17       	cp	r22, r16
     4f2:	71 07       	cpc	r23, r17
     4f4:	11 f4       	brne	.+4      	; 0x4fa <BUFFER_Find+0xe0>
				return retval - 1;
     4f6:	01 97       	sbiw	r24, 0x01	; 1
     4f8:	14 c0       	rjmp	.+40     	; 0x522 <BUFFER_Find+0x108>

	/* Create temporary variables */
	Out = Buffer->Out;

	/* Go through input elements in buffer */
	while (Num > 0) {
     4fa:	30 97       	sbiw	r30, 0x00	; 0
     4fc:	39 f6       	brne	.-114    	; 0x48c <BUFFER_Find+0x72>
			}
		}
	}

	/* Data sequence is not in buffer */
	return -1;
     4fe:	8f ef       	ldi	r24, 0xFF	; 255
     500:	9f ef       	ldi	r25, 0xFF	; 255
     502:	0f c0       	rjmp	.+30     	; 0x522 <BUFFER_Find+0x108>
	uint16_t Num, Out, i, retval = 0;
	uint8_t found = 0;

	/* Check buffer structure and number of elements in buffer */
	if (Buffer == NULL || (Num = BUFFER_GetFull(Buffer)) < Size) {
		return -1;
     504:	8f ef       	ldi	r24, 0xFF	; 255
     506:	9f ef       	ldi	r25, 0xFF	; 255
     508:	0c c0       	rjmp	.+24     	; 0x522 <BUFFER_Find+0x108>
     50a:	8f ef       	ldi	r24, 0xFF	; 255
     50c:	9f ef       	ldi	r25, 0xFF	; 255
     50e:	09 c0       	rjmp	.+18     	; 0x522 <BUFFER_Find+0x108>
			}
		}
	}

	/* Data sequence is not in buffer */
	return -1;
     510:	8f ef       	ldi	r24, 0xFF	; 255
     512:	9f ef       	ldi	r25, 0xFF	; 255
     514:	06 c0       	rjmp	.+12     	; 0x522 <BUFFER_Find+0x108>
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {
			found = 1;
		}

		/* Set new variables */
		Out++;
     516:	2f 5f       	subi	r18, 0xFF	; 255
     518:	3f 4f       	sbci	r19, 0xFF	; 255
		Num--;
     51a:	31 97       	sbiw	r30, 0x01	; 1
		retval++;
     51c:	01 96       	adiw	r24, 0x01	; 1
			Out = 0;
		}

		/* Check if current element in buffer matches first element in data array */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {
			found = 1;
     51e:	83 2c       	mov	r8, r3
     520:	c6 cf       	rjmp	.-116    	; 0x4ae <BUFFER_Find+0x94>
		}
	}

	/* Data sequence is not in buffer */
	return -1;
}
     522:	df 91       	pop	r29
     524:	cf 91       	pop	r28
     526:	1f 91       	pop	r17
     528:	0f 91       	pop	r16
     52a:	ff 90       	pop	r15
     52c:	ef 90       	pop	r14
     52e:	df 90       	pop	r13
     530:	cf 90       	pop	r12
     532:	bf 90       	pop	r11
     534:	af 90       	pop	r10
     536:	9f 90       	pop	r9
     538:	8f 90       	pop	r8
     53a:	7f 90       	pop	r7
     53c:	6f 90       	pop	r6
     53e:	5f 90       	pop	r5
     540:	4f 90       	pop	r4
     542:	3f 90       	pop	r3
     544:	2f 90       	pop	r2
     546:	08 95       	ret

00000548 <BUFFER_WriteString>:

uint16_t BUFFER_WriteString(BUFFER_t* Buffer, char* buff) {
	/* Write string to buffer */
	return BUFFER_Write(Buffer, (uint8_t *)buff, strlen(buff));
     548:	fb 01       	movw	r30, r22
     54a:	01 90       	ld	r0, Z+
     54c:	00 20       	and	r0, r0
     54e:	e9 f7       	brne	.-6      	; 0x54a <BUFFER_WriteString+0x2>
     550:	31 97       	sbiw	r30, 0x01	; 1
     552:	af 01       	movw	r20, r30
     554:	46 1b       	sub	r20, r22
     556:	57 0b       	sbc	r21, r23
     558:	27 ce       	rjmp	.-946    	; 0x1a8 <BUFFER_Write>
}
     55a:	08 95       	ret

0000055c <BUFFER_ReadString>:

uint16_t BUFFER_ReadString(BUFFER_t* Buffer, char* buff, uint16_t buffsize) {
     55c:	8f 92       	push	r8
     55e:	9f 92       	push	r9
     560:	af 92       	push	r10
     562:	bf 92       	push	r11
     564:	cf 92       	push	r12
     566:	df 92       	push	r13
     568:	ef 92       	push	r14
     56a:	ff 92       	push	r15
     56c:	0f 93       	push	r16
     56e:	1f 93       	push	r17
     570:	cf 93       	push	r28
     572:	df 93       	push	r29
     574:	1f 92       	push	r1
     576:	cd b7       	in	r28, 0x3d	; 61
     578:	de b7       	in	r29, 0x3e	; 62
	uint16_t i = 0;
	uint8_t ch;
	uint16_t freeMem;
	
	/* Check value buffer */
	if (Buffer == NULL) {
     57a:	00 97       	sbiw	r24, 0x00	; 0
     57c:	09 f4       	brne	.+2      	; 0x580 <BUFFER_ReadString+0x24>
     57e:	43 c0       	rjmp	.+134    	; 0x606 <BUFFER_ReadString+0xaa>
     580:	4a 01       	movw	r8, r20
     582:	5b 01       	movw	r10, r22
     584:	7c 01       	movw	r14, r24
		return 0;
	}
	
	/* Get free */
	freeMem = BUFFER_GetFree(Buffer);
     586:	96 de       	rcall	.-724    	; 0x2b4 <BUFFER_GetFree>
	
	/* Check for any data on USART */
	if (
     588:	89 2b       	or	r24, r25
     58a:	09 f4       	brne	.+2      	; 0x58e <BUFFER_ReadString+0x32>
     58c:	3f c0       	rjmp	.+126    	; 0x60c <BUFFER_ReadString+0xb0>
		freeMem == 0 ||                                                /*!< Buffer empty */
		(
			BUFFER_FindElement(Buffer, Buffer->StringDelimiter) < 0 && /*!< String delimiter is not in buffer */
     58e:	f7 01       	movw	r30, r14
     590:	61 85       	ldd	r22, Z+9	; 0x09
     592:	c7 01       	movw	r24, r14
     594:	07 df       	rcall	.-498    	; 0x3a4 <BUFFER_FindElement>
	/* Get free */
	freeMem = BUFFER_GetFree(Buffer);
	
	/* Check for any data on USART */
	if (
		freeMem == 0 ||                                                /*!< Buffer empty */
     596:	99 23       	and	r25, r25
     598:	2c f4       	brge	.+10     	; 0x5a4 <BUFFER_ReadString+0x48>
		(
			BUFFER_FindElement(Buffer, Buffer->StringDelimiter) < 0 && /*!< String delimiter is not in buffer */
			freeMem != 0 &&                                            /*!< Buffer is not full */
			BUFFER_GetFull(Buffer) < buffsize                          /*!< User buffer size is larger than number of elements in buffer */
     59a:	c7 01       	movw	r24, r14
     59c:	c8 de       	rcall	.-624    	; 0x32e <BUFFER_GetFull>
	/* Check for any data on USART */
	if (
		freeMem == 0 ||                                                /*!< Buffer empty */
		(
			BUFFER_FindElement(Buffer, Buffer->StringDelimiter) < 0 && /*!< String delimiter is not in buffer */
			freeMem != 0 &&                                            /*!< Buffer is not full */
     59e:	88 15       	cp	r24, r8
     5a0:	99 05       	cpc	r25, r9
     5a2:	b8 f1       	brcs	.+110    	; 0x612 <BUFFER_ReadString+0xb6>
		/* Return 0 */
		return 0;
	}
	
	/* If available buffer size is more than 0 characters */
	while (i < (buffsize - 1)) {
     5a4:	f1 e0       	ldi	r31, 0x01	; 1
     5a6:	8f 1a       	sub	r8, r31
     5a8:	91 08       	sbc	r9, r1
     5aa:	d9 f0       	breq	.+54     	; 0x5e2 <BUFFER_ReadString+0x86>
     5ac:	65 01       	movw	r12, r10
     5ae:	00 e0       	ldi	r16, 0x00	; 0
     5b0:	10 e0       	ldi	r17, 0x00	; 0
		/* We have available data */
		BUFFER_Read(Buffer, &ch, 1);
     5b2:	41 e0       	ldi	r20, 0x01	; 1
     5b4:	50 e0       	ldi	r21, 0x00	; 0
     5b6:	be 01       	movw	r22, r28
     5b8:	6f 5f       	subi	r22, 0xFF	; 255
     5ba:	7f 4f       	sbci	r23, 0xFF	; 255
     5bc:	c7 01       	movw	r24, r14
     5be:	3c de       	rcall	.-904    	; 0x238 <BUFFER_Read>
		
		/* Save character */
		buff[i] = (char)ch;
     5c0:	89 81       	ldd	r24, Y+1	; 0x01
     5c2:	f6 01       	movw	r30, r12
     5c4:	81 93       	st	Z+, r24
     5c6:	6f 01       	movw	r12, r30
		
		/* Check for end of string */
		if ((char)buff[i] == (char)Buffer->StringDelimiter) {
     5c8:	f7 01       	movw	r30, r14
     5ca:	91 85       	ldd	r25, Z+9	; 0x09
     5cc:	89 17       	cp	r24, r25
     5ce:	29 f0       	breq	.+10     	; 0x5da <BUFFER_ReadString+0x7e>
			/* Done */
			break;
		}
		
		/* Increase */
		i++;
     5d0:	0f 5f       	subi	r16, 0xFF	; 255
     5d2:	1f 4f       	sbci	r17, 0xFF	; 255
		/* Return 0 */
		return 0;
	}
	
	/* If available buffer size is more than 0 characters */
	while (i < (buffsize - 1)) {
     5d4:	08 15       	cp	r16, r8
     5d6:	19 05       	cpc	r17, r9
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <BUFFER_ReadString+0x56>
		/* Increase */
		i++;
	}
	
	/* Add zero to the end of string */
	if (i == (buffsize - 1)) {
     5da:	80 16       	cp	r8, r16
     5dc:	91 06       	cpc	r9, r17
     5de:	51 f4       	brne	.+20     	; 0x5f4 <BUFFER_ReadString+0x98>
     5e0:	02 c0       	rjmp	.+4      	; 0x5e6 <BUFFER_ReadString+0x8a>
		/* Return 0 */
		return 0;
	}
	
	/* If available buffer size is more than 0 characters */
	while (i < (buffsize - 1)) {
     5e2:	00 e0       	ldi	r16, 0x00	; 0
     5e4:	10 e0       	ldi	r17, 0x00	; 0
		i++;
	}
	
	/* Add zero to the end of string */
	if (i == (buffsize - 1)) {
		buff[i] = 0;
     5e6:	f5 01       	movw	r30, r10
     5e8:	e0 0f       	add	r30, r16
     5ea:	f1 1f       	adc	r31, r17
     5ec:	10 82       	st	Z, r1
     5ee:	80 2f       	mov	r24, r16
     5f0:	91 2f       	mov	r25, r17
     5f2:	11 c0       	rjmp	.+34     	; 0x616 <BUFFER_ReadString+0xba>
	} else {
		buff[++i] = 0;
     5f4:	0f 5f       	subi	r16, 0xFF	; 255
     5f6:	1f 4f       	sbci	r17, 0xFF	; 255
     5f8:	f5 01       	movw	r30, r10
     5fa:	e0 0f       	add	r30, r16
     5fc:	f1 1f       	adc	r31, r17
     5fe:	10 82       	st	Z, r1
     600:	80 2f       	mov	r24, r16
     602:	91 2f       	mov	r25, r17
     604:	08 c0       	rjmp	.+16     	; 0x616 <BUFFER_ReadString+0xba>
	uint8_t ch;
	uint16_t freeMem;
	
	/* Check value buffer */
	if (Buffer == NULL) {
		return 0;
     606:	80 e0       	ldi	r24, 0x00	; 0
     608:	90 e0       	ldi	r25, 0x00	; 0
     60a:	05 c0       	rjmp	.+10     	; 0x616 <BUFFER_ReadString+0xba>
			freeMem != 0 &&                                            /*!< Buffer is not full */
			BUFFER_GetFull(Buffer) < buffsize                          /*!< User buffer size is larger than number of elements in buffer */
		)
	) {
		/* Return 0 */
		return 0;
     60c:	80 e0       	ldi	r24, 0x00	; 0
     60e:	90 e0       	ldi	r25, 0x00	; 0
     610:	02 c0       	rjmp	.+4      	; 0x616 <BUFFER_ReadString+0xba>
     612:	80 e0       	ldi	r24, 0x00	; 0
     614:	90 e0       	ldi	r25, 0x00	; 0
		buff[++i] = 0;
	}

	/* Return number of characters in buffer */
	return i;
}
     616:	0f 90       	pop	r0
     618:	df 91       	pop	r29
     61a:	cf 91       	pop	r28
     61c:	1f 91       	pop	r17
     61e:	0f 91       	pop	r16
     620:	ff 90       	pop	r15
     622:	ef 90       	pop	r14
     624:	df 90       	pop	r13
     626:	cf 90       	pop	r12
     628:	bf 90       	pop	r11
     62a:	af 90       	pop	r10
     62c:	9f 90       	pop	r9
     62e:	8f 90       	pop	r8
     630:	08 95       	ret

00000632 <ParseNumber>:
	/* Send command */
	SendCommand(ESP8266, ESP8266_COMMAND_CWSAP, NULL, "AT+CWSAP");
	
	/* Return status */
	return ESP8266_Update(ESP8266);
}
     632:	cf 92       	push	r12
     634:	df 92       	push	r13
     636:	ef 92       	push	r14
     638:	ff 92       	push	r15
     63a:	0f 93       	push	r16
     63c:	1f 93       	push	r17
     63e:	fc 01       	movw	r30, r24
     640:	db 01       	movw	r26, r22
     642:	80 81       	ld	r24, Z
     644:	8d 32       	cpi	r24, 0x2D	; 45
     646:	19 f4       	brne	.+6      	; 0x64e <ParseNumber+0x1c>
     648:	31 96       	adiw	r30, 0x01	; 1
     64a:	91 e0       	ldi	r25, 0x01	; 1
     64c:	01 c0       	rjmp	.+2      	; 0x650 <ParseNumber+0x1e>
     64e:	90 e0       	ldi	r25, 0x00	; 0
     650:	00 81       	ld	r16, Z
     652:	80 ed       	ldi	r24, 0xD0	; 208
     654:	80 0f       	add	r24, r16
     656:	8a 30       	cpi	r24, 0x0A	; 10
     658:	48 f5       	brcc	.+82     	; 0x6ac <ParseNumber+0x7a>
     65a:	31 96       	adiw	r30, 0x01	; 1
     65c:	89 2f       	mov	r24, r25
     65e:	40 e0       	ldi	r20, 0x00	; 0
     660:	50 e0       	ldi	r21, 0x00	; 0
     662:	ba 01       	movw	r22, r20
     664:	44 0f       	add	r20, r20
     666:	55 1f       	adc	r21, r21
     668:	66 1f       	adc	r22, r22
     66a:	77 1f       	adc	r23, r23
     66c:	6a 01       	movw	r12, r20
     66e:	7b 01       	movw	r14, r22
     670:	cc 0c       	add	r12, r12
     672:	dd 1c       	adc	r13, r13
     674:	ee 1c       	adc	r14, r14
     676:	ff 1c       	adc	r15, r15
     678:	cc 0c       	add	r12, r12
     67a:	dd 1c       	adc	r13, r13
     67c:	ee 1c       	adc	r14, r14
     67e:	ff 1c       	adc	r15, r15
     680:	4c 0d       	add	r20, r12
     682:	5d 1d       	adc	r21, r13
     684:	6e 1d       	adc	r22, r14
     686:	7f 1d       	adc	r23, r15
     688:	10 e0       	ldi	r17, 0x00	; 0
     68a:	00 53       	subi	r16, 0x30	; 48
     68c:	11 09       	sbc	r17, r1
     68e:	01 2e       	mov	r0, r17
     690:	00 0c       	add	r0, r0
     692:	22 0b       	sbc	r18, r18
     694:	33 0b       	sbc	r19, r19
     696:	40 0f       	add	r20, r16
     698:	51 1f       	adc	r21, r17
     69a:	62 1f       	adc	r22, r18
     69c:	73 1f       	adc	r23, r19
     69e:	8f 5f       	subi	r24, 0xFF	; 255
     6a0:	01 91       	ld	r16, Z+
     6a2:	20 ed       	ldi	r18, 0xD0	; 208
     6a4:	20 0f       	add	r18, r16
     6a6:	2a 30       	cpi	r18, 0x0A	; 10
     6a8:	e8 f2       	brcs	.-70     	; 0x664 <ParseNumber+0x32>
     6aa:	04 c0       	rjmp	.+8      	; 0x6b4 <ParseNumber+0x82>
     6ac:	89 2f       	mov	r24, r25
     6ae:	40 e0       	ldi	r20, 0x00	; 0
     6b0:	50 e0       	ldi	r21, 0x00	; 0
     6b2:	ba 01       	movw	r22, r20
     6b4:	10 97       	sbiw	r26, 0x00	; 0
     6b6:	09 f0       	breq	.+2      	; 0x6ba <ParseNumber+0x88>
     6b8:	8c 93       	st	X, r24
     6ba:	99 23       	and	r25, r25
     6bc:	51 f0       	breq	.+20     	; 0x6d2 <ParseNumber+0xa0>
     6be:	8a 01       	movw	r16, r20
     6c0:	9b 01       	movw	r18, r22
     6c2:	66 27       	eor	r22, r22
     6c4:	77 27       	eor	r23, r23
     6c6:	cb 01       	movw	r24, r22
     6c8:	60 1b       	sub	r22, r16
     6ca:	71 0b       	sbc	r23, r17
     6cc:	82 0b       	sbc	r24, r18
     6ce:	93 0b       	sbc	r25, r19
     6d0:	02 c0       	rjmp	.+4      	; 0x6d6 <ParseNumber+0xa4>
     6d2:	cb 01       	movw	r24, r22
     6d4:	ba 01       	movw	r22, r20
     6d6:	1f 91       	pop	r17
     6d8:	0f 91       	pop	r16
     6da:	ff 90       	pop	r15
     6dc:	ef 90       	pop	r14
     6de:	df 90       	pop	r13
     6e0:	cf 90       	pop	r12
     6e2:	08 95       	ret

000006e4 <EscapeStringAndSend>:
     6e4:	ef 92       	push	r14
     6e6:	ff 92       	push	r15
     6e8:	0f 93       	push	r16
     6ea:	1f 93       	push	r17
     6ec:	cf 93       	push	r28
     6ee:	df 93       	push	r29
     6f0:	1f 92       	push	r1
     6f2:	cd b7       	in	r28, 0x3d	; 61
     6f4:	de b7       	in	r29, 0x3e	; 62
     6f6:	8c 01       	movw	r16, r24
     6f8:	8c e5       	ldi	r24, 0x5C	; 92
     6fa:	89 83       	std	Y+1, r24	; 0x01
     6fc:	f8 01       	movw	r30, r16
     6fe:	90 81       	ld	r25, Z
     700:	99 23       	and	r25, r25
     702:	d9 f0       	breq	.+54     	; 0x73a <EscapeStringAndSend+0x56>
     704:	01 c0       	rjmp	.+2      	; 0x708 <EscapeStringAndSend+0x24>
     706:	87 01       	movw	r16, r14
     708:	9c 32       	cpi	r25, 0x2C	; 44
     70a:	21 f0       	breq	.+8      	; 0x714 <EscapeStringAndSend+0x30>
     70c:	92 32       	cpi	r25, 0x22	; 34
     70e:	11 f0       	breq	.+4      	; 0x714 <EscapeStringAndSend+0x30>
     710:	9c 35       	cpi	r25, 0x5C	; 92
     712:	31 f4       	brne	.+12     	; 0x720 <EscapeStringAndSend+0x3c>
     714:	61 e0       	ldi	r22, 0x01	; 1
     716:	70 e0       	ldi	r23, 0x00	; 0
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	0e 94 a8 15 	call	0x2b50	; 0x2b50 <ESP8266_LL_USARTSend>
     720:	78 01       	movw	r14, r16
     722:	ff ef       	ldi	r31, 0xFF	; 255
     724:	ef 1a       	sub	r14, r31
     726:	ff 0a       	sbc	r15, r31
     728:	61 e0       	ldi	r22, 0x01	; 1
     72a:	70 e0       	ldi	r23, 0x00	; 0
     72c:	c8 01       	movw	r24, r16
     72e:	0e 94 a8 15 	call	0x2b50	; 0x2b50 <ESP8266_LL_USARTSend>
     732:	f8 01       	movw	r30, r16
     734:	91 81       	ldd	r25, Z+1	; 0x01
     736:	91 11       	cpse	r25, r1
     738:	e6 cf       	rjmp	.-52     	; 0x706 <EscapeStringAndSend+0x22>
     73a:	0f 90       	pop	r0
     73c:	df 91       	pop	r29
     73e:	cf 91       	pop	r28
     740:	1f 91       	pop	r17
     742:	0f 91       	pop	r16
     744:	ff 90       	pop	r15
     746:	ef 90       	pop	r14
     748:	08 95       	ret

0000074a <ParseIP>:
     74a:	af 92       	push	r10
     74c:	bf 92       	push	r11
     74e:	cf 92       	push	r12
     750:	df 92       	push	r13
     752:	ef 92       	push	r14
     754:	ff 92       	push	r15
     756:	1f 93       	push	r17
     758:	cf 93       	push	r28
     75a:	df 93       	push	r29
     75c:	cd b7       	in	r28, 0x3d	; 61
     75e:	de b7       	in	r29, 0x3e	; 62
     760:	61 97       	sbiw	r28, 0x11	; 17
     762:	0f b6       	in	r0, 0x3f	; 63
     764:	f8 94       	cli
     766:	de bf       	out	0x3e, r29	; 62
     768:	0f be       	out	0x3f, r0	; 63
     76a:	cd bf       	out	0x3d, r28	; 61
     76c:	fc 01       	movw	r30, r24
     76e:	6b 01       	movw	r12, r22
     770:	5a 01       	movw	r10, r20
     772:	9f e0       	ldi	r25, 0x0F	; 15
     774:	de 01       	movw	r26, r28
     776:	12 96       	adiw	r26, 0x02	; 2
     778:	01 90       	ld	r0, Z+
     77a:	0d 92       	st	X+, r0
     77c:	9a 95       	dec	r25
     77e:	e1 f7       	brne	.-8      	; 0x778 <ParseIP+0x2e>
     780:	19 8a       	std	Y+17, r1	; 0x11
     782:	64 e1       	ldi	r22, 0x14	; 20
     784:	72 e0       	ldi	r23, 0x02	; 2
     786:	ce 01       	movw	r24, r28
     788:	02 96       	adiw	r24, 0x02	; 2
     78a:	0e 94 6c 19 	call	0x32d8	; 0x32d8 <strtok>
     78e:	00 97       	sbiw	r24, 0x00	; 0
     790:	e9 f4       	brne	.+58     	; 0x7cc <ParseIP+0x82>
     792:	10 e0       	ldi	r17, 0x00	; 0
     794:	15 c0       	rjmp	.+42     	; 0x7c0 <ParseIP+0x76>
     796:	be 01       	movw	r22, r28
     798:	6f 5f       	subi	r22, 0xFF	; 255
     79a:	7f 4f       	sbci	r23, 0xFF	; 255
     79c:	4a df       	rcall	.-364    	; 0x632 <ParseNumber>
     79e:	f7 01       	movw	r30, r14
     7a0:	61 93       	st	Z+, r22
     7a2:	7f 01       	movw	r14, r30
     7a4:	89 81       	ldd	r24, Y+1	; 0x01
     7a6:	18 0f       	add	r17, r24
     7a8:	ec 15       	cp	r30, r12
     7aa:	fd 05       	cpc	r31, r13
     7ac:	49 f0       	breq	.+18     	; 0x7c0 <ParseIP+0x76>
     7ae:	1f 5f       	subi	r17, 0xFF	; 255
     7b0:	64 e1       	ldi	r22, 0x14	; 20
     7b2:	72 e0       	ldi	r23, 0x02	; 2
     7b4:	80 e0       	ldi	r24, 0x00	; 0
     7b6:	90 e0       	ldi	r25, 0x00	; 0
     7b8:	0e 94 6c 19 	call	0x32d8	; 0x32d8 <strtok>
     7bc:	00 97       	sbiw	r24, 0x00	; 0
     7be:	59 f7       	brne	.-42     	; 0x796 <ParseIP+0x4c>
     7c0:	a1 14       	cp	r10, r1
     7c2:	b1 04       	cpc	r11, r1
     7c4:	79 f0       	breq	.+30     	; 0x7e4 <ParseIP+0x9a>
     7c6:	f5 01       	movw	r30, r10
     7c8:	10 83       	st	Z, r17
     7ca:	0c c0       	rjmp	.+24     	; 0x7e4 <ParseIP+0x9a>
     7cc:	be 01       	movw	r22, r28
     7ce:	6f 5f       	subi	r22, 0xFF	; 255
     7d0:	7f 4f       	sbci	r23, 0xFF	; 255
     7d2:	2f df       	rcall	.-418    	; 0x632 <ParseNumber>
     7d4:	f6 01       	movw	r30, r12
     7d6:	61 93       	st	Z+, r22
     7d8:	7f 01       	movw	r14, r30
     7da:	19 81       	ldd	r17, Y+1	; 0x01
     7dc:	f4 e0       	ldi	r31, 0x04	; 4
     7de:	cf 0e       	add	r12, r31
     7e0:	d1 1c       	adc	r13, r1
     7e2:	e5 cf       	rjmp	.-54     	; 0x7ae <ParseIP+0x64>
     7e4:	61 96       	adiw	r28, 0x11	; 17
     7e6:	0f b6       	in	r0, 0x3f	; 63
     7e8:	f8 94       	cli
     7ea:	de bf       	out	0x3e, r29	; 62
     7ec:	0f be       	out	0x3f, r0	; 63
     7ee:	cd bf       	out	0x3d, r28	; 61
     7f0:	df 91       	pop	r29
     7f2:	cf 91       	pop	r28
     7f4:	1f 91       	pop	r17
     7f6:	ff 90       	pop	r15
     7f8:	ef 90       	pop	r14
     7fa:	df 90       	pop	r13
     7fc:	cf 90       	pop	r12
     7fe:	bf 90       	pop	r11
     800:	af 90       	pop	r10
     802:	08 95       	ret

00000804 <ParseCIPSTA>:
     804:	0f 93       	push	r16
     806:	1f 93       	push	r17
     808:	cf 93       	push	r28
     80a:	df 93       	push	r29
     80c:	ec 01       	movw	r28, r24
     80e:	8b 01       	movw	r16, r22
     810:	4e e0       	ldi	r20, 0x0E	; 14
     812:	50 e0       	ldi	r21, 0x00	; 0
     814:	86 e1       	ldi	r24, 0x16	; 22
     816:	92 e0       	ldi	r25, 0x02	; 2
     818:	0e 94 95 19 	call	0x332a	; 0x332a <strncmp>
     81c:	89 2b       	or	r24, r25
     81e:	09 f4       	brne	.+2      	; 0x822 <ParseCIPSTA+0x1e>
     820:	6f c0       	rjmp	.+222    	; 0x900 <ParseCIPSTA+0xfc>
     822:	43 e1       	ldi	r20, 0x13	; 19
     824:	50 e0       	ldi	r21, 0x00	; 0
     826:	b8 01       	movw	r22, r16
     828:	85 e2       	ldi	r24, 0x25	; 37
     82a:	92 e0       	ldi	r25, 0x02	; 2
     82c:	0e 94 95 19 	call	0x332a	; 0x332a <strncmp>
     830:	89 2b       	or	r24, r25
     832:	09 f4       	brne	.+2      	; 0x836 <ParseCIPSTA+0x32>
     834:	79 c0       	rjmp	.+242    	; 0x928 <ParseCIPSTA+0x124>
     836:	43 e1       	ldi	r20, 0x13	; 19
     838:	50 e0       	ldi	r21, 0x00	; 0
     83a:	b8 01       	movw	r22, r16
     83c:	89 e3       	ldi	r24, 0x39	; 57
     83e:	92 e0       	ldi	r25, 0x02	; 2
     840:	0e 94 95 19 	call	0x332a	; 0x332a <strncmp>
     844:	89 2b       	or	r24, r25
     846:	09 f4       	brne	.+2      	; 0x84a <ParseCIPSTA+0x46>
     848:	82 c0       	rjmp	.+260    	; 0x94e <ParseCIPSTA+0x14a>
     84a:	4a e0       	ldi	r20, 0x0A	; 10
     84c:	50 e0       	ldi	r21, 0x00	; 0
     84e:	b8 01       	movw	r22, r16
     850:	8d e4       	ldi	r24, 0x4D	; 77
     852:	92 e0       	ldi	r25, 0x02	; 2
     854:	0e 94 95 19 	call	0x332a	; 0x332a <strncmp>
     858:	89 2b       	or	r24, r25
     85a:	09 f4       	brne	.+2      	; 0x85e <ParseCIPSTA+0x5a>
     85c:	53 c0       	rjmp	.+166    	; 0x904 <ParseCIPSTA+0x100>
     85e:	4f e0       	ldi	r20, 0x0F	; 15
     860:	50 e0       	ldi	r21, 0x00	; 0
     862:	b8 01       	movw	r22, r16
     864:	88 e5       	ldi	r24, 0x58	; 88
     866:	92 e0       	ldi	r25, 0x02	; 2
     868:	0e 94 95 19 	call	0x332a	; 0x332a <strncmp>
     86c:	89 2b       	or	r24, r25
     86e:	09 f4       	brne	.+2      	; 0x872 <ParseCIPSTA+0x6e>
     870:	5d c0       	rjmp	.+186    	; 0x92c <ParseCIPSTA+0x128>
     872:	4f e0       	ldi	r20, 0x0F	; 15
     874:	50 e0       	ldi	r21, 0x00	; 0
     876:	b8 01       	movw	r22, r16
     878:	88 e6       	ldi	r24, 0x68	; 104
     87a:	92 e0       	ldi	r25, 0x02	; 2
     87c:	0e 94 95 19 	call	0x332a	; 0x332a <strncmp>
     880:	89 2b       	or	r24, r25
     882:	09 f4       	brne	.+2      	; 0x886 <ParseCIPSTA+0x82>
     884:	66 c0       	rjmp	.+204    	; 0x952 <ParseCIPSTA+0x14e>
     886:	4d e0       	ldi	r20, 0x0D	; 13
     888:	50 e0       	ldi	r21, 0x00	; 0
     88a:	b8 01       	movw	r22, r16
     88c:	88 e7       	ldi	r24, 0x78	; 120
     88e:	92 e0       	ldi	r25, 0x02	; 2
     890:	0e 94 95 19 	call	0x332a	; 0x332a <strncmp>
     894:	89 2b       	or	r24, r25
     896:	09 f4       	brne	.+2      	; 0x89a <ParseCIPSTA+0x96>
     898:	6d c0       	rjmp	.+218    	; 0x974 <ParseCIPSTA+0x170>
     89a:	42 e1       	ldi	r20, 0x12	; 18
     89c:	50 e0       	ldi	r21, 0x00	; 0
     89e:	b8 01       	movw	r22, r16
     8a0:	86 e8       	ldi	r24, 0x86	; 134
     8a2:	92 e0       	ldi	r25, 0x02	; 2
     8a4:	0e 94 95 19 	call	0x332a	; 0x332a <strncmp>
     8a8:	89 2b       	or	r24, r25
     8aa:	09 f4       	brne	.+2      	; 0x8ae <ParseCIPSTA+0xaa>
     8ac:	76 c0       	rjmp	.+236    	; 0x99a <ParseCIPSTA+0x196>
     8ae:	42 e1       	ldi	r20, 0x12	; 18
     8b0:	50 e0       	ldi	r21, 0x00	; 0
     8b2:	b8 01       	movw	r22, r16
     8b4:	89 e9       	ldi	r24, 0x99	; 153
     8b6:	92 e0       	ldi	r25, 0x02	; 2
     8b8:	0e 94 95 19 	call	0x332a	; 0x332a <strncmp>
     8bc:	89 2b       	or	r24, r25
     8be:	09 f4       	brne	.+2      	; 0x8c2 <ParseCIPSTA+0xbe>
     8c0:	7f c0       	rjmp	.+254    	; 0x9c0 <ParseCIPSTA+0x1bc>
     8c2:	49 e0       	ldi	r20, 0x09	; 9
     8c4:	50 e0       	ldi	r21, 0x00	; 0
     8c6:	b8 01       	movw	r22, r16
     8c8:	8c ea       	ldi	r24, 0xAC	; 172
     8ca:	92 e0       	ldi	r25, 0x02	; 2
     8cc:	0e 94 95 19 	call	0x332a	; 0x332a <strncmp>
     8d0:	89 2b       	or	r24, r25
     8d2:	09 f4       	brne	.+2      	; 0x8d6 <ParseCIPSTA+0xd2>
     8d4:	51 c0       	rjmp	.+162    	; 0x978 <ParseCIPSTA+0x174>
     8d6:	4e e0       	ldi	r20, 0x0E	; 14
     8d8:	50 e0       	ldi	r21, 0x00	; 0
     8da:	b8 01       	movw	r22, r16
     8dc:	86 eb       	ldi	r24, 0xB6	; 182
     8de:	92 e0       	ldi	r25, 0x02	; 2
     8e0:	0e 94 95 19 	call	0x332a	; 0x332a <strncmp>
     8e4:	89 2b       	or	r24, r25
     8e6:	09 f4       	brne	.+2      	; 0x8ea <ParseCIPSTA+0xe6>
     8e8:	5a c0       	rjmp	.+180    	; 0x99e <ParseCIPSTA+0x19a>
     8ea:	4e e0       	ldi	r20, 0x0E	; 14
     8ec:	50 e0       	ldi	r21, 0x00	; 0
     8ee:	b8 01       	movw	r22, r16
     8f0:	85 ec       	ldi	r24, 0xC5	; 197
     8f2:	92 e0       	ldi	r25, 0x02	; 2
     8f4:	0e 94 95 19 	call	0x332a	; 0x332a <strncmp>
     8f8:	89 2b       	or	r24, r25
     8fa:	09 f4       	brne	.+2      	; 0x8fe <ParseCIPSTA+0xfa>
     8fc:	63 c0       	rjmp	.+198    	; 0x9c4 <ParseCIPSTA+0x1c0>
     8fe:	72 c0       	rjmp	.+228    	; 0x9e4 <ParseCIPSTA+0x1e0>
     900:	2e e0       	ldi	r18, 0x0E	; 14
     902:	01 c0       	rjmp	.+2      	; 0x906 <ParseCIPSTA+0x102>
     904:	2a e0       	ldi	r18, 0x0A	; 10
     906:	be 01       	movw	r22, r28
     908:	69 55       	subi	r22, 0x59	; 89
     90a:	7e 4f       	sbci	r23, 0xFE	; 254
     90c:	30 e0       	ldi	r19, 0x00	; 0
     90e:	c9 01       	movw	r24, r18
     910:	02 96       	adiw	r24, 0x02	; 2
     912:	40 e0       	ldi	r20, 0x00	; 0
     914:	50 e0       	ldi	r21, 0x00	; 0
     916:	80 0f       	add	r24, r16
     918:	91 1f       	adc	r25, r17
     91a:	17 df       	rcall	.-466    	; 0x74a <ParseIP>
     91c:	ca 57       	subi	r28, 0x7A	; 122
     91e:	dd 4f       	sbci	r29, 0xFD	; 253
     920:	88 81       	ld	r24, Y
     922:	81 60       	ori	r24, 0x01	; 1
     924:	88 83       	st	Y, r24
     926:	5e c0       	rjmp	.+188    	; 0x9e4 <ParseCIPSTA+0x1e0>
     928:	83 e1       	ldi	r24, 0x13	; 19
     92a:	01 c0       	rjmp	.+2      	; 0x92e <ParseCIPSTA+0x12a>
     92c:	8f e0       	ldi	r24, 0x0F	; 15
     92e:	be 01       	movw	r22, r28
     930:	61 55       	subi	r22, 0x51	; 81
     932:	7e 4f       	sbci	r23, 0xFE	; 254
     934:	90 e0       	ldi	r25, 0x00	; 0
     936:	02 96       	adiw	r24, 0x02	; 2
     938:	40 e0       	ldi	r20, 0x00	; 0
     93a:	50 e0       	ldi	r21, 0x00	; 0
     93c:	80 0f       	add	r24, r16
     93e:	91 1f       	adc	r25, r17
     940:	04 df       	rcall	.-504    	; 0x74a <ParseIP>
     942:	ca 57       	subi	r28, 0x7A	; 122
     944:	dd 4f       	sbci	r29, 0xFD	; 253
     946:	88 81       	ld	r24, Y
     948:	82 60       	ori	r24, 0x02	; 2
     94a:	88 83       	st	Y, r24
     94c:	4b c0       	rjmp	.+150    	; 0x9e4 <ParseCIPSTA+0x1e0>
     94e:	83 e1       	ldi	r24, 0x13	; 19
     950:	01 c0       	rjmp	.+2      	; 0x954 <ParseCIPSTA+0x150>
     952:	8f e0       	ldi	r24, 0x0F	; 15
     954:	be 01       	movw	r22, r28
     956:	65 55       	subi	r22, 0x55	; 85
     958:	7e 4f       	sbci	r23, 0xFE	; 254
     95a:	90 e0       	ldi	r25, 0x00	; 0
     95c:	02 96       	adiw	r24, 0x02	; 2
     95e:	40 e0       	ldi	r20, 0x00	; 0
     960:	50 e0       	ldi	r21, 0x00	; 0
     962:	80 0f       	add	r24, r16
     964:	91 1f       	adc	r25, r17
     966:	f1 de       	rcall	.-542    	; 0x74a <ParseIP>
     968:	ca 57       	subi	r28, 0x7A	; 122
     96a:	dd 4f       	sbci	r29, 0xFD	; 253
     96c:	88 81       	ld	r24, Y
     96e:	84 60       	ori	r24, 0x04	; 4
     970:	88 83       	st	Y, r24
     972:	38 c0       	rjmp	.+112    	; 0x9e4 <ParseCIPSTA+0x1e0>
     974:	8d e0       	ldi	r24, 0x0D	; 13
     976:	01 c0       	rjmp	.+2      	; 0x97a <ParseCIPSTA+0x176>
     978:	89 e0       	ldi	r24, 0x09	; 9
     97a:	be 01       	movw	r22, r28
     97c:	67 54       	subi	r22, 0x47	; 71
     97e:	7e 4f       	sbci	r23, 0xFE	; 254
     980:	90 e0       	ldi	r25, 0x00	; 0
     982:	02 96       	adiw	r24, 0x02	; 2
     984:	40 e0       	ldi	r20, 0x00	; 0
     986:	50 e0       	ldi	r21, 0x00	; 0
     988:	80 0f       	add	r24, r16
     98a:	91 1f       	adc	r25, r17
     98c:	de de       	rcall	.-580    	; 0x74a <ParseIP>
     98e:	ca 57       	subi	r28, 0x7A	; 122
     990:	dd 4f       	sbci	r29, 0xFD	; 253
     992:	88 81       	ld	r24, Y
     994:	80 61       	ori	r24, 0x10	; 16
     996:	88 83       	st	Y, r24
     998:	25 c0       	rjmp	.+74     	; 0x9e4 <ParseCIPSTA+0x1e0>
     99a:	82 e1       	ldi	r24, 0x12	; 18
     99c:	01 c0       	rjmp	.+2      	; 0x9a0 <ParseCIPSTA+0x19c>
     99e:	8e e0       	ldi	r24, 0x0E	; 14
     9a0:	be 01       	movw	r22, r28
     9a2:	6f 53       	subi	r22, 0x3F	; 63
     9a4:	7e 4f       	sbci	r23, 0xFE	; 254
     9a6:	90 e0       	ldi	r25, 0x00	; 0
     9a8:	02 96       	adiw	r24, 0x02	; 2
     9aa:	40 e0       	ldi	r20, 0x00	; 0
     9ac:	50 e0       	ldi	r21, 0x00	; 0
     9ae:	80 0f       	add	r24, r16
     9b0:	91 1f       	adc	r25, r17
     9b2:	cb de       	rcall	.-618    	; 0x74a <ParseIP>
     9b4:	ca 57       	subi	r28, 0x7A	; 122
     9b6:	dd 4f       	sbci	r29, 0xFD	; 253
     9b8:	88 81       	ld	r24, Y
     9ba:	80 62       	ori	r24, 0x20	; 32
     9bc:	88 83       	st	Y, r24
     9be:	12 c0       	rjmp	.+36     	; 0x9e4 <ParseCIPSTA+0x1e0>
     9c0:	82 e1       	ldi	r24, 0x12	; 18
     9c2:	01 c0       	rjmp	.+2      	; 0x9c6 <ParseCIPSTA+0x1c2>
     9c4:	8e e0       	ldi	r24, 0x0E	; 14
     9c6:	be 01       	movw	r22, r28
     9c8:	63 54       	subi	r22, 0x43	; 67
     9ca:	7e 4f       	sbci	r23, 0xFE	; 254
     9cc:	90 e0       	ldi	r25, 0x00	; 0
     9ce:	02 96       	adiw	r24, 0x02	; 2
     9d0:	40 e0       	ldi	r20, 0x00	; 0
     9d2:	50 e0       	ldi	r21, 0x00	; 0
     9d4:	80 0f       	add	r24, r16
     9d6:	91 1f       	adc	r25, r17
     9d8:	b8 de       	rcall	.-656    	; 0x74a <ParseIP>
     9da:	ca 57       	subi	r28, 0x7A	; 122
     9dc:	dd 4f       	sbci	r29, 0xFD	; 253
     9de:	88 81       	ld	r24, Y
     9e0:	80 64       	ori	r24, 0x40	; 64
     9e2:	88 83       	st	Y, r24
     9e4:	df 91       	pop	r29
     9e6:	cf 91       	pop	r28
     9e8:	1f 91       	pop	r17
     9ea:	0f 91       	pop	r16
     9ec:	08 95       	ret

000009ee <ParseMAC>:
     9ee:	8f 92       	push	r8
     9f0:	9f 92       	push	r9
     9f2:	af 92       	push	r10
     9f4:	bf 92       	push	r11
     9f6:	cf 92       	push	r12
     9f8:	df 92       	push	r13
     9fa:	ef 92       	push	r14
     9fc:	ff 92       	push	r15
     9fe:	0f 93       	push	r16
     a00:	1f 93       	push	r17
     a02:	cf 93       	push	r28
     a04:	df 93       	push	r29
     a06:	8b 01       	movw	r16, r22
     a08:	7a 01       	movw	r14, r20
     a0a:	6e ef       	ldi	r22, 0xFE	; 254
     a0c:	72 e0       	ldi	r23, 0x02	; 2
     a0e:	0e 94 6c 19 	call	0x32d8	; 0x32d8 <strtok>
     a12:	00 97       	sbiw	r24, 0x00	; 0
     a14:	e1 f1       	breq	.+120    	; 0xa8e <ParseMAC+0xa0>
     a16:	e8 01       	movw	r28, r16
     a18:	0a 5f       	subi	r16, 0xFA	; 250
     a1a:	1f 4f       	sbci	r17, 0xFF	; 255
     a1c:	d1 2c       	mov	r13, r1
     a1e:	81 2c       	mov	r8, r1
     a20:	91 2c       	mov	r9, r1
     a22:	a1 2c       	mov	r10, r1
     a24:	b1 2c       	mov	r11, r1
     a26:	c1 2c       	mov	r12, r1
     a28:	28 2f       	mov	r18, r24
     a2a:	e8 2f       	mov	r30, r24
     a2c:	f9 2f       	mov	r31, r25
     a2e:	88 2d       	mov	r24, r8
     a30:	99 2d       	mov	r25, r9
     a32:	aa 2d       	mov	r26, r10
     a34:	bb 2d       	mov	r27, r11
     a36:	0d c0       	rjmp	.+26     	; 0xa52 <ParseMAC+0x64>
     a38:	37 55       	subi	r19, 0x57	; 87
     a3a:	07 c0       	rjmp	.+14     	; 0xa4a <ParseMAC+0x5c>
     a3c:	4f eb       	ldi	r20, 0xBF	; 191
     a3e:	43 0f       	add	r20, r19
     a40:	46 30       	cpi	r20, 0x06	; 6
     a42:	10 f4       	brcc	.+4      	; 0xa48 <ParseMAC+0x5a>
     a44:	37 53       	subi	r19, 0x37	; 55
     a46:	01 c0       	rjmp	.+2      	; 0xa4a <ParseMAC+0x5c>
     a48:	3c 2d       	mov	r19, r12
     a4a:	83 0f       	add	r24, r19
     a4c:	91 1d       	adc	r25, r1
     a4e:	a1 1d       	adc	r26, r1
     a50:	b1 1d       	adc	r27, r1
     a52:	5e 2f       	mov	r21, r30
     a54:	52 1b       	sub	r21, r18
     a56:	31 91       	ld	r19, Z+
     a58:	40 ed       	ldi	r20, 0xD0	; 208
     a5a:	43 0f       	add	r20, r19
     a5c:	4a 30       	cpi	r20, 0x0A	; 10
     a5e:	78 f1       	brcs	.+94     	; 0xabe <ParseMAC+0xd0>
     a60:	4f e9       	ldi	r20, 0x9F	; 159
     a62:	43 0f       	add	r20, r19
     a64:	46 30       	cpi	r20, 0x06	; 6
     a66:	e8 f1       	brcs	.+122    	; 0xae2 <ParseMAC+0xf4>
     a68:	4f eb       	ldi	r20, 0xBF	; 191
     a6a:	43 0f       	add	r20, r19
     a6c:	46 30       	cpi	r20, 0x06	; 6
     a6e:	b0 f0       	brcs	.+44     	; 0xa9c <ParseMAC+0xae>
     a70:	89 93       	st	Y+, r24
     a72:	d5 0e       	add	r13, r21
     a74:	c0 17       	cp	r28, r16
     a76:	d1 07       	cpc	r29, r17
     a78:	59 f0       	breq	.+22     	; 0xa90 <ParseMAC+0xa2>
     a7a:	d3 94       	inc	r13
     a7c:	6e ef       	ldi	r22, 0xFE	; 254
     a7e:	72 e0       	ldi	r23, 0x02	; 2
     a80:	80 e0       	ldi	r24, 0x00	; 0
     a82:	90 e0       	ldi	r25, 0x00	; 0
     a84:	0e 94 6c 19 	call	0x32d8	; 0x32d8 <strtok>
     a88:	00 97       	sbiw	r24, 0x00	; 0
     a8a:	71 f6       	brne	.-100    	; 0xa28 <ParseMAC+0x3a>
     a8c:	01 c0       	rjmp	.+2      	; 0xa90 <ParseMAC+0xa2>
     a8e:	d1 2c       	mov	r13, r1
     a90:	e1 14       	cp	r14, r1
     a92:	f1 04       	cpc	r15, r1
     a94:	e1 f1       	breq	.+120    	; 0xb0e <ParseMAC+0x120>
     a96:	f7 01       	movw	r30, r14
     a98:	d0 82       	st	Z, r13
     a9a:	39 c0       	rjmp	.+114    	; 0xb0e <ParseMAC+0x120>
     a9c:	88 0f       	add	r24, r24
     a9e:	99 1f       	adc	r25, r25
     aa0:	aa 1f       	adc	r26, r26
     aa2:	bb 1f       	adc	r27, r27
     aa4:	88 0f       	add	r24, r24
     aa6:	99 1f       	adc	r25, r25
     aa8:	aa 1f       	adc	r26, r26
     aaa:	bb 1f       	adc	r27, r27
     aac:	88 0f       	add	r24, r24
     aae:	99 1f       	adc	r25, r25
     ab0:	aa 1f       	adc	r26, r26
     ab2:	bb 1f       	adc	r27, r27
     ab4:	88 0f       	add	r24, r24
     ab6:	99 1f       	adc	r25, r25
     ab8:	aa 1f       	adc	r26, r26
     aba:	bb 1f       	adc	r27, r27
     abc:	bf cf       	rjmp	.-130    	; 0xa3c <ParseMAC+0x4e>
     abe:	88 0f       	add	r24, r24
     ac0:	99 1f       	adc	r25, r25
     ac2:	aa 1f       	adc	r26, r26
     ac4:	bb 1f       	adc	r27, r27
     ac6:	88 0f       	add	r24, r24
     ac8:	99 1f       	adc	r25, r25
     aca:	aa 1f       	adc	r26, r26
     acc:	bb 1f       	adc	r27, r27
     ace:	88 0f       	add	r24, r24
     ad0:	99 1f       	adc	r25, r25
     ad2:	aa 1f       	adc	r26, r26
     ad4:	bb 1f       	adc	r27, r27
     ad6:	88 0f       	add	r24, r24
     ad8:	99 1f       	adc	r25, r25
     ada:	aa 1f       	adc	r26, r26
     adc:	bb 1f       	adc	r27, r27
     ade:	34 2f       	mov	r19, r20
     ae0:	b4 cf       	rjmp	.-152    	; 0xa4a <ParseMAC+0x5c>
     ae2:	88 0f       	add	r24, r24
     ae4:	99 1f       	adc	r25, r25
     ae6:	aa 1f       	adc	r26, r26
     ae8:	bb 1f       	adc	r27, r27
     aea:	88 0f       	add	r24, r24
     aec:	99 1f       	adc	r25, r25
     aee:	aa 1f       	adc	r26, r26
     af0:	bb 1f       	adc	r27, r27
     af2:	88 0f       	add	r24, r24
     af4:	99 1f       	adc	r25, r25
     af6:	aa 1f       	adc	r26, r26
     af8:	bb 1f       	adc	r27, r27
     afa:	88 0f       	add	r24, r24
     afc:	99 1f       	adc	r25, r25
     afe:	aa 1f       	adc	r26, r26
     b00:	bb 1f       	adc	r27, r27
     b02:	4f e9       	ldi	r20, 0x9F	; 159
     b04:	43 0f       	add	r20, r19
     b06:	46 30       	cpi	r20, 0x06	; 6
     b08:	08 f0       	brcs	.+2      	; 0xb0c <ParseMAC+0x11e>
     b0a:	98 cf       	rjmp	.-208    	; 0xa3c <ParseMAC+0x4e>
     b0c:	95 cf       	rjmp	.-214    	; 0xa38 <ParseMAC+0x4a>
     b0e:	df 91       	pop	r29
     b10:	cf 91       	pop	r28
     b12:	1f 91       	pop	r17
     b14:	0f 91       	pop	r16
     b16:	ff 90       	pop	r15
     b18:	ef 90       	pop	r14
     b1a:	df 90       	pop	r13
     b1c:	cf 90       	pop	r12
     b1e:	bf 90       	pop	r11
     b20:	af 90       	pop	r10
     b22:	9f 90       	pop	r9
     b24:	8f 90       	pop	r8
     b26:	08 95       	ret

00000b28 <ESP8266_TimeUpdate>:
     b28:	0f 93       	push	r16
     b2a:	1f 93       	push	r17
     b2c:	fc 01       	movw	r30, r24
     b2e:	e4 5b       	subi	r30, 0xB4	; 180
     b30:	ff 4f       	sbci	r31, 0xFF	; 255
     b32:	00 81       	ld	r16, Z
     b34:	11 81       	ldd	r17, Z+1	; 0x01
     b36:	22 81       	ldd	r18, Z+2	; 0x02
     b38:	33 81       	ldd	r19, Z+3	; 0x03
     b3a:	40 0f       	add	r20, r16
     b3c:	51 1f       	adc	r21, r17
     b3e:	62 1f       	adc	r22, r18
     b40:	73 1f       	adc	r23, r19
     b42:	40 83       	st	Z, r20
     b44:	51 83       	std	Z+1, r21	; 0x01
     b46:	62 83       	std	Z+2, r22	; 0x02
     b48:	73 83       	std	Z+3, r23	; 0x03
     b4a:	1f 91       	pop	r17
     b4c:	0f 91       	pop	r16
     b4e:	08 95       	ret

00000b50 <ESP8266_DataReceived>:
     b50:	ab 01       	movw	r20, r22
     b52:	bc 01       	movw	r22, r24
     b54:	8e e8       	ldi	r24, 0x8E	; 142
     b56:	96 e1       	ldi	r25, 0x16	; 22
     b58:	27 cb       	rjmp	.-2482   	; 0x1a8 <BUFFER_Write>
     b5a:	08 95       	ret

00000b5c <ESP8266_Callback_ServerConnectionActive>:
     b5c:	08 95       	ret

00000b5e <ESP8266_Callback_ServerConnectionClosed>:
     b5e:	08 95       	ret

00000b60 <ESP8266_Callback_ServerConnectionDataReceived>:
     b60:	08 95       	ret

00000b62 <ESP8266_Callback_ServerConnectionSendData>:
     b62:	80 e0       	ldi	r24, 0x00	; 0
     b64:	90 e0       	ldi	r25, 0x00	; 0
     b66:	08 95       	ret

00000b68 <ESP8266_Callback_ServerConnectionDataSent>:
     b68:	08 95       	ret

00000b6a <CallConnectionCallbacks>:
     b6a:	af 92       	push	r10
     b6c:	bf 92       	push	r11
     b6e:	cf 92       	push	r12
     b70:	df 92       	push	r13
     b72:	ef 92       	push	r14
     b74:	ff 92       	push	r15
     b76:	0f 93       	push	r16
     b78:	1f 93       	push	r17
     b7a:	cf 93       	push	r28
     b7c:	df 93       	push	r29
     b7e:	5c 01       	movw	r10, r24
     b80:	ec 01       	movw	r28, r24
     b82:	c8 5a       	subi	r28, 0xA8	; 168
     b84:	df 4f       	sbci	r29, 0xFF	; 255
     b86:	7c 01       	movw	r14, r24
     b88:	81 e7       	ldi	r24, 0x71	; 113
     b8a:	e8 0e       	add	r14, r24
     b8c:	f1 1c       	adc	r15, r1
     b8e:	85 01       	movw	r16, r10
     b90:	06 5a       	subi	r16, 0xA6	; 166
     b92:	1f 4f       	sbci	r17, 0xFF	; 255
     b94:	65 01       	movw	r12, r10
     b96:	a7 e5       	ldi	r26, 0x57	; 87
     b98:	ca 1a       	sub	r12, r26
     b9a:	ae ef       	ldi	r26, 0xFE	; 254
     b9c:	da 0a       	sbc	r13, r26
     b9e:	6c 2f       	mov	r22, r28
     ba0:	7d 2f       	mov	r23, r29
     ba2:	98 81       	ld	r25, Y
     ba4:	99 23       	and	r25, r25
     ba6:	d1 f0       	breq	.+52     	; 0xbdc <CallConnectionCallbacks+0x72>
     ba8:	f7 01       	movw	r30, r14
     baa:	80 81       	ld	r24, Z
     bac:	88 23       	and	r24, r24
     bae:	b1 f0       	breq	.+44     	; 0xbdc <CallConnectionCallbacks+0x72>
     bb0:	d8 01       	movw	r26, r16
     bb2:	8c 91       	ld	r24, X
     bb4:	88 23       	and	r24, r24
     bb6:	91 f0       	breq	.+36     	; 0xbdc <CallConnectionCallbacks+0x72>
     bb8:	10 82       	st	Z, r1
     bba:	8c 91       	ld	r24, X
     bbc:	88 23       	and	r24, r24
     bbe:	39 f0       	breq	.+14     	; 0xbce <CallConnectionCallbacks+0x64>
     bc0:	f8 01       	movw	r30, r16
     bc2:	42 89       	ldd	r20, Z+18	; 0x12
     bc4:	53 89       	ldd	r21, Z+19	; 0x13
     bc6:	c5 01       	movw	r24, r10
     bc8:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <ESP8266_Callback_ClientConnectionDataReceived>
     bcc:	07 c0       	rjmp	.+14     	; 0xbdc <CallConnectionCallbacks+0x72>
     bce:	d8 01       	movw	r26, r16
     bd0:	52 96       	adiw	r26, 0x12	; 18
     bd2:	4d 91       	ld	r20, X+
     bd4:	5c 91       	ld	r21, X
     bd6:	53 97       	sbiw	r26, 0x13	; 19
     bd8:	c5 01       	movw	r24, r10
     bda:	c2 df       	rcall	.-124    	; 0xb60 <ESP8266_Callback_ServerConnectionDataReceived>
     bdc:	cd 5b       	subi	r28, 0xBD	; 189
     bde:	df 4f       	sbci	r29, 0xFF	; 255
     be0:	b3 e4       	ldi	r27, 0x43	; 67
     be2:	eb 0e       	add	r14, r27
     be4:	f1 1c       	adc	r15, r1
     be6:	0d 5b       	subi	r16, 0xBD	; 189
     be8:	1f 4f       	sbci	r17, 0xFF	; 255
     bea:	0c 15       	cp	r16, r12
     bec:	1d 05       	cpc	r17, r13
     bee:	b9 f6       	brne	.-82     	; 0xb9e <CallConnectionCallbacks+0x34>
     bf0:	df 91       	pop	r29
     bf2:	cf 91       	pop	r28
     bf4:	1f 91       	pop	r17
     bf6:	0f 91       	pop	r16
     bf8:	ff 90       	pop	r15
     bfa:	ef 90       	pop	r14
     bfc:	df 90       	pop	r13
     bfe:	cf 90       	pop	r12
     c00:	bf 90       	pop	r11
     c02:	af 90       	pop	r10
     c04:	08 95       	ret

00000c06 <ESP8266_Callback_ConnectedStationsDetected>:
     c06:	08 95       	ret

00000c08 <mem_mem>:
     c08:	af 92       	push	r10
     c0a:	bf 92       	push	r11
     c0c:	cf 92       	push	r12
     c0e:	df 92       	push	r13
     c10:	ef 92       	push	r14
     c12:	ff 92       	push	r15
     c14:	0f 93       	push	r16
     c16:	1f 93       	push	r17
     c18:	cf 93       	push	r28
     c1a:	df 93       	push	r29
     c1c:	61 15       	cp	r22, r1
     c1e:	71 05       	cpc	r23, r1
     c20:	a1 f0       	breq	.+40     	; 0xc4a <mem_mem+0x42>
     c22:	69 01       	movw	r12, r18
     c24:	7a 01       	movw	r14, r20
     c26:	8b 01       	movw	r16, r22
     c28:	ec 01       	movw	r28, r24
     c2a:	08 0f       	add	r16, r24
     c2c:	19 1f       	adc	r17, r25
     c2e:	a6 01       	movw	r20, r12
     c30:	b7 01       	movw	r22, r14
     c32:	ce 01       	movw	r24, r28
     c34:	0e 94 6f 19 	call	0x32de	; 0x32de <memcmp>
     c38:	89 2b       	or	r24, r25
     c3a:	51 f0       	breq	.+20     	; 0xc50 <mem_mem+0x48>
     c3c:	21 96       	adiw	r28, 0x01	; 1
     c3e:	c0 17       	cp	r28, r16
     c40:	d1 07       	cpc	r29, r17
     c42:	a9 f7       	brne	.-22     	; 0xc2e <mem_mem+0x26>
     c44:	80 e0       	ldi	r24, 0x00	; 0
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	05 c0       	rjmp	.+10     	; 0xc54 <mem_mem+0x4c>
     c4a:	80 e0       	ldi	r24, 0x00	; 0
     c4c:	90 e0       	ldi	r25, 0x00	; 0
     c4e:	02 c0       	rjmp	.+4      	; 0xc54 <mem_mem+0x4c>
     c50:	8c 2f       	mov	r24, r28
     c52:	9d 2f       	mov	r25, r29
     c54:	df 91       	pop	r29
     c56:	cf 91       	pop	r28
     c58:	1f 91       	pop	r17
     c5a:	0f 91       	pop	r16
     c5c:	ff 90       	pop	r15
     c5e:	ef 90       	pop	r14
     c60:	df 90       	pop	r13
     c62:	cf 90       	pop	r12
     c64:	bf 90       	pop	r11
     c66:	af 90       	pop	r10
     c68:	08 95       	ret

00000c6a <ParseReceived>:
     c6a:	2f 92       	push	r2
     c6c:	3f 92       	push	r3
     c6e:	4f 92       	push	r4
     c70:	5f 92       	push	r5
     c72:	6f 92       	push	r6
     c74:	7f 92       	push	r7
     c76:	8f 92       	push	r8
     c78:	9f 92       	push	r9
     c7a:	af 92       	push	r10
     c7c:	bf 92       	push	r11
     c7e:	cf 92       	push	r12
     c80:	df 92       	push	r13
     c82:	ef 92       	push	r14
     c84:	ff 92       	push	r15
     c86:	0f 93       	push	r16
     c88:	1f 93       	push	r17
     c8a:	cf 93       	push	r28
     c8c:	df 93       	push	r29
     c8e:	1f 92       	push	r1
     c90:	1f 92       	push	r1
     c92:	cd b7       	in	r28, 0x3d	; 61
     c94:	de b7       	in	r29, 0x3e	; 62
     c96:	fc 01       	movw	r30, r24
     c98:	e0 5b       	subi	r30, 0xB0	; 176
     c9a:	ff 4f       	sbci	r31, 0xFF	; 255
     c9c:	dc 01       	movw	r26, r24
     c9e:	a4 5b       	subi	r26, 0xB4	; 180
     ca0:	bf 4f       	sbci	r27, 0xFF	; 255
     ca2:	cd 90       	ld	r12, X+
     ca4:	dd 90       	ld	r13, X+
     ca6:	ed 90       	ld	r14, X+
     ca8:	fc 90       	ld	r15, X
     caa:	c0 82       	st	Z, r12
     cac:	d1 82       	std	Z+1, r13	; 0x01
     cae:	e2 82       	std	Z+2, r14	; 0x02
     cb0:	f3 82       	std	Z+3, r15	; 0x03
     cb2:	22 30       	cpi	r18, 0x02	; 2
     cb4:	31 05       	cpc	r19, r1
     cb6:	49 f4       	brne	.+18     	; 0xcca <ParseReceived+0x60>
     cb8:	db 01       	movw	r26, r22
     cba:	5c 91       	ld	r21, X
     cbc:	5d 30       	cpi	r21, 0x0D	; 13
     cbe:	29 f4       	brne	.+10     	; 0xcca <ParseReceived+0x60>
     cc0:	11 96       	adiw	r26, 0x01	; 1
     cc2:	5c 91       	ld	r21, X
     cc4:	5a 30       	cpi	r21, 0x0A	; 10
     cc6:	09 f4       	brne	.+2      	; 0xcca <ParseReceived+0x60>
     cc8:	ff c6       	rjmp	.+3582   	; 0x1ac8 <ParseReceived+0xe5e>
     cca:	39 01       	movw	r6, r18
     ccc:	54 2e       	mov	r5, r20
     cce:	7b 01       	movw	r14, r22
     cd0:	8c 01       	movw	r16, r24
     cd2:	fc 01       	movw	r30, r24
     cd4:	84 81       	ldd	r24, Z+4	; 0x04
     cd6:	95 81       	ldd	r25, Z+5	; 0x05
     cd8:	a6 81       	ldd	r26, Z+6	; 0x06
     cda:	b7 81       	ldd	r27, Z+7	; 0x07
     cdc:	89 2b       	or	r24, r25
     cde:	8a 2b       	or	r24, r26
     ce0:	8b 2b       	or	r24, r27
     ce2:	09 f4       	brne	.+2      	; 0xce6 <ParseReceived+0x7c>
     ce4:	44 c0       	rjmp	.+136    	; 0xd6e <ParseReceived+0x104>
     ce6:	f1 e0       	ldi	r31, 0x01	; 1
     ce8:	4f 13       	cpse	r20, r31
     cea:	41 c0       	rjmp	.+130    	; 0xd6e <ParseReceived+0x104>
     cec:	69 ed       	ldi	r22, 0xD9	; 217
     cee:	72 e0       	ldi	r23, 0x02	; 2
     cf0:	c7 01       	movw	r24, r14
     cf2:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
     cf6:	89 2b       	or	r24, r25
     cf8:	d1 f1       	breq	.+116    	; 0xd6e <ParseReceived+0x104>
     cfa:	64 ed       	ldi	r22, 0xD4	; 212
     cfc:	72 e0       	ldi	r23, 0x02	; 2
     cfe:	c7 01       	movw	r24, r14
     d00:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
     d04:	89 2b       	or	r24, r25
     d06:	99 f1       	breq	.+102    	; 0xd6e <ParseReceived+0x104>
     d08:	6e ed       	ldi	r22, 0xDE	; 222
     d0a:	72 e0       	ldi	r23, 0x02	; 2
     d0c:	c7 01       	movw	r24, r14
     d0e:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
     d12:	89 2b       	or	r24, r25
     d14:	61 f1       	breq	.+88     	; 0xd6e <ParseReceived+0x104>
     d16:	66 ee       	ldi	r22, 0xE6	; 230
     d18:	72 e0       	ldi	r23, 0x02	; 2
     d1a:	c7 01       	movw	r24, r14
     d1c:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
     d20:	89 2b       	or	r24, r25
     d22:	61 f1       	breq	.+88     	; 0xd7c <ParseReceived+0x112>
     d24:	6e ee       	ldi	r22, 0xEE	; 238
     d26:	72 e0       	ldi	r23, 0x02	; 2
     d28:	c7 01       	movw	r24, r14
     d2a:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
     d2e:	89 2b       	or	r24, r25
     d30:	41 f1       	breq	.+80     	; 0xd82 <ParseReceived+0x118>
     d32:	44 e0       	ldi	r20, 0x04	; 4
     d34:	50 e0       	ldi	r21, 0x00	; 0
     d36:	6a ef       	ldi	r22, 0xFA	; 250
     d38:	72 e0       	ldi	r23, 0x02	; 2
     d3a:	c7 01       	movw	r24, r14
     d3c:	0e 94 95 19 	call	0x332a	; 0x332a <strncmp>
     d40:	89 2b       	or	r24, r25
     d42:	f9 f0       	breq	.+62     	; 0xd82 <ParseReceived+0x118>
     d44:	b8 01       	movw	r22, r16
     d46:	68 5f       	subi	r22, 0xF8	; 248
     d48:	7f 4f       	sbci	r23, 0xFF	; 255
     d4a:	fb 01       	movw	r30, r22
     d4c:	01 90       	ld	r0, Z+
     d4e:	00 20       	and	r0, r0
     d50:	e9 f7       	brne	.-6      	; 0xd4c <ParseReceived+0xe2>
     d52:	31 97       	sbiw	r30, 0x01	; 1
     d54:	af 01       	movw	r20, r30
     d56:	46 1b       	sub	r20, r22
     d58:	57 0b       	sbc	r21, r23
     d5a:	c7 01       	movw	r24, r14
     d5c:	0e 94 95 19 	call	0x332a	; 0x332a <strncmp>
     d60:	89 2b       	or	r24, r25
     d62:	79 f0       	breq	.+30     	; 0xd82 <ParseReceived+0x118>
     d64:	b7 01       	movw	r22, r14
     d66:	8a e9       	ldi	r24, 0x9A	; 154
     d68:	96 e1       	ldi	r25, 0x16	; 22
     d6a:	ee db       	rcall	.-2084   	; 0x548 <BUFFER_WriteString>
     d6c:	ad c6       	rjmp	.+3418   	; 0x1ac8 <ParseReceived+0xe5e>
     d6e:	66 ee       	ldi	r22, 0xE6	; 230
     d70:	72 e0       	ldi	r23, 0x02	; 2
     d72:	c7 01       	movw	r24, r14
     d74:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
     d78:	89 2b       	or	r24, r25
     d7a:	19 f4       	brne	.+6      	; 0xd82 <ParseReceived+0x118>
     d7c:	c8 01       	movw	r24, r16
     d7e:	0e 94 e1 16 	call	0x2dc2	; 0x2dc2 <ESP8266_Callback_DeviceReady>
     d82:	60 e0       	ldi	r22, 0x00	; 0
     d84:	73 e0       	ldi	r23, 0x03	; 3
     d86:	c7 01       	movw	r24, r14
     d88:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
     d8c:	89 2b       	or	r24, r25
     d8e:	19 f4       	brne	.+6      	; 0xd96 <ParseReceived+0x12c>
     d90:	c8 01       	movw	r24, r16
     d92:	0e 94 e5 16 	call	0x2dca	; 0x2dca <ESP8266_Callback_WatchdogReset>
     d96:	c8 01       	movw	r24, r16
     d98:	e8 de       	rcall	.-560    	; 0xb6a <CallConnectionCallbacks>
     d9a:	6c e0       	ldi	r22, 0x0C	; 12
     d9c:	73 e0       	ldi	r23, 0x03	; 3
     d9e:	c7 01       	movw	r24, r14
     da0:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
     da4:	89 2b       	or	r24, r25
     da6:	51 f4       	brne	.+20     	; 0xdbc <ParseReceived+0x152>
     da8:	f8 01       	movw	r30, r16
     daa:	ea 57       	subi	r30, 0x7A	; 122
     dac:	fd 4f       	sbci	r31, 0xFD	; 253
     dae:	81 81       	ldd	r24, Z+1	; 0x01
     db0:	84 60       	ori	r24, 0x04	; 4
     db2:	81 83       	std	Z+1, r24	; 0x01
     db4:	c8 01       	movw	r24, r16
     db6:	0e 94 ed 16 	call	0x2dda	; 0x2dda <ESP8266_Callback_WifiConnected>
     dba:	33 c0       	rjmp	.+102    	; 0xe22 <ParseReceived+0x1b8>
     dbc:	6d e1       	ldi	r22, 0x1D	; 29
     dbe:	73 e0       	ldi	r23, 0x03	; 3
     dc0:	c7 01       	movw	r24, r14
     dc2:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
     dc6:	89 2b       	or	r24, r25
     dc8:	e1 f4       	brne	.+56     	; 0xe02 <ParseReceived+0x198>
     dca:	f8 01       	movw	r30, r16
     dcc:	ea 57       	subi	r30, 0x7A	; 122
     dce:	fd 4f       	sbci	r31, 0xFD	; 253
     dd0:	81 81       	ldd	r24, Z+1	; 0x01
     dd2:	8b 7f       	andi	r24, 0xFB	; 251
     dd4:	87 7f       	andi	r24, 0xF7	; 247
     dd6:	81 83       	std	Z+1, r24	; 0x01
     dd8:	89 e1       	ldi	r24, 0x19	; 25
     dda:	ea 58       	subi	r30, 0x8A	; 138
     ddc:	f1 09       	sbc	r31, r1
     dde:	df 01       	movw	r26, r30
     de0:	1d 92       	st	X+, r1
     de2:	8a 95       	dec	r24
     de4:	e9 f7       	brne	.-6      	; 0xde0 <ParseReceived+0x176>
     de6:	8f e4       	ldi	r24, 0x4F	; 79
     de8:	91 e0       	ldi	r25, 0x01	; 1
     dea:	e4 5a       	subi	r30, 0xA4	; 164
     dec:	f1 40       	sbci	r31, 0x01	; 1
     dee:	df 01       	movw	r26, r30
     df0:	9c 01       	movw	r18, r24
     df2:	1d 92       	st	X+, r1
     df4:	21 50       	subi	r18, 0x01	; 1
     df6:	30 40       	sbci	r19, 0x00	; 0
     df8:	e1 f7       	brne	.-8      	; 0xdf2 <ParseReceived+0x188>
     dfa:	c8 01       	movw	r24, r16
     dfc:	0e 94 e9 16 	call	0x2dd2	; 0x2dd2 <ESP8266_Callback_WifiDisconnected>
     e00:	10 c0       	rjmp	.+32     	; 0xe22 <ParseReceived+0x1b8>
     e02:	6f e2       	ldi	r22, 0x2F	; 47
     e04:	73 e0       	ldi	r23, 0x03	; 3
     e06:	c7 01       	movw	r24, r14
     e08:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
     e0c:	89 2b       	or	r24, r25
     e0e:	49 f4       	brne	.+18     	; 0xe22 <ParseReceived+0x1b8>
     e10:	f8 01       	movw	r30, r16
     e12:	ea 57       	subi	r30, 0x7A	; 122
     e14:	fd 4f       	sbci	r31, 0xFD	; 253
     e16:	81 81       	ldd	r24, Z+1	; 0x01
     e18:	88 60       	ori	r24, 0x08	; 8
     e1a:	81 83       	std	Z+1, r24	; 0x01
     e1c:	c8 01       	movw	r24, r16
     e1e:	0e 94 01 17 	call	0x2e02	; 0x2e02 <ESP8266_Callback_WifiGotIP>
     e22:	64 ed       	ldi	r22, 0xD4	; 212
     e24:	72 e0       	ldi	r23, 0x02	; 2
     e26:	c7 01       	movw	r24, r14
     e28:	0e 94 b2 19 	call	0x3364	; 0x3364 <strstr>
     e2c:	89 2b       	or	r24, r25
     e2e:	79 f1       	breq	.+94     	; 0xe8e <ParseReceived+0x224>
     e30:	d8 01       	movw	r26, r16
     e32:	14 96       	adiw	r26, 0x04	; 4
     e34:	1d 92       	st	X+, r1
     e36:	1d 92       	st	X+, r1
     e38:	1d 92       	st	X+, r1
     e3a:	1c 92       	st	X, r1
     e3c:	17 97       	sbiw	r26, 0x07	; 7
     e3e:	68 01       	movw	r12, r16
     e40:	bb e6       	ldi	r27, 0x6B	; 107
     e42:	cb 0e       	add	r12, r27
     e44:	d1 1c       	adc	r13, r1
     e46:	58 01       	movw	r10, r16
     e48:	e8 e5       	ldi	r30, 0x58	; 88
     e4a:	ae 0e       	add	r10, r30
     e4c:	b1 1c       	adc	r11, r1
     e4e:	48 01       	movw	r8, r16
     e50:	f6 e4       	ldi	r31, 0x46	; 70
     e52:	8f 1a       	sub	r8, r31
     e54:	fe ef       	ldi	r31, 0xFE	; 254
     e56:	9f 0a       	sbc	r9, r31
     e58:	d6 01       	movw	r26, r12
     e5a:	8c 91       	ld	r24, X
     e5c:	88 23       	and	r24, r24
     e5e:	71 f0       	breq	.+28     	; 0xe7c <ParseReceived+0x212>
     e60:	1c 92       	st	X, r1
     e62:	f6 01       	movw	r30, r12
     e64:	71 97       	sbiw	r30, 0x11	; 17
     e66:	80 81       	ld	r24, Z
     e68:	88 23       	and	r24, r24
     e6a:	29 f0       	breq	.+10     	; 0xe76 <ParseReceived+0x20c>
     e6c:	b5 01       	movw	r22, r10
     e6e:	c8 01       	movw	r24, r16
     e70:	0e 94 99 17 	call	0x2f32	; 0x2f32 <ESP8266_Callback_ClientConnectionDataSent>
     e74:	03 c0       	rjmp	.+6      	; 0xe7c <ParseReceived+0x212>
     e76:	b5 01       	movw	r22, r10
     e78:	c8 01       	movw	r24, r16
     e7a:	76 de       	rcall	.-788    	; 0xb68 <ESP8266_Callback_ServerConnectionDataSent>
     e7c:	b3 e4       	ldi	r27, 0x43	; 67
     e7e:	cb 0e       	add	r12, r27
     e80:	d1 1c       	adc	r13, r1
     e82:	e3 e4       	ldi	r30, 0x43	; 67
     e84:	ae 0e       	add	r10, r30
     e86:	b1 1c       	adc	r11, r1
     e88:	c8 14       	cp	r12, r8
     e8a:	d9 04       	cpc	r13, r9
     e8c:	29 f7       	brne	.-54     	; 0xe58 <ParseReceived+0x1ee>
     e8e:	44 e0       	ldi	r20, 0x04	; 4
     e90:	50 e0       	ldi	r21, 0x00	; 0
     e92:	6d e3       	ldi	r22, 0x3D	; 61
     e94:	73 e0       	ldi	r23, 0x03	; 3
     e96:	c7 01       	movw	r24, r14
     e98:	0e 94 95 19 	call	0x332a	; 0x332a <strncmp>
     e9c:	89 2b       	or	r24, r25
     e9e:	09 f0       	breq	.+2      	; 0xea2 <ParseReceived+0x238>
     ea0:	6a c1       	rjmp	.+724    	; 0x1176 <ParseReceived+0x50c>
     ea2:	81 e0       	ldi	r24, 0x01	; 1
     ea4:	f8 01       	movw	r30, r16
     ea6:	eb 50       	subi	r30, 0x0B	; 11
     ea8:	fe 4f       	sbci	r31, 0xFE	; 254
     eaa:	80 83       	st	Z, r24
     eac:	36 96       	adiw	r30, 0x06	; 6
     eae:	50 82       	st	Z, r5
     eb0:	d7 01       	movw	r26, r14
     eb2:	15 96       	adiw	r26, 0x05	; 5
     eb4:	8c 91       	ld	r24, X
     eb6:	80 53       	subi	r24, 0x30	; 48
     eb8:	58 01       	movw	r10, r16
     eba:	b6 e0       	ldi	r27, 0x06	; 6
     ebc:	ab 1a       	sub	r10, r27
     ebe:	be ef       	ldi	r27, 0xFE	; 254
     ec0:	bb 0a       	sbc	r11, r27
     ec2:	f5 01       	movw	r30, r10
     ec4:	80 83       	st	Z, r24
     ec6:	0f 2e       	mov	r0, r31
     ec8:	f3 e4       	ldi	r31, 0x43	; 67
     eca:	9f 2e       	mov	r9, r31
     ecc:	f0 2d       	mov	r31, r0
     ece:	68 01       	movw	r12, r16
     ed0:	98 9e       	mul	r9, r24
     ed2:	c0 0c       	add	r12, r0
     ed4:	d1 1c       	adc	r13, r1
     ed6:	11 24       	eor	r1, r1
     ed8:	f6 01       	movw	r30, r12
     eda:	e4 59       	subi	r30, 0x94	; 148
     edc:	ff 4f       	sbci	r31, 0xFF	; 255
     ede:	2a ed       	ldi	r18, 0xDA	; 218
     ee0:	3a e0       	ldi	r19, 0x0A	; 10
     ee2:	31 83       	std	Z+1, r19	; 0x01
     ee4:	20 83       	st	Z, r18
     ee6:	73 97       	sbiw	r30, 0x13	; 19
     ee8:	80 83       	st	Z, r24
     eea:	be 01       	movw	r22, r28
     eec:	6f 5f       	subi	r22, 0xFF	; 255
     eee:	7f 4f       	sbci	r23, 0xFF	; 255
     ef0:	c7 01       	movw	r24, r14
     ef2:	07 96       	adiw	r24, 0x07	; 7
     ef4:	9e db       	rcall	.-2244   	; 0x632 <ParseNumber>
     ef6:	f6 01       	movw	r30, r12
     ef8:	ee 59       	subi	r30, 0x9E	; 158
     efa:	ff 4f       	sbci	r31, 0xFF	; 255
     efc:	60 83       	st	Z, r22
     efe:	71 83       	std	Z+1, r23	; 0x01
     f00:	82 83       	std	Z+2, r24	; 0x02
     f02:	93 83       	std	Z+3, r25	; 0x03
     f04:	d5 01       	movw	r26, r10
     f06:	8c 91       	ld	r24, X
     f08:	28 2f       	mov	r18, r24
     f0a:	30 e0       	ldi	r19, 0x00	; 0
     f0c:	f8 01       	movw	r30, r16
     f0e:	98 9e       	mul	r9, r24
     f10:	e0 0d       	add	r30, r0
     f12:	f1 1d       	adc	r31, r1
     f14:	11 24       	eor	r1, r1
     f16:	ea 59       	subi	r30, 0x9A	; 154
     f18:	ff 4f       	sbci	r31, 0xFF	; 255
     f1a:	80 81       	ld	r24, Z
     f1c:	91 81       	ldd	r25, Z+1	; 0x01
     f1e:	a2 81       	ldd	r26, Z+2	; 0x02
     f20:	b3 81       	ldd	r27, Z+3	; 0x03
     f22:	89 2b       	or	r24, r25
     f24:	8a 2b       	or	r24, r26
     f26:	8b 2b       	or	r24, r27
     f28:	81 f4       	brne	.+32     	; 0xf4a <ParseReceived+0x2e0>
     f2a:	43 e4       	ldi	r20, 0x43	; 67
     f2c:	42 9f       	mul	r20, r18
     f2e:	c0 01       	movw	r24, r0
     f30:	43 9f       	mul	r20, r19
     f32:	90 0d       	add	r25, r0
     f34:	11 24       	eor	r1, r1
     f36:	80 0f       	add	r24, r16
     f38:	91 1f       	adc	r25, r17
     f3a:	fc 01       	movw	r30, r24
     f3c:	e8 56       	subi	r30, 0x68	; 104
     f3e:	ff 4f       	sbci	r31, 0xFF	; 255
     f40:	10 82       	st	Z, r1
     f42:	31 96       	adiw	r30, 0x01	; 1
     f44:	81 e0       	ldi	r24, 0x01	; 1
     f46:	80 83       	st	Z, r24
     f48:	0b c0       	rjmp	.+22     	; 0xf60 <ParseReceived+0x2f6>
     f4a:	83 e4       	ldi	r24, 0x43	; 67
     f4c:	82 9f       	mul	r24, r18
     f4e:	f0 01       	movw	r30, r0
     f50:	83 9f       	mul	r24, r19
     f52:	f0 0d       	add	r31, r0
     f54:	11 24       	eor	r1, r1
     f56:	e0 0f       	add	r30, r16
     f58:	f1 1f       	adc	r31, r17
     f5a:	e7 56       	subi	r30, 0x67	; 103
     f5c:	ff 4f       	sbci	r31, 0xFF	; 255
     f5e:	10 82       	st	Z, r1
     f60:	68 01       	movw	r12, r16
     f62:	b6 e0       	ldi	r27, 0x06	; 6
     f64:	cb 1a       	sub	r12, r27
     f66:	be ef       	ldi	r27, 0xFE	; 254
     f68:	db 0a       	sbc	r13, r27
     f6a:	f6 01       	movw	r30, r12
     f6c:	20 81       	ld	r18, Z
     f6e:	0f 2e       	mov	r0, r31
     f70:	f3 e4       	ldi	r31, 0x43	; 67
     f72:	bf 2e       	mov	r11, r31
     f74:	f0 2d       	mov	r31, r0
     f76:	b2 9e       	mul	r11, r18
     f78:	90 01       	movw	r18, r0
     f7a:	11 24       	eor	r1, r1
     f7c:	f8 01       	movw	r30, r16
     f7e:	e2 0f       	add	r30, r18
     f80:	f3 1f       	adc	r31, r19
     f82:	df 01       	movw	r26, r30
     f84:	aa 59       	subi	r26, 0x9A	; 154
     f86:	bf 4f       	sbci	r27, 0xFF	; 255
     f88:	ee 59       	subi	r30, 0x9E	; 158
     f8a:	ff 4f       	sbci	r31, 0xFF	; 255
     f8c:	20 80       	ld	r2, Z
     f8e:	31 80       	ldd	r3, Z+1	; 0x01
     f90:	42 80       	ldd	r4, Z+2	; 0x02
     f92:	53 80       	ldd	r5, Z+3	; 0x03
     f94:	4d 91       	ld	r20, X+
     f96:	5d 91       	ld	r21, X+
     f98:	6d 91       	ld	r22, X+
     f9a:	7c 91       	ld	r23, X
     f9c:	13 97       	sbiw	r26, 0x03	; 3
     f9e:	42 0d       	add	r20, r2
     fa0:	53 1d       	adc	r21, r3
     fa2:	64 1d       	adc	r22, r4
     fa4:	75 1d       	adc	r23, r5
     fa6:	4d 93       	st	X+, r20
     fa8:	5d 93       	st	X+, r21
     faa:	6d 93       	st	X+, r22
     fac:	7c 93       	st	X, r23
     fae:	13 97       	sbiw	r26, 0x03	; 3
     fb0:	d8 01       	movw	r26, r16
     fb2:	a4 58       	subi	r26, 0x84	; 132
     fb4:	bd 4f       	sbci	r27, 0xFD	; 253
     fb6:	20 80       	ld	r2, Z
     fb8:	31 80       	ldd	r3, Z+1	; 0x01
     fba:	42 80       	ldd	r4, Z+2	; 0x02
     fbc:	53 80       	ldd	r5, Z+3	; 0x03
     fbe:	4d 91       	ld	r20, X+
     fc0:	5d 91       	ld	r21, X+
     fc2:	6d 91       	ld	r22, X+
     fc4:	7c 91       	ld	r23, X
     fc6:	13 97       	sbiw	r26, 0x03	; 3
     fc8:	42 0d       	add	r20, r2
     fca:	53 1d       	adc	r21, r3
     fcc:	64 1d       	adc	r22, r4
     fce:	75 1d       	adc	r23, r5
     fd0:	4d 93       	st	X+, r20
     fd2:	5d 93       	st	X+, r21
     fd4:	6d 93       	st	X+, r22
     fd6:	7c 93       	st	X, r23
     fd8:	13 97       	sbiw	r26, 0x03	; 3
     fda:	89 81       	ldd	r24, Y+1	; 0x01
     fdc:	90 e0       	ldi	r25, 0x00	; 0
     fde:	01 96       	adiw	r24, 0x01	; 1
     fe0:	09 2e       	mov	r0, r25
     fe2:	00 0c       	add	r0, r0
     fe4:	aa 0b       	sbc	r26, r26
     fe6:	bb 0b       	sbc	r27, r27
     fe8:	1c 01       	movw	r2, r24
     fea:	2d 01       	movw	r4, r26
     fec:	f7 e0       	ldi	r31, 0x07	; 7
     fee:	2f 0e       	add	r2, r31
     ff0:	31 1c       	adc	r3, r1
     ff2:	41 1c       	adc	r4, r1
     ff4:	51 1c       	adc	r5, r1
     ff6:	b9 01       	movw	r22, r18
     ff8:	63 5a       	subi	r22, 0xA3	; 163
     ffa:	7f 4f       	sbci	r23, 0xFF	; 255
     ffc:	60 0f       	add	r22, r16
     ffe:	71 1f       	adc	r23, r17
    1000:	c7 01       	movw	r24, r14
    1002:	82 0d       	add	r24, r2
    1004:	93 1d       	adc	r25, r3
    1006:	ae 01       	movw	r20, r28
    1008:	4f 5f       	subi	r20, 0xFF	; 255
    100a:	5f 4f       	sbci	r21, 0xFF	; 255
    100c:	9e db       	rcall	.-2244   	; 0x74a <ParseIP>
    100e:	d6 01       	movw	r26, r12
    1010:	cc 90       	ld	r12, X
    1012:	d1 2c       	mov	r13, r1
    1014:	89 81       	ldd	r24, Y+1	; 0x01
    1016:	90 e0       	ldi	r25, 0x00	; 0
    1018:	01 96       	adiw	r24, 0x01	; 1
    101a:	09 2e       	mov	r0, r25
    101c:	00 0c       	add	r0, r0
    101e:	aa 0b       	sbc	r26, r26
    1020:	bb 0b       	sbc	r27, r27
    1022:	82 0d       	add	r24, r2
    1024:	93 1d       	adc	r25, r3
    1026:	a4 1d       	adc	r26, r4
    1028:	b5 1d       	adc	r27, r5
    102a:	8e 0d       	add	r24, r14
    102c:	9f 1d       	adc	r25, r15
    102e:	be 01       	movw	r22, r28
    1030:	6f 5f       	subi	r22, 0xFF	; 255
    1032:	7f 4f       	sbci	r23, 0xFF	; 255
    1034:	fe da       	rcall	.-2564   	; 0x632 <ParseNumber>
    1036:	bc 9c       	mul	r11, r12
    1038:	f0 01       	movw	r30, r0
    103a:	bd 9c       	mul	r11, r13
    103c:	f0 0d       	add	r31, r0
    103e:	11 24       	eor	r1, r1
    1040:	e0 0f       	add	r30, r16
    1042:	f1 1f       	adc	r31, r17
    1044:	e5 5a       	subi	r30, 0xA5	; 165
    1046:	ff 4f       	sbci	r31, 0xFF	; 255
    1048:	71 83       	std	Z+1, r23	; 0x01
    104a:	60 83       	st	Z, r22
    104c:	f7 01       	movw	r30, r14
    104e:	80 81       	ld	r24, Z
    1050:	8a 33       	cpi	r24, 0x3A	; 58
    1052:	59 f0       	breq	.+22     	; 0x106a <ParseReceived+0x400>
    1054:	31 96       	adiw	r30, 0x01	; 1
    1056:	80 e0       	ldi	r24, 0x00	; 0
    1058:	90 e0       	ldi	r25, 0x00	; 0
    105a:	dc 01       	movw	r26, r24
    105c:	01 96       	adiw	r24, 0x01	; 1
    105e:	a1 1d       	adc	r26, r1
    1060:	b1 1d       	adc	r27, r1
    1062:	21 91       	ld	r18, Z+
    1064:	2a 33       	cpi	r18, 0x3A	; 58
    1066:	d1 f7       	brne	.-12     	; 0x105c <ParseReceived+0x3f2>
    1068:	03 c0       	rjmp	.+6      	; 0x1070 <ParseReceived+0x406>
    106a:	80 e0       	ldi	r24, 0x00	; 0
    106c:	90 e0       	ldi	r25, 0x00	; 0
    106e:	dc 01       	movw	r26, r24
    1070:	1c 01       	movw	r2, r24
    1072:	2d 01       	movw	r4, r26
    1074:	ff ef       	ldi	r31, 0xFF	; 255
    1076:	2f 1a       	sub	r2, r31
    1078:	3f 0a       	sbc	r3, r31
    107a:	4f 0a       	sbc	r4, r31
    107c:	5f 0a       	sbc	r5, r31
    107e:	63 01       	movw	r12, r6
    1080:	c2 18       	sub	r12, r2
    1082:	d3 08       	sbc	r13, r3
    1084:	58 01       	movw	r10, r16
    1086:	26 e0       	ldi	r18, 0x06	; 6
    1088:	a2 1a       	sub	r10, r18
    108a:	2e ef       	ldi	r18, 0xFE	; 254
    108c:	b2 0a       	sbc	r11, r18
    108e:	d5 01       	movw	r26, r10
    1090:	8c 91       	ld	r24, X
    1092:	0f 2e       	mov	r0, r31
    1094:	f3 e4       	ldi	r31, 0x43	; 67
    1096:	9f 2e       	mov	r9, r31
    1098:	f0 2d       	mov	r31, r0
    109a:	f8 01       	movw	r30, r16
    109c:	98 9e       	mul	r9, r24
    109e:	e0 0d       	add	r30, r0
    10a0:	f1 1d       	adc	r31, r1
    10a2:	11 24       	eor	r1, r1
    10a4:	e4 59       	subi	r30, 0x94	; 148
    10a6:	ff 4f       	sbci	r31, 0xFF	; 255
    10a8:	b7 01       	movw	r22, r14
    10aa:	62 0d       	add	r22, r2
    10ac:	73 1d       	adc	r23, r3
    10ae:	a6 01       	movw	r20, r12
    10b0:	80 81       	ld	r24, Z
    10b2:	91 81       	ldd	r25, Z+1	; 0x01
    10b4:	0e 94 7c 19 	call	0x32f8	; 0x32f8 <memcpy>
    10b8:	f5 01       	movw	r30, r10
    10ba:	80 81       	ld	r24, Z
    10bc:	28 2f       	mov	r18, r24
    10be:	30 e0       	ldi	r19, 0x00	; 0
    10c0:	f8 01       	movw	r30, r16
    10c2:	98 9e       	mul	r9, r24
    10c4:	e0 0d       	add	r30, r0
    10c6:	f1 1d       	adc	r31, r1
    10c8:	11 24       	eor	r1, r1
    10ca:	ee 59       	subi	r30, 0x9E	; 158
    10cc:	ff 4f       	sbci	r31, 0xFF	; 255
    10ce:	40 81       	ld	r20, Z
    10d0:	51 81       	ldd	r21, Z+1	; 0x01
    10d2:	62 81       	ldd	r22, Z+2	; 0x02
    10d4:	73 81       	ldd	r23, Z+3	; 0x03
    10d6:	c3 01       	movw	r24, r6
    10d8:	a0 e0       	ldi	r26, 0x00	; 0
    10da:	b0 e0       	ldi	r27, 0x00	; 0
    10dc:	82 19       	sub	r24, r2
    10de:	93 09       	sbc	r25, r3
    10e0:	a4 09       	sbc	r26, r4
    10e2:	b5 09       	sbc	r27, r5
    10e4:	48 17       	cp	r20, r24
    10e6:	59 07       	cpc	r21, r25
    10e8:	6a 07       	cpc	r22, r26
    10ea:	7b 07       	cpc	r23, r27
    10ec:	88 f4       	brcc	.+34     	; 0x1110 <ParseReceived+0x4a6>
    10ee:	e3 e4       	ldi	r30, 0x43	; 67
    10f0:	e2 9f       	mul	r30, r18
    10f2:	c0 01       	movw	r24, r0
    10f4:	e3 9f       	mul	r30, r19
    10f6:	90 0d       	add	r25, r0
    10f8:	11 24       	eor	r1, r1
    10fa:	80 0f       	add	r24, r16
    10fc:	91 1f       	adc	r25, r17
    10fe:	fc 01       	movw	r30, r24
    1100:	e4 59       	subi	r30, 0x94	; 148
    1102:	ff 4f       	sbci	r31, 0xFF	; 255
    1104:	80 81       	ld	r24, Z
    1106:	91 81       	ldd	r25, Z+1	; 0x01
    1108:	fc 01       	movw	r30, r24
    110a:	e4 0f       	add	r30, r20
    110c:	f5 1f       	adc	r31, r21
    110e:	10 82       	st	Z, r1
    1110:	f8 01       	movw	r30, r16
    1112:	e8 50       	subi	r30, 0x08	; 8
    1114:	fe 4f       	sbci	r31, 0xFE	; 254
    1116:	d1 82       	std	Z+1, r13	; 0x01
    1118:	c0 82       	st	Z, r12
    111a:	32 97       	sbiw	r30, 0x02	; 2
    111c:	d1 82       	std	Z+1, r13	; 0x01
    111e:	c0 82       	st	Z, r12
    1120:	34 96       	adiw	r30, 0x04	; 4
    1122:	80 81       	ld	r24, Z
    1124:	28 2f       	mov	r18, r24
    1126:	30 e0       	ldi	r19, 0x00	; 0
    1128:	f8 01       	movw	r30, r16
    112a:	43 e4       	ldi	r20, 0x43	; 67
    112c:	84 9f       	mul	r24, r20
    112e:	e0 0d       	add	r30, r0
    1130:	f1 1d       	adc	r31, r1
    1132:	11 24       	eor	r1, r1
    1134:	ee 59       	subi	r30, 0x9E	; 158
    1136:	ff 4f       	sbci	r31, 0xFF	; 255
    1138:	80 81       	ld	r24, Z
    113a:	91 81       	ldd	r25, Z+1	; 0x01
    113c:	a2 81       	ldd	r26, Z+2	; 0x02
    113e:	b3 81       	ldd	r27, Z+3	; 0x03
    1140:	28 16       	cp	r2, r24
    1142:	39 06       	cpc	r3, r25
    1144:	4a 06       	cpc	r4, r26
    1146:	5b 06       	cpc	r5, r27
    1148:	b0 f0       	brcs	.+44     	; 0x1176 <ParseReceived+0x50c>
    114a:	f8 01       	movw	r30, r16
    114c:	eb 50       	subi	r30, 0x0B	; 11
    114e:	fe 4f       	sbci	r31, 0xFE	; 254
    1150:	10 82       	st	Z, r1
    1152:	43 e4       	ldi	r20, 0x43	; 67
    1154:	42 9f       	mul	r20, r18
    1156:	c0 01       	movw	r24, r0
    1158:	43 9f       	mul	r20, r19
    115a:	90 0d       	add	r25, r0
    115c:	11 24       	eor	r1, r1
    115e:	80 0f       	add	r24, r16
    1160:	91 1f       	adc	r25, r17
    1162:	fc 01       	movw	r30, r24
    1164:	e2 59       	subi	r30, 0x92	; 146
    1166:	ff 4f       	sbci	r31, 0xFF	; 255
    1168:	31 82       	std	Z+1, r3	; 0x01
    116a:	20 82       	st	Z, r2
    116c:	32 96       	adiw	r30, 0x02	; 2
    116e:	21 e0       	ldi	r18, 0x01	; 1
    1170:	20 83       	st	Z, r18
    1172:	31 96       	adiw	r30, 0x01	; 1
    1174:	20 83       	st	Z, r18
    1176:	2a e0       	ldi	r18, 0x0A	; 10
    1178:	30 e0       	ldi	r19, 0x00	; 0
    117a:	42 e4       	ldi	r20, 0x42	; 66
    117c:	53 e0       	ldi	r21, 0x03	; 3
    117e:	b3 01       	movw	r22, r6
    1180:	c7 01       	movw	r24, r14
    1182:	42 dd       	rcall	.-1404   	; 0xc08 <mem_mem>
    1184:	00 97       	sbiw	r24, 0x00	; 0
    1186:	a1 f1       	breq	.+104    	; 0x11f0 <ParseReceived+0x586>
    1188:	fc 01       	movw	r30, r24
    118a:	42 91       	ld	r20, -Z
    118c:	50 e0       	ldi	r21, 0x00	; 0
    118e:	40 53       	subi	r20, 0x30	; 48
    1190:	51 09       	sbc	r21, r1
    1192:	83 e4       	ldi	r24, 0x43	; 67
    1194:	84 9f       	mul	r24, r20
    1196:	90 01       	movw	r18, r0
    1198:	85 9f       	mul	r24, r21
    119a:	30 0d       	add	r19, r0
    119c:	11 24       	eor	r1, r1
    119e:	b9 01       	movw	r22, r18
    11a0:	68 5a       	subi	r22, 0xA8	; 168
    11a2:	7f 4f       	sbci	r23, 0xFF	; 255
    11a4:	60 0f       	add	r22, r16
    11a6:	71 1f       	adc	r23, r17
    11a8:	20 0f       	add	r18, r16
    11aa:	31 1f       	adc	r19, r17
    11ac:	d9 01       	movw	r26, r18
    11ae:	a8 5a       	subi	r26, 0xA8	; 168
    11b0:	bf 4f       	sbci	r27, 0xFF	; 255
    11b2:	81 e0       	ldi	r24, 0x01	; 1
    11b4:	8c 93       	st	X, r24
    11b6:	11 96       	adiw	r26, 0x01	; 1
    11b8:	80 81       	ld	r24, Z
    11ba:	80 53       	subi	r24, 0x30	; 48
    11bc:	8c 93       	st	X, r24
    11be:	f9 01       	movw	r30, r18
    11c0:	e6 5a       	subi	r30, 0xA6	; 166
    11c2:	ff 4f       	sbci	r31, 0xFF	; 255
    11c4:	80 81       	ld	r24, Z
    11c6:	88 23       	and	r24, r24
    11c8:	89 f0       	breq	.+34     	; 0x11ec <ParseReceived+0x582>
    11ca:	f8 01       	movw	r30, r16
    11cc:	84 81       	ldd	r24, Z+4	; 0x04
    11ce:	95 81       	ldd	r25, Z+5	; 0x05
    11d0:	a6 81       	ldd	r26, Z+6	; 0x06
    11d2:	b7 81       	ldd	r27, Z+7	; 0x07
    11d4:	0a 97       	sbiw	r24, 0x0a	; 10
    11d6:	a1 05       	cpc	r26, r1
    11d8:	b1 05       	cpc	r27, r1
    11da:	21 f4       	brne	.+8      	; 0x11e4 <ParseReceived+0x57a>
    11dc:	14 82       	std	Z+4, r1	; 0x04
    11de:	15 82       	std	Z+5, r1	; 0x05
    11e0:	16 82       	std	Z+6, r1	; 0x06
    11e2:	17 82       	std	Z+7, r1	; 0x07
    11e4:	c8 01       	movw	r24, r16
    11e6:	0e 94 37 17 	call	0x2e6e	; 0x2e6e <ESP8266_Callback_ClientConnectionConnected>
    11ea:	02 c0       	rjmp	.+4      	; 0x11f0 <ParseReceived+0x586>
    11ec:	c8 01       	movw	r24, r16
    11ee:	b6 dc       	rcall	.-1684   	; 0xb5c <ESP8266_Callback_ServerConnectionActive>
    11f0:	6d e4       	ldi	r22, 0x4D	; 77
    11f2:	73 e0       	ldi	r23, 0x03	; 3
    11f4:	c7 01       	movw	r24, r14
    11f6:	0e 94 b2 19 	call	0x3364	; 0x3364 <strstr>
    11fa:	89 2b       	or	r24, r25
    11fc:	a1 f0       	breq	.+40     	; 0x1226 <ParseReceived+0x5bc>
    11fe:	f8 01       	movw	r30, r16
    1200:	ea 5e       	subi	r30, 0xEA	; 234
    1202:	fd 4f       	sbci	r31, 0xFD	; 253
    1204:	80 81       	ld	r24, Z
    1206:	28 2f       	mov	r18, r24
    1208:	08 2e       	mov	r0, r24
    120a:	00 0c       	add	r0, r0
    120c:	33 0b       	sbc	r19, r19
    120e:	3f 93       	push	r19
    1210:	8f 93       	push	r24
    1212:	81 e6       	ldi	r24, 0x61	; 97
    1214:	93 e0       	ldi	r25, 0x03	; 3
    1216:	9f 93       	push	r25
    1218:	8f 93       	push	r24
    121a:	0e 94 f3 19 	call	0x33e6	; 0x33e6 <printf>
    121e:	0f 90       	pop	r0
    1220:	0f 90       	pop	r0
    1222:	0f 90       	pop	r0
    1224:	0f 90       	pop	r0
    1226:	29 e0       	ldi	r18, 0x09	; 9
    1228:	30 e0       	ldi	r19, 0x00	; 0
    122a:	44 e8       	ldi	r20, 0x84	; 132
    122c:	53 e0       	ldi	r21, 0x03	; 3
    122e:	b3 01       	movw	r22, r6
    1230:	c7 01       	movw	r24, r14
    1232:	ea dc       	rcall	.-1580   	; 0xc08 <mem_mem>
    1234:	00 97       	sbiw	r24, 0x00	; 0
    1236:	09 f4       	brne	.+2      	; 0x123a <ParseReceived+0x5d0>
    1238:	76 c0       	rjmp	.+236    	; 0x1326 <ParseReceived+0x6bc>
    123a:	e8 16       	cp	r14, r24
    123c:	f9 06       	cpc	r15, r25
    123e:	09 f4       	brne	.+2      	; 0x1242 <ParseReceived+0x5d8>
    1240:	72 c0       	rjmp	.+228    	; 0x1326 <ParseReceived+0x6bc>
    1242:	97 01       	movw	r18, r14
    1244:	2f 5f       	subi	r18, 0xFF	; 255
    1246:	3f 4f       	sbci	r19, 0xFF	; 255
    1248:	82 17       	cp	r24, r18
    124a:	93 07       	cpc	r25, r19
    124c:	09 f0       	breq	.+2      	; 0x1250 <ParseReceived+0x5e6>
    124e:	62 c0       	rjmp	.+196    	; 0x1314 <ParseReceived+0x6aa>
    1250:	f7 01       	movw	r30, r14
    1252:	80 81       	ld	r24, Z
    1254:	90 e0       	ldi	r25, 0x00	; 0
    1256:	c0 97       	sbiw	r24, 0x30	; 48
    1258:	33 e4       	ldi	r19, 0x43	; 67
    125a:	38 9f       	mul	r19, r24
    125c:	f0 01       	movw	r30, r0
    125e:	39 9f       	mul	r19, r25
    1260:	f0 0d       	add	r31, r0
    1262:	11 24       	eor	r1, r1
    1264:	e0 0f       	add	r30, r16
    1266:	f1 1f       	adc	r31, r17
    1268:	df 01       	movw	r26, r30
    126a:	a6 5a       	subi	r26, 0xA6	; 166
    126c:	bf 4f       	sbci	r27, 0xFF	; 255
    126e:	2c 91       	ld	r18, X
    1270:	e8 5a       	subi	r30, 0xA8	; 168
    1272:	ff 4f       	sbci	r31, 0xFF	; 255
    1274:	40 81       	ld	r20, Z
    1276:	10 82       	st	Z, r1
    1278:	d7 01       	movw	r26, r14
    127a:	8c 91       	ld	r24, X
    127c:	90 e0       	ldi	r25, 0x00	; 0
    127e:	c0 97       	sbiw	r24, 0x30	; 48
    1280:	38 9f       	mul	r19, r24
    1282:	f0 01       	movw	r30, r0
    1284:	39 9f       	mul	r19, r25
    1286:	f0 0d       	add	r31, r0
    1288:	11 24       	eor	r1, r1
    128a:	e0 0f       	add	r30, r16
    128c:	f1 1f       	adc	r31, r17
    128e:	e6 5a       	subi	r30, 0xA6	; 166
    1290:	ff 4f       	sbci	r31, 0xFF	; 255
    1292:	10 82       	st	Z, r1
    1294:	8c 91       	ld	r24, X
    1296:	90 e0       	ldi	r25, 0x00	; 0
    1298:	c0 97       	sbiw	r24, 0x30	; 48
    129a:	38 9f       	mul	r19, r24
    129c:	f0 01       	movw	r30, r0
    129e:	39 9f       	mul	r19, r25
    12a0:	f0 0d       	add	r31, r0
    12a2:	11 24       	eor	r1, r1
    12a4:	e0 0f       	add	r30, r16
    12a6:	f1 1f       	adc	r31, r17
    12a8:	e7 56       	subi	r30, 0x67	; 103
    12aa:	ff 4f       	sbci	r31, 0xFF	; 255
    12ac:	10 82       	st	Z, r1
    12ae:	8c 91       	ld	r24, X
    12b0:	90 e0       	ldi	r25, 0x00	; 0
    12b2:	c0 97       	sbiw	r24, 0x30	; 48
    12b4:	38 9f       	mul	r19, r24
    12b6:	f0 01       	movw	r30, r0
    12b8:	39 9f       	mul	r19, r25
    12ba:	f0 0d       	add	r31, r0
    12bc:	11 24       	eor	r1, r1
    12be:	e0 0f       	add	r30, r16
    12c0:	f1 1f       	adc	r31, r17
    12c2:	e8 56       	subi	r30, 0x68	; 104
    12c4:	ff 4f       	sbci	r31, 0xFF	; 255
    12c6:	10 82       	st	Z, r1
    12c8:	44 23       	and	r20, r20
    12ca:	69 f1       	breq	.+90     	; 0x1326 <ParseReceived+0x6bc>
    12cc:	22 23       	and	r18, r18
    12ce:	89 f0       	breq	.+34     	; 0x12f2 <ParseReceived+0x688>
    12d0:	8c 91       	ld	r24, X
    12d2:	90 e0       	ldi	r25, 0x00	; 0
    12d4:	c0 97       	sbiw	r24, 0x30	; 48
    12d6:	23 e4       	ldi	r18, 0x43	; 67
    12d8:	28 9f       	mul	r18, r24
    12da:	b0 01       	movw	r22, r0
    12dc:	29 9f       	mul	r18, r25
    12de:	70 0d       	add	r23, r0
    12e0:	11 24       	eor	r1, r1
    12e2:	68 5a       	subi	r22, 0xA8	; 168
    12e4:	7f 4f       	sbci	r23, 0xFF	; 255
    12e6:	60 0f       	add	r22, r16
    12e8:	71 1f       	adc	r23, r17
    12ea:	c8 01       	movw	r24, r16
    12ec:	0e 94 e5 17 	call	0x2fca	; 0x2fca <ESP8266_Callback_ClientConnectionClosed>
    12f0:	1a c0       	rjmp	.+52     	; 0x1326 <ParseReceived+0x6bc>
    12f2:	f7 01       	movw	r30, r14
    12f4:	80 81       	ld	r24, Z
    12f6:	90 e0       	ldi	r25, 0x00	; 0
    12f8:	c0 97       	sbiw	r24, 0x30	; 48
    12fa:	23 e4       	ldi	r18, 0x43	; 67
    12fc:	28 9f       	mul	r18, r24
    12fe:	b0 01       	movw	r22, r0
    1300:	29 9f       	mul	r18, r25
    1302:	70 0d       	add	r23, r0
    1304:	11 24       	eor	r1, r1
    1306:	68 5a       	subi	r22, 0xA8	; 168
    1308:	7f 4f       	sbci	r23, 0xFF	; 255
    130a:	60 0f       	add	r22, r16
    130c:	71 1f       	adc	r23, r17
    130e:	c8 01       	movw	r24, r16
    1310:	26 dc       	rcall	.-1972   	; 0xb5e <ESP8266_Callback_ServerConnectionClosed>
    1312:	09 c0       	rjmp	.+18     	; 0x1326 <ParseReceived+0x6bc>
    1314:	bc 01       	movw	r22, r24
    1316:	61 50       	subi	r22, 0x01	; 1
    1318:	71 09       	sbc	r23, r1
    131a:	4a e0       	ldi	r20, 0x0A	; 10
    131c:	50 e0       	ldi	r21, 0x00	; 0
    131e:	8a e9       	ldi	r24, 0x9A	; 154
    1320:	96 e1       	ldi	r25, 0x16	; 22
    1322:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <BUFFER_Write>
    1326:	6e e8       	ldi	r22, 0x8E	; 142
    1328:	73 e0       	ldi	r23, 0x03	; 3
    132a:	c7 01       	movw	r24, r14
    132c:	0e 94 b2 19 	call	0x3364	; 0x3364 <strstr>
    1330:	00 97       	sbiw	r24, 0x00	; 0
    1332:	e9 f1       	breq	.+122    	; 0x13ae <ParseReceived+0x744>
    1334:	dc 01       	movw	r26, r24
    1336:	2e 91       	ld	r18, -X
    1338:	30 e0       	ldi	r19, 0x00	; 0
    133a:	a9 01       	movw	r20, r18
    133c:	40 53       	subi	r20, 0x30	; 48
    133e:	51 09       	sbc	r21, r1
    1340:	83 e4       	ldi	r24, 0x43	; 67
    1342:	84 9f       	mul	r24, r20
    1344:	90 01       	movw	r18, r0
    1346:	85 9f       	mul	r24, r21
    1348:	30 0d       	add	r19, r0
    134a:	11 24       	eor	r1, r1
    134c:	20 0f       	add	r18, r16
    134e:	31 1f       	adc	r19, r17
    1350:	f9 01       	movw	r30, r18
    1352:	e8 5a       	subi	r30, 0xA8	; 168
    1354:	ff 4f       	sbci	r31, 0xFF	; 255
    1356:	10 82       	st	Z, r1
    1358:	b9 01       	movw	r22, r18
    135a:	66 5a       	subi	r22, 0xA6	; 166
    135c:	7f 4f       	sbci	r23, 0xFF	; 255
    135e:	fb 01       	movw	r30, r22
    1360:	10 82       	st	Z, r1
    1362:	ff 96       	adiw	r30, 0x3f	; 63
    1364:	10 82       	st	Z, r1
    1366:	31 97       	sbiw	r30, 0x01	; 1
    1368:	10 82       	st	Z, r1
    136a:	ff 97       	sbiw	r30, 0x3f	; 63
    136c:	8c 91       	ld	r24, X
    136e:	80 53       	subi	r24, 0x30	; 48
    1370:	80 83       	st	Z, r24
    1372:	db 01       	movw	r26, r22
    1374:	8c 91       	ld	r24, X
    1376:	88 23       	and	r24, r24
    1378:	d1 f0       	breq	.+52     	; 0x13ae <ParseReceived+0x744>
    137a:	f8 01       	movw	r30, r16
    137c:	84 81       	ldd	r24, Z+4	; 0x04
    137e:	95 81       	ldd	r25, Z+5	; 0x05
    1380:	a6 81       	ldd	r26, Z+6	; 0x06
    1382:	b7 81       	ldd	r27, Z+7	; 0x07
    1384:	0a 97       	sbiw	r24, 0x0a	; 10
    1386:	a1 05       	cpc	r26, r1
    1388:	b1 05       	cpc	r27, r1
    138a:	21 f4       	brne	.+8      	; 0x1394 <ParseReceived+0x72a>
    138c:	14 82       	std	Z+4, r1	; 0x04
    138e:	15 82       	std	Z+5, r1	; 0x05
    1390:	16 82       	std	Z+6, r1	; 0x06
    1392:	17 82       	std	Z+7, r1	; 0x07
    1394:	83 e4       	ldi	r24, 0x43	; 67
    1396:	84 9f       	mul	r24, r20
    1398:	b0 01       	movw	r22, r0
    139a:	85 9f       	mul	r24, r21
    139c:	70 0d       	add	r23, r0
    139e:	11 24       	eor	r1, r1
    13a0:	68 5a       	subi	r22, 0xA8	; 168
    13a2:	7f 4f       	sbci	r23, 0xFF	; 255
    13a4:	60 0f       	add	r22, r16
    13a6:	71 1f       	adc	r23, r17
    13a8:	c8 01       	movw	r24, r16
    13aa:	0e 94 53 17 	call	0x2ea6	; 0x2ea6 <ESP8266_Callback_ClientConnectionError>
    13ae:	f8 01       	movw	r30, r16
    13b0:	84 81       	ldd	r24, Z+4	; 0x04
    13b2:	95 81       	ldd	r25, Z+5	; 0x05
    13b4:	a6 81       	ldd	r26, Z+6	; 0x06
    13b6:	b7 81       	ldd	r27, Z+7	; 0x07
    13b8:	fc 01       	movw	r30, r24
    13ba:	31 97       	sbiw	r30, 0x01	; 1
    13bc:	eb 31       	cpi	r30, 0x1B	; 27
    13be:	f1 05       	cpc	r31, r1
    13c0:	08 f0       	brcs	.+2      	; 0x13c4 <ParseReceived+0x75a>
    13c2:	21 c3       	rjmp	.+1602   	; 0x1a06 <ParseReceived+0xd9c>
    13c4:	88 27       	eor	r24, r24
    13c6:	ee 58       	subi	r30, 0x8E	; 142
    13c8:	ff 4f       	sbci	r31, 0xFF	; 255
    13ca:	8f 4f       	sbci	r24, 0xFF	; 255
    13cc:	0c 94 37 18 	jmp	0x306e	; 0x306e <__tablejump2__>
    13d0:	69 ed       	ldi	r22, 0xD9	; 217
    13d2:	72 e0       	ldi	r23, 0x02	; 2
    13d4:	c7 01       	movw	r24, r14
    13d6:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
    13da:	89 2b       	or	r24, r25
    13dc:	09 f0       	breq	.+2      	; 0x13e0 <ParseReceived+0x776>
    13de:	2d c3       	rjmp	.+1626   	; 0x1a3a <ParseReceived+0xdd0>
    13e0:	d8 01       	movw	r26, r16
    13e2:	14 96       	adiw	r26, 0x04	; 4
    13e4:	1d 92       	st	X+, r1
    13e6:	1d 92       	st	X+, r1
    13e8:	1d 92       	st	X+, r1
    13ea:	1c 92       	st	X, r1
    13ec:	17 97       	sbiw	r26, 0x07	; 7
    13ee:	0b c3       	rjmp	.+1558   	; 0x1a06 <ParseReceived+0xd9c>
    13f0:	47 e0       	ldi	r20, 0x07	; 7
    13f2:	50 e0       	ldi	r21, 0x00	; 0
    13f4:	6e e9       	ldi	r22, 0x9E	; 158
    13f6:	73 e0       	ldi	r23, 0x03	; 3
    13f8:	c7 01       	movw	r24, r14
    13fa:	0e 94 95 19 	call	0x332a	; 0x332a <strncmp>
    13fe:	89 2b       	or	r24, r25
    1400:	89 f4       	brne	.+34     	; 0x1424 <ParseReceived+0x7ba>
    1402:	87 e0       	ldi	r24, 0x07	; 7
    1404:	e7 e9       	ldi	r30, 0x97	; 151
    1406:	f3 e0       	ldi	r31, 0x03	; 3
    1408:	d8 01       	movw	r26, r16
    140a:	18 96       	adiw	r26, 0x08	; 8
    140c:	01 90       	ld	r0, Z+
    140e:	0d 92       	st	X+, r0
    1410:	8a 95       	dec	r24
    1412:	e1 f7       	brne	.-8      	; 0x140c <ParseReceived+0x7a2>
    1414:	f8 01       	movw	r30, r16
    1416:	eb 5e       	subi	r30, 0xEB	; 235
    1418:	fd 4f       	sbci	r31, 0xFD	; 253
    141a:	d7 01       	movw	r26, r14
    141c:	17 96       	adiw	r26, 0x07	; 7
    141e:	8c 91       	ld	r24, X
    1420:	80 53       	subi	r24, 0x30	; 48
    1422:	80 83       	st	Z, r24
    1424:	69 ed       	ldi	r22, 0xD9	; 217
    1426:	72 e0       	ldi	r23, 0x02	; 2
    1428:	c7 01       	movw	r24, r14
    142a:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
    142e:	89 2b       	or	r24, r25
    1430:	09 f0       	breq	.+2      	; 0x1434 <ParseReceived+0x7ca>
    1432:	31 c3       	rjmp	.+1634   	; 0x1a96 <ParseReceived+0xe2c>
    1434:	f8 01       	movw	r30, r16
    1436:	14 82       	std	Z+4, r1	; 0x04
    1438:	15 82       	std	Z+5, r1	; 0x05
    143a:	16 82       	std	Z+6, r1	; 0x06
    143c:	17 82       	std	Z+7, r1	; 0x07
    143e:	67 e9       	ldi	r22, 0x97	; 151
    1440:	73 e0       	ldi	r23, 0x03	; 3
    1442:	c7 01       	movw	r24, r14
    1444:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
    1448:	89 2b       	or	r24, r25
    144a:	09 f0       	breq	.+2      	; 0x144e <ParseReceived+0x7e4>
    144c:	dc c2       	rjmp	.+1464   	; 0x1a06 <ParseReceived+0xd9c>
    144e:	d8 01       	movw	r26, r16
    1450:	14 96       	adiw	r26, 0x04	; 4
    1452:	1d 92       	st	X+, r1
    1454:	1d 92       	st	X+, r1
    1456:	1d 92       	st	X+, r1
    1458:	1c 92       	st	X, r1
    145a:	17 97       	sbiw	r26, 0x07	; 7
    145c:	c8 01       	movw	r24, r16
    145e:	0e 94 f1 16 	call	0x2de2	; 0x2de2 <ESP8266_Callback_WifiConnectFailed>
    1462:	d1 c2       	rjmp	.+1442   	; 0x1a06 <ParseReceived+0xd9c>
    1464:	4b e0       	ldi	r20, 0x0B	; 11
    1466:	50 e0       	ldi	r21, 0x00	; 0
    1468:	66 ea       	ldi	r22, 0xA6	; 166
    146a:	73 e0       	ldi	r23, 0x03	; 3
    146c:	c7 01       	movw	r24, r14
    146e:	0e 94 95 19 	call	0x332a	; 0x332a <strncmp>
    1472:	89 2b       	or	r24, r25
    1474:	09 f0       	breq	.+2      	; 0x1478 <ParseReceived+0x80e>
    1476:	75 c0       	rjmp	.+234    	; 0x1562 <ParseReceived+0x8f8>
    1478:	62 eb       	ldi	r22, 0xB2	; 178
    147a:	73 e0       	ldi	r23, 0x03	; 3
    147c:	c7 01       	movw	r24, r14
    147e:	0e 94 b2 19 	call	0x3364	; 0x3364 <strstr>
    1482:	89 2b       	or	r24, r25
    1484:	09 f4       	brne	.+2      	; 0x1488 <ParseReceived+0x81e>
    1486:	6d c0       	rjmp	.+218    	; 0x1562 <ParseReceived+0x8f8>
    1488:	f7 01       	movw	r30, r14
    148a:	80 81       	ld	r24, Z
    148c:	88 23       	and	r24, r24
    148e:	51 f0       	breq	.+20     	; 0x14a4 <ParseReceived+0x83a>
    1490:	82 32       	cpi	r24, 0x22	; 34
    1492:	51 f0       	breq	.+20     	; 0x14a8 <ParseReceived+0x83e>
    1494:	31 96       	adiw	r30, 0x01	; 1
    1496:	df 01       	movw	r26, r30
    1498:	81 91       	ld	r24, Z+
    149a:	88 23       	and	r24, r24
    149c:	31 f0       	breq	.+12     	; 0x14aa <ParseReceived+0x840>
    149e:	82 32       	cpi	r24, 0x22	; 34
    14a0:	d1 f7       	brne	.-12     	; 0x1496 <ParseReceived+0x82c>
    14a2:	03 c0       	rjmp	.+6      	; 0x14aa <ParseReceived+0x840>
    14a4:	d7 01       	movw	r26, r14
    14a6:	01 c0       	rjmp	.+2      	; 0x14aa <ParseReceived+0x840>
    14a8:	d7 01       	movw	r26, r14
    14aa:	bd 01       	movw	r22, r26
    14ac:	6f 5f       	subi	r22, 0xFF	; 255
    14ae:	7f 4f       	sbci	r23, 0xFF	; 255
    14b0:	11 96       	adiw	r26, 0x01	; 1
    14b2:	8c 91       	ld	r24, X
    14b4:	11 97       	sbiw	r26, 0x01	; 1
    14b6:	88 23       	and	r24, r24
    14b8:	21 f1       	breq	.+72     	; 0x1502 <ParseReceived+0x898>
    14ba:	ad 01       	movw	r20, r26
    14bc:	4e 5f       	subi	r20, 0xFE	; 254
    14be:	5f 4f       	sbci	r21, 0xFF	; 255
    14c0:	13 96       	adiw	r26, 0x03	; 3
    14c2:	90 e0       	ldi	r25, 0x00	; 0
    14c4:	10 c0       	rjmp	.+32     	; 0x14e6 <ParseReceived+0x87c>
    14c6:	21 e0       	ldi	r18, 0x01	; 1
    14c8:	29 0f       	add	r18, r25
    14ca:	ba 01       	movw	r22, r20
    14cc:	f8 01       	movw	r30, r16
    14ce:	e9 0f       	add	r30, r25
    14d0:	f1 1d       	adc	r31, r1
    14d2:	e4 50       	subi	r30, 0x04	; 4
    14d4:	fe 4f       	sbci	r31, 0xFE	; 254
    14d6:	80 83       	st	Z, r24
    14d8:	fa 01       	movw	r30, r20
    14da:	81 91       	ld	r24, Z+
    14dc:	af 01       	movw	r20, r30
    14de:	11 96       	adiw	r26, 0x01	; 1
    14e0:	88 23       	and	r24, r24
    14e2:	81 f0       	breq	.+32     	; 0x1504 <ParseReceived+0x89a>
    14e4:	92 2f       	mov	r25, r18
    14e6:	ba 01       	movw	r22, r20
    14e8:	61 50       	subi	r22, 0x01	; 1
    14ea:	71 09       	sbc	r23, r1
    14ec:	82 32       	cpi	r24, 0x22	; 34
    14ee:	59 f7       	brne	.-42     	; 0x14c6 <ParseReceived+0x85c>
    14f0:	fa 01       	movw	r30, r20
    14f2:	20 81       	ld	r18, Z
    14f4:	2c 32       	cpi	r18, 0x2C	; 44
    14f6:	39 f7       	brne	.-50     	; 0x14c6 <ParseReceived+0x85c>
    14f8:	2c 91       	ld	r18, X
    14fa:	22 32       	cpi	r18, 0x22	; 34
    14fc:	21 f7       	brne	.-56     	; 0x14c6 <ParseReceived+0x85c>
    14fe:	29 2f       	mov	r18, r25
    1500:	01 c0       	rjmp	.+2      	; 0x1504 <ParseReceived+0x89a>
    1502:	20 e0       	ldi	r18, 0x00	; 0
    1504:	f8 01       	movw	r30, r16
    1506:	e2 0f       	add	r30, r18
    1508:	f1 1d       	adc	r31, r1
    150a:	e4 50       	subi	r30, 0x04	; 4
    150c:	fe 4f       	sbci	r31, 0xFE	; 254
    150e:	10 82       	st	Z, r1
    1510:	6b 01       	movw	r12, r22
    1512:	f3 e0       	ldi	r31, 0x03	; 3
    1514:	cf 0e       	add	r12, r31
    1516:	d1 1c       	adc	r13, r1
    1518:	ae 01       	movw	r20, r28
    151a:	4e 5f       	subi	r20, 0xFE	; 254
    151c:	5f 4f       	sbci	r21, 0xFF	; 255
    151e:	b8 01       	movw	r22, r16
    1520:	64 5f       	subi	r22, 0xF4	; 244
    1522:	7d 4f       	sbci	r23, 0xFD	; 253
    1524:	c6 01       	movw	r24, r12
    1526:	63 da       	rcall	.-2874   	; 0x9ee <ParseMAC>
    1528:	2a 81       	ldd	r18, Y+2	; 0x02
    152a:	30 e0       	ldi	r19, 0x00	; 0
    152c:	2e 5f       	subi	r18, 0xFE	; 254
    152e:	3f 4f       	sbci	r19, 0xFF	; 255
    1530:	c2 0e       	add	r12, r18
    1532:	d3 1e       	adc	r13, r19
    1534:	be 01       	movw	r22, r28
    1536:	6e 5f       	subi	r22, 0xFE	; 254
    1538:	7f 4f       	sbci	r23, 0xFF	; 255
    153a:	c6 01       	movw	r24, r12
    153c:	7a d8       	rcall	.-3852   	; 0x632 <ParseNumber>
    153e:	f8 01       	movw	r30, r16
    1540:	ee 5e       	subi	r30, 0xEE	; 238
    1542:	fd 4f       	sbci	r31, 0xFD	; 253
    1544:	60 83       	st	Z, r22
    1546:	8a 81       	ldd	r24, Y+2	; 0x02
    1548:	90 e0       	ldi	r25, 0x00	; 0
    154a:	01 96       	adiw	r24, 0x01	; 1
    154c:	be 01       	movw	r22, r28
    154e:	6e 5f       	subi	r22, 0xFE	; 254
    1550:	7f 4f       	sbci	r23, 0xFF	; 255
    1552:	8c 0d       	add	r24, r12
    1554:	9d 1d       	adc	r25, r13
    1556:	6d d8       	rcall	.-3878   	; 0x632 <ParseNumber>
    1558:	f8 01       	movw	r30, r16
    155a:	ed 5e       	subi	r30, 0xED	; 237
    155c:	fd 4f       	sbci	r31, 0xFD	; 253
    155e:	71 83       	std	Z+1, r23	; 0x01
    1560:	60 83       	st	Z, r22
    1562:	69 ed       	ldi	r22, 0xD9	; 217
    1564:	72 e0       	ldi	r23, 0x02	; 2
    1566:	c7 01       	movw	r24, r14
    1568:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
    156c:	89 2b       	or	r24, r25
    156e:	09 f0       	breq	.+2      	; 0x1572 <ParseReceived+0x908>
    1570:	64 c2       	rjmp	.+1224   	; 0x1a3a <ParseReceived+0xdd0>
    1572:	d8 01       	movw	r26, r16
    1574:	14 96       	adiw	r26, 0x04	; 4
    1576:	1d 92       	st	X+, r1
    1578:	1d 92       	st	X+, r1
    157a:	1d 92       	st	X+, r1
    157c:	1c 92       	st	X, r1
    157e:	17 97       	sbiw	r26, 0x07	; 7
    1580:	42 c2       	rjmp	.+1156   	; 0x1a06 <ParseReceived+0xd9c>
    1582:	46 e0       	ldi	r20, 0x06	; 6
    1584:	50 e0       	ldi	r21, 0x00	; 0
    1586:	61 e4       	ldi	r22, 0x41	; 65
    1588:	75 e0       	ldi	r23, 0x05	; 5
    158a:	c7 01       	movw	r24, r14
    158c:	0e 94 95 19 	call	0x332a	; 0x332a <strncmp>
    1590:	89 2b       	or	r24, r25
    1592:	09 f0       	breq	.+2      	; 0x1596 <ParseReceived+0x92c>
    1594:	bb c0       	rjmp	.+374    	; 0x170c <ParseReceived+0xaa2>
    1596:	f7 01       	movw	r30, r14
    1598:	80 81       	ld	r24, Z
    159a:	88 23       	and	r24, r24
    159c:	61 f0       	breq	.+24     	; 0x15b6 <ParseReceived+0x94c>
    159e:	8a 33       	cpi	r24, 0x3A	; 58
    15a0:	61 f0       	breq	.+24     	; 0x15ba <ParseReceived+0x950>
    15a2:	d7 01       	movw	r26, r14
    15a4:	11 96       	adiw	r26, 0x01	; 1
    15a6:	02 c0       	rjmp	.+4      	; 0x15ac <ParseReceived+0x942>
    15a8:	8a 33       	cpi	r24, 0x3A	; 58
    15aa:	41 f0       	breq	.+16     	; 0x15bc <ParseReceived+0x952>
    15ac:	fd 01       	movw	r30, r26
    15ae:	8d 91       	ld	r24, X+
    15b0:	81 11       	cpse	r24, r1
    15b2:	fa cf       	rjmp	.-12     	; 0x15a8 <ParseReceived+0x93e>
    15b4:	03 c0       	rjmp	.+6      	; 0x15bc <ParseReceived+0x952>
    15b6:	f7 01       	movw	r30, r14
    15b8:	01 c0       	rjmp	.+2      	; 0x15bc <ParseReceived+0x952>
    15ba:	f7 01       	movw	r30, r14
    15bc:	30 97       	sbiw	r30, 0x00	; 0
    15be:	09 f4       	brne	.+2      	; 0x15c2 <ParseReceived+0x958>
    15c0:	a5 c0       	rjmp	.+330    	; 0x170c <ParseReceived+0xaa2>
    15c2:	d8 01       	movw	r26, r16
    15c4:	a3 53       	subi	r26, 0x33	; 51
    15c6:	be 4f       	sbci	r27, 0xFE	; 254
    15c8:	1c 92       	st	X, r1
    15ca:	81 81       	ldd	r24, Z+1	; 0x01
    15cc:	82 32       	cpi	r24, 0x22	; 34
    15ce:	29 f0       	breq	.+10     	; 0x15da <ParseReceived+0x970>
    15d0:	6f 01       	movw	r12, r30
    15d2:	2f ef       	ldi	r18, 0xFF	; 255
    15d4:	c2 1a       	sub	r12, r18
    15d6:	d2 0a       	sbc	r13, r18
    15d8:	04 c0       	rjmp	.+8      	; 0x15e2 <ParseReceived+0x978>
    15da:	6f 01       	movw	r12, r30
    15dc:	32 e0       	ldi	r19, 0x02	; 2
    15de:	c3 0e       	add	r12, r19
    15e0:	d1 1c       	adc	r13, r1
    15e2:	d6 01       	movw	r26, r12
    15e4:	8c 91       	ld	r24, X
    15e6:	88 23       	and	r24, r24
    15e8:	29 f1       	breq	.+74     	; 0x1634 <ParseReceived+0x9ca>
    15ea:	11 96       	adiw	r26, 0x01	; 1
    15ec:	b6 01       	movw	r22, r12
    15ee:	6e 5f       	subi	r22, 0xFE	; 254
    15f0:	7f 4f       	sbci	r23, 0xFF	; 255
    15f2:	90 e0       	ldi	r25, 0x00	; 0
    15f4:	10 c0       	rjmp	.+32     	; 0x1616 <ParseReceived+0x9ac>
    15f6:	41 e0       	ldi	r20, 0x01	; 1
    15f8:	49 0f       	add	r20, r25
    15fa:	6d 01       	movw	r12, r26
    15fc:	98 01       	movw	r18, r16
    15fe:	29 0f       	add	r18, r25
    1600:	31 1d       	adc	r19, r1
    1602:	23 53       	subi	r18, 0x33	; 51
    1604:	3e 4f       	sbci	r19, 0xFE	; 254
    1606:	f9 01       	movw	r30, r18
    1608:	80 83       	st	Z, r24
    160a:	8d 91       	ld	r24, X+
    160c:	6f 5f       	subi	r22, 0xFF	; 255
    160e:	7f 4f       	sbci	r23, 0xFF	; 255
    1610:	88 23       	and	r24, r24
    1612:	89 f0       	breq	.+34     	; 0x1636 <ParseReceived+0x9cc>
    1614:	94 2f       	mov	r25, r20
    1616:	6d 01       	movw	r12, r26
    1618:	f1 e0       	ldi	r31, 0x01	; 1
    161a:	cf 1a       	sub	r12, r31
    161c:	d1 08       	sbc	r13, r1
    161e:	82 32       	cpi	r24, 0x22	; 34
    1620:	51 f7       	brne	.-44     	; 0x15f6 <ParseReceived+0x98c>
    1622:	2c 91       	ld	r18, X
    1624:	2c 32       	cpi	r18, 0x2C	; 44
    1626:	39 f7       	brne	.-50     	; 0x15f6 <ParseReceived+0x98c>
    1628:	fb 01       	movw	r30, r22
    162a:	20 81       	ld	r18, Z
    162c:	22 32       	cpi	r18, 0x22	; 34
    162e:	19 f7       	brne	.-58     	; 0x15f6 <ParseReceived+0x98c>
    1630:	49 2f       	mov	r20, r25
    1632:	01 c0       	rjmp	.+2      	; 0x1636 <ParseReceived+0x9cc>
    1634:	40 e0       	ldi	r20, 0x00	; 0
    1636:	d8 01       	movw	r26, r16
    1638:	a4 0f       	add	r26, r20
    163a:	b1 1d       	adc	r27, r1
    163c:	a3 53       	subi	r26, 0x33	; 51
    163e:	be 4f       	sbci	r27, 0xFE	; 254
    1640:	1c 92       	st	X, r1
    1642:	a6 01       	movw	r20, r12
    1644:	4d 5f       	subi	r20, 0xFD	; 253
    1646:	5f 4f       	sbci	r21, 0xFF	; 255
    1648:	d6 01       	movw	r26, r12
    164a:	13 96       	adiw	r26, 0x03	; 3
    164c:	8c 91       	ld	r24, X
    164e:	88 23       	and	r24, r24
    1650:	d9 f0       	breq	.+54     	; 0x1688 <ParseReceived+0xa1e>
    1652:	f6 01       	movw	r30, r12
    1654:	34 96       	adiw	r30, 0x04	; 4
    1656:	90 e0       	ldi	r25, 0x00	; 0
    1658:	0d c0       	rjmp	.+26     	; 0x1674 <ParseReceived+0xa0a>
    165a:	21 e0       	ldi	r18, 0x01	; 1
    165c:	29 0f       	add	r18, r25
    165e:	af 01       	movw	r20, r30
    1660:	d8 01       	movw	r26, r16
    1662:	a9 0f       	add	r26, r25
    1664:	b1 1d       	adc	r27, r1
    1666:	af 51       	subi	r26, 0x1F	; 31
    1668:	be 4f       	sbci	r27, 0xFE	; 254
    166a:	8c 93       	st	X, r24
    166c:	81 91       	ld	r24, Z+
    166e:	88 23       	and	r24, r24
    1670:	61 f0       	breq	.+24     	; 0x168a <ParseReceived+0xa20>
    1672:	92 2f       	mov	r25, r18
    1674:	af 01       	movw	r20, r30
    1676:	41 50       	subi	r20, 0x01	; 1
    1678:	51 09       	sbc	r21, r1
    167a:	82 32       	cpi	r24, 0x22	; 34
    167c:	71 f7       	brne	.-36     	; 0x165a <ParseReceived+0x9f0>
    167e:	20 81       	ld	r18, Z
    1680:	2c 32       	cpi	r18, 0x2C	; 44
    1682:	59 f7       	brne	.-42     	; 0x165a <ParseReceived+0x9f0>
    1684:	29 2f       	mov	r18, r25
    1686:	01 c0       	rjmp	.+2      	; 0x168a <ParseReceived+0xa20>
    1688:	20 e0       	ldi	r18, 0x00	; 0
    168a:	f8 01       	movw	r30, r16
    168c:	e2 0f       	add	r30, r18
    168e:	f1 1d       	adc	r31, r1
    1690:	ef 51       	subi	r30, 0x1F	; 31
    1692:	fe 4f       	sbci	r31, 0xFE	; 254
    1694:	10 82       	st	Z, r1
    1696:	6a 01       	movw	r12, r20
    1698:	b2 e0       	ldi	r27, 0x02	; 2
    169a:	cb 0e       	add	r12, r27
    169c:	d1 1c       	adc	r13, r1
    169e:	be 01       	movw	r22, r28
    16a0:	6e 5f       	subi	r22, 0xFE	; 254
    16a2:	7f 4f       	sbci	r23, 0xFF	; 255
    16a4:	c6 01       	movw	r24, r12
    16a6:	0e 94 19 03 	call	0x632	; 0x632 <ParseNumber>
    16aa:	f8 01       	movw	r30, r16
    16ac:	ee 50       	subi	r30, 0x0E	; 14
    16ae:	fe 4f       	sbci	r31, 0xFE	; 254
    16b0:	60 83       	st	Z, r22
    16b2:	4a 81       	ldd	r20, Y+2	; 0x02
    16b4:	50 e0       	ldi	r21, 0x00	; 0
    16b6:	4f 5f       	subi	r20, 0xFF	; 255
    16b8:	5f 4f       	sbci	r21, 0xFF	; 255
    16ba:	c4 0e       	add	r12, r20
    16bc:	d5 1e       	adc	r13, r21
    16be:	be 01       	movw	r22, r28
    16c0:	6e 5f       	subi	r22, 0xFE	; 254
    16c2:	7f 4f       	sbci	r23, 0xFF	; 255
    16c4:	c6 01       	movw	r24, r12
    16c6:	0e 94 19 03 	call	0x632	; 0x632 <ParseNumber>
    16ca:	f8 01       	movw	r30, r16
    16cc:	ef 50       	subi	r30, 0x0F	; 15
    16ce:	fe 4f       	sbci	r31, 0xFE	; 254
    16d0:	60 83       	st	Z, r22
    16d2:	8a 81       	ldd	r24, Y+2	; 0x02
    16d4:	90 e0       	ldi	r25, 0x00	; 0
    16d6:	01 96       	adiw	r24, 0x01	; 1
    16d8:	c8 0e       	add	r12, r24
    16da:	d9 1e       	adc	r13, r25
    16dc:	be 01       	movw	r22, r28
    16de:	6e 5f       	subi	r22, 0xFE	; 254
    16e0:	7f 4f       	sbci	r23, 0xFF	; 255
    16e2:	c6 01       	movw	r24, r12
    16e4:	0e 94 19 03 	call	0x632	; 0x632 <ParseNumber>
    16e8:	f8 01       	movw	r30, r16
    16ea:	ed 50       	subi	r30, 0x0D	; 13
    16ec:	fe 4f       	sbci	r31, 0xFE	; 254
    16ee:	60 83       	st	Z, r22
    16f0:	8a 81       	ldd	r24, Y+2	; 0x02
    16f2:	90 e0       	ldi	r25, 0x00	; 0
    16f4:	01 96       	adiw	r24, 0x01	; 1
    16f6:	be 01       	movw	r22, r28
    16f8:	6e 5f       	subi	r22, 0xFE	; 254
    16fa:	7f 4f       	sbci	r23, 0xFF	; 255
    16fc:	8c 0d       	add	r24, r12
    16fe:	9d 1d       	adc	r25, r13
    1700:	0e 94 19 03 	call	0x632	; 0x632 <ParseNumber>
    1704:	f8 01       	movw	r30, r16
    1706:	ec 50       	subi	r30, 0x0C	; 12
    1708:	fe 4f       	sbci	r31, 0xFE	; 254
    170a:	60 83       	st	Z, r22
    170c:	69 ed       	ldi	r22, 0xD9	; 217
    170e:	72 e0       	ldi	r23, 0x02	; 2
    1710:	c7 01       	movw	r24, r14
    1712:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
    1716:	89 2b       	or	r24, r25
    1718:	09 f0       	breq	.+2      	; 0x171c <ParseReceived+0xab2>
    171a:	8f c1       	rjmp	.+798    	; 0x1a3a <ParseReceived+0xdd0>
    171c:	f8 01       	movw	r30, r16
    171e:	14 82       	std	Z+4, r1	; 0x04
    1720:	15 82       	std	Z+5, r1	; 0x05
    1722:	16 82       	std	Z+6, r1	; 0x06
    1724:	17 82       	std	Z+7, r1	; 0x07
    1726:	6f c1       	rjmp	.+734    	; 0x1a06 <ParseReceived+0xd9c>
    1728:	47 e0       	ldi	r20, 0x07	; 7
    172a:	50 e0       	ldi	r21, 0x00	; 0
    172c:	6a eb       	ldi	r22, 0xBA	; 186
    172e:	73 e0       	ldi	r23, 0x03	; 3
    1730:	c7 01       	movw	r24, r14
    1732:	0e 94 95 19 	call	0x332a	; 0x332a <strncmp>
    1736:	89 2b       	or	r24, r25
    1738:	19 f4       	brne	.+6      	; 0x1740 <ParseReceived+0xad6>
    173a:	b7 01       	movw	r22, r14
    173c:	c8 01       	movw	r24, r16
    173e:	62 d8       	rcall	.-3900   	; 0x804 <ParseCIPSTA>
    1740:	69 ed       	ldi	r22, 0xD9	; 217
    1742:	72 e0       	ldi	r23, 0x02	; 2
    1744:	c7 01       	movw	r24, r14
    1746:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
    174a:	89 2b       	or	r24, r25
    174c:	09 f0       	breq	.+2      	; 0x1750 <ParseReceived+0xae6>
    174e:	75 c1       	rjmp	.+746    	; 0x1a3a <ParseReceived+0xdd0>
    1750:	d8 01       	movw	r26, r16
    1752:	14 96       	adiw	r26, 0x04	; 4
    1754:	1d 92       	st	X+, r1
    1756:	1d 92       	st	X+, r1
    1758:	1d 92       	st	X+, r1
    175a:	1c 92       	st	X, r1
    175c:	17 97       	sbiw	r26, 0x07	; 7
    175e:	c8 01       	movw	r24, r16
    1760:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <ESP8266_Callback_WifiIPSet>
    1764:	50 c1       	rjmp	.+672    	; 0x1a06 <ParseReceived+0xd9c>
    1766:	46 e0       	ldi	r20, 0x06	; 6
    1768:	50 e0       	ldi	r21, 0x00	; 0
    176a:	62 ec       	ldi	r22, 0xC2	; 194
    176c:	73 e0       	ldi	r23, 0x03	; 3
    176e:	c7 01       	movw	r24, r14
    1770:	0e 94 95 19 	call	0x332a	; 0x332a <strncmp>
    1774:	89 2b       	or	r24, r25
    1776:	19 f4       	brne	.+6      	; 0x177e <ParseReceived+0xb14>
    1778:	b7 01       	movw	r22, r14
    177a:	c8 01       	movw	r24, r16
    177c:	43 d8       	rcall	.-3962   	; 0x804 <ParseCIPSTA>
    177e:	69 ed       	ldi	r22, 0xD9	; 217
    1780:	72 e0       	ldi	r23, 0x02	; 2
    1782:	c7 01       	movw	r24, r14
    1784:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
    1788:	89 2b       	or	r24, r25
    178a:	09 f0       	breq	.+2      	; 0x178e <ParseReceived+0xb24>
    178c:	56 c1       	rjmp	.+684    	; 0x1a3a <ParseReceived+0xdd0>
    178e:	f8 01       	movw	r30, r16
    1790:	14 82       	std	Z+4, r1	; 0x04
    1792:	15 82       	std	Z+5, r1	; 0x05
    1794:	16 82       	std	Z+6, r1	; 0x06
    1796:	17 82       	std	Z+7, r1	; 0x07
    1798:	36 c1       	rjmp	.+620    	; 0x1a06 <ParseReceived+0xd9c>
    179a:	69 ed       	ldi	r22, 0xD9	; 217
    179c:	72 e0       	ldi	r23, 0x02	; 2
    179e:	c7 01       	movw	r24, r14
    17a0:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
    17a4:	89 2b       	or	r24, r25
    17a6:	09 f0       	breq	.+2      	; 0x17aa <ParseReceived+0xb40>
    17a8:	48 c1       	rjmp	.+656    	; 0x1a3a <ParseReceived+0xdd0>
    17aa:	d8 01       	movw	r26, r16
    17ac:	14 96       	adiw	r26, 0x04	; 4
    17ae:	1d 92       	st	X+, r1
    17b0:	1d 92       	st	X+, r1
    17b2:	1d 92       	st	X+, r1
    17b4:	1c 92       	st	X, r1
    17b6:	17 97       	sbiw	r26, 0x07	; 7
    17b8:	f8 01       	movw	r30, r16
    17ba:	e5 53       	subi	r30, 0x35	; 53
    17bc:	fe 4f       	sbci	r31, 0xFE	; 254
    17be:	80 81       	ld	r24, Z
    17c0:	31 96       	adiw	r30, 0x01	; 1
    17c2:	80 83       	st	Z, r24
    17c4:	20 c1       	rjmp	.+576    	; 0x1a06 <ParseReceived+0xd9c>
    17c6:	69 ed       	ldi	r22, 0xD9	; 217
    17c8:	72 e0       	ldi	r23, 0x02	; 2
    17ca:	c7 01       	movw	r24, r14
    17cc:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
    17d0:	89 2b       	or	r24, r25
    17d2:	09 f0       	breq	.+2      	; 0x17d6 <ParseReceived+0xb6c>
    17d4:	32 c1       	rjmp	.+612    	; 0x1a3a <ParseReceived+0xdd0>
    17d6:	f8 01       	movw	r30, r16
    17d8:	14 82       	std	Z+4, r1	; 0x04
    17da:	15 82       	std	Z+5, r1	; 0x05
    17dc:	16 82       	std	Z+6, r1	; 0x06
    17de:	17 82       	std	Z+7, r1	; 0x07
    17e0:	12 c1       	rjmp	.+548    	; 0x1a06 <ParseReceived+0xd9c>
    17e2:	69 ed       	ldi	r22, 0xD9	; 217
    17e4:	72 e0       	ldi	r23, 0x02	; 2
    17e6:	c7 01       	movw	r24, r14
    17e8:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
    17ec:	89 2b       	or	r24, r25
    17ee:	09 f0       	breq	.+2      	; 0x17f2 <ParseReceived+0xb88>
    17f0:	24 c1       	rjmp	.+584    	; 0x1a3a <ParseReceived+0xdd0>
    17f2:	8d e1       	ldi	r24, 0x1D	; 29
    17f4:	90 e0       	ldi	r25, 0x00	; 0
    17f6:	a0 e0       	ldi	r26, 0x00	; 0
    17f8:	b0 e0       	ldi	r27, 0x00	; 0
    17fa:	f8 01       	movw	r30, r16
    17fc:	84 83       	std	Z+4, r24	; 0x04
    17fe:	95 83       	std	Z+5, r25	; 0x05
    1800:	a6 83       	std	Z+6, r26	; 0x06
    1802:	b7 83       	std	Z+7, r27	; 0x07
    1804:	ea 57       	subi	r30, 0x7A	; 122
    1806:	fd 4f       	sbci	r31, 0xFD	; 253
    1808:	81 81       	ldd	r24, Z+1	; 0x01
    180a:	81 60       	ori	r24, 0x01	; 1
    180c:	81 83       	std	Z+1, r24	; 0x01
    180e:	88 e0       	ldi	r24, 0x08	; 8
    1810:	e9 ec       	ldi	r30, 0xC9	; 201
    1812:	f3 e0       	ldi	r31, 0x03	; 3
    1814:	d8 01       	movw	r26, r16
    1816:	18 96       	adiw	r26, 0x08	; 8
    1818:	01 90       	ld	r0, Z+
    181a:	0d 92       	st	X+, r0
    181c:	8a 95       	dec	r24
    181e:	e1 f7       	brne	.-8      	; 0x1818 <ParseReceived+0xbae>
    1820:	f2 c0       	rjmp	.+484    	; 0x1a06 <ParseReceived+0xd9c>
    1822:	69 ed       	ldi	r22, 0xD9	; 217
    1824:	72 e0       	ldi	r23, 0x02	; 2
    1826:	c7 01       	movw	r24, r14
    1828:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
    182c:	89 2b       	or	r24, r25
    182e:	09 f0       	breq	.+2      	; 0x1832 <ParseReceived+0xbc8>
    1830:	43 c1       	rjmp	.+646    	; 0x1ab8 <ParseReceived+0xe4e>
    1832:	d8 01       	movw	r26, r16
    1834:	14 96       	adiw	r26, 0x04	; 4
    1836:	1d 92       	st	X+, r1
    1838:	1d 92       	st	X+, r1
    183a:	1d 92       	st	X+, r1
    183c:	1c 92       	st	X, r1
    183e:	17 97       	sbiw	r26, 0x07	; 7
    1840:	6e ed       	ldi	r22, 0xDE	; 222
    1842:	72 e0       	ldi	r23, 0x02	; 2
    1844:	c7 01       	movw	r24, r14
    1846:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
    184a:	89 2b       	or	r24, r25
    184c:	09 f0       	breq	.+2      	; 0x1850 <ParseReceived+0xbe6>
    184e:	2b c1       	rjmp	.+598    	; 0x1aa6 <ParseReceived+0xe3c>
    1850:	f8 01       	movw	r30, r16
    1852:	14 82       	std	Z+4, r1	; 0x04
    1854:	15 82       	std	Z+5, r1	; 0x05
    1856:	16 82       	std	Z+6, r1	; 0x06
    1858:	17 82       	std	Z+7, r1	; 0x07
    185a:	ea 5e       	subi	r30, 0xEA	; 234
    185c:	fd 4f       	sbci	r31, 0xFD	; 253
    185e:	80 81       	ld	r24, Z
    1860:	f3 e4       	ldi	r31, 0x43	; 67
    1862:	8f 02       	muls	r24, r31
    1864:	c0 01       	movw	r24, r0
    1866:	11 24       	eor	r1, r1
    1868:	98 01       	movw	r18, r16
    186a:	28 0f       	add	r18, r24
    186c:	39 1f       	adc	r19, r25
    186e:	f9 01       	movw	r30, r18
    1870:	e8 5a       	subi	r30, 0xA8	; 168
    1872:	ff 4f       	sbci	r31, 0xFF	; 255
    1874:	10 82       	st	Z, r1
    1876:	32 96       	adiw	r30, 0x02	; 2
    1878:	10 82       	st	Z, r1
    187a:	ff 96       	adiw	r30, 0x3f	; 63
    187c:	10 82       	st	Z, r1
    187e:	31 97       	sbiw	r30, 0x01	; 1
    1880:	10 82       	st	Z, r1
    1882:	bc 01       	movw	r22, r24
    1884:	68 5a       	subi	r22, 0xA8	; 168
    1886:	7f 4f       	sbci	r23, 0xFF	; 255
    1888:	60 0f       	add	r22, r16
    188a:	71 1f       	adc	r23, r17
    188c:	c8 01       	movw	r24, r16
    188e:	0e 94 53 17 	call	0x2ea6	; 0x2ea6 <ESP8266_Callback_ClientConnectionError>
    1892:	b9 c0       	rjmp	.+370    	; 0x1a06 <ParseReceived+0xd9c>
    1894:	69 ed       	ldi	r22, 0xD9	; 217
    1896:	72 e0       	ldi	r23, 0x02	; 2
    1898:	c7 01       	movw	r24, r14
    189a:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
    189e:	89 2b       	or	r24, r25
    18a0:	09 f0       	breq	.+2      	; 0x18a4 <ParseReceived+0xc3a>
    18a2:	cb c0       	rjmp	.+406    	; 0x1a3a <ParseReceived+0xdd0>
    18a4:	d8 01       	movw	r26, r16
    18a6:	14 96       	adiw	r26, 0x04	; 4
    18a8:	1d 92       	st	X+, r1
    18aa:	1d 92       	st	X+, r1
    18ac:	1d 92       	st	X+, r1
    18ae:	1c 92       	st	X, r1
    18b0:	17 97       	sbiw	r26, 0x07	; 7
    18b2:	a9 c0       	rjmp	.+338    	; 0x1a06 <ParseReceived+0xd9c>
    18b4:	66 ee       	ldi	r22, 0xE6	; 230
    18b6:	72 e0       	ldi	r23, 0x02	; 2
    18b8:	c7 01       	movw	r24, r14
    18ba:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
    18be:	89 2b       	or	r24, r25
    18c0:	09 f0       	breq	.+2      	; 0x18c4 <ParseReceived+0xc5a>
    18c2:	a1 c0       	rjmp	.+322    	; 0x1a06 <ParseReceived+0xd9c>
    18c4:	f8 01       	movw	r30, r16
    18c6:	14 82       	std	Z+4, r1	; 0x04
    18c8:	15 82       	std	Z+5, r1	; 0x05
    18ca:	16 82       	std	Z+6, r1	; 0x06
    18cc:	17 82       	std	Z+7, r1	; 0x07
    18ce:	ea 57       	subi	r30, 0x7A	; 122
    18d0:	fd 4f       	sbci	r31, 0xFD	; 253
    18d2:	81 81       	ldd	r24, Z+1	; 0x01
    18d4:	82 60       	ori	r24, 0x02	; 2
    18d6:	81 83       	std	Z+1, r24	; 0x01
    18d8:	96 c0       	rjmp	.+300    	; 0x1a06 <ParseReceived+0xd9c>
    18da:	4a e0       	ldi	r20, 0x0A	; 10
    18dc:	50 e0       	ldi	r21, 0x00	; 0
    18de:	61 ed       	ldi	r22, 0xD1	; 209
    18e0:	73 e0       	ldi	r23, 0x03	; 3
    18e2:	c7 01       	movw	r24, r14
    18e4:	0e 94 95 19 	call	0x332a	; 0x332a <strncmp>
    18e8:	89 2b       	or	r24, r25
    18ea:	41 f4       	brne	.+16     	; 0x18fc <ParseReceived+0xc92>
    18ec:	40 e0       	ldi	r20, 0x00	; 0
    18ee:	50 e0       	ldi	r21, 0x00	; 0
    18f0:	b8 01       	movw	r22, r16
    18f2:	6d 54       	subi	r22, 0x4D	; 77
    18f4:	7e 4f       	sbci	r23, 0xFE	; 254
    18f6:	c7 01       	movw	r24, r14
    18f8:	0c 96       	adiw	r24, 0x0c	; 12
    18fa:	79 d8       	rcall	.-3854   	; 0x9ee <ParseMAC>
    18fc:	69 ed       	ldi	r22, 0xD9	; 217
    18fe:	72 e0       	ldi	r23, 0x02	; 2
    1900:	c7 01       	movw	r24, r14
    1902:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
    1906:	89 2b       	or	r24, r25
    1908:	09 f0       	breq	.+2      	; 0x190c <ParseReceived+0xca2>
    190a:	97 c0       	rjmp	.+302    	; 0x1a3a <ParseReceived+0xdd0>
    190c:	d8 01       	movw	r26, r16
    190e:	14 96       	adiw	r26, 0x04	; 4
    1910:	1d 92       	st	X+, r1
    1912:	1d 92       	st	X+, r1
    1914:	1d 92       	st	X+, r1
    1916:	1c 92       	st	X, r1
    1918:	17 97       	sbiw	r26, 0x07	; 7
    191a:	75 c0       	rjmp	.+234    	; 0x1a06 <ParseReceived+0xd9c>
    191c:	49 e0       	ldi	r20, 0x09	; 9
    191e:	50 e0       	ldi	r21, 0x00	; 0
    1920:	6c ed       	ldi	r22, 0xDC	; 220
    1922:	73 e0       	ldi	r23, 0x03	; 3
    1924:	c7 01       	movw	r24, r14
    1926:	0e 94 95 19 	call	0x332a	; 0x332a <strncmp>
    192a:	89 2b       	or	r24, r25
    192c:	41 f4       	brne	.+16     	; 0x193e <ParseReceived+0xcd4>
    192e:	40 e0       	ldi	r20, 0x00	; 0
    1930:	50 e0       	ldi	r21, 0x00	; 0
    1932:	b8 01       	movw	r22, r16
    1934:	6b 53       	subi	r22, 0x3B	; 59
    1936:	7e 4f       	sbci	r23, 0xFE	; 254
    1938:	c7 01       	movw	r24, r14
    193a:	0b 96       	adiw	r24, 0x0b	; 11
    193c:	58 d8       	rcall	.-3920   	; 0x9ee <ParseMAC>
    193e:	69 ed       	ldi	r22, 0xD9	; 217
    1940:	72 e0       	ldi	r23, 0x02	; 2
    1942:	c7 01       	movw	r24, r14
    1944:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
    1948:	89 2b       	or	r24, r25
    194a:	09 f0       	breq	.+2      	; 0x194e <ParseReceived+0xce4>
    194c:	76 c0       	rjmp	.+236    	; 0x1a3a <ParseReceived+0xdd0>
    194e:	f8 01       	movw	r30, r16
    1950:	14 82       	std	Z+4, r1	; 0x04
    1952:	15 82       	std	Z+5, r1	; 0x05
    1954:	16 82       	std	Z+6, r1	; 0x06
    1956:	17 82       	std	Z+7, r1	; 0x07
    1958:	56 c0       	rjmp	.+172    	; 0x1a06 <ParseReceived+0xd9c>
    195a:	d7 01       	movw	r26, r14
    195c:	8c 91       	ld	r24, X
    195e:	80 53       	subi	r24, 0x30	; 48
    1960:	8a 30       	cpi	r24, 0x0A	; 10
    1962:	08 f0       	brcs	.+2      	; 0x1966 <ParseReceived+0xcfc>
    1964:	3f c0       	rjmp	.+126    	; 0x19e4 <ParseReceived+0xd7a>
    1966:	f8 01       	movw	r30, r16
    1968:	e5 58       	subi	r30, 0x85	; 133
    196a:	fd 4f       	sbci	r31, 0xFD	; 253
    196c:	80 81       	ld	r24, Z
    196e:	8a 30       	cpi	r24, 0x0A	; 10
    1970:	c8 f5       	brcc	.+114    	; 0x19e4 <ParseReceived+0xd7a>
    1972:	90 e0       	ldi	r25, 0x00	; 0
    1974:	bc 01       	movw	r22, r24
    1976:	66 0f       	add	r22, r22
    1978:	77 1f       	adc	r23, r23
    197a:	88 0f       	add	r24, r24
    197c:	99 1f       	adc	r25, r25
    197e:	88 0f       	add	r24, r24
    1980:	99 1f       	adc	r25, r25
    1982:	88 0f       	add	r24, r24
    1984:	99 1f       	adc	r25, r25
    1986:	68 0f       	add	r22, r24
    1988:	79 1f       	adc	r23, r25
    198a:	69 5e       	subi	r22, 0xE9	; 233
    198c:	7d 4f       	sbci	r23, 0xFD	; 253
    198e:	60 0f       	add	r22, r16
    1990:	71 1f       	adc	r23, r17
    1992:	ae 01       	movw	r20, r28
    1994:	4e 5f       	subi	r20, 0xFE	; 254
    1996:	5f 4f       	sbci	r21, 0xFF	; 255
    1998:	c7 01       	movw	r24, r14
    199a:	0e 94 a5 03 	call	0x74a	; 0x74a <ParseIP>
    199e:	68 01       	movw	r12, r16
    19a0:	b5 e8       	ldi	r27, 0x85	; 133
    19a2:	cb 1a       	sub	r12, r27
    19a4:	bd ef       	ldi	r27, 0xFD	; 253
    19a6:	db 0a       	sbc	r13, r27
    19a8:	f6 01       	movw	r30, r12
    19aa:	80 81       	ld	r24, Z
    19ac:	90 e0       	ldi	r25, 0x00	; 0
    19ae:	bc 01       	movw	r22, r24
    19b0:	66 0f       	add	r22, r22
    19b2:	77 1f       	adc	r23, r23
    19b4:	88 0f       	add	r24, r24
    19b6:	99 1f       	adc	r25, r25
    19b8:	88 0f       	add	r24, r24
    19ba:	99 1f       	adc	r25, r25
    19bc:	88 0f       	add	r24, r24
    19be:	99 1f       	adc	r25, r25
    19c0:	68 0f       	add	r22, r24
    19c2:	79 1f       	adc	r23, r25
    19c4:	65 5e       	subi	r22, 0xE5	; 229
    19c6:	7d 4f       	sbci	r23, 0xFD	; 253
    19c8:	60 0f       	add	r22, r16
    19ca:	71 1f       	adc	r23, r17
    19cc:	8a 81       	ldd	r24, Y+2	; 0x02
    19ce:	90 e0       	ldi	r25, 0x00	; 0
    19d0:	01 96       	adiw	r24, 0x01	; 1
    19d2:	40 e0       	ldi	r20, 0x00	; 0
    19d4:	50 e0       	ldi	r21, 0x00	; 0
    19d6:	8e 0d       	add	r24, r14
    19d8:	9f 1d       	adc	r25, r15
    19da:	09 d8       	rcall	.-4078   	; 0x9ee <ParseMAC>
    19dc:	d6 01       	movw	r26, r12
    19de:	8c 91       	ld	r24, X
    19e0:	8f 5f       	subi	r24, 0xFF	; 255
    19e2:	8c 93       	st	X, r24
    19e4:	69 ed       	ldi	r22, 0xD9	; 217
    19e6:	72 e0       	ldi	r23, 0x02	; 2
    19e8:	c7 01       	movw	r24, r14
    19ea:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
    19ee:	89 2b       	or	r24, r25
    19f0:	21 f5       	brne	.+72     	; 0x1a3a <ParseReceived+0xdd0>
    19f2:	f8 01       	movw	r30, r16
    19f4:	14 82       	std	Z+4, r1	; 0x04
    19f6:	15 82       	std	Z+5, r1	; 0x05
    19f8:	16 82       	std	Z+6, r1	; 0x06
    19fa:	17 82       	std	Z+7, r1	; 0x07
    19fc:	b8 01       	movw	r22, r16
    19fe:	69 5e       	subi	r22, 0xE9	; 233
    1a00:	7d 4f       	sbci	r23, 0xFD	; 253
    1a02:	c8 01       	movw	r24, r16
    1a04:	00 d9       	rcall	.-3584   	; 0xc06 <ESP8266_Callback_ConnectedStationsDetected>
    1a06:	69 ed       	ldi	r22, 0xD9	; 217
    1a08:	72 e0       	ldi	r23, 0x02	; 2
    1a0a:	c7 01       	movw	r24, r14
    1a0c:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
    1a10:	89 2b       	or	r24, r25
    1a12:	99 f4       	brne	.+38     	; 0x1a3a <ParseReceived+0xdd0>
    1a14:	f8 01       	movw	r30, r16
    1a16:	ea 57       	subi	r30, 0x7A	; 122
    1a18:	fd 4f       	sbci	r31, 0xFD	; 253
    1a1a:	81 81       	ldd	r24, Z+1	; 0x01
    1a1c:	82 60       	ori	r24, 0x02	; 2
    1a1e:	81 83       	std	Z+1, r24	; 0x01
    1a20:	f8 01       	movw	r30, r16
    1a22:	84 81       	ldd	r24, Z+4	; 0x04
    1a24:	95 81       	ldd	r25, Z+5	; 0x05
    1a26:	a6 81       	ldd	r26, Z+6	; 0x06
    1a28:	b7 81       	ldd	r27, Z+7	; 0x07
    1a2a:	08 97       	sbiw	r24, 0x08	; 8
    1a2c:	a1 05       	cpc	r26, r1
    1a2e:	b1 05       	cpc	r27, r1
    1a30:	21 f0       	breq	.+8      	; 0x1a3a <ParseReceived+0xdd0>
    1a32:	14 82       	std	Z+4, r1	; 0x04
    1a34:	15 82       	std	Z+5, r1	; 0x05
    1a36:	16 82       	std	Z+6, r1	; 0x06
    1a38:	17 82       	std	Z+7, r1	; 0x07
    1a3a:	6e ed       	ldi	r22, 0xDE	; 222
    1a3c:	72 e0       	ldi	r23, 0x02	; 2
    1a3e:	c7 01       	movw	r24, r14
    1a40:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
    1a44:	89 2b       	or	r24, r25
    1a46:	39 f0       	breq	.+14     	; 0x1a56 <ParseReceived+0xdec>
    1a48:	6e ee       	ldi	r22, 0xEE	; 238
    1a4a:	72 e0       	ldi	r23, 0x02	; 2
    1a4c:	c7 01       	movw	r24, r14
    1a4e:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
    1a52:	89 2b       	or	r24, r25
    1a54:	59 f4       	brne	.+22     	; 0x1a6c <ParseReceived+0xe02>
    1a56:	f8 01       	movw	r30, r16
    1a58:	ea 57       	subi	r30, 0x7A	; 122
    1a5a:	fd 4f       	sbci	r31, 0xFD	; 253
    1a5c:	81 81       	ldd	r24, Z+1	; 0x01
    1a5e:	8d 7f       	andi	r24, 0xFD	; 253
    1a60:	81 83       	std	Z+1, r24	; 0x01
    1a62:	f8 01       	movw	r30, r16
    1a64:	14 82       	std	Z+4, r1	; 0x04
    1a66:	15 82       	std	Z+5, r1	; 0x05
    1a68:	16 82       	std	Z+6, r1	; 0x06
    1a6a:	17 82       	std	Z+7, r1	; 0x07
    1a6c:	64 ed       	ldi	r22, 0xD4	; 212
    1a6e:	72 e0       	ldi	r23, 0x02	; 2
    1a70:	c7 01       	movw	r24, r14
    1a72:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
    1a76:	89 2b       	or	r24, r25
    1a78:	39 f5       	brne	.+78     	; 0x1ac8 <ParseReceived+0xe5e>
    1a7a:	d8 01       	movw	r26, r16
    1a7c:	14 96       	adiw	r26, 0x04	; 4
    1a7e:	1d 92       	st	X+, r1
    1a80:	1d 92       	st	X+, r1
    1a82:	1d 92       	st	X+, r1
    1a84:	1c 92       	st	X, r1
    1a86:	17 97       	sbiw	r26, 0x07	; 7
    1a88:	f8 01       	movw	r30, r16
    1a8a:	ea 57       	subi	r30, 0x7A	; 122
    1a8c:	fd 4f       	sbci	r31, 0xFD	; 253
    1a8e:	81 81       	ldd	r24, Z+1	; 0x01
    1a90:	8e 7f       	andi	r24, 0xFE	; 254
    1a92:	81 83       	std	Z+1, r24	; 0x01
    1a94:	19 c0       	rjmp	.+50     	; 0x1ac8 <ParseReceived+0xe5e>
    1a96:	67 e9       	ldi	r22, 0x97	; 151
    1a98:	73 e0       	ldi	r23, 0x03	; 3
    1a9a:	c7 01       	movw	r24, r14
    1a9c:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
    1aa0:	89 2b       	or	r24, r25
    1aa2:	59 f6       	brne	.-106    	; 0x1a3a <ParseReceived+0xdd0>
    1aa4:	d4 cc       	rjmp	.-1624   	; 0x144e <ParseReceived+0x7e4>
    1aa6:	69 ed       	ldi	r22, 0xD9	; 217
    1aa8:	72 e0       	ldi	r23, 0x02	; 2
    1aaa:	c7 01       	movw	r24, r14
    1aac:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
    1ab0:	89 2b       	or	r24, r25
    1ab2:	09 f4       	brne	.+2      	; 0x1ab6 <ParseReceived+0xe4c>
    1ab4:	af cf       	rjmp	.-162    	; 0x1a14 <ParseReceived+0xdaa>
    1ab6:	c8 cf       	rjmp	.-112    	; 0x1a48 <ParseReceived+0xdde>
    1ab8:	6e ed       	ldi	r22, 0xDE	; 222
    1aba:	72 e0       	ldi	r23, 0x02	; 2
    1abc:	c7 01       	movw	r24, r14
    1abe:	0e 94 85 19 	call	0x330a	; 0x330a <strcmp>
    1ac2:	89 2b       	or	r24, r25
    1ac4:	09 f6       	brne	.-126    	; 0x1a48 <ParseReceived+0xdde>
    1ac6:	c4 ce       	rjmp	.-632    	; 0x1850 <ParseReceived+0xbe6>
    1ac8:	0f 90       	pop	r0
    1aca:	0f 90       	pop	r0
    1acc:	df 91       	pop	r29
    1ace:	cf 91       	pop	r28
    1ad0:	1f 91       	pop	r17
    1ad2:	0f 91       	pop	r16
    1ad4:	ff 90       	pop	r15
    1ad6:	ef 90       	pop	r14
    1ad8:	df 90       	pop	r13
    1ada:	cf 90       	pop	r12
    1adc:	bf 90       	pop	r11
    1ade:	af 90       	pop	r10
    1ae0:	9f 90       	pop	r9
    1ae2:	8f 90       	pop	r8
    1ae4:	7f 90       	pop	r7
    1ae6:	6f 90       	pop	r6
    1ae8:	5f 90       	pop	r5
    1aea:	4f 90       	pop	r4
    1aec:	3f 90       	pop	r3
    1aee:	2f 90       	pop	r2
    1af0:	08 95       	ret

00001af2 <ESP8266_Update>:
    1af2:	2f 92       	push	r2
    1af4:	3f 92       	push	r3
    1af6:	4f 92       	push	r4
    1af8:	5f 92       	push	r5
    1afa:	7f 92       	push	r7
    1afc:	8f 92       	push	r8
    1afe:	9f 92       	push	r9
    1b00:	af 92       	push	r10
    1b02:	bf 92       	push	r11
    1b04:	cf 92       	push	r12
    1b06:	df 92       	push	r13
    1b08:	ef 92       	push	r14
    1b0a:	ff 92       	push	r15
    1b0c:	0f 93       	push	r16
    1b0e:	1f 93       	push	r17
    1b10:	cf 93       	push	r28
    1b12:	df 93       	push	r29
    1b14:	cd b7       	in	r28, 0x3d	; 61
    1b16:	de b7       	in	r29, 0x3e	; 62
    1b18:	c3 58       	subi	r28, 0x83	; 131
    1b1a:	d1 09       	sbc	r29, r1
    1b1c:	0f b6       	in	r0, 0x3f	; 63
    1b1e:	f8 94       	cli
    1b20:	de bf       	out	0x3e, r29	; 62
    1b22:	0f be       	out	0x3f, r0	; 63
    1b24:	cd bf       	out	0x3d, r28	; 61
    1b26:	8c 01       	movw	r16, r24
    1b28:	fc 01       	movw	r30, r24
    1b2a:	ec 5a       	subi	r30, 0xAC	; 172
    1b2c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b2e:	80 81       	ld	r24, Z
    1b30:	91 81       	ldd	r25, Z+1	; 0x01
    1b32:	a2 81       	ldd	r26, Z+2	; 0x02
    1b34:	b3 81       	ldd	r27, Z+3	; 0x03
    1b36:	89 2b       	or	r24, r25
    1b38:	8a 2b       	or	r24, r26
    1b3a:	8b 2b       	or	r24, r27
    1b3c:	41 f4       	brne	.+16     	; 0x1b4e <ESP8266_Update+0x5c>
    1b3e:	80 e3       	ldi	r24, 0x30	; 48
    1b40:	95 e7       	ldi	r25, 0x75	; 117
    1b42:	a0 e0       	ldi	r26, 0x00	; 0
    1b44:	b0 e0       	ldi	r27, 0x00	; 0
    1b46:	80 83       	st	Z, r24
    1b48:	91 83       	std	Z+1, r25	; 0x01
    1b4a:	a2 83       	std	Z+2, r26	; 0x02
    1b4c:	b3 83       	std	Z+3, r27	; 0x03
    1b4e:	f8 01       	movw	r30, r16
    1b50:	e4 5b       	subi	r30, 0xB4	; 180
    1b52:	ff 4f       	sbci	r31, 0xFF	; 255
    1b54:	80 81       	ld	r24, Z
    1b56:	91 81       	ldd	r25, Z+1	; 0x01
    1b58:	a2 81       	ldd	r26, Z+2	; 0x02
    1b5a:	b3 81       	ldd	r27, Z+3	; 0x03
    1b5c:	34 97       	sbiw	r30, 0x04	; 4
    1b5e:	40 81       	ld	r20, Z
    1b60:	51 81       	ldd	r21, Z+1	; 0x01
    1b62:	62 81       	ldd	r22, Z+2	; 0x02
    1b64:	73 81       	ldd	r23, Z+3	; 0x03
    1b66:	84 1b       	sub	r24, r20
    1b68:	95 0b       	sbc	r25, r21
    1b6a:	a6 0b       	sbc	r26, r22
    1b6c:	b7 0b       	sbc	r27, r23
    1b6e:	3c 96       	adiw	r30, 0x0c	; 12
    1b70:	40 81       	ld	r20, Z
    1b72:	51 81       	ldd	r21, Z+1	; 0x01
    1b74:	62 81       	ldd	r22, Z+2	; 0x02
    1b76:	73 81       	ldd	r23, Z+3	; 0x03
    1b78:	48 17       	cp	r20, r24
    1b7a:	59 07       	cpc	r21, r25
    1b7c:	6a 07       	cpc	r22, r26
    1b7e:	7b 07       	cpc	r23, r27
    1b80:	38 f5       	brcc	.+78     	; 0x1bd0 <ESP8266_Update+0xde>
    1b82:	d8 01       	movw	r26, r16
    1b84:	14 96       	adiw	r26, 0x04	; 4
    1b86:	8c 91       	ld	r24, X
    1b88:	f8 01       	movw	r30, r16
    1b8a:	14 82       	std	Z+4, r1	; 0x04
    1b8c:	15 82       	std	Z+5, r1	; 0x05
    1b8e:	16 82       	std	Z+6, r1	; 0x06
    1b90:	17 82       	std	Z+7, r1	; 0x07
    1b92:	8a 30       	cpi	r24, 0x0A	; 10
    1b94:	09 f0       	breq	.+2      	; 0x1b98 <ESP8266_Update+0xa6>
    1b96:	66 c2       	rjmp	.+1228   	; 0x2064 <ESP8266_Update+0x572>
    1b98:	ea 5e       	subi	r30, 0xEA	; 234
    1b9a:	fd 4f       	sbci	r31, 0xFD	; 253
    1b9c:	80 81       	ld	r24, Z
    1b9e:	f3 e4       	ldi	r31, 0x43	; 67
    1ba0:	8f 02       	muls	r24, r31
    1ba2:	c0 01       	movw	r24, r0
    1ba4:	11 24       	eor	r1, r1
    1ba6:	98 01       	movw	r18, r16
    1ba8:	28 0f       	add	r18, r24
    1baa:	39 1f       	adc	r19, r25
    1bac:	f9 01       	movw	r30, r18
    1bae:	e8 5a       	subi	r30, 0xA8	; 168
    1bb0:	ff 4f       	sbci	r31, 0xFF	; 255
    1bb2:	10 82       	st	Z, r1
    1bb4:	32 96       	adiw	r30, 0x02	; 2
    1bb6:	10 82       	st	Z, r1
    1bb8:	ff 96       	adiw	r30, 0x3f	; 63
    1bba:	10 82       	st	Z, r1
    1bbc:	31 97       	sbiw	r30, 0x01	; 1
    1bbe:	10 82       	st	Z, r1
    1bc0:	bc 01       	movw	r22, r24
    1bc2:	68 5a       	subi	r22, 0xA8	; 168
    1bc4:	7f 4f       	sbci	r23, 0xFF	; 255
    1bc6:	60 0f       	add	r22, r16
    1bc8:	71 1f       	adc	r23, r17
    1bca:	c8 01       	movw	r24, r16
    1bcc:	0e 94 07 18 	call	0x300e	; 0x300e <ESP8266_Callback_ClientConnectionTimeout>
    1bd0:	f8 01       	movw	r30, r16
    1bd2:	e9 57       	subi	r30, 0x79	; 121
    1bd4:	fd 4f       	sbci	r31, 0xFD	; 253
    1bd6:	80 81       	ld	r24, Z
    1bd8:	80 ff       	sbrs	r24, 0
    1bda:	84 c0       	rjmp	.+264    	; 0x1ce4 <ESP8266_Update+0x1f2>
    1bdc:	42 e0       	ldi	r20, 0x02	; 2
    1bde:	50 e0       	ldi	r21, 0x00	; 0
    1be0:	66 ee       	ldi	r22, 0xE6	; 230
    1be2:	73 e0       	ldi	r23, 0x03	; 3
    1be4:	8e e8       	ldi	r24, 0x8E	; 142
    1be6:	96 e1       	ldi	r25, 0x16	; 22
    1be8:	0e 94 0d 02 	call	0x41a	; 0x41a <BUFFER_Find>
    1bec:	99 23       	and	r25, r25
    1bee:	64 f0       	brlt	.+24     	; 0x1c08 <ESP8266_Update+0x116>
    1bf0:	89 2b       	or	r24, r25
    1bf2:	09 f5       	brne	.+66     	; 0x1c36 <ESP8266_Update+0x144>
    1bf4:	42 e0       	ldi	r20, 0x02	; 2
    1bf6:	50 e0       	ldi	r21, 0x00	; 0
    1bf8:	be 01       	movw	r22, r28
    1bfa:	6e 57       	subi	r22, 0x7E	; 126
    1bfc:	7f 4f       	sbci	r23, 0xFF	; 255
    1bfe:	8e e8       	ldi	r24, 0x8E	; 142
    1c00:	96 e1       	ldi	r25, 0x16	; 22
    1c02:	0e 94 1c 01 	call	0x238	; 0x238 <BUFFER_Read>
    1c06:	17 c0       	rjmp	.+46     	; 0x1c36 <ESP8266_Update+0x144>
    1c08:	40 e0       	ldi	r20, 0x00	; 0
    1c0a:	50 e0       	ldi	r21, 0x00	; 0
    1c0c:	66 ee       	ldi	r22, 0xE6	; 230
    1c0e:	73 e0       	ldi	r23, 0x03	; 3
    1c10:	8a e9       	ldi	r24, 0x9A	; 154
    1c12:	96 e1       	ldi	r25, 0x16	; 22
    1c14:	0e 94 0d 02 	call	0x41a	; 0x41a <BUFFER_Find>
    1c18:	00 97       	sbiw	r24, 0x00	; 0
    1c1a:	51 f4       	brne	.+20     	; 0x1c30 <ESP8266_Update+0x13e>
    1c1c:	42 e0       	ldi	r20, 0x02	; 2
    1c1e:	50 e0       	ldi	r21, 0x00	; 0
    1c20:	be 01       	movw	r22, r28
    1c22:	6e 57       	subi	r22, 0x7E	; 126
    1c24:	7f 4f       	sbci	r23, 0xFF	; 255
    1c26:	8a e9       	ldi	r24, 0x9A	; 154
    1c28:	96 e1       	ldi	r25, 0x16	; 22
    1c2a:	0e 94 1c 01 	call	0x238	; 0x238 <BUFFER_Read>
    1c2e:	03 c0       	rjmp	.+6      	; 0x1c36 <ESP8266_Update+0x144>
    1c30:	99 23       	and	r25, r25
    1c32:	0c f4       	brge	.+2      	; 0x1c36 <ESP8266_Update+0x144>
    1c34:	57 c0       	rjmp	.+174    	; 0x1ce4 <ESP8266_Update+0x1f2>
    1c36:	f8 01       	movw	r30, r16
    1c38:	ec 57       	subi	r30, 0x7C	; 124
    1c3a:	fd 4f       	sbci	r31, 0xFD	; 253
    1c3c:	c0 80       	ld	r12, Z
    1c3e:	d1 80       	ldd	r13, Z+1	; 0x01
    1c40:	32 96       	adiw	r30, 0x02	; 2
    1c42:	81 81       	ldd	r24, Z+1	; 0x01
    1c44:	8e 7f       	andi	r24, 0xFE	; 254
    1c46:	81 83       	std	Z+1, r24	; 0x01
    1c48:	8d e1       	ldi	r24, 0x1D	; 29
    1c4a:	90 e0       	ldi	r25, 0x00	; 0
    1c4c:	a0 e0       	ldi	r26, 0x00	; 0
    1c4e:	b0 e0       	ldi	r27, 0x00	; 0
    1c50:	f8 01       	movw	r30, r16
    1c52:	84 83       	std	Z+4, r24	; 0x04
    1c54:	95 83       	std	Z+5, r25	; 0x05
    1c56:	a6 83       	std	Z+6, r26	; 0x06
    1c58:	b7 83       	std	Z+7, r27	; 0x07
    1c5a:	d6 01       	movw	r26, r12
    1c5c:	12 96       	adiw	r26, 0x02	; 2
    1c5e:	8c 91       	ld	r24, X
    1c60:	12 97       	sbiw	r26, 0x02	; 2
    1c62:	88 23       	and	r24, r24
    1c64:	59 f0       	breq	.+22     	; 0x1c7c <ESP8266_Update+0x18a>
    1c66:	54 96       	adiw	r26, 0x14	; 20
    1c68:	4d 91       	ld	r20, X+
    1c6a:	5c 91       	ld	r21, X
    1c6c:	55 97       	sbiw	r26, 0x15	; 21
    1c6e:	24 eb       	ldi	r18, 0xB4	; 180
    1c70:	35 e0       	ldi	r19, 0x05	; 5
    1c72:	b6 01       	movw	r22, r12
    1c74:	c8 01       	movw	r24, r16
    1c76:	0e 94 61 17 	call	0x2ec2	; 0x2ec2 <ESP8266_Callback_ClientConnectionSendData>
    1c7a:	09 c0       	rjmp	.+18     	; 0x1c8e <ESP8266_Update+0x19c>
    1c7c:	f6 01       	movw	r30, r12
    1c7e:	44 89       	ldd	r20, Z+20	; 0x14
    1c80:	55 89       	ldd	r21, Z+21	; 0x15
    1c82:	24 eb       	ldi	r18, 0xB4	; 180
    1c84:	35 e0       	ldi	r19, 0x05	; 5
    1c86:	b6 01       	movw	r22, r12
    1c88:	c8 01       	movw	r24, r16
    1c8a:	0e 94 b1 05 	call	0xb62	; 0xb62 <ESP8266_Callback_ServerConnectionSendData>
    1c8e:	e8 2e       	mov	r14, r24
    1c90:	f9 2e       	mov	r15, r25
    1c92:	f5 eb       	ldi	r31, 0xB5	; 181
    1c94:	ef 16       	cp	r14, r31
    1c96:	f5 e0       	ldi	r31, 0x05	; 5
    1c98:	ff 06       	cpc	r15, r31
    1c9a:	30 f0       	brcs	.+12     	; 0x1ca8 <ESP8266_Update+0x1b6>
    1c9c:	0f 2e       	mov	r0, r31
    1c9e:	f4 eb       	ldi	r31, 0xB4	; 180
    1ca0:	ef 2e       	mov	r14, r31
    1ca2:	f5 e0       	ldi	r31, 0x05	; 5
    1ca4:	ff 2e       	mov	r15, r31
    1ca6:	f0 2d       	mov	r31, r0
    1ca8:	e1 14       	cp	r14, r1
    1caa:	f1 04       	cpc	r15, r1
    1cac:	b1 f0       	breq	.+44     	; 0x1cda <ESP8266_Update+0x1e8>
    1cae:	b7 01       	movw	r22, r14
    1cb0:	d6 01       	movw	r26, r12
    1cb2:	54 96       	adiw	r26, 0x14	; 20
    1cb4:	8d 91       	ld	r24, X+
    1cb6:	9c 91       	ld	r25, X
    1cb8:	55 97       	sbiw	r26, 0x15	; 21
    1cba:	4a d7       	rcall	.+3732   	; 0x2b50 <ESP8266_LL_USARTSend>
    1cbc:	f8 01       	movw	r30, r16
    1cbe:	e0 58       	subi	r30, 0x80	; 128
    1cc0:	fd 4f       	sbci	r31, 0xFD	; 253
    1cc2:	80 81       	ld	r24, Z
    1cc4:	91 81       	ldd	r25, Z+1	; 0x01
    1cc6:	a2 81       	ldd	r26, Z+2	; 0x02
    1cc8:	b3 81       	ldd	r27, Z+3	; 0x03
    1cca:	8e 0d       	add	r24, r14
    1ccc:	9f 1d       	adc	r25, r15
    1cce:	a1 1d       	adc	r26, r1
    1cd0:	b1 1d       	adc	r27, r1
    1cd2:	80 83       	st	Z, r24
    1cd4:	91 83       	std	Z+1, r25	; 0x01
    1cd6:	a2 83       	std	Z+2, r26	; 0x02
    1cd8:	b3 83       	std	Z+3, r27	; 0x03
    1cda:	62 e0       	ldi	r22, 0x02	; 2
    1cdc:	70 e0       	ldi	r23, 0x00	; 0
    1cde:	89 ee       	ldi	r24, 0xE9	; 233
    1ce0:	93 e0       	ldi	r25, 0x03	; 3
    1ce2:	36 d7       	rcall	.+3692   	; 0x2b50 <ESP8266_LL_USARTSend>
    1ce4:	f8 01       	movw	r30, r16
    1ce6:	84 81       	ldd	r24, Z+4	; 0x04
    1ce8:	95 81       	ldd	r25, Z+5	; 0x05
    1cea:	a6 81       	ldd	r26, Z+6	; 0x06
    1cec:	b7 81       	ldd	r27, Z+7	; 0x07
    1cee:	41 97       	sbiw	r24, 0x11	; 17
    1cf0:	a1 05       	cpc	r26, r1
    1cf2:	b1 05       	cpc	r27, r1
    1cf4:	01 f5       	brne	.+64     	; 0x1d36 <ESP8266_Update+0x244>
    1cf6:	eb 50       	subi	r30, 0x0B	; 11
    1cf8:	fe 4f       	sbci	r31, 0xFE	; 254
    1cfa:	80 81       	ld	r24, Z
    1cfc:	81 11       	cpse	r24, r1
    1cfe:	7d c0       	rjmp	.+250    	; 0x1dfa <ESP8266_Update+0x308>
    1d00:	44 e0       	ldi	r20, 0x04	; 4
    1d02:	50 e0       	ldi	r21, 0x00	; 0
    1d04:	69 ed       	ldi	r22, 0xD9	; 217
    1d06:	72 e0       	ldi	r23, 0x02	; 2
    1d08:	8e e8       	ldi	r24, 0x8E	; 142
    1d0a:	96 e1       	ldi	r25, 0x16	; 22
    1d0c:	0e 94 0d 02 	call	0x41a	; 0x41a <BUFFER_Find>
    1d10:	99 23       	and	r25, r25
    1d12:	8c f0       	brlt	.+34     	; 0x1d36 <ESP8266_Update+0x244>
    1d14:	8e e8       	ldi	r24, 0x8E	; 142
    1d16:	96 e1       	ldi	r25, 0x16	; 22
    1d18:	0e 94 ca 01 	call	0x394	; 0x394 <BUFFER_Reset>
    1d1c:	d8 01       	movw	r26, r16
    1d1e:	14 96       	adiw	r26, 0x04	; 4
    1d20:	1d 92       	st	X+, r1
    1d22:	1d 92       	st	X+, r1
    1d24:	1d 92       	st	X+, r1
    1d26:	1c 92       	st	X, r1
    1d28:	17 97       	sbiw	r26, 0x07	; 7
    1d2a:	f8 01       	movw	r30, r16
    1d2c:	ea 57       	subi	r30, 0x7A	; 122
    1d2e:	fd 4f       	sbci	r31, 0xFD	; 253
    1d30:	81 81       	ldd	r24, Z+1	; 0x01
    1d32:	82 60       	ori	r24, 0x02	; 2
    1d34:	81 83       	std	Z+1, r24	; 0x01
    1d36:	f8 01       	movw	r30, r16
    1d38:	eb 50       	subi	r30, 0x0B	; 11
    1d3a:	fe 4f       	sbci	r31, 0xFE	; 254
    1d3c:	80 81       	ld	r24, Z
    1d3e:	88 23       	and	r24, r24
    1d40:	f1 f0       	breq	.+60     	; 0x1d7e <ESP8266_Update+0x28c>
    1d42:	54 c0       	rjmp	.+168    	; 0x1dec <ESP8266_Update+0x2fa>
    1d44:	9c 01       	movw	r18, r24
    1d46:	41 e0       	ldi	r20, 0x01	; 1
    1d48:	be 01       	movw	r22, r28
    1d4a:	6f 5f       	subi	r22, 0xFF	; 255
    1d4c:	7f 4f       	sbci	r23, 0xFF	; 255
    1d4e:	c8 01       	movw	r24, r16
    1d50:	0e 94 35 06 	call	0xc6a	; 0xc6a <ParseReceived>
    1d54:	f7 01       	movw	r30, r14
    1d56:	80 81       	ld	r24, Z
    1d58:	88 23       	and	r24, r24
    1d5a:	b1 f0       	breq	.+44     	; 0x1d88 <ESP8266_Update+0x296>
    1d5c:	47 c0       	rjmp	.+142    	; 0x1dec <ESP8266_Update+0x2fa>
    1d5e:	f8 01       	movw	r30, r16
    1d60:	eb 50       	subi	r30, 0x0B	; 11
    1d62:	fe 4f       	sbci	r31, 0xFE	; 254
    1d64:	80 81       	ld	r24, Z
    1d66:	81 11       	cpse	r24, r1
    1d68:	48 c0       	rjmp	.+144    	; 0x1dfa <ESP8266_Update+0x308>
    1d6a:	f8 01       	movw	r30, r16
    1d6c:	84 81       	ldd	r24, Z+4	; 0x04
    1d6e:	95 81       	ldd	r25, Z+5	; 0x05
    1d70:	a6 81       	ldd	r26, Z+6	; 0x06
    1d72:	b7 81       	ldd	r27, Z+7	; 0x07
    1d74:	89 2b       	or	r24, r25
    1d76:	8a 2b       	or	r24, r26
    1d78:	8b 2b       	or	r24, r27
    1d7a:	41 f1       	breq	.+80     	; 0x1dcc <ESP8266_Update+0x2da>
    1d7c:	7a c1       	rjmp	.+756    	; 0x2072 <ESP8266_Update+0x580>
    1d7e:	78 01       	movw	r14, r16
    1d80:	fb e0       	ldi	r31, 0x0B	; 11
    1d82:	ef 1a       	sub	r14, r31
    1d84:	fe ef       	ldi	r31, 0xFE	; 254
    1d86:	ff 0a       	sbc	r15, r31
    1d88:	40 e8       	ldi	r20, 0x80	; 128
    1d8a:	50 e0       	ldi	r21, 0x00	; 0
    1d8c:	be 01       	movw	r22, r28
    1d8e:	6f 5f       	subi	r22, 0xFF	; 255
    1d90:	7f 4f       	sbci	r23, 0xFF	; 255
    1d92:	8e e8       	ldi	r24, 0x8E	; 142
    1d94:	96 e1       	ldi	r25, 0x16	; 22
    1d96:	0e 94 ae 02 	call	0x55c	; 0x55c <BUFFER_ReadString>
    1d9a:	00 97       	sbiw	r24, 0x00	; 0
    1d9c:	99 f6       	brne	.-90     	; 0x1d44 <ESP8266_Update+0x252>
    1d9e:	df cf       	rjmp	.-66     	; 0x1d5e <ESP8266_Update+0x26c>
    1da0:	9c 01       	movw	r18, r24
    1da2:	40 e0       	ldi	r20, 0x00	; 0
    1da4:	be 01       	movw	r22, r28
    1da6:	6f 5f       	subi	r22, 0xFF	; 255
    1da8:	7f 4f       	sbci	r23, 0xFF	; 255
    1daa:	c8 01       	movw	r24, r16
    1dac:	0e 94 35 06 	call	0xc6a	; 0xc6a <ParseReceived>
    1db0:	d7 01       	movw	r26, r14
    1db2:	8c 91       	ld	r24, X
    1db4:	81 11       	cpse	r24, r1
    1db6:	21 c0       	rjmp	.+66     	; 0x1dfa <ESP8266_Update+0x308>
    1db8:	f8 01       	movw	r30, r16
    1dba:	84 81       	ldd	r24, Z+4	; 0x04
    1dbc:	95 81       	ldd	r25, Z+5	; 0x05
    1dbe:	a6 81       	ldd	r26, Z+6	; 0x06
    1dc0:	b7 81       	ldd	r27, Z+7	; 0x07
    1dc2:	89 2b       	or	r24, r25
    1dc4:	8a 2b       	or	r24, r26
    1dc6:	8b 2b       	or	r24, r27
    1dc8:	31 f0       	breq	.+12     	; 0x1dd6 <ESP8266_Update+0x2e4>
    1dca:	53 c1       	rjmp	.+678    	; 0x2072 <ESP8266_Update+0x580>
    1dcc:	78 01       	movw	r14, r16
    1dce:	fb e0       	ldi	r31, 0x0B	; 11
    1dd0:	ef 1a       	sub	r14, r31
    1dd2:	fe ef       	ldi	r31, 0xFE	; 254
    1dd4:	ff 0a       	sbc	r15, r31
    1dd6:	40 e8       	ldi	r20, 0x80	; 128
    1dd8:	50 e0       	ldi	r21, 0x00	; 0
    1dda:	be 01       	movw	r22, r28
    1ddc:	6f 5f       	subi	r22, 0xFF	; 255
    1dde:	7f 4f       	sbci	r23, 0xFF	; 255
    1de0:	8a e9       	ldi	r24, 0x9A	; 154
    1de2:	96 e1       	ldi	r25, 0x16	; 22
    1de4:	0e 94 ae 02 	call	0x55c	; 0x55c <BUFFER_ReadString>
    1de8:	00 97       	sbiw	r24, 0x00	; 0
    1dea:	d1 f6       	brne	.-76     	; 0x1da0 <ESP8266_Update+0x2ae>
    1dec:	f8 01       	movw	r30, r16
    1dee:	eb 50       	subi	r30, 0x0B	; 11
    1df0:	fe 4f       	sbci	r31, 0xFE	; 254
    1df2:	80 81       	ld	r24, Z
    1df4:	88 23       	and	r24, r24
    1df6:	09 f4       	brne	.+2      	; 0x1dfa <ESP8266_Update+0x308>
    1df8:	3c c1       	rjmp	.+632    	; 0x2072 <ESP8266_Update+0x580>
    1dfa:	f8 01       	movw	r30, r16
    1dfc:	e5 50       	subi	r30, 0x05	; 5
    1dfe:	fe 4f       	sbci	r31, 0xFE	; 254
    1e00:	80 81       	ld	r24, Z
    1e02:	81 11       	cpse	r24, r1
    1e04:	07 c0       	rjmp	.+14     	; 0x1e14 <ESP8266_Update+0x322>
    1e06:	0f 2e       	mov	r0, r31
    1e08:	fa e9       	ldi	r31, 0x9A	; 154
    1e0a:	af 2e       	mov	r10, r31
    1e0c:	f6 e1       	ldi	r31, 0x16	; 22
    1e0e:	bf 2e       	mov	r11, r31
    1e10:	f0 2d       	mov	r31, r0
    1e12:	06 c0       	rjmp	.+12     	; 0x1e20 <ESP8266_Update+0x32e>
    1e14:	0f 2e       	mov	r0, r31
    1e16:	fe e8       	ldi	r31, 0x8E	; 142
    1e18:	af 2e       	mov	r10, r31
    1e1a:	f6 e1       	ldi	r31, 0x16	; 22
    1e1c:	bf 2e       	mov	r11, r31
    1e1e:	f0 2d       	mov	r31, r0
    1e20:	78 01       	movw	r14, r16
    1e22:	2a e0       	ldi	r18, 0x0A	; 10
    1e24:	e2 1a       	sub	r14, r18
    1e26:	2e ef       	ldi	r18, 0xFE	; 254
    1e28:	f2 0a       	sbc	r15, r18
    1e2a:	68 01       	movw	r12, r16
    1e2c:	36 e0       	ldi	r19, 0x06	; 6
    1e2e:	c3 1a       	sub	r12, r19
    1e30:	3e ef       	ldi	r19, 0xFE	; 254
    1e32:	d3 0a       	sbc	r13, r19
    1e34:	0f 2e       	mov	r0, r31
    1e36:	f3 e4       	ldi	r31, 0x43	; 67
    1e38:	7f 2e       	mov	r7, r31
    1e3a:	f0 2d       	mov	r31, r0
    1e3c:	48 01       	movw	r8, r16
    1e3e:	88 e0       	ldi	r24, 0x08	; 8
    1e40:	88 1a       	sub	r8, r24
    1e42:	8e ef       	ldi	r24, 0xFE	; 254
    1e44:	98 0a       	sbc	r9, r24
    1e46:	83 c0       	rjmp	.+262    	; 0x1f4e <ESP8266_Update+0x45c>
    1e48:	41 e0       	ldi	r20, 0x01	; 1
    1e4a:	50 e0       	ldi	r21, 0x00	; 0
    1e4c:	be 01       	movw	r22, r28
    1e4e:	6f 57       	subi	r22, 0x7F	; 127
    1e50:	7f 4f       	sbci	r23, 0xFF	; 255
    1e52:	c5 01       	movw	r24, r10
    1e54:	0e 94 1c 01 	call	0x238	; 0x238 <BUFFER_Read>
    1e58:	cf 57       	subi	r28, 0x7F	; 127
    1e5a:	df 4f       	sbci	r29, 0xFF	; 255
    1e5c:	28 81       	ld	r18, Y
    1e5e:	c1 58       	subi	r28, 0x81	; 129
    1e60:	d0 40       	sbci	r29, 0x00	; 0
    1e62:	d6 01       	movw	r26, r12
    1e64:	8c 91       	ld	r24, X
    1e66:	f8 01       	movw	r30, r16
    1e68:	78 9e       	mul	r7, r24
    1e6a:	e0 0d       	add	r30, r0
    1e6c:	f1 1d       	adc	r31, r1
    1e6e:	11 24       	eor	r1, r1
    1e70:	e4 59       	subi	r30, 0x94	; 148
    1e72:	ff 4f       	sbci	r31, 0xFF	; 255
    1e74:	01 90       	ld	r0, Z+
    1e76:	f0 81       	ld	r31, Z
    1e78:	e0 2d       	mov	r30, r0
    1e7a:	d7 01       	movw	r26, r14
    1e7c:	8d 91       	ld	r24, X+
    1e7e:	9c 91       	ld	r25, X
    1e80:	11 97       	sbiw	r26, 0x01	; 1
    1e82:	e8 0f       	add	r30, r24
    1e84:	f9 1f       	adc	r31, r25
    1e86:	20 83       	st	Z, r18
    1e88:	8d 91       	ld	r24, X+
    1e8a:	9c 91       	ld	r25, X
    1e8c:	11 97       	sbiw	r26, 0x01	; 1
    1e8e:	01 96       	adiw	r24, 0x01	; 1
    1e90:	8d 93       	st	X+, r24
    1e92:	9c 93       	st	X, r25
    1e94:	f4 01       	movw	r30, r8
    1e96:	20 81       	ld	r18, Z
    1e98:	31 81       	ldd	r19, Z+1	; 0x01
    1e9a:	2f 5f       	subi	r18, 0xFF	; 255
    1e9c:	3f 4f       	sbci	r19, 0xFF	; 255
    1e9e:	31 83       	std	Z+1, r19	; 0x01
    1ea0:	20 83       	st	Z, r18
    1ea2:	84 3b       	cpi	r24, 0xB4	; 180
    1ea4:	f5 e0       	ldi	r31, 0x05	; 5
    1ea6:	9f 07       	cpc	r25, r31
    1ea8:	08 f4       	brcc	.+2      	; 0x1eac <ESP8266_Update+0x3ba>
    1eaa:	51 c0       	rjmp	.+162    	; 0x1f4e <ESP8266_Update+0x45c>
    1eac:	d6 01       	movw	r26, r12
    1eae:	2c 91       	ld	r18, X
    1eb0:	1c 01       	movw	r2, r24
    1eb2:	41 2c       	mov	r4, r1
    1eb4:	51 2c       	mov	r5, r1
    1eb6:	a2 2f       	mov	r26, r18
    1eb8:	b0 e0       	ldi	r27, 0x00	; 0
    1eba:	f8 01       	movw	r30, r16
    1ebc:	72 9e       	mul	r7, r18
    1ebe:	e0 0d       	add	r30, r0
    1ec0:	f1 1d       	adc	r31, r1
    1ec2:	11 24       	eor	r1, r1
    1ec4:	ee 59       	subi	r30, 0x9E	; 158
    1ec6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ec8:	40 81       	ld	r20, Z
    1eca:	51 81       	ldd	r21, Z+1	; 0x01
    1ecc:	62 81       	ldd	r22, Z+2	; 0x02
    1ece:	73 81       	ldd	r23, Z+3	; 0x03
    1ed0:	24 16       	cp	r2, r20
    1ed2:	35 06       	cpc	r3, r21
    1ed4:	46 06       	cpc	r4, r22
    1ed6:	57 06       	cpc	r5, r23
    1ed8:	d1 f1       	breq	.+116    	; 0x1f4e <ESP8266_Update+0x45c>
    1eda:	7a 9e       	mul	r7, r26
    1edc:	90 01       	movw	r18, r0
    1ede:	7b 9e       	mul	r7, r27
    1ee0:	30 0d       	add	r19, r0
    1ee2:	11 24       	eor	r1, r1
    1ee4:	20 0f       	add	r18, r16
    1ee6:	31 1f       	adc	r19, r17
    1ee8:	f9 01       	movw	r30, r18
    1eea:	e2 59       	subi	r30, 0x92	; 146
    1eec:	ff 4f       	sbci	r31, 0xFF	; 255
    1eee:	91 83       	std	Z+1, r25	; 0x01
    1ef0:	80 83       	st	Z, r24
    1ef2:	32 96       	adiw	r30, 0x02	; 2
    1ef4:	10 82       	st	Z, r1
    1ef6:	76 97       	sbiw	r30, 0x16	; 22
    1ef8:	80 81       	ld	r24, Z
    1efa:	88 23       	and	r24, r24
    1efc:	91 f0       	breq	.+36     	; 0x1f22 <ESP8266_Update+0x430>
    1efe:	7a 9e       	mul	r7, r26
    1f00:	b0 01       	movw	r22, r0
    1f02:	7b 9e       	mul	r7, r27
    1f04:	70 0d       	add	r23, r0
    1f06:	11 24       	eor	r1, r1
    1f08:	f9 01       	movw	r30, r18
    1f0a:	e4 59       	subi	r30, 0x94	; 148
    1f0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f0e:	40 81       	ld	r20, Z
    1f10:	51 81       	ldd	r21, Z+1	; 0x01
    1f12:	68 5a       	subi	r22, 0xA8	; 168
    1f14:	7f 4f       	sbci	r23, 0xFF	; 255
    1f16:	60 0f       	add	r22, r16
    1f18:	71 1f       	adc	r23, r17
    1f1a:	c8 01       	movw	r24, r16
    1f1c:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <ESP8266_Callback_ClientConnectionDataReceived>
    1f20:	13 c0       	rjmp	.+38     	; 0x1f48 <ESP8266_Update+0x456>
    1f22:	7a 9e       	mul	r7, r26
    1f24:	b0 01       	movw	r22, r0
    1f26:	7b 9e       	mul	r7, r27
    1f28:	70 0d       	add	r23, r0
    1f2a:	11 24       	eor	r1, r1
    1f2c:	f8 01       	movw	r30, r16
    1f2e:	e6 0f       	add	r30, r22
    1f30:	f7 1f       	adc	r31, r23
    1f32:	e4 59       	subi	r30, 0x94	; 148
    1f34:	ff 4f       	sbci	r31, 0xFF	; 255
    1f36:	40 81       	ld	r20, Z
    1f38:	51 81       	ldd	r21, Z+1	; 0x01
    1f3a:	68 5a       	subi	r22, 0xA8	; 168
    1f3c:	7f 4f       	sbci	r23, 0xFF	; 255
    1f3e:	60 0f       	add	r22, r16
    1f40:	71 1f       	adc	r23, r17
    1f42:	c8 01       	movw	r24, r16
    1f44:	0e 94 b0 05 	call	0xb60	; 0xb60 <ESP8266_Callback_ServerConnectionDataReceived>
    1f48:	f7 01       	movw	r30, r14
    1f4a:	11 82       	std	Z+1, r1	; 0x01
    1f4c:	10 82       	st	Z, r1
    1f4e:	d7 01       	movw	r26, r14
    1f50:	8d 91       	ld	r24, X+
    1f52:	9c 91       	ld	r25, X
    1f54:	a0 e0       	ldi	r26, 0x00	; 0
    1f56:	b0 e0       	ldi	r27, 0x00	; 0
    1f58:	f6 01       	movw	r30, r12
    1f5a:	20 81       	ld	r18, Z
    1f5c:	f8 01       	movw	r30, r16
    1f5e:	72 9e       	mul	r7, r18
    1f60:	e0 0d       	add	r30, r0
    1f62:	f1 1d       	adc	r31, r1
    1f64:	11 24       	eor	r1, r1
    1f66:	ee 59       	subi	r30, 0x9E	; 158
    1f68:	ff 4f       	sbci	r31, 0xFF	; 255
    1f6a:	40 81       	ld	r20, Z
    1f6c:	51 81       	ldd	r21, Z+1	; 0x01
    1f6e:	62 81       	ldd	r22, Z+2	; 0x02
    1f70:	73 81       	ldd	r23, Z+3	; 0x03
    1f72:	84 17       	cp	r24, r20
    1f74:	95 07       	cpc	r25, r21
    1f76:	a6 07       	cpc	r26, r22
    1f78:	b7 07       	cpc	r27, r23
    1f7a:	30 f4       	brcc	.+12     	; 0x1f88 <ESP8266_Update+0x496>
    1f7c:	c5 01       	movw	r24, r10
    1f7e:	0e 94 97 01 	call	0x32e	; 0x32e <BUFFER_GetFull>
    1f82:	89 2b       	or	r24, r25
    1f84:	09 f0       	breq	.+2      	; 0x1f88 <ESP8266_Update+0x496>
    1f86:	60 cf       	rjmp	.-320    	; 0x1e48 <ESP8266_Update+0x356>
    1f88:	f8 01       	movw	r30, r16
    1f8a:	e6 50       	subi	r30, 0x06	; 6
    1f8c:	fe 4f       	sbci	r31, 0xFE	; 254
    1f8e:	20 81       	ld	r18, Z
    1f90:	32 97       	sbiw	r30, 0x02	; 2
    1f92:	80 81       	ld	r24, Z
    1f94:	91 81       	ldd	r25, Z+1	; 0x01
    1f96:	a0 e0       	ldi	r26, 0x00	; 0
    1f98:	b0 e0       	ldi	r27, 0x00	; 0
    1f9a:	e2 2e       	mov	r14, r18
    1f9c:	f1 2c       	mov	r15, r1
    1f9e:	f8 01       	movw	r30, r16
    1fa0:	33 e4       	ldi	r19, 0x43	; 67
    1fa2:	23 9f       	mul	r18, r19
    1fa4:	e0 0d       	add	r30, r0
    1fa6:	f1 1d       	adc	r31, r1
    1fa8:	11 24       	eor	r1, r1
    1faa:	ee 59       	subi	r30, 0x9E	; 158
    1fac:	ff 4f       	sbci	r31, 0xFF	; 255
    1fae:	40 81       	ld	r20, Z
    1fb0:	51 81       	ldd	r21, Z+1	; 0x01
    1fb2:	62 81       	ldd	r22, Z+2	; 0x02
    1fb4:	73 81       	ldd	r23, Z+3	; 0x03
    1fb6:	84 17       	cp	r24, r20
    1fb8:	95 07       	cpc	r25, r21
    1fba:	a6 07       	cpc	r26, r22
    1fbc:	b7 07       	cpc	r27, r23
    1fbe:	08 f4       	brcc	.+2      	; 0x1fc2 <ESP8266_Update+0x4d0>
    1fc0:	58 c0       	rjmp	.+176    	; 0x2072 <ESP8266_Update+0x580>
    1fc2:	f8 01       	movw	r30, r16
    1fc4:	eb 50       	subi	r30, 0x0B	; 11
    1fc6:	fe 4f       	sbci	r31, 0xFE	; 254
    1fc8:	10 82       	st	Z, r1
    1fca:	23 e4       	ldi	r18, 0x43	; 67
    1fcc:	2e 9d       	mul	r18, r14
    1fce:	c0 01       	movw	r24, r0
    1fd0:	2f 9d       	mul	r18, r15
    1fd2:	90 0d       	add	r25, r0
    1fd4:	11 24       	eor	r1, r1
    1fd6:	80 0f       	add	r24, r16
    1fd8:	91 1f       	adc	r25, r17
    1fda:	fc 01       	movw	r30, r24
    1fdc:	e2 59       	subi	r30, 0x92	; 146
    1fde:	ff 4f       	sbci	r31, 0xFF	; 255
    1fe0:	d8 01       	movw	r26, r16
    1fe2:	aa 50       	subi	r26, 0x0A	; 10
    1fe4:	be 4f       	sbci	r27, 0xFE	; 254
    1fe6:	2d 91       	ld	r18, X+
    1fe8:	3c 91       	ld	r19, X
    1fea:	31 83       	std	Z+1, r19	; 0x01
    1fec:	20 83       	st	Z, r18
    1fee:	32 96       	adiw	r30, 0x02	; 2
    1ff0:	21 e0       	ldi	r18, 0x01	; 1
    1ff2:	20 83       	st	Z, r18
    1ff4:	b9 96       	adiw	r30, 0x29	; 41
    1ff6:	80 81       	ld	r24, Z
    1ff8:	88 23       	and	r24, r24
    1ffa:	29 f1       	breq	.+74     	; 0x2046 <ESP8266_Update+0x554>
    1ffc:	83 e4       	ldi	r24, 0x43	; 67
    1ffe:	8e 9d       	mul	r24, r14
    2000:	f0 01       	movw	r30, r0
    2002:	8f 9d       	mul	r24, r15
    2004:	f0 0d       	add	r31, r0
    2006:	11 24       	eor	r1, r1
    2008:	e0 0f       	add	r30, r16
    200a:	f1 1f       	adc	r31, r17
    200c:	e4 59       	subi	r30, 0x94	; 148
    200e:	ff 4f       	sbci	r31, 0xFF	; 255
    2010:	6c ee       	ldi	r22, 0xEC	; 236
    2012:	73 e0       	ldi	r23, 0x03	; 3
    2014:	80 81       	ld	r24, Z
    2016:	91 81       	ldd	r25, Z+1	; 0x01
    2018:	0e 94 b2 19 	call	0x3364	; 0x3364 <strstr>
    201c:	00 97       	sbiw	r24, 0x00	; 0
    201e:	99 f0       	breq	.+38     	; 0x2046 <ESP8266_Update+0x554>
    2020:	60 e0       	ldi	r22, 0x00	; 0
    2022:	70 e0       	ldi	r23, 0x00	; 0
    2024:	40 96       	adiw	r24, 0x10	; 16
    2026:	0e 94 19 03 	call	0x632	; 0x632 <ParseNumber>
    202a:	23 e4       	ldi	r18, 0x43	; 67
    202c:	2e 9d       	mul	r18, r14
    202e:	f0 01       	movw	r30, r0
    2030:	2f 9d       	mul	r18, r15
    2032:	f0 0d       	add	r31, r0
    2034:	11 24       	eor	r1, r1
    2036:	e0 0f       	add	r30, r16
    2038:	f1 1f       	adc	r31, r17
    203a:	ee 58       	subi	r30, 0x8E	; 142
    203c:	ff 4f       	sbci	r31, 0xFF	; 255
    203e:	60 83       	st	Z, r22
    2040:	71 83       	std	Z+1, r23	; 0x01
    2042:	82 83       	std	Z+2, r24	; 0x02
    2044:	93 83       	std	Z+3, r25	; 0x03
    2046:	f8 01       	movw	r30, r16
    2048:	e6 50       	subi	r30, 0x06	; 6
    204a:	fe 4f       	sbci	r31, 0xFE	; 254
    204c:	80 81       	ld	r24, Z
    204e:	f8 01       	movw	r30, r16
    2050:	93 e4       	ldi	r25, 0x43	; 67
    2052:	89 9f       	mul	r24, r25
    2054:	e0 0d       	add	r30, r0
    2056:	f1 1d       	adc	r31, r1
    2058:	11 24       	eor	r1, r1
    205a:	ef 58       	subi	r30, 0x8F	; 143
    205c:	ff 4f       	sbci	r31, 0xFF	; 255
    205e:	81 e0       	ldi	r24, 0x01	; 1
    2060:	80 83       	st	Z, r24
    2062:	07 c0       	rjmp	.+14     	; 0x2072 <ESP8266_Update+0x580>
    2064:	f8 01       	movw	r30, r16
    2066:	e9 57       	subi	r30, 0x79	; 121
    2068:	fd 4f       	sbci	r31, 0xFD	; 253
    206a:	80 81       	ld	r24, Z
    206c:	80 ff       	sbrs	r24, 0
    206e:	63 ce       	rjmp	.-826    	; 0x1d36 <ESP8266_Update+0x244>
    2070:	b5 cd       	rjmp	.-1174   	; 0x1bdc <ESP8266_Update+0xea>
    2072:	c8 01       	movw	r24, r16
    2074:	0e 94 b5 05 	call	0xb6a	; 0xb6a <CallConnectionCallbacks>
    2078:	f8 01       	movw	r30, r16
    207a:	e6 57       	subi	r30, 0x76	; 118
    207c:	fd 4f       	sbci	r31, 0xFD	; 253
    207e:	10 82       	st	Z, r1
    2080:	80 e0       	ldi	r24, 0x00	; 0
    2082:	cd 57       	subi	r28, 0x7D	; 125
    2084:	df 4f       	sbci	r29, 0xFF	; 255
    2086:	0f b6       	in	r0, 0x3f	; 63
    2088:	f8 94       	cli
    208a:	de bf       	out	0x3e, r29	; 62
    208c:	0f be       	out	0x3f, r0	; 63
    208e:	cd bf       	out	0x3d, r28	; 61
    2090:	df 91       	pop	r29
    2092:	cf 91       	pop	r28
    2094:	1f 91       	pop	r17
    2096:	0f 91       	pop	r16
    2098:	ff 90       	pop	r15
    209a:	ef 90       	pop	r14
    209c:	df 90       	pop	r13
    209e:	cf 90       	pop	r12
    20a0:	bf 90       	pop	r11
    20a2:	af 90       	pop	r10
    20a4:	9f 90       	pop	r9
    20a6:	8f 90       	pop	r8
    20a8:	7f 90       	pop	r7
    20aa:	5f 90       	pop	r5
    20ac:	4f 90       	pop	r4
    20ae:	3f 90       	pop	r3
    20b0:	2f 90       	pop	r2
    20b2:	08 95       	ret

000020b4 <SendCommand>:
    20b4:	cf 92       	push	r12
    20b6:	df 92       	push	r13
    20b8:	ef 92       	push	r14
    20ba:	ff 92       	push	r15
    20bc:	1f 93       	push	r17
    20be:	cf 93       	push	r28
    20c0:	df 93       	push	r29
    20c2:	ec 01       	movw	r28, r24
    20c4:	16 2f       	mov	r17, r22
    20c6:	6a 01       	movw	r12, r20
    20c8:	79 01       	movw	r14, r18
    20ca:	8c 81       	ldd	r24, Y+4	; 0x04
    20cc:	9d 81       	ldd	r25, Y+5	; 0x05
    20ce:	ae 81       	ldd	r26, Y+6	; 0x06
    20d0:	bf 81       	ldd	r27, Y+7	; 0x07
    20d2:	89 2b       	or	r24, r25
    20d4:	8a 2b       	or	r24, r26
    20d6:	8b 2b       	or	r24, r27
    20d8:	39 f0       	breq	.+14     	; 0x20e8 <SendCommand+0x34>
    20da:	ce 01       	movw	r24, r28
    20dc:	0a dd       	rcall	.-1516   	; 0x1af2 <ESP8266_Update>
    20de:	c6 57       	subi	r28, 0x76	; 118
    20e0:	dd 4f       	sbci	r29, 0xFD	; 253
    20e2:	87 e0       	ldi	r24, 0x07	; 7
    20e4:	88 83       	st	Y, r24
    20e6:	34 c0       	rjmp	.+104    	; 0x2150 <SendCommand+0x9c>
    20e8:	61 31       	cpi	r22, 0x11	; 17
    20ea:	21 f4       	brne	.+8      	; 0x20f4 <SendCommand+0x40>
    20ec:	8e e8       	ldi	r24, 0x8E	; 142
    20ee:	96 e1       	ldi	r25, 0x16	; 22
    20f0:	0e 94 ca 01 	call	0x394	; 0x394 <BUFFER_Reset>
    20f4:	c1 14       	cp	r12, r1
    20f6:	d1 04       	cpc	r13, r1
    20f8:	51 f0       	breq	.+20     	; 0x210e <SendCommand+0x5a>
    20fa:	f6 01       	movw	r30, r12
    20fc:	01 90       	ld	r0, Z+
    20fe:	00 20       	and	r0, r0
    2100:	e9 f7       	brne	.-6      	; 0x20fc <SendCommand+0x48>
    2102:	31 97       	sbiw	r30, 0x01	; 1
    2104:	bf 01       	movw	r22, r30
    2106:	6c 19       	sub	r22, r12
    2108:	7d 09       	sbc	r23, r13
    210a:	c6 01       	movw	r24, r12
    210c:	21 d5       	rcall	.+2626   	; 0x2b50 <ESP8266_LL_USARTSend>
    210e:	81 2f       	mov	r24, r17
    2110:	90 e0       	ldi	r25, 0x00	; 0
    2112:	a0 e0       	ldi	r26, 0x00	; 0
    2114:	b0 e0       	ldi	r27, 0x00	; 0
    2116:	8c 83       	std	Y+4, r24	; 0x04
    2118:	9d 83       	std	Y+5, r25	; 0x05
    211a:	ae 83       	std	Y+6, r26	; 0x06
    211c:	bf 83       	std	Y+7, r27	; 0x07
    211e:	18 86       	std	Y+8, r1	; 0x08
    2120:	b7 01       	movw	r22, r14
    2122:	ce 01       	movw	r24, r28
    2124:	08 96       	adiw	r24, 0x08	; 8
    2126:	0e 94 8e 19 	call	0x331c	; 0x331c <strcpy>
    212a:	fe 01       	movw	r30, r28
    212c:	e8 5b       	subi	r30, 0xB8	; 184
    212e:	ff 4f       	sbci	r31, 0xFF	; 255
    2130:	de 01       	movw	r26, r28
    2132:	a4 5b       	subi	r26, 0xB4	; 180
    2134:	bf 4f       	sbci	r27, 0xFF	; 255
    2136:	8d 91       	ld	r24, X+
    2138:	9d 91       	ld	r25, X+
    213a:	0d 90       	ld	r0, X+
    213c:	bc 91       	ld	r27, X
    213e:	a0 2d       	mov	r26, r0
    2140:	80 83       	st	Z, r24
    2142:	91 83       	std	Z+1, r25	; 0x01
    2144:	a2 83       	std	Z+2, r26	; 0x02
    2146:	b3 83       	std	Z+3, r27	; 0x03
    2148:	c6 57       	subi	r28, 0x76	; 118
    214a:	dd 4f       	sbci	r29, 0xFD	; 253
    214c:	18 82       	st	Y, r1
    214e:	80 e0       	ldi	r24, 0x00	; 0
    2150:	df 91       	pop	r29
    2152:	cf 91       	pop	r28
    2154:	1f 91       	pop	r17
    2156:	ff 90       	pop	r15
    2158:	ef 90       	pop	r14
    215a:	df 90       	pop	r13
    215c:	cf 90       	pop	r12
    215e:	08 95       	ret

00002160 <ESP8266_WifiDisconnect>:
    2160:	29 e1       	ldi	r18, 0x19	; 25
    2162:	34 e0       	ldi	r19, 0x04	; 4
    2164:	42 e2       	ldi	r20, 0x22	; 34
    2166:	54 e0       	ldi	r21, 0x04	; 4
    2168:	61 e0       	ldi	r22, 0x01	; 1
    216a:	a4 cf       	rjmp	.-184    	; 0x20b4 <SendCommand>
    216c:	08 95       	ret

0000216e <ESP8266_WifiGetConnected>:
    216e:	26 ea       	ldi	r18, 0xA6	; 166
    2170:	33 e0       	ldi	r19, 0x03	; 3
    2172:	4d e2       	ldi	r20, 0x2D	; 45
    2174:	54 e0       	ldi	r21, 0x04	; 4
    2176:	63 e1       	ldi	r22, 0x13	; 19
    2178:	9d cf       	rjmp	.-198    	; 0x20b4 <SendCommand>
    217a:	08 95       	ret

0000217c <ESP8266_GetSTAIP>:
    217c:	cf 93       	push	r28
    217e:	df 93       	push	r29
    2180:	ec 01       	movw	r28, r24
    2182:	2d e3       	ldi	r18, 0x3D	; 61
    2184:	34 e0       	ldi	r19, 0x04	; 4
    2186:	49 e4       	ldi	r20, 0x49	; 73
    2188:	54 e0       	ldi	r21, 0x04	; 4
    218a:	66 e1       	ldi	r22, 0x16	; 22
    218c:	93 df       	rcall	.-218    	; 0x20b4 <SendCommand>
    218e:	fe 01       	movw	r30, r28
    2190:	e6 57       	subi	r30, 0x76	; 118
    2192:	fd 4f       	sbci	r31, 0xFD	; 253
    2194:	80 81       	ld	r24, Z
    2196:	81 11       	cpse	r24, r1
    2198:	06 c0       	rjmp	.+12     	; 0x21a6 <ESP8266_GetSTAIP+0x2a>
    219a:	ca 57       	subi	r28, 0x7A	; 122
    219c:	dd 4f       	sbci	r29, 0xFD	; 253
    219e:	98 81       	ld	r25, Y
    21a0:	9c 7f       	andi	r25, 0xFC	; 252
    21a2:	9b 7f       	andi	r25, 0xFB	; 251
    21a4:	98 83       	st	Y, r25
    21a6:	df 91       	pop	r29
    21a8:	cf 91       	pop	r28
    21aa:	08 95       	ret

000021ac <ESP8266_GetAPIP>:
    21ac:	cf 93       	push	r28
    21ae:	df 93       	push	r29
    21b0:	ec 01       	movw	r28, r24
    21b2:	2a e5       	ldi	r18, 0x5A	; 90
    21b4:	34 e0       	ldi	r19, 0x04	; 4
    21b6:	45 e6       	ldi	r20, 0x65	; 101
    21b8:	54 e0       	ldi	r21, 0x04	; 4
    21ba:	67 e1       	ldi	r22, 0x17	; 23
    21bc:	7b df       	rcall	.-266    	; 0x20b4 <SendCommand>
    21be:	fe 01       	movw	r30, r28
    21c0:	e6 57       	subi	r30, 0x76	; 118
    21c2:	fd 4f       	sbci	r31, 0xFD	; 253
    21c4:	80 81       	ld	r24, Z
    21c6:	81 11       	cpse	r24, r1
    21c8:	06 c0       	rjmp	.+12     	; 0x21d6 <ESP8266_GetAPIP+0x2a>
    21ca:	ca 57       	subi	r28, 0x7A	; 122
    21cc:	dd 4f       	sbci	r29, 0xFD	; 253
    21ce:	98 81       	ld	r25, Y
    21d0:	9f 7c       	andi	r25, 0xCF	; 207
    21d2:	9f 7b       	andi	r25, 0xBF	; 191
    21d4:	98 83       	st	Y, r25
    21d6:	df 91       	pop	r29
    21d8:	cf 91       	pop	r28
    21da:	08 95       	ret

000021dc <ESP8266_GetSTAMAC>:
    21dc:	cf 93       	push	r28
    21de:	df 93       	push	r29
    21e0:	ec 01       	movw	r28, r24
    21e2:	21 ed       	ldi	r18, 0xD1	; 209
    21e4:	33 e0       	ldi	r19, 0x03	; 3
    21e6:	45 e7       	ldi	r20, 0x75	; 117
    21e8:	54 e0       	ldi	r21, 0x04	; 4
    21ea:	68 e1       	ldi	r22, 0x18	; 24
    21ec:	63 df       	rcall	.-314    	; 0x20b4 <SendCommand>
    21ee:	fe 01       	movw	r30, r28
    21f0:	e6 57       	subi	r30, 0x76	; 118
    21f2:	fd 4f       	sbci	r31, 0xFD	; 253
    21f4:	80 81       	ld	r24, Z
    21f6:	81 11       	cpse	r24, r1
    21f8:	05 c0       	rjmp	.+10     	; 0x2204 <__stack+0x5>
    21fa:	ca 57       	subi	r28, 0x7A	; 122
    21fc:	dd 4f       	sbci	r29, 0xFD	; 253
    21fe:	98 81       	ld	r25, Y
    2200:	97 7f       	andi	r25, 0xF7	; 247
    2202:	98 83       	st	Y, r25
    2204:	df 91       	pop	r29
    2206:	cf 91       	pop	r28
    2208:	08 95       	ret

0000220a <ESP8266_GetAPMAC>:
    220a:	cf 93       	push	r28
    220c:	df 93       	push	r29
    220e:	ec 01       	movw	r28, r24
    2210:	2c ed       	ldi	r18, 0xDC	; 220
    2212:	33 e0       	ldi	r19, 0x03	; 3
    2214:	45 e8       	ldi	r20, 0x85	; 133
    2216:	54 e0       	ldi	r21, 0x04	; 4
    2218:	69 e1       	ldi	r22, 0x19	; 25
    221a:	4c df       	rcall	.-360    	; 0x20b4 <SendCommand>
    221c:	fe 01       	movw	r30, r28
    221e:	e6 57       	subi	r30, 0x76	; 118
    2220:	fd 4f       	sbci	r31, 0xFD	; 253
    2222:	80 81       	ld	r24, Z
    2224:	81 11       	cpse	r24, r1
    2226:	05 c0       	rjmp	.+10     	; 0x2232 <ESP8266_GetAPMAC+0x28>
    2228:	ca 57       	subi	r28, 0x7A	; 122
    222a:	dd 4f       	sbci	r29, 0xFD	; 253
    222c:	98 81       	ld	r25, Y
    222e:	9f 77       	andi	r25, 0x7F	; 127
    2230:	98 83       	st	Y, r25
    2232:	df 91       	pop	r29
    2234:	cf 91       	pop	r28
    2236:	08 95       	ret

00002238 <ESP8266_WaitReady>:
    2238:	0f 93       	push	r16
    223a:	1f 93       	push	r17
    223c:	cf 93       	push	r28
    223e:	df 93       	push	r29
    2240:	ec 01       	movw	r28, r24
    2242:	8c 01       	movw	r16, r24
    2244:	09 57       	subi	r16, 0x79	; 121
    2246:	1d 4f       	sbci	r17, 0xFD	; 253
    2248:	f8 01       	movw	r30, r16
    224a:	80 81       	ld	r24, Z
    224c:	80 ff       	sbrs	r24, 0
    224e:	11 c0       	rjmp	.+34     	; 0x2272 <ESP8266_WaitReady+0x3a>
    2250:	42 e0       	ldi	r20, 0x02	; 2
    2252:	50 e0       	ldi	r21, 0x00	; 0
    2254:	66 ee       	ldi	r22, 0xE6	; 230
    2256:	73 e0       	ldi	r23, 0x03	; 3
    2258:	8e e8       	ldi	r24, 0x8E	; 142
    225a:	96 e1       	ldi	r25, 0x16	; 22
    225c:	0e 94 0d 02 	call	0x41a	; 0x41a <BUFFER_Find>
    2260:	99 23       	and	r25, r25
    2262:	3c f0       	brlt	.+14     	; 0x2272 <ESP8266_WaitReady+0x3a>
    2264:	fe 01       	movw	r30, r28
    2266:	ea 57       	subi	r30, 0x7A	; 122
    2268:	fd 4f       	sbci	r31, 0xFD	; 253
    226a:	81 81       	ldd	r24, Z+1	; 0x01
    226c:	8e 7f       	andi	r24, 0xFE	; 254
    226e:	81 83       	std	Z+1, r24	; 0x01
    2270:	0a c0       	rjmp	.+20     	; 0x2286 <ESP8266_WaitReady+0x4e>
    2272:	ce 01       	movw	r24, r28
    2274:	3e dc       	rcall	.-1924   	; 0x1af2 <ESP8266_Update>
    2276:	8c 81       	ldd	r24, Y+4	; 0x04
    2278:	9d 81       	ldd	r25, Y+5	; 0x05
    227a:	ae 81       	ldd	r26, Y+6	; 0x06
    227c:	bf 81       	ldd	r27, Y+7	; 0x07
    227e:	89 2b       	or	r24, r25
    2280:	8a 2b       	or	r24, r26
    2282:	8b 2b       	or	r24, r27
    2284:	09 f7       	brne	.-62     	; 0x2248 <ESP8266_WaitReady+0x10>
    2286:	c6 57       	subi	r28, 0x76	; 118
    2288:	dd 4f       	sbci	r29, 0xFD	; 253
    228a:	18 82       	st	Y, r1
    228c:	80 e0       	ldi	r24, 0x00	; 0
    228e:	df 91       	pop	r29
    2290:	cf 91       	pop	r28
    2292:	1f 91       	pop	r17
    2294:	0f 91       	pop	r16
    2296:	08 95       	ret

00002298 <ESP8266_ServerEnable>:
    2298:	ef 92       	push	r14
    229a:	ff 92       	push	r15
    229c:	0f 93       	push	r16
    229e:	1f 93       	push	r17
    22a0:	cf 93       	push	r28
    22a2:	df 93       	push	r29
    22a4:	cd b7       	in	r28, 0x3d	; 61
    22a6:	de b7       	in	r29, 0x3e	; 62
    22a8:	63 97       	sbiw	r28, 0x13	; 19
    22aa:	0f b6       	in	r0, 0x3f	; 63
    22ac:	f8 94       	cli
    22ae:	de bf       	out	0x3e, r29	; 62
    22b0:	0f be       	out	0x3f, r0	; 63
    22b2:	cd bf       	out	0x3d, r28	; 61
    22b4:	8c 01       	movw	r16, r24
    22b6:	7f 93       	push	r23
    22b8:	6f 93       	push	r22
    22ba:	80 eb       	ldi	r24, 0xB0	; 176
    22bc:	94 e0       	ldi	r25, 0x04	; 4
    22be:	9f 93       	push	r25
    22c0:	8f 93       	push	r24
    22c2:	ce 01       	movw	r24, r28
    22c4:	01 96       	adiw	r24, 0x01	; 1
    22c6:	7c 01       	movw	r14, r24
    22c8:	9f 93       	push	r25
    22ca:	8f 93       	push	r24
    22cc:	0e 94 36 1a 	call	0x346c	; 0x346c <sprintf>
    22d0:	24 ec       	ldi	r18, 0xC4	; 196
    22d2:	34 e0       	ldi	r19, 0x04	; 4
    22d4:	a7 01       	movw	r20, r14
    22d6:	66 e0       	ldi	r22, 0x06	; 6
    22d8:	c8 01       	movw	r24, r16
    22da:	ec de       	rcall	.-552    	; 0x20b4 <SendCommand>
    22dc:	f8 2e       	mov	r15, r24
    22de:	0f 90       	pop	r0
    22e0:	0f 90       	pop	r0
    22e2:	0f 90       	pop	r0
    22e4:	0f 90       	pop	r0
    22e6:	0f 90       	pop	r0
    22e8:	0f 90       	pop	r0
    22ea:	88 23       	and	r24, r24
    22ec:	29 f0       	breq	.+10     	; 0x22f8 <ESP8266_ServerEnable+0x60>
    22ee:	f8 01       	movw	r30, r16
    22f0:	e6 57       	subi	r30, 0x76	; 118
    22f2:	fd 4f       	sbci	r31, 0xFD	; 253
    22f4:	f0 80       	ld	r15, Z
    22f6:	12 c0       	rjmp	.+36     	; 0x231c <ESP8266_ServerEnable+0x84>
    22f8:	c8 01       	movw	r24, r16
    22fa:	9e df       	rcall	.-196    	; 0x2238 <ESP8266_WaitReady>
    22fc:	f8 01       	movw	r30, r16
    22fe:	e9 57       	subi	r30, 0x79	; 121
    2300:	fd 4f       	sbci	r31, 0xFD	; 253
    2302:	80 81       	ld	r24, Z
    2304:	81 fd       	sbrc	r24, 1
    2306:	06 c0       	rjmp	.+12     	; 0x2314 <ESP8266_ServerEnable+0x7c>
    2308:	33 96       	adiw	r30, 0x03	; 3
    230a:	81 e0       	ldi	r24, 0x01	; 1
    230c:	80 83       	st	Z, r24
    230e:	ff 24       	eor	r15, r15
    2310:	f3 94       	inc	r15
    2312:	04 c0       	rjmp	.+8      	; 0x231c <ESP8266_ServerEnable+0x84>
    2314:	f8 01       	movw	r30, r16
    2316:	e6 57       	subi	r30, 0x76	; 118
    2318:	fd 4f       	sbci	r31, 0xFD	; 253
    231a:	10 82       	st	Z, r1
    231c:	8f 2d       	mov	r24, r15
    231e:	63 96       	adiw	r28, 0x13	; 19
    2320:	0f b6       	in	r0, 0x3f	; 63
    2322:	f8 94       	cli
    2324:	de bf       	out	0x3e, r29	; 62
    2326:	0f be       	out	0x3f, r0	; 63
    2328:	cd bf       	out	0x3d, r28	; 61
    232a:	df 91       	pop	r29
    232c:	cf 91       	pop	r28
    232e:	1f 91       	pop	r17
    2330:	0f 91       	pop	r16
    2332:	ff 90       	pop	r15
    2334:	ef 90       	pop	r14
    2336:	08 95       	ret

00002338 <ESP8266_GetAP>:
    2338:	cf 93       	push	r28
    233a:	df 93       	push	r29
    233c:	ec 01       	movw	r28, r24
    233e:	21 e4       	ldi	r18, 0x41	; 65
    2340:	35 e0       	ldi	r19, 0x05	; 5
    2342:	41 ef       	ldi	r20, 0xF1	; 241
    2344:	54 e0       	ldi	r21, 0x04	; 4
    2346:	6c e0       	ldi	r22, 0x0C	; 12
    2348:	b5 de       	rcall	.-662    	; 0x20b4 <SendCommand>
    234a:	88 23       	and	r24, r24
    234c:	21 f0       	breq	.+8      	; 0x2356 <ESP8266_GetAP+0x1e>
    234e:	c6 57       	subi	r28, 0x76	; 118
    2350:	dd 4f       	sbci	r29, 0xFD	; 253
    2352:	88 81       	ld	r24, Y
    2354:	02 c0       	rjmp	.+4      	; 0x235a <ESP8266_GetAP+0x22>
    2356:	ce 01       	movw	r24, r28
    2358:	6f df       	rcall	.-290    	; 0x2238 <ESP8266_WaitReady>
    235a:	df 91       	pop	r29
    235c:	cf 91       	pop	r28
    235e:	08 95       	ret

00002360 <ESP8266_SetMode>:
    2360:	df 92       	push	r13
    2362:	ef 92       	push	r14
    2364:	ff 92       	push	r15
    2366:	0f 93       	push	r16
    2368:	1f 93       	push	r17
    236a:	cf 93       	push	r28
    236c:	df 93       	push	r29
    236e:	cd b7       	in	r28, 0x3d	; 61
    2370:	de b7       	in	r29, 0x3e	; 62
    2372:	61 97       	sbiw	r28, 0x11	; 17
    2374:	0f b6       	in	r0, 0x3f	; 63
    2376:	f8 94       	cli
    2378:	de bf       	out	0x3e, r29	; 62
    237a:	0f be       	out	0x3f, r0	; 63
    237c:	cd bf       	out	0x3d, r28	; 61
    237e:	8c 01       	movw	r16, r24
    2380:	d6 2e       	mov	r13, r22
    2382:	1f 92       	push	r1
    2384:	6f 93       	push	r22
    2386:	8d ef       	ldi	r24, 0xFD	; 253
    2388:	94 e0       	ldi	r25, 0x04	; 4
    238a:	9f 93       	push	r25
    238c:	8f 93       	push	r24
    238e:	ce 01       	movw	r24, r28
    2390:	01 96       	adiw	r24, 0x01	; 1
    2392:	7c 01       	movw	r14, r24
    2394:	9f 93       	push	r25
    2396:	8f 93       	push	r24
    2398:	0e 94 36 1a 	call	0x346c	; 0x346c <sprintf>
    239c:	20 e1       	ldi	r18, 0x10	; 16
    239e:	35 e0       	ldi	r19, 0x05	; 5
    23a0:	a7 01       	movw	r20, r14
    23a2:	65 e0       	ldi	r22, 0x05	; 5
    23a4:	c8 01       	movw	r24, r16
    23a6:	86 de       	rcall	.-756    	; 0x20b4 <SendCommand>
    23a8:	0f 90       	pop	r0
    23aa:	0f 90       	pop	r0
    23ac:	0f 90       	pop	r0
    23ae:	0f 90       	pop	r0
    23b0:	0f 90       	pop	r0
    23b2:	0f 90       	pop	r0
    23b4:	88 23       	and	r24, r24
    23b6:	29 f0       	breq	.+10     	; 0x23c2 <ESP8266_SetMode+0x62>
    23b8:	f8 01       	movw	r30, r16
    23ba:	e6 57       	subi	r30, 0x76	; 118
    23bc:	fd 4f       	sbci	r31, 0xFD	; 253
    23be:	80 81       	ld	r24, Z
    23c0:	13 c0       	rjmp	.+38     	; 0x23e8 <ESP8266_SetMode+0x88>
    23c2:	f8 01       	movw	r30, r16
    23c4:	e5 53       	subi	r30, 0x35	; 53
    23c6:	fe 4f       	sbci	r31, 0xFE	; 254
    23c8:	d0 82       	st	Z, r13
    23ca:	c8 01       	movw	r24, r16
    23cc:	35 df       	rcall	.-406    	; 0x2238 <ESP8266_WaitReady>
    23ce:	f8 01       	movw	r30, r16
    23d0:	e4 53       	subi	r30, 0x34	; 52
    23d2:	fe 4f       	sbci	r31, 0xFE	; 254
    23d4:	80 81       	ld	r24, Z
    23d6:	8d 15       	cp	r24, r13
    23d8:	29 f0       	breq	.+10     	; 0x23e4 <ESP8266_SetMode+0x84>
    23da:	e2 54       	subi	r30, 0x42	; 66
    23dc:	ff 4f       	sbci	r31, 0xFF	; 255
    23de:	81 e0       	ldi	r24, 0x01	; 1
    23e0:	80 83       	st	Z, r24
    23e2:	02 c0       	rjmp	.+4      	; 0x23e8 <ESP8266_SetMode+0x88>
    23e4:	c8 01       	movw	r24, r16
    23e6:	a8 df       	rcall	.-176    	; 0x2338 <ESP8266_GetAP>
    23e8:	61 96       	adiw	r28, 0x11	; 17
    23ea:	0f b6       	in	r0, 0x3f	; 63
    23ec:	f8 94       	cli
    23ee:	de bf       	out	0x3e, r29	; 62
    23f0:	0f be       	out	0x3f, r0	; 63
    23f2:	cd bf       	out	0x3d, r28	; 61
    23f4:	df 91       	pop	r29
    23f6:	cf 91       	pop	r28
    23f8:	1f 91       	pop	r17
    23fa:	0f 91       	pop	r16
    23fc:	ff 90       	pop	r15
    23fe:	ef 90       	pop	r14
    2400:	df 90       	pop	r13
    2402:	08 95       	ret

00002404 <ESP8266_RequestSendData>:
    2404:	0f 93       	push	r16
    2406:	1f 93       	push	r17
    2408:	cf 93       	push	r28
    240a:	df 93       	push	r29
    240c:	ec 01       	movw	r28, r24
    240e:	8b 01       	movw	r16, r22
    2410:	8c 81       	ldd	r24, Y+4	; 0x04
    2412:	9d 81       	ldd	r25, Y+5	; 0x05
    2414:	ae 81       	ldd	r26, Y+6	; 0x06
    2416:	bf 81       	ldd	r27, Y+7	; 0x07
    2418:	89 2b       	or	r24, r25
    241a:	8a 2b       	or	r24, r26
    241c:	8b 2b       	or	r24, r27
    241e:	39 f0       	breq	.+14     	; 0x242e <ESP8266_RequestSendData+0x2a>
    2420:	ce 01       	movw	r24, r28
    2422:	67 db       	rcall	.-2354   	; 0x1af2 <ESP8266_Update>
    2424:	c6 57       	subi	r28, 0x76	; 118
    2426:	dd 4f       	sbci	r29, 0xFD	; 253
    2428:	87 e0       	ldi	r24, 0x07	; 7
    242a:	88 83       	st	Y, r24
    242c:	33 c0       	rjmp	.+102    	; 0x2494 <ESP8266_RequestSendData+0x90>
    242e:	fb 01       	movw	r30, r22
    2430:	81 81       	ldd	r24, Z+1	; 0x01
    2432:	80 5d       	subi	r24, 0xD0	; 208
    2434:	81 83       	std	Z+1, r24	; 0x01
    2436:	6d e0       	ldi	r22, 0x0D	; 13
    2438:	70 e0       	ldi	r23, 0x00	; 0
    243a:	82 e9       	ldi	r24, 0x92	; 146
    243c:	95 e0       	ldi	r25, 0x05	; 5
    243e:	88 d3       	rcall	.+1808   	; 0x2b50 <ESP8266_LL_USARTSend>
    2440:	61 e0       	ldi	r22, 0x01	; 1
    2442:	70 e0       	ldi	r23, 0x00	; 0
    2444:	c8 01       	movw	r24, r16
    2446:	01 96       	adiw	r24, 0x01	; 1
    2448:	83 d3       	rcall	.+1798   	; 0x2b50 <ESP8266_LL_USARTSend>
    244a:	67 e0       	ldi	r22, 0x07	; 7
    244c:	70 e0       	ldi	r23, 0x00	; 0
    244e:	80 ea       	ldi	r24, 0xA0	; 160
    2450:	95 e0       	ldi	r25, 0x05	; 5
    2452:	7e d3       	rcall	.+1788   	; 0x2b50 <ESP8266_LL_USARTSend>
    2454:	f8 01       	movw	r30, r16
    2456:	81 81       	ldd	r24, Z+1	; 0x01
    2458:	80 53       	subi	r24, 0x30	; 48
    245a:	81 83       	std	Z+1, r24	; 0x01
    245c:	28 ea       	ldi	r18, 0xA8	; 168
    245e:	35 e0       	ldi	r19, 0x05	; 5
    2460:	40 e0       	ldi	r20, 0x00	; 0
    2462:	50 e0       	ldi	r21, 0x00	; 0
    2464:	68 e0       	ldi	r22, 0x08	; 8
    2466:	ce 01       	movw	r24, r28
    2468:	25 de       	rcall	.-950    	; 0x20b4 <SendCommand>
    246a:	88 23       	and	r24, r24
    246c:	21 f0       	breq	.+8      	; 0x2476 <ESP8266_RequestSendData+0x72>
    246e:	c6 57       	subi	r28, 0x76	; 118
    2470:	dd 4f       	sbci	r29, 0xFD	; 253
    2472:	88 81       	ld	r24, Y
    2474:	0f c0       	rjmp	.+30     	; 0x2494 <ESP8266_RequestSendData+0x90>
    2476:	81 e0       	ldi	r24, 0x01	; 1
    2478:	f8 01       	movw	r30, r16
    247a:	82 8b       	std	Z+18, r24	; 0x12
    247c:	fe 01       	movw	r30, r28
    247e:	ea 57       	subi	r30, 0x7A	; 122
    2480:	fd 4f       	sbci	r31, 0xFD	; 253
    2482:	81 81       	ldd	r24, Z+1	; 0x01
    2484:	81 60       	ori	r24, 0x01	; 1
    2486:	81 83       	std	Z+1, r24	; 0x01
    2488:	32 97       	sbiw	r30, 0x02	; 2
    248a:	11 83       	std	Z+1, r17	; 0x01
    248c:	00 83       	st	Z, r16
    248e:	c6 57       	subi	r28, 0x76	; 118
    2490:	dd 4f       	sbci	r29, 0xFD	; 253
    2492:	88 81       	ld	r24, Y
    2494:	df 91       	pop	r29
    2496:	cf 91       	pop	r28
    2498:	1f 91       	pop	r17
    249a:	0f 91       	pop	r16
    249c:	08 95       	ret

0000249e <ESP8266_SetMux>:
    249e:	ef 92       	push	r14
    24a0:	ff 92       	push	r15
    24a2:	0f 93       	push	r16
    24a4:	1f 93       	push	r17
    24a6:	cf 93       	push	r28
    24a8:	df 93       	push	r29
    24aa:	cd b7       	in	r28, 0x3d	; 61
    24ac:	de b7       	in	r29, 0x3e	; 62
    24ae:	2e 97       	sbiw	r28, 0x0e	; 14
    24b0:	0f b6       	in	r0, 0x3f	; 63
    24b2:	f8 94       	cli
    24b4:	de bf       	out	0x3e, r29	; 62
    24b6:	0f be       	out	0x3f, r0	; 63
    24b8:	cd bf       	out	0x3d, r28	; 61
    24ba:	8c 01       	movw	r16, r24
    24bc:	fc 01       	movw	r30, r24
    24be:	84 81       	ldd	r24, Z+4	; 0x04
    24c0:	95 81       	ldd	r25, Z+5	; 0x05
    24c2:	a6 81       	ldd	r26, Z+6	; 0x06
    24c4:	b7 81       	ldd	r27, Z+7	; 0x07
    24c6:	89 2b       	or	r24, r25
    24c8:	8a 2b       	or	r24, r26
    24ca:	8b 2b       	or	r24, r27
    24cc:	61 f0       	breq	.+24     	; 0x24e6 <ESP8266_SetMux+0x48>
    24ce:	c8 01       	movw	r24, r16
    24d0:	10 db       	rcall	.-2528   	; 0x1af2 <ESP8266_Update>
    24d2:	f8 01       	movw	r30, r16
    24d4:	e6 57       	subi	r30, 0x76	; 118
    24d6:	fd 4f       	sbci	r31, 0xFD	; 253
    24d8:	87 e0       	ldi	r24, 0x07	; 7
    24da:	80 83       	st	Z, r24
    24dc:	0f 2e       	mov	r0, r31
    24de:	f7 e0       	ldi	r31, 0x07	; 7
    24e0:	ff 2e       	mov	r15, r31
    24e2:	f0 2d       	mov	r31, r0
    24e4:	32 c0       	rjmp	.+100    	; 0x254a <ESP8266_SetMux+0xac>
    24e6:	1f 92       	push	r1
    24e8:	6f 93       	push	r22
    24ea:	82 ec       	ldi	r24, 0xC2	; 194
    24ec:	95 e0       	ldi	r25, 0x05	; 5
    24ee:	9f 93       	push	r25
    24f0:	8f 93       	push	r24
    24f2:	ce 01       	movw	r24, r28
    24f4:	01 96       	adiw	r24, 0x01	; 1
    24f6:	7c 01       	movw	r14, r24
    24f8:	9f 93       	push	r25
    24fa:	8f 93       	push	r24
    24fc:	b7 d7       	rcall	.+3950   	; 0x346c <sprintf>
    24fe:	21 ed       	ldi	r18, 0xD1	; 209
    2500:	35 e0       	ldi	r19, 0x05	; 5
    2502:	a7 01       	movw	r20, r14
    2504:	6b e0       	ldi	r22, 0x0B	; 11
    2506:	c8 01       	movw	r24, r16
    2508:	d5 dd       	rcall	.-1110   	; 0x20b4 <SendCommand>
    250a:	f8 2e       	mov	r15, r24
    250c:	0f 90       	pop	r0
    250e:	0f 90       	pop	r0
    2510:	0f 90       	pop	r0
    2512:	0f 90       	pop	r0
    2514:	0f 90       	pop	r0
    2516:	0f 90       	pop	r0
    2518:	88 23       	and	r24, r24
    251a:	29 f0       	breq	.+10     	; 0x2526 <ESP8266_SetMux+0x88>
    251c:	f8 01       	movw	r30, r16
    251e:	e6 57       	subi	r30, 0x76	; 118
    2520:	fd 4f       	sbci	r31, 0xFD	; 253
    2522:	f0 80       	ld	r15, Z
    2524:	12 c0       	rjmp	.+36     	; 0x254a <ESP8266_SetMux+0xac>
    2526:	c8 01       	movw	r24, r16
    2528:	87 de       	rcall	.-754    	; 0x2238 <ESP8266_WaitReady>
    252a:	f8 01       	movw	r30, r16
    252c:	e9 57       	subi	r30, 0x79	; 121
    252e:	fd 4f       	sbci	r31, 0xFD	; 253
    2530:	80 81       	ld	r24, Z
    2532:	81 fd       	sbrc	r24, 1
    2534:	06 c0       	rjmp	.+12     	; 0x2542 <ESP8266_SetMux+0xa4>
    2536:	33 96       	adiw	r30, 0x03	; 3
    2538:	81 e0       	ldi	r24, 0x01	; 1
    253a:	80 83       	st	Z, r24
    253c:	ff 24       	eor	r15, r15
    253e:	f3 94       	inc	r15
    2540:	04 c0       	rjmp	.+8      	; 0x254a <ESP8266_SetMux+0xac>
    2542:	f8 01       	movw	r30, r16
    2544:	e6 57       	subi	r30, 0x76	; 118
    2546:	fd 4f       	sbci	r31, 0xFD	; 253
    2548:	10 82       	st	Z, r1
    254a:	8f 2d       	mov	r24, r15
    254c:	2e 96       	adiw	r28, 0x0e	; 14
    254e:	0f b6       	in	r0, 0x3f	; 63
    2550:	f8 94       	cli
    2552:	de bf       	out	0x3e, r29	; 62
    2554:	0f be       	out	0x3f, r0	; 63
    2556:	cd bf       	out	0x3d, r28	; 61
    2558:	df 91       	pop	r29
    255a:	cf 91       	pop	r28
    255c:	1f 91       	pop	r17
    255e:	0f 91       	pop	r16
    2560:	ff 90       	pop	r15
    2562:	ef 90       	pop	r14
    2564:	08 95       	ret

00002566 <ESP8266_Setdinfo>:
    2566:	ef 92       	push	r14
    2568:	ff 92       	push	r15
    256a:	0f 93       	push	r16
    256c:	1f 93       	push	r17
    256e:	cf 93       	push	r28
    2570:	df 93       	push	r29
    2572:	cd b7       	in	r28, 0x3d	; 61
    2574:	de b7       	in	r29, 0x3e	; 62
    2576:	60 97       	sbiw	r28, 0x10	; 16
    2578:	0f b6       	in	r0, 0x3f	; 63
    257a:	f8 94       	cli
    257c:	de bf       	out	0x3e, r29	; 62
    257e:	0f be       	out	0x3f, r0	; 63
    2580:	cd bf       	out	0x3d, r28	; 61
    2582:	8c 01       	movw	r16, r24
    2584:	fc 01       	movw	r30, r24
    2586:	84 81       	ldd	r24, Z+4	; 0x04
    2588:	95 81       	ldd	r25, Z+5	; 0x05
    258a:	a6 81       	ldd	r26, Z+6	; 0x06
    258c:	b7 81       	ldd	r27, Z+7	; 0x07
    258e:	89 2b       	or	r24, r25
    2590:	8a 2b       	or	r24, r26
    2592:	8b 2b       	or	r24, r27
    2594:	61 f0       	breq	.+24     	; 0x25ae <ESP8266_Setdinfo+0x48>
    2596:	c8 01       	movw	r24, r16
    2598:	ac da       	rcall	.-2728   	; 0x1af2 <ESP8266_Update>
    259a:	f8 01       	movw	r30, r16
    259c:	e6 57       	subi	r30, 0x76	; 118
    259e:	fd 4f       	sbci	r31, 0xFD	; 253
    25a0:	87 e0       	ldi	r24, 0x07	; 7
    25a2:	80 83       	st	Z, r24
    25a4:	0f 2e       	mov	r0, r31
    25a6:	f7 e0       	ldi	r31, 0x07	; 7
    25a8:	ff 2e       	mov	r15, r31
    25aa:	f0 2d       	mov	r31, r0
    25ac:	32 c0       	rjmp	.+100    	; 0x2612 <ESP8266_Setdinfo+0xac>
    25ae:	1f 92       	push	r1
    25b0:	6f 93       	push	r22
    25b2:	8b ed       	ldi	r24, 0xDB	; 219
    25b4:	95 e0       	ldi	r25, 0x05	; 5
    25b6:	9f 93       	push	r25
    25b8:	8f 93       	push	r24
    25ba:	ce 01       	movw	r24, r28
    25bc:	01 96       	adiw	r24, 0x01	; 1
    25be:	7c 01       	movw	r14, r24
    25c0:	9f 93       	push	r25
    25c2:	8f 93       	push	r24
    25c4:	53 d7       	rcall	.+3750   	; 0x346c <sprintf>
    25c6:	2c ee       	ldi	r18, 0xEC	; 236
    25c8:	35 e0       	ldi	r19, 0x05	; 5
    25ca:	a7 01       	movw	r20, r14
    25cc:	67 e0       	ldi	r22, 0x07	; 7
    25ce:	c8 01       	movw	r24, r16
    25d0:	71 dd       	rcall	.-1310   	; 0x20b4 <SendCommand>
    25d2:	f8 2e       	mov	r15, r24
    25d4:	0f 90       	pop	r0
    25d6:	0f 90       	pop	r0
    25d8:	0f 90       	pop	r0
    25da:	0f 90       	pop	r0
    25dc:	0f 90       	pop	r0
    25de:	0f 90       	pop	r0
    25e0:	88 23       	and	r24, r24
    25e2:	29 f0       	breq	.+10     	; 0x25ee <ESP8266_Setdinfo+0x88>
    25e4:	f8 01       	movw	r30, r16
    25e6:	e6 57       	subi	r30, 0x76	; 118
    25e8:	fd 4f       	sbci	r31, 0xFD	; 253
    25ea:	f0 80       	ld	r15, Z
    25ec:	12 c0       	rjmp	.+36     	; 0x2612 <ESP8266_Setdinfo+0xac>
    25ee:	c8 01       	movw	r24, r16
    25f0:	23 de       	rcall	.-954    	; 0x2238 <ESP8266_WaitReady>
    25f2:	f8 01       	movw	r30, r16
    25f4:	e9 57       	subi	r30, 0x79	; 121
    25f6:	fd 4f       	sbci	r31, 0xFD	; 253
    25f8:	80 81       	ld	r24, Z
    25fa:	81 fd       	sbrc	r24, 1
    25fc:	06 c0       	rjmp	.+12     	; 0x260a <ESP8266_Setdinfo+0xa4>
    25fe:	33 96       	adiw	r30, 0x03	; 3
    2600:	81 e0       	ldi	r24, 0x01	; 1
    2602:	80 83       	st	Z, r24
    2604:	ff 24       	eor	r15, r15
    2606:	f3 94       	inc	r15
    2608:	04 c0       	rjmp	.+8      	; 0x2612 <ESP8266_Setdinfo+0xac>
    260a:	f8 01       	movw	r30, r16
    260c:	e6 57       	subi	r30, 0x76	; 118
    260e:	fd 4f       	sbci	r31, 0xFD	; 253
    2610:	10 82       	st	Z, r1
    2612:	8f 2d       	mov	r24, r15
    2614:	60 96       	adiw	r28, 0x10	; 16
    2616:	0f b6       	in	r0, 0x3f	; 63
    2618:	f8 94       	cli
    261a:	de bf       	out	0x3e, r29	; 62
    261c:	0f be       	out	0x3f, r0	; 63
    261e:	cd bf       	out	0x3d, r28	; 61
    2620:	df 91       	pop	r29
    2622:	cf 91       	pop	r28
    2624:	1f 91       	pop	r17
    2626:	0f 91       	pop	r16
    2628:	ff 90       	pop	r15
    262a:	ef 90       	pop	r14
    262c:	08 95       	ret

0000262e <ESP8266_Init>:
    262e:	8f 92       	push	r8
    2630:	9f 92       	push	r9
    2632:	af 92       	push	r10
    2634:	bf 92       	push	r11
    2636:	cf 92       	push	r12
    2638:	df 92       	push	r13
    263a:	ef 92       	push	r14
    263c:	ff 92       	push	r15
    263e:	1f 93       	push	r17
    2640:	cf 93       	push	r28
    2642:	df 93       	push	r29
    2644:	ec 01       	movw	r28, r24
    2646:	6a 01       	movw	r12, r20
    2648:	7b 01       	movw	r14, r22
    264a:	fc 01       	movw	r30, r24
    264c:	ec 5a       	subi	r30, 0xAC	; 172
    264e:	ff 4f       	sbci	r31, 0xFF	; 255
    2650:	10 82       	st	Z, r1
    2652:	11 82       	std	Z+1, r1	; 0x01
    2654:	12 82       	std	Z+2, r1	; 0x02
    2656:	13 82       	std	Z+3, r1	; 0x03
    2658:	4e e8       	ldi	r20, 0x8E	; 142
    265a:	54 e1       	ldi	r21, 0x14	; 20
    265c:	60 e0       	ldi	r22, 0x00	; 0
    265e:	72 e0       	ldi	r23, 0x02	; 2
    2660:	8a e9       	ldi	r24, 0x9A	; 154
    2662:	96 e1       	ldi	r25, 0x16	; 22
    2664:	0e 94 af 00 	call	0x15e	; 0x15e <BUFFER_Init>
    2668:	88 23       	and	r24, r24
    266a:	29 f0       	breq	.+10     	; 0x2676 <ESP8266_Init+0x48>
    266c:	c6 57       	subi	r28, 0x76	; 118
    266e:	dd 4f       	sbci	r29, 0xFD	; 253
    2670:	85 e0       	ldi	r24, 0x05	; 5
    2672:	88 83       	st	Y, r24
    2674:	d1 c0       	rjmp	.+418    	; 0x2818 <ESP8266_Init+0x1ea>
    2676:	4e e8       	ldi	r20, 0x8E	; 142
    2678:	50 e1       	ldi	r21, 0x10	; 16
    267a:	60 e0       	ldi	r22, 0x00	; 0
    267c:	74 e0       	ldi	r23, 0x04	; 4
    267e:	8e e8       	ldi	r24, 0x8E	; 142
    2680:	96 e1       	ldi	r25, 0x16	; 22
    2682:	0e 94 af 00 	call	0x15e	; 0x15e <BUFFER_Init>
    2686:	88 23       	and	r24, r24
    2688:	29 f0       	breq	.+10     	; 0x2694 <ESP8266_Init+0x66>
    268a:	c6 57       	subi	r28, 0x76	; 118
    268c:	dd 4f       	sbci	r29, 0xFD	; 253
    268e:	85 e0       	ldi	r24, 0x05	; 5
    2690:	88 83       	st	Y, r24
    2692:	c2 c0       	rjmp	.+388    	; 0x2818 <ESP8266_Init+0x1ea>
    2694:	27 9a       	sbi	0x04, 7	; 4
    2696:	2f 98       	cbi	0x05, 7	; 5
    2698:	24 e6       	ldi	r18, 0x64	; 100
    269a:	30 e0       	ldi	r19, 0x00	; 0
    269c:	8f e9       	ldi	r24, 0x9F	; 159
    269e:	9f e0       	ldi	r25, 0x0F	; 15
    26a0:	01 97       	sbiw	r24, 0x01	; 1
    26a2:	f1 f7       	brne	.-4      	; 0x26a0 <ESP8266_Init+0x72>
    26a4:	00 c0       	rjmp	.+0      	; 0x26a6 <ESP8266_Init+0x78>
    26a6:	00 00       	nop
    26a8:	21 50       	subi	r18, 0x01	; 1
    26aa:	31 09       	sbc	r19, r1
    26ac:	b9 f7       	brne	.-18     	; 0x269c <ESP8266_Init+0x6e>
    26ae:	2f 9a       	sbi	0x05, 7	; 5
    26b0:	24 e6       	ldi	r18, 0x64	; 100
    26b2:	30 e0       	ldi	r19, 0x00	; 0
    26b4:	ef e9       	ldi	r30, 0x9F	; 159
    26b6:	ff e0       	ldi	r31, 0x0F	; 15
    26b8:	31 97       	sbiw	r30, 0x01	; 1
    26ba:	f1 f7       	brne	.-4      	; 0x26b8 <ESP8266_Init+0x8a>
    26bc:	00 c0       	rjmp	.+0      	; 0x26be <ESP8266_Init+0x90>
    26be:	00 00       	nop
    26c0:	21 50       	subi	r18, 0x01	; 1
    26c2:	31 09       	sbc	r19, r1
    26c4:	b9 f7       	brne	.-18     	; 0x26b4 <ESP8266_Init+0x86>
    26c6:	c8 82       	st	Y, r12
    26c8:	d9 82       	std	Y+1, r13	; 0x01
    26ca:	ea 82       	std	Y+2, r14	; 0x02
    26cc:	fb 82       	std	Y+3, r15	; 0x03
    26ce:	c7 01       	movw	r24, r14
    26d0:	b6 01       	movw	r22, r12
    26d2:	ea d1       	rcall	.+980    	; 0x2aa8 <ESP8266_LL_USARTInit>
    26d4:	88 ee       	ldi	r24, 0xE8	; 232
    26d6:	93 e0       	ldi	r25, 0x03	; 3
    26d8:	a0 e0       	ldi	r26, 0x00	; 0
    26da:	b0 e0       	ldi	r27, 0x00	; 0
    26dc:	fe 01       	movw	r30, r28
    26de:	ec 5a       	subi	r30, 0xAC	; 172
    26e0:	ff 4f       	sbci	r31, 0xFF	; 255
    26e2:	80 83       	st	Z, r24
    26e4:	91 83       	std	Z+1, r25	; 0x01
    26e6:	a2 83       	std	Z+2, r26	; 0x02
    26e8:	b3 83       	std	Z+3, r27	; 0x03
    26ea:	26 ee       	ldi	r18, 0xE6	; 230
    26ec:	32 e0       	ldi	r19, 0x02	; 2
    26ee:	48 ef       	ldi	r20, 0xF8	; 248
    26f0:	55 e0       	ldi	r21, 0x05	; 5
    26f2:	6f e0       	ldi	r22, 0x0F	; 15
    26f4:	ce 01       	movw	r24, r28
    26f6:	de dc       	rcall	.-1604   	; 0x20b4 <SendCommand>
    26f8:	ce 01       	movw	r24, r28
    26fa:	9e dd       	rcall	.-1220   	; 0x2238 <ESP8266_WaitReady>
    26fc:	fe 01       	movw	r30, r28
    26fe:	e9 57       	subi	r30, 0x79	; 121
    2700:	fd 4f       	sbci	r31, 0xFD	; 253
    2702:	80 81       	ld	r24, Z
    2704:	81 fd       	sbrc	r24, 1
    2706:	48 c0       	rjmp	.+144    	; 0x2798 <ESP8266_Init+0x16a>
    2708:	10 e0       	ldi	r17, 0x00	; 0
    270a:	6e 01       	movw	r12, r28
    270c:	f4 e5       	ldi	r31, 0x54	; 84
    270e:	cf 0e       	add	r12, r31
    2710:	d1 1c       	adc	r13, r1
    2712:	0f 2e       	mov	r0, r31
    2714:	f8 ee       	ldi	r31, 0xE8	; 232
    2716:	8f 2e       	mov	r8, r31
    2718:	f3 e0       	ldi	r31, 0x03	; 3
    271a:	9f 2e       	mov	r9, r31
    271c:	a1 2c       	mov	r10, r1
    271e:	b1 2c       	mov	r11, r1
    2720:	f0 2d       	mov	r31, r0
    2722:	7e 01       	movw	r14, r28
    2724:	89 e7       	ldi	r24, 0x79	; 121
    2726:	e8 1a       	sub	r14, r24
    2728:	8d ef       	ldi	r24, 0xFD	; 253
    272a:	f8 0a       	sbc	r15, r24
    272c:	68 81       	ld	r22, Y
    272e:	79 81       	ldd	r23, Y+1	; 0x01
    2730:	8a 81       	ldd	r24, Y+2	; 0x02
    2732:	9b 81       	ldd	r25, Y+3	; 0x03
    2734:	b9 d1       	rcall	.+882    	; 0x2aa8 <ESP8266_LL_USARTInit>
    2736:	f6 01       	movw	r30, r12
    2738:	80 82       	st	Z, r8
    273a:	91 82       	std	Z+1, r9	; 0x01
    273c:	a2 82       	std	Z+2, r10	; 0x02
    273e:	b3 82       	std	Z+3, r11	; 0x03
    2740:	26 ee       	ldi	r18, 0xE6	; 230
    2742:	32 e0       	ldi	r19, 0x02	; 2
    2744:	48 ef       	ldi	r20, 0xF8	; 248
    2746:	55 e0       	ldi	r21, 0x05	; 5
    2748:	6f e0       	ldi	r22, 0x0F	; 15
    274a:	ce 01       	movw	r24, r28
    274c:	b3 dc       	rcall	.-1690   	; 0x20b4 <SendCommand>
    274e:	ce 01       	movw	r24, r28
    2750:	73 dd       	rcall	.-1306   	; 0x2238 <ESP8266_WaitReady>
    2752:	f7 01       	movw	r30, r14
    2754:	80 81       	ld	r24, Z
    2756:	81 ff       	sbrs	r24, 1
    2758:	17 c0       	rjmp	.+46     	; 0x2788 <ESP8266_Init+0x15a>
    275a:	e1 2f       	mov	r30, r17
    275c:	f0 e0       	ldi	r31, 0x00	; 0
    275e:	ee 0f       	add	r30, r30
    2760:	ff 1f       	adc	r31, r31
    2762:	ee 0f       	add	r30, r30
    2764:	ff 1f       	adc	r31, r31
    2766:	e8 53       	subi	r30, 0x38	; 56
    2768:	f9 4f       	sbci	r31, 0xF9	; 249
    276a:	80 81       	ld	r24, Z
    276c:	91 81       	ldd	r25, Z+1	; 0x01
    276e:	a2 81       	ldd	r26, Z+2	; 0x02
    2770:	b3 81       	ldd	r27, Z+3	; 0x03
    2772:	88 83       	st	Y, r24
    2774:	99 83       	std	Y+1, r25	; 0x01
    2776:	aa 83       	std	Y+2, r26	; 0x02
    2778:	bb 83       	std	Y+3, r27	; 0x03
    277a:	fe 01       	movw	r30, r28
    277c:	e9 57       	subi	r30, 0x79	; 121
    277e:	fd 4f       	sbci	r31, 0xFD	; 253
    2780:	80 81       	ld	r24, Z
    2782:	81 ff       	sbrs	r24, 1
    2784:	04 c0       	rjmp	.+8      	; 0x278e <ESP8266_Init+0x160>
    2786:	08 c0       	rjmp	.+16     	; 0x2798 <ESP8266_Init+0x16a>
    2788:	1f 5f       	subi	r17, 0xFF	; 255
    278a:	14 30       	cpi	r17, 0x04	; 4
    278c:	79 f6       	brne	.-98     	; 0x272c <ESP8266_Init+0xfe>
    278e:	c6 57       	subi	r28, 0x76	; 118
    2790:	dd 4f       	sbci	r29, 0xFD	; 253
    2792:	82 e0       	ldi	r24, 0x02	; 2
    2794:	88 83       	st	Y, r24
    2796:	40 c0       	rjmp	.+128    	; 0x2818 <ESP8266_Init+0x1ea>
    2798:	80 e3       	ldi	r24, 0x30	; 48
    279a:	95 e7       	ldi	r25, 0x75	; 117
    279c:	a0 e0       	ldi	r26, 0x00	; 0
    279e:	b0 e0       	ldi	r27, 0x00	; 0
    27a0:	fe 01       	movw	r30, r28
    27a2:	ec 5a       	subi	r30, 0xAC	; 172
    27a4:	ff 4f       	sbci	r31, 0xFF	; 255
    27a6:	80 83       	st	Z, r24
    27a8:	91 83       	std	Z+1, r25	; 0x01
    27aa:	a2 83       	std	Z+2, r26	; 0x02
    27ac:	b3 83       	std	Z+3, r27	; 0x03
    27ae:	29 ed       	ldi	r18, 0xD9	; 217
    27b0:	32 e0       	ldi	r19, 0x02	; 2
    27b2:	41 e0       	ldi	r20, 0x01	; 1
    27b4:	56 e0       	ldi	r21, 0x06	; 6
    27b6:	6e e0       	ldi	r22, 0x0E	; 14
    27b8:	ce 01       	movw	r24, r28
    27ba:	7c dc       	rcall	.-1800   	; 0x20b4 <SendCommand>
    27bc:	ce 01       	movw	r24, r28
    27be:	3c dd       	rcall	.-1416   	; 0x2238 <ESP8266_WaitReady>
    27c0:	fe 01       	movw	r30, r28
    27c2:	e9 57       	subi	r30, 0x79	; 121
    27c4:	fd 4f       	sbci	r31, 0xFD	; 253
    27c6:	80 81       	ld	r24, Z
    27c8:	81 fd       	sbrc	r24, 1
    27ca:	05 c0       	rjmp	.+10     	; 0x27d6 <ESP8266_Init+0x1a8>
    27cc:	c6 57       	subi	r28, 0x76	; 118
    27ce:	dd 4f       	sbci	r29, 0xFD	; 253
    27d0:	82 e0       	ldi	r24, 0x02	; 2
    27d2:	88 83       	st	Y, r24
    27d4:	21 c0       	rjmp	.+66     	; 0x2818 <ESP8266_Init+0x1ea>
    27d6:	26 e0       	ldi	r18, 0x06	; 6
    27d8:	36 e0       	ldi	r19, 0x06	; 6
    27da:	4b e0       	ldi	r20, 0x0B	; 11
    27dc:	56 e0       	ldi	r21, 0x06	; 6
    27de:	6d e0       	ldi	r22, 0x0D	; 13
    27e0:	ce 01       	movw	r24, r28
    27e2:	68 dc       	rcall	.-1840   	; 0x20b4 <SendCommand>
    27e4:	ce 01       	movw	r24, r28
    27e6:	28 dd       	rcall	.-1456   	; 0x2238 <ESP8266_WaitReady>
    27e8:	61 e0       	ldi	r22, 0x01	; 1
    27ea:	ce 01       	movw	r24, r28
    27ec:	58 de       	rcall	.-848    	; 0x249e <ESP8266_SetMux>
    27ee:	81 11       	cpse	r24, r1
    27f0:	fb cf       	rjmp	.-10     	; 0x27e8 <ESP8266_Init+0x1ba>
    27f2:	61 e0       	ldi	r22, 0x01	; 1
    27f4:	ce 01       	movw	r24, r28
    27f6:	b7 de       	rcall	.-658    	; 0x2566 <ESP8266_Setdinfo>
    27f8:	81 11       	cpse	r24, r1
    27fa:	fb cf       	rjmp	.-10     	; 0x27f2 <ESP8266_Init+0x1c4>
    27fc:	ce 01       	movw	r24, r28
    27fe:	ee dc       	rcall	.-1572   	; 0x21dc <ESP8266_GetSTAMAC>
    2800:	81 11       	cpse	r24, r1
    2802:	fc cf       	rjmp	.-8      	; 0x27fc <ESP8266_Init+0x1ce>
    2804:	ce 01       	movw	r24, r28
    2806:	01 dd       	rcall	.-1534   	; 0x220a <ESP8266_GetAPMAC>
    2808:	81 11       	cpse	r24, r1
    280a:	fc cf       	rjmp	.-8      	; 0x2804 <ESP8266_Init+0x1d6>
    280c:	ce 01       	movw	r24, r28
    280e:	ce dc       	rcall	.-1636   	; 0x21ac <ESP8266_GetAPIP>
    2810:	81 11       	cpse	r24, r1
    2812:	fc cf       	rjmp	.-8      	; 0x280c <ESP8266_Init+0x1de>
    2814:	ce 01       	movw	r24, r28
    2816:	10 dd       	rcall	.-1504   	; 0x2238 <ESP8266_WaitReady>
    2818:	df 91       	pop	r29
    281a:	cf 91       	pop	r28
    281c:	1f 91       	pop	r17
    281e:	ff 90       	pop	r15
    2820:	ef 90       	pop	r14
    2822:	df 90       	pop	r13
    2824:	cf 90       	pop	r12
    2826:	bf 90       	pop	r11
    2828:	af 90       	pop	r10
    282a:	9f 90       	pop	r9
    282c:	8f 90       	pop	r8
    282e:	08 95       	ret

00002830 <ESP8266_WifiConnect>:
    2830:	cf 92       	push	r12
    2832:	df 92       	push	r13
    2834:	ef 92       	push	r14
    2836:	ff 92       	push	r15
    2838:	0f 93       	push	r16
    283a:	1f 93       	push	r17
    283c:	cf 93       	push	r28
    283e:	df 93       	push	r29
    2840:	ec 01       	movw	r28, r24
    2842:	6b 01       	movw	r12, r22
    2844:	7a 01       	movw	r14, r20
    2846:	0c 81       	ldd	r16, Y+4	; 0x04
    2848:	1d 81       	ldd	r17, Y+5	; 0x05
    284a:	2e 81       	ldd	r18, Y+6	; 0x06
    284c:	3f 81       	ldd	r19, Y+7	; 0x07
    284e:	01 2b       	or	r16, r17
    2850:	02 2b       	or	r16, r18
    2852:	03 2b       	or	r16, r19
    2854:	31 f0       	breq	.+12     	; 0x2862 <ESP8266_WifiConnect+0x32>
    2856:	4d d9       	rcall	.-3430   	; 0x1af2 <ESP8266_Update>
    2858:	c6 57       	subi	r28, 0x76	; 118
    285a:	dd 4f       	sbci	r29, 0xFD	; 253
    285c:	87 e0       	ldi	r24, 0x07	; 7
    285e:	88 83       	st	Y, r24
    2860:	1c c0       	rjmp	.+56     	; 0x289a <ESP8266_WifiConnect+0x6a>
    2862:	6e e0       	ldi	r22, 0x0E	; 14
    2864:	70 e0       	ldi	r23, 0x00	; 0
    2866:	82 e1       	ldi	r24, 0x12	; 18
    2868:	96 e0       	ldi	r25, 0x06	; 6
    286a:	72 d1       	rcall	.+740    	; 0x2b50 <ESP8266_LL_USARTSend>
    286c:	c6 01       	movw	r24, r12
    286e:	0e 94 72 03 	call	0x6e4	; 0x6e4 <EscapeStringAndSend>
    2872:	63 e0       	ldi	r22, 0x03	; 3
    2874:	70 e0       	ldi	r23, 0x00	; 0
    2876:	84 ec       	ldi	r24, 0xC4	; 196
    2878:	96 e0       	ldi	r25, 0x06	; 6
    287a:	6a d1       	rcall	.+724    	; 0x2b50 <ESP8266_LL_USARTSend>
    287c:	c7 01       	movw	r24, r14
    287e:	0e 94 72 03 	call	0x6e4	; 0x6e4 <EscapeStringAndSend>
    2882:	63 e0       	ldi	r22, 0x03	; 3
    2884:	70 e0       	ldi	r23, 0x00	; 0
    2886:	81 e2       	ldi	r24, 0x21	; 33
    2888:	96 e0       	ldi	r25, 0x06	; 6
    288a:	62 d1       	rcall	.+708    	; 0x2b50 <ESP8266_LL_USARTSend>
    288c:	2e e9       	ldi	r18, 0x9E	; 158
    288e:	33 e0       	ldi	r19, 0x03	; 3
    2890:	40 e0       	ldi	r20, 0x00	; 0
    2892:	50 e0       	ldi	r21, 0x00	; 0
    2894:	63 e0       	ldi	r22, 0x03	; 3
    2896:	ce 01       	movw	r24, r28
    2898:	0d dc       	rcall	.-2022   	; 0x20b4 <SendCommand>
    289a:	df 91       	pop	r29
    289c:	cf 91       	pop	r28
    289e:	1f 91       	pop	r17
    28a0:	0f 91       	pop	r16
    28a2:	ff 90       	pop	r15
    28a4:	ef 90       	pop	r14
    28a6:	df 90       	pop	r13
    28a8:	cf 90       	pop	r12
    28aa:	08 95       	ret

000028ac <ESP8266_StartClientConnectionTCP>:
}

/******************************************/
/*               TCP CLIENT               */
/******************************************/
ESP8266_Result_t ESP8266_StartClientConnectionTCP(ESP8266_t* ESP8266, char* name, char* location, uint16_t port, void* user_parameters) {
    28ac:	4f 92       	push	r4
    28ae:	5f 92       	push	r5
    28b0:	6f 92       	push	r6
    28b2:	7f 92       	push	r7
    28b4:	8f 92       	push	r8
    28b6:	9f 92       	push	r9
    28b8:	af 92       	push	r10
    28ba:	bf 92       	push	r11
    28bc:	cf 92       	push	r12
    28be:	ef 92       	push	r14
    28c0:	ff 92       	push	r15
    28c2:	0f 93       	push	r16
    28c4:	1f 93       	push	r17
    28c6:	cf 93       	push	r28
    28c8:	df 93       	push	r29
    28ca:	cd b7       	in	r28, 0x3d	; 61
    28cc:	de b7       	in	r29, 0x3e	; 62
    28ce:	27 97       	sbiw	r28, 0x07	; 7
    28d0:	0f b6       	in	r0, 0x3f	; 63
    28d2:	f8 94       	cli
    28d4:	de bf       	out	0x3e, r29	; 62
    28d6:	0f be       	out	0x3f, r0	; 63
    28d8:	cd bf       	out	0x3d, r28	; 61
    28da:	7c 01       	movw	r14, r24
    28dc:	4b 01       	movw	r8, r22
    28de:	5a 01       	movw	r10, r20
    28e0:	38 01       	movw	r6, r16
	int8_t conn = -1;
    28e2:	8f ef       	ldi	r24, 0xFF	; 255
    28e4:	89 83       	std	Y+1, r24	; 0x01
	uint8_t i = 0;
	
	/* Check if IDLE */
	ESP8266_CHECK_IDLE(ESP8266);
    28e6:	f7 01       	movw	r30, r14
    28e8:	84 81       	ldd	r24, Z+4	; 0x04
    28ea:	95 81       	ldd	r25, Z+5	; 0x05
    28ec:	a6 81       	ldd	r26, Z+6	; 0x06
    28ee:	b7 81       	ldd	r27, Z+7	; 0x07
    28f0:	89 2b       	or	r24, r25
    28f2:	8a 2b       	or	r24, r26
    28f4:	8b 2b       	or	r24, r27
    28f6:	49 f0       	breq	.+18     	; 0x290a <ESP8266_StartClientConnectionTCP+0x5e>
    28f8:	c7 01       	movw	r24, r14
    28fa:	fb d8       	rcall	.-3594   	; 0x1af2 <ESP8266_Update>
    28fc:	f7 01       	movw	r30, r14
    28fe:	e6 57       	subi	r30, 0x76	; 118
    2900:	fd 4f       	sbci	r31, 0xFD	; 253
    2902:	87 e0       	ldi	r24, 0x07	; 7
    2904:	80 83       	st	Z, r24
    2906:	17 e0       	ldi	r17, 0x07	; 7
    2908:	b8 c0       	rjmp	.+368    	; 0x2a7a <ESP8266_StartClientConnectionTCP+0x1ce>
	
	/* Check if connected to network */
	ESP8266_CHECK_WIFICONNECTED(ESP8266);
    290a:	f7 01       	movw	r30, r14
    290c:	e9 57       	subi	r30, 0x79	; 121
    290e:	fd 4f       	sbci	r31, 0xFD	; 253
    2910:	80 81       	ld	r24, Z
    2912:	82 ff       	sbrs	r24, 2
    2914:	06 c0       	rjmp	.+12     	; 0x2922 <ESP8266_StartClientConnectionTCP+0x76>
	
	/* Find available connection */
	for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {
		if (!ESP8266->Connection[i].Active) {
    2916:	ef 52       	subi	r30, 0x2F	; 47
    2918:	f2 40       	sbci	r31, 0x02	; 2
    291a:	80 81       	ld	r24, Z
    291c:	81 11       	cpse	r24, r1
    291e:	08 c0       	rjmp	.+16     	; 0x2930 <ESP8266_StartClientConnectionTCP+0x84>
    2920:	a8 c0       	rjmp	.+336    	; 0x2a72 <ESP8266_StartClientConnectionTCP+0x1c6>
	
	/* Check if IDLE */
	ESP8266_CHECK_IDLE(ESP8266);
	
	/* Check if connected to network */
	ESP8266_CHECK_WIFICONNECTED(ESP8266);
    2922:	f7 01       	movw	r30, r14
    2924:	e6 57       	subi	r30, 0x76	; 118
    2926:	fd 4f       	sbci	r31, 0xFD	; 253
    2928:	86 e0       	ldi	r24, 0x06	; 6
    292a:	80 83       	st	Z, r24
    292c:	16 e0       	ldi	r17, 0x06	; 6
    292e:	a5 c0       	rjmp	.+330    	; 0x2a7a <ESP8266_StartClientConnectionTCP+0x1ce>
    2930:	f7 01       	movw	r30, r14
    2932:	e5 56       	subi	r30, 0x65	; 101
    2934:	ff 4f       	sbci	r31, 0xFF	; 255
	
	/* Find available connection */
	for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {
    2936:	01 e0       	ldi	r16, 0x01	; 1
		if (!ESP8266->Connection[i].Active) {
    2938:	80 81       	ld	r24, Z
    293a:	81 11       	cpse	r24, r1
    293c:	05 c0       	rjmp	.+10     	; 0x2948 <ESP8266_StartClientConnectionTCP+0x9c>
			/* Save */
			conn = i;
    293e:	c0 2e       	mov	r12, r16
    2940:	09 83       	std	Y+1, r16	; 0x01
			break;
		}
	}
	
	/* Try it */
	if (conn != -1) {
    2942:	0f 3f       	cpi	r16, 0xFF	; 255
    2944:	39 f4       	brne	.+14     	; 0x2954 <ESP8266_StartClientConnectionTCP+0xa8>
    2946:	8e c0       	rjmp	.+284    	; 0x2a64 <ESP8266_StartClientConnectionTCP+0x1b8>
	
	/* Check if connected to network */
	ESP8266_CHECK_WIFICONNECTED(ESP8266);
	
	/* Find available connection */
	for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {
    2948:	0f 5f       	subi	r16, 0xFF	; 255
    294a:	ed 5b       	subi	r30, 0xBD	; 189
    294c:	ff 4f       	sbci	r31, 0xFF	; 255
    294e:	05 30       	cpi	r16, 0x05	; 5
    2950:	99 f7       	brne	.-26     	; 0x2938 <ESP8266_StartClientConnectionTCP+0x8c>
    2952:	88 c0       	rjmp	.+272    	; 0x2a64 <ESP8266_StartClientConnectionTCP+0x1b8>
	/* Try it */
	if (conn != -1) {
		char tmp[6];
		
		/* Format port */
		Int2String(tmp, port);
    2954:	c9 01       	movw	r24, r18

	return 0;
}

static void Int2String(char* ptr, int32_t num) {
	sprintf(ptr, "%ld", num);
    2956:	1f 92       	push	r1
    2958:	1f 92       	push	r1
    295a:	9f 93       	push	r25
    295c:	2f 93       	push	r18
    295e:	84 e9       	ldi	r24, 0x94	; 148
    2960:	94 e0       	ldi	r25, 0x04	; 4
    2962:	9f 93       	push	r25
    2964:	8f 93       	push	r24
    2966:	2e 01       	movw	r4, r28
    2968:	f2 e0       	ldi	r31, 0x02	; 2
    296a:	4f 0e       	add	r4, r31
    296c:	51 1c       	adc	r5, r1
    296e:	5f 92       	push	r5
    2970:	4f 92       	push	r4
    2972:	7c d5       	rcall	.+2808   	; 0x346c <sprintf>
		
		/* Format port */
		Int2String(tmp, port);
		
		/* Go to ASCII number */
		conn += '0';
    2974:	89 81       	ldd	r24, Y+1	; 0x01
    2976:	80 5d       	subi	r24, 0xD0	; 208
    2978:	89 83       	std	Y+1, r24	; 0x01
		
		/* Send separate */
		ESP8266_USARTSENDSTRING("AT+CIPSTART=");
    297a:	6c e0       	ldi	r22, 0x0C	; 12
    297c:	70 e0       	ldi	r23, 0x00	; 0
    297e:	89 ea       	ldi	r24, 0xA9	; 169
    2980:	96 e0       	ldi	r25, 0x06	; 6
    2982:	e6 d0       	rcall	.+460    	; 0x2b50 <ESP8266_LL_USARTSend>
		ESP8266_USARTSENDCHAR(&conn);
    2984:	61 e0       	ldi	r22, 0x01	; 1
    2986:	70 e0       	ldi	r23, 0x00	; 0
    2988:	ce 01       	movw	r24, r28
    298a:	01 96       	adiw	r24, 0x01	; 1
    298c:	e1 d0       	rcall	.+450    	; 0x2b50 <ESP8266_LL_USARTSend>
		ESP8266_USARTSENDSTRING(",\"TCP\",\"");
    298e:	68 e0       	ldi	r22, 0x08	; 8
    2990:	70 e0       	ldi	r23, 0x00	; 0
    2992:	86 eb       	ldi	r24, 0xB6	; 182
    2994:	96 e0       	ldi	r25, 0x06	; 6
    2996:	dc d0       	rcall	.+440    	; 0x2b50 <ESP8266_LL_USARTSend>
		ESP8266_USARTSENDSTRING(location);
    2998:	f5 01       	movw	r30, r10
    299a:	01 90       	ld	r0, Z+
    299c:	00 20       	and	r0, r0
    299e:	e9 f7       	brne	.-6      	; 0x299a <ESP8266_StartClientConnectionTCP+0xee>
    29a0:	31 97       	sbiw	r30, 0x01	; 1
    29a2:	bf 01       	movw	r22, r30
    29a4:	6a 19       	sub	r22, r10
    29a6:	7b 09       	sbc	r23, r11
    29a8:	c5 01       	movw	r24, r10
    29aa:	d2 d0       	rcall	.+420    	; 0x2b50 <ESP8266_LL_USARTSend>
		ESP8266_USARTSENDSTRING("\",");
    29ac:	62 e0       	ldi	r22, 0x02	; 2
    29ae:	70 e0       	ldi	r23, 0x00	; 0
    29b0:	86 ea       	ldi	r24, 0xA6	; 166
    29b2:	96 e0       	ldi	r25, 0x06	; 6
    29b4:	cd d0       	rcall	.+410    	; 0x2b50 <ESP8266_LL_USARTSend>
		ESP8266_USARTSENDSTRING(tmp);
    29b6:	f2 01       	movw	r30, r4
    29b8:	01 90       	ld	r0, Z+
    29ba:	00 20       	and	r0, r0
    29bc:	e9 f7       	brne	.-6      	; 0x29b8 <ESP8266_StartClientConnectionTCP+0x10c>
    29be:	31 97       	sbiw	r30, 0x01	; 1
    29c0:	bf 01       	movw	r22, r30
    29c2:	64 19       	sub	r22, r4
    29c4:	75 09       	sbc	r23, r5
    29c6:	c2 01       	movw	r24, r4
    29c8:	c3 d0       	rcall	.+390    	; 0x2b50 <ESP8266_LL_USARTSend>
		ESP8266_USARTSENDSTRING("\r\n");
    29ca:	62 e0       	ldi	r22, 0x02	; 2
    29cc:	70 e0       	ldi	r23, 0x00	; 0
    29ce:	8a ea       	ldi	r24, 0xAA	; 170
    29d0:	99 e0       	ldi	r25, 0x09	; 9
    29d2:	be d0       	rcall	.+380    	; 0x2b50 <ESP8266_LL_USARTSend>
		
		/* Send command */
		if (SendCommand(ESP8266, ESP8266_COMMAND_CIPSTART, NULL, NULL) != ESP_OK) {
    29d4:	20 e0       	ldi	r18, 0x00	; 0
    29d6:	30 e0       	ldi	r19, 0x00	; 0
    29d8:	40 e0       	ldi	r20, 0x00	; 0
    29da:	50 e0       	ldi	r21, 0x00	; 0
    29dc:	6a e0       	ldi	r22, 0x0A	; 10
    29de:	c7 01       	movw	r24, r14
    29e0:	69 db       	rcall	.-2350   	; 0x20b4 <SendCommand>
    29e2:	18 2f       	mov	r17, r24
    29e4:	0f b6       	in	r0, 0x3f	; 63
    29e6:	f8 94       	cli
    29e8:	de bf       	out	0x3e, r29	; 62
    29ea:	0f be       	out	0x3f, r0	; 63
    29ec:	cd bf       	out	0x3d, r28	; 61
    29ee:	11 23       	and	r17, r17
    29f0:	29 f0       	breq	.+10     	; 0x29fc <ESP8266_StartClientConnectionTCP+0x150>
			return ESP8266->Result;
    29f2:	f7 01       	movw	r30, r14
    29f4:	e6 57       	subi	r30, 0x76	; 118
    29f6:	fd 4f       	sbci	r31, 0xFD	; 253
    29f8:	10 81       	ld	r17, Z
    29fa:	3f c0       	rjmp	.+126    	; 0x2a7a <ESP8266_StartClientConnectionTCP+0x1ce>
		}
		
		/* Go back from ASCII number to real number */
		conn -= '0';
    29fc:	29 81       	ldd	r18, Y+1	; 0x01
    29fe:	20 53       	subi	r18, 0x30	; 48
		
		/* We are active now as client */
		ESP8266->Connection[i].Active = 1;
    2a00:	e3 e4       	ldi	r30, 0x43	; 67
    2a02:	0e 9f       	mul	r16, r30
    2a04:	c0 01       	movw	r24, r0
    2a06:	11 24       	eor	r1, r1
    2a08:	57 01       	movw	r10, r14
    2a0a:	a8 0e       	add	r10, r24
    2a0c:	b9 1e       	adc	r11, r25
    2a0e:	f5 01       	movw	r30, r10
    2a10:	e8 5a       	subi	r30, 0xA8	; 168
    2a12:	ff 4f       	sbci	r31, 0xFF	; 255
    2a14:	31 e0       	ldi	r19, 0x01	; 1
    2a16:	30 83       	st	Z, r19
		ESP8266->Connection[i].Client = 1;
    2a18:	32 96       	adiw	r30, 0x02	; 2
    2a1a:	30 83       	st	Z, r19
		ESP8266->Connection[i].Type = ESP8266_ConnectionType_TCP;
    2a1c:	37 96       	adiw	r30, 0x07	; 7
    2a1e:	10 82       	st	Z, r1
		ESP8266->Connection[i].TotalBytesReceived = 0;
    2a20:	35 96       	adiw	r30, 0x05	; 5
    2a22:	10 82       	st	Z, r1
    2a24:	11 82       	std	Z+1, r1	; 0x01
    2a26:	12 82       	std	Z+2, r1	; 0x02
    2a28:	13 82       	std	Z+3, r1	; 0x03
		ESP8266->Connection[i].Number = conn;
    2a2a:	3d 97       	sbiw	r30, 0x0d	; 13
    2a2c:	20 83       	st	Z, r18
#if ESP8266_USE_SINGLE_CONNECTION_BUFFER == 1
		ESP8266->Connection[i].Data = ConnectionData;
    2a2e:	73 96       	adiw	r30, 0x13	; 19
    2a30:	2a ed       	ldi	r18, 0xDA	; 218
    2a32:	3a e0       	ldi	r19, 0x0A	; 10
    2a34:	31 83       	std	Z+1, r19	; 0x01
    2a36:	20 83       	st	Z, r18
#endif
		ESP8266->StartConnectionSent = i;
    2a38:	f7 01       	movw	r30, r14
    2a3a:	ea 5e       	subi	r30, 0xEA	; 234
    2a3c:	fd 4f       	sbci	r31, 0xFD	; 253
    2a3e:	c0 82       	st	Z, r12
		
		/* Copy values */
		strncpy(ESP8266->Connection[i].Name, name, sizeof(ESP8266->Connection[i].Name));
    2a40:	8a 58       	subi	r24, 0x8A	; 138
    2a42:	9f 4f       	sbci	r25, 0xFF	; 255
    2a44:	40 e2       	ldi	r20, 0x20	; 32
    2a46:	50 e0       	ldi	r21, 0x00	; 0
    2a48:	b4 01       	movw	r22, r8
    2a4a:	8e 0d       	add	r24, r14
    2a4c:	9f 1d       	adc	r25, r15
    2a4e:	7b d4       	rcall	.+2294   	; 0x3346 <strncpy>
		ESP8266->Connection[i].UserParameters = user_parameters;
    2a50:	f5 01       	movw	r30, r10
    2a52:	ea 56       	subi	r30, 0x6A	; 106
    2a54:	ff 4f       	sbci	r31, 0xFF	; 255
    2a56:	71 82       	std	Z+1, r7	; 0x01
    2a58:	60 82       	st	Z, r6
		
		/* Return OK */
		ESP8266_RETURNWITHSTATUS(ESP8266, ESP_OK);
    2a5a:	f7 01       	movw	r30, r14
    2a5c:	e6 57       	subi	r30, 0x76	; 118
    2a5e:	fd 4f       	sbci	r31, 0xFD	; 253
    2a60:	10 82       	st	Z, r1
    2a62:	0b c0       	rjmp	.+22     	; 0x2a7a <ESP8266_StartClientConnectionTCP+0x1ce>
	}
	
	/* Return error */
	ESP8266_RETURNWITHSTATUS(ESP8266, ESP_ERROR);
    2a64:	f7 01       	movw	r30, r14
    2a66:	e6 57       	subi	r30, 0x76	; 118
    2a68:	fd 4f       	sbci	r31, 0xFD	; 253
    2a6a:	81 e0       	ldi	r24, 0x01	; 1
    2a6c:	80 83       	st	Z, r24
    2a6e:	11 e0       	ldi	r17, 0x01	; 1
    2a70:	04 c0       	rjmp	.+8      	; 0x2a7a <ESP8266_StartClientConnectionTCP+0x1ce>
	
	/* Find available connection */
	for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {
		if (!ESP8266->Connection[i].Active) {
			/* Save */
			conn = i;
    2a72:	19 82       	std	Y+1, r1	; 0x01
    2a74:	00 e0       	ldi	r16, 0x00	; 0
    2a76:	c1 2c       	mov	r12, r1
    2a78:	6d cf       	rjmp	.-294    	; 0x2954 <ESP8266_StartClientConnectionTCP+0xa8>
		ESP8266_RETURNWITHSTATUS(ESP8266, ESP_OK);
	}
	
	/* Return error */
	ESP8266_RETURNWITHSTATUS(ESP8266, ESP_ERROR);
}
    2a7a:	81 2f       	mov	r24, r17
    2a7c:	27 96       	adiw	r28, 0x07	; 7
    2a7e:	0f b6       	in	r0, 0x3f	; 63
    2a80:	f8 94       	cli
    2a82:	de bf       	out	0x3e, r29	; 62
    2a84:	0f be       	out	0x3f, r0	; 63
    2a86:	cd bf       	out	0x3d, r28	; 61
    2a88:	df 91       	pop	r29
    2a8a:	cf 91       	pop	r28
    2a8c:	1f 91       	pop	r17
    2a8e:	0f 91       	pop	r16
    2a90:	ff 90       	pop	r15
    2a92:	ef 90       	pop	r14
    2a94:	cf 90       	pop	r12
    2a96:	bf 90       	pop	r11
    2a98:	af 90       	pop	r10
    2a9a:	9f 90       	pop	r9
    2a9c:	8f 90       	pop	r8
    2a9e:	7f 90       	pop	r7
    2aa0:	6f 90       	pop	r6
    2aa2:	5f 90       	pop	r5
    2aa4:	4f 90       	pop	r4
    2aa6:	08 95       	ret

00002aa8 <ESP8266_LL_USARTInit>:
 * | along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * |----------------------------------------------------------------------
 */
#include "esp8266_ll.h"

uint8_t ESP8266_LL_USARTInit(uint32_t baudrate) {
    2aa8:	cf 92       	push	r12
    2aaa:	df 92       	push	r13
    2aac:	ef 92       	push	r14
    2aae:	ff 92       	push	r15
    2ab0:	6b 01       	movw	r12, r22
    2ab2:	7c 01       	movw	r14, r24
	
	/* Calculate prescaler for baudrate */
	prescaler =  (F_CPU / 4 / baudrate - 1) / 2; 
	
	/* Check valid input */
	if (((F_CPU == 16000000UL) && (baudrate == 57600)) || (prescaler > 4095)) {
    2ab4:	61 15       	cp	r22, r1
    2ab6:	71 4e       	sbci	r23, 0xE1	; 225
    2ab8:	81 05       	cpc	r24, r1
    2aba:	91 05       	cpc	r25, r1
    2abc:	a1 f0       	breq	.+40     	; 0x2ae6 <ESP8266_LL_USARTInit+0x3e>

uint8_t ESP8266_LL_USARTInit(uint32_t baudrate) {
	uint16_t prescaler;
	
	/* Calculate prescaler for baudrate */
	prescaler =  (F_CPU / 4 / baudrate - 1) / 2; 
    2abe:	60 e0       	ldi	r22, 0x00	; 0
    2ac0:	79 e0       	ldi	r23, 0x09	; 9
    2ac2:	8d e3       	ldi	r24, 0x3D	; 61
    2ac4:	90 e0       	ldi	r25, 0x00	; 0
    2ac6:	a7 01       	movw	r20, r14
    2ac8:	96 01       	movw	r18, r12
    2aca:	af d2       	rcall	.+1374   	; 0x302a <__udivmodsi4>
    2acc:	da 01       	movw	r26, r20
    2ace:	c9 01       	movw	r24, r18
    2ad0:	01 97       	sbiw	r24, 0x01	; 1
    2ad2:	a1 09       	sbc	r26, r1
    2ad4:	b1 09       	sbc	r27, r1
    2ad6:	b6 95       	lsr	r27
    2ad8:	a7 95       	ror	r26
    2ada:	97 95       	ror	r25
    2adc:	87 95       	ror	r24
	
	/* Check valid input */
	if (((F_CPU == 16000000UL) && (baudrate == 57600)) || (prescaler > 4095)) {
    2ade:	81 15       	cp	r24, r1
    2ae0:	20 e1       	ldi	r18, 0x10	; 16
    2ae2:	92 07       	cpc	r25, r18
    2ae4:	90 f0       	brcs	.+36     	; 0x2b0a <ESP8266_LL_USARTInit+0x62>
		UCSR0A = 0;
    2ae6:	10 92 c0 00 	sts	0x00C0, r1
		
		/* Calculate new value */
		prescaler = (F_CPU / 8 / baudrate - 1) / 2;
    2aea:	60 e8       	ldi	r22, 0x80	; 128
    2aec:	74 e8       	ldi	r23, 0x84	; 132
    2aee:	8e e1       	ldi	r24, 0x1E	; 30
    2af0:	90 e0       	ldi	r25, 0x00	; 0
    2af2:	a7 01       	movw	r20, r14
    2af4:	96 01       	movw	r18, r12
    2af6:	99 d2       	rcall	.+1330   	; 0x302a <__udivmodsi4>
    2af8:	da 01       	movw	r26, r20
    2afa:	c9 01       	movw	r24, r18
    2afc:	01 97       	sbiw	r24, 0x01	; 1
    2afe:	a1 09       	sbc	r26, r1
    2b00:	b1 09       	sbc	r27, r1
    2b02:	b6 95       	lsr	r27
    2b04:	a7 95       	ror	r26
    2b06:	97 95       	ror	r25
    2b08:	87 95       	ror	r24
	}
	
	/* Set UART prescaler for baudrate */
	UBRR1H = (prescaler >> 8) & 0xFF;
    2b0a:	90 93 cd 00 	sts	0x00CD, r25
	UBRR1L = prescaler & 0xFF;
    2b0e:	80 93 cc 00 	sts	0x00CC, r24
	
	/* Set double sampling */
	UCSR1A |= 1 << U2X1;
    2b12:	e8 ec       	ldi	r30, 0xC8	; 200
    2b14:	f0 e0       	ldi	r31, 0x00	; 0
    2b16:	80 81       	ld	r24, Z
    2b18:	82 60       	ori	r24, 0x02	; 2
    2b1a:	80 83       	st	Z, r24
	
	/* Data size 8 bits */
	UCSR1C |= (1 << UCSZ10) | (1 << UCSZ11);
    2b1c:	ea ec       	ldi	r30, 0xCA	; 202
    2b1e:	f0 e0       	ldi	r31, 0x00	; 0
    2b20:	80 81       	ld	r24, Z
    2b22:	86 60       	ori	r24, 0x06	; 6
    2b24:	80 83       	st	Z, r24
	
	/* Enable receiver and transmitter */
	UCSR1B |= (1 << RXEN1) | (1 << TXEN1);
    2b26:	e9 ec       	ldi	r30, 0xC9	; 201
    2b28:	f0 e0       	ldi	r31, 0x00	; 0
    2b2a:	80 81       	ld	r24, Z
    2b2c:	88 61       	ori	r24, 0x18	; 24
    2b2e:	80 83       	st	Z, r24
	
	/* Enable RX Not empty interrupt */
	UCSR1B |= (1 << RXCIE1);
    2b30:	80 81       	ld	r24, Z
    2b32:	80 68       	ori	r24, 0x80	; 128
    2b34:	80 83       	st	Z, r24
	
	/* Enable interrupts if not already */
	sei();
    2b36:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    2b38:	8f e3       	ldi	r24, 0x3F	; 63
    2b3a:	9c e9       	ldi	r25, 0x9C	; 156
    2b3c:	01 97       	sbiw	r24, 0x01	; 1
    2b3e:	f1 f7       	brne	.-4      	; 0x2b3c <ESP8266_LL_USARTInit+0x94>
    2b40:	00 c0       	rjmp	.+0      	; 0x2b42 <ESP8266_LL_USARTInit+0x9a>
    2b42:	00 00       	nop
	
	_delay_ms(10);
	
	/* Return 0 = Successful */
	return 0;
}
    2b44:	80 e0       	ldi	r24, 0x00	; 0
    2b46:	ff 90       	pop	r15
    2b48:	ef 90       	pop	r14
    2b4a:	df 90       	pop	r13
    2b4c:	cf 90       	pop	r12
    2b4e:	08 95       	ret

00002b50 <ESP8266_LL_USARTSend>:

uint8_t ESP8266_LL_USARTSend(uint8_t* data, uint16_t count) {
    2b50:	cf 93       	push	r28
    2b52:	df 93       	push	r29
    2b54:	9c 01       	movw	r18, r24
	/* Wait till end */
	while ((UCSR1A & (1 << UDRE1)) == 0);
    2b56:	e8 ec       	ldi	r30, 0xC8	; 200
    2b58:	f0 e0       	ldi	r31, 0x00	; 0
    2b5a:	90 81       	ld	r25, Z
    2b5c:	95 ff       	sbrs	r25, 5
    2b5e:	fd cf       	rjmp	.-6      	; 0x2b5a <ESP8266_LL_USARTSend+0xa>
    2b60:	d9 01       	movw	r26, r18
    2b62:	62 0f       	add	r22, r18
    2b64:	73 1f       	adc	r23, r19
	
	/* Send data via USART */
	while (count--) {
		/* Send character */
		UDR1 = *data++;
    2b66:	ce ec       	ldi	r28, 0xCE	; 206
    2b68:	d0 e0       	ldi	r29, 0x00	; 0

		/* Wait till done */
		while ((UCSR1A & (1 << UDRE1)) == 0);
    2b6a:	e8 ec       	ldi	r30, 0xC8	; 200
    2b6c:	f0 e0       	ldi	r31, 0x00	; 0
    2b6e:	05 c0       	rjmp	.+10     	; 0x2b7a <ESP8266_LL_USARTSend+0x2a>
	while ((UCSR1A & (1 << UDRE1)) == 0);
	
	/* Send data via USART */
	while (count--) {
		/* Send character */
		UDR1 = *data++;
    2b70:	9d 91       	ld	r25, X+
    2b72:	98 83       	st	Y, r25

		/* Wait till done */
		while ((UCSR1A & (1 << UDRE1)) == 0);
    2b74:	90 81       	ld	r25, Z
    2b76:	95 ff       	sbrs	r25, 5
    2b78:	fd cf       	rjmp	.-6      	; 0x2b74 <ESP8266_LL_USARTSend+0x24>
uint8_t ESP8266_LL_USARTSend(uint8_t* data, uint16_t count) {
	/* Wait till end */
	while ((UCSR1A & (1 << UDRE1)) == 0);
	
	/* Send data via USART */
	while (count--) {
    2b7a:	a6 17       	cp	r26, r22
    2b7c:	b7 07       	cpc	r27, r23
    2b7e:	c1 f7       	brne	.-16     	; 0x2b70 <ESP8266_LL_USARTSend+0x20>
		while ((UCSR1A & (1 << UDRE1)) == 0);
	}
	
	/* Return 0 = Successful */
	return 0;
}
    2b80:	80 e0       	ldi	r24, 0x00	; 0
    2b82:	df 91       	pop	r29
    2b84:	cf 91       	pop	r28
    2b86:	08 95       	ret

00002b88 <__vector_36>:

/* USART receive interrupt handler */
ISR(USART1_RX_vect) {
    2b88:	1f 92       	push	r1
    2b8a:	0f 92       	push	r0
    2b8c:	0f b6       	in	r0, 0x3f	; 63
    2b8e:	0f 92       	push	r0
    2b90:	11 24       	eor	r1, r1
    2b92:	0b b6       	in	r0, 0x3b	; 59
    2b94:	0f 92       	push	r0
    2b96:	2f 93       	push	r18
    2b98:	3f 93       	push	r19
    2b9a:	4f 93       	push	r20
    2b9c:	5f 93       	push	r21
    2b9e:	6f 93       	push	r22
    2ba0:	7f 93       	push	r23
    2ba2:	8f 93       	push	r24
    2ba4:	9f 93       	push	r25
    2ba6:	af 93       	push	r26
    2ba8:	bf 93       	push	r27
    2baa:	ef 93       	push	r30
    2bac:	ff 93       	push	r31
    2bae:	cf 93       	push	r28
    2bb0:	df 93       	push	r29
    2bb2:	1f 92       	push	r1
    2bb4:	cd b7       	in	r28, 0x3d	; 61
    2bb6:	de b7       	in	r29, 0x3e	; 62
	uint8_t ch = UDR1;
    2bb8:	80 91 ce 00 	lds	r24, 0x00CE
    2bbc:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send received character to ESP stack */
	ESP8266_DataReceived(&ch, 1);
    2bbe:	61 e0       	ldi	r22, 0x01	; 1
    2bc0:	70 e0       	ldi	r23, 0x00	; 0
    2bc2:	ce 01       	movw	r24, r28
    2bc4:	01 96       	adiw	r24, 0x01	; 1
    2bc6:	0e 94 a8 05 	call	0xb50	; 0xb50 <ESP8266_DataReceived>
}
    2bca:	0f 90       	pop	r0
    2bcc:	df 91       	pop	r29
    2bce:	cf 91       	pop	r28
    2bd0:	ff 91       	pop	r31
    2bd2:	ef 91       	pop	r30
    2bd4:	bf 91       	pop	r27
    2bd6:	af 91       	pop	r26
    2bd8:	9f 91       	pop	r25
    2bda:	8f 91       	pop	r24
    2bdc:	7f 91       	pop	r23
    2bde:	6f 91       	pop	r22
    2be0:	5f 91       	pop	r21
    2be2:	4f 91       	pop	r20
    2be4:	3f 91       	pop	r19
    2be6:	2f 91       	pop	r18
    2be8:	0f 90       	pop	r0
    2bea:	0b be       	out	0x3b, r0	; 59
    2bec:	0f 90       	pop	r0
    2bee:	0f be       	out	0x3f, r0	; 63
    2bf0:	0f 90       	pop	r0
    2bf2:	1f 90       	pop	r1
    2bf4:	18 95       	reti

00002bf6 <Debug_Putc>:
	printf("Data successfully sent as client!\r\n");
}

/* Called when error returned trying to sent data */
void ESP8266_Callback_ClientConnectionDataSentError(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection) {
	printf("Error while sending data on connection %d!\r\n", Connection->Number);
    2bf6:	80 93 c6 00 	sts	0x00C6, r24
    2bfa:	e0 ec       	ldi	r30, 0xC0	; 192
    2bfc:	f0 e0       	ldi	r31, 0x00	; 0
    2bfe:	80 81       	ld	r24, Z
    2c00:	85 ff       	sbrs	r24, 5
    2c02:	fd cf       	rjmp	.-6      	; 0x2bfe <Debug_Putc+0x8>
    2c04:	80 e0       	ldi	r24, 0x00	; 0
    2c06:	90 e0       	ldi	r25, 0x00	; 0
    2c08:	08 95       	ret

00002c0a <TimerInit>:
    2c0a:	84 b5       	in	r24, 0x24	; 36
    2c0c:	82 60       	ori	r24, 0x02	; 2
    2c0e:	84 bd       	out	0x24, r24	; 36
    2c10:	85 b5       	in	r24, 0x25	; 37
    2c12:	83 60       	ori	r24, 0x03	; 3
    2c14:	85 bd       	out	0x25, r24	; 37
    2c16:	89 ef       	ldi	r24, 0xF9	; 249
    2c18:	87 bd       	out	0x27, r24	; 39
    2c1a:	ee e6       	ldi	r30, 0x6E	; 110
    2c1c:	f0 e0       	ldi	r31, 0x00	; 0
    2c1e:	80 81       	ld	r24, Z
    2c20:	82 60       	ori	r24, 0x02	; 2
    2c22:	80 83       	st	Z, r24
    2c24:	08 95       	ret

00002c26 <__vector_21>:
    2c26:	1f 92       	push	r1
    2c28:	0f 92       	push	r0
    2c2a:	0f b6       	in	r0, 0x3f	; 63
    2c2c:	0f 92       	push	r0
    2c2e:	11 24       	eor	r1, r1
    2c30:	0b b6       	in	r0, 0x3b	; 59
    2c32:	0f 92       	push	r0
    2c34:	2f 93       	push	r18
    2c36:	3f 93       	push	r19
    2c38:	4f 93       	push	r20
    2c3a:	5f 93       	push	r21
    2c3c:	6f 93       	push	r22
    2c3e:	7f 93       	push	r23
    2c40:	8f 93       	push	r24
    2c42:	9f 93       	push	r25
    2c44:	af 93       	push	r26
    2c46:	bf 93       	push	r27
    2c48:	ef 93       	push	r30
    2c4a:	ff 93       	push	r31
    2c4c:	41 e0       	ldi	r20, 0x01	; 1
    2c4e:	50 e0       	ldi	r21, 0x00	; 0
    2c50:	60 e0       	ldi	r22, 0x00	; 0
    2c52:	70 e0       	ldi	r23, 0x00	; 0
    2c54:	86 ea       	ldi	r24, 0xA6	; 166
    2c56:	96 e1       	ldi	r25, 0x16	; 22
    2c58:	0e 94 94 05 	call	0xb28	; 0xb28 <ESP8266_TimeUpdate>
    2c5c:	ff 91       	pop	r31
    2c5e:	ef 91       	pop	r30
    2c60:	bf 91       	pop	r27
    2c62:	af 91       	pop	r26
    2c64:	9f 91       	pop	r25
    2c66:	8f 91       	pop	r24
    2c68:	7f 91       	pop	r23
    2c6a:	6f 91       	pop	r22
    2c6c:	5f 91       	pop	r21
    2c6e:	4f 91       	pop	r20
    2c70:	3f 91       	pop	r19
    2c72:	2f 91       	pop	r18
    2c74:	0f 90       	pop	r0
    2c76:	0b be       	out	0x3b, r0	; 59
    2c78:	0f 90       	pop	r0
    2c7a:	0f be       	out	0x3f, r0	; 63
    2c7c:	0f 90       	pop	r0
    2c7e:	1f 90       	pop	r1
    2c80:	18 95       	reti

00002c82 <__vector_25>:
    2c82:	1f 92       	push	r1
    2c84:	0f 92       	push	r0
    2c86:	0f b6       	in	r0, 0x3f	; 63
    2c88:	0f 92       	push	r0
    2c8a:	11 24       	eor	r1, r1
    2c8c:	0b b6       	in	r0, 0x3b	; 59
    2c8e:	0f 92       	push	r0
    2c90:	8f 93       	push	r24
    2c92:	ef 93       	push	r30
    2c94:	ff 93       	push	r31
    2c96:	e6 ec       	ldi	r30, 0xC6	; 198
    2c98:	f0 e0       	ldi	r31, 0x00	; 0
    2c9a:	80 81       	ld	r24, Z
    2c9c:	80 83       	st	Z, r24
    2c9e:	e0 ec       	ldi	r30, 0xC0	; 192
    2ca0:	f0 e0       	ldi	r31, 0x00	; 0
    2ca2:	80 81       	ld	r24, Z
    2ca4:	85 ff       	sbrs	r24, 5
    2ca6:	fd cf       	rjmp	.-6      	; 0x2ca2 <__vector_25+0x20>
    2ca8:	ff 91       	pop	r31
    2caa:	ef 91       	pop	r30
    2cac:	8f 91       	pop	r24
    2cae:	0f 90       	pop	r0
    2cb0:	0b be       	out	0x3b, r0	; 59
    2cb2:	0f 90       	pop	r0
    2cb4:	0f be       	out	0x3f, r0	; 63
    2cb6:	0f 90       	pop	r0
    2cb8:	1f 90       	pop	r1
    2cba:	18 95       	reti

00002cbc <DebugUARTInit>:
    2cbc:	9b 01       	movw	r18, r22
    2cbe:	ac 01       	movw	r20, r24
    2cc0:	60 e0       	ldi	r22, 0x00	; 0
    2cc2:	79 e0       	ldi	r23, 0x09	; 9
    2cc4:	8d e3       	ldi	r24, 0x3D	; 61
    2cc6:	90 e0       	ldi	r25, 0x00	; 0
    2cc8:	b0 d1       	rcall	.+864    	; 0x302a <__udivmodsi4>
    2cca:	da 01       	movw	r26, r20
    2ccc:	c9 01       	movw	r24, r18
    2cce:	01 97       	sbiw	r24, 0x01	; 1
    2cd0:	a1 09       	sbc	r26, r1
    2cd2:	b1 09       	sbc	r27, r1
    2cd4:	ac 01       	movw	r20, r24
    2cd6:	bd 01       	movw	r22, r26
    2cd8:	76 95       	lsr	r23
    2cda:	67 95       	ror	r22
    2cdc:	57 95       	ror	r21
    2cde:	47 95       	ror	r20
    2ce0:	85 2f       	mov	r24, r21
    2ce2:	99 27       	eor	r25, r25
    2ce4:	80 93 c5 00 	sts	0x00C5, r24
    2ce8:	40 93 c4 00 	sts	0x00C4, r20
    2cec:	e0 ec       	ldi	r30, 0xC0	; 192
    2cee:	f0 e0       	ldi	r31, 0x00	; 0
    2cf0:	80 81       	ld	r24, Z
    2cf2:	82 60       	ori	r24, 0x02	; 2
    2cf4:	80 83       	st	Z, r24
    2cf6:	e2 ec       	ldi	r30, 0xC2	; 194
    2cf8:	f0 e0       	ldi	r31, 0x00	; 0
    2cfa:	80 81       	ld	r24, Z
    2cfc:	86 60       	ori	r24, 0x06	; 6
    2cfe:	80 83       	st	Z, r24
    2d00:	e1 ec       	ldi	r30, 0xC1	; 193
    2d02:	f0 e0       	ldi	r31, 0x00	; 0
    2d04:	80 81       	ld	r24, Z
    2d06:	88 61       	ori	r24, 0x18	; 24
    2d08:	80 83       	st	Z, r24
    2d0a:	80 81       	ld	r24, Z
    2d0c:	80 68       	ori	r24, 0x80	; 128
    2d0e:	80 83       	st	Z, r24
    2d10:	08 95       	ret

00002d12 <main>:
    2d12:	86 e0       	ldi	r24, 0x06	; 6
    2d14:	92 e0       	ldi	r25, 0x02	; 2
    2d16:	90 93 38 19 	sts	0x1938, r25
    2d1a:	80 93 37 19 	sts	0x1937, r24
    2d1e:	60 e0       	ldi	r22, 0x00	; 0
    2d20:	72 ec       	ldi	r23, 0xC2	; 194
    2d22:	81 e0       	ldi	r24, 0x01	; 1
    2d24:	90 e0       	ldi	r25, 0x00	; 0
    2d26:	ca df       	rcall	.-108    	; 0x2cbc <DebugUARTInit>
    2d28:	70 df       	rcall	.-288    	; 0x2c0a <TimerInit>
    2d2a:	78 94       	sei
    2d2c:	88 ed       	ldi	r24, 0xD8	; 216
    2d2e:	96 e0       	ldi	r25, 0x06	; 6
    2d30:	6d d3       	rcall	.+1754   	; 0x340c <puts>
    2d32:	03 c0       	rjmp	.+6      	; 0x2d3a <main+0x28>
    2d34:	8c e0       	ldi	r24, 0x0C	; 12
    2d36:	97 e0       	ldi	r25, 0x07	; 7
    2d38:	69 d3       	rcall	.+1746   	; 0x340c <puts>
    2d3a:	40 e0       	ldi	r20, 0x00	; 0
    2d3c:	52 ec       	ldi	r21, 0xC2	; 194
    2d3e:	61 e0       	ldi	r22, 0x01	; 1
    2d40:	70 e0       	ldi	r23, 0x00	; 0
    2d42:	86 ea       	ldi	r24, 0xA6	; 166
    2d44:	96 e1       	ldi	r25, 0x16	; 22
    2d46:	73 dc       	rcall	.-1818   	; 0x262e <ESP8266_Init>
    2d48:	81 11       	cpse	r24, r1
    2d4a:	f4 cf       	rjmp	.-24     	; 0x2d34 <main+0x22>
    2d4c:	63 e0       	ldi	r22, 0x03	; 3
    2d4e:	86 ea       	ldi	r24, 0xA6	; 166
    2d50:	96 e1       	ldi	r25, 0x16	; 22
    2d52:	06 db       	rcall	.-2548   	; 0x2360 <ESP8266_SetMode>
    2d54:	81 11       	cpse	r24, r1
    2d56:	fa cf       	rjmp	.-12     	; 0x2d4c <main+0x3a>
    2d58:	60 e5       	ldi	r22, 0x50	; 80
    2d5a:	70 e0       	ldi	r23, 0x00	; 0
    2d5c:	86 ea       	ldi	r24, 0xA6	; 166
    2d5e:	96 e1       	ldi	r25, 0x16	; 22
    2d60:	9b da       	rcall	.-2762   	; 0x2298 <ESP8266_ServerEnable>
    2d62:	81 11       	cpse	r24, r1
    2d64:	f9 cf       	rjmp	.-14     	; 0x2d58 <main+0x46>
    2d66:	87 e3       	ldi	r24, 0x37	; 55
    2d68:	97 e0       	ldi	r25, 0x07	; 7
    2d6a:	50 d3       	rcall	.+1696   	; 0x340c <puts>
    2d6c:	86 ea       	ldi	r24, 0xA6	; 166
    2d6e:	96 e1       	ldi	r25, 0x16	; 22
    2d70:	f7 d9       	rcall	.-3090   	; 0x2160 <ESP8266_WifiDisconnect>
    2d72:	86 ea       	ldi	r24, 0xA6	; 166
    2d74:	96 e1       	ldi	r25, 0x16	; 22
    2d76:	60 da       	rcall	.-2880   	; 0x2238 <ESP8266_WaitReady>
    2d78:	41 e5       	ldi	r20, 0x51	; 81
    2d7a:	57 e0       	ldi	r21, 0x07	; 7
    2d7c:	6f e5       	ldi	r22, 0x5F	; 95
    2d7e:	77 e0       	ldi	r23, 0x07	; 7
    2d80:	86 ea       	ldi	r24, 0xA6	; 166
    2d82:	96 e1       	ldi	r25, 0x16	; 22
    2d84:	55 dd       	rcall	.-1366   	; 0x2830 <ESP8266_WifiConnect>
    2d86:	86 ea       	ldi	r24, 0xA6	; 166
    2d88:	96 e1       	ldi	r25, 0x16	; 22
    2d8a:	56 da       	rcall	.-2900   	; 0x2238 <ESP8266_WaitReady>
    2d8c:	86 ea       	ldi	r24, 0xA6	; 166
    2d8e:	96 e1       	ldi	r25, 0x16	; 22
    2d90:	ee d9       	rcall	.-3108   	; 0x216e <ESP8266_WifiGetConnected>
    2d92:	26 98       	cbi	0x04, 6	; 4
    2d94:	2e 9a       	sbi	0x05, 6	; 5
    2d96:	86 ea       	ldi	r24, 0xA6	; 166
    2d98:	96 e1       	ldi	r25, 0x16	; 22
    2d9a:	0e 94 79 0d 	call	0x1af2	; 0x1af2 <ESP8266_Update>
    2d9e:	1e 99       	sbic	0x03, 6	; 3
    2da0:	fa cf       	rjmp	.-12     	; 0x2d96 <main+0x84>
    2da2:	1e 9b       	sbis	0x03, 6	; 3
    2da4:	fe cf       	rjmp	.-4      	; 0x2da2 <main+0x90>
    2da6:	00 e0       	ldi	r16, 0x00	; 0
    2da8:	10 e0       	ldi	r17, 0x00	; 0
    2daa:	20 e5       	ldi	r18, 0x50	; 80
    2dac:	30 e0       	ldi	r19, 0x00	; 0
    2dae:	49 e6       	ldi	r20, 0x69	; 105
    2db0:	57 e0       	ldi	r21, 0x07	; 7
    2db2:	6f e7       	ldi	r22, 0x7F	; 127
    2db4:	77 e0       	ldi	r23, 0x07	; 7
    2db6:	86 ea       	ldi	r24, 0xA6	; 166
    2db8:	96 e1       	ldi	r25, 0x16	; 22
    2dba:	78 dd       	rcall	.-1296   	; 0x28ac <ESP8266_StartClientConnectionTCP>
    2dbc:	81 11       	cpse	r24, r1
    2dbe:	f3 cf       	rjmp	.-26     	; 0x2da6 <main+0x94>
    2dc0:	ea cf       	rjmp	.-44     	; 0x2d96 <main+0x84>

00002dc2 <ESP8266_Callback_DeviceReady>:
    2dc2:	8c e8       	ldi	r24, 0x8C	; 140
    2dc4:	97 e0       	ldi	r25, 0x07	; 7
    2dc6:	22 c3       	rjmp	.+1604   	; 0x340c <puts>
    2dc8:	08 95       	ret

00002dca <ESP8266_Callback_WatchdogReset>:
    2dca:	8d e9       	ldi	r24, 0x9D	; 157
    2dcc:	97 e0       	ldi	r25, 0x07	; 7
    2dce:	1e c3       	rjmp	.+1596   	; 0x340c <puts>
    2dd0:	08 95       	ret

00002dd2 <ESP8266_Callback_WifiDisconnected>:
    2dd2:	87 eb       	ldi	r24, 0xB7	; 183
    2dd4:	97 e0       	ldi	r25, 0x07	; 7
    2dd6:	1a c3       	rjmp	.+1588   	; 0x340c <puts>
    2dd8:	08 95       	ret

00002dda <ESP8266_Callback_WifiConnected>:
    2dda:	8e ec       	ldi	r24, 0xCE	; 206
    2ddc:	97 e0       	ldi	r25, 0x07	; 7
    2dde:	16 c3       	rjmp	.+1580   	; 0x340c <puts>
    2de0:	08 95       	ret

00002de2 <ESP8266_Callback_WifiConnectFailed>:
    2de2:	fc 01       	movw	r30, r24
    2de4:	eb 5e       	subi	r30, 0xEB	; 235
    2de6:	fd 4f       	sbci	r31, 0xFD	; 253
    2de8:	80 81       	ld	r24, Z
    2dea:	1f 92       	push	r1
    2dec:	8f 93       	push	r24
    2dee:	82 ee       	ldi	r24, 0xE2	; 226
    2df0:	97 e0       	ldi	r25, 0x07	; 7
    2df2:	9f 93       	push	r25
    2df4:	8f 93       	push	r24
    2df6:	f7 d2       	rcall	.+1518   	; 0x33e6 <printf>
    2df8:	0f 90       	pop	r0
    2dfa:	0f 90       	pop	r0
    2dfc:	0f 90       	pop	r0
    2dfe:	0f 90       	pop	r0
    2e00:	08 95       	ret

00002e02 <ESP8266_Callback_WifiGotIP>:
    2e02:	cf 93       	push	r28
    2e04:	df 93       	push	r29
    2e06:	ec 01       	movw	r28, r24
    2e08:	85 e1       	ldi	r24, 0x15	; 21
    2e0a:	98 e0       	ldi	r25, 0x08	; 8
    2e0c:	ff d2       	rcall	.+1534   	; 0x340c <puts>
    2e0e:	ce 01       	movw	r24, r28
    2e10:	b5 d9       	rcall	.-3222   	; 0x217c <ESP8266_GetSTAIP>
    2e12:	1f 92       	push	r1
    2e14:	8f 93       	push	r24
    2e16:	8d e2       	ldi	r24, 0x2D	; 45
    2e18:	98 e0       	ldi	r25, 0x08	; 8
    2e1a:	9f 93       	push	r25
    2e1c:	8f 93       	push	r24
    2e1e:	e3 d2       	rcall	.+1478   	; 0x33e6 <printf>
    2e20:	0f 90       	pop	r0
    2e22:	0f 90       	pop	r0
    2e24:	0f 90       	pop	r0
    2e26:	0f 90       	pop	r0
    2e28:	df 91       	pop	r29
    2e2a:	cf 91       	pop	r28
    2e2c:	08 95       	ret

00002e2e <ESP8266_Callback_WifiIPSet>:
    2e2e:	fc 01       	movw	r30, r24
    2e30:	e6 55       	subi	r30, 0x56	; 86
    2e32:	fe 4f       	sbci	r31, 0xFE	; 254
    2e34:	20 81       	ld	r18, Z
    2e36:	1f 92       	push	r1
    2e38:	2f 93       	push	r18
    2e3a:	31 97       	sbiw	r30, 0x01	; 1
    2e3c:	20 81       	ld	r18, Z
    2e3e:	1f 92       	push	r1
    2e40:	2f 93       	push	r18
    2e42:	31 97       	sbiw	r30, 0x01	; 1
    2e44:	20 81       	ld	r18, Z
    2e46:	1f 92       	push	r1
    2e48:	2f 93       	push	r18
    2e4a:	31 97       	sbiw	r30, 0x01	; 1
    2e4c:	80 81       	ld	r24, Z
    2e4e:	1f 92       	push	r1
    2e50:	8f 93       	push	r24
    2e52:	86 e4       	ldi	r24, 0x46	; 70
    2e54:	98 e0       	ldi	r25, 0x08	; 8
    2e56:	9f 93       	push	r25
    2e58:	8f 93       	push	r24
    2e5a:	c5 d2       	rcall	.+1418   	; 0x33e6 <printf>
    2e5c:	8d b7       	in	r24, 0x3d	; 61
    2e5e:	9e b7       	in	r25, 0x3e	; 62
    2e60:	0a 96       	adiw	r24, 0x0a	; 10
    2e62:	0f b6       	in	r0, 0x3f	; 63
    2e64:	f8 94       	cli
    2e66:	9e bf       	out	0x3e, r25	; 62
    2e68:	0f be       	out	0x3f, r0	; 63
    2e6a:	8d bf       	out	0x3d, r24	; 61
    2e6c:	08 95       	ret

00002e6e <ESP8266_Callback_ClientConnectionConnected>:
    2e6e:	0f 93       	push	r16
    2e70:	1f 93       	push	r17
    2e72:	cf 93       	push	r28
    2e74:	df 93       	push	r29
    2e76:	8c 01       	movw	r16, r24
    2e78:	eb 01       	movw	r28, r22
    2e7a:	9b 01       	movw	r18, r22
    2e7c:	22 5e       	subi	r18, 0xE2	; 226
    2e7e:	3f 4f       	sbci	r19, 0xFF	; 255
    2e80:	3f 93       	push	r19
    2e82:	2f 93       	push	r18
    2e84:	29 ea       	ldi	r18, 0xA9	; 169
    2e86:	38 e0       	ldi	r19, 0x08	; 8
    2e88:	3f 93       	push	r19
    2e8a:	2f 93       	push	r18
    2e8c:	ac d2       	rcall	.+1368   	; 0x33e6 <printf>
    2e8e:	be 01       	movw	r22, r28
    2e90:	c8 01       	movw	r24, r16
    2e92:	b8 da       	rcall	.-2704   	; 0x2404 <ESP8266_RequestSendData>
    2e94:	0f 90       	pop	r0
    2e96:	0f 90       	pop	r0
    2e98:	0f 90       	pop	r0
    2e9a:	0f 90       	pop	r0
    2e9c:	df 91       	pop	r29
    2e9e:	cf 91       	pop	r28
    2ea0:	1f 91       	pop	r17
    2ea2:	0f 91       	pop	r16
    2ea4:	08 95       	ret

00002ea6 <ESP8266_Callback_ClientConnectionError>:
    2ea6:	fb 01       	movw	r30, r22
    2ea8:	81 81       	ldd	r24, Z+1	; 0x01
    2eaa:	1f 92       	push	r1
    2eac:	8f 93       	push	r24
    2eae:	8d ed       	ldi	r24, 0xDD	; 221
    2eb0:	98 e0       	ldi	r25, 0x08	; 8
    2eb2:	9f 93       	push	r25
    2eb4:	8f 93       	push	r24
    2eb6:	97 d2       	rcall	.+1326   	; 0x33e6 <printf>
    2eb8:	0f 90       	pop	r0
    2eba:	0f 90       	pop	r0
    2ebc:	0f 90       	pop	r0
    2ebe:	0f 90       	pop	r0
    2ec0:	08 95       	ret

00002ec2 <ESP8266_Callback_ClientConnectionSendData>:
    2ec2:	cf 93       	push	r28
    2ec4:	df 93       	push	r29
    2ec6:	81 e1       	ldi	r24, 0x11	; 17
    2ec8:	ea e1       	ldi	r30, 0x1A	; 26
    2eca:	f9 e0       	ldi	r31, 0x09	; 9
    2ecc:	da 01       	movw	r26, r20
    2ece:	01 90       	ld	r0, Z+
    2ed0:	0d 92       	st	X+, r0
    2ed2:	8a 95       	dec	r24
    2ed4:	e1 f7       	brne	.-8      	; 0x2ece <ESP8266_Callback_ClientConnectionSendData+0xc>
    2ed6:	da 01       	movw	r26, r20
    2ed8:	0d 90       	ld	r0, X+
    2eda:	00 20       	and	r0, r0
    2edc:	e9 f7       	brne	.-6      	; 0x2ed8 <ESP8266_Callback_ClientConnectionSendData+0x16>
    2ede:	11 97       	sbiw	r26, 0x01	; 1
    2ee0:	8e e1       	ldi	r24, 0x1E	; 30
    2ee2:	eb e2       	ldi	r30, 0x2B	; 43
    2ee4:	f9 e0       	ldi	r31, 0x09	; 9
    2ee6:	01 90       	ld	r0, Z+
    2ee8:	0d 92       	st	X+, r0
    2eea:	8a 95       	dec	r24
    2eec:	e1 f7       	brne	.-8      	; 0x2ee6 <ESP8266_Callback_ClientConnectionSendData+0x24>
    2eee:	da 01       	movw	r26, r20
    2ef0:	0d 90       	ld	r0, X+
    2ef2:	00 20       	and	r0, r0
    2ef4:	e9 f7       	brne	.-6      	; 0x2ef0 <ESP8266_Callback_ClientConnectionSendData+0x2e>
    2ef6:	11 97       	sbiw	r26, 0x01	; 1
    2ef8:	84 e1       	ldi	r24, 0x14	; 20
    2efa:	e9 e4       	ldi	r30, 0x49	; 73
    2efc:	f9 e0       	ldi	r31, 0x09	; 9
    2efe:	01 90       	ld	r0, Z+
    2f00:	0d 92       	st	X+, r0
    2f02:	8a 95       	dec	r24
    2f04:	e1 f7       	brne	.-8      	; 0x2efe <ESP8266_Callback_ClientConnectionSendData+0x3c>
    2f06:	fa 01       	movw	r30, r20
    2f08:	01 90       	ld	r0, Z+
    2f0a:	00 20       	and	r0, r0
    2f0c:	e9 f7       	brne	.-6      	; 0x2f08 <ESP8266_Callback_ClientConnectionSendData+0x46>
    2f0e:	31 97       	sbiw	r30, 0x01	; 1
    2f10:	8d e0       	ldi	r24, 0x0D	; 13
    2f12:	9a e0       	ldi	r25, 0x0A	; 10
    2f14:	a0 e0       	ldi	r26, 0x00	; 0
    2f16:	80 83       	st	Z, r24
    2f18:	91 83       	std	Z+1, r25	; 0x01
    2f1a:	a2 83       	std	Z+2, r26	; 0x02
    2f1c:	fa 01       	movw	r30, r20
    2f1e:	01 90       	ld	r0, Z+
    2f20:	00 20       	and	r0, r0
    2f22:	e9 f7       	brne	.-6      	; 0x2f1e <ESP8266_Callback_ClientConnectionSendData+0x5c>
    2f24:	cf 01       	movw	r24, r30
    2f26:	01 97       	sbiw	r24, 0x01	; 1
    2f28:	84 1b       	sub	r24, r20
    2f2a:	95 0b       	sbc	r25, r21
    2f2c:	df 91       	pop	r29
    2f2e:	cf 91       	pop	r28
    2f30:	08 95       	ret

00002f32 <ESP8266_Callback_ClientConnectionDataSent>:
    2f32:	8d e5       	ldi	r24, 0x5D	; 93
    2f34:	99 e0       	ldi	r25, 0x09	; 9
    2f36:	6a c2       	rjmp	.+1236   	; 0x340c <puts>
    2f38:	08 95       	ret

00002f3a <ESP8266_Callback_ClientConnectionDataReceived>:
}

void ESP8266_Callback_ClientConnectionDataReceived(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection, char* Buffer) {
    2f3a:	cf 93       	push	r28
    2f3c:	df 93       	push	r29
    2f3e:	eb 01       	movw	r28, r22
	/* Data received from server back to client */
	printf("Data received from server on connection: %s; Number of bytes received: %lu; %lu / %lu;\r\n",
    2f40:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2f42:	8f 93       	push	r24
    2f44:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2f46:	8f 93       	push	r24
    2f48:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2f4a:	8f 93       	push	r24
    2f4c:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2f4e:	8f 93       	push	r24
    2f50:	89 89       	ldd	r24, Y+17	; 0x11
    2f52:	8f 93       	push	r24
    2f54:	88 89       	ldd	r24, Y+16	; 0x10
    2f56:	8f 93       	push	r24
    2f58:	8f 85       	ldd	r24, Y+15	; 0x0f
    2f5a:	8f 93       	push	r24
    2f5c:	8e 85       	ldd	r24, Y+14	; 0x0e
    2f5e:	8f 93       	push	r24
    2f60:	8d 85       	ldd	r24, Y+13	; 0x0d
    2f62:	8f 93       	push	r24
    2f64:	8c 85       	ldd	r24, Y+12	; 0x0c
    2f66:	8f 93       	push	r24
    2f68:	8b 85       	ldd	r24, Y+11	; 0x0b
    2f6a:	8f 93       	push	r24
    2f6c:	8a 85       	ldd	r24, Y+10	; 0x0a
    2f6e:	8f 93       	push	r24
    2f70:	cb 01       	movw	r24, r22
    2f72:	4e 96       	adiw	r24, 0x1e	; 30
    2f74:	9f 93       	push	r25
    2f76:	8f 93       	push	r24
    2f78:	8d ea       	ldi	r24, 0xAD	; 173
    2f7a:	99 e0       	ldi	r25, 0x09	; 9
    2f7c:	9f 93       	push	r25
    2f7e:	8f 93       	push	r24
    2f80:	32 d2       	rcall	.+1124   	; 0x33e6 <printf>
	Connection->TotalBytesReceived,
	Connection->ContentLength
	);
	
	/* Print message when first packet */
	if (Connection->FirstPacket) {
    2f82:	fe 01       	movw	r30, r28
    2f84:	ef 5b       	subi	r30, 0xBF	; 191
    2f86:	ff 4f       	sbci	r31, 0xFF	; 255
    2f88:	8d b7       	in	r24, 0x3d	; 61
    2f8a:	9e b7       	in	r25, 0x3e	; 62
    2f8c:	40 96       	adiw	r24, 0x10	; 16
    2f8e:	0f b6       	in	r0, 0x3f	; 63
    2f90:	f8 94       	cli
    2f92:	9e bf       	out	0x3e, r25	; 62
    2f94:	0f be       	out	0x3f, r0	; 63
    2f96:	8d bf       	out	0x3d, r24	; 61
    2f98:	80 81       	ld	r24, Z
    2f9a:	88 23       	and	r24, r24
    2f9c:	99 f0       	breq	.+38     	; 0x2fc4 <ESP8266_Callback_ClientConnectionDataReceived+0x8a>
		
		/* Print first message */
		printf("This is first packet received. Content length on this connection is: %lu\r\n", Connection->ContentLength);
    2f9e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2fa0:	8f 93       	push	r24
    2fa2:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2fa4:	8f 93       	push	r24
    2fa6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2fa8:	8f 93       	push	r24
    2faa:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2fac:	8f 93       	push	r24
    2fae:	86 e0       	ldi	r24, 0x06	; 6
    2fb0:	9a e0       	ldi	r25, 0x0A	; 10
    2fb2:	9f 93       	push	r25
    2fb4:	8f 93       	push	r24
    2fb6:	17 d2       	rcall	.+1070   	; 0x33e6 <printf>
    2fb8:	0f 90       	pop	r0
    2fba:	0f 90       	pop	r0
    2fbc:	0f 90       	pop	r0
    2fbe:	0f 90       	pop	r0
    2fc0:	0f 90       	pop	r0
    2fc2:	0f 90       	pop	r0
	}
}
    2fc4:	df 91       	pop	r29
    2fc6:	cf 91       	pop	r28
    2fc8:	08 95       	ret

00002fca <ESP8266_Callback_ClientConnectionClosed>:

/* Called when connection is closed */
void ESP8266_Callback_ClientConnectionClosed(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection) {
    2fca:	fb 01       	movw	r30, r22
	printf("Client connection closed, connection: %d; Total bytes received: %lu; Content-Length header: %lu\r\n",
    2fcc:	85 8d       	ldd	r24, Z+29	; 0x1d
    2fce:	8f 93       	push	r24
    2fd0:	84 8d       	ldd	r24, Z+28	; 0x1c
    2fd2:	8f 93       	push	r24
    2fd4:	83 8d       	ldd	r24, Z+27	; 0x1b
    2fd6:	8f 93       	push	r24
    2fd8:	82 8d       	ldd	r24, Z+26	; 0x1a
    2fda:	8f 93       	push	r24
    2fdc:	81 89       	ldd	r24, Z+17	; 0x11
    2fde:	8f 93       	push	r24
    2fe0:	80 89       	ldd	r24, Z+16	; 0x10
    2fe2:	8f 93       	push	r24
    2fe4:	87 85       	ldd	r24, Z+15	; 0x0f
    2fe6:	8f 93       	push	r24
    2fe8:	86 85       	ldd	r24, Z+14	; 0x0e
    2fea:	8f 93       	push	r24
    2fec:	81 81       	ldd	r24, Z+1	; 0x01
    2fee:	1f 92       	push	r1
    2ff0:	8f 93       	push	r24
    2ff2:	81 e5       	ldi	r24, 0x51	; 81
    2ff4:	9a e0       	ldi	r25, 0x0A	; 10
    2ff6:	9f 93       	push	r25
    2ff8:	8f 93       	push	r24
    2ffa:	f5 d1       	rcall	.+1002   	; 0x33e6 <printf>
    2ffc:	8d b7       	in	r24, 0x3d	; 61
    2ffe:	9e b7       	in	r25, 0x3e	; 62
    3000:	0c 96       	adiw	r24, 0x0c	; 12
    3002:	0f b6       	in	r0, 0x3f	; 63
    3004:	f8 94       	cli
    3006:	9e bf       	out	0x3e, r25	; 62
    3008:	0f be       	out	0x3f, r0	; 63
    300a:	8d bf       	out	0x3d, r24	; 61
    300c:	08 95       	ret

0000300e <ESP8266_Callback_ClientConnectionTimeout>:
	);
}

/* Called when timeout is reached on connection to server */
void ESP8266_Callback_ClientConnectionTimeout(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection) {
	printf("Timeout reached on connection: %d\r\n", Connection->Number);
    300e:	fb 01       	movw	r30, r22
    3010:	81 81       	ldd	r24, Z+1	; 0x01
    3012:	1f 92       	push	r1
    3014:	8f 93       	push	r24
    3016:	83 eb       	ldi	r24, 0xB3	; 179
    3018:	9a e0       	ldi	r25, 0x0A	; 10
    301a:	9f 93       	push	r25
    301c:	8f 93       	push	r24
    301e:	e3 d1       	rcall	.+966    	; 0x33e6 <printf>
    3020:	0f 90       	pop	r0
    3022:	0f 90       	pop	r0
    3024:	0f 90       	pop	r0
    3026:	0f 90       	pop	r0
    3028:	08 95       	ret

0000302a <__udivmodsi4>:
    302a:	a1 e2       	ldi	r26, 0x21	; 33
    302c:	1a 2e       	mov	r1, r26
    302e:	aa 1b       	sub	r26, r26
    3030:	bb 1b       	sub	r27, r27
    3032:	fd 01       	movw	r30, r26
    3034:	0d c0       	rjmp	.+26     	; 0x3050 <__udivmodsi4_ep>

00003036 <__udivmodsi4_loop>:
    3036:	aa 1f       	adc	r26, r26
    3038:	bb 1f       	adc	r27, r27
    303a:	ee 1f       	adc	r30, r30
    303c:	ff 1f       	adc	r31, r31
    303e:	a2 17       	cp	r26, r18
    3040:	b3 07       	cpc	r27, r19
    3042:	e4 07       	cpc	r30, r20
    3044:	f5 07       	cpc	r31, r21
    3046:	20 f0       	brcs	.+8      	; 0x3050 <__udivmodsi4_ep>
    3048:	a2 1b       	sub	r26, r18
    304a:	b3 0b       	sbc	r27, r19
    304c:	e4 0b       	sbc	r30, r20
    304e:	f5 0b       	sbc	r31, r21

00003050 <__udivmodsi4_ep>:
    3050:	66 1f       	adc	r22, r22
    3052:	77 1f       	adc	r23, r23
    3054:	88 1f       	adc	r24, r24
    3056:	99 1f       	adc	r25, r25
    3058:	1a 94       	dec	r1
    305a:	69 f7       	brne	.-38     	; 0x3036 <__udivmodsi4_loop>
    305c:	60 95       	com	r22
    305e:	70 95       	com	r23
    3060:	80 95       	com	r24
    3062:	90 95       	com	r25
    3064:	9b 01       	movw	r18, r22
    3066:	ac 01       	movw	r20, r24
    3068:	bd 01       	movw	r22, r26
    306a:	cf 01       	movw	r24, r30
    306c:	08 95       	ret

0000306e <__tablejump2__>:
    306e:	ee 0f       	add	r30, r30
    3070:	ff 1f       	adc	r31, r31
    3072:	88 1f       	adc	r24, r24
    3074:	8b bf       	out	0x3b, r24	; 59
    3076:	07 90       	elpm	r0, Z+
    3078:	f6 91       	elpm	r31, Z
    307a:	e0 2d       	mov	r30, r0
    307c:	19 94       	eijmp

0000307e <malloc>:
    307e:	cf 93       	push	r28
    3080:	df 93       	push	r29
    3082:	82 30       	cpi	r24, 0x02	; 2
    3084:	91 05       	cpc	r25, r1
    3086:	10 f4       	brcc	.+4      	; 0x308c <malloc+0xe>
    3088:	82 e0       	ldi	r24, 0x02	; 2
    308a:	90 e0       	ldi	r25, 0x00	; 0
    308c:	e0 91 33 19 	lds	r30, 0x1933
    3090:	f0 91 34 19 	lds	r31, 0x1934
    3094:	20 e0       	ldi	r18, 0x00	; 0
    3096:	30 e0       	ldi	r19, 0x00	; 0
    3098:	c0 e0       	ldi	r28, 0x00	; 0
    309a:	d0 e0       	ldi	r29, 0x00	; 0
    309c:	30 97       	sbiw	r30, 0x00	; 0
    309e:	11 f1       	breq	.+68     	; 0x30e4 <malloc+0x66>
    30a0:	40 81       	ld	r20, Z
    30a2:	51 81       	ldd	r21, Z+1	; 0x01
    30a4:	48 17       	cp	r20, r24
    30a6:	59 07       	cpc	r21, r25
    30a8:	c0 f0       	brcs	.+48     	; 0x30da <malloc+0x5c>
    30aa:	48 17       	cp	r20, r24
    30ac:	59 07       	cpc	r21, r25
    30ae:	61 f4       	brne	.+24     	; 0x30c8 <malloc+0x4a>
    30b0:	82 81       	ldd	r24, Z+2	; 0x02
    30b2:	93 81       	ldd	r25, Z+3	; 0x03
    30b4:	20 97       	sbiw	r28, 0x00	; 0
    30b6:	19 f0       	breq	.+6      	; 0x30be <malloc+0x40>
    30b8:	9b 83       	std	Y+3, r25	; 0x03
    30ba:	8a 83       	std	Y+2, r24	; 0x02
    30bc:	2b c0       	rjmp	.+86     	; 0x3114 <malloc+0x96>
    30be:	90 93 34 19 	sts	0x1934, r25
    30c2:	80 93 33 19 	sts	0x1933, r24
    30c6:	26 c0       	rjmp	.+76     	; 0x3114 <malloc+0x96>
    30c8:	21 15       	cp	r18, r1
    30ca:	31 05       	cpc	r19, r1
    30cc:	19 f0       	breq	.+6      	; 0x30d4 <malloc+0x56>
    30ce:	42 17       	cp	r20, r18
    30d0:	53 07       	cpc	r21, r19
    30d2:	18 f4       	brcc	.+6      	; 0x30da <malloc+0x5c>
    30d4:	9a 01       	movw	r18, r20
    30d6:	be 01       	movw	r22, r28
    30d8:	df 01       	movw	r26, r30
    30da:	ef 01       	movw	r28, r30
    30dc:	02 80       	ldd	r0, Z+2	; 0x02
    30de:	f3 81       	ldd	r31, Z+3	; 0x03
    30e0:	e0 2d       	mov	r30, r0
    30e2:	dc cf       	rjmp	.-72     	; 0x309c <malloc+0x1e>
    30e4:	21 15       	cp	r18, r1
    30e6:	31 05       	cpc	r19, r1
    30e8:	09 f1       	breq	.+66     	; 0x312c <malloc+0xae>
    30ea:	28 1b       	sub	r18, r24
    30ec:	39 0b       	sbc	r19, r25
    30ee:	24 30       	cpi	r18, 0x04	; 4
    30f0:	31 05       	cpc	r19, r1
    30f2:	90 f4       	brcc	.+36     	; 0x3118 <malloc+0x9a>
    30f4:	12 96       	adiw	r26, 0x02	; 2
    30f6:	8d 91       	ld	r24, X+
    30f8:	9c 91       	ld	r25, X
    30fa:	13 97       	sbiw	r26, 0x03	; 3
    30fc:	61 15       	cp	r22, r1
    30fe:	71 05       	cpc	r23, r1
    3100:	21 f0       	breq	.+8      	; 0x310a <malloc+0x8c>
    3102:	fb 01       	movw	r30, r22
    3104:	93 83       	std	Z+3, r25	; 0x03
    3106:	82 83       	std	Z+2, r24	; 0x02
    3108:	04 c0       	rjmp	.+8      	; 0x3112 <malloc+0x94>
    310a:	90 93 34 19 	sts	0x1934, r25
    310e:	80 93 33 19 	sts	0x1933, r24
    3112:	fd 01       	movw	r30, r26
    3114:	32 96       	adiw	r30, 0x02	; 2
    3116:	44 c0       	rjmp	.+136    	; 0x31a0 <malloc+0x122>
    3118:	fd 01       	movw	r30, r26
    311a:	e2 0f       	add	r30, r18
    311c:	f3 1f       	adc	r31, r19
    311e:	81 93       	st	Z+, r24
    3120:	91 93       	st	Z+, r25
    3122:	22 50       	subi	r18, 0x02	; 2
    3124:	31 09       	sbc	r19, r1
    3126:	2d 93       	st	X+, r18
    3128:	3c 93       	st	X, r19
    312a:	3a c0       	rjmp	.+116    	; 0x31a0 <malloc+0x122>
    312c:	20 91 31 19 	lds	r18, 0x1931
    3130:	30 91 32 19 	lds	r19, 0x1932
    3134:	23 2b       	or	r18, r19
    3136:	41 f4       	brne	.+16     	; 0x3148 <malloc+0xca>
    3138:	20 91 02 02 	lds	r18, 0x0202
    313c:	30 91 03 02 	lds	r19, 0x0203
    3140:	30 93 32 19 	sts	0x1932, r19
    3144:	20 93 31 19 	sts	0x1931, r18
    3148:	20 91 00 02 	lds	r18, 0x0200
    314c:	30 91 01 02 	lds	r19, 0x0201
    3150:	21 15       	cp	r18, r1
    3152:	31 05       	cpc	r19, r1
    3154:	41 f4       	brne	.+16     	; 0x3166 <malloc+0xe8>
    3156:	2d b7       	in	r18, 0x3d	; 61
    3158:	3e b7       	in	r19, 0x3e	; 62
    315a:	40 91 04 02 	lds	r20, 0x0204
    315e:	50 91 05 02 	lds	r21, 0x0205
    3162:	24 1b       	sub	r18, r20
    3164:	35 0b       	sbc	r19, r21
    3166:	e0 91 31 19 	lds	r30, 0x1931
    316a:	f0 91 32 19 	lds	r31, 0x1932
    316e:	e2 17       	cp	r30, r18
    3170:	f3 07       	cpc	r31, r19
    3172:	a0 f4       	brcc	.+40     	; 0x319c <malloc+0x11e>
    3174:	2e 1b       	sub	r18, r30
    3176:	3f 0b       	sbc	r19, r31
    3178:	28 17       	cp	r18, r24
    317a:	39 07       	cpc	r19, r25
    317c:	78 f0       	brcs	.+30     	; 0x319c <malloc+0x11e>
    317e:	ac 01       	movw	r20, r24
    3180:	4e 5f       	subi	r20, 0xFE	; 254
    3182:	5f 4f       	sbci	r21, 0xFF	; 255
    3184:	24 17       	cp	r18, r20
    3186:	35 07       	cpc	r19, r21
    3188:	48 f0       	brcs	.+18     	; 0x319c <malloc+0x11e>
    318a:	4e 0f       	add	r20, r30
    318c:	5f 1f       	adc	r21, r31
    318e:	50 93 32 19 	sts	0x1932, r21
    3192:	40 93 31 19 	sts	0x1931, r20
    3196:	81 93       	st	Z+, r24
    3198:	91 93       	st	Z+, r25
    319a:	02 c0       	rjmp	.+4      	; 0x31a0 <malloc+0x122>
    319c:	e0 e0       	ldi	r30, 0x00	; 0
    319e:	f0 e0       	ldi	r31, 0x00	; 0
    31a0:	cf 01       	movw	r24, r30
    31a2:	df 91       	pop	r29
    31a4:	cf 91       	pop	r28
    31a6:	08 95       	ret

000031a8 <free>:
    31a8:	0f 93       	push	r16
    31aa:	1f 93       	push	r17
    31ac:	cf 93       	push	r28
    31ae:	df 93       	push	r29
    31b0:	00 97       	sbiw	r24, 0x00	; 0
    31b2:	09 f4       	brne	.+2      	; 0x31b6 <free+0xe>
    31b4:	8c c0       	rjmp	.+280    	; 0x32ce <free+0x126>
    31b6:	fc 01       	movw	r30, r24
    31b8:	32 97       	sbiw	r30, 0x02	; 2
    31ba:	13 82       	std	Z+3, r1	; 0x03
    31bc:	12 82       	std	Z+2, r1	; 0x02
    31be:	00 91 33 19 	lds	r16, 0x1933
    31c2:	10 91 34 19 	lds	r17, 0x1934
    31c6:	01 15       	cp	r16, r1
    31c8:	11 05       	cpc	r17, r1
    31ca:	81 f4       	brne	.+32     	; 0x31ec <free+0x44>
    31cc:	20 81       	ld	r18, Z
    31ce:	31 81       	ldd	r19, Z+1	; 0x01
    31d0:	82 0f       	add	r24, r18
    31d2:	93 1f       	adc	r25, r19
    31d4:	20 91 31 19 	lds	r18, 0x1931
    31d8:	30 91 32 19 	lds	r19, 0x1932
    31dc:	28 17       	cp	r18, r24
    31de:	39 07       	cpc	r19, r25
    31e0:	79 f5       	brne	.+94     	; 0x3240 <free+0x98>
    31e2:	f0 93 32 19 	sts	0x1932, r31
    31e6:	e0 93 31 19 	sts	0x1931, r30
    31ea:	71 c0       	rjmp	.+226    	; 0x32ce <free+0x126>
    31ec:	d8 01       	movw	r26, r16
    31ee:	40 e0       	ldi	r20, 0x00	; 0
    31f0:	50 e0       	ldi	r21, 0x00	; 0
    31f2:	ae 17       	cp	r26, r30
    31f4:	bf 07       	cpc	r27, r31
    31f6:	50 f4       	brcc	.+20     	; 0x320c <free+0x64>
    31f8:	12 96       	adiw	r26, 0x02	; 2
    31fa:	2d 91       	ld	r18, X+
    31fc:	3c 91       	ld	r19, X
    31fe:	13 97       	sbiw	r26, 0x03	; 3
    3200:	ad 01       	movw	r20, r26
    3202:	21 15       	cp	r18, r1
    3204:	31 05       	cpc	r19, r1
    3206:	09 f1       	breq	.+66     	; 0x324a <free+0xa2>
    3208:	d9 01       	movw	r26, r18
    320a:	f3 cf       	rjmp	.-26     	; 0x31f2 <free+0x4a>
    320c:	9d 01       	movw	r18, r26
    320e:	da 01       	movw	r26, r20
    3210:	33 83       	std	Z+3, r19	; 0x03
    3212:	22 83       	std	Z+2, r18	; 0x02
    3214:	60 81       	ld	r22, Z
    3216:	71 81       	ldd	r23, Z+1	; 0x01
    3218:	86 0f       	add	r24, r22
    321a:	97 1f       	adc	r25, r23
    321c:	82 17       	cp	r24, r18
    321e:	93 07       	cpc	r25, r19
    3220:	69 f4       	brne	.+26     	; 0x323c <free+0x94>
    3222:	ec 01       	movw	r28, r24
    3224:	28 81       	ld	r18, Y
    3226:	39 81       	ldd	r19, Y+1	; 0x01
    3228:	26 0f       	add	r18, r22
    322a:	37 1f       	adc	r19, r23
    322c:	2e 5f       	subi	r18, 0xFE	; 254
    322e:	3f 4f       	sbci	r19, 0xFF	; 255
    3230:	31 83       	std	Z+1, r19	; 0x01
    3232:	20 83       	st	Z, r18
    3234:	8a 81       	ldd	r24, Y+2	; 0x02
    3236:	9b 81       	ldd	r25, Y+3	; 0x03
    3238:	93 83       	std	Z+3, r25	; 0x03
    323a:	82 83       	std	Z+2, r24	; 0x02
    323c:	45 2b       	or	r20, r21
    323e:	29 f4       	brne	.+10     	; 0x324a <free+0xa2>
    3240:	f0 93 34 19 	sts	0x1934, r31
    3244:	e0 93 33 19 	sts	0x1933, r30
    3248:	42 c0       	rjmp	.+132    	; 0x32ce <free+0x126>
    324a:	13 96       	adiw	r26, 0x03	; 3
    324c:	fc 93       	st	X, r31
    324e:	ee 93       	st	-X, r30
    3250:	12 97       	sbiw	r26, 0x02	; 2
    3252:	ed 01       	movw	r28, r26
    3254:	49 91       	ld	r20, Y+
    3256:	59 91       	ld	r21, Y+
    3258:	9e 01       	movw	r18, r28
    325a:	24 0f       	add	r18, r20
    325c:	35 1f       	adc	r19, r21
    325e:	e2 17       	cp	r30, r18
    3260:	f3 07       	cpc	r31, r19
    3262:	71 f4       	brne	.+28     	; 0x3280 <free+0xd8>
    3264:	80 81       	ld	r24, Z
    3266:	91 81       	ldd	r25, Z+1	; 0x01
    3268:	84 0f       	add	r24, r20
    326a:	95 1f       	adc	r25, r21
    326c:	02 96       	adiw	r24, 0x02	; 2
    326e:	11 96       	adiw	r26, 0x01	; 1
    3270:	9c 93       	st	X, r25
    3272:	8e 93       	st	-X, r24
    3274:	82 81       	ldd	r24, Z+2	; 0x02
    3276:	93 81       	ldd	r25, Z+3	; 0x03
    3278:	13 96       	adiw	r26, 0x03	; 3
    327a:	9c 93       	st	X, r25
    327c:	8e 93       	st	-X, r24
    327e:	12 97       	sbiw	r26, 0x02	; 2
    3280:	e0 e0       	ldi	r30, 0x00	; 0
    3282:	f0 e0       	ldi	r31, 0x00	; 0
    3284:	d8 01       	movw	r26, r16
    3286:	12 96       	adiw	r26, 0x02	; 2
    3288:	8d 91       	ld	r24, X+
    328a:	9c 91       	ld	r25, X
    328c:	13 97       	sbiw	r26, 0x03	; 3
    328e:	00 97       	sbiw	r24, 0x00	; 0
    3290:	19 f0       	breq	.+6      	; 0x3298 <free+0xf0>
    3292:	f8 01       	movw	r30, r16
    3294:	8c 01       	movw	r16, r24
    3296:	f6 cf       	rjmp	.-20     	; 0x3284 <free+0xdc>
    3298:	8d 91       	ld	r24, X+
    329a:	9c 91       	ld	r25, X
    329c:	98 01       	movw	r18, r16
    329e:	2e 5f       	subi	r18, 0xFE	; 254
    32a0:	3f 4f       	sbci	r19, 0xFF	; 255
    32a2:	82 0f       	add	r24, r18
    32a4:	93 1f       	adc	r25, r19
    32a6:	20 91 31 19 	lds	r18, 0x1931
    32aa:	30 91 32 19 	lds	r19, 0x1932
    32ae:	28 17       	cp	r18, r24
    32b0:	39 07       	cpc	r19, r25
    32b2:	69 f4       	brne	.+26     	; 0x32ce <free+0x126>
    32b4:	30 97       	sbiw	r30, 0x00	; 0
    32b6:	29 f4       	brne	.+10     	; 0x32c2 <free+0x11a>
    32b8:	10 92 34 19 	sts	0x1934, r1
    32bc:	10 92 33 19 	sts	0x1933, r1
    32c0:	02 c0       	rjmp	.+4      	; 0x32c6 <free+0x11e>
    32c2:	13 82       	std	Z+3, r1	; 0x03
    32c4:	12 82       	std	Z+2, r1	; 0x02
    32c6:	10 93 32 19 	sts	0x1932, r17
    32ca:	00 93 31 19 	sts	0x1931, r16
    32ce:	df 91       	pop	r29
    32d0:	cf 91       	pop	r28
    32d2:	1f 91       	pop	r17
    32d4:	0f 91       	pop	r16
    32d6:	08 95       	ret

000032d8 <strtok>:
    32d8:	48 ed       	ldi	r20, 0xD8	; 216
    32da:	5a e0       	ldi	r21, 0x0A	; 10
    32dc:	5d c0       	rjmp	.+186    	; 0x3398 <strtok_r>

000032de <memcmp>:
    32de:	fb 01       	movw	r30, r22
    32e0:	dc 01       	movw	r26, r24
    32e2:	04 c0       	rjmp	.+8      	; 0x32ec <memcmp+0xe>
    32e4:	8d 91       	ld	r24, X+
    32e6:	01 90       	ld	r0, Z+
    32e8:	80 19       	sub	r24, r0
    32ea:	21 f4       	brne	.+8      	; 0x32f4 <memcmp+0x16>
    32ec:	41 50       	subi	r20, 0x01	; 1
    32ee:	50 40       	sbci	r21, 0x00	; 0
    32f0:	c8 f7       	brcc	.-14     	; 0x32e4 <memcmp+0x6>
    32f2:	88 1b       	sub	r24, r24
    32f4:	99 0b       	sbc	r25, r25
    32f6:	08 95       	ret

000032f8 <memcpy>:
    32f8:	fb 01       	movw	r30, r22
    32fa:	dc 01       	movw	r26, r24
    32fc:	02 c0       	rjmp	.+4      	; 0x3302 <memcpy+0xa>
    32fe:	01 90       	ld	r0, Z+
    3300:	0d 92       	st	X+, r0
    3302:	41 50       	subi	r20, 0x01	; 1
    3304:	50 40       	sbci	r21, 0x00	; 0
    3306:	d8 f7       	brcc	.-10     	; 0x32fe <memcpy+0x6>
    3308:	08 95       	ret

0000330a <strcmp>:
    330a:	fb 01       	movw	r30, r22
    330c:	dc 01       	movw	r26, r24
    330e:	8d 91       	ld	r24, X+
    3310:	01 90       	ld	r0, Z+
    3312:	80 19       	sub	r24, r0
    3314:	01 10       	cpse	r0, r1
    3316:	d9 f3       	breq	.-10     	; 0x330e <strcmp+0x4>
    3318:	99 0b       	sbc	r25, r25
    331a:	08 95       	ret

0000331c <strcpy>:
    331c:	fb 01       	movw	r30, r22
    331e:	dc 01       	movw	r26, r24
    3320:	01 90       	ld	r0, Z+
    3322:	0d 92       	st	X+, r0
    3324:	00 20       	and	r0, r0
    3326:	e1 f7       	brne	.-8      	; 0x3320 <strcpy+0x4>
    3328:	08 95       	ret

0000332a <strncmp>:
    332a:	fb 01       	movw	r30, r22
    332c:	dc 01       	movw	r26, r24
    332e:	41 50       	subi	r20, 0x01	; 1
    3330:	50 40       	sbci	r21, 0x00	; 0
    3332:	30 f0       	brcs	.+12     	; 0x3340 <strncmp+0x16>
    3334:	8d 91       	ld	r24, X+
    3336:	01 90       	ld	r0, Z+
    3338:	80 19       	sub	r24, r0
    333a:	19 f4       	brne	.+6      	; 0x3342 <strncmp+0x18>
    333c:	00 20       	and	r0, r0
    333e:	b9 f7       	brne	.-18     	; 0x332e <strncmp+0x4>
    3340:	88 1b       	sub	r24, r24
    3342:	99 0b       	sbc	r25, r25
    3344:	08 95       	ret

00003346 <strncpy>:
    3346:	fb 01       	movw	r30, r22
    3348:	dc 01       	movw	r26, r24
    334a:	41 50       	subi	r20, 0x01	; 1
    334c:	50 40       	sbci	r21, 0x00	; 0
    334e:	48 f0       	brcs	.+18     	; 0x3362 <strncpy+0x1c>
    3350:	01 90       	ld	r0, Z+
    3352:	0d 92       	st	X+, r0
    3354:	00 20       	and	r0, r0
    3356:	c9 f7       	brne	.-14     	; 0x334a <strncpy+0x4>
    3358:	01 c0       	rjmp	.+2      	; 0x335c <strncpy+0x16>
    335a:	1d 92       	st	X+, r1
    335c:	41 50       	subi	r20, 0x01	; 1
    335e:	50 40       	sbci	r21, 0x00	; 0
    3360:	e0 f7       	brcc	.-8      	; 0x335a <strncpy+0x14>
    3362:	08 95       	ret

00003364 <strstr>:
    3364:	fb 01       	movw	r30, r22
    3366:	51 91       	ld	r21, Z+
    3368:	55 23       	and	r21, r21
    336a:	a9 f0       	breq	.+42     	; 0x3396 <strstr+0x32>
    336c:	bf 01       	movw	r22, r30
    336e:	dc 01       	movw	r26, r24
    3370:	4d 91       	ld	r20, X+
    3372:	45 17       	cp	r20, r21
    3374:	41 11       	cpse	r20, r1
    3376:	e1 f7       	brne	.-8      	; 0x3370 <strstr+0xc>
    3378:	59 f4       	brne	.+22     	; 0x3390 <strstr+0x2c>
    337a:	cd 01       	movw	r24, r26
    337c:	01 90       	ld	r0, Z+
    337e:	00 20       	and	r0, r0
    3380:	49 f0       	breq	.+18     	; 0x3394 <strstr+0x30>
    3382:	4d 91       	ld	r20, X+
    3384:	40 15       	cp	r20, r0
    3386:	41 11       	cpse	r20, r1
    3388:	c9 f3       	breq	.-14     	; 0x337c <strstr+0x18>
    338a:	fb 01       	movw	r30, r22
    338c:	41 11       	cpse	r20, r1
    338e:	ef cf       	rjmp	.-34     	; 0x336e <strstr+0xa>
    3390:	81 e0       	ldi	r24, 0x01	; 1
    3392:	90 e0       	ldi	r25, 0x00	; 0
    3394:	01 97       	sbiw	r24, 0x01	; 1
    3396:	08 95       	ret

00003398 <strtok_r>:
    3398:	fa 01       	movw	r30, r20
    339a:	a1 91       	ld	r26, Z+
    339c:	b0 81       	ld	r27, Z
    339e:	00 97       	sbiw	r24, 0x00	; 0
    33a0:	19 f4       	brne	.+6      	; 0x33a8 <strtok_r+0x10>
    33a2:	10 97       	sbiw	r26, 0x00	; 0
    33a4:	e1 f0       	breq	.+56     	; 0x33de <strtok_r+0x46>
    33a6:	cd 01       	movw	r24, r26
    33a8:	dc 01       	movw	r26, r24
    33aa:	cd 01       	movw	r24, r26
    33ac:	0d 90       	ld	r0, X+
    33ae:	00 20       	and	r0, r0
    33b0:	11 f4       	brne	.+4      	; 0x33b6 <strtok_r+0x1e>
    33b2:	c0 01       	movw	r24, r0
    33b4:	13 c0       	rjmp	.+38     	; 0x33dc <strtok_r+0x44>
    33b6:	fb 01       	movw	r30, r22
    33b8:	21 91       	ld	r18, Z+
    33ba:	22 23       	and	r18, r18
    33bc:	19 f0       	breq	.+6      	; 0x33c4 <strtok_r+0x2c>
    33be:	20 15       	cp	r18, r0
    33c0:	d9 f7       	brne	.-10     	; 0x33b8 <strtok_r+0x20>
    33c2:	f3 cf       	rjmp	.-26     	; 0x33aa <strtok_r+0x12>
    33c4:	fb 01       	movw	r30, r22
    33c6:	21 91       	ld	r18, Z+
    33c8:	20 15       	cp	r18, r0
    33ca:	19 f4       	brne	.+6      	; 0x33d2 <strtok_r+0x3a>
    33cc:	1e 92       	st	-X, r1
    33ce:	11 96       	adiw	r26, 0x01	; 1
    33d0:	06 c0       	rjmp	.+12     	; 0x33de <strtok_r+0x46>
    33d2:	22 23       	and	r18, r18
    33d4:	c1 f7       	brne	.-16     	; 0x33c6 <strtok_r+0x2e>
    33d6:	0d 90       	ld	r0, X+
    33d8:	00 20       	and	r0, r0
    33da:	a1 f7       	brne	.-24     	; 0x33c4 <strtok_r+0x2c>
    33dc:	d0 01       	movw	r26, r0
    33de:	fa 01       	movw	r30, r20
    33e0:	a1 93       	st	Z+, r26
    33e2:	b0 83       	st	Z, r27
    33e4:	08 95       	ret

000033e6 <printf>:
    33e6:	cf 93       	push	r28
    33e8:	df 93       	push	r29
    33ea:	cd b7       	in	r28, 0x3d	; 61
    33ec:	de b7       	in	r29, 0x3e	; 62
    33ee:	ae 01       	movw	r20, r28
    33f0:	4a 5f       	subi	r20, 0xFA	; 250
    33f2:	5f 4f       	sbci	r21, 0xFF	; 255
    33f4:	fa 01       	movw	r30, r20
    33f6:	61 91       	ld	r22, Z+
    33f8:	71 91       	ld	r23, Z+
    33fa:	af 01       	movw	r20, r30
    33fc:	80 91 37 19 	lds	r24, 0x1937
    3400:	90 91 38 19 	lds	r25, 0x1938
    3404:	62 d0       	rcall	.+196    	; 0x34ca <vfprintf>
    3406:	df 91       	pop	r29
    3408:	cf 91       	pop	r28
    340a:	08 95       	ret

0000340c <puts>:
    340c:	0f 93       	push	r16
    340e:	1f 93       	push	r17
    3410:	cf 93       	push	r28
    3412:	df 93       	push	r29
    3414:	e0 91 37 19 	lds	r30, 0x1937
    3418:	f0 91 38 19 	lds	r31, 0x1938
    341c:	23 81       	ldd	r18, Z+3	; 0x03
    341e:	21 ff       	sbrs	r18, 1
    3420:	1b c0       	rjmp	.+54     	; 0x3458 <puts+0x4c>
    3422:	8c 01       	movw	r16, r24
    3424:	d0 e0       	ldi	r29, 0x00	; 0
    3426:	c0 e0       	ldi	r28, 0x00	; 0
    3428:	f8 01       	movw	r30, r16
    342a:	81 91       	ld	r24, Z+
    342c:	8f 01       	movw	r16, r30
    342e:	60 91 37 19 	lds	r22, 0x1937
    3432:	70 91 38 19 	lds	r23, 0x1938
    3436:	db 01       	movw	r26, r22
    3438:	18 96       	adiw	r26, 0x08	; 8
    343a:	ed 91       	ld	r30, X+
    343c:	fc 91       	ld	r31, X
    343e:	19 97       	sbiw	r26, 0x09	; 9
    3440:	88 23       	and	r24, r24
    3442:	31 f0       	breq	.+12     	; 0x3450 <puts+0x44>
    3444:	19 95       	eicall
    3446:	89 2b       	or	r24, r25
    3448:	79 f3       	breq	.-34     	; 0x3428 <puts+0x1c>
    344a:	df ef       	ldi	r29, 0xFF	; 255
    344c:	cf ef       	ldi	r28, 0xFF	; 255
    344e:	ec cf       	rjmp	.-40     	; 0x3428 <puts+0x1c>
    3450:	8a e0       	ldi	r24, 0x0A	; 10
    3452:	19 95       	eicall
    3454:	89 2b       	or	r24, r25
    3456:	19 f0       	breq	.+6      	; 0x345e <puts+0x52>
    3458:	8f ef       	ldi	r24, 0xFF	; 255
    345a:	9f ef       	ldi	r25, 0xFF	; 255
    345c:	02 c0       	rjmp	.+4      	; 0x3462 <puts+0x56>
    345e:	8d 2f       	mov	r24, r29
    3460:	9c 2f       	mov	r25, r28
    3462:	df 91       	pop	r29
    3464:	cf 91       	pop	r28
    3466:	1f 91       	pop	r17
    3468:	0f 91       	pop	r16
    346a:	08 95       	ret

0000346c <sprintf>:
    346c:	0f 93       	push	r16
    346e:	1f 93       	push	r17
    3470:	cf 93       	push	r28
    3472:	df 93       	push	r29
    3474:	cd b7       	in	r28, 0x3d	; 61
    3476:	de b7       	in	r29, 0x3e	; 62
    3478:	2e 97       	sbiw	r28, 0x0e	; 14
    347a:	0f b6       	in	r0, 0x3f	; 63
    347c:	f8 94       	cli
    347e:	de bf       	out	0x3e, r29	; 62
    3480:	0f be       	out	0x3f, r0	; 63
    3482:	cd bf       	out	0x3d, r28	; 61
    3484:	0e 89       	ldd	r16, Y+22	; 0x16
    3486:	1f 89       	ldd	r17, Y+23	; 0x17
    3488:	86 e0       	ldi	r24, 0x06	; 6
    348a:	8c 83       	std	Y+4, r24	; 0x04
    348c:	1a 83       	std	Y+2, r17	; 0x02
    348e:	09 83       	std	Y+1, r16	; 0x01
    3490:	8f ef       	ldi	r24, 0xFF	; 255
    3492:	9f e7       	ldi	r25, 0x7F	; 127
    3494:	9e 83       	std	Y+6, r25	; 0x06
    3496:	8d 83       	std	Y+5, r24	; 0x05
    3498:	ae 01       	movw	r20, r28
    349a:	46 5e       	subi	r20, 0xE6	; 230
    349c:	5f 4f       	sbci	r21, 0xFF	; 255
    349e:	68 8d       	ldd	r22, Y+24	; 0x18
    34a0:	79 8d       	ldd	r23, Y+25	; 0x19
    34a2:	ce 01       	movw	r24, r28
    34a4:	01 96       	adiw	r24, 0x01	; 1
    34a6:	11 d0       	rcall	.+34     	; 0x34ca <vfprintf>
    34a8:	2f 81       	ldd	r18, Y+7	; 0x07
    34aa:	38 85       	ldd	r19, Y+8	; 0x08
    34ac:	f8 01       	movw	r30, r16
    34ae:	e2 0f       	add	r30, r18
    34b0:	f3 1f       	adc	r31, r19
    34b2:	10 82       	st	Z, r1
    34b4:	2e 96       	adiw	r28, 0x0e	; 14
    34b6:	0f b6       	in	r0, 0x3f	; 63
    34b8:	f8 94       	cli
    34ba:	de bf       	out	0x3e, r29	; 62
    34bc:	0f be       	out	0x3f, r0	; 63
    34be:	cd bf       	out	0x3d, r28	; 61
    34c0:	df 91       	pop	r29
    34c2:	cf 91       	pop	r28
    34c4:	1f 91       	pop	r17
    34c6:	0f 91       	pop	r16
    34c8:	08 95       	ret

000034ca <vfprintf>:
    34ca:	2f 92       	push	r2
    34cc:	3f 92       	push	r3
    34ce:	4f 92       	push	r4
    34d0:	5f 92       	push	r5
    34d2:	6f 92       	push	r6
    34d4:	7f 92       	push	r7
    34d6:	8f 92       	push	r8
    34d8:	9f 92       	push	r9
    34da:	af 92       	push	r10
    34dc:	bf 92       	push	r11
    34de:	cf 92       	push	r12
    34e0:	df 92       	push	r13
    34e2:	ef 92       	push	r14
    34e4:	ff 92       	push	r15
    34e6:	0f 93       	push	r16
    34e8:	1f 93       	push	r17
    34ea:	cf 93       	push	r28
    34ec:	df 93       	push	r29
    34ee:	cd b7       	in	r28, 0x3d	; 61
    34f0:	de b7       	in	r29, 0x3e	; 62
    34f2:	2c 97       	sbiw	r28, 0x0c	; 12
    34f4:	0f b6       	in	r0, 0x3f	; 63
    34f6:	f8 94       	cli
    34f8:	de bf       	out	0x3e, r29	; 62
    34fa:	0f be       	out	0x3f, r0	; 63
    34fc:	cd bf       	out	0x3d, r28	; 61
    34fe:	7c 01       	movw	r14, r24
    3500:	6b 01       	movw	r12, r22
    3502:	8a 01       	movw	r16, r20
    3504:	fc 01       	movw	r30, r24
    3506:	17 82       	std	Z+7, r1	; 0x07
    3508:	16 82       	std	Z+6, r1	; 0x06
    350a:	83 81       	ldd	r24, Z+3	; 0x03
    350c:	81 ff       	sbrs	r24, 1
    350e:	b0 c1       	rjmp	.+864    	; 0x3870 <vfprintf+0x3a6>
    3510:	ce 01       	movw	r24, r28
    3512:	01 96       	adiw	r24, 0x01	; 1
    3514:	4c 01       	movw	r8, r24
    3516:	f7 01       	movw	r30, r14
    3518:	93 81       	ldd	r25, Z+3	; 0x03
    351a:	f6 01       	movw	r30, r12
    351c:	93 fd       	sbrc	r25, 3
    351e:	85 91       	lpm	r24, Z+
    3520:	93 ff       	sbrs	r25, 3
    3522:	81 91       	ld	r24, Z+
    3524:	6f 01       	movw	r12, r30
    3526:	88 23       	and	r24, r24
    3528:	09 f4       	brne	.+2      	; 0x352c <vfprintf+0x62>
    352a:	9e c1       	rjmp	.+828    	; 0x3868 <vfprintf+0x39e>
    352c:	85 32       	cpi	r24, 0x25	; 37
    352e:	39 f4       	brne	.+14     	; 0x353e <vfprintf+0x74>
    3530:	93 fd       	sbrc	r25, 3
    3532:	85 91       	lpm	r24, Z+
    3534:	93 ff       	sbrs	r25, 3
    3536:	81 91       	ld	r24, Z+
    3538:	6f 01       	movw	r12, r30
    353a:	85 32       	cpi	r24, 0x25	; 37
    353c:	21 f4       	brne	.+8      	; 0x3546 <vfprintf+0x7c>
    353e:	b7 01       	movw	r22, r14
    3540:	90 e0       	ldi	r25, 0x00	; 0
    3542:	c7 d1       	rcall	.+910    	; 0x38d2 <fputc>
    3544:	e8 cf       	rjmp	.-48     	; 0x3516 <vfprintf+0x4c>
    3546:	51 2c       	mov	r5, r1
    3548:	31 2c       	mov	r3, r1
    354a:	20 e0       	ldi	r18, 0x00	; 0
    354c:	20 32       	cpi	r18, 0x20	; 32
    354e:	a0 f4       	brcc	.+40     	; 0x3578 <vfprintf+0xae>
    3550:	8b 32       	cpi	r24, 0x2B	; 43
    3552:	69 f0       	breq	.+26     	; 0x356e <vfprintf+0xa4>
    3554:	30 f4       	brcc	.+12     	; 0x3562 <vfprintf+0x98>
    3556:	80 32       	cpi	r24, 0x20	; 32
    3558:	59 f0       	breq	.+22     	; 0x3570 <vfprintf+0xa6>
    355a:	83 32       	cpi	r24, 0x23	; 35
    355c:	69 f4       	brne	.+26     	; 0x3578 <vfprintf+0xae>
    355e:	20 61       	ori	r18, 0x10	; 16
    3560:	2c c0       	rjmp	.+88     	; 0x35ba <vfprintf+0xf0>
    3562:	8d 32       	cpi	r24, 0x2D	; 45
    3564:	39 f0       	breq	.+14     	; 0x3574 <vfprintf+0xaa>
    3566:	80 33       	cpi	r24, 0x30	; 48
    3568:	39 f4       	brne	.+14     	; 0x3578 <vfprintf+0xae>
    356a:	21 60       	ori	r18, 0x01	; 1
    356c:	26 c0       	rjmp	.+76     	; 0x35ba <vfprintf+0xf0>
    356e:	22 60       	ori	r18, 0x02	; 2
    3570:	24 60       	ori	r18, 0x04	; 4
    3572:	23 c0       	rjmp	.+70     	; 0x35ba <vfprintf+0xf0>
    3574:	28 60       	ori	r18, 0x08	; 8
    3576:	21 c0       	rjmp	.+66     	; 0x35ba <vfprintf+0xf0>
    3578:	27 fd       	sbrc	r18, 7
    357a:	27 c0       	rjmp	.+78     	; 0x35ca <vfprintf+0x100>
    357c:	30 ed       	ldi	r19, 0xD0	; 208
    357e:	38 0f       	add	r19, r24
    3580:	3a 30       	cpi	r19, 0x0A	; 10
    3582:	78 f4       	brcc	.+30     	; 0x35a2 <vfprintf+0xd8>
    3584:	26 ff       	sbrs	r18, 6
    3586:	06 c0       	rjmp	.+12     	; 0x3594 <vfprintf+0xca>
    3588:	fa e0       	ldi	r31, 0x0A	; 10
    358a:	5f 9e       	mul	r5, r31
    358c:	30 0d       	add	r19, r0
    358e:	11 24       	eor	r1, r1
    3590:	53 2e       	mov	r5, r19
    3592:	13 c0       	rjmp	.+38     	; 0x35ba <vfprintf+0xf0>
    3594:	8a e0       	ldi	r24, 0x0A	; 10
    3596:	38 9e       	mul	r3, r24
    3598:	30 0d       	add	r19, r0
    359a:	11 24       	eor	r1, r1
    359c:	33 2e       	mov	r3, r19
    359e:	20 62       	ori	r18, 0x20	; 32
    35a0:	0c c0       	rjmp	.+24     	; 0x35ba <vfprintf+0xf0>
    35a2:	8e 32       	cpi	r24, 0x2E	; 46
    35a4:	21 f4       	brne	.+8      	; 0x35ae <vfprintf+0xe4>
    35a6:	26 fd       	sbrc	r18, 6
    35a8:	5f c1       	rjmp	.+702    	; 0x3868 <vfprintf+0x39e>
    35aa:	20 64       	ori	r18, 0x40	; 64
    35ac:	06 c0       	rjmp	.+12     	; 0x35ba <vfprintf+0xf0>
    35ae:	8c 36       	cpi	r24, 0x6C	; 108
    35b0:	11 f4       	brne	.+4      	; 0x35b6 <vfprintf+0xec>
    35b2:	20 68       	ori	r18, 0x80	; 128
    35b4:	02 c0       	rjmp	.+4      	; 0x35ba <vfprintf+0xf0>
    35b6:	88 36       	cpi	r24, 0x68	; 104
    35b8:	41 f4       	brne	.+16     	; 0x35ca <vfprintf+0x100>
    35ba:	f6 01       	movw	r30, r12
    35bc:	93 fd       	sbrc	r25, 3
    35be:	85 91       	lpm	r24, Z+
    35c0:	93 ff       	sbrs	r25, 3
    35c2:	81 91       	ld	r24, Z+
    35c4:	6f 01       	movw	r12, r30
    35c6:	81 11       	cpse	r24, r1
    35c8:	c1 cf       	rjmp	.-126    	; 0x354c <vfprintf+0x82>
    35ca:	98 2f       	mov	r25, r24
    35cc:	9f 7d       	andi	r25, 0xDF	; 223
    35ce:	95 54       	subi	r25, 0x45	; 69
    35d0:	93 30       	cpi	r25, 0x03	; 3
    35d2:	28 f4       	brcc	.+10     	; 0x35de <vfprintf+0x114>
    35d4:	0c 5f       	subi	r16, 0xFC	; 252
    35d6:	1f 4f       	sbci	r17, 0xFF	; 255
    35d8:	ff e3       	ldi	r31, 0x3F	; 63
    35da:	f9 83       	std	Y+1, r31	; 0x01
    35dc:	0d c0       	rjmp	.+26     	; 0x35f8 <vfprintf+0x12e>
    35de:	83 36       	cpi	r24, 0x63	; 99
    35e0:	31 f0       	breq	.+12     	; 0x35ee <vfprintf+0x124>
    35e2:	83 37       	cpi	r24, 0x73	; 115
    35e4:	71 f0       	breq	.+28     	; 0x3602 <vfprintf+0x138>
    35e6:	83 35       	cpi	r24, 0x53	; 83
    35e8:	09 f0       	breq	.+2      	; 0x35ec <vfprintf+0x122>
    35ea:	57 c0       	rjmp	.+174    	; 0x369a <vfprintf+0x1d0>
    35ec:	21 c0       	rjmp	.+66     	; 0x3630 <vfprintf+0x166>
    35ee:	f8 01       	movw	r30, r16
    35f0:	80 81       	ld	r24, Z
    35f2:	89 83       	std	Y+1, r24	; 0x01
    35f4:	0e 5f       	subi	r16, 0xFE	; 254
    35f6:	1f 4f       	sbci	r17, 0xFF	; 255
    35f8:	44 24       	eor	r4, r4
    35fa:	43 94       	inc	r4
    35fc:	51 2c       	mov	r5, r1
    35fe:	54 01       	movw	r10, r8
    3600:	14 c0       	rjmp	.+40     	; 0x362a <vfprintf+0x160>
    3602:	38 01       	movw	r6, r16
    3604:	f2 e0       	ldi	r31, 0x02	; 2
    3606:	6f 0e       	add	r6, r31
    3608:	71 1c       	adc	r7, r1
    360a:	f8 01       	movw	r30, r16
    360c:	a0 80       	ld	r10, Z
    360e:	b1 80       	ldd	r11, Z+1	; 0x01
    3610:	26 ff       	sbrs	r18, 6
    3612:	03 c0       	rjmp	.+6      	; 0x361a <vfprintf+0x150>
    3614:	65 2d       	mov	r22, r5
    3616:	70 e0       	ldi	r23, 0x00	; 0
    3618:	02 c0       	rjmp	.+4      	; 0x361e <vfprintf+0x154>
    361a:	6f ef       	ldi	r22, 0xFF	; 255
    361c:	7f ef       	ldi	r23, 0xFF	; 255
    361e:	c5 01       	movw	r24, r10
    3620:	2c 87       	std	Y+12, r18	; 0x0c
    3622:	4c d1       	rcall	.+664    	; 0x38bc <strnlen>
    3624:	2c 01       	movw	r4, r24
    3626:	83 01       	movw	r16, r6
    3628:	2c 85       	ldd	r18, Y+12	; 0x0c
    362a:	2f 77       	andi	r18, 0x7F	; 127
    362c:	22 2e       	mov	r2, r18
    362e:	16 c0       	rjmp	.+44     	; 0x365c <vfprintf+0x192>
    3630:	38 01       	movw	r6, r16
    3632:	f2 e0       	ldi	r31, 0x02	; 2
    3634:	6f 0e       	add	r6, r31
    3636:	71 1c       	adc	r7, r1
    3638:	f8 01       	movw	r30, r16
    363a:	a0 80       	ld	r10, Z
    363c:	b1 80       	ldd	r11, Z+1	; 0x01
    363e:	26 ff       	sbrs	r18, 6
    3640:	03 c0       	rjmp	.+6      	; 0x3648 <vfprintf+0x17e>
    3642:	65 2d       	mov	r22, r5
    3644:	70 e0       	ldi	r23, 0x00	; 0
    3646:	02 c0       	rjmp	.+4      	; 0x364c <vfprintf+0x182>
    3648:	6f ef       	ldi	r22, 0xFF	; 255
    364a:	7f ef       	ldi	r23, 0xFF	; 255
    364c:	c5 01       	movw	r24, r10
    364e:	2c 87       	std	Y+12, r18	; 0x0c
    3650:	2a d1       	rcall	.+596    	; 0x38a6 <strnlen_P>
    3652:	2c 01       	movw	r4, r24
    3654:	2c 85       	ldd	r18, Y+12	; 0x0c
    3656:	20 68       	ori	r18, 0x80	; 128
    3658:	22 2e       	mov	r2, r18
    365a:	83 01       	movw	r16, r6
    365c:	23 fc       	sbrc	r2, 3
    365e:	19 c0       	rjmp	.+50     	; 0x3692 <vfprintf+0x1c8>
    3660:	83 2d       	mov	r24, r3
    3662:	90 e0       	ldi	r25, 0x00	; 0
    3664:	48 16       	cp	r4, r24
    3666:	59 06       	cpc	r5, r25
    3668:	a0 f4       	brcc	.+40     	; 0x3692 <vfprintf+0x1c8>
    366a:	b7 01       	movw	r22, r14
    366c:	80 e2       	ldi	r24, 0x20	; 32
    366e:	90 e0       	ldi	r25, 0x00	; 0
    3670:	30 d1       	rcall	.+608    	; 0x38d2 <fputc>
    3672:	3a 94       	dec	r3
    3674:	f5 cf       	rjmp	.-22     	; 0x3660 <vfprintf+0x196>
    3676:	f5 01       	movw	r30, r10
    3678:	27 fc       	sbrc	r2, 7
    367a:	85 91       	lpm	r24, Z+
    367c:	27 fe       	sbrs	r2, 7
    367e:	81 91       	ld	r24, Z+
    3680:	5f 01       	movw	r10, r30
    3682:	b7 01       	movw	r22, r14
    3684:	90 e0       	ldi	r25, 0x00	; 0
    3686:	25 d1       	rcall	.+586    	; 0x38d2 <fputc>
    3688:	31 10       	cpse	r3, r1
    368a:	3a 94       	dec	r3
    368c:	f1 e0       	ldi	r31, 0x01	; 1
    368e:	4f 1a       	sub	r4, r31
    3690:	51 08       	sbc	r5, r1
    3692:	41 14       	cp	r4, r1
    3694:	51 04       	cpc	r5, r1
    3696:	79 f7       	brne	.-34     	; 0x3676 <vfprintf+0x1ac>
    3698:	de c0       	rjmp	.+444    	; 0x3856 <vfprintf+0x38c>
    369a:	84 36       	cpi	r24, 0x64	; 100
    369c:	11 f0       	breq	.+4      	; 0x36a2 <vfprintf+0x1d8>
    369e:	89 36       	cpi	r24, 0x69	; 105
    36a0:	31 f5       	brne	.+76     	; 0x36ee <vfprintf+0x224>
    36a2:	f8 01       	movw	r30, r16
    36a4:	27 ff       	sbrs	r18, 7
    36a6:	07 c0       	rjmp	.+14     	; 0x36b6 <vfprintf+0x1ec>
    36a8:	60 81       	ld	r22, Z
    36aa:	71 81       	ldd	r23, Z+1	; 0x01
    36ac:	82 81       	ldd	r24, Z+2	; 0x02
    36ae:	93 81       	ldd	r25, Z+3	; 0x03
    36b0:	0c 5f       	subi	r16, 0xFC	; 252
    36b2:	1f 4f       	sbci	r17, 0xFF	; 255
    36b4:	08 c0       	rjmp	.+16     	; 0x36c6 <vfprintf+0x1fc>
    36b6:	60 81       	ld	r22, Z
    36b8:	71 81       	ldd	r23, Z+1	; 0x01
    36ba:	07 2e       	mov	r0, r23
    36bc:	00 0c       	add	r0, r0
    36be:	88 0b       	sbc	r24, r24
    36c0:	99 0b       	sbc	r25, r25
    36c2:	0e 5f       	subi	r16, 0xFE	; 254
    36c4:	1f 4f       	sbci	r17, 0xFF	; 255
    36c6:	2f 76       	andi	r18, 0x6F	; 111
    36c8:	72 2e       	mov	r7, r18
    36ca:	97 ff       	sbrs	r25, 7
    36cc:	09 c0       	rjmp	.+18     	; 0x36e0 <vfprintf+0x216>
    36ce:	90 95       	com	r25
    36d0:	80 95       	com	r24
    36d2:	70 95       	com	r23
    36d4:	61 95       	neg	r22
    36d6:	7f 4f       	sbci	r23, 0xFF	; 255
    36d8:	8f 4f       	sbci	r24, 0xFF	; 255
    36da:	9f 4f       	sbci	r25, 0xFF	; 255
    36dc:	20 68       	ori	r18, 0x80	; 128
    36de:	72 2e       	mov	r7, r18
    36e0:	2a e0       	ldi	r18, 0x0A	; 10
    36e2:	30 e0       	ldi	r19, 0x00	; 0
    36e4:	a4 01       	movw	r20, r8
    36e6:	2d d1       	rcall	.+602    	; 0x3942 <__ultoa_invert>
    36e8:	a8 2e       	mov	r10, r24
    36ea:	a8 18       	sub	r10, r8
    36ec:	43 c0       	rjmp	.+134    	; 0x3774 <vfprintf+0x2aa>
    36ee:	85 37       	cpi	r24, 0x75	; 117
    36f0:	29 f4       	brne	.+10     	; 0x36fc <vfprintf+0x232>
    36f2:	2f 7e       	andi	r18, 0xEF	; 239
    36f4:	b2 2e       	mov	r11, r18
    36f6:	2a e0       	ldi	r18, 0x0A	; 10
    36f8:	30 e0       	ldi	r19, 0x00	; 0
    36fa:	25 c0       	rjmp	.+74     	; 0x3746 <vfprintf+0x27c>
    36fc:	f2 2f       	mov	r31, r18
    36fe:	f9 7f       	andi	r31, 0xF9	; 249
    3700:	bf 2e       	mov	r11, r31
    3702:	8f 36       	cpi	r24, 0x6F	; 111
    3704:	c1 f0       	breq	.+48     	; 0x3736 <vfprintf+0x26c>
    3706:	18 f4       	brcc	.+6      	; 0x370e <vfprintf+0x244>
    3708:	88 35       	cpi	r24, 0x58	; 88
    370a:	79 f0       	breq	.+30     	; 0x372a <vfprintf+0x260>
    370c:	ad c0       	rjmp	.+346    	; 0x3868 <vfprintf+0x39e>
    370e:	80 37       	cpi	r24, 0x70	; 112
    3710:	19 f0       	breq	.+6      	; 0x3718 <vfprintf+0x24e>
    3712:	88 37       	cpi	r24, 0x78	; 120
    3714:	21 f0       	breq	.+8      	; 0x371e <vfprintf+0x254>
    3716:	a8 c0       	rjmp	.+336    	; 0x3868 <vfprintf+0x39e>
    3718:	2f 2f       	mov	r18, r31
    371a:	20 61       	ori	r18, 0x10	; 16
    371c:	b2 2e       	mov	r11, r18
    371e:	b4 fe       	sbrs	r11, 4
    3720:	0d c0       	rjmp	.+26     	; 0x373c <vfprintf+0x272>
    3722:	8b 2d       	mov	r24, r11
    3724:	84 60       	ori	r24, 0x04	; 4
    3726:	b8 2e       	mov	r11, r24
    3728:	09 c0       	rjmp	.+18     	; 0x373c <vfprintf+0x272>
    372a:	24 ff       	sbrs	r18, 4
    372c:	0a c0       	rjmp	.+20     	; 0x3742 <vfprintf+0x278>
    372e:	9f 2f       	mov	r25, r31
    3730:	96 60       	ori	r25, 0x06	; 6
    3732:	b9 2e       	mov	r11, r25
    3734:	06 c0       	rjmp	.+12     	; 0x3742 <vfprintf+0x278>
    3736:	28 e0       	ldi	r18, 0x08	; 8
    3738:	30 e0       	ldi	r19, 0x00	; 0
    373a:	05 c0       	rjmp	.+10     	; 0x3746 <vfprintf+0x27c>
    373c:	20 e1       	ldi	r18, 0x10	; 16
    373e:	30 e0       	ldi	r19, 0x00	; 0
    3740:	02 c0       	rjmp	.+4      	; 0x3746 <vfprintf+0x27c>
    3742:	20 e1       	ldi	r18, 0x10	; 16
    3744:	32 e0       	ldi	r19, 0x02	; 2
    3746:	f8 01       	movw	r30, r16
    3748:	b7 fe       	sbrs	r11, 7
    374a:	07 c0       	rjmp	.+14     	; 0x375a <vfprintf+0x290>
    374c:	60 81       	ld	r22, Z
    374e:	71 81       	ldd	r23, Z+1	; 0x01
    3750:	82 81       	ldd	r24, Z+2	; 0x02
    3752:	93 81       	ldd	r25, Z+3	; 0x03
    3754:	0c 5f       	subi	r16, 0xFC	; 252
    3756:	1f 4f       	sbci	r17, 0xFF	; 255
    3758:	06 c0       	rjmp	.+12     	; 0x3766 <vfprintf+0x29c>
    375a:	60 81       	ld	r22, Z
    375c:	71 81       	ldd	r23, Z+1	; 0x01
    375e:	80 e0       	ldi	r24, 0x00	; 0
    3760:	90 e0       	ldi	r25, 0x00	; 0
    3762:	0e 5f       	subi	r16, 0xFE	; 254
    3764:	1f 4f       	sbci	r17, 0xFF	; 255
    3766:	a4 01       	movw	r20, r8
    3768:	ec d0       	rcall	.+472    	; 0x3942 <__ultoa_invert>
    376a:	a8 2e       	mov	r10, r24
    376c:	a8 18       	sub	r10, r8
    376e:	fb 2d       	mov	r31, r11
    3770:	ff 77       	andi	r31, 0x7F	; 127
    3772:	7f 2e       	mov	r7, r31
    3774:	76 fe       	sbrs	r7, 6
    3776:	0b c0       	rjmp	.+22     	; 0x378e <vfprintf+0x2c4>
    3778:	37 2d       	mov	r19, r7
    377a:	3e 7f       	andi	r19, 0xFE	; 254
    377c:	a5 14       	cp	r10, r5
    377e:	50 f4       	brcc	.+20     	; 0x3794 <vfprintf+0x2ca>
    3780:	74 fe       	sbrs	r7, 4
    3782:	0a c0       	rjmp	.+20     	; 0x3798 <vfprintf+0x2ce>
    3784:	72 fc       	sbrc	r7, 2
    3786:	08 c0       	rjmp	.+16     	; 0x3798 <vfprintf+0x2ce>
    3788:	37 2d       	mov	r19, r7
    378a:	3e 7e       	andi	r19, 0xEE	; 238
    378c:	05 c0       	rjmp	.+10     	; 0x3798 <vfprintf+0x2ce>
    378e:	ba 2c       	mov	r11, r10
    3790:	37 2d       	mov	r19, r7
    3792:	03 c0       	rjmp	.+6      	; 0x379a <vfprintf+0x2d0>
    3794:	ba 2c       	mov	r11, r10
    3796:	01 c0       	rjmp	.+2      	; 0x379a <vfprintf+0x2d0>
    3798:	b5 2c       	mov	r11, r5
    379a:	34 ff       	sbrs	r19, 4
    379c:	0d c0       	rjmp	.+26     	; 0x37b8 <vfprintf+0x2ee>
    379e:	fe 01       	movw	r30, r28
    37a0:	ea 0d       	add	r30, r10
    37a2:	f1 1d       	adc	r31, r1
    37a4:	80 81       	ld	r24, Z
    37a6:	80 33       	cpi	r24, 0x30	; 48
    37a8:	11 f4       	brne	.+4      	; 0x37ae <vfprintf+0x2e4>
    37aa:	39 7e       	andi	r19, 0xE9	; 233
    37ac:	09 c0       	rjmp	.+18     	; 0x37c0 <vfprintf+0x2f6>
    37ae:	32 ff       	sbrs	r19, 2
    37b0:	06 c0       	rjmp	.+12     	; 0x37be <vfprintf+0x2f4>
    37b2:	b3 94       	inc	r11
    37b4:	b3 94       	inc	r11
    37b6:	04 c0       	rjmp	.+8      	; 0x37c0 <vfprintf+0x2f6>
    37b8:	83 2f       	mov	r24, r19
    37ba:	86 78       	andi	r24, 0x86	; 134
    37bc:	09 f0       	breq	.+2      	; 0x37c0 <vfprintf+0x2f6>
    37be:	b3 94       	inc	r11
    37c0:	33 fd       	sbrc	r19, 3
    37c2:	12 c0       	rjmp	.+36     	; 0x37e8 <vfprintf+0x31e>
    37c4:	30 ff       	sbrs	r19, 0
    37c6:	06 c0       	rjmp	.+12     	; 0x37d4 <vfprintf+0x30a>
    37c8:	5a 2c       	mov	r5, r10
    37ca:	b3 14       	cp	r11, r3
    37cc:	18 f4       	brcc	.+6      	; 0x37d4 <vfprintf+0x30a>
    37ce:	53 0c       	add	r5, r3
    37d0:	5b 18       	sub	r5, r11
    37d2:	b3 2c       	mov	r11, r3
    37d4:	b3 14       	cp	r11, r3
    37d6:	60 f4       	brcc	.+24     	; 0x37f0 <vfprintf+0x326>
    37d8:	b7 01       	movw	r22, r14
    37da:	80 e2       	ldi	r24, 0x20	; 32
    37dc:	90 e0       	ldi	r25, 0x00	; 0
    37de:	3c 87       	std	Y+12, r19	; 0x0c
    37e0:	78 d0       	rcall	.+240    	; 0x38d2 <fputc>
    37e2:	b3 94       	inc	r11
    37e4:	3c 85       	ldd	r19, Y+12	; 0x0c
    37e6:	f6 cf       	rjmp	.-20     	; 0x37d4 <vfprintf+0x30a>
    37e8:	b3 14       	cp	r11, r3
    37ea:	10 f4       	brcc	.+4      	; 0x37f0 <vfprintf+0x326>
    37ec:	3b 18       	sub	r3, r11
    37ee:	01 c0       	rjmp	.+2      	; 0x37f2 <vfprintf+0x328>
    37f0:	31 2c       	mov	r3, r1
    37f2:	34 ff       	sbrs	r19, 4
    37f4:	11 c0       	rjmp	.+34     	; 0x3818 <vfprintf+0x34e>
    37f6:	b7 01       	movw	r22, r14
    37f8:	80 e3       	ldi	r24, 0x30	; 48
    37fa:	90 e0       	ldi	r25, 0x00	; 0
    37fc:	3c 87       	std	Y+12, r19	; 0x0c
    37fe:	69 d0       	rcall	.+210    	; 0x38d2 <fputc>
    3800:	3c 85       	ldd	r19, Y+12	; 0x0c
    3802:	32 ff       	sbrs	r19, 2
    3804:	16 c0       	rjmp	.+44     	; 0x3832 <vfprintf+0x368>
    3806:	31 fd       	sbrc	r19, 1
    3808:	03 c0       	rjmp	.+6      	; 0x3810 <vfprintf+0x346>
    380a:	88 e7       	ldi	r24, 0x78	; 120
    380c:	90 e0       	ldi	r25, 0x00	; 0
    380e:	02 c0       	rjmp	.+4      	; 0x3814 <vfprintf+0x34a>
    3810:	88 e5       	ldi	r24, 0x58	; 88
    3812:	90 e0       	ldi	r25, 0x00	; 0
    3814:	b7 01       	movw	r22, r14
    3816:	0c c0       	rjmp	.+24     	; 0x3830 <vfprintf+0x366>
    3818:	83 2f       	mov	r24, r19
    381a:	86 78       	andi	r24, 0x86	; 134
    381c:	51 f0       	breq	.+20     	; 0x3832 <vfprintf+0x368>
    381e:	31 ff       	sbrs	r19, 1
    3820:	02 c0       	rjmp	.+4      	; 0x3826 <vfprintf+0x35c>
    3822:	8b e2       	ldi	r24, 0x2B	; 43
    3824:	01 c0       	rjmp	.+2      	; 0x3828 <vfprintf+0x35e>
    3826:	80 e2       	ldi	r24, 0x20	; 32
    3828:	37 fd       	sbrc	r19, 7
    382a:	8d e2       	ldi	r24, 0x2D	; 45
    382c:	b7 01       	movw	r22, r14
    382e:	90 e0       	ldi	r25, 0x00	; 0
    3830:	50 d0       	rcall	.+160    	; 0x38d2 <fputc>
    3832:	a5 14       	cp	r10, r5
    3834:	30 f4       	brcc	.+12     	; 0x3842 <vfprintf+0x378>
    3836:	b7 01       	movw	r22, r14
    3838:	80 e3       	ldi	r24, 0x30	; 48
    383a:	90 e0       	ldi	r25, 0x00	; 0
    383c:	4a d0       	rcall	.+148    	; 0x38d2 <fputc>
    383e:	5a 94       	dec	r5
    3840:	f8 cf       	rjmp	.-16     	; 0x3832 <vfprintf+0x368>
    3842:	aa 94       	dec	r10
    3844:	f4 01       	movw	r30, r8
    3846:	ea 0d       	add	r30, r10
    3848:	f1 1d       	adc	r31, r1
    384a:	80 81       	ld	r24, Z
    384c:	b7 01       	movw	r22, r14
    384e:	90 e0       	ldi	r25, 0x00	; 0
    3850:	40 d0       	rcall	.+128    	; 0x38d2 <fputc>
    3852:	a1 10       	cpse	r10, r1
    3854:	f6 cf       	rjmp	.-20     	; 0x3842 <vfprintf+0x378>
    3856:	33 20       	and	r3, r3
    3858:	09 f4       	brne	.+2      	; 0x385c <vfprintf+0x392>
    385a:	5d ce       	rjmp	.-838    	; 0x3516 <vfprintf+0x4c>
    385c:	b7 01       	movw	r22, r14
    385e:	80 e2       	ldi	r24, 0x20	; 32
    3860:	90 e0       	ldi	r25, 0x00	; 0
    3862:	37 d0       	rcall	.+110    	; 0x38d2 <fputc>
    3864:	3a 94       	dec	r3
    3866:	f7 cf       	rjmp	.-18     	; 0x3856 <vfprintf+0x38c>
    3868:	f7 01       	movw	r30, r14
    386a:	86 81       	ldd	r24, Z+6	; 0x06
    386c:	97 81       	ldd	r25, Z+7	; 0x07
    386e:	02 c0       	rjmp	.+4      	; 0x3874 <vfprintf+0x3aa>
    3870:	8f ef       	ldi	r24, 0xFF	; 255
    3872:	9f ef       	ldi	r25, 0xFF	; 255
    3874:	2c 96       	adiw	r28, 0x0c	; 12
    3876:	0f b6       	in	r0, 0x3f	; 63
    3878:	f8 94       	cli
    387a:	de bf       	out	0x3e, r29	; 62
    387c:	0f be       	out	0x3f, r0	; 63
    387e:	cd bf       	out	0x3d, r28	; 61
    3880:	df 91       	pop	r29
    3882:	cf 91       	pop	r28
    3884:	1f 91       	pop	r17
    3886:	0f 91       	pop	r16
    3888:	ff 90       	pop	r15
    388a:	ef 90       	pop	r14
    388c:	df 90       	pop	r13
    388e:	cf 90       	pop	r12
    3890:	bf 90       	pop	r11
    3892:	af 90       	pop	r10
    3894:	9f 90       	pop	r9
    3896:	8f 90       	pop	r8
    3898:	7f 90       	pop	r7
    389a:	6f 90       	pop	r6
    389c:	5f 90       	pop	r5
    389e:	4f 90       	pop	r4
    38a0:	3f 90       	pop	r3
    38a2:	2f 90       	pop	r2
    38a4:	08 95       	ret

000038a6 <strnlen_P>:
    38a6:	fc 01       	movw	r30, r24
    38a8:	05 90       	lpm	r0, Z+
    38aa:	61 50       	subi	r22, 0x01	; 1
    38ac:	70 40       	sbci	r23, 0x00	; 0
    38ae:	01 10       	cpse	r0, r1
    38b0:	d8 f7       	brcc	.-10     	; 0x38a8 <strnlen_P+0x2>
    38b2:	80 95       	com	r24
    38b4:	90 95       	com	r25
    38b6:	8e 0f       	add	r24, r30
    38b8:	9f 1f       	adc	r25, r31
    38ba:	08 95       	ret

000038bc <strnlen>:
    38bc:	fc 01       	movw	r30, r24
    38be:	61 50       	subi	r22, 0x01	; 1
    38c0:	70 40       	sbci	r23, 0x00	; 0
    38c2:	01 90       	ld	r0, Z+
    38c4:	01 10       	cpse	r0, r1
    38c6:	d8 f7       	brcc	.-10     	; 0x38be <strnlen+0x2>
    38c8:	80 95       	com	r24
    38ca:	90 95       	com	r25
    38cc:	8e 0f       	add	r24, r30
    38ce:	9f 1f       	adc	r25, r31
    38d0:	08 95       	ret

000038d2 <fputc>:
    38d2:	0f 93       	push	r16
    38d4:	1f 93       	push	r17
    38d6:	cf 93       	push	r28
    38d8:	df 93       	push	r29
    38da:	fb 01       	movw	r30, r22
    38dc:	23 81       	ldd	r18, Z+3	; 0x03
    38de:	21 fd       	sbrc	r18, 1
    38e0:	03 c0       	rjmp	.+6      	; 0x38e8 <fputc+0x16>
    38e2:	8f ef       	ldi	r24, 0xFF	; 255
    38e4:	9f ef       	ldi	r25, 0xFF	; 255
    38e6:	28 c0       	rjmp	.+80     	; 0x3938 <fputc+0x66>
    38e8:	22 ff       	sbrs	r18, 2
    38ea:	16 c0       	rjmp	.+44     	; 0x3918 <fputc+0x46>
    38ec:	46 81       	ldd	r20, Z+6	; 0x06
    38ee:	57 81       	ldd	r21, Z+7	; 0x07
    38f0:	24 81       	ldd	r18, Z+4	; 0x04
    38f2:	35 81       	ldd	r19, Z+5	; 0x05
    38f4:	42 17       	cp	r20, r18
    38f6:	53 07       	cpc	r21, r19
    38f8:	44 f4       	brge	.+16     	; 0x390a <fputc+0x38>
    38fa:	a0 81       	ld	r26, Z
    38fc:	b1 81       	ldd	r27, Z+1	; 0x01
    38fe:	9d 01       	movw	r18, r26
    3900:	2f 5f       	subi	r18, 0xFF	; 255
    3902:	3f 4f       	sbci	r19, 0xFF	; 255
    3904:	31 83       	std	Z+1, r19	; 0x01
    3906:	20 83       	st	Z, r18
    3908:	8c 93       	st	X, r24
    390a:	26 81       	ldd	r18, Z+6	; 0x06
    390c:	37 81       	ldd	r19, Z+7	; 0x07
    390e:	2f 5f       	subi	r18, 0xFF	; 255
    3910:	3f 4f       	sbci	r19, 0xFF	; 255
    3912:	37 83       	std	Z+7, r19	; 0x07
    3914:	26 83       	std	Z+6, r18	; 0x06
    3916:	10 c0       	rjmp	.+32     	; 0x3938 <fputc+0x66>
    3918:	eb 01       	movw	r28, r22
    391a:	09 2f       	mov	r16, r25
    391c:	18 2f       	mov	r17, r24
    391e:	00 84       	ldd	r0, Z+8	; 0x08
    3920:	f1 85       	ldd	r31, Z+9	; 0x09
    3922:	e0 2d       	mov	r30, r0
    3924:	19 95       	eicall
    3926:	89 2b       	or	r24, r25
    3928:	e1 f6       	brne	.-72     	; 0x38e2 <fputc+0x10>
    392a:	8e 81       	ldd	r24, Y+6	; 0x06
    392c:	9f 81       	ldd	r25, Y+7	; 0x07
    392e:	01 96       	adiw	r24, 0x01	; 1
    3930:	9f 83       	std	Y+7, r25	; 0x07
    3932:	8e 83       	std	Y+6, r24	; 0x06
    3934:	81 2f       	mov	r24, r17
    3936:	90 2f       	mov	r25, r16
    3938:	df 91       	pop	r29
    393a:	cf 91       	pop	r28
    393c:	1f 91       	pop	r17
    393e:	0f 91       	pop	r16
    3940:	08 95       	ret

00003942 <__ultoa_invert>:
    3942:	fa 01       	movw	r30, r20
    3944:	aa 27       	eor	r26, r26
    3946:	28 30       	cpi	r18, 0x08	; 8
    3948:	51 f1       	breq	.+84     	; 0x399e <__ultoa_invert+0x5c>
    394a:	20 31       	cpi	r18, 0x10	; 16
    394c:	81 f1       	breq	.+96     	; 0x39ae <__ultoa_invert+0x6c>
    394e:	e8 94       	clt
    3950:	6f 93       	push	r22
    3952:	6e 7f       	andi	r22, 0xFE	; 254
    3954:	6e 5f       	subi	r22, 0xFE	; 254
    3956:	7f 4f       	sbci	r23, 0xFF	; 255
    3958:	8f 4f       	sbci	r24, 0xFF	; 255
    395a:	9f 4f       	sbci	r25, 0xFF	; 255
    395c:	af 4f       	sbci	r26, 0xFF	; 255
    395e:	b1 e0       	ldi	r27, 0x01	; 1
    3960:	3e d0       	rcall	.+124    	; 0x39de <__ultoa_invert+0x9c>
    3962:	b4 e0       	ldi	r27, 0x04	; 4
    3964:	3c d0       	rcall	.+120    	; 0x39de <__ultoa_invert+0x9c>
    3966:	67 0f       	add	r22, r23
    3968:	78 1f       	adc	r23, r24
    396a:	89 1f       	adc	r24, r25
    396c:	9a 1f       	adc	r25, r26
    396e:	a1 1d       	adc	r26, r1
    3970:	68 0f       	add	r22, r24
    3972:	79 1f       	adc	r23, r25
    3974:	8a 1f       	adc	r24, r26
    3976:	91 1d       	adc	r25, r1
    3978:	a1 1d       	adc	r26, r1
    397a:	6a 0f       	add	r22, r26
    397c:	71 1d       	adc	r23, r1
    397e:	81 1d       	adc	r24, r1
    3980:	91 1d       	adc	r25, r1
    3982:	a1 1d       	adc	r26, r1
    3984:	20 d0       	rcall	.+64     	; 0x39c6 <__ultoa_invert+0x84>
    3986:	09 f4       	brne	.+2      	; 0x398a <__ultoa_invert+0x48>
    3988:	68 94       	set
    398a:	3f 91       	pop	r19
    398c:	2a e0       	ldi	r18, 0x0A	; 10
    398e:	26 9f       	mul	r18, r22
    3990:	11 24       	eor	r1, r1
    3992:	30 19       	sub	r19, r0
    3994:	30 5d       	subi	r19, 0xD0	; 208
    3996:	31 93       	st	Z+, r19
    3998:	de f6       	brtc	.-74     	; 0x3950 <__ultoa_invert+0xe>
    399a:	cf 01       	movw	r24, r30
    399c:	08 95       	ret
    399e:	46 2f       	mov	r20, r22
    39a0:	47 70       	andi	r20, 0x07	; 7
    39a2:	40 5d       	subi	r20, 0xD0	; 208
    39a4:	41 93       	st	Z+, r20
    39a6:	b3 e0       	ldi	r27, 0x03	; 3
    39a8:	0f d0       	rcall	.+30     	; 0x39c8 <__ultoa_invert+0x86>
    39aa:	c9 f7       	brne	.-14     	; 0x399e <__ultoa_invert+0x5c>
    39ac:	f6 cf       	rjmp	.-20     	; 0x399a <__ultoa_invert+0x58>
    39ae:	46 2f       	mov	r20, r22
    39b0:	4f 70       	andi	r20, 0x0F	; 15
    39b2:	40 5d       	subi	r20, 0xD0	; 208
    39b4:	4a 33       	cpi	r20, 0x3A	; 58
    39b6:	18 f0       	brcs	.+6      	; 0x39be <__ultoa_invert+0x7c>
    39b8:	49 5d       	subi	r20, 0xD9	; 217
    39ba:	31 fd       	sbrc	r19, 1
    39bc:	40 52       	subi	r20, 0x20	; 32
    39be:	41 93       	st	Z+, r20
    39c0:	02 d0       	rcall	.+4      	; 0x39c6 <__ultoa_invert+0x84>
    39c2:	a9 f7       	brne	.-22     	; 0x39ae <__ultoa_invert+0x6c>
    39c4:	ea cf       	rjmp	.-44     	; 0x399a <__ultoa_invert+0x58>
    39c6:	b4 e0       	ldi	r27, 0x04	; 4
    39c8:	a6 95       	lsr	r26
    39ca:	97 95       	ror	r25
    39cc:	87 95       	ror	r24
    39ce:	77 95       	ror	r23
    39d0:	67 95       	ror	r22
    39d2:	ba 95       	dec	r27
    39d4:	c9 f7       	brne	.-14     	; 0x39c8 <__ultoa_invert+0x86>
    39d6:	00 97       	sbiw	r24, 0x00	; 0
    39d8:	61 05       	cpc	r22, r1
    39da:	71 05       	cpc	r23, r1
    39dc:	08 95       	ret
    39de:	9b 01       	movw	r18, r22
    39e0:	ac 01       	movw	r20, r24
    39e2:	0a 2e       	mov	r0, r26
    39e4:	06 94       	lsr	r0
    39e6:	57 95       	ror	r21
    39e8:	47 95       	ror	r20
    39ea:	37 95       	ror	r19
    39ec:	27 95       	ror	r18
    39ee:	ba 95       	dec	r27
    39f0:	c9 f7       	brne	.-14     	; 0x39e4 <__ultoa_invert+0xa2>
    39f2:	62 0f       	add	r22, r18
    39f4:	73 1f       	adc	r23, r19
    39f6:	84 1f       	adc	r24, r20
    39f8:	95 1f       	adc	r25, r21
    39fa:	a0 1d       	adc	r26, r0
    39fc:	08 95       	ret

000039fe <_exit>:
    39fe:	f8 94       	cli

00003a00 <__stop_program>:
    3a00:	ff cf       	rjmp	.-2      	; 0x3a00 <__stop_program>
