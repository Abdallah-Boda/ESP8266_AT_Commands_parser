
01-ESP8266_ATMEGA_2560.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000088a  00800200  000034a4  00003538  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000034a4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000dfe  00800a8a  00800a8a  00003dc2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00003dc2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003e20  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000408  00000000  00000000  00003e60  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00006bb0  00000000  00000000  00004268  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a1b  00000000  00000000  0000ae18  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000274c  00000000  00000000  0000b833  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001154  00000000  00000000  0000df80  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001399  00000000  00000000  0000f0d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00005dad  00000000  00000000  0001046d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000420  00000000  00000000  0001621a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	91 c0       	rjmp	.+290    	; 0x124 <__ctors_end>
       2:	00 00       	nop
       4:	b0 c0       	rjmp	.+352    	; 0x166 <__bad_interrupt>
       6:	00 00       	nop
       8:	ae c0       	rjmp	.+348    	; 0x166 <__bad_interrupt>
       a:	00 00       	nop
       c:	ac c0       	rjmp	.+344    	; 0x166 <__bad_interrupt>
       e:	00 00       	nop
      10:	aa c0       	rjmp	.+340    	; 0x166 <__bad_interrupt>
      12:	00 00       	nop
      14:	a8 c0       	rjmp	.+336    	; 0x166 <__bad_interrupt>
      16:	00 00       	nop
      18:	a6 c0       	rjmp	.+332    	; 0x166 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	a4 c0       	rjmp	.+328    	; 0x166 <__bad_interrupt>
      1e:	00 00       	nop
      20:	a2 c0       	rjmp	.+324    	; 0x166 <__bad_interrupt>
      22:	00 00       	nop
      24:	a0 c0       	rjmp	.+320    	; 0x166 <__bad_interrupt>
      26:	00 00       	nop
      28:	9e c0       	rjmp	.+316    	; 0x166 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	9c c0       	rjmp	.+312    	; 0x166 <__bad_interrupt>
      2e:	00 00       	nop
      30:	9a c0       	rjmp	.+308    	; 0x166 <__bad_interrupt>
      32:	00 00       	nop
      34:	98 c0       	rjmp	.+304    	; 0x166 <__bad_interrupt>
      36:	00 00       	nop
      38:	96 c0       	rjmp	.+300    	; 0x166 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	94 c0       	rjmp	.+296    	; 0x166 <__bad_interrupt>
      3e:	00 00       	nop
      40:	92 c0       	rjmp	.+292    	; 0x166 <__bad_interrupt>
      42:	00 00       	nop
      44:	90 c0       	rjmp	.+288    	; 0x166 <__bad_interrupt>
      46:	00 00       	nop
      48:	8e c0       	rjmp	.+284    	; 0x166 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	8c c0       	rjmp	.+280    	; 0x166 <__bad_interrupt>
      4e:	00 00       	nop
      50:	8a c0       	rjmp	.+276    	; 0x166 <__bad_interrupt>
      52:	00 00       	nop
      54:	0c 94 64 13 	jmp	0x26c8	; 0x26c8 <__vector_21>
      58:	86 c0       	rjmp	.+268    	; 0x166 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	84 c0       	rjmp	.+264    	; 0x166 <__bad_interrupt>
      5e:	00 00       	nop
      60:	82 c0       	rjmp	.+260    	; 0x166 <__bad_interrupt>
      62:	00 00       	nop
      64:	0c 94 92 13 	jmp	0x2724	; 0x2724 <__vector_25>
      68:	7e c0       	rjmp	.+252    	; 0x166 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	7c c0       	rjmp	.+248    	; 0x166 <__bad_interrupt>
      6e:	00 00       	nop
      70:	7a c0       	rjmp	.+244    	; 0x166 <__bad_interrupt>
      72:	00 00       	nop
      74:	78 c0       	rjmp	.+240    	; 0x166 <__bad_interrupt>
      76:	00 00       	nop
      78:	76 c0       	rjmp	.+236    	; 0x166 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	74 c0       	rjmp	.+232    	; 0x166 <__bad_interrupt>
      7e:	00 00       	nop
      80:	72 c0       	rjmp	.+228    	; 0x166 <__bad_interrupt>
      82:	00 00       	nop
      84:	70 c0       	rjmp	.+224    	; 0x166 <__bad_interrupt>
      86:	00 00       	nop
      88:	6e c0       	rjmp	.+220    	; 0x166 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	6c c0       	rjmp	.+216    	; 0x166 <__bad_interrupt>
      8e:	00 00       	nop
      90:	0c 94 15 13 	jmp	0x262a	; 0x262a <__vector_36>
      94:	68 c0       	rjmp	.+208    	; 0x166 <__bad_interrupt>
      96:	00 00       	nop
      98:	66 c0       	rjmp	.+204    	; 0x166 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	64 c0       	rjmp	.+200    	; 0x166 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	62 c0       	rjmp	.+196    	; 0x166 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	60 c0       	rjmp	.+192    	; 0x166 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	5e c0       	rjmp	.+188    	; 0x166 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	5c c0       	rjmp	.+184    	; 0x166 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	5a c0       	rjmp	.+180    	; 0x166 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	58 c0       	rjmp	.+176    	; 0x166 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	56 c0       	rjmp	.+172    	; 0x166 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	54 c0       	rjmp	.+168    	; 0x166 <__bad_interrupt>
      be:	00 00       	nop
      c0:	52 c0       	rjmp	.+164    	; 0x166 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	50 c0       	rjmp	.+160    	; 0x166 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	4e c0       	rjmp	.+156    	; 0x166 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	4c c0       	rjmp	.+152    	; 0x166 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	4a c0       	rjmp	.+148    	; 0x166 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	48 c0       	rjmp	.+144    	; 0x166 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	46 c0       	rjmp	.+140    	; 0x166 <__bad_interrupt>
      da:	00 00       	nop
      dc:	44 c0       	rjmp	.+136    	; 0x166 <__bad_interrupt>
      de:	00 00       	nop
      e0:	42 c0       	rjmp	.+132    	; 0x166 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	50 0c       	add	r5, r0
      e6:	b1 0c       	add	r11, r1
      e8:	10 0a       	sbc	r1, r16
      ea:	b1 0c       	add	r11, r1
      ec:	d3 0b       	sbc	r29, r19
      ee:	e9 0b       	sbc	r30, r25
      f0:	50 0c       	add	r5, r0
      f2:	f7 0b       	sbc	r31, r23
      f4:	50 0c       	add	r5, r0
      f6:	17 0c       	add	r1, r7
      f8:	50 0c       	add	r5, r0
      fa:	c8 0a       	sbc	r12, r24
      fc:	b1 0c       	add	r11, r1
      fe:	50 0c       	add	r5, r0
     100:	60 0c       	add	r6, r0
     102:	50 0c       	add	r5, r0
     104:	50 0c       	add	r5, r0
     106:	b1 0c       	add	r11, r1
     108:	4a 0a       	sbc	r4, r26
     10a:	50 0c       	add	r5, r0
     10c:	50 0c       	add	r5, r0
     10e:	9a 0b       	sbc	r25, r26
     110:	b9 0b       	sbc	r27, r25
     112:	73 0c       	add	r7, r3
     114:	94 0c       	add	r9, r4
     116:	50 0c       	add	r5, r0
     118:	b1 0c       	add	r11, r1
     11a:	b1 0c       	add	r11, r1
     11c:	b1 0c       	add	r11, r1
     11e:	b1 0c       	add	r11, r1
     120:	50 0c       	add	r5, r0
     122:	50 0c       	add	r5, r0

00000124 <__ctors_end>:
     124:	11 24       	eor	r1, r1
     126:	1f be       	out	0x3f, r1	; 63
     128:	cf ef       	ldi	r28, 0xFF	; 255
     12a:	d1 e2       	ldi	r29, 0x21	; 33
     12c:	de bf       	out	0x3e, r29	; 62
     12e:	cd bf       	out	0x3d, r28	; 61
     130:	00 e0       	ldi	r16, 0x00	; 0
     132:	0c bf       	out	0x3c, r16	; 60

00000134 <__do_copy_data>:
     134:	1a e0       	ldi	r17, 0x0A	; 10
     136:	a0 e0       	ldi	r26, 0x00	; 0
     138:	b2 e0       	ldi	r27, 0x02	; 2
     13a:	e4 ea       	ldi	r30, 0xA4	; 164
     13c:	f4 e3       	ldi	r31, 0x34	; 52
     13e:	00 e0       	ldi	r16, 0x00	; 0
     140:	0b bf       	out	0x3b, r16	; 59
     142:	02 c0       	rjmp	.+4      	; 0x148 <__do_copy_data+0x14>
     144:	07 90       	elpm	r0, Z+
     146:	0d 92       	st	X+, r0
     148:	aa 38       	cpi	r26, 0x8A	; 138
     14a:	b1 07       	cpc	r27, r17
     14c:	d9 f7       	brne	.-10     	; 0x144 <__do_copy_data+0x10>

0000014e <__do_clear_bss>:
     14e:	28 e1       	ldi	r18, 0x18	; 24
     150:	aa e8       	ldi	r26, 0x8A	; 138
     152:	ba e0       	ldi	r27, 0x0A	; 10
     154:	01 c0       	rjmp	.+2      	; 0x158 <.do_clear_bss_start>

00000156 <.do_clear_bss_loop>:
     156:	1d 92       	st	X+, r1

00000158 <.do_clear_bss_start>:
     158:	a8 38       	cpi	r26, 0x88	; 136
     15a:	b2 07       	cpc	r27, r18
     15c:	e1 f7       	brne	.-8      	; 0x156 <.do_clear_bss_loop>
     15e:	0e 94 da 13 	call	0x27b4	; 0x27b4 <main>
     162:	0c 94 50 1a 	jmp	0x34a0	; 0x34a0 <_exit>

00000166 <__bad_interrupt>:
     166:	4c cf       	rjmp	.-360    	; 0x0 <__vectors>

00000168 <BUFFER_Init>:
	}
	
	/* Clear flags */
	Buffer->Flags = 0;
	Buffer->Size = 0;
}
     168:	cf 93       	push	r28
     16a:	df 93       	push	r29
     16c:	ec 01       	movw	r28, r24
     16e:	8c e0       	ldi	r24, 0x0C	; 12
     170:	fe 01       	movw	r30, r28
     172:	11 92       	st	Z+, r1
     174:	8a 95       	dec	r24
     176:	e9 f7       	brne	.-6      	; 0x172 <BUFFER_Init+0xa>
     178:	79 83       	std	Y+1, r23	; 0x01
     17a:	68 83       	st	Y, r22
     17c:	5f 83       	std	Y+7, r21	; 0x07
     17e:	4e 83       	std	Y+6, r20	; 0x06
     180:	8a e0       	ldi	r24, 0x0A	; 10
     182:	89 87       	std	Y+9, r24	; 0x09
     184:	45 2b       	or	r20, r21
     186:	71 f4       	brne	.+28     	; 0x1a4 <BUFFER_Init+0x3c>
     188:	cb 01       	movw	r24, r22
     18a:	0e 94 90 15 	call	0x2b20	; 0x2b20 <malloc>
     18e:	9f 83       	std	Y+7, r25	; 0x07
     190:	8e 83       	std	Y+6, r24	; 0x06
     192:	89 2b       	or	r24, r25
     194:	21 f4       	brne	.+8      	; 0x19e <BUFFER_Init+0x36>
     196:	19 82       	std	Y+1, r1	; 0x01
     198:	18 82       	st	Y, r1
     19a:	81 e0       	ldi	r24, 0x01	; 1
     19c:	07 c0       	rjmp	.+14     	; 0x1ac <BUFFER_Init+0x44>
     19e:	88 85       	ldd	r24, Y+8	; 0x08
     1a0:	82 60       	ori	r24, 0x02	; 2
     1a2:	88 87       	std	Y+8, r24	; 0x08
     1a4:	88 85       	ldd	r24, Y+8	; 0x08
     1a6:	81 60       	ori	r24, 0x01	; 1
     1a8:	88 87       	std	Y+8, r24	; 0x08
     1aa:	80 e0       	ldi	r24, 0x00	; 0
     1ac:	df 91       	pop	r29
     1ae:	cf 91       	pop	r28
     1b0:	08 95       	ret

000001b2 <BUFFER_Write>:

uint16_t BUFFER_Write(BUFFER_t* Buffer, uint8_t* Data, uint16_t count) {
     1b2:	1f 93       	push	r17
     1b4:	cf 93       	push	r28
     1b6:	df 93       	push	r29
     1b8:	fc 01       	movw	r30, r24
	uint8_t i = 0;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
     1ba:	89 2b       	or	r24, r25
     1bc:	e1 f1       	breq	.+120    	; 0x236 <BUFFER_Write+0x84>
		return 0;
	}

	/* Check input pointer */
	if (Buffer->In >= Buffer->Size) {
     1be:	22 81       	ldd	r18, Z+2	; 0x02
     1c0:	33 81       	ldd	r19, Z+3	; 0x03
     1c2:	80 81       	ld	r24, Z
     1c4:	91 81       	ldd	r25, Z+1	; 0x01
     1c6:	28 17       	cp	r18, r24
     1c8:	39 07       	cpc	r19, r25
     1ca:	10 f0       	brcs	.+4      	; 0x1d0 <BUFFER_Write+0x1e>
		Buffer->In = 0;
     1cc:	13 82       	std	Z+3, r1	; 0x03
     1ce:	12 82       	std	Z+2, r1	; 0x02
     1d0:	16 2f       	mov	r17, r22
     1d2:	46 0f       	add	r20, r22
     1d4:	57 1f       	adc	r21, r23
	/* Clear flags */
	Buffer->Flags = 0;
	Buffer->Size = 0;
}

uint16_t BUFFER_Write(BUFFER_t* Buffer, uint8_t* Data, uint16_t count) {
     1d6:	a6 2f       	mov	r26, r22
     1d8:	b7 2f       	mov	r27, r23
     1da:	26 c0       	rjmp	.+76     	; 0x228 <BUFFER_Write+0x76>
	
	/* Go through all elements */
	while (count--) {
		/* Check if buffer full */
		if (
			(Buffer->In == (Buffer->Out - 1)) ||
     1dc:	22 81       	ldd	r18, Z+2	; 0x02
     1de:	33 81       	ldd	r19, Z+3	; 0x03
     1e0:	64 81       	ldd	r22, Z+4	; 0x04
     1e2:	75 81       	ldd	r23, Z+5	; 0x05
     1e4:	eb 01       	movw	r28, r22
     1e6:	21 97       	sbiw	r28, 0x01	; 1
	}
	
	/* Go through all elements */
	while (count--) {
		/* Check if buffer full */
		if (
     1e8:	2c 17       	cp	r18, r28
     1ea:	3d 07       	cpc	r19, r29
     1ec:	11 f1       	breq	.+68     	; 0x232 <BUFFER_Write+0x80>
			(Buffer->In == (Buffer->Out - 1)) ||
     1ee:	67 2b       	or	r22, r23
     1f0:	39 f4       	brne	.+14     	; 0x200 <BUFFER_Write+0x4e>
			(Buffer->Out == 0 && Buffer->In == (Buffer->Size - 1))
     1f2:	60 81       	ld	r22, Z
     1f4:	71 81       	ldd	r23, Z+1	; 0x01
     1f6:	61 50       	subi	r22, 0x01	; 1
     1f8:	71 09       	sbc	r23, r1
     1fa:	26 17       	cp	r18, r22
     1fc:	37 07       	cpc	r19, r23
     1fe:	c9 f0       	breq	.+50     	; 0x232 <BUFFER_Write+0x80>
		) {
			break;
		}
		
		/* Add to buffer */
		Buffer->Buffer[Buffer->In++] = *Data++;
     200:	66 81       	ldd	r22, Z+6	; 0x06
     202:	77 81       	ldd	r23, Z+7	; 0x07
     204:	c9 01       	movw	r24, r18
     206:	01 96       	adiw	r24, 0x01	; 1
     208:	93 83       	std	Z+3, r25	; 0x03
     20a:	82 83       	std	Z+2, r24	; 0x02
     20c:	8d 91       	ld	r24, X+
     20e:	eb 01       	movw	r28, r22
     210:	c2 0f       	add	r28, r18
     212:	d3 1f       	adc	r29, r19
     214:	88 83       	st	Y, r24
		
		/* Increase pointers */
		i++;
		
		/* Check input overflow */
		if (Buffer->In >= Buffer->Size) {
     216:	22 81       	ldd	r18, Z+2	; 0x02
     218:	33 81       	ldd	r19, Z+3	; 0x03
     21a:	80 81       	ld	r24, Z
     21c:	91 81       	ldd	r25, Z+1	; 0x01
     21e:	28 17       	cp	r18, r24
     220:	39 07       	cpc	r19, r25
     222:	10 f0       	brcs	.+4      	; 0x228 <BUFFER_Write+0x76>
			Buffer->In = 0;
     224:	13 82       	std	Z+3, r1	; 0x03
     226:	12 82       	std	Z+2, r1	; 0x02
     228:	8a 2f       	mov	r24, r26
     22a:	81 1b       	sub	r24, r17
	if (Buffer->In >= Buffer->Size) {
		Buffer->In = 0;
	}
	
	/* Go through all elements */
	while (count--) {
     22c:	a4 17       	cp	r26, r20
     22e:	b5 07       	cpc	r27, r21
     230:	a9 f6       	brne	.-86     	; 0x1dc <BUFFER_Write+0x2a>
			Buffer->In = 0;
		}
	}
	
	/* Return number of elements stored in memory */
	return i;
     232:	90 e0       	ldi	r25, 0x00	; 0
     234:	02 c0       	rjmp	.+4      	; 0x23a <BUFFER_Write+0x88>
uint16_t BUFFER_Write(BUFFER_t* Buffer, uint8_t* Data, uint16_t count) {
	uint8_t i = 0;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
		return 0;
     236:	80 e0       	ldi	r24, 0x00	; 0
     238:	90 e0       	ldi	r25, 0x00	; 0
		}
	}
	
	/* Return number of elements stored in memory */
	return i;
}
     23a:	df 91       	pop	r29
     23c:	cf 91       	pop	r28
     23e:	1f 91       	pop	r17
     240:	08 95       	ret

00000242 <BUFFER_Read>:

uint16_t BUFFER_Read(BUFFER_t* Buffer, uint8_t* Data, uint16_t count) {
     242:	cf 93       	push	r28
     244:	df 93       	push	r29
     246:	fc 01       	movw	r30, r24
	uint16_t i = 0;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
     248:	89 2b       	or	r24, r25
     24a:	89 f1       	breq	.+98     	; 0x2ae <BUFFER_Read+0x6c>
		return 0;
	}

	/* Check output pointer */
	if (Buffer->Out >= Buffer->Size) {
     24c:	24 81       	ldd	r18, Z+4	; 0x04
     24e:	35 81       	ldd	r19, Z+5	; 0x05
     250:	80 81       	ld	r24, Z
     252:	91 81       	ldd	r25, Z+1	; 0x01
     254:	28 17       	cp	r18, r24
     256:	39 07       	cpc	r19, r25
     258:	10 f0       	brcs	.+4      	; 0x25e <BUFFER_Read+0x1c>
		Buffer->Out = 0;
     25a:	15 82       	std	Z+5, r1	; 0x05
     25c:	14 82       	std	Z+4, r1	; 0x04
     25e:	a6 2f       	mov	r26, r22
     260:	b7 2f       	mov	r27, r23
	
	/* Return number of elements stored in memory */
	return i;
}

uint16_t BUFFER_Read(BUFFER_t* Buffer, uint8_t* Data, uint16_t count) {
     262:	20 e0       	ldi	r18, 0x00	; 0
     264:	30 e0       	ldi	r19, 0x00	; 0
     266:	1d c0       	rjmp	.+58     	; 0x2a2 <BUFFER_Read+0x60>
	}
	
	/* Go through all elements */
	while (count--) {
		/* Check if pointers are same = buffer is empty */
		if (Buffer->Out == Buffer->In) {
     268:	84 81       	ldd	r24, Z+4	; 0x04
     26a:	95 81       	ldd	r25, Z+5	; 0x05
     26c:	62 81       	ldd	r22, Z+2	; 0x02
     26e:	73 81       	ldd	r23, Z+3	; 0x03
     270:	86 17       	cp	r24, r22
     272:	97 07       	cpc	r25, r23
     274:	f9 f0       	breq	.+62     	; 0x2b4 <BUFFER_Read+0x72>
			break;
		}
		
		/* Save to user buffer */
		*Data++ = Buffer->Buffer[Buffer->Out++];
     276:	66 81       	ldd	r22, Z+6	; 0x06
     278:	77 81       	ldd	r23, Z+7	; 0x07
     27a:	ec 01       	movw	r28, r24
     27c:	21 96       	adiw	r28, 0x01	; 1
     27e:	d5 83       	std	Z+5, r29	; 0x05
     280:	c4 83       	std	Z+4, r28	; 0x04
     282:	eb 01       	movw	r28, r22
     284:	c8 0f       	add	r28, r24
     286:	d9 1f       	adc	r29, r25
     288:	88 81       	ld	r24, Y
     28a:	8d 93       	st	X+, r24
		
		/* Increase pointers */
		i++;
     28c:	2f 5f       	subi	r18, 0xFF	; 255
     28e:	3f 4f       	sbci	r19, 0xFF	; 255

		/* Check output overflow */
		if (Buffer->Out >= Buffer->Size) {
     290:	64 81       	ldd	r22, Z+4	; 0x04
     292:	75 81       	ldd	r23, Z+5	; 0x05
     294:	80 81       	ld	r24, Z
     296:	91 81       	ldd	r25, Z+1	; 0x01
     298:	68 17       	cp	r22, r24
     29a:	79 07       	cpc	r23, r25
     29c:	10 f0       	brcs	.+4      	; 0x2a2 <BUFFER_Read+0x60>
			Buffer->Out = 0;
     29e:	15 82       	std	Z+5, r1	; 0x05
     2a0:	14 82       	std	Z+4, r1	; 0x04
	if (Buffer->Out >= Buffer->Size) {
		Buffer->Out = 0;
	}
	
	/* Go through all elements */
	while (count--) {
     2a2:	24 17       	cp	r18, r20
     2a4:	35 07       	cpc	r19, r21
     2a6:	01 f7       	brne	.-64     	; 0x268 <BUFFER_Read+0x26>
     2a8:	84 2f       	mov	r24, r20
     2aa:	95 2f       	mov	r25, r21
     2ac:	05 c0       	rjmp	.+10     	; 0x2b8 <BUFFER_Read+0x76>
uint16_t BUFFER_Read(BUFFER_t* Buffer, uint8_t* Data, uint16_t count) {
	uint16_t i = 0;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
		return 0;
     2ae:	80 e0       	ldi	r24, 0x00	; 0
     2b0:	90 e0       	ldi	r25, 0x00	; 0
     2b2:	02 c0       	rjmp	.+4      	; 0x2b8 <BUFFER_Read+0x76>
     2b4:	82 2f       	mov	r24, r18
     2b6:	93 2f       	mov	r25, r19
		}
	}
	
	/* Return number of elements read from buffer */
	return i;
}
     2b8:	df 91       	pop	r29
     2ba:	cf 91       	pop	r28
     2bc:	08 95       	ret

000002be <BUFFER_GetFree>:

uint16_t BUFFER_GetFree(BUFFER_t* Buffer) {
     2be:	0f 93       	push	r16
     2c0:	1f 93       	push	r17
     2c2:	fc 01       	movw	r30, r24
	uint32_t size = 0, in, out;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
     2c4:	89 2b       	or	r24, r25
     2c6:	99 f1       	breq	.+102    	; 0x32e <BUFFER_GetFree+0x70>
		return 0;
	}
	
	/* Save values */
	in = Buffer->In;
     2c8:	02 81       	ldd	r16, Z+2	; 0x02
     2ca:	13 81       	ldd	r17, Z+3	; 0x03
     2cc:	20 e0       	ldi	r18, 0x00	; 0
     2ce:	30 e0       	ldi	r19, 0x00	; 0
	out = Buffer->Out;
     2d0:	44 81       	ldd	r20, Z+4	; 0x04
     2d2:	55 81       	ldd	r21, Z+5	; 0x05
     2d4:	60 e0       	ldi	r22, 0x00	; 0
     2d6:	70 e0       	ldi	r23, 0x00	; 0
	
	/* Check if the same */
	if (in == out) {
     2d8:	04 17       	cp	r16, r20
     2da:	15 07       	cpc	r17, r21
     2dc:	26 07       	cpc	r18, r22
     2de:	37 07       	cpc	r19, r23
     2e0:	21 f4       	brne	.+8      	; 0x2ea <BUFFER_GetFree+0x2c>
		size = Buffer->Size;
     2e2:	40 81       	ld	r20, Z
     2e4:	51 81       	ldd	r21, Z+1	; 0x01
     2e6:	ca 01       	movw	r24, r20
     2e8:	20 c0       	rjmp	.+64     	; 0x32a <BUFFER_GetFree+0x6c>
	}

	/* Check normal mode */
	if (out > in) {
     2ea:	04 17       	cp	r16, r20
     2ec:	15 07       	cpc	r17, r21
     2ee:	26 07       	cpc	r18, r22
     2f0:	37 07       	cpc	r19, r23
     2f2:	38 f4       	brcc	.+14     	; 0x302 <BUFFER_GetFree+0x44>
		size = out - in;
     2f4:	db 01       	movw	r26, r22
     2f6:	ca 01       	movw	r24, r20
     2f8:	80 1b       	sub	r24, r16
     2fa:	91 0b       	sbc	r25, r17
     2fc:	a2 0b       	sbc	r26, r18
     2fe:	b3 0b       	sbc	r27, r19
     300:	03 c0       	rjmp	.+6      	; 0x308 <BUFFER_GetFree+0x4a>
	/* Return number of elements read from buffer */
	return i;
}

uint16_t BUFFER_GetFree(BUFFER_t* Buffer) {
	uint32_t size = 0, in, out;
     302:	80 e0       	ldi	r24, 0x00	; 0
     304:	90 e0       	ldi	r25, 0x00	; 0
     306:	dc 01       	movw	r26, r24
	if (out > in) {
		size = out - in;
	}
	
	/* Check if overflow mode */
	if (in > out) {
     308:	40 17       	cp	r20, r16
     30a:	51 07       	cpc	r21, r17
     30c:	62 07       	cpc	r22, r18
     30e:	73 07       	cpc	r23, r19
     310:	60 f4       	brcc	.+24     	; 0x32a <BUFFER_GetFree+0x6c>
		size = Buffer->Size - (in - out);
     312:	80 81       	ld	r24, Z
     314:	91 81       	ldd	r25, Z+1	; 0x01
     316:	48 0f       	add	r20, r24
     318:	59 1f       	adc	r21, r25
     31a:	61 1d       	adc	r22, r1
     31c:	71 1d       	adc	r23, r1
     31e:	db 01       	movw	r26, r22
     320:	ca 01       	movw	r24, r20
     322:	80 1b       	sub	r24, r16
     324:	91 0b       	sbc	r25, r17
     326:	a2 0b       	sbc	r26, r18
     328:	b3 0b       	sbc	r27, r19
	}
	
	/* Return free memory */
	return size - 1;
     32a:	01 97       	sbiw	r24, 0x01	; 1
     32c:	02 c0       	rjmp	.+4      	; 0x332 <BUFFER_GetFree+0x74>
uint16_t BUFFER_GetFree(BUFFER_t* Buffer) {
	uint32_t size = 0, in, out;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
		return 0;
     32e:	80 e0       	ldi	r24, 0x00	; 0
     330:	90 e0       	ldi	r25, 0x00	; 0
		size = Buffer->Size - (in - out);
	}
	
	/* Return free memory */
	return size - 1;
}
     332:	1f 91       	pop	r17
     334:	0f 91       	pop	r16
     336:	08 95       	ret

00000338 <BUFFER_GetFull>:

uint16_t BUFFER_GetFull(BUFFER_t* Buffer) {
     338:	0f 93       	push	r16
     33a:	1f 93       	push	r17
     33c:	fc 01       	movw	r30, r24
	uint32_t in, out, size;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
     33e:	89 2b       	or	r24, r25
     340:	49 f1       	breq	.+82     	; 0x394 <BUFFER_GetFull+0x5c>
		return 0;
	}
	
	/* Save values */
	in = Buffer->In;
     342:	42 81       	ldd	r20, Z+2	; 0x02
     344:	53 81       	ldd	r21, Z+3	; 0x03
     346:	60 e0       	ldi	r22, 0x00	; 0
     348:	70 e0       	ldi	r23, 0x00	; 0
	out = Buffer->Out;
     34a:	04 81       	ldd	r16, Z+4	; 0x04
     34c:	15 81       	ldd	r17, Z+5	; 0x05
     34e:	20 e0       	ldi	r18, 0x00	; 0
     350:	30 e0       	ldi	r19, 0x00	; 0
		size = 0;
	}
	
	/* Check pointers and return values */
	/* Buffer is not in overflow mode */
	if (in > out) {
     352:	04 17       	cp	r16, r20
     354:	15 07       	cpc	r17, r21
     356:	26 07       	cpc	r18, r22
     358:	37 07       	cpc	r19, r23
     35a:	38 f4       	brcc	.+14     	; 0x36a <BUFFER_GetFull+0x32>
		size = in - out;
     35c:	db 01       	movw	r26, r22
     35e:	ca 01       	movw	r24, r20
     360:	80 1b       	sub	r24, r16
     362:	91 0b       	sbc	r25, r17
     364:	a2 0b       	sbc	r26, r18
     366:	b3 0b       	sbc	r27, r19
     368:	03 c0       	rjmp	.+6      	; 0x370 <BUFFER_GetFull+0x38>
     36a:	80 e0       	ldi	r24, 0x00	; 0
     36c:	90 e0       	ldi	r25, 0x00	; 0
     36e:	dc 01       	movw	r26, r24
	}
	
	/* Buffer is in overflow mode */
	if (out > in) {
     370:	40 17       	cp	r20, r16
     372:	51 07       	cpc	r21, r17
     374:	62 07       	cpc	r22, r18
     376:	73 07       	cpc	r23, r19
     378:	78 f4       	brcc	.+30     	; 0x398 <BUFFER_GetFull+0x60>
		size = Buffer->Size - (out - in);
     37a:	80 81       	ld	r24, Z
     37c:	91 81       	ldd	r25, Z+1	; 0x01
     37e:	48 0f       	add	r20, r24
     380:	59 1f       	adc	r21, r25
     382:	61 1d       	adc	r22, r1
     384:	71 1d       	adc	r23, r1
     386:	db 01       	movw	r26, r22
     388:	ca 01       	movw	r24, r20
     38a:	80 1b       	sub	r24, r16
     38c:	91 0b       	sbc	r25, r17
     38e:	a2 0b       	sbc	r26, r18
     390:	b3 0b       	sbc	r27, r19
	}
	
	/* Return number of elements in buffer */
	return size;
     392:	02 c0       	rjmp	.+4      	; 0x398 <BUFFER_GetFull+0x60>
uint16_t BUFFER_GetFull(BUFFER_t* Buffer) {
	uint32_t in, out, size;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
		return 0;
     394:	80 e0       	ldi	r24, 0x00	; 0
     396:	90 e0       	ldi	r25, 0x00	; 0
		size = Buffer->Size - (out - in);
	}
	
	/* Return number of elements in buffer */
	return size;
}
     398:	1f 91       	pop	r17
     39a:	0f 91       	pop	r16
     39c:	08 95       	ret

0000039e <BUFFER_Reset>:

void BUFFER_Reset(BUFFER_t* Buffer) {
	/* Check buffer structure */
	if (Buffer == NULL) {
     39e:	00 97       	sbiw	r24, 0x00	; 0
     3a0:	29 f0       	breq	.+10     	; 0x3ac <BUFFER_Reset+0xe>
		return;
	}
	
	/* Reset values */
	Buffer->In = 0;
     3a2:	fc 01       	movw	r30, r24
     3a4:	13 82       	std	Z+3, r1	; 0x03
     3a6:	12 82       	std	Z+2, r1	; 0x02
	Buffer->Out = 0;
     3a8:	15 82       	std	Z+5, r1	; 0x05
     3aa:	14 82       	std	Z+4, r1	; 0x04
     3ac:	08 95       	ret

000003ae <BUFFER_FindElement>:
}

int16_t BUFFER_FindElement(BUFFER_t* Buffer, uint8_t Element) {
     3ae:	ef 92       	push	r14
     3b0:	ff 92       	push	r15
     3b2:	0f 93       	push	r16
     3b4:	1f 93       	push	r17
     3b6:	cf 93       	push	r28
	uint16_t Num, Out, retval = 0;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
     3b8:	00 97       	sbiw	r24, 0x00	; 0
     3ba:	49 f1       	breq	.+82     	; 0x40e <BUFFER_FindElement+0x60>
     3bc:	c6 2f       	mov	r28, r22
     3be:	7c 01       	movw	r14, r24
		return -1;
	}
	
	/* Create temporary variables */
	Num = BUFFER_GetFull(Buffer);
     3c0:	bb df       	rcall	.-138    	; 0x338 <BUFFER_GetFull>
     3c2:	bc 01       	movw	r22, r24
	Out = Buffer->Out;
     3c4:	f7 01       	movw	r30, r14
     3c6:	24 81       	ldd	r18, Z+4	; 0x04
     3c8:	35 81       	ldd	r19, Z+5	; 0x05
	
	/* Go through input elements */
	while (Num > 0) {
     3ca:	89 2b       	or	r24, r25
     3cc:	19 f1       	breq	.+70     	; 0x414 <BUFFER_FindElement+0x66>
		/* Check output overflow */
		if (Out >= Buffer->Size) {
     3ce:	00 81       	ld	r16, Z
     3d0:	11 81       	ldd	r17, Z+1	; 0x01
			Out = 0;
		}
		
		/* Check for element */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Element) {
     3d2:	a6 81       	ldd	r26, Z+6	; 0x06
     3d4:	b7 81       	ldd	r27, Z+7	; 0x07
     3d6:	40 e0       	ldi	r20, 0x00	; 0
     3d8:	50 e0       	ldi	r21, 0x00	; 0
	
	/* Go through input elements */
	while (Num > 0) {
		/* Check output overflow */
		if (Out >= Buffer->Size) {
			Out = 0;
     3da:	f1 2c       	mov	r15, r1
     3dc:	80 e0       	ldi	r24, 0x00	; 0
	Out = Buffer->Out;
	
	/* Go through input elements */
	while (Num > 0) {
		/* Check output overflow */
		if (Out >= Buffer->Size) {
     3de:	20 17       	cp	r18, r16
     3e0:	31 07       	cpc	r19, r17
     3e2:	10 f0       	brcs	.+4      	; 0x3e8 <BUFFER_FindElement+0x3a>
			Out = 0;
     3e4:	2f 2d       	mov	r18, r15
     3e6:	38 2f       	mov	r19, r24
		}
		
		/* Check for element */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Element) {
     3e8:	fd 01       	movw	r30, r26
     3ea:	e2 0f       	add	r30, r18
     3ec:	f3 1f       	adc	r31, r19
     3ee:	90 81       	ld	r25, Z
     3f0:	9c 13       	cpse	r25, r28
     3f2:	03 c0       	rjmp	.+6      	; 0x3fa <BUFFER_FindElement+0x4c>
			/* Element found, return position in buffer */
			return retval;
     3f4:	84 2f       	mov	r24, r20
     3f6:	95 2f       	mov	r25, r21
     3f8:	0f c0       	rjmp	.+30     	; 0x418 <BUFFER_FindElement+0x6a>
		}
		
		/* Set new variables */
		Out++;
     3fa:	2f 5f       	subi	r18, 0xFF	; 255
     3fc:	3f 4f       	sbci	r19, 0xFF	; 255
		Num--;
		retval++;
     3fe:	4f 5f       	subi	r20, 0xFF	; 255
     400:	5f 4f       	sbci	r21, 0xFF	; 255
	/* Create temporary variables */
	Num = BUFFER_GetFull(Buffer);
	Out = Buffer->Out;
	
	/* Go through input elements */
	while (Num > 0) {
     402:	64 17       	cp	r22, r20
     404:	75 07       	cpc	r23, r21
     406:	59 f7       	brne	.-42     	; 0x3de <BUFFER_FindElement+0x30>
		Num--;
		retval++;
	}
	
	/* Element is not in buffer */
	return -1;
     408:	8f ef       	ldi	r24, 0xFF	; 255
     40a:	9f ef       	ldi	r25, 0xFF	; 255
     40c:	05 c0       	rjmp	.+10     	; 0x418 <BUFFER_FindElement+0x6a>
int16_t BUFFER_FindElement(BUFFER_t* Buffer, uint8_t Element) {
	uint16_t Num, Out, retval = 0;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
		return -1;
     40e:	8f ef       	ldi	r24, 0xFF	; 255
     410:	9f ef       	ldi	r25, 0xFF	; 255
     412:	02 c0       	rjmp	.+4      	; 0x418 <BUFFER_FindElement+0x6a>
		Num--;
		retval++;
	}
	
	/* Element is not in buffer */
	return -1;
     414:	8f ef       	ldi	r24, 0xFF	; 255
     416:	9f ef       	ldi	r25, 0xFF	; 255
}
     418:	cf 91       	pop	r28
     41a:	1f 91       	pop	r17
     41c:	0f 91       	pop	r16
     41e:	ff 90       	pop	r15
     420:	ef 90       	pop	r14
     422:	08 95       	ret

00000424 <BUFFER_Find>:

int16_t BUFFER_Find(BUFFER_t* Buffer, uint8_t* Data, uint16_t Size) {
     424:	2f 92       	push	r2
     426:	3f 92       	push	r3
     428:	4f 92       	push	r4
     42a:	5f 92       	push	r5
     42c:	6f 92       	push	r6
     42e:	7f 92       	push	r7
     430:	8f 92       	push	r8
     432:	9f 92       	push	r9
     434:	af 92       	push	r10
     436:	bf 92       	push	r11
     438:	cf 92       	push	r12
     43a:	df 92       	push	r13
     43c:	ef 92       	push	r14
     43e:	ff 92       	push	r15
     440:	0f 93       	push	r16
     442:	1f 93       	push	r17
     444:	cf 93       	push	r28
     446:	df 93       	push	r29
	uint16_t Num, Out, i, retval = 0;
	uint8_t found = 0;

	/* Check buffer structure and number of elements in buffer */
	if (Buffer == NULL || (Num = BUFFER_GetFull(Buffer)) < Size) {
     448:	00 97       	sbiw	r24, 0x00	; 0
     44a:	09 f4       	brne	.+2      	; 0x44e <BUFFER_Find+0x2a>
     44c:	60 c0       	rjmp	.+192    	; 0x50e <BUFFER_Find+0xea>
     44e:	8a 01       	movw	r16, r20
     450:	b7 2e       	mov	r11, r23
     452:	a6 2e       	mov	r10, r22
     454:	ec 01       	movw	r28, r24
     456:	70 df       	rcall	.-288    	; 0x338 <BUFFER_GetFull>
     458:	fc 01       	movw	r30, r24
     45a:	80 17       	cp	r24, r16
     45c:	91 07       	cpc	r25, r17
     45e:	08 f4       	brcc	.+2      	; 0x462 <BUFFER_Find+0x3e>
     460:	59 c0       	rjmp	.+178    	; 0x514 <BUFFER_Find+0xf0>
		return -1;
	}

	/* Create temporary variables */
	Out = Buffer->Out;
     462:	2c 81       	ldd	r18, Y+4	; 0x04
     464:	3d 81       	ldd	r19, Y+5	; 0x05

	/* Go through input elements in buffer */
	while (Num > 0) {
     466:	89 2b       	or	r24, r25
     468:	09 f4       	brne	.+2      	; 0x46c <BUFFER_Find+0x48>
     46a:	57 c0       	rjmp	.+174    	; 0x51a <BUFFER_Find+0xf6>
		/* Check output overflow */
		if (Out >= Buffer->Size) {
     46c:	e8 80       	ld	r14, Y
     46e:	f9 80       	ldd	r15, Y+1	; 0x01
			Out = 0;
		}

		/* Check if current element in buffer matches first element in data array */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {
     470:	4e 81       	ldd	r20, Y+6	; 0x06
     472:	5f 81       	ldd	r21, Y+7	; 0x07
     474:	ca 2c       	mov	r12, r10
     476:	db 2c       	mov	r13, r11
     478:	d6 01       	movw	r26, r12
     47a:	9d 90       	ld	r9, X+
     47c:	6d 01       	movw	r12, r26
     47e:	81 2c       	mov	r8, r1
     480:	80 e0       	ldi	r24, 0x00	; 0
     482:	90 e0       	ldi	r25, 0x00	; 0

	/* Go through input elements in buffer */
	while (Num > 0) {
		/* Check output overflow */
		if (Out >= Buffer->Size) {
			Out = 0;
     484:	71 2c       	mov	r7, r1
     486:	51 2c       	mov	r5, r1
		}

		/* Check if current element in buffer matches first element in data array */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {
			found = 1;
     488:	33 24       	eor	r3, r3
     48a:	33 94       	inc	r3
		/* We have found first element */
		if (found) {
			/* First character found */
			/* Check others */
			i = 1;
			while (i < Size) {
     48c:	66 24       	eor	r6, r6
     48e:	63 94       	inc	r6
     490:	41 2c       	mov	r4, r1
				/* Check output overflow */
				if (Out >= Buffer->Size) {
					Out = 0;
     492:	a7 2c       	mov	r10, r7
     494:	b5 2c       	mov	r11, r5
	Out = Buffer->Out;

	/* Go through input elements in buffer */
	while (Num > 0) {
		/* Check output overflow */
		if (Out >= Buffer->Size) {
     496:	2e 15       	cp	r18, r14
     498:	3f 05       	cpc	r19, r15
     49a:	10 f0       	brcs	.+4      	; 0x4a0 <BUFFER_Find+0x7c>
			Out = 0;
     49c:	27 2d       	mov	r18, r7
     49e:	35 2d       	mov	r19, r5
		}

		/* Check if current element in buffer matches first element in data array */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {
     4a0:	da 01       	movw	r26, r20
     4a2:	a2 0f       	add	r26, r18
     4a4:	b3 1f       	adc	r27, r19
     4a6:	6c 91       	ld	r22, X
     4a8:	69 15       	cp	r22, r9
     4aa:	d1 f1       	breq	.+116    	; 0x520 <BUFFER_Find+0xfc>
			found = 1;
		}

		/* Set new variables */
		Out++;
     4ac:	2f 5f       	subi	r18, 0xFF	; 255
     4ae:	3f 4f       	sbci	r19, 0xFF	; 255
		Num--;
     4b0:	31 97       	sbiw	r30, 0x01	; 1
		retval++;
     4b2:	01 96       	adiw	r24, 0x01	; 1

		/* We have found first element */
		if (found) {
     4b4:	88 20       	and	r8, r8
     4b6:	31 f1       	breq	.+76     	; 0x504 <BUFFER_Find+0xe0>
			/* First character found */
			/* Check others */
			i = 1;
			while (i < Size) {
     4b8:	02 30       	cpi	r16, 0x02	; 2
     4ba:	11 05       	cpc	r17, r1
     4bc:	e0 f0       	brcs	.+56     	; 0x4f6 <BUFFER_Find+0xd2>
     4be:	d6 01       	movw	r26, r12
     4c0:	66 2d       	mov	r22, r6
     4c2:	74 2d       	mov	r23, r4
				/* Check output overflow */
				if (Out >= Buffer->Size) {
     4c4:	2e 15       	cp	r18, r14
     4c6:	3f 05       	cpc	r19, r15
     4c8:	10 f0       	brcs	.+4      	; 0x4ce <BUFFER_Find+0xaa>
					Out = 0;
     4ca:	2a 2d       	mov	r18, r10
     4cc:	3b 2d       	mov	r19, r11
				}

				/* Check if current character in buffer matches character in string */
				if ((uint8_t)Buffer->Buffer[Out] != (uint8_t)Data[i]) {
     4ce:	2d 90       	ld	r2, X+
     4d0:	ea 01       	movw	r28, r20
     4d2:	c2 0f       	add	r28, r18
     4d4:	d3 1f       	adc	r29, r19
     4d6:	c8 81       	ld	r28, Y
     4d8:	c2 15       	cp	r28, r2
     4da:	21 f0       	breq	.+8      	; 0x4e4 <BUFFER_Find+0xc0>
     4dc:	01 97       	sbiw	r24, 0x01	; 1
					retval += i - 1;
     4de:	86 0f       	add	r24, r22
     4e0:	97 1f       	adc	r25, r23
					break;
     4e2:	0b c0       	rjmp	.+22     	; 0x4fa <BUFFER_Find+0xd6>
				}

				/* Set new variables */
				Out++;
     4e4:	2f 5f       	subi	r18, 0xFF	; 255
     4e6:	3f 4f       	sbci	r19, 0xFF	; 255
				Num--;
     4e8:	31 97       	sbiw	r30, 0x01	; 1
				i++;
     4ea:	6f 5f       	subi	r22, 0xFF	; 255
     4ec:	7f 4f       	sbci	r23, 0xFF	; 255
		/* We have found first element */
		if (found) {
			/* First character found */
			/* Check others */
			i = 1;
			while (i < Size) {
     4ee:	60 17       	cp	r22, r16
     4f0:	71 07       	cpc	r23, r17
     4f2:	41 f7       	brne	.-48     	; 0x4c4 <BUFFER_Find+0xa0>
     4f4:	05 c0       	rjmp	.+10     	; 0x500 <BUFFER_Find+0xdc>
     4f6:	66 2d       	mov	r22, r6
     4f8:	74 2d       	mov	r23, r4
				Num--;
				i++;
			}

			/* We have found data sequence in buffer */
			if (i == Size) {
     4fa:	60 17       	cp	r22, r16
     4fc:	71 07       	cpc	r23, r17
     4fe:	11 f4       	brne	.+4      	; 0x504 <BUFFER_Find+0xe0>
				return retval - 1;
     500:	01 97       	sbiw	r24, 0x01	; 1
     502:	14 c0       	rjmp	.+40     	; 0x52c <BUFFER_Find+0x108>

	/* Create temporary variables */
	Out = Buffer->Out;

	/* Go through input elements in buffer */
	while (Num > 0) {
     504:	30 97       	sbiw	r30, 0x00	; 0
     506:	39 f6       	brne	.-114    	; 0x496 <BUFFER_Find+0x72>
			}
		}
	}

	/* Data sequence is not in buffer */
	return -1;
     508:	8f ef       	ldi	r24, 0xFF	; 255
     50a:	9f ef       	ldi	r25, 0xFF	; 255
     50c:	0f c0       	rjmp	.+30     	; 0x52c <BUFFER_Find+0x108>
	uint16_t Num, Out, i, retval = 0;
	uint8_t found = 0;

	/* Check buffer structure and number of elements in buffer */
	if (Buffer == NULL || (Num = BUFFER_GetFull(Buffer)) < Size) {
		return -1;
     50e:	8f ef       	ldi	r24, 0xFF	; 255
     510:	9f ef       	ldi	r25, 0xFF	; 255
     512:	0c c0       	rjmp	.+24     	; 0x52c <BUFFER_Find+0x108>
     514:	8f ef       	ldi	r24, 0xFF	; 255
     516:	9f ef       	ldi	r25, 0xFF	; 255
     518:	09 c0       	rjmp	.+18     	; 0x52c <BUFFER_Find+0x108>
			}
		}
	}

	/* Data sequence is not in buffer */
	return -1;
     51a:	8f ef       	ldi	r24, 0xFF	; 255
     51c:	9f ef       	ldi	r25, 0xFF	; 255
     51e:	06 c0       	rjmp	.+12     	; 0x52c <BUFFER_Find+0x108>
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {
			found = 1;
		}

		/* Set new variables */
		Out++;
     520:	2f 5f       	subi	r18, 0xFF	; 255
     522:	3f 4f       	sbci	r19, 0xFF	; 255
		Num--;
     524:	31 97       	sbiw	r30, 0x01	; 1
		retval++;
     526:	01 96       	adiw	r24, 0x01	; 1
			Out = 0;
		}

		/* Check if current element in buffer matches first element in data array */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {
			found = 1;
     528:	83 2c       	mov	r8, r3
     52a:	c6 cf       	rjmp	.-116    	; 0x4b8 <BUFFER_Find+0x94>
		}
	}

	/* Data sequence is not in buffer */
	return -1;
}
     52c:	df 91       	pop	r29
     52e:	cf 91       	pop	r28
     530:	1f 91       	pop	r17
     532:	0f 91       	pop	r16
     534:	ff 90       	pop	r15
     536:	ef 90       	pop	r14
     538:	df 90       	pop	r13
     53a:	cf 90       	pop	r12
     53c:	bf 90       	pop	r11
     53e:	af 90       	pop	r10
     540:	9f 90       	pop	r9
     542:	8f 90       	pop	r8
     544:	7f 90       	pop	r7
     546:	6f 90       	pop	r6
     548:	5f 90       	pop	r5
     54a:	4f 90       	pop	r4
     54c:	3f 90       	pop	r3
     54e:	2f 90       	pop	r2
     550:	08 95       	ret

00000552 <BUFFER_WriteString>:

uint16_t BUFFER_WriteString(BUFFER_t* Buffer, char* buff) {
	/* Write string to buffer */
	return BUFFER_Write(Buffer, (uint8_t *)buff, strlen(buff));
     552:	fb 01       	movw	r30, r22
     554:	01 90       	ld	r0, Z+
     556:	00 20       	and	r0, r0
     558:	e9 f7       	brne	.-6      	; 0x554 <BUFFER_WriteString+0x2>
     55a:	31 97       	sbiw	r30, 0x01	; 1
     55c:	af 01       	movw	r20, r30
     55e:	46 1b       	sub	r20, r22
     560:	57 0b       	sbc	r21, r23
     562:	27 ce       	rjmp	.-946    	; 0x1b2 <BUFFER_Write>
}
     564:	08 95       	ret

00000566 <BUFFER_ReadString>:

uint16_t BUFFER_ReadString(BUFFER_t* Buffer, char* buff, uint16_t buffsize) {
     566:	8f 92       	push	r8
     568:	9f 92       	push	r9
     56a:	af 92       	push	r10
     56c:	bf 92       	push	r11
     56e:	cf 92       	push	r12
     570:	df 92       	push	r13
     572:	ef 92       	push	r14
     574:	ff 92       	push	r15
     576:	0f 93       	push	r16
     578:	1f 93       	push	r17
     57a:	cf 93       	push	r28
     57c:	df 93       	push	r29
     57e:	1f 92       	push	r1
     580:	cd b7       	in	r28, 0x3d	; 61
     582:	de b7       	in	r29, 0x3e	; 62
	uint16_t i = 0;
	uint8_t ch;
	uint16_t freeMem;
	
	/* Check value buffer */
	if (Buffer == NULL) {
     584:	00 97       	sbiw	r24, 0x00	; 0
     586:	09 f4       	brne	.+2      	; 0x58a <BUFFER_ReadString+0x24>
     588:	43 c0       	rjmp	.+134    	; 0x610 <BUFFER_ReadString+0xaa>
     58a:	4a 01       	movw	r8, r20
     58c:	5b 01       	movw	r10, r22
     58e:	7c 01       	movw	r14, r24
		return 0;
	}
	
	/* Get free */
	freeMem = BUFFER_GetFree(Buffer);
     590:	96 de       	rcall	.-724    	; 0x2be <BUFFER_GetFree>
	
	/* Check for any data on USART */
	if (
     592:	89 2b       	or	r24, r25
     594:	09 f4       	brne	.+2      	; 0x598 <BUFFER_ReadString+0x32>
     596:	3f c0       	rjmp	.+126    	; 0x616 <BUFFER_ReadString+0xb0>
		freeMem == 0 ||                                                /*!< Buffer empty */
		(
			BUFFER_FindElement(Buffer, Buffer->StringDelimiter) < 0 && /*!< String delimiter is not in buffer */
     598:	f7 01       	movw	r30, r14
     59a:	61 85       	ldd	r22, Z+9	; 0x09
     59c:	c7 01       	movw	r24, r14
     59e:	07 df       	rcall	.-498    	; 0x3ae <BUFFER_FindElement>
	/* Get free */
	freeMem = BUFFER_GetFree(Buffer);
	
	/* Check for any data on USART */
	if (
		freeMem == 0 ||                                                /*!< Buffer empty */
     5a0:	99 23       	and	r25, r25
     5a2:	2c f4       	brge	.+10     	; 0x5ae <BUFFER_ReadString+0x48>
		(
			BUFFER_FindElement(Buffer, Buffer->StringDelimiter) < 0 && /*!< String delimiter is not in buffer */
			freeMem != 0 &&                                            /*!< Buffer is not full */
			BUFFER_GetFull(Buffer) < buffsize                          /*!< User buffer size is larger than number of elements in buffer */
     5a4:	c7 01       	movw	r24, r14
     5a6:	c8 de       	rcall	.-624    	; 0x338 <BUFFER_GetFull>
	/* Check for any data on USART */
	if (
		freeMem == 0 ||                                                /*!< Buffer empty */
		(
			BUFFER_FindElement(Buffer, Buffer->StringDelimiter) < 0 && /*!< String delimiter is not in buffer */
			freeMem != 0 &&                                            /*!< Buffer is not full */
     5a8:	88 15       	cp	r24, r8
     5aa:	99 05       	cpc	r25, r9
     5ac:	b8 f1       	brcs	.+110    	; 0x61c <BUFFER_ReadString+0xb6>
		/* Return 0 */
		return 0;
	}
	
	/* If available buffer size is more than 0 characters */
	while (i < (buffsize - 1)) {
     5ae:	f1 e0       	ldi	r31, 0x01	; 1
     5b0:	8f 1a       	sub	r8, r31
     5b2:	91 08       	sbc	r9, r1
     5b4:	d9 f0       	breq	.+54     	; 0x5ec <BUFFER_ReadString+0x86>
     5b6:	65 01       	movw	r12, r10
     5b8:	00 e0       	ldi	r16, 0x00	; 0
     5ba:	10 e0       	ldi	r17, 0x00	; 0
		/* We have available data */
		BUFFER_Read(Buffer, &ch, 1);
     5bc:	41 e0       	ldi	r20, 0x01	; 1
     5be:	50 e0       	ldi	r21, 0x00	; 0
     5c0:	be 01       	movw	r22, r28
     5c2:	6f 5f       	subi	r22, 0xFF	; 255
     5c4:	7f 4f       	sbci	r23, 0xFF	; 255
     5c6:	c7 01       	movw	r24, r14
     5c8:	3c de       	rcall	.-904    	; 0x242 <BUFFER_Read>
		
		/* Save character */
		buff[i] = (char)ch;
     5ca:	89 81       	ldd	r24, Y+1	; 0x01
     5cc:	f6 01       	movw	r30, r12
     5ce:	81 93       	st	Z+, r24
     5d0:	6f 01       	movw	r12, r30
		
		/* Check for end of string */
		if ((char)buff[i] == (char)Buffer->StringDelimiter) {
     5d2:	f7 01       	movw	r30, r14
     5d4:	91 85       	ldd	r25, Z+9	; 0x09
     5d6:	89 17       	cp	r24, r25
     5d8:	29 f0       	breq	.+10     	; 0x5e4 <BUFFER_ReadString+0x7e>
			/* Done */
			break;
		}
		
		/* Increase */
		i++;
     5da:	0f 5f       	subi	r16, 0xFF	; 255
     5dc:	1f 4f       	sbci	r17, 0xFF	; 255
		/* Return 0 */
		return 0;
	}
	
	/* If available buffer size is more than 0 characters */
	while (i < (buffsize - 1)) {
     5de:	08 15       	cp	r16, r8
     5e0:	19 05       	cpc	r17, r9
     5e2:	60 f3       	brcs	.-40     	; 0x5bc <BUFFER_ReadString+0x56>
		/* Increase */
		i++;
	}
	
	/* Add zero to the end of string */
	if (i == (buffsize - 1)) {
     5e4:	80 16       	cp	r8, r16
     5e6:	91 06       	cpc	r9, r17
     5e8:	51 f4       	brne	.+20     	; 0x5fe <BUFFER_ReadString+0x98>
     5ea:	02 c0       	rjmp	.+4      	; 0x5f0 <BUFFER_ReadString+0x8a>
		/* Return 0 */
		return 0;
	}
	
	/* If available buffer size is more than 0 characters */
	while (i < (buffsize - 1)) {
     5ec:	00 e0       	ldi	r16, 0x00	; 0
     5ee:	10 e0       	ldi	r17, 0x00	; 0
		i++;
	}
	
	/* Add zero to the end of string */
	if (i == (buffsize - 1)) {
		buff[i] = 0;
     5f0:	f5 01       	movw	r30, r10
     5f2:	e0 0f       	add	r30, r16
     5f4:	f1 1f       	adc	r31, r17
     5f6:	10 82       	st	Z, r1
     5f8:	80 2f       	mov	r24, r16
     5fa:	91 2f       	mov	r25, r17
     5fc:	11 c0       	rjmp	.+34     	; 0x620 <BUFFER_ReadString+0xba>
	} else {
		buff[++i] = 0;
     5fe:	0f 5f       	subi	r16, 0xFF	; 255
     600:	1f 4f       	sbci	r17, 0xFF	; 255
     602:	f5 01       	movw	r30, r10
     604:	e0 0f       	add	r30, r16
     606:	f1 1f       	adc	r31, r17
     608:	10 82       	st	Z, r1
     60a:	80 2f       	mov	r24, r16
     60c:	91 2f       	mov	r25, r17
     60e:	08 c0       	rjmp	.+16     	; 0x620 <BUFFER_ReadString+0xba>
	uint8_t ch;
	uint16_t freeMem;
	
	/* Check value buffer */
	if (Buffer == NULL) {
		return 0;
     610:	80 e0       	ldi	r24, 0x00	; 0
     612:	90 e0       	ldi	r25, 0x00	; 0
     614:	05 c0       	rjmp	.+10     	; 0x620 <BUFFER_ReadString+0xba>
			freeMem != 0 &&                                            /*!< Buffer is not full */
			BUFFER_GetFull(Buffer) < buffsize                          /*!< User buffer size is larger than number of elements in buffer */
		)
	) {
		/* Return 0 */
		return 0;
     616:	80 e0       	ldi	r24, 0x00	; 0
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	02 c0       	rjmp	.+4      	; 0x620 <BUFFER_ReadString+0xba>
     61c:	80 e0       	ldi	r24, 0x00	; 0
     61e:	90 e0       	ldi	r25, 0x00	; 0
		buff[++i] = 0;
	}

	/* Return number of characters in buffer */
	return i;
}
     620:	0f 90       	pop	r0
     622:	df 91       	pop	r29
     624:	cf 91       	pop	r28
     626:	1f 91       	pop	r17
     628:	0f 91       	pop	r16
     62a:	ff 90       	pop	r15
     62c:	ef 90       	pop	r14
     62e:	df 90       	pop	r13
     630:	cf 90       	pop	r12
     632:	bf 90       	pop	r11
     634:	af 90       	pop	r10
     636:	9f 90       	pop	r9
     638:	8f 90       	pop	r8
     63a:	08 95       	ret

0000063c <ParseNumber>:
	/* Send command */
	SendCommand(ESP8266, ESP8266_COMMAND_AUTOCONN, NULL, NULL);
	
	/* Wait till end */
	return ESP8266_WaitReady(ESP8266);
}
     63c:	cf 92       	push	r12
     63e:	df 92       	push	r13
     640:	ef 92       	push	r14
     642:	ff 92       	push	r15
     644:	0f 93       	push	r16
     646:	1f 93       	push	r17
     648:	fc 01       	movw	r30, r24
     64a:	db 01       	movw	r26, r22
     64c:	80 81       	ld	r24, Z
     64e:	8d 32       	cpi	r24, 0x2D	; 45
     650:	19 f4       	brne	.+6      	; 0x658 <ParseNumber+0x1c>
     652:	31 96       	adiw	r30, 0x01	; 1
     654:	91 e0       	ldi	r25, 0x01	; 1
     656:	01 c0       	rjmp	.+2      	; 0x65a <ParseNumber+0x1e>
     658:	90 e0       	ldi	r25, 0x00	; 0
     65a:	00 81       	ld	r16, Z
     65c:	80 ed       	ldi	r24, 0xD0	; 208
     65e:	80 0f       	add	r24, r16
     660:	8a 30       	cpi	r24, 0x0A	; 10
     662:	48 f5       	brcc	.+82     	; 0x6b6 <ParseNumber+0x7a>
     664:	31 96       	adiw	r30, 0x01	; 1
     666:	89 2f       	mov	r24, r25
     668:	40 e0       	ldi	r20, 0x00	; 0
     66a:	50 e0       	ldi	r21, 0x00	; 0
     66c:	ba 01       	movw	r22, r20
     66e:	44 0f       	add	r20, r20
     670:	55 1f       	adc	r21, r21
     672:	66 1f       	adc	r22, r22
     674:	77 1f       	adc	r23, r23
     676:	6a 01       	movw	r12, r20
     678:	7b 01       	movw	r14, r22
     67a:	cc 0c       	add	r12, r12
     67c:	dd 1c       	adc	r13, r13
     67e:	ee 1c       	adc	r14, r14
     680:	ff 1c       	adc	r15, r15
     682:	cc 0c       	add	r12, r12
     684:	dd 1c       	adc	r13, r13
     686:	ee 1c       	adc	r14, r14
     688:	ff 1c       	adc	r15, r15
     68a:	4c 0d       	add	r20, r12
     68c:	5d 1d       	adc	r21, r13
     68e:	6e 1d       	adc	r22, r14
     690:	7f 1d       	adc	r23, r15
     692:	10 e0       	ldi	r17, 0x00	; 0
     694:	00 53       	subi	r16, 0x30	; 48
     696:	11 09       	sbc	r17, r1
     698:	01 2e       	mov	r0, r17
     69a:	00 0c       	add	r0, r0
     69c:	22 0b       	sbc	r18, r18
     69e:	33 0b       	sbc	r19, r19
     6a0:	40 0f       	add	r20, r16
     6a2:	51 1f       	adc	r21, r17
     6a4:	62 1f       	adc	r22, r18
     6a6:	73 1f       	adc	r23, r19
     6a8:	8f 5f       	subi	r24, 0xFF	; 255
     6aa:	01 91       	ld	r16, Z+
     6ac:	20 ed       	ldi	r18, 0xD0	; 208
     6ae:	20 0f       	add	r18, r16
     6b0:	2a 30       	cpi	r18, 0x0A	; 10
     6b2:	e8 f2       	brcs	.-70     	; 0x66e <ParseNumber+0x32>
     6b4:	04 c0       	rjmp	.+8      	; 0x6be <ParseNumber+0x82>
     6b6:	89 2f       	mov	r24, r25
     6b8:	40 e0       	ldi	r20, 0x00	; 0
     6ba:	50 e0       	ldi	r21, 0x00	; 0
     6bc:	ba 01       	movw	r22, r20
     6be:	10 97       	sbiw	r26, 0x00	; 0
     6c0:	09 f0       	breq	.+2      	; 0x6c4 <ParseNumber+0x88>
     6c2:	8c 93       	st	X, r24
     6c4:	99 23       	and	r25, r25
     6c6:	51 f0       	breq	.+20     	; 0x6dc <ParseNumber+0xa0>
     6c8:	8a 01       	movw	r16, r20
     6ca:	9b 01       	movw	r18, r22
     6cc:	66 27       	eor	r22, r22
     6ce:	77 27       	eor	r23, r23
     6d0:	cb 01       	movw	r24, r22
     6d2:	60 1b       	sub	r22, r16
     6d4:	71 0b       	sbc	r23, r17
     6d6:	82 0b       	sbc	r24, r18
     6d8:	93 0b       	sbc	r25, r19
     6da:	02 c0       	rjmp	.+4      	; 0x6e0 <ParseNumber+0xa4>
     6dc:	cb 01       	movw	r24, r22
     6de:	ba 01       	movw	r22, r20
     6e0:	1f 91       	pop	r17
     6e2:	0f 91       	pop	r16
     6e4:	ff 90       	pop	r15
     6e6:	ef 90       	pop	r14
     6e8:	df 90       	pop	r13
     6ea:	cf 90       	pop	r12
     6ec:	08 95       	ret

000006ee <EscapeStringAndSend>:
     6ee:	ef 92       	push	r14
     6f0:	ff 92       	push	r15
     6f2:	0f 93       	push	r16
     6f4:	1f 93       	push	r17
     6f6:	cf 93       	push	r28
     6f8:	df 93       	push	r29
     6fa:	1f 92       	push	r1
     6fc:	cd b7       	in	r28, 0x3d	; 61
     6fe:	de b7       	in	r29, 0x3e	; 62
     700:	8c 01       	movw	r16, r24
     702:	8c e5       	ldi	r24, 0x5C	; 92
     704:	89 83       	std	Y+1, r24	; 0x01
     706:	f8 01       	movw	r30, r16
     708:	90 81       	ld	r25, Z
     70a:	99 23       	and	r25, r25
     70c:	d9 f0       	breq	.+54     	; 0x744 <EscapeStringAndSend+0x56>
     70e:	01 c0       	rjmp	.+2      	; 0x712 <EscapeStringAndSend+0x24>
     710:	87 01       	movw	r16, r14
     712:	9c 32       	cpi	r25, 0x2C	; 44
     714:	21 f0       	breq	.+8      	; 0x71e <EscapeStringAndSend+0x30>
     716:	92 32       	cpi	r25, 0x22	; 34
     718:	11 f0       	breq	.+4      	; 0x71e <EscapeStringAndSend+0x30>
     71a:	9c 35       	cpi	r25, 0x5C	; 92
     71c:	31 f4       	brne	.+12     	; 0x72a <EscapeStringAndSend+0x3c>
     71e:	61 e0       	ldi	r22, 0x01	; 1
     720:	70 e0       	ldi	r23, 0x00	; 0
     722:	ce 01       	movw	r24, r28
     724:	01 96       	adiw	r24, 0x01	; 1
     726:	0e 94 f9 12 	call	0x25f2	; 0x25f2 <ESP8266_LL_USARTSend>
     72a:	78 01       	movw	r14, r16
     72c:	ff ef       	ldi	r31, 0xFF	; 255
     72e:	ef 1a       	sub	r14, r31
     730:	ff 0a       	sbc	r15, r31
     732:	61 e0       	ldi	r22, 0x01	; 1
     734:	70 e0       	ldi	r23, 0x00	; 0
     736:	c8 01       	movw	r24, r16
     738:	0e 94 f9 12 	call	0x25f2	; 0x25f2 <ESP8266_LL_USARTSend>
     73c:	f8 01       	movw	r30, r16
     73e:	91 81       	ldd	r25, Z+1	; 0x01
     740:	91 11       	cpse	r25, r1
     742:	e6 cf       	rjmp	.-52     	; 0x710 <EscapeStringAndSend+0x22>
     744:	0f 90       	pop	r0
     746:	df 91       	pop	r29
     748:	cf 91       	pop	r28
     74a:	1f 91       	pop	r17
     74c:	0f 91       	pop	r16
     74e:	ff 90       	pop	r15
     750:	ef 90       	pop	r14
     752:	08 95       	ret

00000754 <ParseIP>:
     754:	af 92       	push	r10
     756:	bf 92       	push	r11
     758:	cf 92       	push	r12
     75a:	df 92       	push	r13
     75c:	ef 92       	push	r14
     75e:	ff 92       	push	r15
     760:	1f 93       	push	r17
     762:	cf 93       	push	r28
     764:	df 93       	push	r29
     766:	cd b7       	in	r28, 0x3d	; 61
     768:	de b7       	in	r29, 0x3e	; 62
     76a:	61 97       	sbiw	r28, 0x11	; 17
     76c:	0f b6       	in	r0, 0x3f	; 63
     76e:	f8 94       	cli
     770:	de bf       	out	0x3e, r29	; 62
     772:	0f be       	out	0x3f, r0	; 63
     774:	cd bf       	out	0x3d, r28	; 61
     776:	fc 01       	movw	r30, r24
     778:	6b 01       	movw	r12, r22
     77a:	5a 01       	movw	r10, r20
     77c:	9f e0       	ldi	r25, 0x0F	; 15
     77e:	de 01       	movw	r26, r28
     780:	12 96       	adiw	r26, 0x02	; 2
     782:	01 90       	ld	r0, Z+
     784:	0d 92       	st	X+, r0
     786:	9a 95       	dec	r25
     788:	e1 f7       	brne	.-8      	; 0x782 <ParseIP+0x2e>
     78a:	19 8a       	std	Y+17, r1	; 0x11
     78c:	64 e1       	ldi	r22, 0x14	; 20
     78e:	72 e0       	ldi	r23, 0x02	; 2
     790:	ce 01       	movw	r24, r28
     792:	02 96       	adiw	r24, 0x02	; 2
     794:	0e 94 bd 16 	call	0x2d7a	; 0x2d7a <strtok>
     798:	00 97       	sbiw	r24, 0x00	; 0
     79a:	e9 f4       	brne	.+58     	; 0x7d6 <ParseIP+0x82>
     79c:	10 e0       	ldi	r17, 0x00	; 0
     79e:	15 c0       	rjmp	.+42     	; 0x7ca <ParseIP+0x76>
     7a0:	be 01       	movw	r22, r28
     7a2:	6f 5f       	subi	r22, 0xFF	; 255
     7a4:	7f 4f       	sbci	r23, 0xFF	; 255
     7a6:	4a df       	rcall	.-364    	; 0x63c <ParseNumber>
     7a8:	f7 01       	movw	r30, r14
     7aa:	61 93       	st	Z+, r22
     7ac:	7f 01       	movw	r14, r30
     7ae:	89 81       	ldd	r24, Y+1	; 0x01
     7b0:	18 0f       	add	r17, r24
     7b2:	ec 15       	cp	r30, r12
     7b4:	fd 05       	cpc	r31, r13
     7b6:	49 f0       	breq	.+18     	; 0x7ca <ParseIP+0x76>
     7b8:	1f 5f       	subi	r17, 0xFF	; 255
     7ba:	64 e1       	ldi	r22, 0x14	; 20
     7bc:	72 e0       	ldi	r23, 0x02	; 2
     7be:	80 e0       	ldi	r24, 0x00	; 0
     7c0:	90 e0       	ldi	r25, 0x00	; 0
     7c2:	0e 94 bd 16 	call	0x2d7a	; 0x2d7a <strtok>
     7c6:	00 97       	sbiw	r24, 0x00	; 0
     7c8:	59 f7       	brne	.-42     	; 0x7a0 <ParseIP+0x4c>
     7ca:	a1 14       	cp	r10, r1
     7cc:	b1 04       	cpc	r11, r1
     7ce:	79 f0       	breq	.+30     	; 0x7ee <ParseIP+0x9a>
     7d0:	f5 01       	movw	r30, r10
     7d2:	10 83       	st	Z, r17
     7d4:	0c c0       	rjmp	.+24     	; 0x7ee <ParseIP+0x9a>
     7d6:	be 01       	movw	r22, r28
     7d8:	6f 5f       	subi	r22, 0xFF	; 255
     7da:	7f 4f       	sbci	r23, 0xFF	; 255
     7dc:	2f df       	rcall	.-418    	; 0x63c <ParseNumber>
     7de:	f6 01       	movw	r30, r12
     7e0:	61 93       	st	Z+, r22
     7e2:	7f 01       	movw	r14, r30
     7e4:	19 81       	ldd	r17, Y+1	; 0x01
     7e6:	f4 e0       	ldi	r31, 0x04	; 4
     7e8:	cf 0e       	add	r12, r31
     7ea:	d1 1c       	adc	r13, r1
     7ec:	e5 cf       	rjmp	.-54     	; 0x7b8 <ParseIP+0x64>
     7ee:	61 96       	adiw	r28, 0x11	; 17
     7f0:	0f b6       	in	r0, 0x3f	; 63
     7f2:	f8 94       	cli
     7f4:	de bf       	out	0x3e, r29	; 62
     7f6:	0f be       	out	0x3f, r0	; 63
     7f8:	cd bf       	out	0x3d, r28	; 61
     7fa:	df 91       	pop	r29
     7fc:	cf 91       	pop	r28
     7fe:	1f 91       	pop	r17
     800:	ff 90       	pop	r15
     802:	ef 90       	pop	r14
     804:	df 90       	pop	r13
     806:	cf 90       	pop	r12
     808:	bf 90       	pop	r11
     80a:	af 90       	pop	r10
     80c:	08 95       	ret

0000080e <ParseCIPSTA>:
     80e:	0f 93       	push	r16
     810:	1f 93       	push	r17
     812:	cf 93       	push	r28
     814:	df 93       	push	r29
     816:	ec 01       	movw	r28, r24
     818:	8b 01       	movw	r16, r22
     81a:	4e e0       	ldi	r20, 0x0E	; 14
     81c:	50 e0       	ldi	r21, 0x00	; 0
     81e:	86 e1       	ldi	r24, 0x16	; 22
     820:	92 e0       	ldi	r25, 0x02	; 2
     822:	0e 94 e6 16 	call	0x2dcc	; 0x2dcc <strncmp>
     826:	89 2b       	or	r24, r25
     828:	09 f4       	brne	.+2      	; 0x82c <ParseCIPSTA+0x1e>
     82a:	6f c0       	rjmp	.+222    	; 0x90a <ParseCIPSTA+0xfc>
     82c:	43 e1       	ldi	r20, 0x13	; 19
     82e:	50 e0       	ldi	r21, 0x00	; 0
     830:	b8 01       	movw	r22, r16
     832:	85 e2       	ldi	r24, 0x25	; 37
     834:	92 e0       	ldi	r25, 0x02	; 2
     836:	0e 94 e6 16 	call	0x2dcc	; 0x2dcc <strncmp>
     83a:	89 2b       	or	r24, r25
     83c:	09 f4       	brne	.+2      	; 0x840 <ParseCIPSTA+0x32>
     83e:	79 c0       	rjmp	.+242    	; 0x932 <ParseCIPSTA+0x124>
     840:	43 e1       	ldi	r20, 0x13	; 19
     842:	50 e0       	ldi	r21, 0x00	; 0
     844:	b8 01       	movw	r22, r16
     846:	89 e3       	ldi	r24, 0x39	; 57
     848:	92 e0       	ldi	r25, 0x02	; 2
     84a:	0e 94 e6 16 	call	0x2dcc	; 0x2dcc <strncmp>
     84e:	89 2b       	or	r24, r25
     850:	09 f4       	brne	.+2      	; 0x854 <ParseCIPSTA+0x46>
     852:	82 c0       	rjmp	.+260    	; 0x958 <ParseCIPSTA+0x14a>
     854:	4a e0       	ldi	r20, 0x0A	; 10
     856:	50 e0       	ldi	r21, 0x00	; 0
     858:	b8 01       	movw	r22, r16
     85a:	8d e4       	ldi	r24, 0x4D	; 77
     85c:	92 e0       	ldi	r25, 0x02	; 2
     85e:	0e 94 e6 16 	call	0x2dcc	; 0x2dcc <strncmp>
     862:	89 2b       	or	r24, r25
     864:	09 f4       	brne	.+2      	; 0x868 <ParseCIPSTA+0x5a>
     866:	53 c0       	rjmp	.+166    	; 0x90e <ParseCIPSTA+0x100>
     868:	4f e0       	ldi	r20, 0x0F	; 15
     86a:	50 e0       	ldi	r21, 0x00	; 0
     86c:	b8 01       	movw	r22, r16
     86e:	88 e5       	ldi	r24, 0x58	; 88
     870:	92 e0       	ldi	r25, 0x02	; 2
     872:	0e 94 e6 16 	call	0x2dcc	; 0x2dcc <strncmp>
     876:	89 2b       	or	r24, r25
     878:	09 f4       	brne	.+2      	; 0x87c <ParseCIPSTA+0x6e>
     87a:	5d c0       	rjmp	.+186    	; 0x936 <ParseCIPSTA+0x128>
     87c:	4f e0       	ldi	r20, 0x0F	; 15
     87e:	50 e0       	ldi	r21, 0x00	; 0
     880:	b8 01       	movw	r22, r16
     882:	88 e6       	ldi	r24, 0x68	; 104
     884:	92 e0       	ldi	r25, 0x02	; 2
     886:	0e 94 e6 16 	call	0x2dcc	; 0x2dcc <strncmp>
     88a:	89 2b       	or	r24, r25
     88c:	09 f4       	brne	.+2      	; 0x890 <ParseCIPSTA+0x82>
     88e:	66 c0       	rjmp	.+204    	; 0x95c <ParseCIPSTA+0x14e>
     890:	4d e0       	ldi	r20, 0x0D	; 13
     892:	50 e0       	ldi	r21, 0x00	; 0
     894:	b8 01       	movw	r22, r16
     896:	88 e7       	ldi	r24, 0x78	; 120
     898:	92 e0       	ldi	r25, 0x02	; 2
     89a:	0e 94 e6 16 	call	0x2dcc	; 0x2dcc <strncmp>
     89e:	89 2b       	or	r24, r25
     8a0:	09 f4       	brne	.+2      	; 0x8a4 <ParseCIPSTA+0x96>
     8a2:	6d c0       	rjmp	.+218    	; 0x97e <ParseCIPSTA+0x170>
     8a4:	42 e1       	ldi	r20, 0x12	; 18
     8a6:	50 e0       	ldi	r21, 0x00	; 0
     8a8:	b8 01       	movw	r22, r16
     8aa:	86 e8       	ldi	r24, 0x86	; 134
     8ac:	92 e0       	ldi	r25, 0x02	; 2
     8ae:	0e 94 e6 16 	call	0x2dcc	; 0x2dcc <strncmp>
     8b2:	89 2b       	or	r24, r25
     8b4:	09 f4       	brne	.+2      	; 0x8b8 <ParseCIPSTA+0xaa>
     8b6:	76 c0       	rjmp	.+236    	; 0x9a4 <ParseCIPSTA+0x196>
     8b8:	42 e1       	ldi	r20, 0x12	; 18
     8ba:	50 e0       	ldi	r21, 0x00	; 0
     8bc:	b8 01       	movw	r22, r16
     8be:	89 e9       	ldi	r24, 0x99	; 153
     8c0:	92 e0       	ldi	r25, 0x02	; 2
     8c2:	0e 94 e6 16 	call	0x2dcc	; 0x2dcc <strncmp>
     8c6:	89 2b       	or	r24, r25
     8c8:	09 f4       	brne	.+2      	; 0x8cc <ParseCIPSTA+0xbe>
     8ca:	7f c0       	rjmp	.+254    	; 0x9ca <ParseCIPSTA+0x1bc>
     8cc:	49 e0       	ldi	r20, 0x09	; 9
     8ce:	50 e0       	ldi	r21, 0x00	; 0
     8d0:	b8 01       	movw	r22, r16
     8d2:	8c ea       	ldi	r24, 0xAC	; 172
     8d4:	92 e0       	ldi	r25, 0x02	; 2
     8d6:	0e 94 e6 16 	call	0x2dcc	; 0x2dcc <strncmp>
     8da:	89 2b       	or	r24, r25
     8dc:	09 f4       	brne	.+2      	; 0x8e0 <ParseCIPSTA+0xd2>
     8de:	51 c0       	rjmp	.+162    	; 0x982 <ParseCIPSTA+0x174>
     8e0:	4e e0       	ldi	r20, 0x0E	; 14
     8e2:	50 e0       	ldi	r21, 0x00	; 0
     8e4:	b8 01       	movw	r22, r16
     8e6:	86 eb       	ldi	r24, 0xB6	; 182
     8e8:	92 e0       	ldi	r25, 0x02	; 2
     8ea:	0e 94 e6 16 	call	0x2dcc	; 0x2dcc <strncmp>
     8ee:	89 2b       	or	r24, r25
     8f0:	09 f4       	brne	.+2      	; 0x8f4 <ParseCIPSTA+0xe6>
     8f2:	5a c0       	rjmp	.+180    	; 0x9a8 <ParseCIPSTA+0x19a>
     8f4:	4e e0       	ldi	r20, 0x0E	; 14
     8f6:	50 e0       	ldi	r21, 0x00	; 0
     8f8:	b8 01       	movw	r22, r16
     8fa:	85 ec       	ldi	r24, 0xC5	; 197
     8fc:	92 e0       	ldi	r25, 0x02	; 2
     8fe:	0e 94 e6 16 	call	0x2dcc	; 0x2dcc <strncmp>
     902:	89 2b       	or	r24, r25
     904:	09 f4       	brne	.+2      	; 0x908 <ParseCIPSTA+0xfa>
     906:	63 c0       	rjmp	.+198    	; 0x9ce <ParseCIPSTA+0x1c0>
     908:	72 c0       	rjmp	.+228    	; 0x9ee <ParseCIPSTA+0x1e0>
     90a:	2e e0       	ldi	r18, 0x0E	; 14
     90c:	01 c0       	rjmp	.+2      	; 0x910 <ParseCIPSTA+0x102>
     90e:	2a e0       	ldi	r18, 0x0A	; 10
     910:	be 01       	movw	r22, r28
     912:	69 55       	subi	r22, 0x59	; 89
     914:	7e 4f       	sbci	r23, 0xFE	; 254
     916:	30 e0       	ldi	r19, 0x00	; 0
     918:	c9 01       	movw	r24, r18
     91a:	02 96       	adiw	r24, 0x02	; 2
     91c:	40 e0       	ldi	r20, 0x00	; 0
     91e:	50 e0       	ldi	r21, 0x00	; 0
     920:	80 0f       	add	r24, r16
     922:	91 1f       	adc	r25, r17
     924:	17 df       	rcall	.-466    	; 0x754 <ParseIP>
     926:	cf 5d       	subi	r28, 0xDF	; 223
     928:	dd 4f       	sbci	r29, 0xFD	; 253
     92a:	88 81       	ld	r24, Y
     92c:	81 60       	ori	r24, 0x01	; 1
     92e:	88 83       	st	Y, r24
     930:	5e c0       	rjmp	.+188    	; 0x9ee <ParseCIPSTA+0x1e0>
     932:	83 e1       	ldi	r24, 0x13	; 19
     934:	01 c0       	rjmp	.+2      	; 0x938 <ParseCIPSTA+0x12a>
     936:	8f e0       	ldi	r24, 0x0F	; 15
     938:	be 01       	movw	r22, r28
     93a:	61 55       	subi	r22, 0x51	; 81
     93c:	7e 4f       	sbci	r23, 0xFE	; 254
     93e:	90 e0       	ldi	r25, 0x00	; 0
     940:	02 96       	adiw	r24, 0x02	; 2
     942:	40 e0       	ldi	r20, 0x00	; 0
     944:	50 e0       	ldi	r21, 0x00	; 0
     946:	80 0f       	add	r24, r16
     948:	91 1f       	adc	r25, r17
     94a:	04 df       	rcall	.-504    	; 0x754 <ParseIP>
     94c:	cf 5d       	subi	r28, 0xDF	; 223
     94e:	dd 4f       	sbci	r29, 0xFD	; 253
     950:	88 81       	ld	r24, Y
     952:	82 60       	ori	r24, 0x02	; 2
     954:	88 83       	st	Y, r24
     956:	4b c0       	rjmp	.+150    	; 0x9ee <ParseCIPSTA+0x1e0>
     958:	83 e1       	ldi	r24, 0x13	; 19
     95a:	01 c0       	rjmp	.+2      	; 0x95e <ParseCIPSTA+0x150>
     95c:	8f e0       	ldi	r24, 0x0F	; 15
     95e:	be 01       	movw	r22, r28
     960:	65 55       	subi	r22, 0x55	; 85
     962:	7e 4f       	sbci	r23, 0xFE	; 254
     964:	90 e0       	ldi	r25, 0x00	; 0
     966:	02 96       	adiw	r24, 0x02	; 2
     968:	40 e0       	ldi	r20, 0x00	; 0
     96a:	50 e0       	ldi	r21, 0x00	; 0
     96c:	80 0f       	add	r24, r16
     96e:	91 1f       	adc	r25, r17
     970:	f1 de       	rcall	.-542    	; 0x754 <ParseIP>
     972:	cf 5d       	subi	r28, 0xDF	; 223
     974:	dd 4f       	sbci	r29, 0xFD	; 253
     976:	88 81       	ld	r24, Y
     978:	84 60       	ori	r24, 0x04	; 4
     97a:	88 83       	st	Y, r24
     97c:	38 c0       	rjmp	.+112    	; 0x9ee <ParseCIPSTA+0x1e0>
     97e:	8d e0       	ldi	r24, 0x0D	; 13
     980:	01 c0       	rjmp	.+2      	; 0x984 <ParseCIPSTA+0x176>
     982:	89 e0       	ldi	r24, 0x09	; 9
     984:	be 01       	movw	r22, r28
     986:	67 54       	subi	r22, 0x47	; 71
     988:	7e 4f       	sbci	r23, 0xFE	; 254
     98a:	90 e0       	ldi	r25, 0x00	; 0
     98c:	02 96       	adiw	r24, 0x02	; 2
     98e:	40 e0       	ldi	r20, 0x00	; 0
     990:	50 e0       	ldi	r21, 0x00	; 0
     992:	80 0f       	add	r24, r16
     994:	91 1f       	adc	r25, r17
     996:	de de       	rcall	.-580    	; 0x754 <ParseIP>
     998:	cf 5d       	subi	r28, 0xDF	; 223
     99a:	dd 4f       	sbci	r29, 0xFD	; 253
     99c:	88 81       	ld	r24, Y
     99e:	80 61       	ori	r24, 0x10	; 16
     9a0:	88 83       	st	Y, r24
     9a2:	25 c0       	rjmp	.+74     	; 0x9ee <ParseCIPSTA+0x1e0>
     9a4:	82 e1       	ldi	r24, 0x12	; 18
     9a6:	01 c0       	rjmp	.+2      	; 0x9aa <ParseCIPSTA+0x19c>
     9a8:	8e e0       	ldi	r24, 0x0E	; 14
     9aa:	be 01       	movw	r22, r28
     9ac:	6f 53       	subi	r22, 0x3F	; 63
     9ae:	7e 4f       	sbci	r23, 0xFE	; 254
     9b0:	90 e0       	ldi	r25, 0x00	; 0
     9b2:	02 96       	adiw	r24, 0x02	; 2
     9b4:	40 e0       	ldi	r20, 0x00	; 0
     9b6:	50 e0       	ldi	r21, 0x00	; 0
     9b8:	80 0f       	add	r24, r16
     9ba:	91 1f       	adc	r25, r17
     9bc:	cb de       	rcall	.-618    	; 0x754 <ParseIP>
     9be:	cf 5d       	subi	r28, 0xDF	; 223
     9c0:	dd 4f       	sbci	r29, 0xFD	; 253
     9c2:	88 81       	ld	r24, Y
     9c4:	80 62       	ori	r24, 0x20	; 32
     9c6:	88 83       	st	Y, r24
     9c8:	12 c0       	rjmp	.+36     	; 0x9ee <ParseCIPSTA+0x1e0>
     9ca:	82 e1       	ldi	r24, 0x12	; 18
     9cc:	01 c0       	rjmp	.+2      	; 0x9d0 <ParseCIPSTA+0x1c2>
     9ce:	8e e0       	ldi	r24, 0x0E	; 14
     9d0:	be 01       	movw	r22, r28
     9d2:	63 54       	subi	r22, 0x43	; 67
     9d4:	7e 4f       	sbci	r23, 0xFE	; 254
     9d6:	90 e0       	ldi	r25, 0x00	; 0
     9d8:	02 96       	adiw	r24, 0x02	; 2
     9da:	40 e0       	ldi	r20, 0x00	; 0
     9dc:	50 e0       	ldi	r21, 0x00	; 0
     9de:	80 0f       	add	r24, r16
     9e0:	91 1f       	adc	r25, r17
     9e2:	b8 de       	rcall	.-656    	; 0x754 <ParseIP>
     9e4:	cf 5d       	subi	r28, 0xDF	; 223
     9e6:	dd 4f       	sbci	r29, 0xFD	; 253
     9e8:	88 81       	ld	r24, Y
     9ea:	80 64       	ori	r24, 0x40	; 64
     9ec:	88 83       	st	Y, r24
     9ee:	df 91       	pop	r29
     9f0:	cf 91       	pop	r28
     9f2:	1f 91       	pop	r17
     9f4:	0f 91       	pop	r16
     9f6:	08 95       	ret

000009f8 <ParseMAC>:
     9f8:	8f 92       	push	r8
     9fa:	9f 92       	push	r9
     9fc:	af 92       	push	r10
     9fe:	bf 92       	push	r11
     a00:	cf 92       	push	r12
     a02:	df 92       	push	r13
     a04:	ef 92       	push	r14
     a06:	ff 92       	push	r15
     a08:	0f 93       	push	r16
     a0a:	1f 93       	push	r17
     a0c:	cf 93       	push	r28
     a0e:	df 93       	push	r29
     a10:	8b 01       	movw	r16, r22
     a12:	7a 01       	movw	r14, r20
     a14:	6e ef       	ldi	r22, 0xFE	; 254
     a16:	72 e0       	ldi	r23, 0x02	; 2
     a18:	0e 94 bd 16 	call	0x2d7a	; 0x2d7a <strtok>
     a1c:	00 97       	sbiw	r24, 0x00	; 0
     a1e:	e1 f1       	breq	.+120    	; 0xa98 <ParseMAC+0xa0>
     a20:	e8 01       	movw	r28, r16
     a22:	0a 5f       	subi	r16, 0xFA	; 250
     a24:	1f 4f       	sbci	r17, 0xFF	; 255
     a26:	d1 2c       	mov	r13, r1
     a28:	81 2c       	mov	r8, r1
     a2a:	91 2c       	mov	r9, r1
     a2c:	a1 2c       	mov	r10, r1
     a2e:	b1 2c       	mov	r11, r1
     a30:	c1 2c       	mov	r12, r1
     a32:	28 2f       	mov	r18, r24
     a34:	e8 2f       	mov	r30, r24
     a36:	f9 2f       	mov	r31, r25
     a38:	88 2d       	mov	r24, r8
     a3a:	99 2d       	mov	r25, r9
     a3c:	aa 2d       	mov	r26, r10
     a3e:	bb 2d       	mov	r27, r11
     a40:	0d c0       	rjmp	.+26     	; 0xa5c <ParseMAC+0x64>
     a42:	37 55       	subi	r19, 0x57	; 87
     a44:	07 c0       	rjmp	.+14     	; 0xa54 <ParseMAC+0x5c>
     a46:	4f eb       	ldi	r20, 0xBF	; 191
     a48:	43 0f       	add	r20, r19
     a4a:	46 30       	cpi	r20, 0x06	; 6
     a4c:	10 f4       	brcc	.+4      	; 0xa52 <ParseMAC+0x5a>
     a4e:	37 53       	subi	r19, 0x37	; 55
     a50:	01 c0       	rjmp	.+2      	; 0xa54 <ParseMAC+0x5c>
     a52:	3c 2d       	mov	r19, r12
     a54:	83 0f       	add	r24, r19
     a56:	91 1d       	adc	r25, r1
     a58:	a1 1d       	adc	r26, r1
     a5a:	b1 1d       	adc	r27, r1
     a5c:	5e 2f       	mov	r21, r30
     a5e:	52 1b       	sub	r21, r18
     a60:	31 91       	ld	r19, Z+
     a62:	40 ed       	ldi	r20, 0xD0	; 208
     a64:	43 0f       	add	r20, r19
     a66:	4a 30       	cpi	r20, 0x0A	; 10
     a68:	78 f1       	brcs	.+94     	; 0xac8 <ParseMAC+0xd0>
     a6a:	4f e9       	ldi	r20, 0x9F	; 159
     a6c:	43 0f       	add	r20, r19
     a6e:	46 30       	cpi	r20, 0x06	; 6
     a70:	e8 f1       	brcs	.+122    	; 0xaec <ParseMAC+0xf4>
     a72:	4f eb       	ldi	r20, 0xBF	; 191
     a74:	43 0f       	add	r20, r19
     a76:	46 30       	cpi	r20, 0x06	; 6
     a78:	b0 f0       	brcs	.+44     	; 0xaa6 <ParseMAC+0xae>
     a7a:	89 93       	st	Y+, r24
     a7c:	d5 0e       	add	r13, r21
     a7e:	c0 17       	cp	r28, r16
     a80:	d1 07       	cpc	r29, r17
     a82:	59 f0       	breq	.+22     	; 0xa9a <ParseMAC+0xa2>
     a84:	d3 94       	inc	r13
     a86:	6e ef       	ldi	r22, 0xFE	; 254
     a88:	72 e0       	ldi	r23, 0x02	; 2
     a8a:	80 e0       	ldi	r24, 0x00	; 0
     a8c:	90 e0       	ldi	r25, 0x00	; 0
     a8e:	0e 94 bd 16 	call	0x2d7a	; 0x2d7a <strtok>
     a92:	00 97       	sbiw	r24, 0x00	; 0
     a94:	71 f6       	brne	.-100    	; 0xa32 <ParseMAC+0x3a>
     a96:	01 c0       	rjmp	.+2      	; 0xa9a <ParseMAC+0xa2>
     a98:	d1 2c       	mov	r13, r1
     a9a:	e1 14       	cp	r14, r1
     a9c:	f1 04       	cpc	r15, r1
     a9e:	e1 f1       	breq	.+120    	; 0xb18 <ParseMAC+0x120>
     aa0:	f7 01       	movw	r30, r14
     aa2:	d0 82       	st	Z, r13
     aa4:	39 c0       	rjmp	.+114    	; 0xb18 <ParseMAC+0x120>
     aa6:	88 0f       	add	r24, r24
     aa8:	99 1f       	adc	r25, r25
     aaa:	aa 1f       	adc	r26, r26
     aac:	bb 1f       	adc	r27, r27
     aae:	88 0f       	add	r24, r24
     ab0:	99 1f       	adc	r25, r25
     ab2:	aa 1f       	adc	r26, r26
     ab4:	bb 1f       	adc	r27, r27
     ab6:	88 0f       	add	r24, r24
     ab8:	99 1f       	adc	r25, r25
     aba:	aa 1f       	adc	r26, r26
     abc:	bb 1f       	adc	r27, r27
     abe:	88 0f       	add	r24, r24
     ac0:	99 1f       	adc	r25, r25
     ac2:	aa 1f       	adc	r26, r26
     ac4:	bb 1f       	adc	r27, r27
     ac6:	bf cf       	rjmp	.-130    	; 0xa46 <ParseMAC+0x4e>
     ac8:	88 0f       	add	r24, r24
     aca:	99 1f       	adc	r25, r25
     acc:	aa 1f       	adc	r26, r26
     ace:	bb 1f       	adc	r27, r27
     ad0:	88 0f       	add	r24, r24
     ad2:	99 1f       	adc	r25, r25
     ad4:	aa 1f       	adc	r26, r26
     ad6:	bb 1f       	adc	r27, r27
     ad8:	88 0f       	add	r24, r24
     ada:	99 1f       	adc	r25, r25
     adc:	aa 1f       	adc	r26, r26
     ade:	bb 1f       	adc	r27, r27
     ae0:	88 0f       	add	r24, r24
     ae2:	99 1f       	adc	r25, r25
     ae4:	aa 1f       	adc	r26, r26
     ae6:	bb 1f       	adc	r27, r27
     ae8:	34 2f       	mov	r19, r20
     aea:	b4 cf       	rjmp	.-152    	; 0xa54 <ParseMAC+0x5c>
     aec:	88 0f       	add	r24, r24
     aee:	99 1f       	adc	r25, r25
     af0:	aa 1f       	adc	r26, r26
     af2:	bb 1f       	adc	r27, r27
     af4:	88 0f       	add	r24, r24
     af6:	99 1f       	adc	r25, r25
     af8:	aa 1f       	adc	r26, r26
     afa:	bb 1f       	adc	r27, r27
     afc:	88 0f       	add	r24, r24
     afe:	99 1f       	adc	r25, r25
     b00:	aa 1f       	adc	r26, r26
     b02:	bb 1f       	adc	r27, r27
     b04:	88 0f       	add	r24, r24
     b06:	99 1f       	adc	r25, r25
     b08:	aa 1f       	adc	r26, r26
     b0a:	bb 1f       	adc	r27, r27
     b0c:	4f e9       	ldi	r20, 0x9F	; 159
     b0e:	43 0f       	add	r20, r19
     b10:	46 30       	cpi	r20, 0x06	; 6
     b12:	08 f0       	brcs	.+2      	; 0xb16 <ParseMAC+0x11e>
     b14:	98 cf       	rjmp	.-208    	; 0xa46 <ParseMAC+0x4e>
     b16:	95 cf       	rjmp	.-214    	; 0xa42 <ParseMAC+0x4a>
     b18:	df 91       	pop	r29
     b1a:	cf 91       	pop	r28
     b1c:	1f 91       	pop	r17
     b1e:	0f 91       	pop	r16
     b20:	ff 90       	pop	r15
     b22:	ef 90       	pop	r14
     b24:	df 90       	pop	r13
     b26:	cf 90       	pop	r12
     b28:	bf 90       	pop	r11
     b2a:	af 90       	pop	r10
     b2c:	9f 90       	pop	r9
     b2e:	8f 90       	pop	r8
     b30:	08 95       	ret

00000b32 <ESP8266_Init>:
     b32:	cf 93       	push	r28
     b34:	df 93       	push	r29
     b36:	ec 01       	movw	r28, r24
     b38:	fc 01       	movw	r30, r24
     b3a:	ec 5a       	subi	r30, 0xAC	; 172
     b3c:	ff 4f       	sbci	r31, 0xFF	; 255
     b3e:	10 82       	st	Z, r1
     b40:	11 82       	std	Z+1, r1	; 0x01
     b42:	12 82       	std	Z+2, r1	; 0x02
     b44:	13 82       	std	Z+3, r1	; 0x03
     b46:	40 e4       	ldi	r20, 0x40	; 64
     b48:	54 e1       	ldi	r21, 0x14	; 20
     b4a:	60 e0       	ldi	r22, 0x00	; 0
     b4c:	72 e0       	ldi	r23, 0x02	; 2
     b4e:	8c e4       	ldi	r24, 0x4C	; 76
     b50:	96 e1       	ldi	r25, 0x16	; 22
     b52:	0a db       	rcall	.-2540   	; 0x168 <BUFFER_Init>
     b54:	88 23       	and	r24, r24
     b56:	29 f0       	breq	.+10     	; 0xb62 <ESP8266_Init+0x30>
     b58:	cb 5d       	subi	r28, 0xDB	; 219
     b5a:	dd 4f       	sbci	r29, 0xFD	; 253
     b5c:	85 e0       	ldi	r24, 0x05	; 5
     b5e:	88 83       	st	Y, r24
     b60:	11 c0       	rjmp	.+34     	; 0xb84 <ESP8266_Init+0x52>
     b62:	40 e4       	ldi	r20, 0x40	; 64
     b64:	50 e1       	ldi	r21, 0x10	; 16
     b66:	60 e0       	ldi	r22, 0x00	; 0
     b68:	74 e0       	ldi	r23, 0x04	; 4
     b6a:	80 e4       	ldi	r24, 0x40	; 64
     b6c:	96 e1       	ldi	r25, 0x16	; 22
     b6e:	fc da       	rcall	.-2568   	; 0x168 <BUFFER_Init>
     b70:	88 23       	and	r24, r24
     b72:	29 f0       	breq	.+10     	; 0xb7e <ESP8266_Init+0x4c>
     b74:	cb 5d       	subi	r28, 0xDB	; 219
     b76:	dd 4f       	sbci	r29, 0xFD	; 253
     b78:	85 e0       	ldi	r24, 0x05	; 5
     b7a:	88 83       	st	Y, r24
     b7c:	03 c0       	rjmp	.+6      	; 0xb84 <ESP8266_Init+0x52>
     b7e:	27 9a       	sbi	0x04, 7	; 4
     b80:	2f 98       	cbi	0x05, 7	; 5
     b82:	ff cf       	rjmp	.-2      	; 0xb82 <ESP8266_Init+0x50>
     b84:	85 e0       	ldi	r24, 0x05	; 5
     b86:	df 91       	pop	r29
     b88:	cf 91       	pop	r28
     b8a:	08 95       	ret

00000b8c <ESP8266_TimeUpdate>:
     b8c:	0f 93       	push	r16
     b8e:	1f 93       	push	r17
     b90:	fc 01       	movw	r30, r24
     b92:	e4 5b       	subi	r30, 0xB4	; 180
     b94:	ff 4f       	sbci	r31, 0xFF	; 255
     b96:	00 81       	ld	r16, Z
     b98:	11 81       	ldd	r17, Z+1	; 0x01
     b9a:	22 81       	ldd	r18, Z+2	; 0x02
     b9c:	33 81       	ldd	r19, Z+3	; 0x03
     b9e:	40 0f       	add	r20, r16
     ba0:	51 1f       	adc	r21, r17
     ba2:	62 1f       	adc	r22, r18
     ba4:	73 1f       	adc	r23, r19
     ba6:	40 83       	st	Z, r20
     ba8:	51 83       	std	Z+1, r21	; 0x01
     baa:	62 83       	std	Z+2, r22	; 0x02
     bac:	73 83       	std	Z+3, r23	; 0x03
     bae:	1f 91       	pop	r17
     bb0:	0f 91       	pop	r16
     bb2:	08 95       	ret

00000bb4 <ESP8266_DataReceived>:
     bb4:	ab 01       	movw	r20, r22
     bb6:	bc 01       	movw	r22, r24
     bb8:	80 e4       	ldi	r24, 0x40	; 64
     bba:	96 e1       	ldi	r25, 0x16	; 22
     bbc:	fa ca       	rjmp	.-2572   	; 0x1b2 <BUFFER_Write>
     bbe:	08 95       	ret

00000bc0 <ESP8266_Callback_ServerConnectionActive>:
     bc0:	08 95       	ret

00000bc2 <ESP8266_Callback_ServerConnectionClosed>:
     bc2:	08 95       	ret

00000bc4 <ESP8266_Callback_ServerConnectionDataReceived>:
     bc4:	08 95       	ret

00000bc6 <ESP8266_Callback_ServerConnectionSendData>:
     bc6:	80 e0       	ldi	r24, 0x00	; 0
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	08 95       	ret

00000bcc <ESP8266_Callback_ServerConnectionDataSent>:
     bcc:	08 95       	ret

00000bce <CallConnectionCallbacks>:
     bce:	4f 92       	push	r4
     bd0:	5f 92       	push	r5
     bd2:	6f 92       	push	r6
     bd4:	7f 92       	push	r7
     bd6:	af 92       	push	r10
     bd8:	bf 92       	push	r11
     bda:	cf 92       	push	r12
     bdc:	df 92       	push	r13
     bde:	ef 92       	push	r14
     be0:	ff 92       	push	r15
     be2:	0f 93       	push	r16
     be4:	1f 93       	push	r17
     be6:	cf 93       	push	r28
     be8:	df 93       	push	r29
     bea:	6c 01       	movw	r12, r24
     bec:	ec 01       	movw	r28, r24
     bee:	c8 5a       	subi	r28, 0xA8	; 168
     bf0:	df 4f       	sbci	r29, 0xFF	; 255
     bf2:	7c 01       	movw	r14, r24
     bf4:	81 e7       	ldi	r24, 0x71	; 113
     bf6:	e8 0e       	add	r14, r24
     bf8:	f1 1c       	adc	r15, r1
     bfa:	86 01       	movw	r16, r12
     bfc:	06 5a       	subi	r16, 0xA6	; 166
     bfe:	1f 4f       	sbci	r17, 0xFF	; 255
     c00:	56 01       	movw	r10, r12
     c02:	a7 e5       	ldi	r26, 0x57	; 87
     c04:	aa 1a       	sub	r10, r26
     c06:	ae ef       	ldi	r26, 0xFE	; 254
     c08:	ba 0a       	sbc	r11, r26
     c0a:	6c 2f       	mov	r22, r28
     c0c:	7d 2f       	mov	r23, r29
     c0e:	98 81       	ld	r25, Y
     c10:	99 23       	and	r25, r25
     c12:	29 f1       	breq	.+74     	; 0xc5e <CallConnectionCallbacks+0x90>
     c14:	97 01       	movw	r18, r14
     c16:	f7 01       	movw	r30, r14
     c18:	80 81       	ld	r24, Z
     c1a:	88 23       	and	r24, r24
     c1c:	01 f1       	breq	.+64     	; 0xc5e <CallConnectionCallbacks+0x90>
     c1e:	d8 01       	movw	r26, r16
     c20:	8c 91       	ld	r24, X
     c22:	81 11       	cpse	r24, r1
     c24:	09 c0       	rjmp	.+18     	; 0xc38 <CallConnectionCallbacks+0x6a>
     c26:	f6 01       	movw	r30, r12
     c28:	44 80       	ldd	r4, Z+4	; 0x04
     c2a:	55 80       	ldd	r5, Z+5	; 0x05
     c2c:	66 80       	ldd	r6, Z+6	; 0x06
     c2e:	77 80       	ldd	r7, Z+7	; 0x07
     c30:	45 28       	or	r4, r5
     c32:	46 28       	or	r4, r6
     c34:	47 28       	or	r4, r7
     c36:	99 f4       	brne	.+38     	; 0xc5e <CallConnectionCallbacks+0x90>
     c38:	f9 01       	movw	r30, r18
     c3a:	10 82       	st	Z, r1
     c3c:	8c 91       	ld	r24, X
     c3e:	88 23       	and	r24, r24
     c40:	41 f0       	breq	.+16     	; 0xc52 <CallConnectionCallbacks+0x84>
     c42:	52 96       	adiw	r26, 0x12	; 18
     c44:	4d 91       	ld	r20, X+
     c46:	5c 91       	ld	r21, X
     c48:	53 97       	sbiw	r26, 0x13	; 19
     c4a:	c6 01       	movw	r24, r12
     c4c:	0e 94 ee 14 	call	0x29dc	; 0x29dc <ESP8266_Callback_ClientConnectionDataReceived>
     c50:	06 c0       	rjmp	.+12     	; 0xc5e <CallConnectionCallbacks+0x90>
     c52:	52 96       	adiw	r26, 0x12	; 18
     c54:	4d 91       	ld	r20, X+
     c56:	5c 91       	ld	r21, X
     c58:	53 97       	sbiw	r26, 0x13	; 19
     c5a:	c6 01       	movw	r24, r12
     c5c:	b3 df       	rcall	.-154    	; 0xbc4 <ESP8266_Callback_ServerConnectionDataReceived>
     c5e:	cd 5b       	subi	r28, 0xBD	; 189
     c60:	df 4f       	sbci	r29, 0xFF	; 255
     c62:	f3 e4       	ldi	r31, 0x43	; 67
     c64:	ef 0e       	add	r14, r31
     c66:	f1 1c       	adc	r15, r1
     c68:	0d 5b       	subi	r16, 0xBD	; 189
     c6a:	1f 4f       	sbci	r17, 0xFF	; 255
     c6c:	0a 15       	cp	r16, r10
     c6e:	1b 05       	cpc	r17, r11
     c70:	61 f6       	brne	.-104    	; 0xc0a <CallConnectionCallbacks+0x3c>
     c72:	df 91       	pop	r29
     c74:	cf 91       	pop	r28
     c76:	1f 91       	pop	r17
     c78:	0f 91       	pop	r16
     c7a:	ff 90       	pop	r15
     c7c:	ef 90       	pop	r14
     c7e:	df 90       	pop	r13
     c80:	cf 90       	pop	r12
     c82:	bf 90       	pop	r11
     c84:	af 90       	pop	r10
     c86:	7f 90       	pop	r7
     c88:	6f 90       	pop	r6
     c8a:	5f 90       	pop	r5
     c8c:	4f 90       	pop	r4
     c8e:	08 95       	ret

00000c90 <mem_mem>:
     c90:	af 92       	push	r10
     c92:	bf 92       	push	r11
     c94:	cf 92       	push	r12
     c96:	df 92       	push	r13
     c98:	ef 92       	push	r14
     c9a:	ff 92       	push	r15
     c9c:	0f 93       	push	r16
     c9e:	1f 93       	push	r17
     ca0:	cf 93       	push	r28
     ca2:	df 93       	push	r29
     ca4:	61 15       	cp	r22, r1
     ca6:	71 05       	cpc	r23, r1
     ca8:	a1 f0       	breq	.+40     	; 0xcd2 <mem_mem+0x42>
     caa:	69 01       	movw	r12, r18
     cac:	7a 01       	movw	r14, r20
     cae:	8b 01       	movw	r16, r22
     cb0:	ec 01       	movw	r28, r24
     cb2:	08 0f       	add	r16, r24
     cb4:	19 1f       	adc	r17, r25
     cb6:	a6 01       	movw	r20, r12
     cb8:	b7 01       	movw	r22, r14
     cba:	ce 01       	movw	r24, r28
     cbc:	0e 94 c0 16 	call	0x2d80	; 0x2d80 <memcmp>
     cc0:	89 2b       	or	r24, r25
     cc2:	51 f0       	breq	.+20     	; 0xcd8 <mem_mem+0x48>
     cc4:	21 96       	adiw	r28, 0x01	; 1
     cc6:	c0 17       	cp	r28, r16
     cc8:	d1 07       	cpc	r29, r17
     cca:	a9 f7       	brne	.-22     	; 0xcb6 <mem_mem+0x26>
     ccc:	80 e0       	ldi	r24, 0x00	; 0
     cce:	90 e0       	ldi	r25, 0x00	; 0
     cd0:	05 c0       	rjmp	.+10     	; 0xcdc <mem_mem+0x4c>
     cd2:	80 e0       	ldi	r24, 0x00	; 0
     cd4:	90 e0       	ldi	r25, 0x00	; 0
     cd6:	02 c0       	rjmp	.+4      	; 0xcdc <mem_mem+0x4c>
     cd8:	8c 2f       	mov	r24, r28
     cda:	9d 2f       	mov	r25, r29
     cdc:	df 91       	pop	r29
     cde:	cf 91       	pop	r28
     ce0:	1f 91       	pop	r17
     ce2:	0f 91       	pop	r16
     ce4:	ff 90       	pop	r15
     ce6:	ef 90       	pop	r14
     ce8:	df 90       	pop	r13
     cea:	cf 90       	pop	r12
     cec:	bf 90       	pop	r11
     cee:	af 90       	pop	r10
     cf0:	08 95       	ret

00000cf2 <ParseReceived>:
     cf2:	2f 92       	push	r2
     cf4:	3f 92       	push	r3
     cf6:	4f 92       	push	r4
     cf8:	5f 92       	push	r5
     cfa:	6f 92       	push	r6
     cfc:	7f 92       	push	r7
     cfe:	8f 92       	push	r8
     d00:	9f 92       	push	r9
     d02:	af 92       	push	r10
     d04:	bf 92       	push	r11
     d06:	cf 92       	push	r12
     d08:	df 92       	push	r13
     d0a:	ef 92       	push	r14
     d0c:	ff 92       	push	r15
     d0e:	0f 93       	push	r16
     d10:	1f 93       	push	r17
     d12:	cf 93       	push	r28
     d14:	df 93       	push	r29
     d16:	1f 92       	push	r1
     d18:	1f 92       	push	r1
     d1a:	cd b7       	in	r28, 0x3d	; 61
     d1c:	de b7       	in	r29, 0x3e	; 62
     d1e:	fc 01       	movw	r30, r24
     d20:	e0 5b       	subi	r30, 0xB0	; 176
     d22:	ff 4f       	sbci	r31, 0xFF	; 255
     d24:	dc 01       	movw	r26, r24
     d26:	a4 5b       	subi	r26, 0xB4	; 180
     d28:	bf 4f       	sbci	r27, 0xFF	; 255
     d2a:	cd 90       	ld	r12, X+
     d2c:	dd 90       	ld	r13, X+
     d2e:	ed 90       	ld	r14, X+
     d30:	fc 90       	ld	r15, X
     d32:	c0 82       	st	Z, r12
     d34:	d1 82       	std	Z+1, r13	; 0x01
     d36:	e2 82       	std	Z+2, r14	; 0x02
     d38:	f3 82       	std	Z+3, r15	; 0x03
     d3a:	22 30       	cpi	r18, 0x02	; 2
     d3c:	31 05       	cpc	r19, r1
     d3e:	49 f4       	brne	.+18     	; 0xd52 <ParseReceived+0x60>
     d40:	db 01       	movw	r26, r22
     d42:	5c 91       	ld	r21, X
     d44:	5d 30       	cpi	r21, 0x0D	; 13
     d46:	29 f4       	brne	.+10     	; 0xd52 <ParseReceived+0x60>
     d48:	11 96       	adiw	r26, 0x01	; 1
     d4a:	5c 91       	ld	r21, X
     d4c:	5a 30       	cpi	r21, 0x0A	; 10
     d4e:	09 f4       	brne	.+2      	; 0xd52 <ParseReceived+0x60>
     d50:	80 c6       	rjmp	.+3328   	; 0x1a52 <ParseReceived+0xd60>
     d52:	39 01       	movw	r6, r18
     d54:	54 2e       	mov	r5, r20
     d56:	7b 01       	movw	r14, r22
     d58:	8c 01       	movw	r16, r24
     d5a:	fc 01       	movw	r30, r24
     d5c:	84 81       	ldd	r24, Z+4	; 0x04
     d5e:	95 81       	ldd	r25, Z+5	; 0x05
     d60:	a6 81       	ldd	r26, Z+6	; 0x06
     d62:	b7 81       	ldd	r27, Z+7	; 0x07
     d64:	89 2b       	or	r24, r25
     d66:	8a 2b       	or	r24, r26
     d68:	8b 2b       	or	r24, r27
     d6a:	09 f4       	brne	.+2      	; 0xd6e <ParseReceived+0x7c>
     d6c:	44 c0       	rjmp	.+136    	; 0xdf6 <ParseReceived+0x104>
     d6e:	44 23       	and	r20, r20
     d70:	09 f4       	brne	.+2      	; 0xd74 <ParseReceived+0x82>
     d72:	41 c0       	rjmp	.+130    	; 0xdf6 <ParseReceived+0x104>
     d74:	69 ed       	ldi	r22, 0xD9	; 217
     d76:	72 e0       	ldi	r23, 0x02	; 2
     d78:	c7 01       	movw	r24, r14
     d7a:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
     d7e:	89 2b       	or	r24, r25
     d80:	d1 f1       	breq	.+116    	; 0xdf6 <ParseReceived+0x104>
     d82:	64 ed       	ldi	r22, 0xD4	; 212
     d84:	72 e0       	ldi	r23, 0x02	; 2
     d86:	c7 01       	movw	r24, r14
     d88:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
     d8c:	89 2b       	or	r24, r25
     d8e:	99 f1       	breq	.+102    	; 0xdf6 <ParseReceived+0x104>
     d90:	6e ed       	ldi	r22, 0xDE	; 222
     d92:	72 e0       	ldi	r23, 0x02	; 2
     d94:	c7 01       	movw	r24, r14
     d96:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
     d9a:	89 2b       	or	r24, r25
     d9c:	61 f1       	breq	.+88     	; 0xdf6 <ParseReceived+0x104>
     d9e:	66 ee       	ldi	r22, 0xE6	; 230
     da0:	72 e0       	ldi	r23, 0x02	; 2
     da2:	c7 01       	movw	r24, r14
     da4:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
     da8:	89 2b       	or	r24, r25
     daa:	61 f1       	breq	.+88     	; 0xe04 <ParseReceived+0x112>
     dac:	6e ee       	ldi	r22, 0xEE	; 238
     dae:	72 e0       	ldi	r23, 0x02	; 2
     db0:	c7 01       	movw	r24, r14
     db2:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
     db6:	89 2b       	or	r24, r25
     db8:	41 f1       	breq	.+80     	; 0xe0a <ParseReceived+0x118>
     dba:	44 e0       	ldi	r20, 0x04	; 4
     dbc:	50 e0       	ldi	r21, 0x00	; 0
     dbe:	6a ef       	ldi	r22, 0xFA	; 250
     dc0:	72 e0       	ldi	r23, 0x02	; 2
     dc2:	c7 01       	movw	r24, r14
     dc4:	0e 94 e6 16 	call	0x2dcc	; 0x2dcc <strncmp>
     dc8:	89 2b       	or	r24, r25
     dca:	f9 f0       	breq	.+62     	; 0xe0a <ParseReceived+0x118>
     dcc:	b8 01       	movw	r22, r16
     dce:	68 5f       	subi	r22, 0xF8	; 248
     dd0:	7f 4f       	sbci	r23, 0xFF	; 255
     dd2:	fb 01       	movw	r30, r22
     dd4:	01 90       	ld	r0, Z+
     dd6:	00 20       	and	r0, r0
     dd8:	e9 f7       	brne	.-6      	; 0xdd4 <ParseReceived+0xe2>
     dda:	31 97       	sbiw	r30, 0x01	; 1
     ddc:	af 01       	movw	r20, r30
     dde:	46 1b       	sub	r20, r22
     de0:	57 0b       	sbc	r21, r23
     de2:	c7 01       	movw	r24, r14
     de4:	0e 94 e6 16 	call	0x2dcc	; 0x2dcc <strncmp>
     de8:	89 2b       	or	r24, r25
     dea:	79 f0       	breq	.+30     	; 0xe0a <ParseReceived+0x118>
     dec:	b7 01       	movw	r22, r14
     dee:	8c e4       	ldi	r24, 0x4C	; 76
     df0:	96 e1       	ldi	r25, 0x16	; 22
     df2:	af db       	rcall	.-2210   	; 0x552 <BUFFER_WriteString>
     df4:	2e c6       	rjmp	.+3164   	; 0x1a52 <ParseReceived+0xd60>
     df6:	66 ee       	ldi	r22, 0xE6	; 230
     df8:	72 e0       	ldi	r23, 0x02	; 2
     dfa:	c7 01       	movw	r24, r14
     dfc:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
     e00:	89 2b       	or	r24, r25
     e02:	19 f4       	brne	.+6      	; 0xe0a <ParseReceived+0x118>
     e04:	c8 01       	movw	r24, r16
     e06:	0e 94 32 14 	call	0x2864	; 0x2864 <ESP8266_Callback_DeviceReady>
     e0a:	60 e0       	ldi	r22, 0x00	; 0
     e0c:	73 e0       	ldi	r23, 0x03	; 3
     e0e:	c7 01       	movw	r24, r14
     e10:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
     e14:	89 2b       	or	r24, r25
     e16:	19 f4       	brne	.+6      	; 0xe1e <ParseReceived+0x12c>
     e18:	c8 01       	movw	r24, r16
     e1a:	0e 94 36 14 	call	0x286c	; 0x286c <ESP8266_Callback_WatchdogReset>
     e1e:	c8 01       	movw	r24, r16
     e20:	d6 de       	rcall	.-596    	; 0xbce <CallConnectionCallbacks>
     e22:	6c e0       	ldi	r22, 0x0C	; 12
     e24:	73 e0       	ldi	r23, 0x03	; 3
     e26:	c7 01       	movw	r24, r14
     e28:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
     e2c:	89 2b       	or	r24, r25
     e2e:	51 f4       	brne	.+20     	; 0xe44 <ParseReceived+0x152>
     e30:	f8 01       	movw	r30, r16
     e32:	ef 5d       	subi	r30, 0xDF	; 223
     e34:	fd 4f       	sbci	r31, 0xFD	; 253
     e36:	81 81       	ldd	r24, Z+1	; 0x01
     e38:	84 60       	ori	r24, 0x04	; 4
     e3a:	81 83       	std	Z+1, r24	; 0x01
     e3c:	c8 01       	movw	r24, r16
     e3e:	0e 94 3e 14 	call	0x287c	; 0x287c <ESP8266_Callback_WifiConnected>
     e42:	32 c0       	rjmp	.+100    	; 0xea8 <ParseReceived+0x1b6>
     e44:	6d e1       	ldi	r22, 0x1D	; 29
     e46:	73 e0       	ldi	r23, 0x03	; 3
     e48:	c7 01       	movw	r24, r14
     e4a:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
     e4e:	89 2b       	or	r24, r25
     e50:	d9 f4       	brne	.+54     	; 0xe88 <ParseReceived+0x196>
     e52:	f8 01       	movw	r30, r16
     e54:	ef 5d       	subi	r30, 0xDF	; 223
     e56:	fd 4f       	sbci	r31, 0xFD	; 253
     e58:	81 81       	ldd	r24, Z+1	; 0x01
     e5a:	8b 7f       	andi	r24, 0xFB	; 251
     e5c:	87 7f       	andi	r24, 0xF7	; 247
     e5e:	81 83       	std	Z+1, r24	; 0x01
     e60:	89 e1       	ldi	r24, 0x19	; 25
     e62:	b5 97       	sbiw	r30, 0x25	; 37
     e64:	df 01       	movw	r26, r30
     e66:	1d 92       	st	X+, r1
     e68:	8a 95       	dec	r24
     e6a:	e9 f7       	brne	.-6      	; 0xe66 <ParseReceived+0x174>
     e6c:	8f e4       	ldi	r24, 0x4F	; 79
     e6e:	91 e0       	ldi	r25, 0x01	; 1
     e70:	e4 5a       	subi	r30, 0xA4	; 164
     e72:	f1 40       	sbci	r31, 0x01	; 1
     e74:	df 01       	movw	r26, r30
     e76:	9c 01       	movw	r18, r24
     e78:	1d 92       	st	X+, r1
     e7a:	21 50       	subi	r18, 0x01	; 1
     e7c:	30 40       	sbci	r19, 0x00	; 0
     e7e:	e1 f7       	brne	.-8      	; 0xe78 <ParseReceived+0x186>
     e80:	c8 01       	movw	r24, r16
     e82:	0e 94 3a 14 	call	0x2874	; 0x2874 <ESP8266_Callback_WifiDisconnected>
     e86:	10 c0       	rjmp	.+32     	; 0xea8 <ParseReceived+0x1b6>
     e88:	6f e2       	ldi	r22, 0x2F	; 47
     e8a:	73 e0       	ldi	r23, 0x03	; 3
     e8c:	c7 01       	movw	r24, r14
     e8e:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
     e92:	89 2b       	or	r24, r25
     e94:	49 f4       	brne	.+18     	; 0xea8 <ParseReceived+0x1b6>
     e96:	f8 01       	movw	r30, r16
     e98:	ef 5d       	subi	r30, 0xDF	; 223
     e9a:	fd 4f       	sbci	r31, 0xFD	; 253
     e9c:	81 81       	ldd	r24, Z+1	; 0x01
     e9e:	88 60       	ori	r24, 0x08	; 8
     ea0:	81 83       	std	Z+1, r24	; 0x01
     ea2:	c8 01       	movw	r24, r16
     ea4:	0e 94 52 14 	call	0x28a4	; 0x28a4 <ESP8266_Callback_WifiGotIP>
     ea8:	64 ed       	ldi	r22, 0xD4	; 212
     eaa:	72 e0       	ldi	r23, 0x02	; 2
     eac:	c7 01       	movw	r24, r14
     eae:	0e 94 03 17 	call	0x2e06	; 0x2e06 <strstr>
     eb2:	89 2b       	or	r24, r25
     eb4:	79 f1       	breq	.+94     	; 0xf14 <ParseReceived+0x222>
     eb6:	d8 01       	movw	r26, r16
     eb8:	14 96       	adiw	r26, 0x04	; 4
     eba:	1d 92       	st	X+, r1
     ebc:	1d 92       	st	X+, r1
     ebe:	1d 92       	st	X+, r1
     ec0:	1c 92       	st	X, r1
     ec2:	17 97       	sbiw	r26, 0x07	; 7
     ec4:	68 01       	movw	r12, r16
     ec6:	bb e6       	ldi	r27, 0x6B	; 107
     ec8:	cb 0e       	add	r12, r27
     eca:	d1 1c       	adc	r13, r1
     ecc:	58 01       	movw	r10, r16
     ece:	e8 e5       	ldi	r30, 0x58	; 88
     ed0:	ae 0e       	add	r10, r30
     ed2:	b1 1c       	adc	r11, r1
     ed4:	48 01       	movw	r8, r16
     ed6:	f6 e4       	ldi	r31, 0x46	; 70
     ed8:	8f 1a       	sub	r8, r31
     eda:	fe ef       	ldi	r31, 0xFE	; 254
     edc:	9f 0a       	sbc	r9, r31
     ede:	d6 01       	movw	r26, r12
     ee0:	8c 91       	ld	r24, X
     ee2:	88 23       	and	r24, r24
     ee4:	71 f0       	breq	.+28     	; 0xf02 <ParseReceived+0x210>
     ee6:	1c 92       	st	X, r1
     ee8:	f6 01       	movw	r30, r12
     eea:	71 97       	sbiw	r30, 0x11	; 17
     eec:	80 81       	ld	r24, Z
     eee:	88 23       	and	r24, r24
     ef0:	29 f0       	breq	.+10     	; 0xefc <ParseReceived+0x20a>
     ef2:	b5 01       	movw	r22, r10
     ef4:	c8 01       	movw	r24, r16
     ef6:	0e 94 ea 14 	call	0x29d4	; 0x29d4 <ESP8266_Callback_ClientConnectionDataSent>
     efa:	03 c0       	rjmp	.+6      	; 0xf02 <ParseReceived+0x210>
     efc:	b5 01       	movw	r22, r10
     efe:	c8 01       	movw	r24, r16
     f00:	65 de       	rcall	.-822    	; 0xbcc <ESP8266_Callback_ServerConnectionDataSent>
     f02:	b3 e4       	ldi	r27, 0x43	; 67
     f04:	cb 0e       	add	r12, r27
     f06:	d1 1c       	adc	r13, r1
     f08:	e3 e4       	ldi	r30, 0x43	; 67
     f0a:	ae 0e       	add	r10, r30
     f0c:	b1 1c       	adc	r11, r1
     f0e:	c8 14       	cp	r12, r8
     f10:	d9 04       	cpc	r13, r9
     f12:	29 f7       	brne	.-54     	; 0xede <ParseReceived+0x1ec>
     f14:	44 e0       	ldi	r20, 0x04	; 4
     f16:	50 e0       	ldi	r21, 0x00	; 0
     f18:	6d e3       	ldi	r22, 0x3D	; 61
     f1a:	73 e0       	ldi	r23, 0x03	; 3
     f1c:	c7 01       	movw	r24, r14
     f1e:	0e 94 e6 16 	call	0x2dcc	; 0x2dcc <strncmp>
     f22:	89 2b       	or	r24, r25
     f24:	09 f0       	breq	.+2      	; 0xf28 <ParseReceived+0x236>
     f26:	6a c1       	rjmp	.+724    	; 0x11fc <ParseReceived+0x50a>
     f28:	81 e0       	ldi	r24, 0x01	; 1
     f2a:	f8 01       	movw	r30, r16
     f2c:	eb 50       	subi	r30, 0x0B	; 11
     f2e:	fe 4f       	sbci	r31, 0xFE	; 254
     f30:	80 83       	st	Z, r24
     f32:	36 96       	adiw	r30, 0x06	; 6
     f34:	50 82       	st	Z, r5
     f36:	d7 01       	movw	r26, r14
     f38:	15 96       	adiw	r26, 0x05	; 5
     f3a:	8c 91       	ld	r24, X
     f3c:	80 53       	subi	r24, 0x30	; 48
     f3e:	58 01       	movw	r10, r16
     f40:	b6 e0       	ldi	r27, 0x06	; 6
     f42:	ab 1a       	sub	r10, r27
     f44:	be ef       	ldi	r27, 0xFE	; 254
     f46:	bb 0a       	sbc	r11, r27
     f48:	f5 01       	movw	r30, r10
     f4a:	80 83       	st	Z, r24
     f4c:	0f 2e       	mov	r0, r31
     f4e:	f3 e4       	ldi	r31, 0x43	; 67
     f50:	9f 2e       	mov	r9, r31
     f52:	f0 2d       	mov	r31, r0
     f54:	68 01       	movw	r12, r16
     f56:	98 9e       	mul	r9, r24
     f58:	c0 0c       	add	r12, r0
     f5a:	d1 1c       	adc	r13, r1
     f5c:	11 24       	eor	r1, r1
     f5e:	f6 01       	movw	r30, r12
     f60:	e4 59       	subi	r30, 0x94	; 148
     f62:	ff 4f       	sbci	r31, 0xFF	; 255
     f64:	2c e8       	ldi	r18, 0x8C	; 140
     f66:	3a e0       	ldi	r19, 0x0A	; 10
     f68:	31 83       	std	Z+1, r19	; 0x01
     f6a:	20 83       	st	Z, r18
     f6c:	73 97       	sbiw	r30, 0x13	; 19
     f6e:	80 83       	st	Z, r24
     f70:	be 01       	movw	r22, r28
     f72:	6f 5f       	subi	r22, 0xFF	; 255
     f74:	7f 4f       	sbci	r23, 0xFF	; 255
     f76:	c7 01       	movw	r24, r14
     f78:	07 96       	adiw	r24, 0x07	; 7
     f7a:	60 db       	rcall	.-2368   	; 0x63c <ParseNumber>
     f7c:	f6 01       	movw	r30, r12
     f7e:	ee 59       	subi	r30, 0x9E	; 158
     f80:	ff 4f       	sbci	r31, 0xFF	; 255
     f82:	60 83       	st	Z, r22
     f84:	71 83       	std	Z+1, r23	; 0x01
     f86:	82 83       	std	Z+2, r24	; 0x02
     f88:	93 83       	std	Z+3, r25	; 0x03
     f8a:	d5 01       	movw	r26, r10
     f8c:	8c 91       	ld	r24, X
     f8e:	28 2f       	mov	r18, r24
     f90:	30 e0       	ldi	r19, 0x00	; 0
     f92:	f8 01       	movw	r30, r16
     f94:	98 9e       	mul	r9, r24
     f96:	e0 0d       	add	r30, r0
     f98:	f1 1d       	adc	r31, r1
     f9a:	11 24       	eor	r1, r1
     f9c:	ea 59       	subi	r30, 0x9A	; 154
     f9e:	ff 4f       	sbci	r31, 0xFF	; 255
     fa0:	80 81       	ld	r24, Z
     fa2:	91 81       	ldd	r25, Z+1	; 0x01
     fa4:	a2 81       	ldd	r26, Z+2	; 0x02
     fa6:	b3 81       	ldd	r27, Z+3	; 0x03
     fa8:	89 2b       	or	r24, r25
     faa:	8a 2b       	or	r24, r26
     fac:	8b 2b       	or	r24, r27
     fae:	81 f4       	brne	.+32     	; 0xfd0 <ParseReceived+0x2de>
     fb0:	43 e4       	ldi	r20, 0x43	; 67
     fb2:	42 9f       	mul	r20, r18
     fb4:	c0 01       	movw	r24, r0
     fb6:	43 9f       	mul	r20, r19
     fb8:	90 0d       	add	r25, r0
     fba:	11 24       	eor	r1, r1
     fbc:	80 0f       	add	r24, r16
     fbe:	91 1f       	adc	r25, r17
     fc0:	fc 01       	movw	r30, r24
     fc2:	e8 56       	subi	r30, 0x68	; 104
     fc4:	ff 4f       	sbci	r31, 0xFF	; 255
     fc6:	10 82       	st	Z, r1
     fc8:	31 96       	adiw	r30, 0x01	; 1
     fca:	81 e0       	ldi	r24, 0x01	; 1
     fcc:	80 83       	st	Z, r24
     fce:	0b c0       	rjmp	.+22     	; 0xfe6 <ParseReceived+0x2f4>
     fd0:	83 e4       	ldi	r24, 0x43	; 67
     fd2:	82 9f       	mul	r24, r18
     fd4:	f0 01       	movw	r30, r0
     fd6:	83 9f       	mul	r24, r19
     fd8:	f0 0d       	add	r31, r0
     fda:	11 24       	eor	r1, r1
     fdc:	e0 0f       	add	r30, r16
     fde:	f1 1f       	adc	r31, r17
     fe0:	e7 56       	subi	r30, 0x67	; 103
     fe2:	ff 4f       	sbci	r31, 0xFF	; 255
     fe4:	10 82       	st	Z, r1
     fe6:	68 01       	movw	r12, r16
     fe8:	b6 e0       	ldi	r27, 0x06	; 6
     fea:	cb 1a       	sub	r12, r27
     fec:	be ef       	ldi	r27, 0xFE	; 254
     fee:	db 0a       	sbc	r13, r27
     ff0:	f6 01       	movw	r30, r12
     ff2:	20 81       	ld	r18, Z
     ff4:	0f 2e       	mov	r0, r31
     ff6:	f3 e4       	ldi	r31, 0x43	; 67
     ff8:	bf 2e       	mov	r11, r31
     ffa:	f0 2d       	mov	r31, r0
     ffc:	b2 9e       	mul	r11, r18
     ffe:	90 01       	movw	r18, r0
    1000:	11 24       	eor	r1, r1
    1002:	f8 01       	movw	r30, r16
    1004:	e2 0f       	add	r30, r18
    1006:	f3 1f       	adc	r31, r19
    1008:	df 01       	movw	r26, r30
    100a:	aa 59       	subi	r26, 0x9A	; 154
    100c:	bf 4f       	sbci	r27, 0xFF	; 255
    100e:	ee 59       	subi	r30, 0x9E	; 158
    1010:	ff 4f       	sbci	r31, 0xFF	; 255
    1012:	20 80       	ld	r2, Z
    1014:	31 80       	ldd	r3, Z+1	; 0x01
    1016:	42 80       	ldd	r4, Z+2	; 0x02
    1018:	53 80       	ldd	r5, Z+3	; 0x03
    101a:	4d 91       	ld	r20, X+
    101c:	5d 91       	ld	r21, X+
    101e:	6d 91       	ld	r22, X+
    1020:	7c 91       	ld	r23, X
    1022:	13 97       	sbiw	r26, 0x03	; 3
    1024:	42 0d       	add	r20, r2
    1026:	53 1d       	adc	r21, r3
    1028:	64 1d       	adc	r22, r4
    102a:	75 1d       	adc	r23, r5
    102c:	4d 93       	st	X+, r20
    102e:	5d 93       	st	X+, r21
    1030:	6d 93       	st	X+, r22
    1032:	7c 93       	st	X, r23
    1034:	13 97       	sbiw	r26, 0x03	; 3
    1036:	d8 01       	movw	r26, r16
    1038:	a9 5e       	subi	r26, 0xE9	; 233
    103a:	bd 4f       	sbci	r27, 0xFD	; 253
    103c:	20 80       	ld	r2, Z
    103e:	31 80       	ldd	r3, Z+1	; 0x01
    1040:	42 80       	ldd	r4, Z+2	; 0x02
    1042:	53 80       	ldd	r5, Z+3	; 0x03
    1044:	4d 91       	ld	r20, X+
    1046:	5d 91       	ld	r21, X+
    1048:	6d 91       	ld	r22, X+
    104a:	7c 91       	ld	r23, X
    104c:	13 97       	sbiw	r26, 0x03	; 3
    104e:	42 0d       	add	r20, r2
    1050:	53 1d       	adc	r21, r3
    1052:	64 1d       	adc	r22, r4
    1054:	75 1d       	adc	r23, r5
    1056:	4d 93       	st	X+, r20
    1058:	5d 93       	st	X+, r21
    105a:	6d 93       	st	X+, r22
    105c:	7c 93       	st	X, r23
    105e:	13 97       	sbiw	r26, 0x03	; 3
    1060:	89 81       	ldd	r24, Y+1	; 0x01
    1062:	90 e0       	ldi	r25, 0x00	; 0
    1064:	01 96       	adiw	r24, 0x01	; 1
    1066:	09 2e       	mov	r0, r25
    1068:	00 0c       	add	r0, r0
    106a:	aa 0b       	sbc	r26, r26
    106c:	bb 0b       	sbc	r27, r27
    106e:	1c 01       	movw	r2, r24
    1070:	2d 01       	movw	r4, r26
    1072:	f7 e0       	ldi	r31, 0x07	; 7
    1074:	2f 0e       	add	r2, r31
    1076:	31 1c       	adc	r3, r1
    1078:	41 1c       	adc	r4, r1
    107a:	51 1c       	adc	r5, r1
    107c:	b9 01       	movw	r22, r18
    107e:	63 5a       	subi	r22, 0xA3	; 163
    1080:	7f 4f       	sbci	r23, 0xFF	; 255
    1082:	60 0f       	add	r22, r16
    1084:	71 1f       	adc	r23, r17
    1086:	c7 01       	movw	r24, r14
    1088:	82 0d       	add	r24, r2
    108a:	93 1d       	adc	r25, r3
    108c:	ae 01       	movw	r20, r28
    108e:	4f 5f       	subi	r20, 0xFF	; 255
    1090:	5f 4f       	sbci	r21, 0xFF	; 255
    1092:	60 db       	rcall	.-2368   	; 0x754 <ParseIP>
    1094:	d6 01       	movw	r26, r12
    1096:	cc 90       	ld	r12, X
    1098:	d1 2c       	mov	r13, r1
    109a:	89 81       	ldd	r24, Y+1	; 0x01
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	01 96       	adiw	r24, 0x01	; 1
    10a0:	09 2e       	mov	r0, r25
    10a2:	00 0c       	add	r0, r0
    10a4:	aa 0b       	sbc	r26, r26
    10a6:	bb 0b       	sbc	r27, r27
    10a8:	82 0d       	add	r24, r2
    10aa:	93 1d       	adc	r25, r3
    10ac:	a4 1d       	adc	r26, r4
    10ae:	b5 1d       	adc	r27, r5
    10b0:	8e 0d       	add	r24, r14
    10b2:	9f 1d       	adc	r25, r15
    10b4:	be 01       	movw	r22, r28
    10b6:	6f 5f       	subi	r22, 0xFF	; 255
    10b8:	7f 4f       	sbci	r23, 0xFF	; 255
    10ba:	c0 da       	rcall	.-2688   	; 0x63c <ParseNumber>
    10bc:	bc 9c       	mul	r11, r12
    10be:	f0 01       	movw	r30, r0
    10c0:	bd 9c       	mul	r11, r13
    10c2:	f0 0d       	add	r31, r0
    10c4:	11 24       	eor	r1, r1
    10c6:	e0 0f       	add	r30, r16
    10c8:	f1 1f       	adc	r31, r17
    10ca:	e5 5a       	subi	r30, 0xA5	; 165
    10cc:	ff 4f       	sbci	r31, 0xFF	; 255
    10ce:	71 83       	std	Z+1, r23	; 0x01
    10d0:	60 83       	st	Z, r22
    10d2:	f7 01       	movw	r30, r14
    10d4:	80 81       	ld	r24, Z
    10d6:	8a 33       	cpi	r24, 0x3A	; 58
    10d8:	59 f0       	breq	.+22     	; 0x10f0 <ParseReceived+0x3fe>
    10da:	31 96       	adiw	r30, 0x01	; 1
    10dc:	80 e0       	ldi	r24, 0x00	; 0
    10de:	90 e0       	ldi	r25, 0x00	; 0
    10e0:	dc 01       	movw	r26, r24
    10e2:	01 96       	adiw	r24, 0x01	; 1
    10e4:	a1 1d       	adc	r26, r1
    10e6:	b1 1d       	adc	r27, r1
    10e8:	21 91       	ld	r18, Z+
    10ea:	2a 33       	cpi	r18, 0x3A	; 58
    10ec:	d1 f7       	brne	.-12     	; 0x10e2 <ParseReceived+0x3f0>
    10ee:	03 c0       	rjmp	.+6      	; 0x10f6 <ParseReceived+0x404>
    10f0:	80 e0       	ldi	r24, 0x00	; 0
    10f2:	90 e0       	ldi	r25, 0x00	; 0
    10f4:	dc 01       	movw	r26, r24
    10f6:	1c 01       	movw	r2, r24
    10f8:	2d 01       	movw	r4, r26
    10fa:	ff ef       	ldi	r31, 0xFF	; 255
    10fc:	2f 1a       	sub	r2, r31
    10fe:	3f 0a       	sbc	r3, r31
    1100:	4f 0a       	sbc	r4, r31
    1102:	5f 0a       	sbc	r5, r31
    1104:	63 01       	movw	r12, r6
    1106:	c2 18       	sub	r12, r2
    1108:	d3 08       	sbc	r13, r3
    110a:	58 01       	movw	r10, r16
    110c:	26 e0       	ldi	r18, 0x06	; 6
    110e:	a2 1a       	sub	r10, r18
    1110:	2e ef       	ldi	r18, 0xFE	; 254
    1112:	b2 0a       	sbc	r11, r18
    1114:	d5 01       	movw	r26, r10
    1116:	8c 91       	ld	r24, X
    1118:	0f 2e       	mov	r0, r31
    111a:	f3 e4       	ldi	r31, 0x43	; 67
    111c:	9f 2e       	mov	r9, r31
    111e:	f0 2d       	mov	r31, r0
    1120:	f8 01       	movw	r30, r16
    1122:	98 9e       	mul	r9, r24
    1124:	e0 0d       	add	r30, r0
    1126:	f1 1d       	adc	r31, r1
    1128:	11 24       	eor	r1, r1
    112a:	e4 59       	subi	r30, 0x94	; 148
    112c:	ff 4f       	sbci	r31, 0xFF	; 255
    112e:	b7 01       	movw	r22, r14
    1130:	62 0d       	add	r22, r2
    1132:	73 1d       	adc	r23, r3
    1134:	a6 01       	movw	r20, r12
    1136:	80 81       	ld	r24, Z
    1138:	91 81       	ldd	r25, Z+1	; 0x01
    113a:	0e 94 cd 16 	call	0x2d9a	; 0x2d9a <memcpy>
    113e:	f5 01       	movw	r30, r10
    1140:	80 81       	ld	r24, Z
    1142:	28 2f       	mov	r18, r24
    1144:	30 e0       	ldi	r19, 0x00	; 0
    1146:	f8 01       	movw	r30, r16
    1148:	98 9e       	mul	r9, r24
    114a:	e0 0d       	add	r30, r0
    114c:	f1 1d       	adc	r31, r1
    114e:	11 24       	eor	r1, r1
    1150:	ee 59       	subi	r30, 0x9E	; 158
    1152:	ff 4f       	sbci	r31, 0xFF	; 255
    1154:	40 81       	ld	r20, Z
    1156:	51 81       	ldd	r21, Z+1	; 0x01
    1158:	62 81       	ldd	r22, Z+2	; 0x02
    115a:	73 81       	ldd	r23, Z+3	; 0x03
    115c:	c3 01       	movw	r24, r6
    115e:	a0 e0       	ldi	r26, 0x00	; 0
    1160:	b0 e0       	ldi	r27, 0x00	; 0
    1162:	82 19       	sub	r24, r2
    1164:	93 09       	sbc	r25, r3
    1166:	a4 09       	sbc	r26, r4
    1168:	b5 09       	sbc	r27, r5
    116a:	48 17       	cp	r20, r24
    116c:	59 07       	cpc	r21, r25
    116e:	6a 07       	cpc	r22, r26
    1170:	7b 07       	cpc	r23, r27
    1172:	88 f4       	brcc	.+34     	; 0x1196 <ParseReceived+0x4a4>
    1174:	e3 e4       	ldi	r30, 0x43	; 67
    1176:	e2 9f       	mul	r30, r18
    1178:	c0 01       	movw	r24, r0
    117a:	e3 9f       	mul	r30, r19
    117c:	90 0d       	add	r25, r0
    117e:	11 24       	eor	r1, r1
    1180:	80 0f       	add	r24, r16
    1182:	91 1f       	adc	r25, r17
    1184:	fc 01       	movw	r30, r24
    1186:	e4 59       	subi	r30, 0x94	; 148
    1188:	ff 4f       	sbci	r31, 0xFF	; 255
    118a:	80 81       	ld	r24, Z
    118c:	91 81       	ldd	r25, Z+1	; 0x01
    118e:	fc 01       	movw	r30, r24
    1190:	e4 0f       	add	r30, r20
    1192:	f5 1f       	adc	r31, r21
    1194:	10 82       	st	Z, r1
    1196:	f8 01       	movw	r30, r16
    1198:	e8 50       	subi	r30, 0x08	; 8
    119a:	fe 4f       	sbci	r31, 0xFE	; 254
    119c:	d1 82       	std	Z+1, r13	; 0x01
    119e:	c0 82       	st	Z, r12
    11a0:	32 97       	sbiw	r30, 0x02	; 2
    11a2:	d1 82       	std	Z+1, r13	; 0x01
    11a4:	c0 82       	st	Z, r12
    11a6:	34 96       	adiw	r30, 0x04	; 4
    11a8:	80 81       	ld	r24, Z
    11aa:	28 2f       	mov	r18, r24
    11ac:	30 e0       	ldi	r19, 0x00	; 0
    11ae:	f8 01       	movw	r30, r16
    11b0:	43 e4       	ldi	r20, 0x43	; 67
    11b2:	84 9f       	mul	r24, r20
    11b4:	e0 0d       	add	r30, r0
    11b6:	f1 1d       	adc	r31, r1
    11b8:	11 24       	eor	r1, r1
    11ba:	ee 59       	subi	r30, 0x9E	; 158
    11bc:	ff 4f       	sbci	r31, 0xFF	; 255
    11be:	80 81       	ld	r24, Z
    11c0:	91 81       	ldd	r25, Z+1	; 0x01
    11c2:	a2 81       	ldd	r26, Z+2	; 0x02
    11c4:	b3 81       	ldd	r27, Z+3	; 0x03
    11c6:	28 16       	cp	r2, r24
    11c8:	39 06       	cpc	r3, r25
    11ca:	4a 06       	cpc	r4, r26
    11cc:	5b 06       	cpc	r5, r27
    11ce:	b0 f0       	brcs	.+44     	; 0x11fc <ParseReceived+0x50a>
    11d0:	f8 01       	movw	r30, r16
    11d2:	eb 50       	subi	r30, 0x0B	; 11
    11d4:	fe 4f       	sbci	r31, 0xFE	; 254
    11d6:	10 82       	st	Z, r1
    11d8:	43 e4       	ldi	r20, 0x43	; 67
    11da:	42 9f       	mul	r20, r18
    11dc:	c0 01       	movw	r24, r0
    11de:	43 9f       	mul	r20, r19
    11e0:	90 0d       	add	r25, r0
    11e2:	11 24       	eor	r1, r1
    11e4:	80 0f       	add	r24, r16
    11e6:	91 1f       	adc	r25, r17
    11e8:	fc 01       	movw	r30, r24
    11ea:	e2 59       	subi	r30, 0x92	; 146
    11ec:	ff 4f       	sbci	r31, 0xFF	; 255
    11ee:	31 82       	std	Z+1, r3	; 0x01
    11f0:	20 82       	st	Z, r2
    11f2:	32 96       	adiw	r30, 0x02	; 2
    11f4:	21 e0       	ldi	r18, 0x01	; 1
    11f6:	20 83       	st	Z, r18
    11f8:	31 96       	adiw	r30, 0x01	; 1
    11fa:	20 83       	st	Z, r18
    11fc:	2a e0       	ldi	r18, 0x0A	; 10
    11fe:	30 e0       	ldi	r19, 0x00	; 0
    1200:	42 e4       	ldi	r20, 0x42	; 66
    1202:	53 e0       	ldi	r21, 0x03	; 3
    1204:	b3 01       	movw	r22, r6
    1206:	c7 01       	movw	r24, r14
    1208:	43 dd       	rcall	.-1402   	; 0xc90 <mem_mem>
    120a:	00 97       	sbiw	r24, 0x00	; 0
    120c:	a1 f1       	breq	.+104    	; 0x1276 <ParseReceived+0x584>
    120e:	fc 01       	movw	r30, r24
    1210:	42 91       	ld	r20, -Z
    1212:	50 e0       	ldi	r21, 0x00	; 0
    1214:	40 53       	subi	r20, 0x30	; 48
    1216:	51 09       	sbc	r21, r1
    1218:	83 e4       	ldi	r24, 0x43	; 67
    121a:	84 9f       	mul	r24, r20
    121c:	90 01       	movw	r18, r0
    121e:	85 9f       	mul	r24, r21
    1220:	30 0d       	add	r19, r0
    1222:	11 24       	eor	r1, r1
    1224:	b9 01       	movw	r22, r18
    1226:	68 5a       	subi	r22, 0xA8	; 168
    1228:	7f 4f       	sbci	r23, 0xFF	; 255
    122a:	60 0f       	add	r22, r16
    122c:	71 1f       	adc	r23, r17
    122e:	20 0f       	add	r18, r16
    1230:	31 1f       	adc	r19, r17
    1232:	d9 01       	movw	r26, r18
    1234:	a8 5a       	subi	r26, 0xA8	; 168
    1236:	bf 4f       	sbci	r27, 0xFF	; 255
    1238:	81 e0       	ldi	r24, 0x01	; 1
    123a:	8c 93       	st	X, r24
    123c:	11 96       	adiw	r26, 0x01	; 1
    123e:	80 81       	ld	r24, Z
    1240:	80 53       	subi	r24, 0x30	; 48
    1242:	8c 93       	st	X, r24
    1244:	f9 01       	movw	r30, r18
    1246:	e6 5a       	subi	r30, 0xA6	; 166
    1248:	ff 4f       	sbci	r31, 0xFF	; 255
    124a:	80 81       	ld	r24, Z
    124c:	88 23       	and	r24, r24
    124e:	89 f0       	breq	.+34     	; 0x1272 <ParseReceived+0x580>
    1250:	f8 01       	movw	r30, r16
    1252:	84 81       	ldd	r24, Z+4	; 0x04
    1254:	95 81       	ldd	r25, Z+5	; 0x05
    1256:	a6 81       	ldd	r26, Z+6	; 0x06
    1258:	b7 81       	ldd	r27, Z+7	; 0x07
    125a:	0a 97       	sbiw	r24, 0x0a	; 10
    125c:	a1 05       	cpc	r26, r1
    125e:	b1 05       	cpc	r27, r1
    1260:	21 f4       	brne	.+8      	; 0x126a <ParseReceived+0x578>
    1262:	14 82       	std	Z+4, r1	; 0x04
    1264:	15 82       	std	Z+5, r1	; 0x05
    1266:	16 82       	std	Z+6, r1	; 0x06
    1268:	17 82       	std	Z+7, r1	; 0x07
    126a:	c8 01       	movw	r24, r16
    126c:	0e 94 88 14 	call	0x2910	; 0x2910 <ESP8266_Callback_ClientConnectionConnected>
    1270:	02 c0       	rjmp	.+4      	; 0x1276 <ParseReceived+0x584>
    1272:	c8 01       	movw	r24, r16
    1274:	a5 dc       	rcall	.-1718   	; 0xbc0 <ESP8266_Callback_ServerConnectionActive>
    1276:	29 e0       	ldi	r18, 0x09	; 9
    1278:	30 e0       	ldi	r19, 0x00	; 0
    127a:	4d e4       	ldi	r20, 0x4D	; 77
    127c:	53 e0       	ldi	r21, 0x03	; 3
    127e:	b3 01       	movw	r22, r6
    1280:	c7 01       	movw	r24, r14
    1282:	06 dd       	rcall	.-1524   	; 0xc90 <mem_mem>
    1284:	00 97       	sbiw	r24, 0x00	; 0
    1286:	09 f4       	brne	.+2      	; 0x128a <ParseReceived+0x598>
    1288:	76 c0       	rjmp	.+236    	; 0x1376 <ParseReceived+0x684>
    128a:	e8 16       	cp	r14, r24
    128c:	f9 06       	cpc	r15, r25
    128e:	09 f4       	brne	.+2      	; 0x1292 <ParseReceived+0x5a0>
    1290:	72 c0       	rjmp	.+228    	; 0x1376 <ParseReceived+0x684>
    1292:	97 01       	movw	r18, r14
    1294:	2f 5f       	subi	r18, 0xFF	; 255
    1296:	3f 4f       	sbci	r19, 0xFF	; 255
    1298:	82 17       	cp	r24, r18
    129a:	93 07       	cpc	r25, r19
    129c:	09 f0       	breq	.+2      	; 0x12a0 <ParseReceived+0x5ae>
    129e:	62 c0       	rjmp	.+196    	; 0x1364 <ParseReceived+0x672>
    12a0:	f7 01       	movw	r30, r14
    12a2:	80 81       	ld	r24, Z
    12a4:	90 e0       	ldi	r25, 0x00	; 0
    12a6:	c0 97       	sbiw	r24, 0x30	; 48
    12a8:	33 e4       	ldi	r19, 0x43	; 67
    12aa:	38 9f       	mul	r19, r24
    12ac:	f0 01       	movw	r30, r0
    12ae:	39 9f       	mul	r19, r25
    12b0:	f0 0d       	add	r31, r0
    12b2:	11 24       	eor	r1, r1
    12b4:	e0 0f       	add	r30, r16
    12b6:	f1 1f       	adc	r31, r17
    12b8:	df 01       	movw	r26, r30
    12ba:	a6 5a       	subi	r26, 0xA6	; 166
    12bc:	bf 4f       	sbci	r27, 0xFF	; 255
    12be:	2c 91       	ld	r18, X
    12c0:	e8 5a       	subi	r30, 0xA8	; 168
    12c2:	ff 4f       	sbci	r31, 0xFF	; 255
    12c4:	40 81       	ld	r20, Z
    12c6:	10 82       	st	Z, r1
    12c8:	d7 01       	movw	r26, r14
    12ca:	8c 91       	ld	r24, X
    12cc:	90 e0       	ldi	r25, 0x00	; 0
    12ce:	c0 97       	sbiw	r24, 0x30	; 48
    12d0:	38 9f       	mul	r19, r24
    12d2:	f0 01       	movw	r30, r0
    12d4:	39 9f       	mul	r19, r25
    12d6:	f0 0d       	add	r31, r0
    12d8:	11 24       	eor	r1, r1
    12da:	e0 0f       	add	r30, r16
    12dc:	f1 1f       	adc	r31, r17
    12de:	e6 5a       	subi	r30, 0xA6	; 166
    12e0:	ff 4f       	sbci	r31, 0xFF	; 255
    12e2:	10 82       	st	Z, r1
    12e4:	8c 91       	ld	r24, X
    12e6:	90 e0       	ldi	r25, 0x00	; 0
    12e8:	c0 97       	sbiw	r24, 0x30	; 48
    12ea:	38 9f       	mul	r19, r24
    12ec:	f0 01       	movw	r30, r0
    12ee:	39 9f       	mul	r19, r25
    12f0:	f0 0d       	add	r31, r0
    12f2:	11 24       	eor	r1, r1
    12f4:	e0 0f       	add	r30, r16
    12f6:	f1 1f       	adc	r31, r17
    12f8:	e7 56       	subi	r30, 0x67	; 103
    12fa:	ff 4f       	sbci	r31, 0xFF	; 255
    12fc:	10 82       	st	Z, r1
    12fe:	8c 91       	ld	r24, X
    1300:	90 e0       	ldi	r25, 0x00	; 0
    1302:	c0 97       	sbiw	r24, 0x30	; 48
    1304:	38 9f       	mul	r19, r24
    1306:	f0 01       	movw	r30, r0
    1308:	39 9f       	mul	r19, r25
    130a:	f0 0d       	add	r31, r0
    130c:	11 24       	eor	r1, r1
    130e:	e0 0f       	add	r30, r16
    1310:	f1 1f       	adc	r31, r17
    1312:	e8 56       	subi	r30, 0x68	; 104
    1314:	ff 4f       	sbci	r31, 0xFF	; 255
    1316:	10 82       	st	Z, r1
    1318:	44 23       	and	r20, r20
    131a:	69 f1       	breq	.+90     	; 0x1376 <ParseReceived+0x684>
    131c:	22 23       	and	r18, r18
    131e:	89 f0       	breq	.+34     	; 0x1342 <ParseReceived+0x650>
    1320:	8c 91       	ld	r24, X
    1322:	90 e0       	ldi	r25, 0x00	; 0
    1324:	c0 97       	sbiw	r24, 0x30	; 48
    1326:	23 e4       	ldi	r18, 0x43	; 67
    1328:	28 9f       	mul	r18, r24
    132a:	b0 01       	movw	r22, r0
    132c:	29 9f       	mul	r18, r25
    132e:	70 0d       	add	r23, r0
    1330:	11 24       	eor	r1, r1
    1332:	68 5a       	subi	r22, 0xA8	; 168
    1334:	7f 4f       	sbci	r23, 0xFF	; 255
    1336:	60 0f       	add	r22, r16
    1338:	71 1f       	adc	r23, r17
    133a:	c8 01       	movw	r24, r16
    133c:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <ESP8266_Callback_ClientConnectionClosed>
    1340:	1a c0       	rjmp	.+52     	; 0x1376 <ParseReceived+0x684>
    1342:	f7 01       	movw	r30, r14
    1344:	80 81       	ld	r24, Z
    1346:	90 e0       	ldi	r25, 0x00	; 0
    1348:	c0 97       	sbiw	r24, 0x30	; 48
    134a:	23 e4       	ldi	r18, 0x43	; 67
    134c:	28 9f       	mul	r18, r24
    134e:	b0 01       	movw	r22, r0
    1350:	29 9f       	mul	r18, r25
    1352:	70 0d       	add	r23, r0
    1354:	11 24       	eor	r1, r1
    1356:	68 5a       	subi	r22, 0xA8	; 168
    1358:	7f 4f       	sbci	r23, 0xFF	; 255
    135a:	60 0f       	add	r22, r16
    135c:	71 1f       	adc	r23, r17
    135e:	c8 01       	movw	r24, r16
    1360:	30 dc       	rcall	.-1952   	; 0xbc2 <ESP8266_Callback_ServerConnectionClosed>
    1362:	09 c0       	rjmp	.+18     	; 0x1376 <ParseReceived+0x684>
    1364:	bc 01       	movw	r22, r24
    1366:	61 50       	subi	r22, 0x01	; 1
    1368:	71 09       	sbc	r23, r1
    136a:	4a e0       	ldi	r20, 0x0A	; 10
    136c:	50 e0       	ldi	r21, 0x00	; 0
    136e:	8c e4       	ldi	r24, 0x4C	; 76
    1370:	96 e1       	ldi	r25, 0x16	; 22
    1372:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <BUFFER_Write>
    1376:	67 e5       	ldi	r22, 0x57	; 87
    1378:	73 e0       	ldi	r23, 0x03	; 3
    137a:	c7 01       	movw	r24, r14
    137c:	0e 94 03 17 	call	0x2e06	; 0x2e06 <strstr>
    1380:	00 97       	sbiw	r24, 0x00	; 0
    1382:	e9 f1       	breq	.+122    	; 0x13fe <ParseReceived+0x70c>
    1384:	dc 01       	movw	r26, r24
    1386:	2e 91       	ld	r18, -X
    1388:	30 e0       	ldi	r19, 0x00	; 0
    138a:	a9 01       	movw	r20, r18
    138c:	40 53       	subi	r20, 0x30	; 48
    138e:	51 09       	sbc	r21, r1
    1390:	83 e4       	ldi	r24, 0x43	; 67
    1392:	84 9f       	mul	r24, r20
    1394:	90 01       	movw	r18, r0
    1396:	85 9f       	mul	r24, r21
    1398:	30 0d       	add	r19, r0
    139a:	11 24       	eor	r1, r1
    139c:	20 0f       	add	r18, r16
    139e:	31 1f       	adc	r19, r17
    13a0:	f9 01       	movw	r30, r18
    13a2:	e8 5a       	subi	r30, 0xA8	; 168
    13a4:	ff 4f       	sbci	r31, 0xFF	; 255
    13a6:	10 82       	st	Z, r1
    13a8:	b9 01       	movw	r22, r18
    13aa:	66 5a       	subi	r22, 0xA6	; 166
    13ac:	7f 4f       	sbci	r23, 0xFF	; 255
    13ae:	fb 01       	movw	r30, r22
    13b0:	10 82       	st	Z, r1
    13b2:	ff 96       	adiw	r30, 0x3f	; 63
    13b4:	10 82       	st	Z, r1
    13b6:	31 97       	sbiw	r30, 0x01	; 1
    13b8:	10 82       	st	Z, r1
    13ba:	ff 97       	sbiw	r30, 0x3f	; 63
    13bc:	8c 91       	ld	r24, X
    13be:	80 53       	subi	r24, 0x30	; 48
    13c0:	80 83       	st	Z, r24
    13c2:	db 01       	movw	r26, r22
    13c4:	8c 91       	ld	r24, X
    13c6:	88 23       	and	r24, r24
    13c8:	d1 f0       	breq	.+52     	; 0x13fe <ParseReceived+0x70c>
    13ca:	f8 01       	movw	r30, r16
    13cc:	84 81       	ldd	r24, Z+4	; 0x04
    13ce:	95 81       	ldd	r25, Z+5	; 0x05
    13d0:	a6 81       	ldd	r26, Z+6	; 0x06
    13d2:	b7 81       	ldd	r27, Z+7	; 0x07
    13d4:	0a 97       	sbiw	r24, 0x0a	; 10
    13d6:	a1 05       	cpc	r26, r1
    13d8:	b1 05       	cpc	r27, r1
    13da:	21 f4       	brne	.+8      	; 0x13e4 <ParseReceived+0x6f2>
    13dc:	14 82       	std	Z+4, r1	; 0x04
    13de:	15 82       	std	Z+5, r1	; 0x05
    13e0:	16 82       	std	Z+6, r1	; 0x06
    13e2:	17 82       	std	Z+7, r1	; 0x07
    13e4:	83 e4       	ldi	r24, 0x43	; 67
    13e6:	84 9f       	mul	r24, r20
    13e8:	b0 01       	movw	r22, r0
    13ea:	85 9f       	mul	r24, r21
    13ec:	70 0d       	add	r23, r0
    13ee:	11 24       	eor	r1, r1
    13f0:	68 5a       	subi	r22, 0xA8	; 168
    13f2:	7f 4f       	sbci	r23, 0xFF	; 255
    13f4:	60 0f       	add	r22, r16
    13f6:	71 1f       	adc	r23, r17
    13f8:	c8 01       	movw	r24, r16
    13fa:	0e 94 a4 14 	call	0x2948	; 0x2948 <ESP8266_Callback_ClientConnectionError>
    13fe:	f8 01       	movw	r30, r16
    1400:	84 81       	ldd	r24, Z+4	; 0x04
    1402:	95 81       	ldd	r25, Z+5	; 0x05
    1404:	a6 81       	ldd	r26, Z+6	; 0x06
    1406:	b7 81       	ldd	r27, Z+7	; 0x07
    1408:	fc 01       	movw	r30, r24
    140a:	31 97       	sbiw	r30, 0x01	; 1
    140c:	e0 32       	cpi	r30, 0x20	; 32
    140e:	f1 05       	cpc	r31, r1
    1410:	08 f0       	brcs	.+2      	; 0x1414 <ParseReceived+0x722>
    1412:	a7 c2       	rjmp	.+1358   	; 0x1962 <ParseReceived+0xc70>
    1414:	88 27       	eor	r24, r24
    1416:	ee 58       	subi	r30, 0x8E	; 142
    1418:	ff 4f       	sbci	r31, 0xFF	; 255
    141a:	8f 4f       	sbci	r24, 0xFF	; 255
    141c:	0c 94 88 15 	jmp	0x2b10	; 0x2b10 <__tablejump2__>
    1420:	47 e0       	ldi	r20, 0x07	; 7
    1422:	50 e0       	ldi	r21, 0x00	; 0
    1424:	67 e6       	ldi	r22, 0x67	; 103
    1426:	73 e0       	ldi	r23, 0x03	; 3
    1428:	c7 01       	movw	r24, r14
    142a:	0e 94 e6 16 	call	0x2dcc	; 0x2dcc <strncmp>
    142e:	89 2b       	or	r24, r25
    1430:	89 f4       	brne	.+34     	; 0x1454 <ParseReceived+0x762>
    1432:	87 e0       	ldi	r24, 0x07	; 7
    1434:	e0 e6       	ldi	r30, 0x60	; 96
    1436:	f3 e0       	ldi	r31, 0x03	; 3
    1438:	d8 01       	movw	r26, r16
    143a:	18 96       	adiw	r26, 0x08	; 8
    143c:	01 90       	ld	r0, Z+
    143e:	0d 92       	st	X+, r0
    1440:	8a 95       	dec	r24
    1442:	e1 f7       	brne	.-8      	; 0x143c <ParseReceived+0x74a>
    1444:	f8 01       	movw	r30, r16
    1446:	eb 5e       	subi	r30, 0xEB	; 235
    1448:	fd 4f       	sbci	r31, 0xFD	; 253
    144a:	d7 01       	movw	r26, r14
    144c:	17 96       	adiw	r26, 0x07	; 7
    144e:	8c 91       	ld	r24, X
    1450:	80 53       	subi	r24, 0x30	; 48
    1452:	80 83       	st	Z, r24
    1454:	69 ed       	ldi	r22, 0xD9	; 217
    1456:	72 e0       	ldi	r23, 0x02	; 2
    1458:	c7 01       	movw	r24, r14
    145a:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
    145e:	89 2b       	or	r24, r25
    1460:	09 f0       	breq	.+2      	; 0x1464 <ParseReceived+0x772>
    1462:	cc c2       	rjmp	.+1432   	; 0x19fc <ParseReceived+0xd0a>
    1464:	f8 01       	movw	r30, r16
    1466:	14 82       	std	Z+4, r1	; 0x04
    1468:	15 82       	std	Z+5, r1	; 0x05
    146a:	16 82       	std	Z+6, r1	; 0x06
    146c:	17 82       	std	Z+7, r1	; 0x07
    146e:	60 e6       	ldi	r22, 0x60	; 96
    1470:	73 e0       	ldi	r23, 0x03	; 3
    1472:	c7 01       	movw	r24, r14
    1474:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
    1478:	89 2b       	or	r24, r25
    147a:	09 f0       	breq	.+2      	; 0x147e <ParseReceived+0x78c>
    147c:	72 c2       	rjmp	.+1252   	; 0x1962 <ParseReceived+0xc70>
    147e:	d8 01       	movw	r26, r16
    1480:	14 96       	adiw	r26, 0x04	; 4
    1482:	1d 92       	st	X+, r1
    1484:	1d 92       	st	X+, r1
    1486:	1d 92       	st	X+, r1
    1488:	1c 92       	st	X, r1
    148a:	17 97       	sbiw	r26, 0x07	; 7
    148c:	c8 01       	movw	r24, r16
    148e:	0e 94 42 14 	call	0x2884	; 0x2884 <ESP8266_Callback_WifiConnectFailed>
    1492:	67 c2       	rjmp	.+1230   	; 0x1962 <ParseReceived+0xc70>
    1494:	4b e0       	ldi	r20, 0x0B	; 11
    1496:	50 e0       	ldi	r21, 0x00	; 0
    1498:	6f e6       	ldi	r22, 0x6F	; 111
    149a:	73 e0       	ldi	r23, 0x03	; 3
    149c:	c7 01       	movw	r24, r14
    149e:	0e 94 e6 16 	call	0x2dcc	; 0x2dcc <strncmp>
    14a2:	89 2b       	or	r24, r25
    14a4:	09 f0       	breq	.+2      	; 0x14a8 <ParseReceived+0x7b6>
    14a6:	66 c0       	rjmp	.+204    	; 0x1574 <ParseReceived+0x882>
    14a8:	6b e7       	ldi	r22, 0x7B	; 123
    14aa:	73 e0       	ldi	r23, 0x03	; 3
    14ac:	c7 01       	movw	r24, r14
    14ae:	0e 94 03 17 	call	0x2e06	; 0x2e06 <strstr>
    14b2:	89 2b       	or	r24, r25
    14b4:	09 f4       	brne	.+2      	; 0x14b8 <ParseReceived+0x7c6>
    14b6:	5e c0       	rjmp	.+188    	; 0x1574 <ParseReceived+0x882>
    14b8:	f7 01       	movw	r30, r14
    14ba:	80 81       	ld	r24, Z
    14bc:	88 23       	and	r24, r24
    14be:	09 f4       	brne	.+2      	; 0x14c2 <ParseReceived+0x7d0>
    14c0:	59 c0       	rjmp	.+178    	; 0x1574 <ParseReceived+0x882>
    14c2:	82 32       	cpi	r24, 0x22	; 34
    14c4:	09 f4       	brne	.+2      	; 0x14c8 <ParseReceived+0x7d6>
    14c6:	a2 c2       	rjmp	.+1348   	; 0x1a0c <ParseReceived+0xd1a>
    14c8:	31 96       	adiw	r30, 0x01	; 1
    14ca:	df 01       	movw	r26, r30
    14cc:	81 91       	ld	r24, Z+
    14ce:	88 23       	and	r24, r24
    14d0:	09 f4       	brne	.+2      	; 0x14d4 <ParseReceived+0x7e2>
    14d2:	50 c0       	rjmp	.+160    	; 0x1574 <ParseReceived+0x882>
    14d4:	82 32       	cpi	r24, 0x22	; 34
    14d6:	c9 f7       	brne	.-14     	; 0x14ca <ParseReceived+0x7d8>
    14d8:	9a c2       	rjmp	.+1332   	; 0x1a0e <ParseReceived+0xd1c>
    14da:	61 e0       	ldi	r22, 0x01	; 1
    14dc:	69 0f       	add	r22, r25
    14de:	af 01       	movw	r20, r30
    14e0:	d8 01       	movw	r26, r16
    14e2:	a9 0f       	add	r26, r25
    14e4:	b1 1d       	adc	r27, r1
    14e6:	a4 50       	subi	r26, 0x04	; 4
    14e8:	be 4f       	sbci	r27, 0xFE	; 254
    14ea:	8c 93       	st	X, r24
    14ec:	81 91       	ld	r24, Z+
    14ee:	2f 5f       	subi	r18, 0xFF	; 255
    14f0:	3f 4f       	sbci	r19, 0xFF	; 255
    14f2:	88 23       	and	r24, r24
    14f4:	81 f0       	breq	.+32     	; 0x1516 <ParseReceived+0x824>
    14f6:	96 2f       	mov	r25, r22
    14f8:	af 01       	movw	r20, r30
    14fa:	41 50       	subi	r20, 0x01	; 1
    14fc:	51 09       	sbc	r21, r1
    14fe:	82 32       	cpi	r24, 0x22	; 34
    1500:	61 f7       	brne	.-40     	; 0x14da <ParseReceived+0x7e8>
    1502:	60 81       	ld	r22, Z
    1504:	6c 32       	cpi	r22, 0x2C	; 44
    1506:	49 f7       	brne	.-46     	; 0x14da <ParseReceived+0x7e8>
    1508:	d9 01       	movw	r26, r18
    150a:	6c 91       	ld	r22, X
    150c:	62 32       	cpi	r22, 0x22	; 34
    150e:	29 f7       	brne	.-54     	; 0x14da <ParseReceived+0x7e8>
    1510:	69 2f       	mov	r22, r25
    1512:	01 c0       	rjmp	.+2      	; 0x1516 <ParseReceived+0x824>
    1514:	60 e0       	ldi	r22, 0x00	; 0
    1516:	f8 01       	movw	r30, r16
    1518:	e6 0f       	add	r30, r22
    151a:	f1 1d       	adc	r31, r1
    151c:	e4 50       	subi	r30, 0x04	; 4
    151e:	fe 4f       	sbci	r31, 0xFE	; 254
    1520:	10 82       	st	Z, r1
    1522:	6a 01       	movw	r12, r20
    1524:	b3 e0       	ldi	r27, 0x03	; 3
    1526:	cb 0e       	add	r12, r27
    1528:	d1 1c       	adc	r13, r1
    152a:	ae 01       	movw	r20, r28
    152c:	4e 5f       	subi	r20, 0xFE	; 254
    152e:	5f 4f       	sbci	r21, 0xFF	; 255
    1530:	b8 01       	movw	r22, r16
    1532:	64 5f       	subi	r22, 0xF4	; 244
    1534:	7d 4f       	sbci	r23, 0xFD	; 253
    1536:	c6 01       	movw	r24, r12
    1538:	5f da       	rcall	.-2882   	; 0x9f8 <ParseMAC>
    153a:	2a 81       	ldd	r18, Y+2	; 0x02
    153c:	30 e0       	ldi	r19, 0x00	; 0
    153e:	2e 5f       	subi	r18, 0xFE	; 254
    1540:	3f 4f       	sbci	r19, 0xFF	; 255
    1542:	c2 0e       	add	r12, r18
    1544:	d3 1e       	adc	r13, r19
    1546:	be 01       	movw	r22, r28
    1548:	6e 5f       	subi	r22, 0xFE	; 254
    154a:	7f 4f       	sbci	r23, 0xFF	; 255
    154c:	c6 01       	movw	r24, r12
    154e:	76 d8       	rcall	.-3860   	; 0x63c <ParseNumber>
    1550:	f8 01       	movw	r30, r16
    1552:	ee 5e       	subi	r30, 0xEE	; 238
    1554:	fd 4f       	sbci	r31, 0xFD	; 253
    1556:	60 83       	st	Z, r22
    1558:	8a 81       	ldd	r24, Y+2	; 0x02
    155a:	90 e0       	ldi	r25, 0x00	; 0
    155c:	01 96       	adiw	r24, 0x01	; 1
    155e:	be 01       	movw	r22, r28
    1560:	6e 5f       	subi	r22, 0xFE	; 254
    1562:	7f 4f       	sbci	r23, 0xFF	; 255
    1564:	8c 0d       	add	r24, r12
    1566:	9d 1d       	adc	r25, r13
    1568:	69 d8       	rcall	.-3886   	; 0x63c <ParseNumber>
    156a:	f8 01       	movw	r30, r16
    156c:	ed 5e       	subi	r30, 0xED	; 237
    156e:	fd 4f       	sbci	r31, 0xFD	; 253
    1570:	71 83       	std	Z+1, r23	; 0x01
    1572:	60 83       	st	Z, r22
    1574:	69 ed       	ldi	r22, 0xD9	; 217
    1576:	72 e0       	ldi	r23, 0x02	; 2
    1578:	c7 01       	movw	r24, r14
    157a:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
    157e:	89 2b       	or	r24, r25
    1580:	09 f0       	breq	.+2      	; 0x1584 <ParseReceived+0x892>
    1582:	0e c2       	rjmp	.+1052   	; 0x19a0 <ParseReceived+0xcae>
    1584:	f8 01       	movw	r30, r16
    1586:	14 82       	std	Z+4, r1	; 0x04
    1588:	15 82       	std	Z+5, r1	; 0x05
    158a:	16 82       	std	Z+6, r1	; 0x06
    158c:	17 82       	std	Z+7, r1	; 0x07
    158e:	e9 c1       	rjmp	.+978    	; 0x1962 <ParseReceived+0xc70>
    1590:	46 e0       	ldi	r20, 0x06	; 6
    1592:	50 e0       	ldi	r21, 0x00	; 0
    1594:	6b ef       	ldi	r22, 0xFB	; 251
    1596:	74 e0       	ldi	r23, 0x04	; 4
    1598:	c7 01       	movw	r24, r14
    159a:	0e 94 e6 16 	call	0x2dcc	; 0x2dcc <strncmp>
    159e:	89 2b       	or	r24, r25
    15a0:	09 f0       	breq	.+2      	; 0x15a4 <ParseReceived+0x8b2>
    15a2:	ba c0       	rjmp	.+372    	; 0x1718 <ParseReceived+0xa26>
    15a4:	d7 01       	movw	r26, r14
    15a6:	8c 91       	ld	r24, X
    15a8:	88 23       	and	r24, r24
    15aa:	59 f0       	breq	.+22     	; 0x15c2 <ParseReceived+0x8d0>
    15ac:	8a 33       	cpi	r24, 0x3A	; 58
    15ae:	59 f0       	breq	.+22     	; 0x15c6 <ParseReceived+0x8d4>
    15b0:	11 96       	adiw	r26, 0x01	; 1
    15b2:	02 c0       	rjmp	.+4      	; 0x15b8 <ParseReceived+0x8c6>
    15b4:	8a 33       	cpi	r24, 0x3A	; 58
    15b6:	41 f0       	breq	.+16     	; 0x15c8 <ParseReceived+0x8d6>
    15b8:	fd 01       	movw	r30, r26
    15ba:	8d 91       	ld	r24, X+
    15bc:	81 11       	cpse	r24, r1
    15be:	fa cf       	rjmp	.-12     	; 0x15b4 <ParseReceived+0x8c2>
    15c0:	03 c0       	rjmp	.+6      	; 0x15c8 <ParseReceived+0x8d6>
    15c2:	f7 01       	movw	r30, r14
    15c4:	01 c0       	rjmp	.+2      	; 0x15c8 <ParseReceived+0x8d6>
    15c6:	f7 01       	movw	r30, r14
    15c8:	30 97       	sbiw	r30, 0x00	; 0
    15ca:	09 f4       	brne	.+2      	; 0x15ce <ParseReceived+0x8dc>
    15cc:	a5 c0       	rjmp	.+330    	; 0x1718 <ParseReceived+0xa26>
    15ce:	d8 01       	movw	r26, r16
    15d0:	a3 53       	subi	r26, 0x33	; 51
    15d2:	be 4f       	sbci	r27, 0xFE	; 254
    15d4:	1c 92       	st	X, r1
    15d6:	81 81       	ldd	r24, Z+1	; 0x01
    15d8:	82 32       	cpi	r24, 0x22	; 34
    15da:	29 f0       	breq	.+10     	; 0x15e6 <ParseReceived+0x8f4>
    15dc:	6f 01       	movw	r12, r30
    15de:	bf ef       	ldi	r27, 0xFF	; 255
    15e0:	cb 1a       	sub	r12, r27
    15e2:	db 0a       	sbc	r13, r27
    15e4:	04 c0       	rjmp	.+8      	; 0x15ee <ParseReceived+0x8fc>
    15e6:	6f 01       	movw	r12, r30
    15e8:	22 e0       	ldi	r18, 0x02	; 2
    15ea:	c2 0e       	add	r12, r18
    15ec:	d1 1c       	adc	r13, r1
    15ee:	d6 01       	movw	r26, r12
    15f0:	8c 91       	ld	r24, X
    15f2:	88 23       	and	r24, r24
    15f4:	29 f1       	breq	.+74     	; 0x1640 <ParseReceived+0x94e>
    15f6:	11 96       	adiw	r26, 0x01	; 1
    15f8:	a6 01       	movw	r20, r12
    15fa:	4e 5f       	subi	r20, 0xFE	; 254
    15fc:	5f 4f       	sbci	r21, 0xFF	; 255
    15fe:	90 e0       	ldi	r25, 0x00	; 0
    1600:	10 c0       	rjmp	.+32     	; 0x1622 <ParseReceived+0x930>
    1602:	61 e0       	ldi	r22, 0x01	; 1
    1604:	69 0f       	add	r22, r25
    1606:	6d 01       	movw	r12, r26
    1608:	98 01       	movw	r18, r16
    160a:	29 0f       	add	r18, r25
    160c:	31 1d       	adc	r19, r1
    160e:	23 53       	subi	r18, 0x33	; 51
    1610:	3e 4f       	sbci	r19, 0xFE	; 254
    1612:	f9 01       	movw	r30, r18
    1614:	80 83       	st	Z, r24
    1616:	8d 91       	ld	r24, X+
    1618:	4f 5f       	subi	r20, 0xFF	; 255
    161a:	5f 4f       	sbci	r21, 0xFF	; 255
    161c:	88 23       	and	r24, r24
    161e:	89 f0       	breq	.+34     	; 0x1642 <ParseReceived+0x950>
    1620:	96 2f       	mov	r25, r22
    1622:	6d 01       	movw	r12, r26
    1624:	f1 e0       	ldi	r31, 0x01	; 1
    1626:	cf 1a       	sub	r12, r31
    1628:	d1 08       	sbc	r13, r1
    162a:	82 32       	cpi	r24, 0x22	; 34
    162c:	51 f7       	brne	.-44     	; 0x1602 <ParseReceived+0x910>
    162e:	2c 91       	ld	r18, X
    1630:	2c 32       	cpi	r18, 0x2C	; 44
    1632:	39 f7       	brne	.-50     	; 0x1602 <ParseReceived+0x910>
    1634:	fa 01       	movw	r30, r20
    1636:	20 81       	ld	r18, Z
    1638:	22 32       	cpi	r18, 0x22	; 34
    163a:	19 f7       	brne	.-58     	; 0x1602 <ParseReceived+0x910>
    163c:	69 2f       	mov	r22, r25
    163e:	01 c0       	rjmp	.+2      	; 0x1642 <ParseReceived+0x950>
    1640:	60 e0       	ldi	r22, 0x00	; 0
    1642:	d8 01       	movw	r26, r16
    1644:	a6 0f       	add	r26, r22
    1646:	b1 1d       	adc	r27, r1
    1648:	a3 53       	subi	r26, 0x33	; 51
    164a:	be 4f       	sbci	r27, 0xFE	; 254
    164c:	1c 92       	st	X, r1
    164e:	96 01       	movw	r18, r12
    1650:	2d 5f       	subi	r18, 0xFD	; 253
    1652:	3f 4f       	sbci	r19, 0xFF	; 255
    1654:	d6 01       	movw	r26, r12
    1656:	13 96       	adiw	r26, 0x03	; 3
    1658:	8c 91       	ld	r24, X
    165a:	88 23       	and	r24, r24
    165c:	d9 f0       	breq	.+54     	; 0x1694 <ParseReceived+0x9a2>
    165e:	f6 01       	movw	r30, r12
    1660:	34 96       	adiw	r30, 0x04	; 4
    1662:	90 e0       	ldi	r25, 0x00	; 0
    1664:	0d c0       	rjmp	.+26     	; 0x1680 <ParseReceived+0x98e>
    1666:	41 e0       	ldi	r20, 0x01	; 1
    1668:	49 0f       	add	r20, r25
    166a:	9f 01       	movw	r18, r30
    166c:	d8 01       	movw	r26, r16
    166e:	a9 0f       	add	r26, r25
    1670:	b1 1d       	adc	r27, r1
    1672:	af 51       	subi	r26, 0x1F	; 31
    1674:	be 4f       	sbci	r27, 0xFE	; 254
    1676:	8c 93       	st	X, r24
    1678:	81 91       	ld	r24, Z+
    167a:	88 23       	and	r24, r24
    167c:	61 f0       	breq	.+24     	; 0x1696 <ParseReceived+0x9a4>
    167e:	94 2f       	mov	r25, r20
    1680:	9f 01       	movw	r18, r30
    1682:	21 50       	subi	r18, 0x01	; 1
    1684:	31 09       	sbc	r19, r1
    1686:	82 32       	cpi	r24, 0x22	; 34
    1688:	71 f7       	brne	.-36     	; 0x1666 <ParseReceived+0x974>
    168a:	40 81       	ld	r20, Z
    168c:	4c 32       	cpi	r20, 0x2C	; 44
    168e:	59 f7       	brne	.-42     	; 0x1666 <ParseReceived+0x974>
    1690:	49 2f       	mov	r20, r25
    1692:	01 c0       	rjmp	.+2      	; 0x1696 <ParseReceived+0x9a4>
    1694:	40 e0       	ldi	r20, 0x00	; 0
    1696:	f8 01       	movw	r30, r16
    1698:	e4 0f       	add	r30, r20
    169a:	f1 1d       	adc	r31, r1
    169c:	ef 51       	subi	r30, 0x1F	; 31
    169e:	fe 4f       	sbci	r31, 0xFE	; 254
    16a0:	10 82       	st	Z, r1
    16a2:	69 01       	movw	r12, r18
    16a4:	b2 e0       	ldi	r27, 0x02	; 2
    16a6:	cb 0e       	add	r12, r27
    16a8:	d1 1c       	adc	r13, r1
    16aa:	be 01       	movw	r22, r28
    16ac:	6e 5f       	subi	r22, 0xFE	; 254
    16ae:	7f 4f       	sbci	r23, 0xFF	; 255
    16b0:	c6 01       	movw	r24, r12
    16b2:	0e 94 1e 03 	call	0x63c	; 0x63c <ParseNumber>
    16b6:	f8 01       	movw	r30, r16
    16b8:	ee 50       	subi	r30, 0x0E	; 14
    16ba:	fe 4f       	sbci	r31, 0xFE	; 254
    16bc:	60 83       	st	Z, r22
    16be:	2a 81       	ldd	r18, Y+2	; 0x02
    16c0:	30 e0       	ldi	r19, 0x00	; 0
    16c2:	2f 5f       	subi	r18, 0xFF	; 255
    16c4:	3f 4f       	sbci	r19, 0xFF	; 255
    16c6:	c2 0e       	add	r12, r18
    16c8:	d3 1e       	adc	r13, r19
    16ca:	be 01       	movw	r22, r28
    16cc:	6e 5f       	subi	r22, 0xFE	; 254
    16ce:	7f 4f       	sbci	r23, 0xFF	; 255
    16d0:	c6 01       	movw	r24, r12
    16d2:	0e 94 1e 03 	call	0x63c	; 0x63c <ParseNumber>
    16d6:	f8 01       	movw	r30, r16
    16d8:	ef 50       	subi	r30, 0x0F	; 15
    16da:	fe 4f       	sbci	r31, 0xFE	; 254
    16dc:	60 83       	st	Z, r22
    16de:	8a 81       	ldd	r24, Y+2	; 0x02
    16e0:	90 e0       	ldi	r25, 0x00	; 0
    16e2:	01 96       	adiw	r24, 0x01	; 1
    16e4:	c8 0e       	add	r12, r24
    16e6:	d9 1e       	adc	r13, r25
    16e8:	be 01       	movw	r22, r28
    16ea:	6e 5f       	subi	r22, 0xFE	; 254
    16ec:	7f 4f       	sbci	r23, 0xFF	; 255
    16ee:	c6 01       	movw	r24, r12
    16f0:	0e 94 1e 03 	call	0x63c	; 0x63c <ParseNumber>
    16f4:	f8 01       	movw	r30, r16
    16f6:	ed 50       	subi	r30, 0x0D	; 13
    16f8:	fe 4f       	sbci	r31, 0xFE	; 254
    16fa:	60 83       	st	Z, r22
    16fc:	8a 81       	ldd	r24, Y+2	; 0x02
    16fe:	90 e0       	ldi	r25, 0x00	; 0
    1700:	01 96       	adiw	r24, 0x01	; 1
    1702:	be 01       	movw	r22, r28
    1704:	6e 5f       	subi	r22, 0xFE	; 254
    1706:	7f 4f       	sbci	r23, 0xFF	; 255
    1708:	8c 0d       	add	r24, r12
    170a:	9d 1d       	adc	r25, r13
    170c:	0e 94 1e 03 	call	0x63c	; 0x63c <ParseNumber>
    1710:	f8 01       	movw	r30, r16
    1712:	ec 50       	subi	r30, 0x0C	; 12
    1714:	fe 4f       	sbci	r31, 0xFE	; 254
    1716:	60 83       	st	Z, r22
    1718:	69 ed       	ldi	r22, 0xD9	; 217
    171a:	72 e0       	ldi	r23, 0x02	; 2
    171c:	c7 01       	movw	r24, r14
    171e:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
    1722:	89 2b       	or	r24, r25
    1724:	09 f0       	breq	.+2      	; 0x1728 <ParseReceived+0xa36>
    1726:	3c c1       	rjmp	.+632    	; 0x19a0 <ParseReceived+0xcae>
    1728:	f8 01       	movw	r30, r16
    172a:	14 82       	std	Z+4, r1	; 0x04
    172c:	15 82       	std	Z+5, r1	; 0x05
    172e:	16 82       	std	Z+6, r1	; 0x06
    1730:	17 82       	std	Z+7, r1	; 0x07
    1732:	17 c1       	rjmp	.+558    	; 0x1962 <ParseReceived+0xc70>
    1734:	47 e0       	ldi	r20, 0x07	; 7
    1736:	50 e0       	ldi	r21, 0x00	; 0
    1738:	63 e8       	ldi	r22, 0x83	; 131
    173a:	73 e0       	ldi	r23, 0x03	; 3
    173c:	c7 01       	movw	r24, r14
    173e:	0e 94 e6 16 	call	0x2dcc	; 0x2dcc <strncmp>
    1742:	89 2b       	or	r24, r25
    1744:	19 f4       	brne	.+6      	; 0x174c <ParseReceived+0xa5a>
    1746:	b7 01       	movw	r22, r14
    1748:	c8 01       	movw	r24, r16
    174a:	61 d8       	rcall	.-3902   	; 0x80e <ParseCIPSTA>
    174c:	69 ed       	ldi	r22, 0xD9	; 217
    174e:	72 e0       	ldi	r23, 0x02	; 2
    1750:	c7 01       	movw	r24, r14
    1752:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
    1756:	89 2b       	or	r24, r25
    1758:	09 f0       	breq	.+2      	; 0x175c <ParseReceived+0xa6a>
    175a:	22 c1       	rjmp	.+580    	; 0x19a0 <ParseReceived+0xcae>
    175c:	d8 01       	movw	r26, r16
    175e:	14 96       	adiw	r26, 0x04	; 4
    1760:	1d 92       	st	X+, r1
    1762:	1d 92       	st	X+, r1
    1764:	1d 92       	st	X+, r1
    1766:	1c 92       	st	X, r1
    1768:	17 97       	sbiw	r26, 0x07	; 7
    176a:	c8 01       	movw	r24, r16
    176c:	0e 94 68 14 	call	0x28d0	; 0x28d0 <ESP8266_Callback_WifiIPSet>
    1770:	f8 c0       	rjmp	.+496    	; 0x1962 <ParseReceived+0xc70>
    1772:	46 e0       	ldi	r20, 0x06	; 6
    1774:	50 e0       	ldi	r21, 0x00	; 0
    1776:	6b e8       	ldi	r22, 0x8B	; 139
    1778:	73 e0       	ldi	r23, 0x03	; 3
    177a:	c7 01       	movw	r24, r14
    177c:	0e 94 e6 16 	call	0x2dcc	; 0x2dcc <strncmp>
    1780:	89 2b       	or	r24, r25
    1782:	19 f4       	brne	.+6      	; 0x178a <ParseReceived+0xa98>
    1784:	b7 01       	movw	r22, r14
    1786:	c8 01       	movw	r24, r16
    1788:	42 d8       	rcall	.-3964   	; 0x80e <ParseCIPSTA>
    178a:	69 ed       	ldi	r22, 0xD9	; 217
    178c:	72 e0       	ldi	r23, 0x02	; 2
    178e:	c7 01       	movw	r24, r14
    1790:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
    1794:	89 2b       	or	r24, r25
    1796:	09 f0       	breq	.+2      	; 0x179a <ParseReceived+0xaa8>
    1798:	03 c1       	rjmp	.+518    	; 0x19a0 <ParseReceived+0xcae>
    179a:	f8 01       	movw	r30, r16
    179c:	14 82       	std	Z+4, r1	; 0x04
    179e:	15 82       	std	Z+5, r1	; 0x05
    17a0:	16 82       	std	Z+6, r1	; 0x06
    17a2:	17 82       	std	Z+7, r1	; 0x07
    17a4:	de c0       	rjmp	.+444    	; 0x1962 <ParseReceived+0xc70>
    17a6:	69 ed       	ldi	r22, 0xD9	; 217
    17a8:	72 e0       	ldi	r23, 0x02	; 2
    17aa:	c7 01       	movw	r24, r14
    17ac:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
    17b0:	89 2b       	or	r24, r25
    17b2:	09 f0       	breq	.+2      	; 0x17b6 <ParseReceived+0xac4>
    17b4:	f5 c0       	rjmp	.+490    	; 0x19a0 <ParseReceived+0xcae>
    17b6:	d8 01       	movw	r26, r16
    17b8:	14 96       	adiw	r26, 0x04	; 4
    17ba:	1d 92       	st	X+, r1
    17bc:	1d 92       	st	X+, r1
    17be:	1d 92       	st	X+, r1
    17c0:	1c 92       	st	X, r1
    17c2:	17 97       	sbiw	r26, 0x07	; 7
    17c4:	f8 01       	movw	r30, r16
    17c6:	e5 53       	subi	r30, 0x35	; 53
    17c8:	fe 4f       	sbci	r31, 0xFE	; 254
    17ca:	80 81       	ld	r24, Z
    17cc:	31 96       	adiw	r30, 0x01	; 1
    17ce:	80 83       	st	Z, r24
    17d0:	c8 c0       	rjmp	.+400    	; 0x1962 <ParseReceived+0xc70>
    17d2:	69 ed       	ldi	r22, 0xD9	; 217
    17d4:	72 e0       	ldi	r23, 0x02	; 2
    17d6:	c7 01       	movw	r24, r14
    17d8:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
    17dc:	89 2b       	or	r24, r25
    17de:	09 f0       	breq	.+2      	; 0x17e2 <ParseReceived+0xaf0>
    17e0:	df c0       	rjmp	.+446    	; 0x19a0 <ParseReceived+0xcae>
    17e2:	f8 01       	movw	r30, r16
    17e4:	14 82       	std	Z+4, r1	; 0x04
    17e6:	15 82       	std	Z+5, r1	; 0x05
    17e8:	16 82       	std	Z+6, r1	; 0x06
    17ea:	17 82       	std	Z+7, r1	; 0x07
    17ec:	ba c0       	rjmp	.+372    	; 0x1962 <ParseReceived+0xc70>
    17ee:	69 ed       	ldi	r22, 0xD9	; 217
    17f0:	72 e0       	ldi	r23, 0x02	; 2
    17f2:	c7 01       	movw	r24, r14
    17f4:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
    17f8:	89 2b       	or	r24, r25
    17fa:	09 f0       	breq	.+2      	; 0x17fe <ParseReceived+0xb0c>
    17fc:	d1 c0       	rjmp	.+418    	; 0x19a0 <ParseReceived+0xcae>
    17fe:	8d e1       	ldi	r24, 0x1D	; 29
    1800:	90 e0       	ldi	r25, 0x00	; 0
    1802:	a0 e0       	ldi	r26, 0x00	; 0
    1804:	b0 e0       	ldi	r27, 0x00	; 0
    1806:	f8 01       	movw	r30, r16
    1808:	84 83       	std	Z+4, r24	; 0x04
    180a:	95 83       	std	Z+5, r25	; 0x05
    180c:	a6 83       	std	Z+6, r26	; 0x06
    180e:	b7 83       	std	Z+7, r27	; 0x07
    1810:	ef 5d       	subi	r30, 0xDF	; 223
    1812:	fd 4f       	sbci	r31, 0xFD	; 253
    1814:	81 81       	ldd	r24, Z+1	; 0x01
    1816:	81 60       	ori	r24, 0x01	; 1
    1818:	81 83       	std	Z+1, r24	; 0x01
    181a:	88 e0       	ldi	r24, 0x08	; 8
    181c:	e2 e9       	ldi	r30, 0x92	; 146
    181e:	f3 e0       	ldi	r31, 0x03	; 3
    1820:	d8 01       	movw	r26, r16
    1822:	18 96       	adiw	r26, 0x08	; 8
    1824:	01 90       	ld	r0, Z+
    1826:	0d 92       	st	X+, r0
    1828:	8a 95       	dec	r24
    182a:	e1 f7       	brne	.-8      	; 0x1824 <ParseReceived+0xb32>
    182c:	9a c0       	rjmp	.+308    	; 0x1962 <ParseReceived+0xc70>
    182e:	69 ed       	ldi	r22, 0xD9	; 217
    1830:	72 e0       	ldi	r23, 0x02	; 2
    1832:	c7 01       	movw	r24, r14
    1834:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
    1838:	89 2b       	or	r24, r25
    183a:	09 f0       	breq	.+2      	; 0x183e <ParseReceived+0xb4c>
    183c:	01 c1       	rjmp	.+514    	; 0x1a40 <ParseReceived+0xd4e>
    183e:	d8 01       	movw	r26, r16
    1840:	14 96       	adiw	r26, 0x04	; 4
    1842:	1d 92       	st	X+, r1
    1844:	1d 92       	st	X+, r1
    1846:	1d 92       	st	X+, r1
    1848:	1c 92       	st	X, r1
    184a:	17 97       	sbiw	r26, 0x07	; 7
    184c:	6e ed       	ldi	r22, 0xDE	; 222
    184e:	72 e0       	ldi	r23, 0x02	; 2
    1850:	c7 01       	movw	r24, r14
    1852:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
    1856:	89 2b       	or	r24, r25
    1858:	09 f0       	breq	.+2      	; 0x185c <ParseReceived+0xb6a>
    185a:	e9 c0       	rjmp	.+466    	; 0x1a2e <ParseReceived+0xd3c>
    185c:	f8 01       	movw	r30, r16
    185e:	14 82       	std	Z+4, r1	; 0x04
    1860:	15 82       	std	Z+5, r1	; 0x05
    1862:	16 82       	std	Z+6, r1	; 0x06
    1864:	17 82       	std	Z+7, r1	; 0x07
    1866:	ea 5e       	subi	r30, 0xEA	; 234
    1868:	fd 4f       	sbci	r31, 0xFD	; 253
    186a:	80 81       	ld	r24, Z
    186c:	f3 e4       	ldi	r31, 0x43	; 67
    186e:	8f 02       	muls	r24, r31
    1870:	c0 01       	movw	r24, r0
    1872:	11 24       	eor	r1, r1
    1874:	98 01       	movw	r18, r16
    1876:	28 0f       	add	r18, r24
    1878:	39 1f       	adc	r19, r25
    187a:	f9 01       	movw	r30, r18
    187c:	e8 5a       	subi	r30, 0xA8	; 168
    187e:	ff 4f       	sbci	r31, 0xFF	; 255
    1880:	10 82       	st	Z, r1
    1882:	32 96       	adiw	r30, 0x02	; 2
    1884:	10 82       	st	Z, r1
    1886:	ff 96       	adiw	r30, 0x3f	; 63
    1888:	10 82       	st	Z, r1
    188a:	31 97       	sbiw	r30, 0x01	; 1
    188c:	10 82       	st	Z, r1
    188e:	bc 01       	movw	r22, r24
    1890:	68 5a       	subi	r22, 0xA8	; 168
    1892:	7f 4f       	sbci	r23, 0xFF	; 255
    1894:	60 0f       	add	r22, r16
    1896:	71 1f       	adc	r23, r17
    1898:	c8 01       	movw	r24, r16
    189a:	0e 94 a4 14 	call	0x2948	; 0x2948 <ESP8266_Callback_ClientConnectionError>
    189e:	61 c0       	rjmp	.+194    	; 0x1962 <ParseReceived+0xc70>
    18a0:	69 ed       	ldi	r22, 0xD9	; 217
    18a2:	72 e0       	ldi	r23, 0x02	; 2
    18a4:	c7 01       	movw	r24, r14
    18a6:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
    18aa:	89 2b       	or	r24, r25
    18ac:	09 f0       	breq	.+2      	; 0x18b0 <ParseReceived+0xbbe>
    18ae:	78 c0       	rjmp	.+240    	; 0x19a0 <ParseReceived+0xcae>
    18b0:	d8 01       	movw	r26, r16
    18b2:	14 96       	adiw	r26, 0x04	; 4
    18b4:	1d 92       	st	X+, r1
    18b6:	1d 92       	st	X+, r1
    18b8:	1d 92       	st	X+, r1
    18ba:	1c 92       	st	X, r1
    18bc:	17 97       	sbiw	r26, 0x07	; 7
    18be:	51 c0       	rjmp	.+162    	; 0x1962 <ParseReceived+0xc70>
    18c0:	66 ee       	ldi	r22, 0xE6	; 230
    18c2:	72 e0       	ldi	r23, 0x02	; 2
    18c4:	c7 01       	movw	r24, r14
    18c6:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
    18ca:	89 2b       	or	r24, r25
    18cc:	09 f0       	breq	.+2      	; 0x18d0 <ParseReceived+0xbde>
    18ce:	49 c0       	rjmp	.+146    	; 0x1962 <ParseReceived+0xc70>
    18d0:	f8 01       	movw	r30, r16
    18d2:	14 82       	std	Z+4, r1	; 0x04
    18d4:	15 82       	std	Z+5, r1	; 0x05
    18d6:	16 82       	std	Z+6, r1	; 0x06
    18d8:	17 82       	std	Z+7, r1	; 0x07
    18da:	ef 5d       	subi	r30, 0xDF	; 223
    18dc:	fd 4f       	sbci	r31, 0xFD	; 253
    18de:	81 81       	ldd	r24, Z+1	; 0x01
    18e0:	82 60       	ori	r24, 0x02	; 2
    18e2:	81 83       	std	Z+1, r24	; 0x01
    18e4:	3e c0       	rjmp	.+124    	; 0x1962 <ParseReceived+0xc70>
    18e6:	4a e0       	ldi	r20, 0x0A	; 10
    18e8:	50 e0       	ldi	r21, 0x00	; 0
    18ea:	6a e9       	ldi	r22, 0x9A	; 154
    18ec:	73 e0       	ldi	r23, 0x03	; 3
    18ee:	c7 01       	movw	r24, r14
    18f0:	0e 94 e6 16 	call	0x2dcc	; 0x2dcc <strncmp>
    18f4:	89 2b       	or	r24, r25
    18f6:	41 f4       	brne	.+16     	; 0x1908 <ParseReceived+0xc16>
    18f8:	40 e0       	ldi	r20, 0x00	; 0
    18fa:	50 e0       	ldi	r21, 0x00	; 0
    18fc:	b8 01       	movw	r22, r16
    18fe:	6d 54       	subi	r22, 0x4D	; 77
    1900:	7e 4f       	sbci	r23, 0xFE	; 254
    1902:	c7 01       	movw	r24, r14
    1904:	0c 96       	adiw	r24, 0x0c	; 12
    1906:	78 d8       	rcall	.-3856   	; 0x9f8 <ParseMAC>
    1908:	69 ed       	ldi	r22, 0xD9	; 217
    190a:	72 e0       	ldi	r23, 0x02	; 2
    190c:	c7 01       	movw	r24, r14
    190e:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
    1912:	89 2b       	or	r24, r25
    1914:	09 f0       	breq	.+2      	; 0x1918 <ParseReceived+0xc26>
    1916:	44 c0       	rjmp	.+136    	; 0x19a0 <ParseReceived+0xcae>
    1918:	d8 01       	movw	r26, r16
    191a:	14 96       	adiw	r26, 0x04	; 4
    191c:	1d 92       	st	X+, r1
    191e:	1d 92       	st	X+, r1
    1920:	1d 92       	st	X+, r1
    1922:	1c 92       	st	X, r1
    1924:	17 97       	sbiw	r26, 0x07	; 7
    1926:	1d c0       	rjmp	.+58     	; 0x1962 <ParseReceived+0xc70>
    1928:	49 e0       	ldi	r20, 0x09	; 9
    192a:	50 e0       	ldi	r21, 0x00	; 0
    192c:	65 ea       	ldi	r22, 0xA5	; 165
    192e:	73 e0       	ldi	r23, 0x03	; 3
    1930:	c7 01       	movw	r24, r14
    1932:	0e 94 e6 16 	call	0x2dcc	; 0x2dcc <strncmp>
    1936:	89 2b       	or	r24, r25
    1938:	41 f4       	brne	.+16     	; 0x194a <ParseReceived+0xc58>
    193a:	40 e0       	ldi	r20, 0x00	; 0
    193c:	50 e0       	ldi	r21, 0x00	; 0
    193e:	b8 01       	movw	r22, r16
    1940:	6b 53       	subi	r22, 0x3B	; 59
    1942:	7e 4f       	sbci	r23, 0xFE	; 254
    1944:	c7 01       	movw	r24, r14
    1946:	0b 96       	adiw	r24, 0x0b	; 11
    1948:	57 d8       	rcall	.-3922   	; 0x9f8 <ParseMAC>
    194a:	69 ed       	ldi	r22, 0xD9	; 217
    194c:	72 e0       	ldi	r23, 0x02	; 2
    194e:	c7 01       	movw	r24, r14
    1950:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
    1954:	89 2b       	or	r24, r25
    1956:	21 f5       	brne	.+72     	; 0x19a0 <ParseReceived+0xcae>
    1958:	f8 01       	movw	r30, r16
    195a:	14 82       	std	Z+4, r1	; 0x04
    195c:	15 82       	std	Z+5, r1	; 0x05
    195e:	16 82       	std	Z+6, r1	; 0x06
    1960:	17 82       	std	Z+7, r1	; 0x07
    1962:	69 ed       	ldi	r22, 0xD9	; 217
    1964:	72 e0       	ldi	r23, 0x02	; 2
    1966:	c7 01       	movw	r24, r14
    1968:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
    196c:	89 2b       	or	r24, r25
    196e:	c1 f4       	brne	.+48     	; 0x19a0 <ParseReceived+0xcae>
    1970:	f8 01       	movw	r30, r16
    1972:	ef 5d       	subi	r30, 0xDF	; 223
    1974:	fd 4f       	sbci	r31, 0xFD	; 253
    1976:	81 81       	ldd	r24, Z+1	; 0x01
    1978:	82 60       	ori	r24, 0x02	; 2
    197a:	81 83       	std	Z+1, r24	; 0x01
    197c:	f8 01       	movw	r30, r16
    197e:	84 81       	ldd	r24, Z+4	; 0x04
    1980:	95 81       	ldd	r25, Z+5	; 0x05
    1982:	a6 81       	ldd	r26, Z+6	; 0x06
    1984:	b7 81       	ldd	r27, Z+7	; 0x07
    1986:	88 30       	cpi	r24, 0x08	; 8
    1988:	91 05       	cpc	r25, r1
    198a:	a1 05       	cpc	r26, r1
    198c:	b1 05       	cpc	r27, r1
    198e:	41 f0       	breq	.+16     	; 0x19a0 <ParseReceived+0xcae>
    1990:	4d 97       	sbiw	r24, 0x1d	; 29
    1992:	a1 05       	cpc	r26, r1
    1994:	b1 05       	cpc	r27, r1
    1996:	21 f0       	breq	.+8      	; 0x19a0 <ParseReceived+0xcae>
    1998:	14 82       	std	Z+4, r1	; 0x04
    199a:	15 82       	std	Z+5, r1	; 0x05
    199c:	16 82       	std	Z+6, r1	; 0x06
    199e:	17 82       	std	Z+7, r1	; 0x07
    19a0:	6e ed       	ldi	r22, 0xDE	; 222
    19a2:	72 e0       	ldi	r23, 0x02	; 2
    19a4:	c7 01       	movw	r24, r14
    19a6:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
    19aa:	89 2b       	or	r24, r25
    19ac:	39 f0       	breq	.+14     	; 0x19bc <ParseReceived+0xcca>
    19ae:	6e ee       	ldi	r22, 0xEE	; 238
    19b0:	72 e0       	ldi	r23, 0x02	; 2
    19b2:	c7 01       	movw	r24, r14
    19b4:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
    19b8:	89 2b       	or	r24, r25
    19ba:	59 f4       	brne	.+22     	; 0x19d2 <ParseReceived+0xce0>
    19bc:	f8 01       	movw	r30, r16
    19be:	ef 5d       	subi	r30, 0xDF	; 223
    19c0:	fd 4f       	sbci	r31, 0xFD	; 253
    19c2:	81 81       	ldd	r24, Z+1	; 0x01
    19c4:	8d 7f       	andi	r24, 0xFD	; 253
    19c6:	81 83       	std	Z+1, r24	; 0x01
    19c8:	f8 01       	movw	r30, r16
    19ca:	14 82       	std	Z+4, r1	; 0x04
    19cc:	15 82       	std	Z+5, r1	; 0x05
    19ce:	16 82       	std	Z+6, r1	; 0x06
    19d0:	17 82       	std	Z+7, r1	; 0x07
    19d2:	64 ed       	ldi	r22, 0xD4	; 212
    19d4:	72 e0       	ldi	r23, 0x02	; 2
    19d6:	c7 01       	movw	r24, r14
    19d8:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
    19dc:	89 2b       	or	r24, r25
    19de:	c9 f5       	brne	.+114    	; 0x1a52 <ParseReceived+0xd60>
    19e0:	d8 01       	movw	r26, r16
    19e2:	14 96       	adiw	r26, 0x04	; 4
    19e4:	1d 92       	st	X+, r1
    19e6:	1d 92       	st	X+, r1
    19e8:	1d 92       	st	X+, r1
    19ea:	1c 92       	st	X, r1
    19ec:	17 97       	sbiw	r26, 0x07	; 7
    19ee:	f8 01       	movw	r30, r16
    19f0:	ef 5d       	subi	r30, 0xDF	; 223
    19f2:	fd 4f       	sbci	r31, 0xFD	; 253
    19f4:	81 81       	ldd	r24, Z+1	; 0x01
    19f6:	8e 7f       	andi	r24, 0xFE	; 254
    19f8:	81 83       	std	Z+1, r24	; 0x01
    19fa:	2b c0       	rjmp	.+86     	; 0x1a52 <ParseReceived+0xd60>
    19fc:	60 e6       	ldi	r22, 0x60	; 96
    19fe:	73 e0       	ldi	r23, 0x03	; 3
    1a00:	c7 01       	movw	r24, r14
    1a02:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
    1a06:	89 2b       	or	r24, r25
    1a08:	59 f6       	brne	.-106    	; 0x19a0 <ParseReceived+0xcae>
    1a0a:	39 cd       	rjmp	.-1422   	; 0x147e <ParseReceived+0x78c>
    1a0c:	d7 01       	movw	r26, r14
    1a0e:	ad 01       	movw	r20, r26
    1a10:	4f 5f       	subi	r20, 0xFF	; 255
    1a12:	5f 4f       	sbci	r21, 0xFF	; 255
    1a14:	11 96       	adiw	r26, 0x01	; 1
    1a16:	8c 91       	ld	r24, X
    1a18:	11 97       	sbiw	r26, 0x01	; 1
    1a1a:	88 23       	and	r24, r24
    1a1c:	09 f4       	brne	.+2      	; 0x1a20 <ParseReceived+0xd2e>
    1a1e:	7a cd       	rjmp	.-1292   	; 0x1514 <ParseReceived+0x822>
    1a20:	fd 01       	movw	r30, r26
    1a22:	32 96       	adiw	r30, 0x02	; 2
    1a24:	9d 01       	movw	r18, r26
    1a26:	2d 5f       	subi	r18, 0xFD	; 253
    1a28:	3f 4f       	sbci	r19, 0xFF	; 255
    1a2a:	90 e0       	ldi	r25, 0x00	; 0
    1a2c:	65 cd       	rjmp	.-1334   	; 0x14f8 <ParseReceived+0x806>
    1a2e:	69 ed       	ldi	r22, 0xD9	; 217
    1a30:	72 e0       	ldi	r23, 0x02	; 2
    1a32:	c7 01       	movw	r24, r14
    1a34:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
    1a38:	89 2b       	or	r24, r25
    1a3a:	09 f4       	brne	.+2      	; 0x1a3e <ParseReceived+0xd4c>
    1a3c:	99 cf       	rjmp	.-206    	; 0x1970 <ParseReceived+0xc7e>
    1a3e:	b7 cf       	rjmp	.-146    	; 0x19ae <ParseReceived+0xcbc>
    1a40:	6e ed       	ldi	r22, 0xDE	; 222
    1a42:	72 e0       	ldi	r23, 0x02	; 2
    1a44:	c7 01       	movw	r24, r14
    1a46:	0e 94 d6 16 	call	0x2dac	; 0x2dac <strcmp>
    1a4a:	89 2b       	or	r24, r25
    1a4c:	09 f0       	breq	.+2      	; 0x1a50 <ParseReceived+0xd5e>
    1a4e:	af cf       	rjmp	.-162    	; 0x19ae <ParseReceived+0xcbc>
    1a50:	05 cf       	rjmp	.-502    	; 0x185c <ParseReceived+0xb6a>
    1a52:	0f 90       	pop	r0
    1a54:	0f 90       	pop	r0
    1a56:	df 91       	pop	r29
    1a58:	cf 91       	pop	r28
    1a5a:	1f 91       	pop	r17
    1a5c:	0f 91       	pop	r16
    1a5e:	ff 90       	pop	r15
    1a60:	ef 90       	pop	r14
    1a62:	df 90       	pop	r13
    1a64:	cf 90       	pop	r12
    1a66:	bf 90       	pop	r11
    1a68:	af 90       	pop	r10
    1a6a:	9f 90       	pop	r9
    1a6c:	8f 90       	pop	r8
    1a6e:	7f 90       	pop	r7
    1a70:	6f 90       	pop	r6
    1a72:	5f 90       	pop	r5
    1a74:	4f 90       	pop	r4
    1a76:	3f 90       	pop	r3
    1a78:	2f 90       	pop	r2
    1a7a:	08 95       	ret

00001a7c <ESP8266_Update>:
    1a7c:	2f 92       	push	r2
    1a7e:	3f 92       	push	r3
    1a80:	4f 92       	push	r4
    1a82:	5f 92       	push	r5
    1a84:	7f 92       	push	r7
    1a86:	8f 92       	push	r8
    1a88:	9f 92       	push	r9
    1a8a:	af 92       	push	r10
    1a8c:	bf 92       	push	r11
    1a8e:	cf 92       	push	r12
    1a90:	df 92       	push	r13
    1a92:	ef 92       	push	r14
    1a94:	ff 92       	push	r15
    1a96:	0f 93       	push	r16
    1a98:	1f 93       	push	r17
    1a9a:	cf 93       	push	r28
    1a9c:	df 93       	push	r29
    1a9e:	cd b7       	in	r28, 0x3d	; 61
    1aa0:	de b7       	in	r29, 0x3e	; 62
    1aa2:	c3 58       	subi	r28, 0x83	; 131
    1aa4:	d1 09       	sbc	r29, r1
    1aa6:	0f b6       	in	r0, 0x3f	; 63
    1aa8:	f8 94       	cli
    1aaa:	de bf       	out	0x3e, r29	; 62
    1aac:	0f be       	out	0x3f, r0	; 63
    1aae:	cd bf       	out	0x3d, r28	; 61
    1ab0:	8c 01       	movw	r16, r24
    1ab2:	fc 01       	movw	r30, r24
    1ab4:	ec 5a       	subi	r30, 0xAC	; 172
    1ab6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ab8:	80 81       	ld	r24, Z
    1aba:	91 81       	ldd	r25, Z+1	; 0x01
    1abc:	a2 81       	ldd	r26, Z+2	; 0x02
    1abe:	b3 81       	ldd	r27, Z+3	; 0x03
    1ac0:	89 2b       	or	r24, r25
    1ac2:	8a 2b       	or	r24, r26
    1ac4:	8b 2b       	or	r24, r27
    1ac6:	41 f4       	brne	.+16     	; 0x1ad8 <ESP8266_Update+0x5c>
    1ac8:	80 e3       	ldi	r24, 0x30	; 48
    1aca:	95 e7       	ldi	r25, 0x75	; 117
    1acc:	a0 e0       	ldi	r26, 0x00	; 0
    1ace:	b0 e0       	ldi	r27, 0x00	; 0
    1ad0:	80 83       	st	Z, r24
    1ad2:	91 83       	std	Z+1, r25	; 0x01
    1ad4:	a2 83       	std	Z+2, r26	; 0x02
    1ad6:	b3 83       	std	Z+3, r27	; 0x03
    1ad8:	f8 01       	movw	r30, r16
    1ada:	e4 5b       	subi	r30, 0xB4	; 180
    1adc:	ff 4f       	sbci	r31, 0xFF	; 255
    1ade:	80 81       	ld	r24, Z
    1ae0:	91 81       	ldd	r25, Z+1	; 0x01
    1ae2:	a2 81       	ldd	r26, Z+2	; 0x02
    1ae4:	b3 81       	ldd	r27, Z+3	; 0x03
    1ae6:	34 97       	sbiw	r30, 0x04	; 4
    1ae8:	40 81       	ld	r20, Z
    1aea:	51 81       	ldd	r21, Z+1	; 0x01
    1aec:	62 81       	ldd	r22, Z+2	; 0x02
    1aee:	73 81       	ldd	r23, Z+3	; 0x03
    1af0:	84 1b       	sub	r24, r20
    1af2:	95 0b       	sbc	r25, r21
    1af4:	a6 0b       	sbc	r26, r22
    1af6:	b7 0b       	sbc	r27, r23
    1af8:	3c 96       	adiw	r30, 0x0c	; 12
    1afa:	40 81       	ld	r20, Z
    1afc:	51 81       	ldd	r21, Z+1	; 0x01
    1afe:	62 81       	ldd	r22, Z+2	; 0x02
    1b00:	73 81       	ldd	r23, Z+3	; 0x03
    1b02:	48 17       	cp	r20, r24
    1b04:	59 07       	cpc	r21, r25
    1b06:	6a 07       	cpc	r22, r26
    1b08:	7b 07       	cpc	r23, r27
    1b0a:	30 f5       	brcc	.+76     	; 0x1b58 <ESP8266_Update+0xdc>
    1b0c:	d8 01       	movw	r26, r16
    1b0e:	14 96       	adiw	r26, 0x04	; 4
    1b10:	8c 91       	ld	r24, X
    1b12:	f8 01       	movw	r30, r16
    1b14:	14 82       	std	Z+4, r1	; 0x04
    1b16:	15 82       	std	Z+5, r1	; 0x05
    1b18:	16 82       	std	Z+6, r1	; 0x06
    1b1a:	17 82       	std	Z+7, r1	; 0x07
    1b1c:	8a 30       	cpi	r24, 0x0A	; 10
    1b1e:	09 f0       	breq	.+2      	; 0x1b22 <ESP8266_Update+0xa6>
    1b20:	64 c2       	rjmp	.+1224   	; 0x1fea <ESP8266_Update+0x56e>
    1b22:	ea 5e       	subi	r30, 0xEA	; 234
    1b24:	fd 4f       	sbci	r31, 0xFD	; 253
    1b26:	80 81       	ld	r24, Z
    1b28:	f3 e4       	ldi	r31, 0x43	; 67
    1b2a:	8f 02       	muls	r24, r31
    1b2c:	c0 01       	movw	r24, r0
    1b2e:	11 24       	eor	r1, r1
    1b30:	98 01       	movw	r18, r16
    1b32:	28 0f       	add	r18, r24
    1b34:	39 1f       	adc	r19, r25
    1b36:	f9 01       	movw	r30, r18
    1b38:	e8 5a       	subi	r30, 0xA8	; 168
    1b3a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b3c:	10 82       	st	Z, r1
    1b3e:	32 96       	adiw	r30, 0x02	; 2
    1b40:	10 82       	st	Z, r1
    1b42:	ff 96       	adiw	r30, 0x3f	; 63
    1b44:	10 82       	st	Z, r1
    1b46:	31 97       	sbiw	r30, 0x01	; 1
    1b48:	10 82       	st	Z, r1
    1b4a:	bc 01       	movw	r22, r24
    1b4c:	68 5a       	subi	r22, 0xA8	; 168
    1b4e:	7f 4f       	sbci	r23, 0xFF	; 255
    1b50:	60 0f       	add	r22, r16
    1b52:	71 1f       	adc	r23, r17
    1b54:	c8 01       	movw	r24, r16
    1b56:	ac d7       	rcall	.+3928   	; 0x2ab0 <ESP8266_Callback_ClientConnectionTimeout>
    1b58:	f8 01       	movw	r30, r16
    1b5a:	ee 5d       	subi	r30, 0xDE	; 222
    1b5c:	fd 4f       	sbci	r31, 0xFD	; 253
    1b5e:	80 81       	ld	r24, Z
    1b60:	80 ff       	sbrs	r24, 0
    1b62:	86 c0       	rjmp	.+268    	; 0x1c70 <ESP8266_Update+0x1f4>
    1b64:	42 e0       	ldi	r20, 0x02	; 2
    1b66:	50 e0       	ldi	r21, 0x00	; 0
    1b68:	6f ea       	ldi	r22, 0xAF	; 175
    1b6a:	73 e0       	ldi	r23, 0x03	; 3
    1b6c:	80 e4       	ldi	r24, 0x40	; 64
    1b6e:	96 e1       	ldi	r25, 0x16	; 22
    1b70:	0e 94 12 02 	call	0x424	; 0x424 <BUFFER_Find>
    1b74:	99 23       	and	r25, r25
    1b76:	64 f0       	brlt	.+24     	; 0x1b90 <ESP8266_Update+0x114>
    1b78:	89 2b       	or	r24, r25
    1b7a:	09 f5       	brne	.+66     	; 0x1bbe <ESP8266_Update+0x142>
    1b7c:	42 e0       	ldi	r20, 0x02	; 2
    1b7e:	50 e0       	ldi	r21, 0x00	; 0
    1b80:	be 01       	movw	r22, r28
    1b82:	6e 57       	subi	r22, 0x7E	; 126
    1b84:	7f 4f       	sbci	r23, 0xFF	; 255
    1b86:	80 e4       	ldi	r24, 0x40	; 64
    1b88:	96 e1       	ldi	r25, 0x16	; 22
    1b8a:	0e 94 21 01 	call	0x242	; 0x242 <BUFFER_Read>
    1b8e:	17 c0       	rjmp	.+46     	; 0x1bbe <ESP8266_Update+0x142>
    1b90:	40 e0       	ldi	r20, 0x00	; 0
    1b92:	50 e0       	ldi	r21, 0x00	; 0
    1b94:	6f ea       	ldi	r22, 0xAF	; 175
    1b96:	73 e0       	ldi	r23, 0x03	; 3
    1b98:	8c e4       	ldi	r24, 0x4C	; 76
    1b9a:	96 e1       	ldi	r25, 0x16	; 22
    1b9c:	0e 94 12 02 	call	0x424	; 0x424 <BUFFER_Find>
    1ba0:	00 97       	sbiw	r24, 0x00	; 0
    1ba2:	51 f4       	brne	.+20     	; 0x1bb8 <ESP8266_Update+0x13c>
    1ba4:	42 e0       	ldi	r20, 0x02	; 2
    1ba6:	50 e0       	ldi	r21, 0x00	; 0
    1ba8:	be 01       	movw	r22, r28
    1baa:	6e 57       	subi	r22, 0x7E	; 126
    1bac:	7f 4f       	sbci	r23, 0xFF	; 255
    1bae:	8c e4       	ldi	r24, 0x4C	; 76
    1bb0:	96 e1       	ldi	r25, 0x16	; 22
    1bb2:	0e 94 21 01 	call	0x242	; 0x242 <BUFFER_Read>
    1bb6:	03 c0       	rjmp	.+6      	; 0x1bbe <ESP8266_Update+0x142>
    1bb8:	99 23       	and	r25, r25
    1bba:	0c f4       	brge	.+2      	; 0x1bbe <ESP8266_Update+0x142>
    1bbc:	59 c0       	rjmp	.+178    	; 0x1c70 <ESP8266_Update+0x1f4>
    1bbe:	f8 01       	movw	r30, r16
    1bc0:	e1 5e       	subi	r30, 0xE1	; 225
    1bc2:	fd 4f       	sbci	r31, 0xFD	; 253
    1bc4:	c0 80       	ld	r12, Z
    1bc6:	d1 80       	ldd	r13, Z+1	; 0x01
    1bc8:	32 96       	adiw	r30, 0x02	; 2
    1bca:	81 81       	ldd	r24, Z+1	; 0x01
    1bcc:	8e 7f       	andi	r24, 0xFE	; 254
    1bce:	81 83       	std	Z+1, r24	; 0x01
    1bd0:	8d e1       	ldi	r24, 0x1D	; 29
    1bd2:	90 e0       	ldi	r25, 0x00	; 0
    1bd4:	a0 e0       	ldi	r26, 0x00	; 0
    1bd6:	b0 e0       	ldi	r27, 0x00	; 0
    1bd8:	f8 01       	movw	r30, r16
    1bda:	84 83       	std	Z+4, r24	; 0x04
    1bdc:	95 83       	std	Z+5, r25	; 0x05
    1bde:	a6 83       	std	Z+6, r26	; 0x06
    1be0:	b7 83       	std	Z+7, r27	; 0x07
    1be2:	d6 01       	movw	r26, r12
    1be4:	12 96       	adiw	r26, 0x02	; 2
    1be6:	8c 91       	ld	r24, X
    1be8:	12 97       	sbiw	r26, 0x02	; 2
    1bea:	88 23       	and	r24, r24
    1bec:	51 f0       	breq	.+20     	; 0x1c02 <ESP8266_Update+0x186>
    1bee:	54 96       	adiw	r26, 0x14	; 20
    1bf0:	4d 91       	ld	r20, X+
    1bf2:	5c 91       	ld	r21, X
    1bf4:	55 97       	sbiw	r26, 0x15	; 21
    1bf6:	24 eb       	ldi	r18, 0xB4	; 180
    1bf8:	35 e0       	ldi	r19, 0x05	; 5
    1bfa:	b6 01       	movw	r22, r12
    1bfc:	c8 01       	movw	r24, r16
    1bfe:	b2 d6       	rcall	.+3428   	; 0x2964 <ESP8266_Callback_ClientConnectionSendData>
    1c00:	09 c0       	rjmp	.+18     	; 0x1c14 <ESP8266_Update+0x198>
    1c02:	f6 01       	movw	r30, r12
    1c04:	44 89       	ldd	r20, Z+20	; 0x14
    1c06:	55 89       	ldd	r21, Z+21	; 0x15
    1c08:	24 eb       	ldi	r18, 0xB4	; 180
    1c0a:	35 e0       	ldi	r19, 0x05	; 5
    1c0c:	b6 01       	movw	r22, r12
    1c0e:	c8 01       	movw	r24, r16
    1c10:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <ESP8266_Callback_ServerConnectionSendData>
    1c14:	e8 2e       	mov	r14, r24
    1c16:	f9 2e       	mov	r15, r25
    1c18:	f5 eb       	ldi	r31, 0xB5	; 181
    1c1a:	ef 16       	cp	r14, r31
    1c1c:	f5 e0       	ldi	r31, 0x05	; 5
    1c1e:	ff 06       	cpc	r15, r31
    1c20:	30 f0       	brcs	.+12     	; 0x1c2e <ESP8266_Update+0x1b2>
    1c22:	0f 2e       	mov	r0, r31
    1c24:	f4 eb       	ldi	r31, 0xB4	; 180
    1c26:	ef 2e       	mov	r14, r31
    1c28:	f5 e0       	ldi	r31, 0x05	; 5
    1c2a:	ff 2e       	mov	r15, r31
    1c2c:	f0 2d       	mov	r31, r0
    1c2e:	e1 14       	cp	r14, r1
    1c30:	f1 04       	cpc	r15, r1
    1c32:	b1 f0       	breq	.+44     	; 0x1c60 <ESP8266_Update+0x1e4>
    1c34:	b7 01       	movw	r22, r14
    1c36:	d6 01       	movw	r26, r12
    1c38:	54 96       	adiw	r26, 0x14	; 20
    1c3a:	8d 91       	ld	r24, X+
    1c3c:	9c 91       	ld	r25, X
    1c3e:	55 97       	sbiw	r26, 0x15	; 21
    1c40:	d8 d4       	rcall	.+2480   	; 0x25f2 <ESP8266_LL_USARTSend>
    1c42:	f8 01       	movw	r30, r16
    1c44:	e5 5e       	subi	r30, 0xE5	; 229
    1c46:	fd 4f       	sbci	r31, 0xFD	; 253
    1c48:	80 81       	ld	r24, Z
    1c4a:	91 81       	ldd	r25, Z+1	; 0x01
    1c4c:	a2 81       	ldd	r26, Z+2	; 0x02
    1c4e:	b3 81       	ldd	r27, Z+3	; 0x03
    1c50:	8e 0d       	add	r24, r14
    1c52:	9f 1d       	adc	r25, r15
    1c54:	a1 1d       	adc	r26, r1
    1c56:	b1 1d       	adc	r27, r1
    1c58:	80 83       	st	Z, r24
    1c5a:	91 83       	std	Z+1, r25	; 0x01
    1c5c:	a2 83       	std	Z+2, r26	; 0x02
    1c5e:	b3 83       	std	Z+3, r27	; 0x03
    1c60:	62 e0       	ldi	r22, 0x02	; 2
    1c62:	70 e0       	ldi	r23, 0x00	; 0
    1c64:	82 eb       	ldi	r24, 0xB2	; 178
    1c66:	93 e0       	ldi	r25, 0x03	; 3
    1c68:	c4 d4       	rcall	.+2440   	; 0x25f2 <ESP8266_LL_USARTSend>
    1c6a:	81 e0       	ldi	r24, 0x01	; 1
    1c6c:	f6 01       	movw	r30, r12
    1c6e:	83 8b       	std	Z+19, r24	; 0x13
    1c70:	f8 01       	movw	r30, r16
    1c72:	84 81       	ldd	r24, Z+4	; 0x04
    1c74:	95 81       	ldd	r25, Z+5	; 0x05
    1c76:	a6 81       	ldd	r26, Z+6	; 0x06
    1c78:	b7 81       	ldd	r27, Z+7	; 0x07
    1c7a:	41 97       	sbiw	r24, 0x11	; 17
    1c7c:	a1 05       	cpc	r26, r1
    1c7e:	b1 05       	cpc	r27, r1
    1c80:	01 f5       	brne	.+64     	; 0x1cc2 <ESP8266_Update+0x246>
    1c82:	eb 50       	subi	r30, 0x0B	; 11
    1c84:	fe 4f       	sbci	r31, 0xFE	; 254
    1c86:	80 81       	ld	r24, Z
    1c88:	81 11       	cpse	r24, r1
    1c8a:	7c c0       	rjmp	.+248    	; 0x1d84 <ESP8266_Update+0x308>
    1c8c:	44 e0       	ldi	r20, 0x04	; 4
    1c8e:	50 e0       	ldi	r21, 0x00	; 0
    1c90:	69 ed       	ldi	r22, 0xD9	; 217
    1c92:	72 e0       	ldi	r23, 0x02	; 2
    1c94:	80 e4       	ldi	r24, 0x40	; 64
    1c96:	96 e1       	ldi	r25, 0x16	; 22
    1c98:	0e 94 12 02 	call	0x424	; 0x424 <BUFFER_Find>
    1c9c:	99 23       	and	r25, r25
    1c9e:	8c f0       	brlt	.+34     	; 0x1cc2 <ESP8266_Update+0x246>
    1ca0:	80 e4       	ldi	r24, 0x40	; 64
    1ca2:	96 e1       	ldi	r25, 0x16	; 22
    1ca4:	0e 94 cf 01 	call	0x39e	; 0x39e <BUFFER_Reset>
    1ca8:	d8 01       	movw	r26, r16
    1caa:	14 96       	adiw	r26, 0x04	; 4
    1cac:	1d 92       	st	X+, r1
    1cae:	1d 92       	st	X+, r1
    1cb0:	1d 92       	st	X+, r1
    1cb2:	1c 92       	st	X, r1
    1cb4:	17 97       	sbiw	r26, 0x07	; 7
    1cb6:	f8 01       	movw	r30, r16
    1cb8:	ef 5d       	subi	r30, 0xDF	; 223
    1cba:	fd 4f       	sbci	r31, 0xFD	; 253
    1cbc:	81 81       	ldd	r24, Z+1	; 0x01
    1cbe:	82 60       	ori	r24, 0x02	; 2
    1cc0:	81 83       	std	Z+1, r24	; 0x01
    1cc2:	f8 01       	movw	r30, r16
    1cc4:	eb 50       	subi	r30, 0x0B	; 11
    1cc6:	fe 4f       	sbci	r31, 0xFE	; 254
    1cc8:	80 81       	ld	r24, Z
    1cca:	88 23       	and	r24, r24
    1ccc:	e9 f0       	breq	.+58     	; 0x1d08 <ESP8266_Update+0x28c>
    1cce:	53 c0       	rjmp	.+166    	; 0x1d76 <ESP8266_Update+0x2fa>
    1cd0:	9c 01       	movw	r18, r24
    1cd2:	41 e0       	ldi	r20, 0x01	; 1
    1cd4:	be 01       	movw	r22, r28
    1cd6:	6f 5f       	subi	r22, 0xFF	; 255
    1cd8:	7f 4f       	sbci	r23, 0xFF	; 255
    1cda:	c8 01       	movw	r24, r16
    1cdc:	0a d8       	rcall	.-4076   	; 0xcf2 <ParseReceived>
    1cde:	f7 01       	movw	r30, r14
    1ce0:	80 81       	ld	r24, Z
    1ce2:	88 23       	and	r24, r24
    1ce4:	b1 f0       	breq	.+44     	; 0x1d12 <ESP8266_Update+0x296>
    1ce6:	47 c0       	rjmp	.+142    	; 0x1d76 <ESP8266_Update+0x2fa>
    1ce8:	f8 01       	movw	r30, r16
    1cea:	eb 50       	subi	r30, 0x0B	; 11
    1cec:	fe 4f       	sbci	r31, 0xFE	; 254
    1cee:	80 81       	ld	r24, Z
    1cf0:	81 11       	cpse	r24, r1
    1cf2:	48 c0       	rjmp	.+144    	; 0x1d84 <ESP8266_Update+0x308>
    1cf4:	f8 01       	movw	r30, r16
    1cf6:	84 81       	ldd	r24, Z+4	; 0x04
    1cf8:	95 81       	ldd	r25, Z+5	; 0x05
    1cfa:	a6 81       	ldd	r26, Z+6	; 0x06
    1cfc:	b7 81       	ldd	r27, Z+7	; 0x07
    1cfe:	89 2b       	or	r24, r25
    1d00:	8a 2b       	or	r24, r26
    1d02:	8b 2b       	or	r24, r27
    1d04:	41 f1       	breq	.+80     	; 0x1d56 <ESP8266_Update+0x2da>
    1d06:	78 c1       	rjmp	.+752    	; 0x1ff8 <ESP8266_Update+0x57c>
    1d08:	78 01       	movw	r14, r16
    1d0a:	fb e0       	ldi	r31, 0x0B	; 11
    1d0c:	ef 1a       	sub	r14, r31
    1d0e:	fe ef       	ldi	r31, 0xFE	; 254
    1d10:	ff 0a       	sbc	r15, r31
    1d12:	40 e8       	ldi	r20, 0x80	; 128
    1d14:	50 e0       	ldi	r21, 0x00	; 0
    1d16:	be 01       	movw	r22, r28
    1d18:	6f 5f       	subi	r22, 0xFF	; 255
    1d1a:	7f 4f       	sbci	r23, 0xFF	; 255
    1d1c:	80 e4       	ldi	r24, 0x40	; 64
    1d1e:	96 e1       	ldi	r25, 0x16	; 22
    1d20:	0e 94 b3 02 	call	0x566	; 0x566 <BUFFER_ReadString>
    1d24:	00 97       	sbiw	r24, 0x00	; 0
    1d26:	a1 f6       	brne	.-88     	; 0x1cd0 <ESP8266_Update+0x254>
    1d28:	df cf       	rjmp	.-66     	; 0x1ce8 <ESP8266_Update+0x26c>
    1d2a:	9c 01       	movw	r18, r24
    1d2c:	40 e0       	ldi	r20, 0x00	; 0
    1d2e:	be 01       	movw	r22, r28
    1d30:	6f 5f       	subi	r22, 0xFF	; 255
    1d32:	7f 4f       	sbci	r23, 0xFF	; 255
    1d34:	c8 01       	movw	r24, r16
    1d36:	0e 94 79 06 	call	0xcf2	; 0xcf2 <ParseReceived>
    1d3a:	d7 01       	movw	r26, r14
    1d3c:	8c 91       	ld	r24, X
    1d3e:	81 11       	cpse	r24, r1
    1d40:	21 c0       	rjmp	.+66     	; 0x1d84 <ESP8266_Update+0x308>
    1d42:	f8 01       	movw	r30, r16
    1d44:	84 81       	ldd	r24, Z+4	; 0x04
    1d46:	95 81       	ldd	r25, Z+5	; 0x05
    1d48:	a6 81       	ldd	r26, Z+6	; 0x06
    1d4a:	b7 81       	ldd	r27, Z+7	; 0x07
    1d4c:	89 2b       	or	r24, r25
    1d4e:	8a 2b       	or	r24, r26
    1d50:	8b 2b       	or	r24, r27
    1d52:	31 f0       	breq	.+12     	; 0x1d60 <ESP8266_Update+0x2e4>
    1d54:	51 c1       	rjmp	.+674    	; 0x1ff8 <ESP8266_Update+0x57c>
    1d56:	78 01       	movw	r14, r16
    1d58:	fb e0       	ldi	r31, 0x0B	; 11
    1d5a:	ef 1a       	sub	r14, r31
    1d5c:	fe ef       	ldi	r31, 0xFE	; 254
    1d5e:	ff 0a       	sbc	r15, r31
    1d60:	40 e8       	ldi	r20, 0x80	; 128
    1d62:	50 e0       	ldi	r21, 0x00	; 0
    1d64:	be 01       	movw	r22, r28
    1d66:	6f 5f       	subi	r22, 0xFF	; 255
    1d68:	7f 4f       	sbci	r23, 0xFF	; 255
    1d6a:	8c e4       	ldi	r24, 0x4C	; 76
    1d6c:	96 e1       	ldi	r25, 0x16	; 22
    1d6e:	0e 94 b3 02 	call	0x566	; 0x566 <BUFFER_ReadString>
    1d72:	00 97       	sbiw	r24, 0x00	; 0
    1d74:	d1 f6       	brne	.-76     	; 0x1d2a <ESP8266_Update+0x2ae>
    1d76:	f8 01       	movw	r30, r16
    1d78:	eb 50       	subi	r30, 0x0B	; 11
    1d7a:	fe 4f       	sbci	r31, 0xFE	; 254
    1d7c:	80 81       	ld	r24, Z
    1d7e:	88 23       	and	r24, r24
    1d80:	09 f4       	brne	.+2      	; 0x1d84 <ESP8266_Update+0x308>
    1d82:	3a c1       	rjmp	.+628    	; 0x1ff8 <ESP8266_Update+0x57c>
    1d84:	f8 01       	movw	r30, r16
    1d86:	e5 50       	subi	r30, 0x05	; 5
    1d88:	fe 4f       	sbci	r31, 0xFE	; 254
    1d8a:	80 81       	ld	r24, Z
    1d8c:	81 11       	cpse	r24, r1
    1d8e:	07 c0       	rjmp	.+14     	; 0x1d9e <ESP8266_Update+0x322>
    1d90:	0f 2e       	mov	r0, r31
    1d92:	fc e4       	ldi	r31, 0x4C	; 76
    1d94:	af 2e       	mov	r10, r31
    1d96:	f6 e1       	ldi	r31, 0x16	; 22
    1d98:	bf 2e       	mov	r11, r31
    1d9a:	f0 2d       	mov	r31, r0
    1d9c:	06 c0       	rjmp	.+12     	; 0x1daa <ESP8266_Update+0x32e>
    1d9e:	0f 2e       	mov	r0, r31
    1da0:	f0 e4       	ldi	r31, 0x40	; 64
    1da2:	af 2e       	mov	r10, r31
    1da4:	f6 e1       	ldi	r31, 0x16	; 22
    1da6:	bf 2e       	mov	r11, r31
    1da8:	f0 2d       	mov	r31, r0
    1daa:	78 01       	movw	r14, r16
    1dac:	2a e0       	ldi	r18, 0x0A	; 10
    1dae:	e2 1a       	sub	r14, r18
    1db0:	2e ef       	ldi	r18, 0xFE	; 254
    1db2:	f2 0a       	sbc	r15, r18
    1db4:	68 01       	movw	r12, r16
    1db6:	36 e0       	ldi	r19, 0x06	; 6
    1db8:	c3 1a       	sub	r12, r19
    1dba:	3e ef       	ldi	r19, 0xFE	; 254
    1dbc:	d3 0a       	sbc	r13, r19
    1dbe:	0f 2e       	mov	r0, r31
    1dc0:	f3 e4       	ldi	r31, 0x43	; 67
    1dc2:	7f 2e       	mov	r7, r31
    1dc4:	f0 2d       	mov	r31, r0
    1dc6:	48 01       	movw	r8, r16
    1dc8:	88 e0       	ldi	r24, 0x08	; 8
    1dca:	88 1a       	sub	r8, r24
    1dcc:	8e ef       	ldi	r24, 0xFE	; 254
    1dce:	98 0a       	sbc	r9, r24
    1dd0:	82 c0       	rjmp	.+260    	; 0x1ed6 <ESP8266_Update+0x45a>
    1dd2:	41 e0       	ldi	r20, 0x01	; 1
    1dd4:	50 e0       	ldi	r21, 0x00	; 0
    1dd6:	be 01       	movw	r22, r28
    1dd8:	6f 57       	subi	r22, 0x7F	; 127
    1dda:	7f 4f       	sbci	r23, 0xFF	; 255
    1ddc:	c5 01       	movw	r24, r10
    1dde:	0e 94 21 01 	call	0x242	; 0x242 <BUFFER_Read>
    1de2:	cf 57       	subi	r28, 0x7F	; 127
    1de4:	df 4f       	sbci	r29, 0xFF	; 255
    1de6:	28 81       	ld	r18, Y
    1de8:	c1 58       	subi	r28, 0x81	; 129
    1dea:	d0 40       	sbci	r29, 0x00	; 0
    1dec:	d6 01       	movw	r26, r12
    1dee:	8c 91       	ld	r24, X
    1df0:	f8 01       	movw	r30, r16
    1df2:	78 9e       	mul	r7, r24
    1df4:	e0 0d       	add	r30, r0
    1df6:	f1 1d       	adc	r31, r1
    1df8:	11 24       	eor	r1, r1
    1dfa:	e4 59       	subi	r30, 0x94	; 148
    1dfc:	ff 4f       	sbci	r31, 0xFF	; 255
    1dfe:	01 90       	ld	r0, Z+
    1e00:	f0 81       	ld	r31, Z
    1e02:	e0 2d       	mov	r30, r0
    1e04:	d7 01       	movw	r26, r14
    1e06:	8d 91       	ld	r24, X+
    1e08:	9c 91       	ld	r25, X
    1e0a:	11 97       	sbiw	r26, 0x01	; 1
    1e0c:	e8 0f       	add	r30, r24
    1e0e:	f9 1f       	adc	r31, r25
    1e10:	20 83       	st	Z, r18
    1e12:	8d 91       	ld	r24, X+
    1e14:	9c 91       	ld	r25, X
    1e16:	11 97       	sbiw	r26, 0x01	; 1
    1e18:	01 96       	adiw	r24, 0x01	; 1
    1e1a:	8d 93       	st	X+, r24
    1e1c:	9c 93       	st	X, r25
    1e1e:	f4 01       	movw	r30, r8
    1e20:	20 81       	ld	r18, Z
    1e22:	31 81       	ldd	r19, Z+1	; 0x01
    1e24:	2f 5f       	subi	r18, 0xFF	; 255
    1e26:	3f 4f       	sbci	r19, 0xFF	; 255
    1e28:	31 83       	std	Z+1, r19	; 0x01
    1e2a:	20 83       	st	Z, r18
    1e2c:	84 3b       	cpi	r24, 0xB4	; 180
    1e2e:	f5 e0       	ldi	r31, 0x05	; 5
    1e30:	9f 07       	cpc	r25, r31
    1e32:	08 f4       	brcc	.+2      	; 0x1e36 <ESP8266_Update+0x3ba>
    1e34:	50 c0       	rjmp	.+160    	; 0x1ed6 <ESP8266_Update+0x45a>
    1e36:	d6 01       	movw	r26, r12
    1e38:	2c 91       	ld	r18, X
    1e3a:	1c 01       	movw	r2, r24
    1e3c:	41 2c       	mov	r4, r1
    1e3e:	51 2c       	mov	r5, r1
    1e40:	a2 2f       	mov	r26, r18
    1e42:	b0 e0       	ldi	r27, 0x00	; 0
    1e44:	f8 01       	movw	r30, r16
    1e46:	72 9e       	mul	r7, r18
    1e48:	e0 0d       	add	r30, r0
    1e4a:	f1 1d       	adc	r31, r1
    1e4c:	11 24       	eor	r1, r1
    1e4e:	ee 59       	subi	r30, 0x9E	; 158
    1e50:	ff 4f       	sbci	r31, 0xFF	; 255
    1e52:	40 81       	ld	r20, Z
    1e54:	51 81       	ldd	r21, Z+1	; 0x01
    1e56:	62 81       	ldd	r22, Z+2	; 0x02
    1e58:	73 81       	ldd	r23, Z+3	; 0x03
    1e5a:	24 16       	cp	r2, r20
    1e5c:	35 06       	cpc	r3, r21
    1e5e:	46 06       	cpc	r4, r22
    1e60:	57 06       	cpc	r5, r23
    1e62:	c9 f1       	breq	.+114    	; 0x1ed6 <ESP8266_Update+0x45a>
    1e64:	7a 9e       	mul	r7, r26
    1e66:	90 01       	movw	r18, r0
    1e68:	7b 9e       	mul	r7, r27
    1e6a:	30 0d       	add	r19, r0
    1e6c:	11 24       	eor	r1, r1
    1e6e:	20 0f       	add	r18, r16
    1e70:	31 1f       	adc	r19, r17
    1e72:	f9 01       	movw	r30, r18
    1e74:	e2 59       	subi	r30, 0x92	; 146
    1e76:	ff 4f       	sbci	r31, 0xFF	; 255
    1e78:	91 83       	std	Z+1, r25	; 0x01
    1e7a:	80 83       	st	Z, r24
    1e7c:	32 96       	adiw	r30, 0x02	; 2
    1e7e:	10 82       	st	Z, r1
    1e80:	76 97       	sbiw	r30, 0x16	; 22
    1e82:	80 81       	ld	r24, Z
    1e84:	88 23       	and	r24, r24
    1e86:	89 f0       	breq	.+34     	; 0x1eaa <ESP8266_Update+0x42e>
    1e88:	7a 9e       	mul	r7, r26
    1e8a:	b0 01       	movw	r22, r0
    1e8c:	7b 9e       	mul	r7, r27
    1e8e:	70 0d       	add	r23, r0
    1e90:	11 24       	eor	r1, r1
    1e92:	f9 01       	movw	r30, r18
    1e94:	e4 59       	subi	r30, 0x94	; 148
    1e96:	ff 4f       	sbci	r31, 0xFF	; 255
    1e98:	40 81       	ld	r20, Z
    1e9a:	51 81       	ldd	r21, Z+1	; 0x01
    1e9c:	68 5a       	subi	r22, 0xA8	; 168
    1e9e:	7f 4f       	sbci	r23, 0xFF	; 255
    1ea0:	60 0f       	add	r22, r16
    1ea2:	71 1f       	adc	r23, r17
    1ea4:	c8 01       	movw	r24, r16
    1ea6:	9a d5       	rcall	.+2868   	; 0x29dc <ESP8266_Callback_ClientConnectionDataReceived>
    1ea8:	13 c0       	rjmp	.+38     	; 0x1ed0 <ESP8266_Update+0x454>
    1eaa:	7a 9e       	mul	r7, r26
    1eac:	b0 01       	movw	r22, r0
    1eae:	7b 9e       	mul	r7, r27
    1eb0:	70 0d       	add	r23, r0
    1eb2:	11 24       	eor	r1, r1
    1eb4:	f8 01       	movw	r30, r16
    1eb6:	e6 0f       	add	r30, r22
    1eb8:	f7 1f       	adc	r31, r23
    1eba:	e4 59       	subi	r30, 0x94	; 148
    1ebc:	ff 4f       	sbci	r31, 0xFF	; 255
    1ebe:	40 81       	ld	r20, Z
    1ec0:	51 81       	ldd	r21, Z+1	; 0x01
    1ec2:	68 5a       	subi	r22, 0xA8	; 168
    1ec4:	7f 4f       	sbci	r23, 0xFF	; 255
    1ec6:	60 0f       	add	r22, r16
    1ec8:	71 1f       	adc	r23, r17
    1eca:	c8 01       	movw	r24, r16
    1ecc:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <ESP8266_Callback_ServerConnectionDataReceived>
    1ed0:	f7 01       	movw	r30, r14
    1ed2:	11 82       	std	Z+1, r1	; 0x01
    1ed4:	10 82       	st	Z, r1
    1ed6:	d7 01       	movw	r26, r14
    1ed8:	8d 91       	ld	r24, X+
    1eda:	9c 91       	ld	r25, X
    1edc:	a0 e0       	ldi	r26, 0x00	; 0
    1ede:	b0 e0       	ldi	r27, 0x00	; 0
    1ee0:	f6 01       	movw	r30, r12
    1ee2:	20 81       	ld	r18, Z
    1ee4:	f8 01       	movw	r30, r16
    1ee6:	72 9e       	mul	r7, r18
    1ee8:	e0 0d       	add	r30, r0
    1eea:	f1 1d       	adc	r31, r1
    1eec:	11 24       	eor	r1, r1
    1eee:	ee 59       	subi	r30, 0x9E	; 158
    1ef0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ef2:	40 81       	ld	r20, Z
    1ef4:	51 81       	ldd	r21, Z+1	; 0x01
    1ef6:	62 81       	ldd	r22, Z+2	; 0x02
    1ef8:	73 81       	ldd	r23, Z+3	; 0x03
    1efa:	84 17       	cp	r24, r20
    1efc:	95 07       	cpc	r25, r21
    1efe:	a6 07       	cpc	r26, r22
    1f00:	b7 07       	cpc	r27, r23
    1f02:	30 f4       	brcc	.+12     	; 0x1f10 <ESP8266_Update+0x494>
    1f04:	c5 01       	movw	r24, r10
    1f06:	0e 94 9c 01 	call	0x338	; 0x338 <BUFFER_GetFull>
    1f0a:	89 2b       	or	r24, r25
    1f0c:	09 f0       	breq	.+2      	; 0x1f10 <ESP8266_Update+0x494>
    1f0e:	61 cf       	rjmp	.-318    	; 0x1dd2 <ESP8266_Update+0x356>
    1f10:	f8 01       	movw	r30, r16
    1f12:	e6 50       	subi	r30, 0x06	; 6
    1f14:	fe 4f       	sbci	r31, 0xFE	; 254
    1f16:	20 81       	ld	r18, Z
    1f18:	32 97       	sbiw	r30, 0x02	; 2
    1f1a:	80 81       	ld	r24, Z
    1f1c:	91 81       	ldd	r25, Z+1	; 0x01
    1f1e:	a0 e0       	ldi	r26, 0x00	; 0
    1f20:	b0 e0       	ldi	r27, 0x00	; 0
    1f22:	e2 2e       	mov	r14, r18
    1f24:	f1 2c       	mov	r15, r1
    1f26:	f8 01       	movw	r30, r16
    1f28:	33 e4       	ldi	r19, 0x43	; 67
    1f2a:	23 9f       	mul	r18, r19
    1f2c:	e0 0d       	add	r30, r0
    1f2e:	f1 1d       	adc	r31, r1
    1f30:	11 24       	eor	r1, r1
    1f32:	ee 59       	subi	r30, 0x9E	; 158
    1f34:	ff 4f       	sbci	r31, 0xFF	; 255
    1f36:	40 81       	ld	r20, Z
    1f38:	51 81       	ldd	r21, Z+1	; 0x01
    1f3a:	62 81       	ldd	r22, Z+2	; 0x02
    1f3c:	73 81       	ldd	r23, Z+3	; 0x03
    1f3e:	84 17       	cp	r24, r20
    1f40:	95 07       	cpc	r25, r21
    1f42:	a6 07       	cpc	r26, r22
    1f44:	b7 07       	cpc	r27, r23
    1f46:	08 f4       	brcc	.+2      	; 0x1f4a <ESP8266_Update+0x4ce>
    1f48:	57 c0       	rjmp	.+174    	; 0x1ff8 <ESP8266_Update+0x57c>
    1f4a:	f8 01       	movw	r30, r16
    1f4c:	eb 50       	subi	r30, 0x0B	; 11
    1f4e:	fe 4f       	sbci	r31, 0xFE	; 254
    1f50:	10 82       	st	Z, r1
    1f52:	23 e4       	ldi	r18, 0x43	; 67
    1f54:	2e 9d       	mul	r18, r14
    1f56:	c0 01       	movw	r24, r0
    1f58:	2f 9d       	mul	r18, r15
    1f5a:	90 0d       	add	r25, r0
    1f5c:	11 24       	eor	r1, r1
    1f5e:	80 0f       	add	r24, r16
    1f60:	91 1f       	adc	r25, r17
    1f62:	fc 01       	movw	r30, r24
    1f64:	e2 59       	subi	r30, 0x92	; 146
    1f66:	ff 4f       	sbci	r31, 0xFF	; 255
    1f68:	d8 01       	movw	r26, r16
    1f6a:	aa 50       	subi	r26, 0x0A	; 10
    1f6c:	be 4f       	sbci	r27, 0xFE	; 254
    1f6e:	2d 91       	ld	r18, X+
    1f70:	3c 91       	ld	r19, X
    1f72:	31 83       	std	Z+1, r19	; 0x01
    1f74:	20 83       	st	Z, r18
    1f76:	32 96       	adiw	r30, 0x02	; 2
    1f78:	21 e0       	ldi	r18, 0x01	; 1
    1f7a:	20 83       	st	Z, r18
    1f7c:	b9 96       	adiw	r30, 0x29	; 41
    1f7e:	80 81       	ld	r24, Z
    1f80:	88 23       	and	r24, r24
    1f82:	21 f1       	breq	.+72     	; 0x1fcc <ESP8266_Update+0x550>
    1f84:	83 e4       	ldi	r24, 0x43	; 67
    1f86:	8e 9d       	mul	r24, r14
    1f88:	f0 01       	movw	r30, r0
    1f8a:	8f 9d       	mul	r24, r15
    1f8c:	f0 0d       	add	r31, r0
    1f8e:	11 24       	eor	r1, r1
    1f90:	e0 0f       	add	r30, r16
    1f92:	f1 1f       	adc	r31, r17
    1f94:	e4 59       	subi	r30, 0x94	; 148
    1f96:	ff 4f       	sbci	r31, 0xFF	; 255
    1f98:	65 eb       	ldi	r22, 0xB5	; 181
    1f9a:	73 e0       	ldi	r23, 0x03	; 3
    1f9c:	80 81       	ld	r24, Z
    1f9e:	91 81       	ldd	r25, Z+1	; 0x01
    1fa0:	32 d7       	rcall	.+3684   	; 0x2e06 <strstr>
    1fa2:	00 97       	sbiw	r24, 0x00	; 0
    1fa4:	99 f0       	breq	.+38     	; 0x1fcc <ESP8266_Update+0x550>
    1fa6:	60 e0       	ldi	r22, 0x00	; 0
    1fa8:	70 e0       	ldi	r23, 0x00	; 0
    1faa:	40 96       	adiw	r24, 0x10	; 16
    1fac:	0e 94 1e 03 	call	0x63c	; 0x63c <ParseNumber>
    1fb0:	23 e4       	ldi	r18, 0x43	; 67
    1fb2:	2e 9d       	mul	r18, r14
    1fb4:	f0 01       	movw	r30, r0
    1fb6:	2f 9d       	mul	r18, r15
    1fb8:	f0 0d       	add	r31, r0
    1fba:	11 24       	eor	r1, r1
    1fbc:	e0 0f       	add	r30, r16
    1fbe:	f1 1f       	adc	r31, r17
    1fc0:	ee 58       	subi	r30, 0x8E	; 142
    1fc2:	ff 4f       	sbci	r31, 0xFF	; 255
    1fc4:	60 83       	st	Z, r22
    1fc6:	71 83       	std	Z+1, r23	; 0x01
    1fc8:	82 83       	std	Z+2, r24	; 0x02
    1fca:	93 83       	std	Z+3, r25	; 0x03
    1fcc:	f8 01       	movw	r30, r16
    1fce:	e6 50       	subi	r30, 0x06	; 6
    1fd0:	fe 4f       	sbci	r31, 0xFE	; 254
    1fd2:	80 81       	ld	r24, Z
    1fd4:	f8 01       	movw	r30, r16
    1fd6:	93 e4       	ldi	r25, 0x43	; 67
    1fd8:	89 9f       	mul	r24, r25
    1fda:	e0 0d       	add	r30, r0
    1fdc:	f1 1d       	adc	r31, r1
    1fde:	11 24       	eor	r1, r1
    1fe0:	ef 58       	subi	r30, 0x8F	; 143
    1fe2:	ff 4f       	sbci	r31, 0xFF	; 255
    1fe4:	81 e0       	ldi	r24, 0x01	; 1
    1fe6:	80 83       	st	Z, r24
    1fe8:	07 c0       	rjmp	.+14     	; 0x1ff8 <ESP8266_Update+0x57c>
    1fea:	f8 01       	movw	r30, r16
    1fec:	ee 5d       	subi	r30, 0xDE	; 222
    1fee:	fd 4f       	sbci	r31, 0xFD	; 253
    1ff0:	80 81       	ld	r24, Z
    1ff2:	80 ff       	sbrs	r24, 0
    1ff4:	66 ce       	rjmp	.-820    	; 0x1cc2 <ESP8266_Update+0x246>
    1ff6:	b6 cd       	rjmp	.-1172   	; 0x1b64 <ESP8266_Update+0xe8>
    1ff8:	c8 01       	movw	r24, r16
    1ffa:	0e 94 e7 05 	call	0xbce	; 0xbce <CallConnectionCallbacks>
    1ffe:	f8 01       	movw	r30, r16
    2000:	eb 5d       	subi	r30, 0xDB	; 219
    2002:	fd 4f       	sbci	r31, 0xFD	; 253
    2004:	10 82       	st	Z, r1
    2006:	80 e0       	ldi	r24, 0x00	; 0
    2008:	cd 57       	subi	r28, 0x7D	; 125
    200a:	df 4f       	sbci	r29, 0xFF	; 255
    200c:	0f b6       	in	r0, 0x3f	; 63
    200e:	f8 94       	cli
    2010:	de bf       	out	0x3e, r29	; 62
    2012:	0f be       	out	0x3f, r0	; 63
    2014:	cd bf       	out	0x3d, r28	; 61
    2016:	df 91       	pop	r29
    2018:	cf 91       	pop	r28
    201a:	1f 91       	pop	r17
    201c:	0f 91       	pop	r16
    201e:	ff 90       	pop	r15
    2020:	ef 90       	pop	r14
    2022:	df 90       	pop	r13
    2024:	cf 90       	pop	r12
    2026:	bf 90       	pop	r11
    2028:	af 90       	pop	r10
    202a:	9f 90       	pop	r9
    202c:	8f 90       	pop	r8
    202e:	7f 90       	pop	r7
    2030:	5f 90       	pop	r5
    2032:	4f 90       	pop	r4
    2034:	3f 90       	pop	r3
    2036:	2f 90       	pop	r2
    2038:	08 95       	ret

0000203a <SendCommand>:
    203a:	cf 92       	push	r12
    203c:	df 92       	push	r13
    203e:	ef 92       	push	r14
    2040:	ff 92       	push	r15
    2042:	1f 93       	push	r17
    2044:	cf 93       	push	r28
    2046:	df 93       	push	r29
    2048:	ec 01       	movw	r28, r24
    204a:	16 2f       	mov	r17, r22
    204c:	6a 01       	movw	r12, r20
    204e:	79 01       	movw	r14, r18
    2050:	8c 81       	ldd	r24, Y+4	; 0x04
    2052:	9d 81       	ldd	r25, Y+5	; 0x05
    2054:	ae 81       	ldd	r26, Y+6	; 0x06
    2056:	bf 81       	ldd	r27, Y+7	; 0x07
    2058:	89 2b       	or	r24, r25
    205a:	8a 2b       	or	r24, r26
    205c:	8b 2b       	or	r24, r27
    205e:	39 f0       	breq	.+14     	; 0x206e <SendCommand+0x34>
    2060:	ce 01       	movw	r24, r28
    2062:	0c dd       	rcall	.-1512   	; 0x1a7c <ESP8266_Update>
    2064:	cb 5d       	subi	r28, 0xDB	; 219
    2066:	dd 4f       	sbci	r29, 0xFD	; 253
    2068:	87 e0       	ldi	r24, 0x07	; 7
    206a:	88 83       	st	Y, r24
    206c:	33 c0       	rjmp	.+102    	; 0x20d4 <SendCommand+0x9a>
    206e:	61 31       	cpi	r22, 0x11	; 17
    2070:	21 f4       	brne	.+8      	; 0x207a <SendCommand+0x40>
    2072:	80 e4       	ldi	r24, 0x40	; 64
    2074:	96 e1       	ldi	r25, 0x16	; 22
    2076:	0e 94 cf 01 	call	0x39e	; 0x39e <BUFFER_Reset>
    207a:	c1 14       	cp	r12, r1
    207c:	d1 04       	cpc	r13, r1
    207e:	51 f0       	breq	.+20     	; 0x2094 <SendCommand+0x5a>
    2080:	f6 01       	movw	r30, r12
    2082:	01 90       	ld	r0, Z+
    2084:	00 20       	and	r0, r0
    2086:	e9 f7       	brne	.-6      	; 0x2082 <SendCommand+0x48>
    2088:	31 97       	sbiw	r30, 0x01	; 1
    208a:	bf 01       	movw	r22, r30
    208c:	6c 19       	sub	r22, r12
    208e:	7d 09       	sbc	r23, r13
    2090:	c6 01       	movw	r24, r12
    2092:	af d2       	rcall	.+1374   	; 0x25f2 <ESP8266_LL_USARTSend>
    2094:	81 2f       	mov	r24, r17
    2096:	90 e0       	ldi	r25, 0x00	; 0
    2098:	a0 e0       	ldi	r26, 0x00	; 0
    209a:	b0 e0       	ldi	r27, 0x00	; 0
    209c:	8c 83       	std	Y+4, r24	; 0x04
    209e:	9d 83       	std	Y+5, r25	; 0x05
    20a0:	ae 83       	std	Y+6, r26	; 0x06
    20a2:	bf 83       	std	Y+7, r27	; 0x07
    20a4:	18 86       	std	Y+8, r1	; 0x08
    20a6:	b7 01       	movw	r22, r14
    20a8:	ce 01       	movw	r24, r28
    20aa:	08 96       	adiw	r24, 0x08	; 8
    20ac:	88 d6       	rcall	.+3344   	; 0x2dbe <strcpy>
    20ae:	fe 01       	movw	r30, r28
    20b0:	e8 5b       	subi	r30, 0xB8	; 184
    20b2:	ff 4f       	sbci	r31, 0xFF	; 255
    20b4:	de 01       	movw	r26, r28
    20b6:	a4 5b       	subi	r26, 0xB4	; 180
    20b8:	bf 4f       	sbci	r27, 0xFF	; 255
    20ba:	8d 91       	ld	r24, X+
    20bc:	9d 91       	ld	r25, X+
    20be:	0d 90       	ld	r0, X+
    20c0:	bc 91       	ld	r27, X
    20c2:	a0 2d       	mov	r26, r0
    20c4:	80 83       	st	Z, r24
    20c6:	91 83       	std	Z+1, r25	; 0x01
    20c8:	a2 83       	std	Z+2, r26	; 0x02
    20ca:	b3 83       	std	Z+3, r27	; 0x03
    20cc:	cb 5d       	subi	r28, 0xDB	; 219
    20ce:	dd 4f       	sbci	r29, 0xFD	; 253
    20d0:	18 82       	st	Y, r1
    20d2:	80 e0       	ldi	r24, 0x00	; 0
    20d4:	df 91       	pop	r29
    20d6:	cf 91       	pop	r28
    20d8:	1f 91       	pop	r17
    20da:	ff 90       	pop	r15
    20dc:	ef 90       	pop	r14
    20de:	df 90       	pop	r13
    20e0:	cf 90       	pop	r12
    20e2:	08 95       	ret

000020e4 <ESP8266_WifiDisconnect>:
    20e4:	22 ee       	ldi	r18, 0xE2	; 226
    20e6:	33 e0       	ldi	r19, 0x03	; 3
    20e8:	4b ee       	ldi	r20, 0xEB	; 235
    20ea:	53 e0       	ldi	r21, 0x03	; 3
    20ec:	61 e0       	ldi	r22, 0x01	; 1
    20ee:	a5 cf       	rjmp	.-182    	; 0x203a <SendCommand>
    20f0:	08 95       	ret

000020f2 <ESP8266_WifiGetConnected>:
    20f2:	2f e6       	ldi	r18, 0x6F	; 111
    20f4:	33 e0       	ldi	r19, 0x03	; 3
    20f6:	46 ef       	ldi	r20, 0xF6	; 246
    20f8:	53 e0       	ldi	r21, 0x03	; 3
    20fa:	63 e1       	ldi	r22, 0x13	; 19
    20fc:	9e cf       	rjmp	.-196    	; 0x203a <SendCommand>
    20fe:	08 95       	ret

00002100 <ESP8266_GetSTAIP>:
    2100:	cf 93       	push	r28
    2102:	df 93       	push	r29
    2104:	ec 01       	movw	r28, r24
    2106:	26 e0       	ldi	r18, 0x06	; 6
    2108:	34 e0       	ldi	r19, 0x04	; 4
    210a:	42 e1       	ldi	r20, 0x12	; 18
    210c:	54 e0       	ldi	r21, 0x04	; 4
    210e:	66 e1       	ldi	r22, 0x16	; 22
    2110:	94 df       	rcall	.-216    	; 0x203a <SendCommand>
    2112:	fe 01       	movw	r30, r28
    2114:	eb 5d       	subi	r30, 0xDB	; 219
    2116:	fd 4f       	sbci	r31, 0xFD	; 253
    2118:	80 81       	ld	r24, Z
    211a:	81 11       	cpse	r24, r1
    211c:	06 c0       	rjmp	.+12     	; 0x212a <ESP8266_GetSTAIP+0x2a>
    211e:	cf 5d       	subi	r28, 0xDF	; 223
    2120:	dd 4f       	sbci	r29, 0xFD	; 253
    2122:	98 81       	ld	r25, Y
    2124:	9c 7f       	andi	r25, 0xFC	; 252
    2126:	9b 7f       	andi	r25, 0xFB	; 251
    2128:	98 83       	st	Y, r25
    212a:	df 91       	pop	r29
    212c:	cf 91       	pop	r28
    212e:	08 95       	ret

00002130 <ESP8266_WaitReady>:
    2130:	0f 93       	push	r16
    2132:	1f 93       	push	r17
    2134:	cf 93       	push	r28
    2136:	df 93       	push	r29
    2138:	ec 01       	movw	r28, r24
    213a:	8c 01       	movw	r16, r24
    213c:	0e 5d       	subi	r16, 0xDE	; 222
    213e:	1d 4f       	sbci	r17, 0xFD	; 253
    2140:	f8 01       	movw	r30, r16
    2142:	80 81       	ld	r24, Z
    2144:	80 ff       	sbrs	r24, 0
    2146:	11 c0       	rjmp	.+34     	; 0x216a <ESP8266_WaitReady+0x3a>
    2148:	42 e0       	ldi	r20, 0x02	; 2
    214a:	50 e0       	ldi	r21, 0x00	; 0
    214c:	6f ea       	ldi	r22, 0xAF	; 175
    214e:	73 e0       	ldi	r23, 0x03	; 3
    2150:	80 e4       	ldi	r24, 0x40	; 64
    2152:	96 e1       	ldi	r25, 0x16	; 22
    2154:	0e 94 12 02 	call	0x424	; 0x424 <BUFFER_Find>
    2158:	99 23       	and	r25, r25
    215a:	3c f0       	brlt	.+14     	; 0x216a <ESP8266_WaitReady+0x3a>
    215c:	fe 01       	movw	r30, r28
    215e:	ef 5d       	subi	r30, 0xDF	; 223
    2160:	fd 4f       	sbci	r31, 0xFD	; 253
    2162:	81 81       	ldd	r24, Z+1	; 0x01
    2164:	8e 7f       	andi	r24, 0xFE	; 254
    2166:	81 83       	std	Z+1, r24	; 0x01
    2168:	0a c0       	rjmp	.+20     	; 0x217e <ESP8266_WaitReady+0x4e>
    216a:	ce 01       	movw	r24, r28
    216c:	87 dc       	rcall	.-1778   	; 0x1a7c <ESP8266_Update>
    216e:	8c 81       	ldd	r24, Y+4	; 0x04
    2170:	9d 81       	ldd	r25, Y+5	; 0x05
    2172:	ae 81       	ldd	r26, Y+6	; 0x06
    2174:	bf 81       	ldd	r27, Y+7	; 0x07
    2176:	89 2b       	or	r24, r25
    2178:	8a 2b       	or	r24, r26
    217a:	8b 2b       	or	r24, r27
    217c:	09 f7       	brne	.-62     	; 0x2140 <ESP8266_WaitReady+0x10>
    217e:	cb 5d       	subi	r28, 0xDB	; 219
    2180:	dd 4f       	sbci	r29, 0xFD	; 253
    2182:	18 82       	st	Y, r1
    2184:	80 e0       	ldi	r24, 0x00	; 0
    2186:	df 91       	pop	r29
    2188:	cf 91       	pop	r28
    218a:	1f 91       	pop	r17
    218c:	0f 91       	pop	r16
    218e:	08 95       	ret

00002190 <ESP8266_ServerEnable>:
    2190:	ef 92       	push	r14
    2192:	ff 92       	push	r15
    2194:	0f 93       	push	r16
    2196:	1f 93       	push	r17
    2198:	cf 93       	push	r28
    219a:	df 93       	push	r29
    219c:	cd b7       	in	r28, 0x3d	; 61
    219e:	de b7       	in	r29, 0x3e	; 62
    21a0:	63 97       	sbiw	r28, 0x13	; 19
    21a2:	0f b6       	in	r0, 0x3f	; 63
    21a4:	f8 94       	cli
    21a6:	de bf       	out	0x3e, r29	; 62
    21a8:	0f be       	out	0x3f, r0	; 63
    21aa:	cd bf       	out	0x3d, r28	; 61
    21ac:	8c 01       	movw	r16, r24
    21ae:	7f 93       	push	r23
    21b0:	6f 93       	push	r22
    21b2:	8a e6       	ldi	r24, 0x6A	; 106
    21b4:	94 e0       	ldi	r25, 0x04	; 4
    21b6:	9f 93       	push	r25
    21b8:	8f 93       	push	r24
    21ba:	ce 01       	movw	r24, r28
    21bc:	01 96       	adiw	r24, 0x01	; 1
    21be:	7c 01       	movw	r14, r24
    21c0:	9f 93       	push	r25
    21c2:	8f 93       	push	r24
    21c4:	a4 d6       	rcall	.+3400   	; 0x2f0e <sprintf>
    21c6:	2e e7       	ldi	r18, 0x7E	; 126
    21c8:	34 e0       	ldi	r19, 0x04	; 4
    21ca:	a7 01       	movw	r20, r14
    21cc:	66 e0       	ldi	r22, 0x06	; 6
    21ce:	c8 01       	movw	r24, r16
    21d0:	34 df       	rcall	.-408    	; 0x203a <SendCommand>
    21d2:	f8 2e       	mov	r15, r24
    21d4:	0f 90       	pop	r0
    21d6:	0f 90       	pop	r0
    21d8:	0f 90       	pop	r0
    21da:	0f 90       	pop	r0
    21dc:	0f 90       	pop	r0
    21de:	0f 90       	pop	r0
    21e0:	88 23       	and	r24, r24
    21e2:	29 f0       	breq	.+10     	; 0x21ee <ESP8266_ServerEnable+0x5e>
    21e4:	f8 01       	movw	r30, r16
    21e6:	eb 5d       	subi	r30, 0xDB	; 219
    21e8:	fd 4f       	sbci	r31, 0xFD	; 253
    21ea:	f0 80       	ld	r15, Z
    21ec:	12 c0       	rjmp	.+36     	; 0x2212 <__stack+0x13>
    21ee:	c8 01       	movw	r24, r16
    21f0:	9f df       	rcall	.-194    	; 0x2130 <ESP8266_WaitReady>
    21f2:	f8 01       	movw	r30, r16
    21f4:	ee 5d       	subi	r30, 0xDE	; 222
    21f6:	fd 4f       	sbci	r31, 0xFD	; 253
    21f8:	80 81       	ld	r24, Z
    21fa:	81 fd       	sbrc	r24, 1
    21fc:	06 c0       	rjmp	.+12     	; 0x220a <__stack+0xb>
    21fe:	33 96       	adiw	r30, 0x03	; 3
    2200:	81 e0       	ldi	r24, 0x01	; 1
    2202:	80 83       	st	Z, r24
    2204:	ff 24       	eor	r15, r15
    2206:	f3 94       	inc	r15
    2208:	04 c0       	rjmp	.+8      	; 0x2212 <__stack+0x13>
    220a:	f8 01       	movw	r30, r16
    220c:	eb 5d       	subi	r30, 0xDB	; 219
    220e:	fd 4f       	sbci	r31, 0xFD	; 253
    2210:	10 82       	st	Z, r1
    2212:	8f 2d       	mov	r24, r15
    2214:	63 96       	adiw	r28, 0x13	; 19
    2216:	0f b6       	in	r0, 0x3f	; 63
    2218:	f8 94       	cli
    221a:	de bf       	out	0x3e, r29	; 62
    221c:	0f be       	out	0x3f, r0	; 63
    221e:	cd bf       	out	0x3d, r28	; 61
    2220:	df 91       	pop	r29
    2222:	cf 91       	pop	r28
    2224:	1f 91       	pop	r17
    2226:	0f 91       	pop	r16
    2228:	ff 90       	pop	r15
    222a:	ef 90       	pop	r14
    222c:	08 95       	ret

0000222e <ESP8266_GetAP>:
    222e:	cf 93       	push	r28
    2230:	df 93       	push	r29
    2232:	ec 01       	movw	r28, r24
    2234:	2b ef       	ldi	r18, 0xFB	; 251
    2236:	34 e0       	ldi	r19, 0x04	; 4
    2238:	4b ea       	ldi	r20, 0xAB	; 171
    223a:	54 e0       	ldi	r21, 0x04	; 4
    223c:	6c e0       	ldi	r22, 0x0C	; 12
    223e:	fd de       	rcall	.-518    	; 0x203a <SendCommand>
    2240:	88 23       	and	r24, r24
    2242:	21 f0       	breq	.+8      	; 0x224c <ESP8266_GetAP+0x1e>
    2244:	cb 5d       	subi	r28, 0xDB	; 219
    2246:	dd 4f       	sbci	r29, 0xFD	; 253
    2248:	88 81       	ld	r24, Y
    224a:	02 c0       	rjmp	.+4      	; 0x2250 <ESP8266_GetAP+0x22>
    224c:	ce 01       	movw	r24, r28
    224e:	70 df       	rcall	.-288    	; 0x2130 <ESP8266_WaitReady>
    2250:	df 91       	pop	r29
    2252:	cf 91       	pop	r28
    2254:	08 95       	ret

00002256 <ESP8266_SetMode>:
    2256:	df 92       	push	r13
    2258:	ef 92       	push	r14
    225a:	ff 92       	push	r15
    225c:	0f 93       	push	r16
    225e:	1f 93       	push	r17
    2260:	cf 93       	push	r28
    2262:	df 93       	push	r29
    2264:	cd b7       	in	r28, 0x3d	; 61
    2266:	de b7       	in	r29, 0x3e	; 62
    2268:	61 97       	sbiw	r28, 0x11	; 17
    226a:	0f b6       	in	r0, 0x3f	; 63
    226c:	f8 94       	cli
    226e:	de bf       	out	0x3e, r29	; 62
    2270:	0f be       	out	0x3f, r0	; 63
    2272:	cd bf       	out	0x3d, r28	; 61
    2274:	8c 01       	movw	r16, r24
    2276:	d6 2e       	mov	r13, r22
    2278:	1f 92       	push	r1
    227a:	6f 93       	push	r22
    227c:	87 eb       	ldi	r24, 0xB7	; 183
    227e:	94 e0       	ldi	r25, 0x04	; 4
    2280:	9f 93       	push	r25
    2282:	8f 93       	push	r24
    2284:	ce 01       	movw	r24, r28
    2286:	01 96       	adiw	r24, 0x01	; 1
    2288:	7c 01       	movw	r14, r24
    228a:	9f 93       	push	r25
    228c:	8f 93       	push	r24
    228e:	3f d6       	rcall	.+3198   	; 0x2f0e <sprintf>
    2290:	2a ec       	ldi	r18, 0xCA	; 202
    2292:	34 e0       	ldi	r19, 0x04	; 4
    2294:	a7 01       	movw	r20, r14
    2296:	65 e0       	ldi	r22, 0x05	; 5
    2298:	c8 01       	movw	r24, r16
    229a:	cf de       	rcall	.-610    	; 0x203a <SendCommand>
    229c:	0f 90       	pop	r0
    229e:	0f 90       	pop	r0
    22a0:	0f 90       	pop	r0
    22a2:	0f 90       	pop	r0
    22a4:	0f 90       	pop	r0
    22a6:	0f 90       	pop	r0
    22a8:	88 23       	and	r24, r24
    22aa:	29 f0       	breq	.+10     	; 0x22b6 <ESP8266_SetMode+0x60>
    22ac:	f8 01       	movw	r30, r16
    22ae:	eb 5d       	subi	r30, 0xDB	; 219
    22b0:	fd 4f       	sbci	r31, 0xFD	; 253
    22b2:	80 81       	ld	r24, Z
    22b4:	13 c0       	rjmp	.+38     	; 0x22dc <ESP8266_SetMode+0x86>
    22b6:	f8 01       	movw	r30, r16
    22b8:	e5 53       	subi	r30, 0x35	; 53
    22ba:	fe 4f       	sbci	r31, 0xFE	; 254
    22bc:	d0 82       	st	Z, r13
    22be:	c8 01       	movw	r24, r16
    22c0:	37 df       	rcall	.-402    	; 0x2130 <ESP8266_WaitReady>
    22c2:	f8 01       	movw	r30, r16
    22c4:	e4 53       	subi	r30, 0x34	; 52
    22c6:	fe 4f       	sbci	r31, 0xFE	; 254
    22c8:	80 81       	ld	r24, Z
    22ca:	8d 15       	cp	r24, r13
    22cc:	29 f0       	breq	.+10     	; 0x22d8 <ESP8266_SetMode+0x82>
    22ce:	e7 5a       	subi	r30, 0xA7	; 167
    22d0:	ff 4f       	sbci	r31, 0xFF	; 255
    22d2:	81 e0       	ldi	r24, 0x01	; 1
    22d4:	80 83       	st	Z, r24
    22d6:	02 c0       	rjmp	.+4      	; 0x22dc <ESP8266_SetMode+0x86>
    22d8:	c8 01       	movw	r24, r16
    22da:	a9 df       	rcall	.-174    	; 0x222e <ESP8266_GetAP>
    22dc:	61 96       	adiw	r28, 0x11	; 17
    22de:	0f b6       	in	r0, 0x3f	; 63
    22e0:	f8 94       	cli
    22e2:	de bf       	out	0x3e, r29	; 62
    22e4:	0f be       	out	0x3f, r0	; 63
    22e6:	cd bf       	out	0x3d, r28	; 61
    22e8:	df 91       	pop	r29
    22ea:	cf 91       	pop	r28
    22ec:	1f 91       	pop	r17
    22ee:	0f 91       	pop	r16
    22f0:	ff 90       	pop	r15
    22f2:	ef 90       	pop	r14
    22f4:	df 90       	pop	r13
    22f6:	08 95       	ret

000022f8 <ESP8266_RequestSendData>:
    22f8:	0f 93       	push	r16
    22fa:	1f 93       	push	r17
    22fc:	cf 93       	push	r28
    22fe:	df 93       	push	r29
    2300:	ec 01       	movw	r28, r24
    2302:	8b 01       	movw	r16, r22
    2304:	8c 81       	ldd	r24, Y+4	; 0x04
    2306:	9d 81       	ldd	r25, Y+5	; 0x05
    2308:	ae 81       	ldd	r26, Y+6	; 0x06
    230a:	bf 81       	ldd	r27, Y+7	; 0x07
    230c:	89 2b       	or	r24, r25
    230e:	8a 2b       	or	r24, r26
    2310:	8b 2b       	or	r24, r27
    2312:	39 f0       	breq	.+14     	; 0x2322 <ESP8266_RequestSendData+0x2a>
    2314:	ce 01       	movw	r24, r28
    2316:	b2 db       	rcall	.-2204   	; 0x1a7c <ESP8266_Update>
    2318:	cb 5d       	subi	r28, 0xDB	; 219
    231a:	dd 4f       	sbci	r29, 0xFD	; 253
    231c:	87 e0       	ldi	r24, 0x07	; 7
    231e:	88 83       	st	Y, r24
    2320:	33 c0       	rjmp	.+102    	; 0x2388 <ESP8266_RequestSendData+0x90>
    2322:	fb 01       	movw	r30, r22
    2324:	81 81       	ldd	r24, Z+1	; 0x01
    2326:	80 5d       	subi	r24, 0xD0	; 208
    2328:	81 83       	std	Z+1, r24	; 0x01
    232a:	65 e0       	ldi	r22, 0x05	; 5
    232c:	70 e0       	ldi	r23, 0x00	; 0
    232e:	80 e5       	ldi	r24, 0x50	; 80
    2330:	95 e0       	ldi	r25, 0x05	; 5
    2332:	5f d1       	rcall	.+702    	; 0x25f2 <ESP8266_LL_USARTSend>
    2334:	61 e0       	ldi	r22, 0x01	; 1
    2336:	70 e0       	ldi	r23, 0x00	; 0
    2338:	c8 01       	movw	r24, r16
    233a:	01 96       	adiw	r24, 0x01	; 1
    233c:	5a d1       	rcall	.+692    	; 0x25f2 <ESP8266_LL_USARTSend>
    233e:	65 e0       	ldi	r22, 0x05	; 5
    2340:	70 e0       	ldi	r23, 0x00	; 0
    2342:	8e e5       	ldi	r24, 0x5E	; 94
    2344:	95 e0       	ldi	r25, 0x05	; 5
    2346:	55 d1       	rcall	.+682    	; 0x25f2 <ESP8266_LL_USARTSend>
    2348:	f8 01       	movw	r30, r16
    234a:	81 81       	ldd	r24, Z+1	; 0x01
    234c:	80 53       	subi	r24, 0x30	; 48
    234e:	81 83       	std	Z+1, r24	; 0x01
    2350:	26 e6       	ldi	r18, 0x66	; 102
    2352:	35 e0       	ldi	r19, 0x05	; 5
    2354:	40 e0       	ldi	r20, 0x00	; 0
    2356:	50 e0       	ldi	r21, 0x00	; 0
    2358:	68 e0       	ldi	r22, 0x08	; 8
    235a:	ce 01       	movw	r24, r28
    235c:	6e de       	rcall	.-804    	; 0x203a <SendCommand>
    235e:	88 23       	and	r24, r24
    2360:	21 f0       	breq	.+8      	; 0x236a <ESP8266_RequestSendData+0x72>
    2362:	cb 5d       	subi	r28, 0xDB	; 219
    2364:	dd 4f       	sbci	r29, 0xFD	; 253
    2366:	88 81       	ld	r24, Y
    2368:	0f c0       	rjmp	.+30     	; 0x2388 <ESP8266_RequestSendData+0x90>
    236a:	81 e0       	ldi	r24, 0x01	; 1
    236c:	f8 01       	movw	r30, r16
    236e:	82 8b       	std	Z+18, r24	; 0x12
    2370:	fe 01       	movw	r30, r28
    2372:	ef 5d       	subi	r30, 0xDF	; 223
    2374:	fd 4f       	sbci	r31, 0xFD	; 253
    2376:	81 81       	ldd	r24, Z+1	; 0x01
    2378:	81 60       	ori	r24, 0x01	; 1
    237a:	81 83       	std	Z+1, r24	; 0x01
    237c:	32 97       	sbiw	r30, 0x02	; 2
    237e:	11 83       	std	Z+1, r17	; 0x01
    2380:	00 83       	st	Z, r16
    2382:	cb 5d       	subi	r28, 0xDB	; 219
    2384:	dd 4f       	sbci	r29, 0xFD	; 253
    2386:	88 81       	ld	r24, Y
    2388:	df 91       	pop	r29
    238a:	cf 91       	pop	r28
    238c:	1f 91       	pop	r17
    238e:	0f 91       	pop	r16
    2390:	08 95       	ret

00002392 <ESP8266_WifiConnect>:
    2392:	cf 92       	push	r12
    2394:	df 92       	push	r13
    2396:	ef 92       	push	r14
    2398:	ff 92       	push	r15
    239a:	0f 93       	push	r16
    239c:	1f 93       	push	r17
    239e:	cf 93       	push	r28
    23a0:	df 93       	push	r29
    23a2:	ec 01       	movw	r28, r24
    23a4:	6b 01       	movw	r12, r22
    23a6:	7a 01       	movw	r14, r20
    23a8:	0c 81       	ldd	r16, Y+4	; 0x04
    23aa:	1d 81       	ldd	r17, Y+5	; 0x05
    23ac:	2e 81       	ldd	r18, Y+6	; 0x06
    23ae:	3f 81       	ldd	r19, Y+7	; 0x07
    23b0:	01 2b       	or	r16, r17
    23b2:	02 2b       	or	r16, r18
    23b4:	03 2b       	or	r16, r19
    23b6:	31 f0       	breq	.+12     	; 0x23c4 <ESP8266_WifiConnect+0x32>
    23b8:	61 db       	rcall	.-2366   	; 0x1a7c <ESP8266_Update>
    23ba:	cb 5d       	subi	r28, 0xDB	; 219
    23bc:	dd 4f       	sbci	r29, 0xFD	; 253
    23be:	87 e0       	ldi	r24, 0x07	; 7
    23c0:	88 83       	st	Y, r24
    23c2:	1c c0       	rjmp	.+56     	; 0x23fc <ESP8266_WifiConnect+0x6a>
    23c4:	65 e0       	ldi	r22, 0x05	; 5
    23c6:	70 e0       	ldi	r23, 0x00	; 0
    23c8:	86 eb       	ldi	r24, 0xB6	; 182
    23ca:	95 e0       	ldi	r25, 0x05	; 5
    23cc:	12 d1       	rcall	.+548    	; 0x25f2 <ESP8266_LL_USARTSend>
    23ce:	c6 01       	movw	r24, r12
    23d0:	0e 94 77 03 	call	0x6ee	; 0x6ee <EscapeStringAndSend>
    23d4:	65 e0       	ldi	r22, 0x05	; 5
    23d6:	70 e0       	ldi	r23, 0x00	; 0
    23d8:	87 e7       	ldi	r24, 0x77	; 119
    23da:	96 e0       	ldi	r25, 0x06	; 6
    23dc:	0a d1       	rcall	.+532    	; 0x25f2 <ESP8266_LL_USARTSend>
    23de:	c7 01       	movw	r24, r14
    23e0:	0e 94 77 03 	call	0x6ee	; 0x6ee <EscapeStringAndSend>
    23e4:	65 e0       	ldi	r22, 0x05	; 5
    23e6:	70 e0       	ldi	r23, 0x00	; 0
    23e8:	85 ec       	ldi	r24, 0xC5	; 197
    23ea:	95 e0       	ldi	r25, 0x05	; 5
    23ec:	02 d1       	rcall	.+516    	; 0x25f2 <ESP8266_LL_USARTSend>
    23ee:	27 e6       	ldi	r18, 0x67	; 103
    23f0:	33 e0       	ldi	r19, 0x03	; 3
    23f2:	40 e0       	ldi	r20, 0x00	; 0
    23f4:	50 e0       	ldi	r21, 0x00	; 0
    23f6:	63 e0       	ldi	r22, 0x03	; 3
    23f8:	ce 01       	movw	r24, r28
    23fa:	1f de       	rcall	.-962    	; 0x203a <SendCommand>
    23fc:	df 91       	pop	r29
    23fe:	cf 91       	pop	r28
    2400:	1f 91       	pop	r17
    2402:	0f 91       	pop	r16
    2404:	ff 90       	pop	r15
    2406:	ef 90       	pop	r14
    2408:	df 90       	pop	r13
    240a:	cf 90       	pop	r12
    240c:	08 95       	ret

0000240e <ESP8266_StartClientConnectionTCP>:

/******************************************/
/*               TCP CLIENT               */
/******************************************/
ESP8266_Result_t ESP8266_StartClientConnectionTCP(ESP8266_t* ESP8266, char* name, char* location, uint16_t port, void* user_parameters) {
    240e:	4f 92       	push	r4
    2410:	5f 92       	push	r5
    2412:	6f 92       	push	r6
    2414:	8f 92       	push	r8
    2416:	9f 92       	push	r9
    2418:	af 92       	push	r10
    241a:	bf 92       	push	r11
    241c:	cf 92       	push	r12
    241e:	df 92       	push	r13
    2420:	ef 92       	push	r14
    2422:	ff 92       	push	r15
    2424:	0f 93       	push	r16
    2426:	1f 93       	push	r17
    2428:	cf 93       	push	r28
    242a:	df 93       	push	r29
    242c:	cd b7       	in	r28, 0x3d	; 61
    242e:	de b7       	in	r29, 0x3e	; 62
    2430:	27 97       	sbiw	r28, 0x07	; 7
    2432:	0f b6       	in	r0, 0x3f	; 63
    2434:	f8 94       	cli
    2436:	de bf       	out	0x3e, r29	; 62
    2438:	0f be       	out	0x3f, r0	; 63
    243a:	cd bf       	out	0x3d, r28	; 61
    243c:	7c 01       	movw	r14, r24
    243e:	5b 01       	movw	r10, r22
    2440:	6a 01       	movw	r12, r20
    2442:	48 01       	movw	r8, r16
	int8_t conn = -1;
    2444:	8f ef       	ldi	r24, 0xFF	; 255
    2446:	89 83       	std	Y+1, r24	; 0x01
	uint8_t i = 0;
	
	/* Check if IDLE */
	ESP8266_CHECK_IDLE(ESP8266);
    2448:	f7 01       	movw	r30, r14
    244a:	84 81       	ldd	r24, Z+4	; 0x04
    244c:	95 81       	ldd	r25, Z+5	; 0x05
    244e:	a6 81       	ldd	r26, Z+6	; 0x06
    2450:	b7 81       	ldd	r27, Z+7	; 0x07
    2452:	89 2b       	or	r24, r25
    2454:	8a 2b       	or	r24, r26
    2456:	8b 2b       	or	r24, r27
    2458:	49 f0       	breq	.+18     	; 0x246c <ESP8266_StartClientConnectionTCP+0x5e>
    245a:	c7 01       	movw	r24, r14
    245c:	0f db       	rcall	.-2530   	; 0x1a7c <ESP8266_Update>
    245e:	f7 01       	movw	r30, r14
    2460:	eb 5d       	subi	r30, 0xDB	; 219
    2462:	fd 4f       	sbci	r31, 0xFD	; 253
    2464:	87 e0       	ldi	r24, 0x07	; 7
    2466:	80 83       	st	Z, r24
    2468:	17 e0       	ldi	r17, 0x07	; 7
    246a:	ac c0       	rjmp	.+344    	; 0x25c4 <ESP8266_StartClientConnectionTCP+0x1b6>
	
	/* Check if connected to network */
	ESP8266_CHECK_WIFICONNECTED(ESP8266);
    246c:	f7 01       	movw	r30, r14
    246e:	ee 5d       	subi	r30, 0xDE	; 222
    2470:	fd 4f       	sbci	r31, 0xFD	; 253
    2472:	80 81       	ld	r24, Z
    2474:	82 ff       	sbrs	r24, 2
    2476:	06 c0       	rjmp	.+12     	; 0x2484 <ESP8266_StartClientConnectionTCP+0x76>
	
	/* Find available connection */
	for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {
		if (!ESP8266->Connection[i].Active) {
    2478:	ea 5c       	subi	r30, 0xCA	; 202
    247a:	f1 40       	sbci	r31, 0x01	; 1
    247c:	80 81       	ld	r24, Z
    247e:	81 11       	cpse	r24, r1
    2480:	08 c0       	rjmp	.+16     	; 0x2492 <ESP8266_StartClientConnectionTCP+0x84>
    2482:	9c c0       	rjmp	.+312    	; 0x25bc <ESP8266_StartClientConnectionTCP+0x1ae>
	
	/* Check if IDLE */
	ESP8266_CHECK_IDLE(ESP8266);
	
	/* Check if connected to network */
	ESP8266_CHECK_WIFICONNECTED(ESP8266);
    2484:	f7 01       	movw	r30, r14
    2486:	eb 5d       	subi	r30, 0xDB	; 219
    2488:	fd 4f       	sbci	r31, 0xFD	; 253
    248a:	86 e0       	ldi	r24, 0x06	; 6
    248c:	80 83       	st	Z, r24
    248e:	16 e0       	ldi	r17, 0x06	; 6
    2490:	99 c0       	rjmp	.+306    	; 0x25c4 <ESP8266_StartClientConnectionTCP+0x1b6>
    2492:	f7 01       	movw	r30, r14
    2494:	e5 56       	subi	r30, 0x65	; 101
    2496:	ff 4f       	sbci	r31, 0xFF	; 255
	
	/* Find available connection */
	for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {
    2498:	01 e0       	ldi	r16, 0x01	; 1
		if (!ESP8266->Connection[i].Active) {
    249a:	80 81       	ld	r24, Z
    249c:	81 11       	cpse	r24, r1
    249e:	05 c0       	rjmp	.+10     	; 0x24aa <ESP8266_StartClientConnectionTCP+0x9c>
			/* Save */
			conn = i;
    24a0:	60 2e       	mov	r6, r16
    24a2:	09 83       	std	Y+1, r16	; 0x01
			break;
		}
	}
	
	/* Try it */
	if (conn != -1) {
    24a4:	0f 3f       	cpi	r16, 0xFF	; 255
    24a6:	39 f4       	brne	.+14     	; 0x24b6 <ESP8266_StartClientConnectionTCP+0xa8>
    24a8:	82 c0       	rjmp	.+260    	; 0x25ae <ESP8266_StartClientConnectionTCP+0x1a0>
	
	/* Check if connected to network */
	ESP8266_CHECK_WIFICONNECTED(ESP8266);
	
	/* Find available connection */
	for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {
    24aa:	0f 5f       	subi	r16, 0xFF	; 255
    24ac:	ed 5b       	subi	r30, 0xBD	; 189
    24ae:	ff 4f       	sbci	r31, 0xFF	; 255
    24b0:	05 30       	cpi	r16, 0x05	; 5
    24b2:	99 f7       	brne	.-26     	; 0x249a <ESP8266_StartClientConnectionTCP+0x8c>
    24b4:	7c c0       	rjmp	.+248    	; 0x25ae <ESP8266_StartClientConnectionTCP+0x1a0>
	/* Try it */
	if (conn != -1) {
		char tmp[6];
		
		/* Format port */
		Int2String(tmp, port);
    24b6:	c9 01       	movw	r24, r18

	return 0;
}

static void Int2String(char* ptr, long int num) {
	sprintf(ptr, "%ld", num);
    24b8:	1f 92       	push	r1
    24ba:	1f 92       	push	r1
    24bc:	9f 93       	push	r25
    24be:	2f 93       	push	r18
    24c0:	83 e4       	ldi	r24, 0x43	; 67
    24c2:	95 e0       	ldi	r25, 0x05	; 5
    24c4:	9f 93       	push	r25
    24c6:	8f 93       	push	r24
    24c8:	2e 01       	movw	r4, r28
    24ca:	f2 e0       	ldi	r31, 0x02	; 2
    24cc:	4f 0e       	add	r4, r31
    24ce:	51 1c       	adc	r5, r1
    24d0:	5f 92       	push	r5
    24d2:	4f 92       	push	r4
    24d4:	1c d5       	rcall	.+2616   	; 0x2f0e <sprintf>
		
		/* Format port */
		Int2String(tmp, port);
		
		/* Go to ASCII number */
		conn += '0';
    24d6:	89 81       	ldd	r24, Y+1	; 0x01
    24d8:	80 5d       	subi	r24, 0xD0	; 208
    24da:	89 83       	std	Y+1, r24	; 0x01
		
		/* Send separate */
		ESP8266_USARTSENDSTRING("AT+CIPSTART=");
    24dc:	65 e0       	ldi	r22, 0x05	; 5
    24de:	70 e0       	ldi	r23, 0x00	; 0
    24e0:	8c e5       	ldi	r24, 0x5C	; 92
    24e2:	96 e0       	ldi	r25, 0x06	; 6
    24e4:	86 d0       	rcall	.+268    	; 0x25f2 <ESP8266_LL_USARTSend>
		ESP8266_USARTSENDCHAR(&conn);
    24e6:	61 e0       	ldi	r22, 0x01	; 1
    24e8:	70 e0       	ldi	r23, 0x00	; 0
    24ea:	ce 01       	movw	r24, r28
    24ec:	01 96       	adiw	r24, 0x01	; 1
    24ee:	81 d0       	rcall	.+258    	; 0x25f2 <ESP8266_LL_USARTSend>
		ESP8266_USARTSENDSTRING(",\"TCP\",\"");
    24f0:	65 e0       	ldi	r22, 0x05	; 5
    24f2:	70 e0       	ldi	r23, 0x00	; 0
    24f4:	89 e6       	ldi	r24, 0x69	; 105
    24f6:	96 e0       	ldi	r25, 0x06	; 6
    24f8:	7c d0       	rcall	.+248    	; 0x25f2 <ESP8266_LL_USARTSend>
		ESP8266_USARTSENDSTRING(location);
    24fa:	65 e0       	ldi	r22, 0x05	; 5
    24fc:	70 e0       	ldi	r23, 0x00	; 0
    24fe:	c6 01       	movw	r24, r12
    2500:	78 d0       	rcall	.+240    	; 0x25f2 <ESP8266_LL_USARTSend>
		ESP8266_USARTSENDSTRING("\",");
    2502:	65 e0       	ldi	r22, 0x05	; 5
    2504:	70 e0       	ldi	r23, 0x00	; 0
    2506:	8a e4       	ldi	r24, 0x4A	; 74
    2508:	96 e0       	ldi	r25, 0x06	; 6
    250a:	73 d0       	rcall	.+230    	; 0x25f2 <ESP8266_LL_USARTSend>
		ESP8266_USARTSENDSTRING(tmp);
    250c:	65 e0       	ldi	r22, 0x05	; 5
    250e:	70 e0       	ldi	r23, 0x00	; 0
    2510:	c2 01       	movw	r24, r4
    2512:	6f d0       	rcall	.+222    	; 0x25f2 <ESP8266_LL_USARTSend>
		ESP8266_USARTSENDSTRING("\r\n");
    2514:	65 e0       	ldi	r22, 0x05	; 5
    2516:	70 e0       	ldi	r23, 0x00	; 0
    2518:	8c e5       	ldi	r24, 0x5C	; 92
    251a:	99 e0       	ldi	r25, 0x09	; 9
    251c:	6a d0       	rcall	.+212    	; 0x25f2 <ESP8266_LL_USARTSend>
		
		/* Send command */
		if (SendCommand(ESP8266, ESP8266_COMMAND_CIPSTART, NULL, NULL) != ESP_OK) {
    251e:	20 e0       	ldi	r18, 0x00	; 0
    2520:	30 e0       	ldi	r19, 0x00	; 0
    2522:	40 e0       	ldi	r20, 0x00	; 0
    2524:	50 e0       	ldi	r21, 0x00	; 0
    2526:	6a e0       	ldi	r22, 0x0A	; 10
    2528:	c7 01       	movw	r24, r14
    252a:	87 dd       	rcall	.-1266   	; 0x203a <SendCommand>
    252c:	18 2f       	mov	r17, r24
    252e:	0f b6       	in	r0, 0x3f	; 63
    2530:	f8 94       	cli
    2532:	de bf       	out	0x3e, r29	; 62
    2534:	0f be       	out	0x3f, r0	; 63
    2536:	cd bf       	out	0x3d, r28	; 61
    2538:	11 23       	and	r17, r17
    253a:	29 f0       	breq	.+10     	; 0x2546 <ESP8266_StartClientConnectionTCP+0x138>
			return ESP8266->Result;
    253c:	f7 01       	movw	r30, r14
    253e:	eb 5d       	subi	r30, 0xDB	; 219
    2540:	fd 4f       	sbci	r31, 0xFD	; 253
    2542:	10 81       	ld	r17, Z
    2544:	3f c0       	rjmp	.+126    	; 0x25c4 <ESP8266_StartClientConnectionTCP+0x1b6>
		}
		
		/* Go back from ASCII number to real number */
		conn -= '0';
    2546:	29 81       	ldd	r18, Y+1	; 0x01
    2548:	20 53       	subi	r18, 0x30	; 48
		
		/* We are active now as client */
		ESP8266->Connection[i].Active = 1;
    254a:	e3 e4       	ldi	r30, 0x43	; 67
    254c:	0e 9f       	mul	r16, r30
    254e:	c0 01       	movw	r24, r0
    2550:	11 24       	eor	r1, r1
    2552:	67 01       	movw	r12, r14
    2554:	c8 0e       	add	r12, r24
    2556:	d9 1e       	adc	r13, r25
    2558:	f6 01       	movw	r30, r12
    255a:	e8 5a       	subi	r30, 0xA8	; 168
    255c:	ff 4f       	sbci	r31, 0xFF	; 255
    255e:	31 e0       	ldi	r19, 0x01	; 1
    2560:	30 83       	st	Z, r19
		ESP8266->Connection[i].Client = 1;
    2562:	32 96       	adiw	r30, 0x02	; 2
    2564:	30 83       	st	Z, r19
		ESP8266->Connection[i].Type = ESP8266_ConnectionType_TCP;
    2566:	37 96       	adiw	r30, 0x07	; 7
    2568:	10 82       	st	Z, r1
		ESP8266->Connection[i].TotalBytesReceived = 0;
    256a:	35 96       	adiw	r30, 0x05	; 5
    256c:	10 82       	st	Z, r1
    256e:	11 82       	std	Z+1, r1	; 0x01
    2570:	12 82       	std	Z+2, r1	; 0x02
    2572:	13 82       	std	Z+3, r1	; 0x03
		ESP8266->Connection[i].Number = conn;
    2574:	3d 97       	sbiw	r30, 0x0d	; 13
    2576:	20 83       	st	Z, r18
#if ESP8266_USE_SINGLE_CONNECTION_BUFFER == 1
		ESP8266->Connection[i].Data = ConnectionData;
    2578:	73 96       	adiw	r30, 0x13	; 19
    257a:	2c e8       	ldi	r18, 0x8C	; 140
    257c:	3a e0       	ldi	r19, 0x0A	; 10
    257e:	31 83       	std	Z+1, r19	; 0x01
    2580:	20 83       	st	Z, r18
#endif
		ESP8266->StartConnectionSent = i;
    2582:	f7 01       	movw	r30, r14
    2584:	ea 5e       	subi	r30, 0xEA	; 234
    2586:	fd 4f       	sbci	r31, 0xFD	; 253
    2588:	60 82       	st	Z, r6
		
		/* Copy values */
		strncpy(ESP8266->Connection[i].Name, name, sizeof(ESP8266->Connection[i].Name));
    258a:	8a 58       	subi	r24, 0x8A	; 138
    258c:	9f 4f       	sbci	r25, 0xFF	; 255
    258e:	40 e2       	ldi	r20, 0x20	; 32
    2590:	50 e0       	ldi	r21, 0x00	; 0
    2592:	b5 01       	movw	r22, r10
    2594:	8e 0d       	add	r24, r14
    2596:	9f 1d       	adc	r25, r15
    2598:	27 d4       	rcall	.+2126   	; 0x2de8 <strncpy>
		ESP8266->Connection[i].UserParameters = user_parameters;
    259a:	f6 01       	movw	r30, r12
    259c:	ea 56       	subi	r30, 0x6A	; 106
    259e:	ff 4f       	sbci	r31, 0xFF	; 255
    25a0:	91 82       	std	Z+1, r9	; 0x01
    25a2:	80 82       	st	Z, r8
		
		/* Return OK */
		ESP8266_RETURNWITHSTATUS(ESP8266, ESP_OK);
    25a4:	f7 01       	movw	r30, r14
    25a6:	eb 5d       	subi	r30, 0xDB	; 219
    25a8:	fd 4f       	sbci	r31, 0xFD	; 253
    25aa:	10 82       	st	Z, r1
    25ac:	0b c0       	rjmp	.+22     	; 0x25c4 <ESP8266_StartClientConnectionTCP+0x1b6>
	}
	
	/* Return error */
	ESP8266_RETURNWITHSTATUS(ESP8266, ESP_ERROR);
    25ae:	f7 01       	movw	r30, r14
    25b0:	eb 5d       	subi	r30, 0xDB	; 219
    25b2:	fd 4f       	sbci	r31, 0xFD	; 253
    25b4:	81 e0       	ldi	r24, 0x01	; 1
    25b6:	80 83       	st	Z, r24
    25b8:	11 e0       	ldi	r17, 0x01	; 1
    25ba:	04 c0       	rjmp	.+8      	; 0x25c4 <ESP8266_StartClientConnectionTCP+0x1b6>
	
	/* Find available connection */
	for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {
		if (!ESP8266->Connection[i].Active) {
			/* Save */
			conn = i;
    25bc:	19 82       	std	Y+1, r1	; 0x01
    25be:	00 e0       	ldi	r16, 0x00	; 0
    25c0:	61 2c       	mov	r6, r1
    25c2:	79 cf       	rjmp	.-270    	; 0x24b6 <ESP8266_StartClientConnectionTCP+0xa8>
		ESP8266_RETURNWITHSTATUS(ESP8266, ESP_OK);
	}
	
	/* Return error */
	ESP8266_RETURNWITHSTATUS(ESP8266, ESP_ERROR);
}
    25c4:	81 2f       	mov	r24, r17
    25c6:	27 96       	adiw	r28, 0x07	; 7
    25c8:	0f b6       	in	r0, 0x3f	; 63
    25ca:	f8 94       	cli
    25cc:	de bf       	out	0x3e, r29	; 62
    25ce:	0f be       	out	0x3f, r0	; 63
    25d0:	cd bf       	out	0x3d, r28	; 61
    25d2:	df 91       	pop	r29
    25d4:	cf 91       	pop	r28
    25d6:	1f 91       	pop	r17
    25d8:	0f 91       	pop	r16
    25da:	ff 90       	pop	r15
    25dc:	ef 90       	pop	r14
    25de:	df 90       	pop	r13
    25e0:	cf 90       	pop	r12
    25e2:	bf 90       	pop	r11
    25e4:	af 90       	pop	r10
    25e6:	9f 90       	pop	r9
    25e8:	8f 90       	pop	r8
    25ea:	6f 90       	pop	r6
    25ec:	5f 90       	pop	r5
    25ee:	4f 90       	pop	r4
    25f0:	08 95       	ret

000025f2 <ESP8266_LL_USARTSend>:
	
	/* Return 0 = Successful */
	return 0;
}

uint8_t ESP8266_LL_USARTSend(uint8_t* data, uint16_t count) {
    25f2:	cf 93       	push	r28
    25f4:	df 93       	push	r29
    25f6:	9c 01       	movw	r18, r24
	/* Wait till end */
	while ((UCSR1A & (1 << UDRE1)) == 0);
    25f8:	e8 ec       	ldi	r30, 0xC8	; 200
    25fa:	f0 e0       	ldi	r31, 0x00	; 0
    25fc:	90 81       	ld	r25, Z
    25fe:	95 ff       	sbrs	r25, 5
    2600:	fd cf       	rjmp	.-6      	; 0x25fc <ESP8266_LL_USARTSend+0xa>
    2602:	d9 01       	movw	r26, r18
    2604:	62 0f       	add	r22, r18
    2606:	73 1f       	adc	r23, r19
	
	/* Send data via USART */
	while (count--) {
		/* Send character */
		UDR1 = *data++;
    2608:	ce ec       	ldi	r28, 0xCE	; 206
    260a:	d0 e0       	ldi	r29, 0x00	; 0

		/* Wait till done */
		while ((UCSR1A & (1 << UDRE1)) == 0);
    260c:	e8 ec       	ldi	r30, 0xC8	; 200
    260e:	f0 e0       	ldi	r31, 0x00	; 0
    2610:	05 c0       	rjmp	.+10     	; 0x261c <ESP8266_LL_USARTSend+0x2a>
	while ((UCSR1A & (1 << UDRE1)) == 0);
	
	/* Send data via USART */
	while (count--) {
		/* Send character */
		UDR1 = *data++;
    2612:	9d 91       	ld	r25, X+
    2614:	98 83       	st	Y, r25

		/* Wait till done */
		while ((UCSR1A & (1 << UDRE1)) == 0);
    2616:	90 81       	ld	r25, Z
    2618:	95 ff       	sbrs	r25, 5
    261a:	fd cf       	rjmp	.-6      	; 0x2616 <ESP8266_LL_USARTSend+0x24>
uint8_t ESP8266_LL_USARTSend(uint8_t* data, uint16_t count) {
	/* Wait till end */
	while ((UCSR1A & (1 << UDRE1)) == 0);
	
	/* Send data via USART */
	while (count--) {
    261c:	a6 17       	cp	r26, r22
    261e:	b7 07       	cpc	r27, r23
    2620:	c1 f7       	brne	.-16     	; 0x2612 <ESP8266_LL_USARTSend+0x20>
		while ((UCSR1A & (1 << UDRE1)) == 0);
	}
	
	/* Return 0 = Successful */
	return 0;
}
    2622:	80 e0       	ldi	r24, 0x00	; 0
    2624:	df 91       	pop	r29
    2626:	cf 91       	pop	r28
    2628:	08 95       	ret

0000262a <__vector_36>:

/* USART receive interrupt handler */
ISR(USART1_RX_vect) {
    262a:	1f 92       	push	r1
    262c:	0f 92       	push	r0
    262e:	0f b6       	in	r0, 0x3f	; 63
    2630:	0f 92       	push	r0
    2632:	11 24       	eor	r1, r1
    2634:	0b b6       	in	r0, 0x3b	; 59
    2636:	0f 92       	push	r0
    2638:	2f 93       	push	r18
    263a:	3f 93       	push	r19
    263c:	4f 93       	push	r20
    263e:	5f 93       	push	r21
    2640:	6f 93       	push	r22
    2642:	7f 93       	push	r23
    2644:	8f 93       	push	r24
    2646:	9f 93       	push	r25
    2648:	af 93       	push	r26
    264a:	bf 93       	push	r27
    264c:	ef 93       	push	r30
    264e:	ff 93       	push	r31
    2650:	cf 93       	push	r28
    2652:	df 93       	push	r29
    2654:	1f 92       	push	r1
    2656:	cd b7       	in	r28, 0x3d	; 61
    2658:	de b7       	in	r29, 0x3e	; 62
	uint8_t ch = UDR1;
    265a:	80 91 ce 00 	lds	r24, 0x00CE
    265e:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send received character to ESP stack */
	ESP8266_DataReceived(&ch, 1);
    2660:	61 e0       	ldi	r22, 0x01	; 1
    2662:	70 e0       	ldi	r23, 0x00	; 0
    2664:	ce 01       	movw	r24, r28
    2666:	01 96       	adiw	r24, 0x01	; 1
    2668:	0e 94 da 05 	call	0xbb4	; 0xbb4 <ESP8266_DataReceived>
}
    266c:	0f 90       	pop	r0
    266e:	df 91       	pop	r29
    2670:	cf 91       	pop	r28
    2672:	ff 91       	pop	r31
    2674:	ef 91       	pop	r30
    2676:	bf 91       	pop	r27
    2678:	af 91       	pop	r26
    267a:	9f 91       	pop	r25
    267c:	8f 91       	pop	r24
    267e:	7f 91       	pop	r23
    2680:	6f 91       	pop	r22
    2682:	5f 91       	pop	r21
    2684:	4f 91       	pop	r20
    2686:	3f 91       	pop	r19
    2688:	2f 91       	pop	r18
    268a:	0f 90       	pop	r0
    268c:	0b be       	out	0x3b, r0	; 59
    268e:	0f 90       	pop	r0
    2690:	0f be       	out	0x3f, r0	; 63
    2692:	0f 90       	pop	r0
    2694:	1f 90       	pop	r1
    2696:	18 95       	reti

00002698 <Debug_Putc>:
	printf("Data successfully sent as client!\r\n");
}

/* Called when error returned trying to sent data */
void ESP8266_Callback_ClientConnectionDataSentError(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection) {
	printf("Error while sending data on connection %d!\r\n", Connection->Number);
    2698:	80 93 c6 00 	sts	0x00C6, r24
    269c:	e0 ec       	ldi	r30, 0xC0	; 192
    269e:	f0 e0       	ldi	r31, 0x00	; 0
    26a0:	80 81       	ld	r24, Z
    26a2:	85 ff       	sbrs	r24, 5
    26a4:	fd cf       	rjmp	.-6      	; 0x26a0 <Debug_Putc+0x8>
    26a6:	80 e0       	ldi	r24, 0x00	; 0
    26a8:	90 e0       	ldi	r25, 0x00	; 0
    26aa:	08 95       	ret

000026ac <TimerInit>:
    26ac:	84 b5       	in	r24, 0x24	; 36
    26ae:	82 60       	ori	r24, 0x02	; 2
    26b0:	84 bd       	out	0x24, r24	; 36
    26b2:	85 b5       	in	r24, 0x25	; 37
    26b4:	83 60       	ori	r24, 0x03	; 3
    26b6:	85 bd       	out	0x25, r24	; 37
    26b8:	89 ef       	ldi	r24, 0xF9	; 249
    26ba:	87 bd       	out	0x27, r24	; 39
    26bc:	ee e6       	ldi	r30, 0x6E	; 110
    26be:	f0 e0       	ldi	r31, 0x00	; 0
    26c0:	80 81       	ld	r24, Z
    26c2:	82 60       	ori	r24, 0x02	; 2
    26c4:	80 83       	st	Z, r24
    26c6:	08 95       	ret

000026c8 <__vector_21>:
    26c8:	1f 92       	push	r1
    26ca:	0f 92       	push	r0
    26cc:	0f b6       	in	r0, 0x3f	; 63
    26ce:	0f 92       	push	r0
    26d0:	11 24       	eor	r1, r1
    26d2:	0b b6       	in	r0, 0x3b	; 59
    26d4:	0f 92       	push	r0
    26d6:	2f 93       	push	r18
    26d8:	3f 93       	push	r19
    26da:	4f 93       	push	r20
    26dc:	5f 93       	push	r21
    26de:	6f 93       	push	r22
    26e0:	7f 93       	push	r23
    26e2:	8f 93       	push	r24
    26e4:	9f 93       	push	r25
    26e6:	af 93       	push	r26
    26e8:	bf 93       	push	r27
    26ea:	ef 93       	push	r30
    26ec:	ff 93       	push	r31
    26ee:	41 e0       	ldi	r20, 0x01	; 1
    26f0:	50 e0       	ldi	r21, 0x00	; 0
    26f2:	60 e0       	ldi	r22, 0x00	; 0
    26f4:	70 e0       	ldi	r23, 0x00	; 0
    26f6:	88 e5       	ldi	r24, 0x58	; 88
    26f8:	96 e1       	ldi	r25, 0x16	; 22
    26fa:	0e 94 c6 05 	call	0xb8c	; 0xb8c <ESP8266_TimeUpdate>
    26fe:	ff 91       	pop	r31
    2700:	ef 91       	pop	r30
    2702:	bf 91       	pop	r27
    2704:	af 91       	pop	r26
    2706:	9f 91       	pop	r25
    2708:	8f 91       	pop	r24
    270a:	7f 91       	pop	r23
    270c:	6f 91       	pop	r22
    270e:	5f 91       	pop	r21
    2710:	4f 91       	pop	r20
    2712:	3f 91       	pop	r19
    2714:	2f 91       	pop	r18
    2716:	0f 90       	pop	r0
    2718:	0b be       	out	0x3b, r0	; 59
    271a:	0f 90       	pop	r0
    271c:	0f be       	out	0x3f, r0	; 63
    271e:	0f 90       	pop	r0
    2720:	1f 90       	pop	r1
    2722:	18 95       	reti

00002724 <__vector_25>:
    2724:	1f 92       	push	r1
    2726:	0f 92       	push	r0
    2728:	0f b6       	in	r0, 0x3f	; 63
    272a:	0f 92       	push	r0
    272c:	11 24       	eor	r1, r1
    272e:	0b b6       	in	r0, 0x3b	; 59
    2730:	0f 92       	push	r0
    2732:	8f 93       	push	r24
    2734:	ef 93       	push	r30
    2736:	ff 93       	push	r31
    2738:	e6 ec       	ldi	r30, 0xC6	; 198
    273a:	f0 e0       	ldi	r31, 0x00	; 0
    273c:	80 81       	ld	r24, Z
    273e:	80 83       	st	Z, r24
    2740:	e0 ec       	ldi	r30, 0xC0	; 192
    2742:	f0 e0       	ldi	r31, 0x00	; 0
    2744:	80 81       	ld	r24, Z
    2746:	85 ff       	sbrs	r24, 5
    2748:	fd cf       	rjmp	.-6      	; 0x2744 <__vector_25+0x20>
    274a:	ff 91       	pop	r31
    274c:	ef 91       	pop	r30
    274e:	8f 91       	pop	r24
    2750:	0f 90       	pop	r0
    2752:	0b be       	out	0x3b, r0	; 59
    2754:	0f 90       	pop	r0
    2756:	0f be       	out	0x3f, r0	; 63
    2758:	0f 90       	pop	r0
    275a:	1f 90       	pop	r1
    275c:	18 95       	reti

0000275e <DebugUARTInit>:
    275e:	9b 01       	movw	r18, r22
    2760:	ac 01       	movw	r20, r24
    2762:	60 e0       	ldi	r22, 0x00	; 0
    2764:	79 e0       	ldi	r23, 0x09	; 9
    2766:	8d e3       	ldi	r24, 0x3D	; 61
    2768:	90 e0       	ldi	r25, 0x00	; 0
    276a:	b0 d1       	rcall	.+864    	; 0x2acc <__udivmodsi4>
    276c:	da 01       	movw	r26, r20
    276e:	c9 01       	movw	r24, r18
    2770:	01 97       	sbiw	r24, 0x01	; 1
    2772:	a1 09       	sbc	r26, r1
    2774:	b1 09       	sbc	r27, r1
    2776:	ac 01       	movw	r20, r24
    2778:	bd 01       	movw	r22, r26
    277a:	76 95       	lsr	r23
    277c:	67 95       	ror	r22
    277e:	57 95       	ror	r21
    2780:	47 95       	ror	r20
    2782:	85 2f       	mov	r24, r21
    2784:	99 27       	eor	r25, r25
    2786:	80 93 c5 00 	sts	0x00C5, r24
    278a:	40 93 c4 00 	sts	0x00C4, r20
    278e:	e0 ec       	ldi	r30, 0xC0	; 192
    2790:	f0 e0       	ldi	r31, 0x00	; 0
    2792:	80 81       	ld	r24, Z
    2794:	82 60       	ori	r24, 0x02	; 2
    2796:	80 83       	st	Z, r24
    2798:	e2 ec       	ldi	r30, 0xC2	; 194
    279a:	f0 e0       	ldi	r31, 0x00	; 0
    279c:	80 81       	ld	r24, Z
    279e:	86 60       	ori	r24, 0x06	; 6
    27a0:	80 83       	st	Z, r24
    27a2:	e1 ec       	ldi	r30, 0xC1	; 193
    27a4:	f0 e0       	ldi	r31, 0x00	; 0
    27a6:	80 81       	ld	r24, Z
    27a8:	88 61       	ori	r24, 0x18	; 24
    27aa:	80 83       	st	Z, r24
    27ac:	80 81       	ld	r24, Z
    27ae:	80 68       	ori	r24, 0x80	; 128
    27b0:	80 83       	st	Z, r24
    27b2:	08 95       	ret

000027b4 <main>:
    27b4:	86 e0       	ldi	r24, 0x06	; 6
    27b6:	92 e0       	ldi	r25, 0x02	; 2
    27b8:	90 93 85 18 	sts	0x1885, r25
    27bc:	80 93 84 18 	sts	0x1884, r24
    27c0:	60 e0       	ldi	r22, 0x00	; 0
    27c2:	72 ec       	ldi	r23, 0xC2	; 194
    27c4:	81 e0       	ldi	r24, 0x01	; 1
    27c6:	90 e0       	ldi	r25, 0x00	; 0
    27c8:	ca df       	rcall	.-108    	; 0x275e <DebugUARTInit>
    27ca:	70 df       	rcall	.-288    	; 0x26ac <TimerInit>
    27cc:	78 94       	sei
    27ce:	8a e8       	ldi	r24, 0x8A	; 138
    27d0:	96 e0       	ldi	r25, 0x06	; 6
    27d2:	6d d3       	rcall	.+1754   	; 0x2eae <puts>
    27d4:	03 c0       	rjmp	.+6      	; 0x27dc <main+0x28>
    27d6:	8e eb       	ldi	r24, 0xBE	; 190
    27d8:	96 e0       	ldi	r25, 0x06	; 6
    27da:	69 d3       	rcall	.+1746   	; 0x2eae <puts>
    27dc:	40 e0       	ldi	r20, 0x00	; 0
    27de:	52 ec       	ldi	r21, 0xC2	; 194
    27e0:	61 e0       	ldi	r22, 0x01	; 1
    27e2:	70 e0       	ldi	r23, 0x00	; 0
    27e4:	88 e5       	ldi	r24, 0x58	; 88
    27e6:	96 e1       	ldi	r25, 0x16	; 22
    27e8:	0e 94 99 05 	call	0xb32	; 0xb32 <ESP8266_Init>
    27ec:	81 11       	cpse	r24, r1
    27ee:	f3 cf       	rjmp	.-26     	; 0x27d6 <main+0x22>
    27f0:	63 e0       	ldi	r22, 0x03	; 3
    27f2:	88 e5       	ldi	r24, 0x58	; 88
    27f4:	96 e1       	ldi	r25, 0x16	; 22
    27f6:	2f dd       	rcall	.-1442   	; 0x2256 <ESP8266_SetMode>
    27f8:	81 11       	cpse	r24, r1
    27fa:	fa cf       	rjmp	.-12     	; 0x27f0 <main+0x3c>
    27fc:	60 e5       	ldi	r22, 0x50	; 80
    27fe:	70 e0       	ldi	r23, 0x00	; 0
    2800:	88 e5       	ldi	r24, 0x58	; 88
    2802:	96 e1       	ldi	r25, 0x16	; 22
    2804:	c5 dc       	rcall	.-1654   	; 0x2190 <ESP8266_ServerEnable>
    2806:	81 11       	cpse	r24, r1
    2808:	f9 cf       	rjmp	.-14     	; 0x27fc <main+0x48>
    280a:	89 ee       	ldi	r24, 0xE9	; 233
    280c:	96 e0       	ldi	r25, 0x06	; 6
    280e:	4f d3       	rcall	.+1694   	; 0x2eae <puts>
    2810:	88 e5       	ldi	r24, 0x58	; 88
    2812:	96 e1       	ldi	r25, 0x16	; 22
    2814:	67 dc       	rcall	.-1842   	; 0x20e4 <ESP8266_WifiDisconnect>
    2816:	88 e5       	ldi	r24, 0x58	; 88
    2818:	96 e1       	ldi	r25, 0x16	; 22
    281a:	8a dc       	rcall	.-1772   	; 0x2130 <ESP8266_WaitReady>
    281c:	43 e0       	ldi	r20, 0x03	; 3
    281e:	57 e0       	ldi	r21, 0x07	; 7
    2820:	61 e1       	ldi	r22, 0x11	; 17
    2822:	77 e0       	ldi	r23, 0x07	; 7
    2824:	88 e5       	ldi	r24, 0x58	; 88
    2826:	96 e1       	ldi	r25, 0x16	; 22
    2828:	b4 dd       	rcall	.-1176   	; 0x2392 <ESP8266_WifiConnect>
    282a:	88 e5       	ldi	r24, 0x58	; 88
    282c:	96 e1       	ldi	r25, 0x16	; 22
    282e:	80 dc       	rcall	.-1792   	; 0x2130 <ESP8266_WaitReady>
    2830:	88 e5       	ldi	r24, 0x58	; 88
    2832:	96 e1       	ldi	r25, 0x16	; 22
    2834:	5e dc       	rcall	.-1860   	; 0x20f2 <ESP8266_WifiGetConnected>
    2836:	26 98       	cbi	0x04, 6	; 4
    2838:	2e 9a       	sbi	0x05, 6	; 5
    283a:	88 e5       	ldi	r24, 0x58	; 88
    283c:	96 e1       	ldi	r25, 0x16	; 22
    283e:	1e d9       	rcall	.-3524   	; 0x1a7c <ESP8266_Update>
    2840:	1e 99       	sbic	0x03, 6	; 3
    2842:	fb cf       	rjmp	.-10     	; 0x283a <main+0x86>
    2844:	1e 9b       	sbis	0x03, 6	; 3
    2846:	fe cf       	rjmp	.-4      	; 0x2844 <main+0x90>
    2848:	00 e0       	ldi	r16, 0x00	; 0
    284a:	10 e0       	ldi	r17, 0x00	; 0
    284c:	20 e5       	ldi	r18, 0x50	; 80
    284e:	30 e0       	ldi	r19, 0x00	; 0
    2850:	4b e1       	ldi	r20, 0x1B	; 27
    2852:	57 e0       	ldi	r21, 0x07	; 7
    2854:	61 e3       	ldi	r22, 0x31	; 49
    2856:	77 e0       	ldi	r23, 0x07	; 7
    2858:	88 e5       	ldi	r24, 0x58	; 88
    285a:	96 e1       	ldi	r25, 0x16	; 22
    285c:	d8 dd       	rcall	.-1104   	; 0x240e <ESP8266_StartClientConnectionTCP>
    285e:	81 11       	cpse	r24, r1
    2860:	f3 cf       	rjmp	.-26     	; 0x2848 <main+0x94>
    2862:	eb cf       	rjmp	.-42     	; 0x283a <main+0x86>

00002864 <ESP8266_Callback_DeviceReady>:
    2864:	8e e3       	ldi	r24, 0x3E	; 62
    2866:	97 e0       	ldi	r25, 0x07	; 7
    2868:	22 c3       	rjmp	.+1604   	; 0x2eae <puts>
    286a:	08 95       	ret

0000286c <ESP8266_Callback_WatchdogReset>:
    286c:	8f e4       	ldi	r24, 0x4F	; 79
    286e:	97 e0       	ldi	r25, 0x07	; 7
    2870:	1e c3       	rjmp	.+1596   	; 0x2eae <puts>
    2872:	08 95       	ret

00002874 <ESP8266_Callback_WifiDisconnected>:
    2874:	89 e6       	ldi	r24, 0x69	; 105
    2876:	97 e0       	ldi	r25, 0x07	; 7
    2878:	1a c3       	rjmp	.+1588   	; 0x2eae <puts>
    287a:	08 95       	ret

0000287c <ESP8266_Callback_WifiConnected>:
    287c:	80 e8       	ldi	r24, 0x80	; 128
    287e:	97 e0       	ldi	r25, 0x07	; 7
    2880:	16 c3       	rjmp	.+1580   	; 0x2eae <puts>
    2882:	08 95       	ret

00002884 <ESP8266_Callback_WifiConnectFailed>:
    2884:	fc 01       	movw	r30, r24
    2886:	eb 5e       	subi	r30, 0xEB	; 235
    2888:	fd 4f       	sbci	r31, 0xFD	; 253
    288a:	80 81       	ld	r24, Z
    288c:	1f 92       	push	r1
    288e:	8f 93       	push	r24
    2890:	84 e9       	ldi	r24, 0x94	; 148
    2892:	97 e0       	ldi	r25, 0x07	; 7
    2894:	9f 93       	push	r25
    2896:	8f 93       	push	r24
    2898:	f7 d2       	rcall	.+1518   	; 0x2e88 <printf>
    289a:	0f 90       	pop	r0
    289c:	0f 90       	pop	r0
    289e:	0f 90       	pop	r0
    28a0:	0f 90       	pop	r0
    28a2:	08 95       	ret

000028a4 <ESP8266_Callback_WifiGotIP>:
    28a4:	cf 93       	push	r28
    28a6:	df 93       	push	r29
    28a8:	ec 01       	movw	r28, r24
    28aa:	87 ec       	ldi	r24, 0xC7	; 199
    28ac:	97 e0       	ldi	r25, 0x07	; 7
    28ae:	ff d2       	rcall	.+1534   	; 0x2eae <puts>
    28b0:	ce 01       	movw	r24, r28
    28b2:	26 dc       	rcall	.-1972   	; 0x2100 <ESP8266_GetSTAIP>
    28b4:	1f 92       	push	r1
    28b6:	8f 93       	push	r24
    28b8:	8f ed       	ldi	r24, 0xDF	; 223
    28ba:	97 e0       	ldi	r25, 0x07	; 7
    28bc:	9f 93       	push	r25
    28be:	8f 93       	push	r24
    28c0:	e3 d2       	rcall	.+1478   	; 0x2e88 <printf>
    28c2:	0f 90       	pop	r0
    28c4:	0f 90       	pop	r0
    28c6:	0f 90       	pop	r0
    28c8:	0f 90       	pop	r0
    28ca:	df 91       	pop	r29
    28cc:	cf 91       	pop	r28
    28ce:	08 95       	ret

000028d0 <ESP8266_Callback_WifiIPSet>:
    28d0:	fc 01       	movw	r30, r24
    28d2:	e6 55       	subi	r30, 0x56	; 86
    28d4:	fe 4f       	sbci	r31, 0xFE	; 254
    28d6:	20 81       	ld	r18, Z
    28d8:	1f 92       	push	r1
    28da:	2f 93       	push	r18
    28dc:	31 97       	sbiw	r30, 0x01	; 1
    28de:	20 81       	ld	r18, Z
    28e0:	1f 92       	push	r1
    28e2:	2f 93       	push	r18
    28e4:	31 97       	sbiw	r30, 0x01	; 1
    28e6:	20 81       	ld	r18, Z
    28e8:	1f 92       	push	r1
    28ea:	2f 93       	push	r18
    28ec:	31 97       	sbiw	r30, 0x01	; 1
    28ee:	80 81       	ld	r24, Z
    28f0:	1f 92       	push	r1
    28f2:	8f 93       	push	r24
    28f4:	88 ef       	ldi	r24, 0xF8	; 248
    28f6:	97 e0       	ldi	r25, 0x07	; 7
    28f8:	9f 93       	push	r25
    28fa:	8f 93       	push	r24
    28fc:	c5 d2       	rcall	.+1418   	; 0x2e88 <printf>
    28fe:	8d b7       	in	r24, 0x3d	; 61
    2900:	9e b7       	in	r25, 0x3e	; 62
    2902:	0a 96       	adiw	r24, 0x0a	; 10
    2904:	0f b6       	in	r0, 0x3f	; 63
    2906:	f8 94       	cli
    2908:	9e bf       	out	0x3e, r25	; 62
    290a:	0f be       	out	0x3f, r0	; 63
    290c:	8d bf       	out	0x3d, r24	; 61
    290e:	08 95       	ret

00002910 <ESP8266_Callback_ClientConnectionConnected>:
    2910:	0f 93       	push	r16
    2912:	1f 93       	push	r17
    2914:	cf 93       	push	r28
    2916:	df 93       	push	r29
    2918:	8c 01       	movw	r16, r24
    291a:	eb 01       	movw	r28, r22
    291c:	9b 01       	movw	r18, r22
    291e:	22 5e       	subi	r18, 0xE2	; 226
    2920:	3f 4f       	sbci	r19, 0xFF	; 255
    2922:	3f 93       	push	r19
    2924:	2f 93       	push	r18
    2926:	2b e5       	ldi	r18, 0x5B	; 91
    2928:	38 e0       	ldi	r19, 0x08	; 8
    292a:	3f 93       	push	r19
    292c:	2f 93       	push	r18
    292e:	ac d2       	rcall	.+1368   	; 0x2e88 <printf>
    2930:	be 01       	movw	r22, r28
    2932:	c8 01       	movw	r24, r16
    2934:	e1 dc       	rcall	.-1598   	; 0x22f8 <ESP8266_RequestSendData>
    2936:	0f 90       	pop	r0
    2938:	0f 90       	pop	r0
    293a:	0f 90       	pop	r0
    293c:	0f 90       	pop	r0
    293e:	df 91       	pop	r29
    2940:	cf 91       	pop	r28
    2942:	1f 91       	pop	r17
    2944:	0f 91       	pop	r16
    2946:	08 95       	ret

00002948 <ESP8266_Callback_ClientConnectionError>:
    2948:	fb 01       	movw	r30, r22
    294a:	81 81       	ldd	r24, Z+1	; 0x01
    294c:	1f 92       	push	r1
    294e:	8f 93       	push	r24
    2950:	8f e8       	ldi	r24, 0x8F	; 143
    2952:	98 e0       	ldi	r25, 0x08	; 8
    2954:	9f 93       	push	r25
    2956:	8f 93       	push	r24
    2958:	97 d2       	rcall	.+1326   	; 0x2e88 <printf>
    295a:	0f 90       	pop	r0
    295c:	0f 90       	pop	r0
    295e:	0f 90       	pop	r0
    2960:	0f 90       	pop	r0
    2962:	08 95       	ret

00002964 <ESP8266_Callback_ClientConnectionSendData>:
    2964:	cf 93       	push	r28
    2966:	df 93       	push	r29
    2968:	81 e1       	ldi	r24, 0x11	; 17
    296a:	ec ec       	ldi	r30, 0xCC	; 204
    296c:	f8 e0       	ldi	r31, 0x08	; 8
    296e:	da 01       	movw	r26, r20
    2970:	01 90       	ld	r0, Z+
    2972:	0d 92       	st	X+, r0
    2974:	8a 95       	dec	r24
    2976:	e1 f7       	brne	.-8      	; 0x2970 <ESP8266_Callback_ClientConnectionSendData+0xc>
    2978:	da 01       	movw	r26, r20
    297a:	0d 90       	ld	r0, X+
    297c:	00 20       	and	r0, r0
    297e:	e9 f7       	brne	.-6      	; 0x297a <ESP8266_Callback_ClientConnectionSendData+0x16>
    2980:	11 97       	sbiw	r26, 0x01	; 1
    2982:	8e e1       	ldi	r24, 0x1E	; 30
    2984:	ed ed       	ldi	r30, 0xDD	; 221
    2986:	f8 e0       	ldi	r31, 0x08	; 8
    2988:	01 90       	ld	r0, Z+
    298a:	0d 92       	st	X+, r0
    298c:	8a 95       	dec	r24
    298e:	e1 f7       	brne	.-8      	; 0x2988 <ESP8266_Callback_ClientConnectionSendData+0x24>
    2990:	da 01       	movw	r26, r20
    2992:	0d 90       	ld	r0, X+
    2994:	00 20       	and	r0, r0
    2996:	e9 f7       	brne	.-6      	; 0x2992 <ESP8266_Callback_ClientConnectionSendData+0x2e>
    2998:	11 97       	sbiw	r26, 0x01	; 1
    299a:	84 e1       	ldi	r24, 0x14	; 20
    299c:	eb ef       	ldi	r30, 0xFB	; 251
    299e:	f8 e0       	ldi	r31, 0x08	; 8
    29a0:	01 90       	ld	r0, Z+
    29a2:	0d 92       	st	X+, r0
    29a4:	8a 95       	dec	r24
    29a6:	e1 f7       	brne	.-8      	; 0x29a0 <ESP8266_Callback_ClientConnectionSendData+0x3c>
    29a8:	fa 01       	movw	r30, r20
    29aa:	01 90       	ld	r0, Z+
    29ac:	00 20       	and	r0, r0
    29ae:	e9 f7       	brne	.-6      	; 0x29aa <ESP8266_Callback_ClientConnectionSendData+0x46>
    29b0:	31 97       	sbiw	r30, 0x01	; 1
    29b2:	8d e0       	ldi	r24, 0x0D	; 13
    29b4:	9a e0       	ldi	r25, 0x0A	; 10
    29b6:	a0 e0       	ldi	r26, 0x00	; 0
    29b8:	80 83       	st	Z, r24
    29ba:	91 83       	std	Z+1, r25	; 0x01
    29bc:	a2 83       	std	Z+2, r26	; 0x02
    29be:	fa 01       	movw	r30, r20
    29c0:	01 90       	ld	r0, Z+
    29c2:	00 20       	and	r0, r0
    29c4:	e9 f7       	brne	.-6      	; 0x29c0 <ESP8266_Callback_ClientConnectionSendData+0x5c>
    29c6:	cf 01       	movw	r24, r30
    29c8:	01 97       	sbiw	r24, 0x01	; 1
    29ca:	84 1b       	sub	r24, r20
    29cc:	95 0b       	sbc	r25, r21
    29ce:	df 91       	pop	r29
    29d0:	cf 91       	pop	r28
    29d2:	08 95       	ret

000029d4 <ESP8266_Callback_ClientConnectionDataSent>:
    29d4:	8f e0       	ldi	r24, 0x0F	; 15
    29d6:	99 e0       	ldi	r25, 0x09	; 9
    29d8:	6a c2       	rjmp	.+1236   	; 0x2eae <puts>
    29da:	08 95       	ret

000029dc <ESP8266_Callback_ClientConnectionDataReceived>:
}

void ESP8266_Callback_ClientConnectionDataReceived(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection, char* Buffer) {
    29dc:	cf 93       	push	r28
    29de:	df 93       	push	r29
    29e0:	eb 01       	movw	r28, r22
	/* Data received from server back to client */
	printf("Data received from server on connection: %s; Number of bytes received: %lu; %lu / %lu;\r\n",
    29e2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    29e4:	8f 93       	push	r24
    29e6:	8c 8d       	ldd	r24, Y+28	; 0x1c
    29e8:	8f 93       	push	r24
    29ea:	8b 8d       	ldd	r24, Y+27	; 0x1b
    29ec:	8f 93       	push	r24
    29ee:	8a 8d       	ldd	r24, Y+26	; 0x1a
    29f0:	8f 93       	push	r24
    29f2:	89 89       	ldd	r24, Y+17	; 0x11
    29f4:	8f 93       	push	r24
    29f6:	88 89       	ldd	r24, Y+16	; 0x10
    29f8:	8f 93       	push	r24
    29fa:	8f 85       	ldd	r24, Y+15	; 0x0f
    29fc:	8f 93       	push	r24
    29fe:	8e 85       	ldd	r24, Y+14	; 0x0e
    2a00:	8f 93       	push	r24
    2a02:	8d 85       	ldd	r24, Y+13	; 0x0d
    2a04:	8f 93       	push	r24
    2a06:	8c 85       	ldd	r24, Y+12	; 0x0c
    2a08:	8f 93       	push	r24
    2a0a:	8b 85       	ldd	r24, Y+11	; 0x0b
    2a0c:	8f 93       	push	r24
    2a0e:	8a 85       	ldd	r24, Y+10	; 0x0a
    2a10:	8f 93       	push	r24
    2a12:	cb 01       	movw	r24, r22
    2a14:	4e 96       	adiw	r24, 0x1e	; 30
    2a16:	9f 93       	push	r25
    2a18:	8f 93       	push	r24
    2a1a:	8f e5       	ldi	r24, 0x5F	; 95
    2a1c:	99 e0       	ldi	r25, 0x09	; 9
    2a1e:	9f 93       	push	r25
    2a20:	8f 93       	push	r24
    2a22:	32 d2       	rcall	.+1124   	; 0x2e88 <printf>
	Connection->TotalBytesReceived,
	Connection->ContentLength
	);
	
	/* Print message when first packet */
	if (Connection->FirstPacket) {
    2a24:	fe 01       	movw	r30, r28
    2a26:	ef 5b       	subi	r30, 0xBF	; 191
    2a28:	ff 4f       	sbci	r31, 0xFF	; 255
    2a2a:	8d b7       	in	r24, 0x3d	; 61
    2a2c:	9e b7       	in	r25, 0x3e	; 62
    2a2e:	40 96       	adiw	r24, 0x10	; 16
    2a30:	0f b6       	in	r0, 0x3f	; 63
    2a32:	f8 94       	cli
    2a34:	9e bf       	out	0x3e, r25	; 62
    2a36:	0f be       	out	0x3f, r0	; 63
    2a38:	8d bf       	out	0x3d, r24	; 61
    2a3a:	80 81       	ld	r24, Z
    2a3c:	88 23       	and	r24, r24
    2a3e:	99 f0       	breq	.+38     	; 0x2a66 <ESP8266_Callback_ClientConnectionDataReceived+0x8a>
		
		/* Print first message */
		printf("This is first packet received. Content length on this connection is: %lu\r\n", Connection->ContentLength);
    2a40:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2a42:	8f 93       	push	r24
    2a44:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2a46:	8f 93       	push	r24
    2a48:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2a4a:	8f 93       	push	r24
    2a4c:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2a4e:	8f 93       	push	r24
    2a50:	88 eb       	ldi	r24, 0xB8	; 184
    2a52:	99 e0       	ldi	r25, 0x09	; 9
    2a54:	9f 93       	push	r25
    2a56:	8f 93       	push	r24
    2a58:	17 d2       	rcall	.+1070   	; 0x2e88 <printf>
    2a5a:	0f 90       	pop	r0
    2a5c:	0f 90       	pop	r0
    2a5e:	0f 90       	pop	r0
    2a60:	0f 90       	pop	r0
    2a62:	0f 90       	pop	r0
    2a64:	0f 90       	pop	r0
	}
}
    2a66:	df 91       	pop	r29
    2a68:	cf 91       	pop	r28
    2a6a:	08 95       	ret

00002a6c <ESP8266_Callback_ClientConnectionClosed>:

/* Called when connection is closed */
void ESP8266_Callback_ClientConnectionClosed(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection) {
    2a6c:	fb 01       	movw	r30, r22
	printf("Client connection closed, connection: %d; Total bytes received: %lu; Content-Length header: %lu\r\n",
    2a6e:	85 8d       	ldd	r24, Z+29	; 0x1d
    2a70:	8f 93       	push	r24
    2a72:	84 8d       	ldd	r24, Z+28	; 0x1c
    2a74:	8f 93       	push	r24
    2a76:	83 8d       	ldd	r24, Z+27	; 0x1b
    2a78:	8f 93       	push	r24
    2a7a:	82 8d       	ldd	r24, Z+26	; 0x1a
    2a7c:	8f 93       	push	r24
    2a7e:	81 89       	ldd	r24, Z+17	; 0x11
    2a80:	8f 93       	push	r24
    2a82:	80 89       	ldd	r24, Z+16	; 0x10
    2a84:	8f 93       	push	r24
    2a86:	87 85       	ldd	r24, Z+15	; 0x0f
    2a88:	8f 93       	push	r24
    2a8a:	86 85       	ldd	r24, Z+14	; 0x0e
    2a8c:	8f 93       	push	r24
    2a8e:	81 81       	ldd	r24, Z+1	; 0x01
    2a90:	1f 92       	push	r1
    2a92:	8f 93       	push	r24
    2a94:	83 e0       	ldi	r24, 0x03	; 3
    2a96:	9a e0       	ldi	r25, 0x0A	; 10
    2a98:	9f 93       	push	r25
    2a9a:	8f 93       	push	r24
    2a9c:	f5 d1       	rcall	.+1002   	; 0x2e88 <printf>
    2a9e:	8d b7       	in	r24, 0x3d	; 61
    2aa0:	9e b7       	in	r25, 0x3e	; 62
    2aa2:	0c 96       	adiw	r24, 0x0c	; 12
    2aa4:	0f b6       	in	r0, 0x3f	; 63
    2aa6:	f8 94       	cli
    2aa8:	9e bf       	out	0x3e, r25	; 62
    2aaa:	0f be       	out	0x3f, r0	; 63
    2aac:	8d bf       	out	0x3d, r24	; 61
    2aae:	08 95       	ret

00002ab0 <ESP8266_Callback_ClientConnectionTimeout>:
	);
}

/* Called when timeout is reached on connection to server */
void ESP8266_Callback_ClientConnectionTimeout(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection) {
	printf("Timeout reached on connection: %d\r\n", Connection->Number);
    2ab0:	fb 01       	movw	r30, r22
    2ab2:	81 81       	ldd	r24, Z+1	; 0x01
    2ab4:	1f 92       	push	r1
    2ab6:	8f 93       	push	r24
    2ab8:	85 e6       	ldi	r24, 0x65	; 101
    2aba:	9a e0       	ldi	r25, 0x0A	; 10
    2abc:	9f 93       	push	r25
    2abe:	8f 93       	push	r24
    2ac0:	e3 d1       	rcall	.+966    	; 0x2e88 <printf>
    2ac2:	0f 90       	pop	r0
    2ac4:	0f 90       	pop	r0
    2ac6:	0f 90       	pop	r0
    2ac8:	0f 90       	pop	r0
    2aca:	08 95       	ret

00002acc <__udivmodsi4>:
    2acc:	a1 e2       	ldi	r26, 0x21	; 33
    2ace:	1a 2e       	mov	r1, r26
    2ad0:	aa 1b       	sub	r26, r26
    2ad2:	bb 1b       	sub	r27, r27
    2ad4:	fd 01       	movw	r30, r26
    2ad6:	0d c0       	rjmp	.+26     	; 0x2af2 <__udivmodsi4_ep>

00002ad8 <__udivmodsi4_loop>:
    2ad8:	aa 1f       	adc	r26, r26
    2ada:	bb 1f       	adc	r27, r27
    2adc:	ee 1f       	adc	r30, r30
    2ade:	ff 1f       	adc	r31, r31
    2ae0:	a2 17       	cp	r26, r18
    2ae2:	b3 07       	cpc	r27, r19
    2ae4:	e4 07       	cpc	r30, r20
    2ae6:	f5 07       	cpc	r31, r21
    2ae8:	20 f0       	brcs	.+8      	; 0x2af2 <__udivmodsi4_ep>
    2aea:	a2 1b       	sub	r26, r18
    2aec:	b3 0b       	sbc	r27, r19
    2aee:	e4 0b       	sbc	r30, r20
    2af0:	f5 0b       	sbc	r31, r21

00002af2 <__udivmodsi4_ep>:
    2af2:	66 1f       	adc	r22, r22
    2af4:	77 1f       	adc	r23, r23
    2af6:	88 1f       	adc	r24, r24
    2af8:	99 1f       	adc	r25, r25
    2afa:	1a 94       	dec	r1
    2afc:	69 f7       	brne	.-38     	; 0x2ad8 <__udivmodsi4_loop>
    2afe:	60 95       	com	r22
    2b00:	70 95       	com	r23
    2b02:	80 95       	com	r24
    2b04:	90 95       	com	r25
    2b06:	9b 01       	movw	r18, r22
    2b08:	ac 01       	movw	r20, r24
    2b0a:	bd 01       	movw	r22, r26
    2b0c:	cf 01       	movw	r24, r30
    2b0e:	08 95       	ret

00002b10 <__tablejump2__>:
    2b10:	ee 0f       	add	r30, r30
    2b12:	ff 1f       	adc	r31, r31
    2b14:	88 1f       	adc	r24, r24
    2b16:	8b bf       	out	0x3b, r24	; 59
    2b18:	07 90       	elpm	r0, Z+
    2b1a:	f6 91       	elpm	r31, Z
    2b1c:	e0 2d       	mov	r30, r0
    2b1e:	19 94       	eijmp

00002b20 <malloc>:
    2b20:	cf 93       	push	r28
    2b22:	df 93       	push	r29
    2b24:	82 30       	cpi	r24, 0x02	; 2
    2b26:	91 05       	cpc	r25, r1
    2b28:	10 f4       	brcc	.+4      	; 0x2b2e <malloc+0xe>
    2b2a:	82 e0       	ldi	r24, 0x02	; 2
    2b2c:	90 e0       	ldi	r25, 0x00	; 0
    2b2e:	e0 91 80 18 	lds	r30, 0x1880
    2b32:	f0 91 81 18 	lds	r31, 0x1881
    2b36:	20 e0       	ldi	r18, 0x00	; 0
    2b38:	30 e0       	ldi	r19, 0x00	; 0
    2b3a:	c0 e0       	ldi	r28, 0x00	; 0
    2b3c:	d0 e0       	ldi	r29, 0x00	; 0
    2b3e:	30 97       	sbiw	r30, 0x00	; 0
    2b40:	11 f1       	breq	.+68     	; 0x2b86 <malloc+0x66>
    2b42:	40 81       	ld	r20, Z
    2b44:	51 81       	ldd	r21, Z+1	; 0x01
    2b46:	48 17       	cp	r20, r24
    2b48:	59 07       	cpc	r21, r25
    2b4a:	c0 f0       	brcs	.+48     	; 0x2b7c <malloc+0x5c>
    2b4c:	48 17       	cp	r20, r24
    2b4e:	59 07       	cpc	r21, r25
    2b50:	61 f4       	brne	.+24     	; 0x2b6a <malloc+0x4a>
    2b52:	82 81       	ldd	r24, Z+2	; 0x02
    2b54:	93 81       	ldd	r25, Z+3	; 0x03
    2b56:	20 97       	sbiw	r28, 0x00	; 0
    2b58:	19 f0       	breq	.+6      	; 0x2b60 <malloc+0x40>
    2b5a:	9b 83       	std	Y+3, r25	; 0x03
    2b5c:	8a 83       	std	Y+2, r24	; 0x02
    2b5e:	2b c0       	rjmp	.+86     	; 0x2bb6 <malloc+0x96>
    2b60:	90 93 81 18 	sts	0x1881, r25
    2b64:	80 93 80 18 	sts	0x1880, r24
    2b68:	26 c0       	rjmp	.+76     	; 0x2bb6 <malloc+0x96>
    2b6a:	21 15       	cp	r18, r1
    2b6c:	31 05       	cpc	r19, r1
    2b6e:	19 f0       	breq	.+6      	; 0x2b76 <malloc+0x56>
    2b70:	42 17       	cp	r20, r18
    2b72:	53 07       	cpc	r21, r19
    2b74:	18 f4       	brcc	.+6      	; 0x2b7c <malloc+0x5c>
    2b76:	9a 01       	movw	r18, r20
    2b78:	be 01       	movw	r22, r28
    2b7a:	df 01       	movw	r26, r30
    2b7c:	ef 01       	movw	r28, r30
    2b7e:	02 80       	ldd	r0, Z+2	; 0x02
    2b80:	f3 81       	ldd	r31, Z+3	; 0x03
    2b82:	e0 2d       	mov	r30, r0
    2b84:	dc cf       	rjmp	.-72     	; 0x2b3e <malloc+0x1e>
    2b86:	21 15       	cp	r18, r1
    2b88:	31 05       	cpc	r19, r1
    2b8a:	09 f1       	breq	.+66     	; 0x2bce <malloc+0xae>
    2b8c:	28 1b       	sub	r18, r24
    2b8e:	39 0b       	sbc	r19, r25
    2b90:	24 30       	cpi	r18, 0x04	; 4
    2b92:	31 05       	cpc	r19, r1
    2b94:	90 f4       	brcc	.+36     	; 0x2bba <malloc+0x9a>
    2b96:	12 96       	adiw	r26, 0x02	; 2
    2b98:	8d 91       	ld	r24, X+
    2b9a:	9c 91       	ld	r25, X
    2b9c:	13 97       	sbiw	r26, 0x03	; 3
    2b9e:	61 15       	cp	r22, r1
    2ba0:	71 05       	cpc	r23, r1
    2ba2:	21 f0       	breq	.+8      	; 0x2bac <malloc+0x8c>
    2ba4:	fb 01       	movw	r30, r22
    2ba6:	93 83       	std	Z+3, r25	; 0x03
    2ba8:	82 83       	std	Z+2, r24	; 0x02
    2baa:	04 c0       	rjmp	.+8      	; 0x2bb4 <malloc+0x94>
    2bac:	90 93 81 18 	sts	0x1881, r25
    2bb0:	80 93 80 18 	sts	0x1880, r24
    2bb4:	fd 01       	movw	r30, r26
    2bb6:	32 96       	adiw	r30, 0x02	; 2
    2bb8:	44 c0       	rjmp	.+136    	; 0x2c42 <malloc+0x122>
    2bba:	fd 01       	movw	r30, r26
    2bbc:	e2 0f       	add	r30, r18
    2bbe:	f3 1f       	adc	r31, r19
    2bc0:	81 93       	st	Z+, r24
    2bc2:	91 93       	st	Z+, r25
    2bc4:	22 50       	subi	r18, 0x02	; 2
    2bc6:	31 09       	sbc	r19, r1
    2bc8:	2d 93       	st	X+, r18
    2bca:	3c 93       	st	X, r19
    2bcc:	3a c0       	rjmp	.+116    	; 0x2c42 <malloc+0x122>
    2bce:	20 91 7e 18 	lds	r18, 0x187E
    2bd2:	30 91 7f 18 	lds	r19, 0x187F
    2bd6:	23 2b       	or	r18, r19
    2bd8:	41 f4       	brne	.+16     	; 0x2bea <malloc+0xca>
    2bda:	20 91 02 02 	lds	r18, 0x0202
    2bde:	30 91 03 02 	lds	r19, 0x0203
    2be2:	30 93 7f 18 	sts	0x187F, r19
    2be6:	20 93 7e 18 	sts	0x187E, r18
    2bea:	20 91 00 02 	lds	r18, 0x0200
    2bee:	30 91 01 02 	lds	r19, 0x0201
    2bf2:	21 15       	cp	r18, r1
    2bf4:	31 05       	cpc	r19, r1
    2bf6:	41 f4       	brne	.+16     	; 0x2c08 <malloc+0xe8>
    2bf8:	2d b7       	in	r18, 0x3d	; 61
    2bfa:	3e b7       	in	r19, 0x3e	; 62
    2bfc:	40 91 04 02 	lds	r20, 0x0204
    2c00:	50 91 05 02 	lds	r21, 0x0205
    2c04:	24 1b       	sub	r18, r20
    2c06:	35 0b       	sbc	r19, r21
    2c08:	e0 91 7e 18 	lds	r30, 0x187E
    2c0c:	f0 91 7f 18 	lds	r31, 0x187F
    2c10:	e2 17       	cp	r30, r18
    2c12:	f3 07       	cpc	r31, r19
    2c14:	a0 f4       	brcc	.+40     	; 0x2c3e <malloc+0x11e>
    2c16:	2e 1b       	sub	r18, r30
    2c18:	3f 0b       	sbc	r19, r31
    2c1a:	28 17       	cp	r18, r24
    2c1c:	39 07       	cpc	r19, r25
    2c1e:	78 f0       	brcs	.+30     	; 0x2c3e <malloc+0x11e>
    2c20:	ac 01       	movw	r20, r24
    2c22:	4e 5f       	subi	r20, 0xFE	; 254
    2c24:	5f 4f       	sbci	r21, 0xFF	; 255
    2c26:	24 17       	cp	r18, r20
    2c28:	35 07       	cpc	r19, r21
    2c2a:	48 f0       	brcs	.+18     	; 0x2c3e <malloc+0x11e>
    2c2c:	4e 0f       	add	r20, r30
    2c2e:	5f 1f       	adc	r21, r31
    2c30:	50 93 7f 18 	sts	0x187F, r21
    2c34:	40 93 7e 18 	sts	0x187E, r20
    2c38:	81 93       	st	Z+, r24
    2c3a:	91 93       	st	Z+, r25
    2c3c:	02 c0       	rjmp	.+4      	; 0x2c42 <malloc+0x122>
    2c3e:	e0 e0       	ldi	r30, 0x00	; 0
    2c40:	f0 e0       	ldi	r31, 0x00	; 0
    2c42:	cf 01       	movw	r24, r30
    2c44:	df 91       	pop	r29
    2c46:	cf 91       	pop	r28
    2c48:	08 95       	ret

00002c4a <free>:
    2c4a:	0f 93       	push	r16
    2c4c:	1f 93       	push	r17
    2c4e:	cf 93       	push	r28
    2c50:	df 93       	push	r29
    2c52:	00 97       	sbiw	r24, 0x00	; 0
    2c54:	09 f4       	brne	.+2      	; 0x2c58 <free+0xe>
    2c56:	8c c0       	rjmp	.+280    	; 0x2d70 <free+0x126>
    2c58:	fc 01       	movw	r30, r24
    2c5a:	32 97       	sbiw	r30, 0x02	; 2
    2c5c:	13 82       	std	Z+3, r1	; 0x03
    2c5e:	12 82       	std	Z+2, r1	; 0x02
    2c60:	00 91 80 18 	lds	r16, 0x1880
    2c64:	10 91 81 18 	lds	r17, 0x1881
    2c68:	01 15       	cp	r16, r1
    2c6a:	11 05       	cpc	r17, r1
    2c6c:	81 f4       	brne	.+32     	; 0x2c8e <free+0x44>
    2c6e:	20 81       	ld	r18, Z
    2c70:	31 81       	ldd	r19, Z+1	; 0x01
    2c72:	82 0f       	add	r24, r18
    2c74:	93 1f       	adc	r25, r19
    2c76:	20 91 7e 18 	lds	r18, 0x187E
    2c7a:	30 91 7f 18 	lds	r19, 0x187F
    2c7e:	28 17       	cp	r18, r24
    2c80:	39 07       	cpc	r19, r25
    2c82:	79 f5       	brne	.+94     	; 0x2ce2 <free+0x98>
    2c84:	f0 93 7f 18 	sts	0x187F, r31
    2c88:	e0 93 7e 18 	sts	0x187E, r30
    2c8c:	71 c0       	rjmp	.+226    	; 0x2d70 <free+0x126>
    2c8e:	d8 01       	movw	r26, r16
    2c90:	40 e0       	ldi	r20, 0x00	; 0
    2c92:	50 e0       	ldi	r21, 0x00	; 0
    2c94:	ae 17       	cp	r26, r30
    2c96:	bf 07       	cpc	r27, r31
    2c98:	50 f4       	brcc	.+20     	; 0x2cae <free+0x64>
    2c9a:	12 96       	adiw	r26, 0x02	; 2
    2c9c:	2d 91       	ld	r18, X+
    2c9e:	3c 91       	ld	r19, X
    2ca0:	13 97       	sbiw	r26, 0x03	; 3
    2ca2:	ad 01       	movw	r20, r26
    2ca4:	21 15       	cp	r18, r1
    2ca6:	31 05       	cpc	r19, r1
    2ca8:	09 f1       	breq	.+66     	; 0x2cec <free+0xa2>
    2caa:	d9 01       	movw	r26, r18
    2cac:	f3 cf       	rjmp	.-26     	; 0x2c94 <free+0x4a>
    2cae:	9d 01       	movw	r18, r26
    2cb0:	da 01       	movw	r26, r20
    2cb2:	33 83       	std	Z+3, r19	; 0x03
    2cb4:	22 83       	std	Z+2, r18	; 0x02
    2cb6:	60 81       	ld	r22, Z
    2cb8:	71 81       	ldd	r23, Z+1	; 0x01
    2cba:	86 0f       	add	r24, r22
    2cbc:	97 1f       	adc	r25, r23
    2cbe:	82 17       	cp	r24, r18
    2cc0:	93 07       	cpc	r25, r19
    2cc2:	69 f4       	brne	.+26     	; 0x2cde <free+0x94>
    2cc4:	ec 01       	movw	r28, r24
    2cc6:	28 81       	ld	r18, Y
    2cc8:	39 81       	ldd	r19, Y+1	; 0x01
    2cca:	26 0f       	add	r18, r22
    2ccc:	37 1f       	adc	r19, r23
    2cce:	2e 5f       	subi	r18, 0xFE	; 254
    2cd0:	3f 4f       	sbci	r19, 0xFF	; 255
    2cd2:	31 83       	std	Z+1, r19	; 0x01
    2cd4:	20 83       	st	Z, r18
    2cd6:	8a 81       	ldd	r24, Y+2	; 0x02
    2cd8:	9b 81       	ldd	r25, Y+3	; 0x03
    2cda:	93 83       	std	Z+3, r25	; 0x03
    2cdc:	82 83       	std	Z+2, r24	; 0x02
    2cde:	45 2b       	or	r20, r21
    2ce0:	29 f4       	brne	.+10     	; 0x2cec <free+0xa2>
    2ce2:	f0 93 81 18 	sts	0x1881, r31
    2ce6:	e0 93 80 18 	sts	0x1880, r30
    2cea:	42 c0       	rjmp	.+132    	; 0x2d70 <free+0x126>
    2cec:	13 96       	adiw	r26, 0x03	; 3
    2cee:	fc 93       	st	X, r31
    2cf0:	ee 93       	st	-X, r30
    2cf2:	12 97       	sbiw	r26, 0x02	; 2
    2cf4:	ed 01       	movw	r28, r26
    2cf6:	49 91       	ld	r20, Y+
    2cf8:	59 91       	ld	r21, Y+
    2cfa:	9e 01       	movw	r18, r28
    2cfc:	24 0f       	add	r18, r20
    2cfe:	35 1f       	adc	r19, r21
    2d00:	e2 17       	cp	r30, r18
    2d02:	f3 07       	cpc	r31, r19
    2d04:	71 f4       	brne	.+28     	; 0x2d22 <free+0xd8>
    2d06:	80 81       	ld	r24, Z
    2d08:	91 81       	ldd	r25, Z+1	; 0x01
    2d0a:	84 0f       	add	r24, r20
    2d0c:	95 1f       	adc	r25, r21
    2d0e:	02 96       	adiw	r24, 0x02	; 2
    2d10:	11 96       	adiw	r26, 0x01	; 1
    2d12:	9c 93       	st	X, r25
    2d14:	8e 93       	st	-X, r24
    2d16:	82 81       	ldd	r24, Z+2	; 0x02
    2d18:	93 81       	ldd	r25, Z+3	; 0x03
    2d1a:	13 96       	adiw	r26, 0x03	; 3
    2d1c:	9c 93       	st	X, r25
    2d1e:	8e 93       	st	-X, r24
    2d20:	12 97       	sbiw	r26, 0x02	; 2
    2d22:	e0 e0       	ldi	r30, 0x00	; 0
    2d24:	f0 e0       	ldi	r31, 0x00	; 0
    2d26:	d8 01       	movw	r26, r16
    2d28:	12 96       	adiw	r26, 0x02	; 2
    2d2a:	8d 91       	ld	r24, X+
    2d2c:	9c 91       	ld	r25, X
    2d2e:	13 97       	sbiw	r26, 0x03	; 3
    2d30:	00 97       	sbiw	r24, 0x00	; 0
    2d32:	19 f0       	breq	.+6      	; 0x2d3a <free+0xf0>
    2d34:	f8 01       	movw	r30, r16
    2d36:	8c 01       	movw	r16, r24
    2d38:	f6 cf       	rjmp	.-20     	; 0x2d26 <free+0xdc>
    2d3a:	8d 91       	ld	r24, X+
    2d3c:	9c 91       	ld	r25, X
    2d3e:	98 01       	movw	r18, r16
    2d40:	2e 5f       	subi	r18, 0xFE	; 254
    2d42:	3f 4f       	sbci	r19, 0xFF	; 255
    2d44:	82 0f       	add	r24, r18
    2d46:	93 1f       	adc	r25, r19
    2d48:	20 91 7e 18 	lds	r18, 0x187E
    2d4c:	30 91 7f 18 	lds	r19, 0x187F
    2d50:	28 17       	cp	r18, r24
    2d52:	39 07       	cpc	r19, r25
    2d54:	69 f4       	brne	.+26     	; 0x2d70 <free+0x126>
    2d56:	30 97       	sbiw	r30, 0x00	; 0
    2d58:	29 f4       	brne	.+10     	; 0x2d64 <free+0x11a>
    2d5a:	10 92 81 18 	sts	0x1881, r1
    2d5e:	10 92 80 18 	sts	0x1880, r1
    2d62:	02 c0       	rjmp	.+4      	; 0x2d68 <free+0x11e>
    2d64:	13 82       	std	Z+3, r1	; 0x03
    2d66:	12 82       	std	Z+2, r1	; 0x02
    2d68:	10 93 7f 18 	sts	0x187F, r17
    2d6c:	00 93 7e 18 	sts	0x187E, r16
    2d70:	df 91       	pop	r29
    2d72:	cf 91       	pop	r28
    2d74:	1f 91       	pop	r17
    2d76:	0f 91       	pop	r16
    2d78:	08 95       	ret

00002d7a <strtok>:
    2d7a:	4a e8       	ldi	r20, 0x8A	; 138
    2d7c:	5a e0       	ldi	r21, 0x0A	; 10
    2d7e:	5d c0       	rjmp	.+186    	; 0x2e3a <strtok_r>

00002d80 <memcmp>:
    2d80:	fb 01       	movw	r30, r22
    2d82:	dc 01       	movw	r26, r24
    2d84:	04 c0       	rjmp	.+8      	; 0x2d8e <memcmp+0xe>
    2d86:	8d 91       	ld	r24, X+
    2d88:	01 90       	ld	r0, Z+
    2d8a:	80 19       	sub	r24, r0
    2d8c:	21 f4       	brne	.+8      	; 0x2d96 <memcmp+0x16>
    2d8e:	41 50       	subi	r20, 0x01	; 1
    2d90:	50 40       	sbci	r21, 0x00	; 0
    2d92:	c8 f7       	brcc	.-14     	; 0x2d86 <memcmp+0x6>
    2d94:	88 1b       	sub	r24, r24
    2d96:	99 0b       	sbc	r25, r25
    2d98:	08 95       	ret

00002d9a <memcpy>:
    2d9a:	fb 01       	movw	r30, r22
    2d9c:	dc 01       	movw	r26, r24
    2d9e:	02 c0       	rjmp	.+4      	; 0x2da4 <memcpy+0xa>
    2da0:	01 90       	ld	r0, Z+
    2da2:	0d 92       	st	X+, r0
    2da4:	41 50       	subi	r20, 0x01	; 1
    2da6:	50 40       	sbci	r21, 0x00	; 0
    2da8:	d8 f7       	brcc	.-10     	; 0x2da0 <memcpy+0x6>
    2daa:	08 95       	ret

00002dac <strcmp>:
    2dac:	fb 01       	movw	r30, r22
    2dae:	dc 01       	movw	r26, r24
    2db0:	8d 91       	ld	r24, X+
    2db2:	01 90       	ld	r0, Z+
    2db4:	80 19       	sub	r24, r0
    2db6:	01 10       	cpse	r0, r1
    2db8:	d9 f3       	breq	.-10     	; 0x2db0 <strcmp+0x4>
    2dba:	99 0b       	sbc	r25, r25
    2dbc:	08 95       	ret

00002dbe <strcpy>:
    2dbe:	fb 01       	movw	r30, r22
    2dc0:	dc 01       	movw	r26, r24
    2dc2:	01 90       	ld	r0, Z+
    2dc4:	0d 92       	st	X+, r0
    2dc6:	00 20       	and	r0, r0
    2dc8:	e1 f7       	brne	.-8      	; 0x2dc2 <strcpy+0x4>
    2dca:	08 95       	ret

00002dcc <strncmp>:
    2dcc:	fb 01       	movw	r30, r22
    2dce:	dc 01       	movw	r26, r24
    2dd0:	41 50       	subi	r20, 0x01	; 1
    2dd2:	50 40       	sbci	r21, 0x00	; 0
    2dd4:	30 f0       	brcs	.+12     	; 0x2de2 <strncmp+0x16>
    2dd6:	8d 91       	ld	r24, X+
    2dd8:	01 90       	ld	r0, Z+
    2dda:	80 19       	sub	r24, r0
    2ddc:	19 f4       	brne	.+6      	; 0x2de4 <strncmp+0x18>
    2dde:	00 20       	and	r0, r0
    2de0:	b9 f7       	brne	.-18     	; 0x2dd0 <strncmp+0x4>
    2de2:	88 1b       	sub	r24, r24
    2de4:	99 0b       	sbc	r25, r25
    2de6:	08 95       	ret

00002de8 <strncpy>:
    2de8:	fb 01       	movw	r30, r22
    2dea:	dc 01       	movw	r26, r24
    2dec:	41 50       	subi	r20, 0x01	; 1
    2dee:	50 40       	sbci	r21, 0x00	; 0
    2df0:	48 f0       	brcs	.+18     	; 0x2e04 <strncpy+0x1c>
    2df2:	01 90       	ld	r0, Z+
    2df4:	0d 92       	st	X+, r0
    2df6:	00 20       	and	r0, r0
    2df8:	c9 f7       	brne	.-14     	; 0x2dec <strncpy+0x4>
    2dfa:	01 c0       	rjmp	.+2      	; 0x2dfe <strncpy+0x16>
    2dfc:	1d 92       	st	X+, r1
    2dfe:	41 50       	subi	r20, 0x01	; 1
    2e00:	50 40       	sbci	r21, 0x00	; 0
    2e02:	e0 f7       	brcc	.-8      	; 0x2dfc <strncpy+0x14>
    2e04:	08 95       	ret

00002e06 <strstr>:
    2e06:	fb 01       	movw	r30, r22
    2e08:	51 91       	ld	r21, Z+
    2e0a:	55 23       	and	r21, r21
    2e0c:	a9 f0       	breq	.+42     	; 0x2e38 <strstr+0x32>
    2e0e:	bf 01       	movw	r22, r30
    2e10:	dc 01       	movw	r26, r24
    2e12:	4d 91       	ld	r20, X+
    2e14:	45 17       	cp	r20, r21
    2e16:	41 11       	cpse	r20, r1
    2e18:	e1 f7       	brne	.-8      	; 0x2e12 <strstr+0xc>
    2e1a:	59 f4       	brne	.+22     	; 0x2e32 <strstr+0x2c>
    2e1c:	cd 01       	movw	r24, r26
    2e1e:	01 90       	ld	r0, Z+
    2e20:	00 20       	and	r0, r0
    2e22:	49 f0       	breq	.+18     	; 0x2e36 <strstr+0x30>
    2e24:	4d 91       	ld	r20, X+
    2e26:	40 15       	cp	r20, r0
    2e28:	41 11       	cpse	r20, r1
    2e2a:	c9 f3       	breq	.-14     	; 0x2e1e <strstr+0x18>
    2e2c:	fb 01       	movw	r30, r22
    2e2e:	41 11       	cpse	r20, r1
    2e30:	ef cf       	rjmp	.-34     	; 0x2e10 <strstr+0xa>
    2e32:	81 e0       	ldi	r24, 0x01	; 1
    2e34:	90 e0       	ldi	r25, 0x00	; 0
    2e36:	01 97       	sbiw	r24, 0x01	; 1
    2e38:	08 95       	ret

00002e3a <strtok_r>:
    2e3a:	fa 01       	movw	r30, r20
    2e3c:	a1 91       	ld	r26, Z+
    2e3e:	b0 81       	ld	r27, Z
    2e40:	00 97       	sbiw	r24, 0x00	; 0
    2e42:	19 f4       	brne	.+6      	; 0x2e4a <strtok_r+0x10>
    2e44:	10 97       	sbiw	r26, 0x00	; 0
    2e46:	e1 f0       	breq	.+56     	; 0x2e80 <strtok_r+0x46>
    2e48:	cd 01       	movw	r24, r26
    2e4a:	dc 01       	movw	r26, r24
    2e4c:	cd 01       	movw	r24, r26
    2e4e:	0d 90       	ld	r0, X+
    2e50:	00 20       	and	r0, r0
    2e52:	11 f4       	brne	.+4      	; 0x2e58 <strtok_r+0x1e>
    2e54:	c0 01       	movw	r24, r0
    2e56:	13 c0       	rjmp	.+38     	; 0x2e7e <strtok_r+0x44>
    2e58:	fb 01       	movw	r30, r22
    2e5a:	21 91       	ld	r18, Z+
    2e5c:	22 23       	and	r18, r18
    2e5e:	19 f0       	breq	.+6      	; 0x2e66 <strtok_r+0x2c>
    2e60:	20 15       	cp	r18, r0
    2e62:	d9 f7       	brne	.-10     	; 0x2e5a <strtok_r+0x20>
    2e64:	f3 cf       	rjmp	.-26     	; 0x2e4c <strtok_r+0x12>
    2e66:	fb 01       	movw	r30, r22
    2e68:	21 91       	ld	r18, Z+
    2e6a:	20 15       	cp	r18, r0
    2e6c:	19 f4       	brne	.+6      	; 0x2e74 <strtok_r+0x3a>
    2e6e:	1e 92       	st	-X, r1
    2e70:	11 96       	adiw	r26, 0x01	; 1
    2e72:	06 c0       	rjmp	.+12     	; 0x2e80 <strtok_r+0x46>
    2e74:	22 23       	and	r18, r18
    2e76:	c1 f7       	brne	.-16     	; 0x2e68 <strtok_r+0x2e>
    2e78:	0d 90       	ld	r0, X+
    2e7a:	00 20       	and	r0, r0
    2e7c:	a1 f7       	brne	.-24     	; 0x2e66 <strtok_r+0x2c>
    2e7e:	d0 01       	movw	r26, r0
    2e80:	fa 01       	movw	r30, r20
    2e82:	a1 93       	st	Z+, r26
    2e84:	b0 83       	st	Z, r27
    2e86:	08 95       	ret

00002e88 <printf>:
    2e88:	cf 93       	push	r28
    2e8a:	df 93       	push	r29
    2e8c:	cd b7       	in	r28, 0x3d	; 61
    2e8e:	de b7       	in	r29, 0x3e	; 62
    2e90:	ae 01       	movw	r20, r28
    2e92:	4a 5f       	subi	r20, 0xFA	; 250
    2e94:	5f 4f       	sbci	r21, 0xFF	; 255
    2e96:	fa 01       	movw	r30, r20
    2e98:	61 91       	ld	r22, Z+
    2e9a:	71 91       	ld	r23, Z+
    2e9c:	af 01       	movw	r20, r30
    2e9e:	80 91 84 18 	lds	r24, 0x1884
    2ea2:	90 91 85 18 	lds	r25, 0x1885
    2ea6:	62 d0       	rcall	.+196    	; 0x2f6c <vfprintf>
    2ea8:	df 91       	pop	r29
    2eaa:	cf 91       	pop	r28
    2eac:	08 95       	ret

00002eae <puts>:
    2eae:	0f 93       	push	r16
    2eb0:	1f 93       	push	r17
    2eb2:	cf 93       	push	r28
    2eb4:	df 93       	push	r29
    2eb6:	e0 91 84 18 	lds	r30, 0x1884
    2eba:	f0 91 85 18 	lds	r31, 0x1885
    2ebe:	23 81       	ldd	r18, Z+3	; 0x03
    2ec0:	21 ff       	sbrs	r18, 1
    2ec2:	1b c0       	rjmp	.+54     	; 0x2efa <puts+0x4c>
    2ec4:	8c 01       	movw	r16, r24
    2ec6:	d0 e0       	ldi	r29, 0x00	; 0
    2ec8:	c0 e0       	ldi	r28, 0x00	; 0
    2eca:	f8 01       	movw	r30, r16
    2ecc:	81 91       	ld	r24, Z+
    2ece:	8f 01       	movw	r16, r30
    2ed0:	60 91 84 18 	lds	r22, 0x1884
    2ed4:	70 91 85 18 	lds	r23, 0x1885
    2ed8:	db 01       	movw	r26, r22
    2eda:	18 96       	adiw	r26, 0x08	; 8
    2edc:	ed 91       	ld	r30, X+
    2ede:	fc 91       	ld	r31, X
    2ee0:	19 97       	sbiw	r26, 0x09	; 9
    2ee2:	88 23       	and	r24, r24
    2ee4:	31 f0       	breq	.+12     	; 0x2ef2 <puts+0x44>
    2ee6:	19 95       	eicall
    2ee8:	89 2b       	or	r24, r25
    2eea:	79 f3       	breq	.-34     	; 0x2eca <puts+0x1c>
    2eec:	df ef       	ldi	r29, 0xFF	; 255
    2eee:	cf ef       	ldi	r28, 0xFF	; 255
    2ef0:	ec cf       	rjmp	.-40     	; 0x2eca <puts+0x1c>
    2ef2:	8a e0       	ldi	r24, 0x0A	; 10
    2ef4:	19 95       	eicall
    2ef6:	89 2b       	or	r24, r25
    2ef8:	19 f0       	breq	.+6      	; 0x2f00 <puts+0x52>
    2efa:	8f ef       	ldi	r24, 0xFF	; 255
    2efc:	9f ef       	ldi	r25, 0xFF	; 255
    2efe:	02 c0       	rjmp	.+4      	; 0x2f04 <puts+0x56>
    2f00:	8d 2f       	mov	r24, r29
    2f02:	9c 2f       	mov	r25, r28
    2f04:	df 91       	pop	r29
    2f06:	cf 91       	pop	r28
    2f08:	1f 91       	pop	r17
    2f0a:	0f 91       	pop	r16
    2f0c:	08 95       	ret

00002f0e <sprintf>:
    2f0e:	0f 93       	push	r16
    2f10:	1f 93       	push	r17
    2f12:	cf 93       	push	r28
    2f14:	df 93       	push	r29
    2f16:	cd b7       	in	r28, 0x3d	; 61
    2f18:	de b7       	in	r29, 0x3e	; 62
    2f1a:	2e 97       	sbiw	r28, 0x0e	; 14
    2f1c:	0f b6       	in	r0, 0x3f	; 63
    2f1e:	f8 94       	cli
    2f20:	de bf       	out	0x3e, r29	; 62
    2f22:	0f be       	out	0x3f, r0	; 63
    2f24:	cd bf       	out	0x3d, r28	; 61
    2f26:	0e 89       	ldd	r16, Y+22	; 0x16
    2f28:	1f 89       	ldd	r17, Y+23	; 0x17
    2f2a:	86 e0       	ldi	r24, 0x06	; 6
    2f2c:	8c 83       	std	Y+4, r24	; 0x04
    2f2e:	1a 83       	std	Y+2, r17	; 0x02
    2f30:	09 83       	std	Y+1, r16	; 0x01
    2f32:	8f ef       	ldi	r24, 0xFF	; 255
    2f34:	9f e7       	ldi	r25, 0x7F	; 127
    2f36:	9e 83       	std	Y+6, r25	; 0x06
    2f38:	8d 83       	std	Y+5, r24	; 0x05
    2f3a:	ae 01       	movw	r20, r28
    2f3c:	46 5e       	subi	r20, 0xE6	; 230
    2f3e:	5f 4f       	sbci	r21, 0xFF	; 255
    2f40:	68 8d       	ldd	r22, Y+24	; 0x18
    2f42:	79 8d       	ldd	r23, Y+25	; 0x19
    2f44:	ce 01       	movw	r24, r28
    2f46:	01 96       	adiw	r24, 0x01	; 1
    2f48:	11 d0       	rcall	.+34     	; 0x2f6c <vfprintf>
    2f4a:	2f 81       	ldd	r18, Y+7	; 0x07
    2f4c:	38 85       	ldd	r19, Y+8	; 0x08
    2f4e:	f8 01       	movw	r30, r16
    2f50:	e2 0f       	add	r30, r18
    2f52:	f3 1f       	adc	r31, r19
    2f54:	10 82       	st	Z, r1
    2f56:	2e 96       	adiw	r28, 0x0e	; 14
    2f58:	0f b6       	in	r0, 0x3f	; 63
    2f5a:	f8 94       	cli
    2f5c:	de bf       	out	0x3e, r29	; 62
    2f5e:	0f be       	out	0x3f, r0	; 63
    2f60:	cd bf       	out	0x3d, r28	; 61
    2f62:	df 91       	pop	r29
    2f64:	cf 91       	pop	r28
    2f66:	1f 91       	pop	r17
    2f68:	0f 91       	pop	r16
    2f6a:	08 95       	ret

00002f6c <vfprintf>:
    2f6c:	2f 92       	push	r2
    2f6e:	3f 92       	push	r3
    2f70:	4f 92       	push	r4
    2f72:	5f 92       	push	r5
    2f74:	6f 92       	push	r6
    2f76:	7f 92       	push	r7
    2f78:	8f 92       	push	r8
    2f7a:	9f 92       	push	r9
    2f7c:	af 92       	push	r10
    2f7e:	bf 92       	push	r11
    2f80:	cf 92       	push	r12
    2f82:	df 92       	push	r13
    2f84:	ef 92       	push	r14
    2f86:	ff 92       	push	r15
    2f88:	0f 93       	push	r16
    2f8a:	1f 93       	push	r17
    2f8c:	cf 93       	push	r28
    2f8e:	df 93       	push	r29
    2f90:	cd b7       	in	r28, 0x3d	; 61
    2f92:	de b7       	in	r29, 0x3e	; 62
    2f94:	2c 97       	sbiw	r28, 0x0c	; 12
    2f96:	0f b6       	in	r0, 0x3f	; 63
    2f98:	f8 94       	cli
    2f9a:	de bf       	out	0x3e, r29	; 62
    2f9c:	0f be       	out	0x3f, r0	; 63
    2f9e:	cd bf       	out	0x3d, r28	; 61
    2fa0:	7c 01       	movw	r14, r24
    2fa2:	6b 01       	movw	r12, r22
    2fa4:	8a 01       	movw	r16, r20
    2fa6:	fc 01       	movw	r30, r24
    2fa8:	17 82       	std	Z+7, r1	; 0x07
    2faa:	16 82       	std	Z+6, r1	; 0x06
    2fac:	83 81       	ldd	r24, Z+3	; 0x03
    2fae:	81 ff       	sbrs	r24, 1
    2fb0:	b0 c1       	rjmp	.+864    	; 0x3312 <vfprintf+0x3a6>
    2fb2:	ce 01       	movw	r24, r28
    2fb4:	01 96       	adiw	r24, 0x01	; 1
    2fb6:	4c 01       	movw	r8, r24
    2fb8:	f7 01       	movw	r30, r14
    2fba:	93 81       	ldd	r25, Z+3	; 0x03
    2fbc:	f6 01       	movw	r30, r12
    2fbe:	93 fd       	sbrc	r25, 3
    2fc0:	85 91       	lpm	r24, Z+
    2fc2:	93 ff       	sbrs	r25, 3
    2fc4:	81 91       	ld	r24, Z+
    2fc6:	6f 01       	movw	r12, r30
    2fc8:	88 23       	and	r24, r24
    2fca:	09 f4       	brne	.+2      	; 0x2fce <vfprintf+0x62>
    2fcc:	9e c1       	rjmp	.+828    	; 0x330a <vfprintf+0x39e>
    2fce:	85 32       	cpi	r24, 0x25	; 37
    2fd0:	39 f4       	brne	.+14     	; 0x2fe0 <vfprintf+0x74>
    2fd2:	93 fd       	sbrc	r25, 3
    2fd4:	85 91       	lpm	r24, Z+
    2fd6:	93 ff       	sbrs	r25, 3
    2fd8:	81 91       	ld	r24, Z+
    2fda:	6f 01       	movw	r12, r30
    2fdc:	85 32       	cpi	r24, 0x25	; 37
    2fde:	21 f4       	brne	.+8      	; 0x2fe8 <vfprintf+0x7c>
    2fe0:	b7 01       	movw	r22, r14
    2fe2:	90 e0       	ldi	r25, 0x00	; 0
    2fe4:	c7 d1       	rcall	.+910    	; 0x3374 <fputc>
    2fe6:	e8 cf       	rjmp	.-48     	; 0x2fb8 <vfprintf+0x4c>
    2fe8:	51 2c       	mov	r5, r1
    2fea:	31 2c       	mov	r3, r1
    2fec:	20 e0       	ldi	r18, 0x00	; 0
    2fee:	20 32       	cpi	r18, 0x20	; 32
    2ff0:	a0 f4       	brcc	.+40     	; 0x301a <vfprintf+0xae>
    2ff2:	8b 32       	cpi	r24, 0x2B	; 43
    2ff4:	69 f0       	breq	.+26     	; 0x3010 <vfprintf+0xa4>
    2ff6:	30 f4       	brcc	.+12     	; 0x3004 <vfprintf+0x98>
    2ff8:	80 32       	cpi	r24, 0x20	; 32
    2ffa:	59 f0       	breq	.+22     	; 0x3012 <vfprintf+0xa6>
    2ffc:	83 32       	cpi	r24, 0x23	; 35
    2ffe:	69 f4       	brne	.+26     	; 0x301a <vfprintf+0xae>
    3000:	20 61       	ori	r18, 0x10	; 16
    3002:	2c c0       	rjmp	.+88     	; 0x305c <vfprintf+0xf0>
    3004:	8d 32       	cpi	r24, 0x2D	; 45
    3006:	39 f0       	breq	.+14     	; 0x3016 <vfprintf+0xaa>
    3008:	80 33       	cpi	r24, 0x30	; 48
    300a:	39 f4       	brne	.+14     	; 0x301a <vfprintf+0xae>
    300c:	21 60       	ori	r18, 0x01	; 1
    300e:	26 c0       	rjmp	.+76     	; 0x305c <vfprintf+0xf0>
    3010:	22 60       	ori	r18, 0x02	; 2
    3012:	24 60       	ori	r18, 0x04	; 4
    3014:	23 c0       	rjmp	.+70     	; 0x305c <vfprintf+0xf0>
    3016:	28 60       	ori	r18, 0x08	; 8
    3018:	21 c0       	rjmp	.+66     	; 0x305c <vfprintf+0xf0>
    301a:	27 fd       	sbrc	r18, 7
    301c:	27 c0       	rjmp	.+78     	; 0x306c <vfprintf+0x100>
    301e:	30 ed       	ldi	r19, 0xD0	; 208
    3020:	38 0f       	add	r19, r24
    3022:	3a 30       	cpi	r19, 0x0A	; 10
    3024:	78 f4       	brcc	.+30     	; 0x3044 <vfprintf+0xd8>
    3026:	26 ff       	sbrs	r18, 6
    3028:	06 c0       	rjmp	.+12     	; 0x3036 <vfprintf+0xca>
    302a:	fa e0       	ldi	r31, 0x0A	; 10
    302c:	5f 9e       	mul	r5, r31
    302e:	30 0d       	add	r19, r0
    3030:	11 24       	eor	r1, r1
    3032:	53 2e       	mov	r5, r19
    3034:	13 c0       	rjmp	.+38     	; 0x305c <vfprintf+0xf0>
    3036:	8a e0       	ldi	r24, 0x0A	; 10
    3038:	38 9e       	mul	r3, r24
    303a:	30 0d       	add	r19, r0
    303c:	11 24       	eor	r1, r1
    303e:	33 2e       	mov	r3, r19
    3040:	20 62       	ori	r18, 0x20	; 32
    3042:	0c c0       	rjmp	.+24     	; 0x305c <vfprintf+0xf0>
    3044:	8e 32       	cpi	r24, 0x2E	; 46
    3046:	21 f4       	brne	.+8      	; 0x3050 <vfprintf+0xe4>
    3048:	26 fd       	sbrc	r18, 6
    304a:	5f c1       	rjmp	.+702    	; 0x330a <vfprintf+0x39e>
    304c:	20 64       	ori	r18, 0x40	; 64
    304e:	06 c0       	rjmp	.+12     	; 0x305c <vfprintf+0xf0>
    3050:	8c 36       	cpi	r24, 0x6C	; 108
    3052:	11 f4       	brne	.+4      	; 0x3058 <vfprintf+0xec>
    3054:	20 68       	ori	r18, 0x80	; 128
    3056:	02 c0       	rjmp	.+4      	; 0x305c <vfprintf+0xf0>
    3058:	88 36       	cpi	r24, 0x68	; 104
    305a:	41 f4       	brne	.+16     	; 0x306c <vfprintf+0x100>
    305c:	f6 01       	movw	r30, r12
    305e:	93 fd       	sbrc	r25, 3
    3060:	85 91       	lpm	r24, Z+
    3062:	93 ff       	sbrs	r25, 3
    3064:	81 91       	ld	r24, Z+
    3066:	6f 01       	movw	r12, r30
    3068:	81 11       	cpse	r24, r1
    306a:	c1 cf       	rjmp	.-126    	; 0x2fee <vfprintf+0x82>
    306c:	98 2f       	mov	r25, r24
    306e:	9f 7d       	andi	r25, 0xDF	; 223
    3070:	95 54       	subi	r25, 0x45	; 69
    3072:	93 30       	cpi	r25, 0x03	; 3
    3074:	28 f4       	brcc	.+10     	; 0x3080 <vfprintf+0x114>
    3076:	0c 5f       	subi	r16, 0xFC	; 252
    3078:	1f 4f       	sbci	r17, 0xFF	; 255
    307a:	ff e3       	ldi	r31, 0x3F	; 63
    307c:	f9 83       	std	Y+1, r31	; 0x01
    307e:	0d c0       	rjmp	.+26     	; 0x309a <vfprintf+0x12e>
    3080:	83 36       	cpi	r24, 0x63	; 99
    3082:	31 f0       	breq	.+12     	; 0x3090 <vfprintf+0x124>
    3084:	83 37       	cpi	r24, 0x73	; 115
    3086:	71 f0       	breq	.+28     	; 0x30a4 <vfprintf+0x138>
    3088:	83 35       	cpi	r24, 0x53	; 83
    308a:	09 f0       	breq	.+2      	; 0x308e <vfprintf+0x122>
    308c:	57 c0       	rjmp	.+174    	; 0x313c <vfprintf+0x1d0>
    308e:	21 c0       	rjmp	.+66     	; 0x30d2 <vfprintf+0x166>
    3090:	f8 01       	movw	r30, r16
    3092:	80 81       	ld	r24, Z
    3094:	89 83       	std	Y+1, r24	; 0x01
    3096:	0e 5f       	subi	r16, 0xFE	; 254
    3098:	1f 4f       	sbci	r17, 0xFF	; 255
    309a:	44 24       	eor	r4, r4
    309c:	43 94       	inc	r4
    309e:	51 2c       	mov	r5, r1
    30a0:	54 01       	movw	r10, r8
    30a2:	14 c0       	rjmp	.+40     	; 0x30cc <vfprintf+0x160>
    30a4:	38 01       	movw	r6, r16
    30a6:	f2 e0       	ldi	r31, 0x02	; 2
    30a8:	6f 0e       	add	r6, r31
    30aa:	71 1c       	adc	r7, r1
    30ac:	f8 01       	movw	r30, r16
    30ae:	a0 80       	ld	r10, Z
    30b0:	b1 80       	ldd	r11, Z+1	; 0x01
    30b2:	26 ff       	sbrs	r18, 6
    30b4:	03 c0       	rjmp	.+6      	; 0x30bc <vfprintf+0x150>
    30b6:	65 2d       	mov	r22, r5
    30b8:	70 e0       	ldi	r23, 0x00	; 0
    30ba:	02 c0       	rjmp	.+4      	; 0x30c0 <vfprintf+0x154>
    30bc:	6f ef       	ldi	r22, 0xFF	; 255
    30be:	7f ef       	ldi	r23, 0xFF	; 255
    30c0:	c5 01       	movw	r24, r10
    30c2:	2c 87       	std	Y+12, r18	; 0x0c
    30c4:	4c d1       	rcall	.+664    	; 0x335e <strnlen>
    30c6:	2c 01       	movw	r4, r24
    30c8:	83 01       	movw	r16, r6
    30ca:	2c 85       	ldd	r18, Y+12	; 0x0c
    30cc:	2f 77       	andi	r18, 0x7F	; 127
    30ce:	22 2e       	mov	r2, r18
    30d0:	16 c0       	rjmp	.+44     	; 0x30fe <vfprintf+0x192>
    30d2:	38 01       	movw	r6, r16
    30d4:	f2 e0       	ldi	r31, 0x02	; 2
    30d6:	6f 0e       	add	r6, r31
    30d8:	71 1c       	adc	r7, r1
    30da:	f8 01       	movw	r30, r16
    30dc:	a0 80       	ld	r10, Z
    30de:	b1 80       	ldd	r11, Z+1	; 0x01
    30e0:	26 ff       	sbrs	r18, 6
    30e2:	03 c0       	rjmp	.+6      	; 0x30ea <vfprintf+0x17e>
    30e4:	65 2d       	mov	r22, r5
    30e6:	70 e0       	ldi	r23, 0x00	; 0
    30e8:	02 c0       	rjmp	.+4      	; 0x30ee <vfprintf+0x182>
    30ea:	6f ef       	ldi	r22, 0xFF	; 255
    30ec:	7f ef       	ldi	r23, 0xFF	; 255
    30ee:	c5 01       	movw	r24, r10
    30f0:	2c 87       	std	Y+12, r18	; 0x0c
    30f2:	2a d1       	rcall	.+596    	; 0x3348 <strnlen_P>
    30f4:	2c 01       	movw	r4, r24
    30f6:	2c 85       	ldd	r18, Y+12	; 0x0c
    30f8:	20 68       	ori	r18, 0x80	; 128
    30fa:	22 2e       	mov	r2, r18
    30fc:	83 01       	movw	r16, r6
    30fe:	23 fc       	sbrc	r2, 3
    3100:	19 c0       	rjmp	.+50     	; 0x3134 <vfprintf+0x1c8>
    3102:	83 2d       	mov	r24, r3
    3104:	90 e0       	ldi	r25, 0x00	; 0
    3106:	48 16       	cp	r4, r24
    3108:	59 06       	cpc	r5, r25
    310a:	a0 f4       	brcc	.+40     	; 0x3134 <vfprintf+0x1c8>
    310c:	b7 01       	movw	r22, r14
    310e:	80 e2       	ldi	r24, 0x20	; 32
    3110:	90 e0       	ldi	r25, 0x00	; 0
    3112:	30 d1       	rcall	.+608    	; 0x3374 <fputc>
    3114:	3a 94       	dec	r3
    3116:	f5 cf       	rjmp	.-22     	; 0x3102 <vfprintf+0x196>
    3118:	f5 01       	movw	r30, r10
    311a:	27 fc       	sbrc	r2, 7
    311c:	85 91       	lpm	r24, Z+
    311e:	27 fe       	sbrs	r2, 7
    3120:	81 91       	ld	r24, Z+
    3122:	5f 01       	movw	r10, r30
    3124:	b7 01       	movw	r22, r14
    3126:	90 e0       	ldi	r25, 0x00	; 0
    3128:	25 d1       	rcall	.+586    	; 0x3374 <fputc>
    312a:	31 10       	cpse	r3, r1
    312c:	3a 94       	dec	r3
    312e:	f1 e0       	ldi	r31, 0x01	; 1
    3130:	4f 1a       	sub	r4, r31
    3132:	51 08       	sbc	r5, r1
    3134:	41 14       	cp	r4, r1
    3136:	51 04       	cpc	r5, r1
    3138:	79 f7       	brne	.-34     	; 0x3118 <vfprintf+0x1ac>
    313a:	de c0       	rjmp	.+444    	; 0x32f8 <vfprintf+0x38c>
    313c:	84 36       	cpi	r24, 0x64	; 100
    313e:	11 f0       	breq	.+4      	; 0x3144 <vfprintf+0x1d8>
    3140:	89 36       	cpi	r24, 0x69	; 105
    3142:	31 f5       	brne	.+76     	; 0x3190 <vfprintf+0x224>
    3144:	f8 01       	movw	r30, r16
    3146:	27 ff       	sbrs	r18, 7
    3148:	07 c0       	rjmp	.+14     	; 0x3158 <vfprintf+0x1ec>
    314a:	60 81       	ld	r22, Z
    314c:	71 81       	ldd	r23, Z+1	; 0x01
    314e:	82 81       	ldd	r24, Z+2	; 0x02
    3150:	93 81       	ldd	r25, Z+3	; 0x03
    3152:	0c 5f       	subi	r16, 0xFC	; 252
    3154:	1f 4f       	sbci	r17, 0xFF	; 255
    3156:	08 c0       	rjmp	.+16     	; 0x3168 <vfprintf+0x1fc>
    3158:	60 81       	ld	r22, Z
    315a:	71 81       	ldd	r23, Z+1	; 0x01
    315c:	07 2e       	mov	r0, r23
    315e:	00 0c       	add	r0, r0
    3160:	88 0b       	sbc	r24, r24
    3162:	99 0b       	sbc	r25, r25
    3164:	0e 5f       	subi	r16, 0xFE	; 254
    3166:	1f 4f       	sbci	r17, 0xFF	; 255
    3168:	2f 76       	andi	r18, 0x6F	; 111
    316a:	72 2e       	mov	r7, r18
    316c:	97 ff       	sbrs	r25, 7
    316e:	09 c0       	rjmp	.+18     	; 0x3182 <vfprintf+0x216>
    3170:	90 95       	com	r25
    3172:	80 95       	com	r24
    3174:	70 95       	com	r23
    3176:	61 95       	neg	r22
    3178:	7f 4f       	sbci	r23, 0xFF	; 255
    317a:	8f 4f       	sbci	r24, 0xFF	; 255
    317c:	9f 4f       	sbci	r25, 0xFF	; 255
    317e:	20 68       	ori	r18, 0x80	; 128
    3180:	72 2e       	mov	r7, r18
    3182:	2a e0       	ldi	r18, 0x0A	; 10
    3184:	30 e0       	ldi	r19, 0x00	; 0
    3186:	a4 01       	movw	r20, r8
    3188:	2d d1       	rcall	.+602    	; 0x33e4 <__ultoa_invert>
    318a:	a8 2e       	mov	r10, r24
    318c:	a8 18       	sub	r10, r8
    318e:	43 c0       	rjmp	.+134    	; 0x3216 <vfprintf+0x2aa>
    3190:	85 37       	cpi	r24, 0x75	; 117
    3192:	29 f4       	brne	.+10     	; 0x319e <vfprintf+0x232>
    3194:	2f 7e       	andi	r18, 0xEF	; 239
    3196:	b2 2e       	mov	r11, r18
    3198:	2a e0       	ldi	r18, 0x0A	; 10
    319a:	30 e0       	ldi	r19, 0x00	; 0
    319c:	25 c0       	rjmp	.+74     	; 0x31e8 <vfprintf+0x27c>
    319e:	f2 2f       	mov	r31, r18
    31a0:	f9 7f       	andi	r31, 0xF9	; 249
    31a2:	bf 2e       	mov	r11, r31
    31a4:	8f 36       	cpi	r24, 0x6F	; 111
    31a6:	c1 f0       	breq	.+48     	; 0x31d8 <vfprintf+0x26c>
    31a8:	18 f4       	brcc	.+6      	; 0x31b0 <vfprintf+0x244>
    31aa:	88 35       	cpi	r24, 0x58	; 88
    31ac:	79 f0       	breq	.+30     	; 0x31cc <vfprintf+0x260>
    31ae:	ad c0       	rjmp	.+346    	; 0x330a <vfprintf+0x39e>
    31b0:	80 37       	cpi	r24, 0x70	; 112
    31b2:	19 f0       	breq	.+6      	; 0x31ba <vfprintf+0x24e>
    31b4:	88 37       	cpi	r24, 0x78	; 120
    31b6:	21 f0       	breq	.+8      	; 0x31c0 <vfprintf+0x254>
    31b8:	a8 c0       	rjmp	.+336    	; 0x330a <vfprintf+0x39e>
    31ba:	2f 2f       	mov	r18, r31
    31bc:	20 61       	ori	r18, 0x10	; 16
    31be:	b2 2e       	mov	r11, r18
    31c0:	b4 fe       	sbrs	r11, 4
    31c2:	0d c0       	rjmp	.+26     	; 0x31de <vfprintf+0x272>
    31c4:	8b 2d       	mov	r24, r11
    31c6:	84 60       	ori	r24, 0x04	; 4
    31c8:	b8 2e       	mov	r11, r24
    31ca:	09 c0       	rjmp	.+18     	; 0x31de <vfprintf+0x272>
    31cc:	24 ff       	sbrs	r18, 4
    31ce:	0a c0       	rjmp	.+20     	; 0x31e4 <vfprintf+0x278>
    31d0:	9f 2f       	mov	r25, r31
    31d2:	96 60       	ori	r25, 0x06	; 6
    31d4:	b9 2e       	mov	r11, r25
    31d6:	06 c0       	rjmp	.+12     	; 0x31e4 <vfprintf+0x278>
    31d8:	28 e0       	ldi	r18, 0x08	; 8
    31da:	30 e0       	ldi	r19, 0x00	; 0
    31dc:	05 c0       	rjmp	.+10     	; 0x31e8 <vfprintf+0x27c>
    31de:	20 e1       	ldi	r18, 0x10	; 16
    31e0:	30 e0       	ldi	r19, 0x00	; 0
    31e2:	02 c0       	rjmp	.+4      	; 0x31e8 <vfprintf+0x27c>
    31e4:	20 e1       	ldi	r18, 0x10	; 16
    31e6:	32 e0       	ldi	r19, 0x02	; 2
    31e8:	f8 01       	movw	r30, r16
    31ea:	b7 fe       	sbrs	r11, 7
    31ec:	07 c0       	rjmp	.+14     	; 0x31fc <vfprintf+0x290>
    31ee:	60 81       	ld	r22, Z
    31f0:	71 81       	ldd	r23, Z+1	; 0x01
    31f2:	82 81       	ldd	r24, Z+2	; 0x02
    31f4:	93 81       	ldd	r25, Z+3	; 0x03
    31f6:	0c 5f       	subi	r16, 0xFC	; 252
    31f8:	1f 4f       	sbci	r17, 0xFF	; 255
    31fa:	06 c0       	rjmp	.+12     	; 0x3208 <vfprintf+0x29c>
    31fc:	60 81       	ld	r22, Z
    31fe:	71 81       	ldd	r23, Z+1	; 0x01
    3200:	80 e0       	ldi	r24, 0x00	; 0
    3202:	90 e0       	ldi	r25, 0x00	; 0
    3204:	0e 5f       	subi	r16, 0xFE	; 254
    3206:	1f 4f       	sbci	r17, 0xFF	; 255
    3208:	a4 01       	movw	r20, r8
    320a:	ec d0       	rcall	.+472    	; 0x33e4 <__ultoa_invert>
    320c:	a8 2e       	mov	r10, r24
    320e:	a8 18       	sub	r10, r8
    3210:	fb 2d       	mov	r31, r11
    3212:	ff 77       	andi	r31, 0x7F	; 127
    3214:	7f 2e       	mov	r7, r31
    3216:	76 fe       	sbrs	r7, 6
    3218:	0b c0       	rjmp	.+22     	; 0x3230 <vfprintf+0x2c4>
    321a:	37 2d       	mov	r19, r7
    321c:	3e 7f       	andi	r19, 0xFE	; 254
    321e:	a5 14       	cp	r10, r5
    3220:	50 f4       	brcc	.+20     	; 0x3236 <vfprintf+0x2ca>
    3222:	74 fe       	sbrs	r7, 4
    3224:	0a c0       	rjmp	.+20     	; 0x323a <vfprintf+0x2ce>
    3226:	72 fc       	sbrc	r7, 2
    3228:	08 c0       	rjmp	.+16     	; 0x323a <vfprintf+0x2ce>
    322a:	37 2d       	mov	r19, r7
    322c:	3e 7e       	andi	r19, 0xEE	; 238
    322e:	05 c0       	rjmp	.+10     	; 0x323a <vfprintf+0x2ce>
    3230:	ba 2c       	mov	r11, r10
    3232:	37 2d       	mov	r19, r7
    3234:	03 c0       	rjmp	.+6      	; 0x323c <vfprintf+0x2d0>
    3236:	ba 2c       	mov	r11, r10
    3238:	01 c0       	rjmp	.+2      	; 0x323c <vfprintf+0x2d0>
    323a:	b5 2c       	mov	r11, r5
    323c:	34 ff       	sbrs	r19, 4
    323e:	0d c0       	rjmp	.+26     	; 0x325a <vfprintf+0x2ee>
    3240:	fe 01       	movw	r30, r28
    3242:	ea 0d       	add	r30, r10
    3244:	f1 1d       	adc	r31, r1
    3246:	80 81       	ld	r24, Z
    3248:	80 33       	cpi	r24, 0x30	; 48
    324a:	11 f4       	brne	.+4      	; 0x3250 <vfprintf+0x2e4>
    324c:	39 7e       	andi	r19, 0xE9	; 233
    324e:	09 c0       	rjmp	.+18     	; 0x3262 <vfprintf+0x2f6>
    3250:	32 ff       	sbrs	r19, 2
    3252:	06 c0       	rjmp	.+12     	; 0x3260 <vfprintf+0x2f4>
    3254:	b3 94       	inc	r11
    3256:	b3 94       	inc	r11
    3258:	04 c0       	rjmp	.+8      	; 0x3262 <vfprintf+0x2f6>
    325a:	83 2f       	mov	r24, r19
    325c:	86 78       	andi	r24, 0x86	; 134
    325e:	09 f0       	breq	.+2      	; 0x3262 <vfprintf+0x2f6>
    3260:	b3 94       	inc	r11
    3262:	33 fd       	sbrc	r19, 3
    3264:	12 c0       	rjmp	.+36     	; 0x328a <vfprintf+0x31e>
    3266:	30 ff       	sbrs	r19, 0
    3268:	06 c0       	rjmp	.+12     	; 0x3276 <vfprintf+0x30a>
    326a:	5a 2c       	mov	r5, r10
    326c:	b3 14       	cp	r11, r3
    326e:	18 f4       	brcc	.+6      	; 0x3276 <vfprintf+0x30a>
    3270:	53 0c       	add	r5, r3
    3272:	5b 18       	sub	r5, r11
    3274:	b3 2c       	mov	r11, r3
    3276:	b3 14       	cp	r11, r3
    3278:	60 f4       	brcc	.+24     	; 0x3292 <vfprintf+0x326>
    327a:	b7 01       	movw	r22, r14
    327c:	80 e2       	ldi	r24, 0x20	; 32
    327e:	90 e0       	ldi	r25, 0x00	; 0
    3280:	3c 87       	std	Y+12, r19	; 0x0c
    3282:	78 d0       	rcall	.+240    	; 0x3374 <fputc>
    3284:	b3 94       	inc	r11
    3286:	3c 85       	ldd	r19, Y+12	; 0x0c
    3288:	f6 cf       	rjmp	.-20     	; 0x3276 <vfprintf+0x30a>
    328a:	b3 14       	cp	r11, r3
    328c:	10 f4       	brcc	.+4      	; 0x3292 <vfprintf+0x326>
    328e:	3b 18       	sub	r3, r11
    3290:	01 c0       	rjmp	.+2      	; 0x3294 <vfprintf+0x328>
    3292:	31 2c       	mov	r3, r1
    3294:	34 ff       	sbrs	r19, 4
    3296:	11 c0       	rjmp	.+34     	; 0x32ba <vfprintf+0x34e>
    3298:	b7 01       	movw	r22, r14
    329a:	80 e3       	ldi	r24, 0x30	; 48
    329c:	90 e0       	ldi	r25, 0x00	; 0
    329e:	3c 87       	std	Y+12, r19	; 0x0c
    32a0:	69 d0       	rcall	.+210    	; 0x3374 <fputc>
    32a2:	3c 85       	ldd	r19, Y+12	; 0x0c
    32a4:	32 ff       	sbrs	r19, 2
    32a6:	16 c0       	rjmp	.+44     	; 0x32d4 <vfprintf+0x368>
    32a8:	31 fd       	sbrc	r19, 1
    32aa:	03 c0       	rjmp	.+6      	; 0x32b2 <vfprintf+0x346>
    32ac:	88 e7       	ldi	r24, 0x78	; 120
    32ae:	90 e0       	ldi	r25, 0x00	; 0
    32b0:	02 c0       	rjmp	.+4      	; 0x32b6 <vfprintf+0x34a>
    32b2:	88 e5       	ldi	r24, 0x58	; 88
    32b4:	90 e0       	ldi	r25, 0x00	; 0
    32b6:	b7 01       	movw	r22, r14
    32b8:	0c c0       	rjmp	.+24     	; 0x32d2 <vfprintf+0x366>
    32ba:	83 2f       	mov	r24, r19
    32bc:	86 78       	andi	r24, 0x86	; 134
    32be:	51 f0       	breq	.+20     	; 0x32d4 <vfprintf+0x368>
    32c0:	31 ff       	sbrs	r19, 1
    32c2:	02 c0       	rjmp	.+4      	; 0x32c8 <vfprintf+0x35c>
    32c4:	8b e2       	ldi	r24, 0x2B	; 43
    32c6:	01 c0       	rjmp	.+2      	; 0x32ca <vfprintf+0x35e>
    32c8:	80 e2       	ldi	r24, 0x20	; 32
    32ca:	37 fd       	sbrc	r19, 7
    32cc:	8d e2       	ldi	r24, 0x2D	; 45
    32ce:	b7 01       	movw	r22, r14
    32d0:	90 e0       	ldi	r25, 0x00	; 0
    32d2:	50 d0       	rcall	.+160    	; 0x3374 <fputc>
    32d4:	a5 14       	cp	r10, r5
    32d6:	30 f4       	brcc	.+12     	; 0x32e4 <vfprintf+0x378>
    32d8:	b7 01       	movw	r22, r14
    32da:	80 e3       	ldi	r24, 0x30	; 48
    32dc:	90 e0       	ldi	r25, 0x00	; 0
    32de:	4a d0       	rcall	.+148    	; 0x3374 <fputc>
    32e0:	5a 94       	dec	r5
    32e2:	f8 cf       	rjmp	.-16     	; 0x32d4 <vfprintf+0x368>
    32e4:	aa 94       	dec	r10
    32e6:	f4 01       	movw	r30, r8
    32e8:	ea 0d       	add	r30, r10
    32ea:	f1 1d       	adc	r31, r1
    32ec:	80 81       	ld	r24, Z
    32ee:	b7 01       	movw	r22, r14
    32f0:	90 e0       	ldi	r25, 0x00	; 0
    32f2:	40 d0       	rcall	.+128    	; 0x3374 <fputc>
    32f4:	a1 10       	cpse	r10, r1
    32f6:	f6 cf       	rjmp	.-20     	; 0x32e4 <vfprintf+0x378>
    32f8:	33 20       	and	r3, r3
    32fa:	09 f4       	brne	.+2      	; 0x32fe <vfprintf+0x392>
    32fc:	5d ce       	rjmp	.-838    	; 0x2fb8 <vfprintf+0x4c>
    32fe:	b7 01       	movw	r22, r14
    3300:	80 e2       	ldi	r24, 0x20	; 32
    3302:	90 e0       	ldi	r25, 0x00	; 0
    3304:	37 d0       	rcall	.+110    	; 0x3374 <fputc>
    3306:	3a 94       	dec	r3
    3308:	f7 cf       	rjmp	.-18     	; 0x32f8 <vfprintf+0x38c>
    330a:	f7 01       	movw	r30, r14
    330c:	86 81       	ldd	r24, Z+6	; 0x06
    330e:	97 81       	ldd	r25, Z+7	; 0x07
    3310:	02 c0       	rjmp	.+4      	; 0x3316 <vfprintf+0x3aa>
    3312:	8f ef       	ldi	r24, 0xFF	; 255
    3314:	9f ef       	ldi	r25, 0xFF	; 255
    3316:	2c 96       	adiw	r28, 0x0c	; 12
    3318:	0f b6       	in	r0, 0x3f	; 63
    331a:	f8 94       	cli
    331c:	de bf       	out	0x3e, r29	; 62
    331e:	0f be       	out	0x3f, r0	; 63
    3320:	cd bf       	out	0x3d, r28	; 61
    3322:	df 91       	pop	r29
    3324:	cf 91       	pop	r28
    3326:	1f 91       	pop	r17
    3328:	0f 91       	pop	r16
    332a:	ff 90       	pop	r15
    332c:	ef 90       	pop	r14
    332e:	df 90       	pop	r13
    3330:	cf 90       	pop	r12
    3332:	bf 90       	pop	r11
    3334:	af 90       	pop	r10
    3336:	9f 90       	pop	r9
    3338:	8f 90       	pop	r8
    333a:	7f 90       	pop	r7
    333c:	6f 90       	pop	r6
    333e:	5f 90       	pop	r5
    3340:	4f 90       	pop	r4
    3342:	3f 90       	pop	r3
    3344:	2f 90       	pop	r2
    3346:	08 95       	ret

00003348 <strnlen_P>:
    3348:	fc 01       	movw	r30, r24
    334a:	05 90       	lpm	r0, Z+
    334c:	61 50       	subi	r22, 0x01	; 1
    334e:	70 40       	sbci	r23, 0x00	; 0
    3350:	01 10       	cpse	r0, r1
    3352:	d8 f7       	brcc	.-10     	; 0x334a <strnlen_P+0x2>
    3354:	80 95       	com	r24
    3356:	90 95       	com	r25
    3358:	8e 0f       	add	r24, r30
    335a:	9f 1f       	adc	r25, r31
    335c:	08 95       	ret

0000335e <strnlen>:
    335e:	fc 01       	movw	r30, r24
    3360:	61 50       	subi	r22, 0x01	; 1
    3362:	70 40       	sbci	r23, 0x00	; 0
    3364:	01 90       	ld	r0, Z+
    3366:	01 10       	cpse	r0, r1
    3368:	d8 f7       	brcc	.-10     	; 0x3360 <strnlen+0x2>
    336a:	80 95       	com	r24
    336c:	90 95       	com	r25
    336e:	8e 0f       	add	r24, r30
    3370:	9f 1f       	adc	r25, r31
    3372:	08 95       	ret

00003374 <fputc>:
    3374:	0f 93       	push	r16
    3376:	1f 93       	push	r17
    3378:	cf 93       	push	r28
    337a:	df 93       	push	r29
    337c:	fb 01       	movw	r30, r22
    337e:	23 81       	ldd	r18, Z+3	; 0x03
    3380:	21 fd       	sbrc	r18, 1
    3382:	03 c0       	rjmp	.+6      	; 0x338a <fputc+0x16>
    3384:	8f ef       	ldi	r24, 0xFF	; 255
    3386:	9f ef       	ldi	r25, 0xFF	; 255
    3388:	28 c0       	rjmp	.+80     	; 0x33da <fputc+0x66>
    338a:	22 ff       	sbrs	r18, 2
    338c:	16 c0       	rjmp	.+44     	; 0x33ba <fputc+0x46>
    338e:	46 81       	ldd	r20, Z+6	; 0x06
    3390:	57 81       	ldd	r21, Z+7	; 0x07
    3392:	24 81       	ldd	r18, Z+4	; 0x04
    3394:	35 81       	ldd	r19, Z+5	; 0x05
    3396:	42 17       	cp	r20, r18
    3398:	53 07       	cpc	r21, r19
    339a:	44 f4       	brge	.+16     	; 0x33ac <fputc+0x38>
    339c:	a0 81       	ld	r26, Z
    339e:	b1 81       	ldd	r27, Z+1	; 0x01
    33a0:	9d 01       	movw	r18, r26
    33a2:	2f 5f       	subi	r18, 0xFF	; 255
    33a4:	3f 4f       	sbci	r19, 0xFF	; 255
    33a6:	31 83       	std	Z+1, r19	; 0x01
    33a8:	20 83       	st	Z, r18
    33aa:	8c 93       	st	X, r24
    33ac:	26 81       	ldd	r18, Z+6	; 0x06
    33ae:	37 81       	ldd	r19, Z+7	; 0x07
    33b0:	2f 5f       	subi	r18, 0xFF	; 255
    33b2:	3f 4f       	sbci	r19, 0xFF	; 255
    33b4:	37 83       	std	Z+7, r19	; 0x07
    33b6:	26 83       	std	Z+6, r18	; 0x06
    33b8:	10 c0       	rjmp	.+32     	; 0x33da <fputc+0x66>
    33ba:	eb 01       	movw	r28, r22
    33bc:	09 2f       	mov	r16, r25
    33be:	18 2f       	mov	r17, r24
    33c0:	00 84       	ldd	r0, Z+8	; 0x08
    33c2:	f1 85       	ldd	r31, Z+9	; 0x09
    33c4:	e0 2d       	mov	r30, r0
    33c6:	19 95       	eicall
    33c8:	89 2b       	or	r24, r25
    33ca:	e1 f6       	brne	.-72     	; 0x3384 <fputc+0x10>
    33cc:	8e 81       	ldd	r24, Y+6	; 0x06
    33ce:	9f 81       	ldd	r25, Y+7	; 0x07
    33d0:	01 96       	adiw	r24, 0x01	; 1
    33d2:	9f 83       	std	Y+7, r25	; 0x07
    33d4:	8e 83       	std	Y+6, r24	; 0x06
    33d6:	81 2f       	mov	r24, r17
    33d8:	90 2f       	mov	r25, r16
    33da:	df 91       	pop	r29
    33dc:	cf 91       	pop	r28
    33de:	1f 91       	pop	r17
    33e0:	0f 91       	pop	r16
    33e2:	08 95       	ret

000033e4 <__ultoa_invert>:
    33e4:	fa 01       	movw	r30, r20
    33e6:	aa 27       	eor	r26, r26
    33e8:	28 30       	cpi	r18, 0x08	; 8
    33ea:	51 f1       	breq	.+84     	; 0x3440 <__ultoa_invert+0x5c>
    33ec:	20 31       	cpi	r18, 0x10	; 16
    33ee:	81 f1       	breq	.+96     	; 0x3450 <__ultoa_invert+0x6c>
    33f0:	e8 94       	clt
    33f2:	6f 93       	push	r22
    33f4:	6e 7f       	andi	r22, 0xFE	; 254
    33f6:	6e 5f       	subi	r22, 0xFE	; 254
    33f8:	7f 4f       	sbci	r23, 0xFF	; 255
    33fa:	8f 4f       	sbci	r24, 0xFF	; 255
    33fc:	9f 4f       	sbci	r25, 0xFF	; 255
    33fe:	af 4f       	sbci	r26, 0xFF	; 255
    3400:	b1 e0       	ldi	r27, 0x01	; 1
    3402:	3e d0       	rcall	.+124    	; 0x3480 <__ultoa_invert+0x9c>
    3404:	b4 e0       	ldi	r27, 0x04	; 4
    3406:	3c d0       	rcall	.+120    	; 0x3480 <__ultoa_invert+0x9c>
    3408:	67 0f       	add	r22, r23
    340a:	78 1f       	adc	r23, r24
    340c:	89 1f       	adc	r24, r25
    340e:	9a 1f       	adc	r25, r26
    3410:	a1 1d       	adc	r26, r1
    3412:	68 0f       	add	r22, r24
    3414:	79 1f       	adc	r23, r25
    3416:	8a 1f       	adc	r24, r26
    3418:	91 1d       	adc	r25, r1
    341a:	a1 1d       	adc	r26, r1
    341c:	6a 0f       	add	r22, r26
    341e:	71 1d       	adc	r23, r1
    3420:	81 1d       	adc	r24, r1
    3422:	91 1d       	adc	r25, r1
    3424:	a1 1d       	adc	r26, r1
    3426:	20 d0       	rcall	.+64     	; 0x3468 <__ultoa_invert+0x84>
    3428:	09 f4       	brne	.+2      	; 0x342c <__ultoa_invert+0x48>
    342a:	68 94       	set
    342c:	3f 91       	pop	r19
    342e:	2a e0       	ldi	r18, 0x0A	; 10
    3430:	26 9f       	mul	r18, r22
    3432:	11 24       	eor	r1, r1
    3434:	30 19       	sub	r19, r0
    3436:	30 5d       	subi	r19, 0xD0	; 208
    3438:	31 93       	st	Z+, r19
    343a:	de f6       	brtc	.-74     	; 0x33f2 <__ultoa_invert+0xe>
    343c:	cf 01       	movw	r24, r30
    343e:	08 95       	ret
    3440:	46 2f       	mov	r20, r22
    3442:	47 70       	andi	r20, 0x07	; 7
    3444:	40 5d       	subi	r20, 0xD0	; 208
    3446:	41 93       	st	Z+, r20
    3448:	b3 e0       	ldi	r27, 0x03	; 3
    344a:	0f d0       	rcall	.+30     	; 0x346a <__ultoa_invert+0x86>
    344c:	c9 f7       	brne	.-14     	; 0x3440 <__ultoa_invert+0x5c>
    344e:	f6 cf       	rjmp	.-20     	; 0x343c <__ultoa_invert+0x58>
    3450:	46 2f       	mov	r20, r22
    3452:	4f 70       	andi	r20, 0x0F	; 15
    3454:	40 5d       	subi	r20, 0xD0	; 208
    3456:	4a 33       	cpi	r20, 0x3A	; 58
    3458:	18 f0       	brcs	.+6      	; 0x3460 <__ultoa_invert+0x7c>
    345a:	49 5d       	subi	r20, 0xD9	; 217
    345c:	31 fd       	sbrc	r19, 1
    345e:	40 52       	subi	r20, 0x20	; 32
    3460:	41 93       	st	Z+, r20
    3462:	02 d0       	rcall	.+4      	; 0x3468 <__ultoa_invert+0x84>
    3464:	a9 f7       	brne	.-22     	; 0x3450 <__ultoa_invert+0x6c>
    3466:	ea cf       	rjmp	.-44     	; 0x343c <__ultoa_invert+0x58>
    3468:	b4 e0       	ldi	r27, 0x04	; 4
    346a:	a6 95       	lsr	r26
    346c:	97 95       	ror	r25
    346e:	87 95       	ror	r24
    3470:	77 95       	ror	r23
    3472:	67 95       	ror	r22
    3474:	ba 95       	dec	r27
    3476:	c9 f7       	brne	.-14     	; 0x346a <__ultoa_invert+0x86>
    3478:	00 97       	sbiw	r24, 0x00	; 0
    347a:	61 05       	cpc	r22, r1
    347c:	71 05       	cpc	r23, r1
    347e:	08 95       	ret
    3480:	9b 01       	movw	r18, r22
    3482:	ac 01       	movw	r20, r24
    3484:	0a 2e       	mov	r0, r26
    3486:	06 94       	lsr	r0
    3488:	57 95       	ror	r21
    348a:	47 95       	ror	r20
    348c:	37 95       	ror	r19
    348e:	27 95       	ror	r18
    3490:	ba 95       	dec	r27
    3492:	c9 f7       	brne	.-14     	; 0x3486 <__ultoa_invert+0xa2>
    3494:	62 0f       	add	r22, r18
    3496:	73 1f       	adc	r23, r19
    3498:	84 1f       	adc	r24, r20
    349a:	95 1f       	adc	r25, r21
    349c:	a0 1d       	adc	r26, r0
    349e:	08 95       	ret

000034a0 <_exit>:
    34a0:	f8 94       	cli

000034a2 <__stop_program>:
    34a2:	ff cf       	rjmp	.-2      	; 0x34a2 <__stop_program>
