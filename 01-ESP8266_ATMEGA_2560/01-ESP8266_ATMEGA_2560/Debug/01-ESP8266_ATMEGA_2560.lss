
01-ESP8266_ATMEGA_2560.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000892  00800200  000047ca  0000485e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000047ca  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000d3a  00800a92  00800a92  000050f0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000050f0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000514c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000458  00000000  00000000  0000518c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00008783  00000000  00000000  000055e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b61  00000000  00000000  0000dd67  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003338  00000000  00000000  0000e8c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000015d4  00000000  00000000  00011c00  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000017e3  00000000  00000000  000131d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00007d4a  00000000  00000000  000149b7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000004f8  00000000  00000000  0001c701  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	93 c0       	rjmp	.+294    	; 0x128 <__ctors_end>
       2:	00 00       	nop
       4:	b2 c0       	rjmp	.+356    	; 0x16a <__bad_interrupt>
       6:	00 00       	nop
       8:	b0 c0       	rjmp	.+352    	; 0x16a <__bad_interrupt>
       a:	00 00       	nop
       c:	ae c0       	rjmp	.+348    	; 0x16a <__bad_interrupt>
       e:	00 00       	nop
      10:	ac c0       	rjmp	.+344    	; 0x16a <__bad_interrupt>
      12:	00 00       	nop
      14:	aa c0       	rjmp	.+340    	; 0x16a <__bad_interrupt>
      16:	00 00       	nop
      18:	a8 c0       	rjmp	.+336    	; 0x16a <__bad_interrupt>
      1a:	00 00       	nop
      1c:	a6 c0       	rjmp	.+332    	; 0x16a <__bad_interrupt>
      1e:	00 00       	nop
      20:	a4 c0       	rjmp	.+328    	; 0x16a <__bad_interrupt>
      22:	00 00       	nop
      24:	a2 c0       	rjmp	.+324    	; 0x16a <__bad_interrupt>
      26:	00 00       	nop
      28:	a0 c0       	rjmp	.+320    	; 0x16a <__bad_interrupt>
      2a:	00 00       	nop
      2c:	9e c0       	rjmp	.+316    	; 0x16a <__bad_interrupt>
      2e:	00 00       	nop
      30:	9c c0       	rjmp	.+312    	; 0x16a <__bad_interrupt>
      32:	00 00       	nop
      34:	9a c0       	rjmp	.+308    	; 0x16a <__bad_interrupt>
      36:	00 00       	nop
      38:	98 c0       	rjmp	.+304    	; 0x16a <__bad_interrupt>
      3a:	00 00       	nop
      3c:	96 c0       	rjmp	.+300    	; 0x16a <__bad_interrupt>
      3e:	00 00       	nop
      40:	94 c0       	rjmp	.+296    	; 0x16a <__bad_interrupt>
      42:	00 00       	nop
      44:	92 c0       	rjmp	.+292    	; 0x16a <__bad_interrupt>
      46:	00 00       	nop
      48:	90 c0       	rjmp	.+288    	; 0x16a <__bad_interrupt>
      4a:	00 00       	nop
      4c:	8e c0       	rjmp	.+284    	; 0x16a <__bad_interrupt>
      4e:	00 00       	nop
      50:	8c c0       	rjmp	.+280    	; 0x16a <__bad_interrupt>
      52:	00 00       	nop
      54:	0c 94 01 1d 	jmp	0x3a02	; 0x3a02 <__vector_21>
      58:	88 c0       	rjmp	.+272    	; 0x16a <__bad_interrupt>
      5a:	00 00       	nop
      5c:	86 c0       	rjmp	.+268    	; 0x16a <__bad_interrupt>
      5e:	00 00       	nop
      60:	84 c0       	rjmp	.+264    	; 0x16a <__bad_interrupt>
      62:	00 00       	nop
      64:	0c 94 2f 1d 	jmp	0x3a5e	; 0x3a5e <__vector_25>
      68:	80 c0       	rjmp	.+256    	; 0x16a <__bad_interrupt>
      6a:	00 00       	nop
      6c:	7e c0       	rjmp	.+252    	; 0x16a <__bad_interrupt>
      6e:	00 00       	nop
      70:	7c c0       	rjmp	.+248    	; 0x16a <__bad_interrupt>
      72:	00 00       	nop
      74:	7a c0       	rjmp	.+244    	; 0x16a <__bad_interrupt>
      76:	00 00       	nop
      78:	78 c0       	rjmp	.+240    	; 0x16a <__bad_interrupt>
      7a:	00 00       	nop
      7c:	76 c0       	rjmp	.+236    	; 0x16a <__bad_interrupt>
      7e:	00 00       	nop
      80:	74 c0       	rjmp	.+232    	; 0x16a <__bad_interrupt>
      82:	00 00       	nop
      84:	72 c0       	rjmp	.+228    	; 0x16a <__bad_interrupt>
      86:	00 00       	nop
      88:	70 c0       	rjmp	.+224    	; 0x16a <__bad_interrupt>
      8a:	00 00       	nop
      8c:	6e c0       	rjmp	.+220    	; 0x16a <__bad_interrupt>
      8e:	00 00       	nop
      90:	0c 94 b2 1c 	jmp	0x3964	; 0x3964 <__vector_36>
      94:	6a c0       	rjmp	.+212    	; 0x16a <__bad_interrupt>
      96:	00 00       	nop
      98:	68 c0       	rjmp	.+208    	; 0x16a <__bad_interrupt>
      9a:	00 00       	nop
      9c:	66 c0       	rjmp	.+204    	; 0x16a <__bad_interrupt>
      9e:	00 00       	nop
      a0:	64 c0       	rjmp	.+200    	; 0x16a <__bad_interrupt>
      a2:	00 00       	nop
      a4:	62 c0       	rjmp	.+196    	; 0x16a <__bad_interrupt>
      a6:	00 00       	nop
      a8:	60 c0       	rjmp	.+192    	; 0x16a <__bad_interrupt>
      aa:	00 00       	nop
      ac:	5e c0       	rjmp	.+188    	; 0x16a <__bad_interrupt>
      ae:	00 00       	nop
      b0:	5c c0       	rjmp	.+184    	; 0x16a <__bad_interrupt>
      b2:	00 00       	nop
      b4:	5a c0       	rjmp	.+180    	; 0x16a <__bad_interrupt>
      b6:	00 00       	nop
      b8:	58 c0       	rjmp	.+176    	; 0x16a <__bad_interrupt>
      ba:	00 00       	nop
      bc:	56 c0       	rjmp	.+172    	; 0x16a <__bad_interrupt>
      be:	00 00       	nop
      c0:	54 c0       	rjmp	.+168    	; 0x16a <__bad_interrupt>
      c2:	00 00       	nop
      c4:	52 c0       	rjmp	.+164    	; 0x16a <__bad_interrupt>
      c6:	00 00       	nop
      c8:	50 c0       	rjmp	.+160    	; 0x16a <__bad_interrupt>
      ca:	00 00       	nop
      cc:	4e c0       	rjmp	.+156    	; 0x16a <__bad_interrupt>
      ce:	00 00       	nop
      d0:	4c c0       	rjmp	.+152    	; 0x16a <__bad_interrupt>
      d2:	00 00       	nop
      d4:	4a c0       	rjmp	.+148    	; 0x16a <__bad_interrupt>
      d6:	00 00       	nop
      d8:	48 c0       	rjmp	.+144    	; 0x16a <__bad_interrupt>
      da:	00 00       	nop
      dc:	46 c0       	rjmp	.+140    	; 0x16a <__bad_interrupt>
      de:	00 00       	nop
      e0:	44 c0       	rjmp	.+136    	; 0x16a <__bad_interrupt>
      e2:	00 00       	nop
      e4:	50 0e       	add	r5, r16
      e6:	b2 0e       	add	r11, r18
      e8:	e8 0b       	sbc	r30, r24
      ea:	b2 0e       	add	r11, r18
      ec:	9d 0d       	add	r25, r13
      ee:	b0 0d       	add	r27, r0
      f0:	50 0e       	add	r5, r16
      f2:	c0 0d       	add	r28, r0
      f4:	50 0e       	add	r5, r16
      f6:	de 0d       	add	r29, r14
      f8:	50 0e       	add	r5, r16
      fa:	a4 0c       	add	r10, r4
      fc:	b2 0e       	add	r11, r18
      fe:	50 0e       	add	r5, r16
     100:	5e 0e       	add	r5, r30
     102:	50 0e       	add	r5, r16
     104:	50 0e       	add	r5, r16
     106:	b2 0e       	add	r11, r18
     108:	23 0c       	add	r2, r3
     10a:	50 0e       	add	r5, r16
     10c:	50 0e       	add	r5, r16
     10e:	62 0d       	add	r22, r2
     110:	81 0d       	add	r24, r1
     112:	74 0e       	add	r7, r20
     114:	93 0e       	add	r9, r19
     116:	50 0e       	add	r5, r16
     118:	b2 0e       	add	r11, r18
     11a:	b2 0e       	add	r11, r18
     11c:	b2 0e       	add	r11, r18
     11e:	b2 0e       	add	r11, r18
     120:	50 0e       	add	r5, r16
     122:	50 0e       	add	r5, r16
     124:	50 0e       	add	r5, r16
     126:	12 0e       	add	r1, r18

00000128 <__ctors_end>:
     128:	11 24       	eor	r1, r1
     12a:	1f be       	out	0x3f, r1	; 63
     12c:	cf ef       	ldi	r28, 0xFF	; 255
     12e:	d1 e2       	ldi	r29, 0x21	; 33
     130:	de bf       	out	0x3e, r29	; 62
     132:	cd bf       	out	0x3d, r28	; 61
     134:	00 e0       	ldi	r16, 0x00	; 0
     136:	0c bf       	out	0x3c, r16	; 60

00000138 <__do_copy_data>:
     138:	1a e0       	ldi	r17, 0x0A	; 10
     13a:	a0 e0       	ldi	r26, 0x00	; 0
     13c:	b2 e0       	ldi	r27, 0x02	; 2
     13e:	ea ec       	ldi	r30, 0xCA	; 202
     140:	f7 e4       	ldi	r31, 0x47	; 71
     142:	00 e0       	ldi	r16, 0x00	; 0
     144:	0b bf       	out	0x3b, r16	; 59
     146:	02 c0       	rjmp	.+4      	; 0x14c <__do_copy_data+0x14>
     148:	07 90       	elpm	r0, Z+
     14a:	0d 92       	st	X+, r0
     14c:	a2 39       	cpi	r26, 0x92	; 146
     14e:	b1 07       	cpc	r27, r17
     150:	d9 f7       	brne	.-10     	; 0x148 <__do_copy_data+0x10>

00000152 <__do_clear_bss>:
     152:	27 e1       	ldi	r18, 0x17	; 23
     154:	a2 e9       	ldi	r26, 0x92	; 146
     156:	ba e0       	ldi	r27, 0x0A	; 10
     158:	01 c0       	rjmp	.+2      	; 0x15c <.do_clear_bss_start>

0000015a <.do_clear_bss_loop>:
     15a:	1d 92       	st	X+, r1

0000015c <.do_clear_bss_start>:
     15c:	ac 3c       	cpi	r26, 0xCC	; 204
     15e:	b2 07       	cpc	r27, r18
     160:	e1 f7       	brne	.-8      	; 0x15a <.do_clear_bss_loop>
     162:	0e 94 77 1d 	call	0x3aee	; 0x3aee <main>
     166:	0c 94 e3 23 	jmp	0x47c6	; 0x47c6 <_exit>

0000016a <__bad_interrupt>:
     16a:	4a cf       	rjmp	.-364    	; 0x0 <__vectors>

0000016c <BUFFER_Init>:
		return 0;
	}
	in = Buffer->In;										/* Save values */
	out = Buffer->Out;
	return (Buffer->Size + in - out) % Buffer->Size;
}
     16c:	cf 93       	push	r28
     16e:	df 93       	push	r29
     170:	ec 01       	movw	r28, r24
     172:	89 2b       	or	r24, r25
     174:	21 f1       	breq	.+72     	; 0x1be <BUFFER_Init+0x52>
     176:	82 e1       	ldi	r24, 0x12	; 18
     178:	fe 01       	movw	r30, r28
     17a:	11 92       	st	Z+, r1
     17c:	8a 95       	dec	r24
     17e:	e9 f7       	brne	.-6      	; 0x17a <BUFFER_Init+0xe>
     180:	48 83       	st	Y, r20
     182:	59 83       	std	Y+1, r21	; 0x01
     184:	6a 83       	std	Y+2, r22	; 0x02
     186:	7b 83       	std	Y+3, r23	; 0x03
     188:	3d 87       	std	Y+13, r19	; 0x0d
     18a:	2c 87       	std	Y+12, r18	; 0x0c
     18c:	8a e0       	ldi	r24, 0x0A	; 10
     18e:	8f 87       	std	Y+15, r24	; 0x0f
     190:	23 2b       	or	r18, r19
     192:	81 f4       	brne	.+32     	; 0x1b4 <BUFFER_Init+0x48>
     194:	ca 01       	movw	r24, r20
     196:	0e 94 3c 1f 	call	0x3e78	; 0x3e78 <malloc>
     19a:	9d 87       	std	Y+13, r25	; 0x0d
     19c:	8c 87       	std	Y+12, r24	; 0x0c
     19e:	89 2b       	or	r24, r25
     1a0:	31 f4       	brne	.+12     	; 0x1ae <BUFFER_Init+0x42>
     1a2:	18 82       	st	Y, r1
     1a4:	19 82       	std	Y+1, r1	; 0x01
     1a6:	1a 82       	std	Y+2, r1	; 0x02
     1a8:	1b 82       	std	Y+3, r1	; 0x03
     1aa:	81 e0       	ldi	r24, 0x01	; 1
     1ac:	09 c0       	rjmp	.+18     	; 0x1c0 <BUFFER_Init+0x54>
     1ae:	8e 85       	ldd	r24, Y+14	; 0x0e
     1b0:	82 60       	ori	r24, 0x02	; 2
     1b2:	8e 87       	std	Y+14, r24	; 0x0e
     1b4:	8e 85       	ldd	r24, Y+14	; 0x0e
     1b6:	81 60       	ori	r24, 0x01	; 1
     1b8:	8e 87       	std	Y+14, r24	; 0x0e
     1ba:	80 e0       	ldi	r24, 0x00	; 0
     1bc:	01 c0       	rjmp	.+2      	; 0x1c0 <BUFFER_Init+0x54>
     1be:	81 e0       	ldi	r24, 0x01	; 1
     1c0:	df 91       	pop	r29
     1c2:	cf 91       	pop	r28
     1c4:	08 95       	ret

000001c6 <BUFFER_GetFree>:
     1c6:	cf 92       	push	r12
     1c8:	df 92       	push	r13
     1ca:	ef 92       	push	r14
     1cc:	ff 92       	push	r15
     1ce:	0f 93       	push	r16
     1d0:	1f 93       	push	r17
     1d2:	fc 01       	movw	r30, r24
     1d4:	89 2b       	or	r24, r25
     1d6:	c9 f1       	breq	.+114    	; 0x24a <BUFFER_GetFree+0x84>
     1d8:	04 81       	ldd	r16, Z+4	; 0x04
     1da:	15 81       	ldd	r17, Z+5	; 0x05
     1dc:	26 81       	ldd	r18, Z+6	; 0x06
     1de:	37 81       	ldd	r19, Z+7	; 0x07
     1e0:	c0 84       	ldd	r12, Z+8	; 0x08
     1e2:	d1 84       	ldd	r13, Z+9	; 0x09
     1e4:	e2 84       	ldd	r14, Z+10	; 0x0a
     1e6:	f3 84       	ldd	r15, Z+11	; 0x0b
     1e8:	0c 15       	cp	r16, r12
     1ea:	1d 05       	cpc	r17, r13
     1ec:	2e 05       	cpc	r18, r14
     1ee:	3f 05       	cpc	r19, r15
     1f0:	29 f4       	brne	.+10     	; 0x1fc <BUFFER_GetFree+0x36>
     1f2:	80 81       	ld	r24, Z
     1f4:	91 81       	ldd	r25, Z+1	; 0x01
     1f6:	a2 81       	ldd	r26, Z+2	; 0x02
     1f8:	b3 81       	ldd	r27, Z+3	; 0x03
     1fa:	20 c0       	rjmp	.+64     	; 0x23c <BUFFER_GetFree+0x76>
     1fc:	0c 15       	cp	r16, r12
     1fe:	1d 05       	cpc	r17, r13
     200:	2e 05       	cpc	r18, r14
     202:	3f 05       	cpc	r19, r15
     204:	38 f4       	brcc	.+14     	; 0x214 <BUFFER_GetFree+0x4e>
     206:	d7 01       	movw	r26, r14
     208:	c6 01       	movw	r24, r12
     20a:	80 1b       	sub	r24, r16
     20c:	91 0b       	sbc	r25, r17
     20e:	a2 0b       	sbc	r26, r18
     210:	b3 0b       	sbc	r27, r19
     212:	03 c0       	rjmp	.+6      	; 0x21a <BUFFER_GetFree+0x54>
     214:	80 e0       	ldi	r24, 0x00	; 0
     216:	90 e0       	ldi	r25, 0x00	; 0
     218:	dc 01       	movw	r26, r24
     21a:	c0 16       	cp	r12, r16
     21c:	d1 06       	cpc	r13, r17
     21e:	e2 06       	cpc	r14, r18
     220:	f3 06       	cpc	r15, r19
     222:	60 f4       	brcc	.+24     	; 0x23c <BUFFER_GetFree+0x76>
     224:	80 81       	ld	r24, Z
     226:	91 81       	ldd	r25, Z+1	; 0x01
     228:	a2 81       	ldd	r26, Z+2	; 0x02
     22a:	b3 81       	ldd	r27, Z+3	; 0x03
     22c:	8c 0d       	add	r24, r12
     22e:	9d 1d       	adc	r25, r13
     230:	ae 1d       	adc	r26, r14
     232:	bf 1d       	adc	r27, r15
     234:	80 1b       	sub	r24, r16
     236:	91 0b       	sbc	r25, r17
     238:	a2 0b       	sbc	r26, r18
     23a:	b3 0b       	sbc	r27, r19
     23c:	bc 01       	movw	r22, r24
     23e:	cd 01       	movw	r24, r26
     240:	61 50       	subi	r22, 0x01	; 1
     242:	71 09       	sbc	r23, r1
     244:	81 09       	sbc	r24, r1
     246:	91 09       	sbc	r25, r1
     248:	03 c0       	rjmp	.+6      	; 0x250 <BUFFER_GetFree+0x8a>
     24a:	60 e0       	ldi	r22, 0x00	; 0
     24c:	70 e0       	ldi	r23, 0x00	; 0
     24e:	cb 01       	movw	r24, r22
     250:	1f 91       	pop	r17
     252:	0f 91       	pop	r16
     254:	ff 90       	pop	r15
     256:	ef 90       	pop	r14
     258:	df 90       	pop	r13
     25a:	cf 90       	pop	r12
     25c:	08 95       	ret

0000025e <BUFFER_Write>:
     25e:	4f 92       	push	r4
     260:	5f 92       	push	r5
     262:	6f 92       	push	r6
     264:	7f 92       	push	r7
     266:	8f 92       	push	r8
     268:	9f 92       	push	r9
     26a:	af 92       	push	r10
     26c:	bf 92       	push	r11
     26e:	cf 92       	push	r12
     270:	df 92       	push	r13
     272:	ef 92       	push	r14
     274:	ff 92       	push	r15
     276:	0f 93       	push	r16
     278:	1f 93       	push	r17
     27a:	cf 93       	push	r28
     27c:	df 93       	push	r29
     27e:	ec 01       	movw	r28, r24
     280:	8b 01       	movw	r16, r22
     282:	69 01       	movw	r12, r18
     284:	7a 01       	movw	r14, r20
     286:	89 2b       	or	r24, r25
     288:	09 f4       	brne	.+2      	; 0x28c <BUFFER_Write+0x2e>
     28a:	75 c0       	rjmp	.+234    	; 0x376 <BUFFER_Write+0x118>
     28c:	23 2b       	or	r18, r19
     28e:	24 2b       	or	r18, r20
     290:	25 2b       	or	r18, r21
     292:	09 f4       	brne	.+2      	; 0x296 <BUFFER_Write+0x38>
     294:	75 c0       	rjmp	.+234    	; 0x380 <BUFFER_Write+0x122>
     296:	88 80       	ld	r8, Y
     298:	99 80       	ldd	r9, Y+1	; 0x01
     29a:	aa 80       	ldd	r10, Y+2	; 0x02
     29c:	bb 80       	ldd	r11, Y+3	; 0x03
     29e:	8c 81       	ldd	r24, Y+4	; 0x04
     2a0:	9d 81       	ldd	r25, Y+5	; 0x05
     2a2:	ae 81       	ldd	r26, Y+6	; 0x06
     2a4:	bf 81       	ldd	r27, Y+7	; 0x07
     2a6:	88 15       	cp	r24, r8
     2a8:	99 05       	cpc	r25, r9
     2aa:	aa 05       	cpc	r26, r10
     2ac:	bb 05       	cpc	r27, r11
     2ae:	20 f0       	brcs	.+8      	; 0x2b8 <BUFFER_Write+0x5a>
     2b0:	1c 82       	std	Y+4, r1	; 0x04
     2b2:	1d 82       	std	Y+5, r1	; 0x05
     2b4:	1e 82       	std	Y+6, r1	; 0x06
     2b6:	1f 82       	std	Y+7, r1	; 0x07
     2b8:	ce 01       	movw	r24, r28
     2ba:	85 df       	rcall	.-246    	; 0x1c6 <BUFFER_GetFree>
     2bc:	6c 15       	cp	r22, r12
     2be:	7d 05       	cpc	r23, r13
     2c0:	8e 05       	cpc	r24, r14
     2c2:	9f 05       	cpc	r25, r15
     2c4:	40 f4       	brcc	.+16     	; 0x2d6 <BUFFER_Write+0x78>
     2c6:	61 15       	cp	r22, r1
     2c8:	71 05       	cpc	r23, r1
     2ca:	81 05       	cpc	r24, r1
     2cc:	91 05       	cpc	r25, r1
     2ce:	09 f4       	brne	.+2      	; 0x2d2 <BUFFER_Write+0x74>
     2d0:	5c c0       	rjmp	.+184    	; 0x38a <BUFFER_Write+0x12c>
     2d2:	6b 01       	movw	r12, r22
     2d4:	7c 01       	movw	r14, r24
     2d6:	8c 81       	ldd	r24, Y+4	; 0x04
     2d8:	9d 81       	ldd	r25, Y+5	; 0x05
     2da:	ae 81       	ldd	r26, Y+6	; 0x06
     2dc:	bf 81       	ldd	r27, Y+7	; 0x07
     2de:	b5 01       	movw	r22, r10
     2e0:	a4 01       	movw	r20, r8
     2e2:	48 1b       	sub	r20, r24
     2e4:	59 0b       	sbc	r21, r25
     2e6:	6a 0b       	sbc	r22, r26
     2e8:	7b 0b       	sbc	r23, r27
     2ea:	46 01       	movw	r8, r12
     2ec:	57 01       	movw	r10, r14
     2ee:	4c 15       	cp	r20, r12
     2f0:	5d 05       	cpc	r21, r13
     2f2:	6e 05       	cpc	r22, r14
     2f4:	7f 05       	cpc	r23, r15
     2f6:	10 f4       	brcc	.+4      	; 0x2fc <BUFFER_Write+0x9e>
     2f8:	4a 01       	movw	r8, r20
     2fa:	5b 01       	movw	r10, r22
     2fc:	2c 85       	ldd	r18, Y+12	; 0x0c
     2fe:	3d 85       	ldd	r19, Y+13	; 0x0d
     300:	82 0f       	add	r24, r18
     302:	93 1f       	adc	r25, r19
     304:	a4 01       	movw	r20, r8
     306:	b8 01       	movw	r22, r16
     308:	0e 94 76 20 	call	0x40ec	; 0x40ec <memcpy>
     30c:	8c 81       	ldd	r24, Y+4	; 0x04
     30e:	9d 81       	ldd	r25, Y+5	; 0x05
     310:	ae 81       	ldd	r26, Y+6	; 0x06
     312:	bf 81       	ldd	r27, Y+7	; 0x07
     314:	88 0d       	add	r24, r8
     316:	99 1d       	adc	r25, r9
     318:	aa 1d       	adc	r26, r10
     31a:	bb 1d       	adc	r27, r11
     31c:	8c 83       	std	Y+4, r24	; 0x04
     31e:	9d 83       	std	Y+5, r25	; 0x05
     320:	ae 83       	std	Y+6, r26	; 0x06
     322:	bf 83       	std	Y+7, r27	; 0x07
     324:	26 01       	movw	r4, r12
     326:	37 01       	movw	r6, r14
     328:	48 18       	sub	r4, r8
     32a:	59 08       	sbc	r5, r9
     32c:	6a 08       	sbc	r6, r10
     32e:	7b 08       	sbc	r7, r11
     330:	61 f0       	breq	.+24     	; 0x34a <BUFFER_Write+0xec>
     332:	b8 01       	movw	r22, r16
     334:	68 0d       	add	r22, r8
     336:	79 1d       	adc	r23, r9
     338:	a2 01       	movw	r20, r4
     33a:	8c 85       	ldd	r24, Y+12	; 0x0c
     33c:	9d 85       	ldd	r25, Y+13	; 0x0d
     33e:	0e 94 76 20 	call	0x40ec	; 0x40ec <memcpy>
     342:	4c 82       	std	Y+4, r4	; 0x04
     344:	5d 82       	std	Y+5, r5	; 0x05
     346:	6e 82       	std	Y+6, r6	; 0x06
     348:	7f 82       	std	Y+7, r7	; 0x07
     34a:	4c 81       	ldd	r20, Y+4	; 0x04
     34c:	5d 81       	ldd	r21, Y+5	; 0x05
     34e:	6e 81       	ldd	r22, Y+6	; 0x06
     350:	7f 81       	ldd	r23, Y+7	; 0x07
     352:	88 81       	ld	r24, Y
     354:	99 81       	ldd	r25, Y+1	; 0x01
     356:	aa 81       	ldd	r26, Y+2	; 0x02
     358:	bb 81       	ldd	r27, Y+3	; 0x03
     35a:	48 17       	cp	r20, r24
     35c:	59 07       	cpc	r21, r25
     35e:	6a 07       	cpc	r22, r26
     360:	7b 07       	cpc	r23, r27
     362:	20 f0       	brcs	.+8      	; 0x36c <BUFFER_Write+0x10e>
     364:	1c 82       	std	Y+4, r1	; 0x04
     366:	1d 82       	std	Y+5, r1	; 0x05
     368:	1e 82       	std	Y+6, r1	; 0x06
     36a:	1f 82       	std	Y+7, r1	; 0x07
     36c:	6c 2d       	mov	r22, r12
     36e:	7d 2d       	mov	r23, r13
     370:	8e 2d       	mov	r24, r14
     372:	9f 2d       	mov	r25, r15
     374:	0e c0       	rjmp	.+28     	; 0x392 <BUFFER_Write+0x134>
     376:	60 e0       	ldi	r22, 0x00	; 0
     378:	70 e0       	ldi	r23, 0x00	; 0
     37a:	80 e0       	ldi	r24, 0x00	; 0
     37c:	90 e0       	ldi	r25, 0x00	; 0
     37e:	09 c0       	rjmp	.+18     	; 0x392 <BUFFER_Write+0x134>
     380:	60 e0       	ldi	r22, 0x00	; 0
     382:	70 e0       	ldi	r23, 0x00	; 0
     384:	80 e0       	ldi	r24, 0x00	; 0
     386:	90 e0       	ldi	r25, 0x00	; 0
     388:	04 c0       	rjmp	.+8      	; 0x392 <BUFFER_Write+0x134>
     38a:	60 e0       	ldi	r22, 0x00	; 0
     38c:	70 e0       	ldi	r23, 0x00	; 0
     38e:	80 e0       	ldi	r24, 0x00	; 0
     390:	90 e0       	ldi	r25, 0x00	; 0
     392:	df 91       	pop	r29
     394:	cf 91       	pop	r28
     396:	1f 91       	pop	r17
     398:	0f 91       	pop	r16
     39a:	ff 90       	pop	r15
     39c:	ef 90       	pop	r14
     39e:	df 90       	pop	r13
     3a0:	cf 90       	pop	r12
     3a2:	bf 90       	pop	r11
     3a4:	af 90       	pop	r10
     3a6:	9f 90       	pop	r9
     3a8:	8f 90       	pop	r8
     3aa:	7f 90       	pop	r7
     3ac:	6f 90       	pop	r6
     3ae:	5f 90       	pop	r5
     3b0:	4f 90       	pop	r4
     3b2:	08 95       	ret

000003b4 <BUFFER_WriteToTop>:
     3b4:	8f 92       	push	r8
     3b6:	9f 92       	push	r9
     3b8:	af 92       	push	r10
     3ba:	bf 92       	push	r11
     3bc:	cf 92       	push	r12
     3be:	df 92       	push	r13
     3c0:	ef 92       	push	r14
     3c2:	ff 92       	push	r15
     3c4:	0f 93       	push	r16
     3c6:	1f 93       	push	r17
     3c8:	cf 93       	push	r28
     3ca:	df 93       	push	r29
     3cc:	ec 01       	movw	r28, r24
     3ce:	8b 01       	movw	r16, r22
     3d0:	69 01       	movw	r12, r18
     3d2:	7a 01       	movw	r14, r20
     3d4:	89 2b       	or	r24, r25
     3d6:	09 f4       	brne	.+2      	; 0x3da <BUFFER_WriteToTop+0x26>
     3d8:	69 c0       	rjmp	.+210    	; 0x4ac <BUFFER_WriteToTop+0xf8>
     3da:	23 2b       	or	r18, r19
     3dc:	24 2b       	or	r18, r20
     3de:	25 2b       	or	r18, r21
     3e0:	09 f4       	brne	.+2      	; 0x3e4 <BUFFER_WriteToTop+0x30>
     3e2:	69 c0       	rjmp	.+210    	; 0x4b6 <BUFFER_WriteToTop+0x102>
     3e4:	88 81       	ld	r24, Y
     3e6:	99 81       	ldd	r25, Y+1	; 0x01
     3e8:	aa 81       	ldd	r26, Y+2	; 0x02
     3ea:	bb 81       	ldd	r27, Y+3	; 0x03
     3ec:	4c 81       	ldd	r20, Y+4	; 0x04
     3ee:	5d 81       	ldd	r21, Y+5	; 0x05
     3f0:	6e 81       	ldd	r22, Y+6	; 0x06
     3f2:	7f 81       	ldd	r23, Y+7	; 0x07
     3f4:	48 17       	cp	r20, r24
     3f6:	59 07       	cpc	r21, r25
     3f8:	6a 07       	cpc	r22, r26
     3fa:	7b 07       	cpc	r23, r27
     3fc:	20 f0       	brcs	.+8      	; 0x406 <BUFFER_WriteToTop+0x52>
     3fe:	1c 82       	std	Y+4, r1	; 0x04
     400:	1d 82       	std	Y+5, r1	; 0x05
     402:	1e 82       	std	Y+6, r1	; 0x06
     404:	1f 82       	std	Y+7, r1	; 0x07
     406:	48 85       	ldd	r20, Y+8	; 0x08
     408:	59 85       	ldd	r21, Y+9	; 0x09
     40a:	6a 85       	ldd	r22, Y+10	; 0x0a
     40c:	7b 85       	ldd	r23, Y+11	; 0x0b
     40e:	48 17       	cp	r20, r24
     410:	59 07       	cpc	r21, r25
     412:	6a 07       	cpc	r22, r26
     414:	7b 07       	cpc	r23, r27
     416:	20 f0       	brcs	.+8      	; 0x420 <BUFFER_WriteToTop+0x6c>
     418:	18 86       	std	Y+8, r1	; 0x08
     41a:	19 86       	std	Y+9, r1	; 0x09
     41c:	1a 86       	std	Y+10, r1	; 0x0a
     41e:	1b 86       	std	Y+11, r1	; 0x0b
     420:	ce 01       	movw	r24, r28
     422:	d1 de       	rcall	.-606    	; 0x1c6 <BUFFER_GetFree>
     424:	6c 15       	cp	r22, r12
     426:	7d 05       	cpc	r23, r13
     428:	8e 05       	cpc	r24, r14
     42a:	9f 05       	cpc	r25, r15
     42c:	08 f0       	brcs	.+2      	; 0x430 <BUFFER_WriteToTop+0x7c>
     42e:	4d c0       	rjmp	.+154    	; 0x4ca <BUFFER_WriteToTop+0x116>
     430:	61 15       	cp	r22, r1
     432:	71 05       	cpc	r23, r1
     434:	81 05       	cpc	r24, r1
     436:	91 05       	cpc	r25, r1
     438:	09 f4       	brne	.+2      	; 0x43c <BUFFER_WriteToTop+0x88>
     43a:	42 c0       	rjmp	.+132    	; 0x4c0 <BUFFER_WriteToTop+0x10c>
     43c:	6b 01       	movw	r12, r22
     43e:	7c 01       	movw	r14, r24
     440:	44 c0       	rjmp	.+136    	; 0x4ca <BUFFER_WriteToTop+0x116>
     442:	88 85       	ldd	r24, Y+8	; 0x08
     444:	99 85       	ldd	r25, Y+9	; 0x09
     446:	aa 85       	ldd	r26, Y+10	; 0x0a
     448:	bb 85       	ldd	r27, Y+11	; 0x0b
     44a:	00 97       	sbiw	r24, 0x00	; 0
     44c:	a1 05       	cpc	r26, r1
     44e:	b1 05       	cpc	r27, r1
     450:	61 f4       	brne	.+24     	; 0x46a <BUFFER_WriteToTop+0xb6>
     452:	88 81       	ld	r24, Y
     454:	99 81       	ldd	r25, Y+1	; 0x01
     456:	aa 81       	ldd	r26, Y+2	; 0x02
     458:	bb 81       	ldd	r27, Y+3	; 0x03
     45a:	01 97       	sbiw	r24, 0x01	; 1
     45c:	a1 09       	sbc	r26, r1
     45e:	b1 09       	sbc	r27, r1
     460:	88 87       	std	Y+8, r24	; 0x08
     462:	99 87       	std	Y+9, r25	; 0x09
     464:	aa 87       	std	Y+10, r26	; 0x0a
     466:	bb 87       	std	Y+11, r27	; 0x0b
     468:	07 c0       	rjmp	.+14     	; 0x478 <BUFFER_WriteToTop+0xc4>
     46a:	01 97       	sbiw	r24, 0x01	; 1
     46c:	a1 09       	sbc	r26, r1
     46e:	b1 09       	sbc	r27, r1
     470:	88 87       	std	Y+8, r24	; 0x08
     472:	99 87       	std	Y+9, r25	; 0x09
     474:	aa 87       	std	Y+10, r26	; 0x0a
     476:	bb 87       	std	Y+11, r27	; 0x0b
     478:	fb 01       	movw	r30, r22
     47a:	22 91       	ld	r18, -Z
     47c:	bf 01       	movw	r22, r30
     47e:	ec 85       	ldd	r30, Y+12	; 0x0c
     480:	fd 85       	ldd	r31, Y+13	; 0x0d
     482:	88 85       	ldd	r24, Y+8	; 0x08
     484:	99 85       	ldd	r25, Y+9	; 0x09
     486:	e8 0f       	add	r30, r24
     488:	f9 1f       	adc	r31, r25
     48a:	20 83       	st	Z, r18
     48c:	f1 e0       	ldi	r31, 0x01	; 1
     48e:	8f 1a       	sub	r8, r31
     490:	91 08       	sbc	r9, r1
     492:	a1 08       	sbc	r10, r1
     494:	b1 08       	sbc	r11, r1
     496:	8f ef       	ldi	r24, 0xFF	; 255
     498:	88 16       	cp	r8, r24
     49a:	98 06       	cpc	r9, r24
     49c:	a8 06       	cpc	r10, r24
     49e:	b8 06       	cpc	r11, r24
     4a0:	81 f6       	brne	.-96     	; 0x442 <BUFFER_WriteToTop+0x8e>
     4a2:	6c 2d       	mov	r22, r12
     4a4:	7d 2d       	mov	r23, r13
     4a6:	8e 2d       	mov	r24, r14
     4a8:	9f 2d       	mov	r25, r15
     4aa:	1a c0       	rjmp	.+52     	; 0x4e0 <BUFFER_WriteToTop+0x12c>
     4ac:	60 e0       	ldi	r22, 0x00	; 0
     4ae:	70 e0       	ldi	r23, 0x00	; 0
     4b0:	80 e0       	ldi	r24, 0x00	; 0
     4b2:	90 e0       	ldi	r25, 0x00	; 0
     4b4:	15 c0       	rjmp	.+42     	; 0x4e0 <BUFFER_WriteToTop+0x12c>
     4b6:	60 e0       	ldi	r22, 0x00	; 0
     4b8:	70 e0       	ldi	r23, 0x00	; 0
     4ba:	80 e0       	ldi	r24, 0x00	; 0
     4bc:	90 e0       	ldi	r25, 0x00	; 0
     4be:	10 c0       	rjmp	.+32     	; 0x4e0 <BUFFER_WriteToTop+0x12c>
     4c0:	60 e0       	ldi	r22, 0x00	; 0
     4c2:	70 e0       	ldi	r23, 0x00	; 0
     4c4:	80 e0       	ldi	r24, 0x00	; 0
     4c6:	90 e0       	ldi	r25, 0x00	; 0
     4c8:	0b c0       	rjmp	.+22     	; 0x4e0 <BUFFER_WriteToTop+0x12c>
     4ca:	46 01       	movw	r8, r12
     4cc:	57 01       	movw	r10, r14
     4ce:	e1 e0       	ldi	r30, 0x01	; 1
     4d0:	8e 1a       	sub	r8, r30
     4d2:	91 08       	sbc	r9, r1
     4d4:	a1 08       	sbc	r10, r1
     4d6:	b1 08       	sbc	r11, r1
     4d8:	b8 01       	movw	r22, r16
     4da:	6c 0d       	add	r22, r12
     4dc:	7d 1d       	adc	r23, r13
     4de:	b1 cf       	rjmp	.-158    	; 0x442 <BUFFER_WriteToTop+0x8e>
     4e0:	df 91       	pop	r29
     4e2:	cf 91       	pop	r28
     4e4:	1f 91       	pop	r17
     4e6:	0f 91       	pop	r16
     4e8:	ff 90       	pop	r15
     4ea:	ef 90       	pop	r14
     4ec:	df 90       	pop	r13
     4ee:	cf 90       	pop	r12
     4f0:	bf 90       	pop	r11
     4f2:	af 90       	pop	r10
     4f4:	9f 90       	pop	r9
     4f6:	8f 90       	pop	r8
     4f8:	08 95       	ret

000004fa <BUFFER_GetFull>:
     4fa:	cf 92       	push	r12
     4fc:	df 92       	push	r13
     4fe:	ef 92       	push	r14
     500:	ff 92       	push	r15
     502:	0f 93       	push	r16
     504:	1f 93       	push	r17
     506:	fc 01       	movw	r30, r24
     508:	89 2b       	or	r24, r25
     50a:	59 f1       	breq	.+86     	; 0x562 <BUFFER_GetFull+0x68>
     50c:	c4 80       	ldd	r12, Z+4	; 0x04
     50e:	d5 80       	ldd	r13, Z+5	; 0x05
     510:	e6 80       	ldd	r14, Z+6	; 0x06
     512:	f7 80       	ldd	r15, Z+7	; 0x07
     514:	00 85       	ldd	r16, Z+8	; 0x08
     516:	11 85       	ldd	r17, Z+9	; 0x09
     518:	22 85       	ldd	r18, Z+10	; 0x0a
     51a:	33 85       	ldd	r19, Z+11	; 0x0b
     51c:	0c 15       	cp	r16, r12
     51e:	1d 05       	cpc	r17, r13
     520:	2e 05       	cpc	r18, r14
     522:	3f 05       	cpc	r19, r15
     524:	38 f4       	brcc	.+14     	; 0x534 <BUFFER_GetFull+0x3a>
     526:	d7 01       	movw	r26, r14
     528:	c6 01       	movw	r24, r12
     52a:	80 1b       	sub	r24, r16
     52c:	91 0b       	sbc	r25, r17
     52e:	a2 0b       	sbc	r26, r18
     530:	b3 0b       	sbc	r27, r19
     532:	03 c0       	rjmp	.+6      	; 0x53a <BUFFER_GetFull+0x40>
     534:	80 e0       	ldi	r24, 0x00	; 0
     536:	90 e0       	ldi	r25, 0x00	; 0
     538:	dc 01       	movw	r26, r24
     53a:	c0 16       	cp	r12, r16
     53c:	d1 06       	cpc	r13, r17
     53e:	e2 06       	cpc	r14, r18
     540:	f3 06       	cpc	r15, r19
     542:	98 f4       	brcc	.+38     	; 0x56a <BUFFER_GetFull+0x70>
     544:	80 81       	ld	r24, Z
     546:	91 81       	ldd	r25, Z+1	; 0x01
     548:	a2 81       	ldd	r26, Z+2	; 0x02
     54a:	b3 81       	ldd	r27, Z+3	; 0x03
     54c:	8c 0d       	add	r24, r12
     54e:	9d 1d       	adc	r25, r13
     550:	ae 1d       	adc	r26, r14
     552:	bf 1d       	adc	r27, r15
     554:	bc 01       	movw	r22, r24
     556:	cd 01       	movw	r24, r26
     558:	60 1b       	sub	r22, r16
     55a:	71 0b       	sbc	r23, r17
     55c:	82 0b       	sbc	r24, r18
     55e:	93 0b       	sbc	r25, r19
     560:	06 c0       	rjmp	.+12     	; 0x56e <BUFFER_GetFull+0x74>
     562:	60 e0       	ldi	r22, 0x00	; 0
     564:	70 e0       	ldi	r23, 0x00	; 0
     566:	cb 01       	movw	r24, r22
     568:	02 c0       	rjmp	.+4      	; 0x56e <BUFFER_GetFull+0x74>
     56a:	bc 01       	movw	r22, r24
     56c:	cd 01       	movw	r24, r26
     56e:	1f 91       	pop	r17
     570:	0f 91       	pop	r16
     572:	ff 90       	pop	r15
     574:	ef 90       	pop	r14
     576:	df 90       	pop	r13
     578:	cf 90       	pop	r12
     57a:	08 95       	ret

0000057c <BUFFER_Read>:
     57c:	4f 92       	push	r4
     57e:	5f 92       	push	r5
     580:	6f 92       	push	r6
     582:	7f 92       	push	r7
     584:	8f 92       	push	r8
     586:	9f 92       	push	r9
     588:	af 92       	push	r10
     58a:	bf 92       	push	r11
     58c:	cf 92       	push	r12
     58e:	df 92       	push	r13
     590:	ef 92       	push	r14
     592:	ff 92       	push	r15
     594:	0f 93       	push	r16
     596:	1f 93       	push	r17
     598:	cf 93       	push	r28
     59a:	df 93       	push	r29
     59c:	ec 01       	movw	r28, r24
     59e:	8b 01       	movw	r16, r22
     5a0:	69 01       	movw	r12, r18
     5a2:	7a 01       	movw	r14, r20
     5a4:	89 2b       	or	r24, r25
     5a6:	09 f4       	brne	.+2      	; 0x5aa <BUFFER_Read+0x2e>
     5a8:	76 c0       	rjmp	.+236    	; 0x696 <BUFFER_Read+0x11a>
     5aa:	23 2b       	or	r18, r19
     5ac:	24 2b       	or	r18, r20
     5ae:	25 2b       	or	r18, r21
     5b0:	09 f4       	brne	.+2      	; 0x5b4 <BUFFER_Read+0x38>
     5b2:	76 c0       	rjmp	.+236    	; 0x6a0 <BUFFER_Read+0x124>
     5b4:	88 80       	ld	r8, Y
     5b6:	99 80       	ldd	r9, Y+1	; 0x01
     5b8:	aa 80       	ldd	r10, Y+2	; 0x02
     5ba:	bb 80       	ldd	r11, Y+3	; 0x03
     5bc:	88 85       	ldd	r24, Y+8	; 0x08
     5be:	99 85       	ldd	r25, Y+9	; 0x09
     5c0:	aa 85       	ldd	r26, Y+10	; 0x0a
     5c2:	bb 85       	ldd	r27, Y+11	; 0x0b
     5c4:	88 15       	cp	r24, r8
     5c6:	99 05       	cpc	r25, r9
     5c8:	aa 05       	cpc	r26, r10
     5ca:	bb 05       	cpc	r27, r11
     5cc:	20 f0       	brcs	.+8      	; 0x5d6 <BUFFER_Read+0x5a>
     5ce:	18 86       	std	Y+8, r1	; 0x08
     5d0:	19 86       	std	Y+9, r1	; 0x09
     5d2:	1a 86       	std	Y+10, r1	; 0x0a
     5d4:	1b 86       	std	Y+11, r1	; 0x0b
     5d6:	ce 01       	movw	r24, r28
     5d8:	90 df       	rcall	.-224    	; 0x4fa <BUFFER_GetFull>
     5da:	6c 15       	cp	r22, r12
     5dc:	7d 05       	cpc	r23, r13
     5de:	8e 05       	cpc	r24, r14
     5e0:	9f 05       	cpc	r25, r15
     5e2:	40 f4       	brcc	.+16     	; 0x5f4 <BUFFER_Read+0x78>
     5e4:	61 15       	cp	r22, r1
     5e6:	71 05       	cpc	r23, r1
     5e8:	81 05       	cpc	r24, r1
     5ea:	91 05       	cpc	r25, r1
     5ec:	09 f4       	brne	.+2      	; 0x5f0 <BUFFER_Read+0x74>
     5ee:	5d c0       	rjmp	.+186    	; 0x6aa <BUFFER_Read+0x12e>
     5f0:	6b 01       	movw	r12, r22
     5f2:	7c 01       	movw	r14, r24
     5f4:	48 85       	ldd	r20, Y+8	; 0x08
     5f6:	59 85       	ldd	r21, Y+9	; 0x09
     5f8:	6a 85       	ldd	r22, Y+10	; 0x0a
     5fa:	7b 85       	ldd	r23, Y+11	; 0x0b
     5fc:	d5 01       	movw	r26, r10
     5fe:	c4 01       	movw	r24, r8
     600:	84 1b       	sub	r24, r20
     602:	95 0b       	sbc	r25, r21
     604:	a6 0b       	sbc	r26, r22
     606:	b7 0b       	sbc	r27, r23
     608:	46 01       	movw	r8, r12
     60a:	57 01       	movw	r10, r14
     60c:	8c 15       	cp	r24, r12
     60e:	9d 05       	cpc	r25, r13
     610:	ae 05       	cpc	r26, r14
     612:	bf 05       	cpc	r27, r15
     614:	10 f4       	brcc	.+4      	; 0x61a <BUFFER_Read+0x9e>
     616:	4c 01       	movw	r8, r24
     618:	5d 01       	movw	r10, r26
     61a:	8c 85       	ldd	r24, Y+12	; 0x0c
     61c:	9d 85       	ldd	r25, Y+13	; 0x0d
     61e:	bc 01       	movw	r22, r24
     620:	64 0f       	add	r22, r20
     622:	75 1f       	adc	r23, r21
     624:	a4 01       	movw	r20, r8
     626:	c8 01       	movw	r24, r16
     628:	0e 94 76 20 	call	0x40ec	; 0x40ec <memcpy>
     62c:	88 85       	ldd	r24, Y+8	; 0x08
     62e:	99 85       	ldd	r25, Y+9	; 0x09
     630:	aa 85       	ldd	r26, Y+10	; 0x0a
     632:	bb 85       	ldd	r27, Y+11	; 0x0b
     634:	88 0d       	add	r24, r8
     636:	99 1d       	adc	r25, r9
     638:	aa 1d       	adc	r26, r10
     63a:	bb 1d       	adc	r27, r11
     63c:	88 87       	std	Y+8, r24	; 0x08
     63e:	99 87       	std	Y+9, r25	; 0x09
     640:	aa 87       	std	Y+10, r26	; 0x0a
     642:	bb 87       	std	Y+11, r27	; 0x0b
     644:	26 01       	movw	r4, r12
     646:	37 01       	movw	r6, r14
     648:	48 18       	sub	r4, r8
     64a:	59 08       	sbc	r5, r9
     64c:	6a 08       	sbc	r6, r10
     64e:	7b 08       	sbc	r7, r11
     650:	61 f0       	breq	.+24     	; 0x66a <BUFFER_Read+0xee>
     652:	c8 01       	movw	r24, r16
     654:	88 0d       	add	r24, r8
     656:	99 1d       	adc	r25, r9
     658:	6c 85       	ldd	r22, Y+12	; 0x0c
     65a:	7d 85       	ldd	r23, Y+13	; 0x0d
     65c:	a2 01       	movw	r20, r4
     65e:	0e 94 76 20 	call	0x40ec	; 0x40ec <memcpy>
     662:	48 86       	std	Y+8, r4	; 0x08
     664:	59 86       	std	Y+9, r5	; 0x09
     666:	6a 86       	std	Y+10, r6	; 0x0a
     668:	7b 86       	std	Y+11, r7	; 0x0b
     66a:	48 85       	ldd	r20, Y+8	; 0x08
     66c:	59 85       	ldd	r21, Y+9	; 0x09
     66e:	6a 85       	ldd	r22, Y+10	; 0x0a
     670:	7b 85       	ldd	r23, Y+11	; 0x0b
     672:	88 81       	ld	r24, Y
     674:	99 81       	ldd	r25, Y+1	; 0x01
     676:	aa 81       	ldd	r26, Y+2	; 0x02
     678:	bb 81       	ldd	r27, Y+3	; 0x03
     67a:	48 17       	cp	r20, r24
     67c:	59 07       	cpc	r21, r25
     67e:	6a 07       	cpc	r22, r26
     680:	7b 07       	cpc	r23, r27
     682:	20 f0       	brcs	.+8      	; 0x68c <BUFFER_Read+0x110>
     684:	18 86       	std	Y+8, r1	; 0x08
     686:	19 86       	std	Y+9, r1	; 0x09
     688:	1a 86       	std	Y+10, r1	; 0x0a
     68a:	1b 86       	std	Y+11, r1	; 0x0b
     68c:	6c 2d       	mov	r22, r12
     68e:	7d 2d       	mov	r23, r13
     690:	8e 2d       	mov	r24, r14
     692:	9f 2d       	mov	r25, r15
     694:	0e c0       	rjmp	.+28     	; 0x6b2 <BUFFER_Read+0x136>
     696:	60 e0       	ldi	r22, 0x00	; 0
     698:	70 e0       	ldi	r23, 0x00	; 0
     69a:	80 e0       	ldi	r24, 0x00	; 0
     69c:	90 e0       	ldi	r25, 0x00	; 0
     69e:	09 c0       	rjmp	.+18     	; 0x6b2 <BUFFER_Read+0x136>
     6a0:	60 e0       	ldi	r22, 0x00	; 0
     6a2:	70 e0       	ldi	r23, 0x00	; 0
     6a4:	80 e0       	ldi	r24, 0x00	; 0
     6a6:	90 e0       	ldi	r25, 0x00	; 0
     6a8:	04 c0       	rjmp	.+8      	; 0x6b2 <BUFFER_Read+0x136>
     6aa:	60 e0       	ldi	r22, 0x00	; 0
     6ac:	70 e0       	ldi	r23, 0x00	; 0
     6ae:	80 e0       	ldi	r24, 0x00	; 0
     6b0:	90 e0       	ldi	r25, 0x00	; 0
     6b2:	df 91       	pop	r29
     6b4:	cf 91       	pop	r28
     6b6:	1f 91       	pop	r17
     6b8:	0f 91       	pop	r16
     6ba:	ff 90       	pop	r15
     6bc:	ef 90       	pop	r14
     6be:	df 90       	pop	r13
     6c0:	cf 90       	pop	r12
     6c2:	bf 90       	pop	r11
     6c4:	af 90       	pop	r10
     6c6:	9f 90       	pop	r9
     6c8:	8f 90       	pop	r8
     6ca:	7f 90       	pop	r7
     6cc:	6f 90       	pop	r6
     6ce:	5f 90       	pop	r5
     6d0:	4f 90       	pop	r4
     6d2:	08 95       	ret

000006d4 <BUFFER_Reset>:

void BUFFER_Reset(BUFFER_t* Buffer) {
	if (Buffer == NULL) {									/* Check buffer structure */
     6d4:	00 97       	sbiw	r24, 0x00	; 0
     6d6:	49 f0       	breq	.+18     	; 0x6ea <BUFFER_Reset+0x16>
		return;
	}
	Buffer->In = 0;											/* Reset values */
     6d8:	fc 01       	movw	r30, r24
     6da:	14 82       	std	Z+4, r1	; 0x04
     6dc:	15 82       	std	Z+5, r1	; 0x05
     6de:	16 82       	std	Z+6, r1	; 0x06
     6e0:	17 82       	std	Z+7, r1	; 0x07
	Buffer->Out = 0;
     6e2:	10 86       	std	Z+8, r1	; 0x08
     6e4:	11 86       	std	Z+9, r1	; 0x09
     6e6:	12 86       	std	Z+10, r1	; 0x0a
     6e8:	13 86       	std	Z+11, r1	; 0x0b
     6ea:	08 95       	ret

000006ec <BUFFER_FindElement>:
}

int32_t BUFFER_FindElement(BUFFER_t* Buffer, uint8_t Element) {
     6ec:	6f 92       	push	r6
     6ee:	7f 92       	push	r7
     6f0:	8f 92       	push	r8
     6f2:	9f 92       	push	r9
     6f4:	af 92       	push	r10
     6f6:	bf 92       	push	r11
     6f8:	cf 92       	push	r12
     6fa:	df 92       	push	r13
     6fc:	ef 92       	push	r14
     6fe:	ff 92       	push	r15
     700:	0f 93       	push	r16
     702:	1f 93       	push	r17
     704:	cf 93       	push	r28
     706:	df 93       	push	r29
	uint32_t Num, Out, retval = 0;
	
	if (Buffer == NULL) {									/* Check buffer structure */
     708:	00 97       	sbiw	r24, 0x00	; 0
     70a:	09 f4       	brne	.+2      	; 0x70e <BUFFER_FindElement+0x22>
     70c:	42 c0       	rjmp	.+132    	; 0x792 <BUFFER_FindElement+0xa6>
     70e:	c6 2f       	mov	r28, r22
     710:	8c 01       	movw	r16, r24
		return -1;
	}
	
	Num = BUFFER_GetFull(Buffer);							/* Create temporary variables */
     712:	f3 de       	rcall	.-538    	; 0x4fa <BUFFER_GetFull>
     714:	6b 01       	movw	r12, r22
     716:	7c 01       	movw	r14, r24
	Out = Buffer->Out;
     718:	f8 01       	movw	r30, r16
     71a:	40 85       	ldd	r20, Z+8	; 0x08
     71c:	51 85       	ldd	r21, Z+9	; 0x09
     71e:	62 85       	ldd	r22, Z+10	; 0x0a
     720:	73 85       	ldd	r23, Z+11	; 0x0b
	while (Num > 0) {										/* Go through input elements */
     722:	c1 14       	cp	r12, r1
     724:	d1 04       	cpc	r13, r1
     726:	e1 04       	cpc	r14, r1
     728:	f1 04       	cpc	r15, r1
     72a:	c1 f1       	breq	.+112    	; 0x79c <BUFFER_FindElement+0xb0>
		if (Out >= Buffer->Size) {							/* Check output overflow */
     72c:	80 80       	ld	r8, Z
     72e:	91 80       	ldd	r9, Z+1	; 0x01
     730:	a2 80       	ldd	r10, Z+2	; 0x02
     732:	b3 80       	ldd	r11, Z+3	; 0x03
			Out = 0;
		}
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Element) {	/* Check for element */
     734:	a4 85       	ldd	r26, Z+12	; 0x0c
     736:	b5 85       	ldd	r27, Z+13	; 0x0d
     738:	00 e0       	ldi	r16, 0x00	; 0
     73a:	10 e0       	ldi	r17, 0x00	; 0
     73c:	98 01       	movw	r18, r16
	
	Num = BUFFER_GetFull(Buffer);							/* Create temporary variables */
	Out = Buffer->Out;
	while (Num > 0) {										/* Go through input elements */
		if (Out >= Buffer->Size) {							/* Check output overflow */
			Out = 0;
     73e:	61 2c       	mov	r6, r1
     740:	71 2c       	mov	r7, r1
     742:	d0 e0       	ldi	r29, 0x00	; 0
     744:	90 e0       	ldi	r25, 0x00	; 0
	}
	
	Num = BUFFER_GetFull(Buffer);							/* Create temporary variables */
	Out = Buffer->Out;
	while (Num > 0) {										/* Go through input elements */
		if (Out >= Buffer->Size) {							/* Check output overflow */
     746:	48 15       	cp	r20, r8
     748:	59 05       	cpc	r21, r9
     74a:	6a 05       	cpc	r22, r10
     74c:	7b 05       	cpc	r23, r11
     74e:	20 f0       	brcs	.+8      	; 0x758 <BUFFER_FindElement+0x6c>
			Out = 0;
     750:	46 2d       	mov	r20, r6
     752:	57 2d       	mov	r21, r7
     754:	6d 2f       	mov	r22, r29
     756:	79 2f       	mov	r23, r25
		}
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Element) {	/* Check for element */
     758:	fd 01       	movw	r30, r26
     75a:	e4 0f       	add	r30, r20
     75c:	f5 1f       	adc	r31, r21
     75e:	80 81       	ld	r24, Z
     760:	8c 13       	cpse	r24, r28
     762:	05 c0       	rjmp	.+10     	; 0x76e <BUFFER_FindElement+0x82>
			return retval;									/* Element found, return position in buffer */
     764:	60 2f       	mov	r22, r16
     766:	71 2f       	mov	r23, r17
     768:	82 2f       	mov	r24, r18
     76a:	93 2f       	mov	r25, r19
     76c:	1b c0       	rjmp	.+54     	; 0x7a4 <BUFFER_FindElement+0xb8>
		}
		Out++;												/* Set new variables */
     76e:	4f 5f       	subi	r20, 0xFF	; 255
     770:	5f 4f       	sbci	r21, 0xFF	; 255
     772:	6f 4f       	sbci	r22, 0xFF	; 255
     774:	7f 4f       	sbci	r23, 0xFF	; 255
		Num--;
		retval++;
     776:	0f 5f       	subi	r16, 0xFF	; 255
     778:	1f 4f       	sbci	r17, 0xFF	; 255
     77a:	2f 4f       	sbci	r18, 0xFF	; 255
     77c:	3f 4f       	sbci	r19, 0xFF	; 255
		return -1;
	}
	
	Num = BUFFER_GetFull(Buffer);							/* Create temporary variables */
	Out = Buffer->Out;
	while (Num > 0) {										/* Go through input elements */
     77e:	c0 16       	cp	r12, r16
     780:	d1 06       	cpc	r13, r17
     782:	e2 06       	cpc	r14, r18
     784:	f3 06       	cpc	r15, r19
     786:	f9 f6       	brne	.-66     	; 0x746 <BUFFER_FindElement+0x5a>
		}
		Out++;												/* Set new variables */
		Num--;
		retval++;
	}
	return -1;												/* Element is not in buffer */
     788:	6f ef       	ldi	r22, 0xFF	; 255
     78a:	7f ef       	ldi	r23, 0xFF	; 255
     78c:	8f ef       	ldi	r24, 0xFF	; 255
     78e:	9f ef       	ldi	r25, 0xFF	; 255
     790:	09 c0       	rjmp	.+18     	; 0x7a4 <BUFFER_FindElement+0xb8>

int32_t BUFFER_FindElement(BUFFER_t* Buffer, uint8_t Element) {
	uint32_t Num, Out, retval = 0;
	
	if (Buffer == NULL) {									/* Check buffer structure */
		return -1;
     792:	6f ef       	ldi	r22, 0xFF	; 255
     794:	7f ef       	ldi	r23, 0xFF	; 255
     796:	8f ef       	ldi	r24, 0xFF	; 255
     798:	9f ef       	ldi	r25, 0xFF	; 255
     79a:	04 c0       	rjmp	.+8      	; 0x7a4 <BUFFER_FindElement+0xb8>
		}
		Out++;												/* Set new variables */
		Num--;
		retval++;
	}
	return -1;												/* Element is not in buffer */
     79c:	6f ef       	ldi	r22, 0xFF	; 255
     79e:	7f ef       	ldi	r23, 0xFF	; 255
     7a0:	8f ef       	ldi	r24, 0xFF	; 255
     7a2:	9f ef       	ldi	r25, 0xFF	; 255
}
     7a4:	df 91       	pop	r29
     7a6:	cf 91       	pop	r28
     7a8:	1f 91       	pop	r17
     7aa:	0f 91       	pop	r16
     7ac:	ff 90       	pop	r15
     7ae:	ef 90       	pop	r14
     7b0:	df 90       	pop	r13
     7b2:	cf 90       	pop	r12
     7b4:	bf 90       	pop	r11
     7b6:	af 90       	pop	r10
     7b8:	9f 90       	pop	r9
     7ba:	8f 90       	pop	r8
     7bc:	7f 90       	pop	r7
     7be:	6f 90       	pop	r6
     7c0:	08 95       	ret

000007c2 <BUFFER_Find>:

int32_t BUFFER_Find(BUFFER_t* Buffer, uint8_t* Data, uint32_t Size) {
     7c2:	2f 92       	push	r2
     7c4:	3f 92       	push	r3
     7c6:	4f 92       	push	r4
     7c8:	5f 92       	push	r5
     7ca:	6f 92       	push	r6
     7cc:	7f 92       	push	r7
     7ce:	8f 92       	push	r8
     7d0:	9f 92       	push	r9
     7d2:	af 92       	push	r10
     7d4:	bf 92       	push	r11
     7d6:	cf 92       	push	r12
     7d8:	df 92       	push	r13
     7da:	ef 92       	push	r14
     7dc:	ff 92       	push	r15
     7de:	0f 93       	push	r16
     7e0:	1f 93       	push	r17
     7e2:	cf 93       	push	r28
     7e4:	df 93       	push	r29
     7e6:	cd b7       	in	r28, 0x3d	; 61
     7e8:	de b7       	in	r29, 0x3e	; 62
     7ea:	2d 97       	sbiw	r28, 0x0d	; 13
     7ec:	0f b6       	in	r0, 0x3f	; 63
     7ee:	f8 94       	cli
     7f0:	de bf       	out	0x3e, r29	; 62
     7f2:	0f be       	out	0x3f, r0	; 63
     7f4:	cd bf       	out	0x3d, r28	; 61
	uint32_t Num, Out, i, retval = 0;
	uint8_t found = 0;

	if (Buffer == NULL || (Num = BUFFER_GetFull(Buffer)) < Size) {	/* Check buffer structure and number of elements in buffer */
     7f6:	00 97       	sbiw	r24, 0x00	; 0
     7f8:	09 f4       	brne	.+2      	; 0x7fc <BUFFER_Find+0x3a>
     7fa:	d7 c0       	rjmp	.+430    	; 0x9aa <BUFFER_Find+0x1e8>
     7fc:	69 01       	movw	r12, r18
     7fe:	7a 01       	movw	r14, r20
     800:	b7 2e       	mov	r11, r23
     802:	a6 2e       	mov	r10, r22
     804:	4c 01       	movw	r8, r24
     806:	79 de       	rcall	.-782    	; 0x4fa <BUFFER_GetFull>
     808:	8b 01       	movw	r16, r22
     80a:	9c 01       	movw	r18, r24
     80c:	6c 15       	cp	r22, r12
     80e:	7d 05       	cpc	r23, r13
     810:	8e 05       	cpc	r24, r14
     812:	9f 05       	cpc	r25, r15
     814:	08 f4       	brcc	.+2      	; 0x818 <BUFFER_Find+0x56>
     816:	cd c0       	rjmp	.+410    	; 0x9b2 <BUFFER_Find+0x1f0>
		return -1;
	}
	Out = Buffer->Out;										/* Create temporary variables */
     818:	d4 01       	movw	r26, r8
     81a:	18 96       	adiw	r26, 0x08	; 8
     81c:	4d 91       	ld	r20, X+
     81e:	5d 91       	ld	r21, X+
     820:	6d 91       	ld	r22, X+
     822:	7c 91       	ld	r23, X
     824:	1b 97       	sbiw	r26, 0x0b	; 11
	while (Num > 0) {										/* Go through input elements in buffer */
     826:	01 15       	cp	r16, r1
     828:	11 05       	cpc	r17, r1
     82a:	21 05       	cpc	r18, r1
     82c:	31 05       	cpc	r19, r1
     82e:	09 f4       	brne	.+2      	; 0x832 <BUFFER_Find+0x70>
     830:	c4 c0       	rjmp	.+392    	; 0x9ba <BUFFER_Find+0x1f8>
		if (Out >= Buffer->Size) {							/* Check output overflow */
     832:	4d 90       	ld	r4, X+
     834:	5d 90       	ld	r5, X+
     836:	6d 90       	ld	r6, X+
     838:	7c 90       	ld	r7, X
     83a:	13 97       	sbiw	r26, 0x03	; 3
			Out = 0;
		}
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {	/* Check if current element in buffer matches first element in data array */
     83c:	1c 96       	adiw	r26, 0x0c	; 12
     83e:	8d 91       	ld	r24, X+
     840:	9c 91       	ld	r25, X
     842:	1d 97       	sbiw	r26, 0x0d	; 13
     844:	a8 86       	std	Y+8, r10	; 0x08
     846:	b9 86       	std	Y+9, r11	; 0x09
     848:	e8 85       	ldd	r30, Y+8	; 0x08
     84a:	f9 85       	ldd	r31, Y+9	; 0x09
     84c:	a1 91       	ld	r26, Z+
     84e:	f9 87       	std	Y+9, r31	; 0x09
     850:	e8 87       	std	Y+8, r30	; 0x08
     852:	ae 83       	std	Y+6, r26	; 0x06
     854:	1f 82       	std	Y+7, r1	; 0x07
     856:	1a 82       	std	Y+2, r1	; 0x02
     858:	1b 82       	std	Y+3, r1	; 0x03
     85a:	1c 82       	std	Y+4, r1	; 0x04
     85c:	1d 82       	std	Y+5, r1	; 0x05
		retval++;
		if (found) {										/* We have found first element */
			i = 1;											/* First character found */
			while (i < Size && Num > 0) {					/* Check others */	
				if (Out >= Buffer->Size) {					/* Check output overflow */
					Out = 0;
     85e:	e0 e0       	ldi	r30, 0x00	; 0
     860:	31 2c       	mov	r3, r1
     862:	21 2c       	mov	r2, r1
     864:	19 82       	std	Y+1, r1	; 0x01
     866:	9c 87       	std	Y+12, r25	; 0x0c
     868:	8b 87       	std	Y+11, r24	; 0x0b
     86a:	ea 87       	std	Y+10, r30	; 0x0a
	if (Buffer == NULL || (Num = BUFFER_GetFull(Buffer)) < Size) {	/* Check buffer structure and number of elements in buffer */
		return -1;
	}
	Out = Buffer->Out;										/* Create temporary variables */
	while (Num > 0) {										/* Go through input elements in buffer */
		if (Out >= Buffer->Size) {							/* Check output overflow */
     86c:	44 15       	cp	r20, r4
     86e:	55 05       	cpc	r21, r5
     870:	66 05       	cpc	r22, r6
     872:	77 05       	cpc	r23, r7
     874:	20 f0       	brcs	.+8      	; 0x87e <BUFFER_Find+0xbc>
			Out = 0;
     876:	40 e0       	ldi	r20, 0x00	; 0
     878:	50 e0       	ldi	r21, 0x00	; 0
     87a:	60 e0       	ldi	r22, 0x00	; 0
     87c:	70 e0       	ldi	r23, 0x00	; 0
		}
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {	/* Check if current element in buffer matches first element in data array */
     87e:	eb 85       	ldd	r30, Y+11	; 0x0b
     880:	fc 85       	ldd	r31, Y+12	; 0x0c
     882:	e4 0f       	add	r30, r20
     884:	f5 1f       	adc	r31, r21
     886:	e0 81       	ld	r30, Z
     888:	be 81       	ldd	r27, Y+6	; 0x06
     88a:	eb 17       	cp	r30, r27
     88c:	09 f4       	brne	.+2      	; 0x890 <BUFFER_Find+0xce>
     88e:	99 c0       	rjmp	.+306    	; 0x9c2 <BUFFER_Find+0x200>
			found = 1;
		}
		
		Out++;												/* Set new variables */
     890:	4f 5f       	subi	r20, 0xFF	; 255
     892:	5f 4f       	sbci	r21, 0xFF	; 255
     894:	6f 4f       	sbci	r22, 0xFF	; 255
     896:	7f 4f       	sbci	r23, 0xFF	; 255
		Num--;
     898:	01 50       	subi	r16, 0x01	; 1
     89a:	11 09       	sbc	r17, r1
     89c:	21 09       	sbc	r18, r1
     89e:	31 09       	sbc	r19, r1
		retval++;
     8a0:	8a 81       	ldd	r24, Y+2	; 0x02
     8a2:	9b 81       	ldd	r25, Y+3	; 0x03
     8a4:	ac 81       	ldd	r26, Y+4	; 0x04
     8a6:	bd 81       	ldd	r27, Y+5	; 0x05
     8a8:	01 96       	adiw	r24, 0x01	; 1
     8aa:	a1 1d       	adc	r26, r1
     8ac:	b1 1d       	adc	r27, r1
     8ae:	8a 83       	std	Y+2, r24	; 0x02
     8b0:	9b 83       	std	Y+3, r25	; 0x03
     8b2:	ac 83       	std	Y+4, r26	; 0x04
     8b4:	bd 83       	std	Y+5, r27	; 0x05
		if (found) {										/* We have found first element */
     8b6:	9f 81       	ldd	r25, Y+7	; 0x07
     8b8:	99 23       	and	r25, r25
     8ba:	09 f4       	brne	.+2      	; 0x8be <BUFFER_Find+0xfc>
     8bc:	6c c0       	rjmp	.+216    	; 0x996 <BUFFER_Find+0x1d4>
			i = 1;											/* First character found */
			while (i < Size && Num > 0) {					/* Check others */	
     8be:	a2 e0       	ldi	r26, 0x02	; 2
     8c0:	ca 16       	cp	r12, r26
     8c2:	d1 04       	cpc	r13, r1
     8c4:	e1 04       	cpc	r14, r1
     8c6:	f1 04       	cpc	r15, r1
     8c8:	08 f4       	brcc	.+2      	; 0x8cc <BUFFER_Find+0x10a>
     8ca:	52 c0       	rjmp	.+164    	; 0x970 <BUFFER_Find+0x1ae>
     8cc:	01 15       	cp	r16, r1
     8ce:	11 05       	cpc	r17, r1
     8d0:	21 05       	cpc	r18, r1
     8d2:	31 05       	cpc	r19, r1
     8d4:	09 f4       	brne	.+2      	; 0x8d8 <BUFFER_Find+0x116>
     8d6:	8b c0       	rjmp	.+278    	; 0x9ee <BUFFER_Find+0x22c>
     8d8:	e8 85       	ldd	r30, Y+8	; 0x08
     8da:	f9 85       	ldd	r31, Y+9	; 0x09
     8dc:	88 24       	eor	r8, r8
     8de:	83 94       	inc	r8
     8e0:	91 2c       	mov	r9, r1
     8e2:	a1 2c       	mov	r10, r1
     8e4:	b1 2c       	mov	r11, r1
     8e6:	8b 85       	ldd	r24, Y+11	; 0x0b
     8e8:	9c 85       	ldd	r25, Y+12	; 0x0c
     8ea:	ba 85       	ldd	r27, Y+10	; 0x0a
     8ec:	bd 87       	std	Y+13, r27	; 0x0d
				if (Out >= Buffer->Size) {					/* Check output overflow */
     8ee:	44 15       	cp	r20, r4
     8f0:	55 05       	cpc	r21, r5
     8f2:	66 05       	cpc	r22, r6
     8f4:	77 05       	cpc	r23, r7
     8f6:	20 f0       	brcs	.+8      	; 0x900 <BUFFER_Find+0x13e>
					Out = 0;
     8f8:	4d 85       	ldd	r20, Y+13	; 0x0d
     8fa:	53 2d       	mov	r21, r3
     8fc:	62 2d       	mov	r22, r2
     8fe:	79 81       	ldd	r23, Y+1	; 0x01
				}
				if ((uint8_t)Buffer->Buffer[Out] != (uint8_t)Data[i]) {	/* Check if current character in buffer matches character in string */
     900:	a1 91       	ld	r26, Z+
     902:	aa 87       	std	Y+10, r26	; 0x0a
     904:	dc 01       	movw	r26, r24
     906:	a4 0f       	add	r26, r20
     908:	b5 1f       	adc	r27, r21
     90a:	ac 91       	ld	r26, X
     90c:	ba 85       	ldd	r27, Y+10	; 0x0a
     90e:	ab 17       	cp	r26, r27
     910:	a1 f0       	breq	.+40     	; 0x93a <BUFFER_Find+0x178>
     912:	9c 87       	std	Y+12, r25	; 0x0c
     914:	8b 87       	std	Y+11, r24	; 0x0b
     916:	ed 85       	ldd	r30, Y+13	; 0x0d
     918:	ea 87       	std	Y+10, r30	; 0x0a
     91a:	8a 81       	ldd	r24, Y+2	; 0x02
     91c:	9b 81       	ldd	r25, Y+3	; 0x03
     91e:	ac 81       	ldd	r26, Y+4	; 0x04
     920:	bd 81       	ldd	r27, Y+5	; 0x05
     922:	01 97       	sbiw	r24, 0x01	; 1
     924:	a1 09       	sbc	r26, r1
     926:	b1 09       	sbc	r27, r1
					retval += i - 1;
     928:	88 0d       	add	r24, r8
     92a:	99 1d       	adc	r25, r9
     92c:	aa 1d       	adc	r26, r10
     92e:	bb 1d       	adc	r27, r11
     930:	8a 83       	std	Y+2, r24	; 0x02
     932:	9b 83       	std	Y+3, r25	; 0x03
     934:	ac 83       	std	Y+4, r26	; 0x04
     936:	bd 83       	std	Y+5, r27	; 0x05
					break;
     938:	20 c0       	rjmp	.+64     	; 0x97a <BUFFER_Find+0x1b8>
				}
				Out++;										/* Set new variables */
     93a:	4f 5f       	subi	r20, 0xFF	; 255
     93c:	5f 4f       	sbci	r21, 0xFF	; 255
     93e:	6f 4f       	sbci	r22, 0xFF	; 255
     940:	7f 4f       	sbci	r23, 0xFF	; 255
				Num--;
     942:	01 50       	subi	r16, 0x01	; 1
     944:	11 09       	sbc	r17, r1
     946:	21 09       	sbc	r18, r1
     948:	31 09       	sbc	r19, r1
				i++;
     94a:	af ef       	ldi	r26, 0xFF	; 255
     94c:	8a 1a       	sub	r8, r26
     94e:	9a 0a       	sbc	r9, r26
     950:	aa 0a       	sbc	r10, r26
     952:	ba 0a       	sbc	r11, r26
		Out++;												/* Set new variables */
		Num--;
		retval++;
		if (found) {										/* We have found first element */
			i = 1;											/* First character found */
			while (i < Size && Num > 0) {					/* Check others */	
     954:	8c 14       	cp	r8, r12
     956:	9d 04       	cpc	r9, r13
     958:	ae 04       	cpc	r10, r14
     95a:	bf 04       	cpc	r11, r15
     95c:	99 f0       	breq	.+38     	; 0x984 <BUFFER_Find+0x1c2>
     95e:	01 15       	cp	r16, r1
     960:	11 05       	cpc	r17, r1
     962:	21 05       	cpc	r18, r1
     964:	31 05       	cpc	r19, r1
     966:	19 f6       	brne	.-122    	; 0x8ee <BUFFER_Find+0x12c>
			if (i == Size) {								/* We have found data sequence in buffer */
				return retval - 1;
			}
		}
	}
	return -1;												/* Data sequence is not in buffer */
     968:	6f ef       	ldi	r22, 0xFF	; 255
     96a:	7f ef       	ldi	r23, 0xFF	; 255
     96c:	cb 01       	movw	r24, r22
     96e:	47 c0       	rjmp	.+142    	; 0x9fe <BUFFER_Find+0x23c>
		Out++;												/* Set new variables */
		Num--;
		retval++;
		if (found) {										/* We have found first element */
			i = 1;											/* First character found */
			while (i < Size && Num > 0) {					/* Check others */	
     970:	88 24       	eor	r8, r8
     972:	83 94       	inc	r8
     974:	91 2c       	mov	r9, r1
     976:	a1 2c       	mov	r10, r1
     978:	b1 2c       	mov	r11, r1
				}
				Out++;										/* Set new variables */
				Num--;
				i++;
			}
			if (i == Size) {								/* We have found data sequence in buffer */
     97a:	8c 14       	cp	r8, r12
     97c:	9d 04       	cpc	r9, r13
     97e:	ae 04       	cpc	r10, r14
     980:	bf 04       	cpc	r11, r15
     982:	49 f4       	brne	.+18     	; 0x996 <BUFFER_Find+0x1d4>
				return retval - 1;
     984:	6a 81       	ldd	r22, Y+2	; 0x02
     986:	7b 81       	ldd	r23, Y+3	; 0x03
     988:	8c 81       	ldd	r24, Y+4	; 0x04
     98a:	9d 81       	ldd	r25, Y+5	; 0x05
     98c:	61 50       	subi	r22, 0x01	; 1
     98e:	71 09       	sbc	r23, r1
     990:	81 09       	sbc	r24, r1
     992:	91 09       	sbc	r25, r1
     994:	34 c0       	rjmp	.+104    	; 0x9fe <BUFFER_Find+0x23c>

	if (Buffer == NULL || (Num = BUFFER_GetFull(Buffer)) < Size) {	/* Check buffer structure and number of elements in buffer */
		return -1;
	}
	Out = Buffer->Out;										/* Create temporary variables */
	while (Num > 0) {										/* Go through input elements in buffer */
     996:	01 15       	cp	r16, r1
     998:	11 05       	cpc	r17, r1
     99a:	21 05       	cpc	r18, r1
     99c:	31 05       	cpc	r19, r1
     99e:	09 f0       	breq	.+2      	; 0x9a2 <BUFFER_Find+0x1e0>
     9a0:	65 cf       	rjmp	.-310    	; 0x86c <BUFFER_Find+0xaa>
			if (i == Size) {								/* We have found data sequence in buffer */
				return retval - 1;
			}
		}
	}
	return -1;												/* Data sequence is not in buffer */
     9a2:	6f ef       	ldi	r22, 0xFF	; 255
     9a4:	7f ef       	ldi	r23, 0xFF	; 255
     9a6:	cb 01       	movw	r24, r22
     9a8:	2a c0       	rjmp	.+84     	; 0x9fe <BUFFER_Find+0x23c>
int32_t BUFFER_Find(BUFFER_t* Buffer, uint8_t* Data, uint32_t Size) {
	uint32_t Num, Out, i, retval = 0;
	uint8_t found = 0;

	if (Buffer == NULL || (Num = BUFFER_GetFull(Buffer)) < Size) {	/* Check buffer structure and number of elements in buffer */
		return -1;
     9aa:	6f ef       	ldi	r22, 0xFF	; 255
     9ac:	7f ef       	ldi	r23, 0xFF	; 255
     9ae:	cb 01       	movw	r24, r22
     9b0:	26 c0       	rjmp	.+76     	; 0x9fe <BUFFER_Find+0x23c>
     9b2:	6f ef       	ldi	r22, 0xFF	; 255
     9b4:	7f ef       	ldi	r23, 0xFF	; 255
     9b6:	cb 01       	movw	r24, r22
     9b8:	22 c0       	rjmp	.+68     	; 0x9fe <BUFFER_Find+0x23c>
			if (i == Size) {								/* We have found data sequence in buffer */
				return retval - 1;
			}
		}
	}
	return -1;												/* Data sequence is not in buffer */
     9ba:	6f ef       	ldi	r22, 0xFF	; 255
     9bc:	7f ef       	ldi	r23, 0xFF	; 255
     9be:	cb 01       	movw	r24, r22
     9c0:	1e c0       	rjmp	.+60     	; 0x9fe <BUFFER_Find+0x23c>
		}
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {	/* Check if current element in buffer matches first element in data array */
			found = 1;
		}
		
		Out++;												/* Set new variables */
     9c2:	4f 5f       	subi	r20, 0xFF	; 255
     9c4:	5f 4f       	sbci	r21, 0xFF	; 255
     9c6:	6f 4f       	sbci	r22, 0xFF	; 255
     9c8:	7f 4f       	sbci	r23, 0xFF	; 255
		Num--;
     9ca:	01 50       	subi	r16, 0x01	; 1
     9cc:	11 09       	sbc	r17, r1
     9ce:	21 09       	sbc	r18, r1
     9d0:	31 09       	sbc	r19, r1
		retval++;
     9d2:	8a 81       	ldd	r24, Y+2	; 0x02
     9d4:	9b 81       	ldd	r25, Y+3	; 0x03
     9d6:	ac 81       	ldd	r26, Y+4	; 0x04
     9d8:	bd 81       	ldd	r27, Y+5	; 0x05
     9da:	01 96       	adiw	r24, 0x01	; 1
     9dc:	a1 1d       	adc	r26, r1
     9de:	b1 1d       	adc	r27, r1
     9e0:	8a 83       	std	Y+2, r24	; 0x02
     9e2:	9b 83       	std	Y+3, r25	; 0x03
     9e4:	ac 83       	std	Y+4, r26	; 0x04
     9e6:	bd 83       	std	Y+5, r27	; 0x05
	while (Num > 0) {										/* Go through input elements in buffer */
		if (Out >= Buffer->Size) {							/* Check output overflow */
			Out = 0;
		}
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {	/* Check if current element in buffer matches first element in data array */
			found = 1;
     9e8:	91 e0       	ldi	r25, 0x01	; 1
     9ea:	9f 83       	std	Y+7, r25	; 0x07
     9ec:	68 cf       	rjmp	.-304    	; 0x8be <BUFFER_Find+0xfc>
				}
				Out++;										/* Set new variables */
				Num--;
				i++;
			}
			if (i == Size) {								/* We have found data sequence in buffer */
     9ee:	ca 94       	dec	r12
     9f0:	cd 28       	or	r12, r13
     9f2:	ce 28       	or	r12, r14
     9f4:	cf 28       	or	r12, r15
     9f6:	31 f2       	breq	.-116    	; 0x984 <BUFFER_Find+0x1c2>
				return retval - 1;
			}
		}
	}
	return -1;												/* Data sequence is not in buffer */
     9f8:	6f ef       	ldi	r22, 0xFF	; 255
     9fa:	7f ef       	ldi	r23, 0xFF	; 255
     9fc:	cb 01       	movw	r24, r22
}
     9fe:	2d 96       	adiw	r28, 0x0d	; 13
     a00:	0f b6       	in	r0, 0x3f	; 63
     a02:	f8 94       	cli
     a04:	de bf       	out	0x3e, r29	; 62
     a06:	0f be       	out	0x3f, r0	; 63
     a08:	cd bf       	out	0x3d, r28	; 61
     a0a:	df 91       	pop	r29
     a0c:	cf 91       	pop	r28
     a0e:	1f 91       	pop	r17
     a10:	0f 91       	pop	r16
     a12:	ff 90       	pop	r15
     a14:	ef 90       	pop	r14
     a16:	df 90       	pop	r13
     a18:	cf 90       	pop	r12
     a1a:	bf 90       	pop	r11
     a1c:	af 90       	pop	r10
     a1e:	9f 90       	pop	r9
     a20:	8f 90       	pop	r8
     a22:	7f 90       	pop	r7
     a24:	6f 90       	pop	r6
     a26:	5f 90       	pop	r5
     a28:	4f 90       	pop	r4
     a2a:	3f 90       	pop	r3
     a2c:	2f 90       	pop	r2
     a2e:	08 95       	ret

00000a30 <BUFFER_WriteString>:

uint32_t BUFFER_WriteString(BUFFER_t* Buffer, char* buff) {
	return BUFFER_Write(Buffer, (uint8_t *)buff, strlen(buff));	/* Write string to buffer */
     a30:	fb 01       	movw	r30, r22
     a32:	01 90       	ld	r0, Z+
     a34:	00 20       	and	r0, r0
     a36:	e9 f7       	brne	.-6      	; 0xa32 <BUFFER_WriteString+0x2>
     a38:	31 97       	sbiw	r30, 0x01	; 1
     a3a:	9f 01       	movw	r18, r30
     a3c:	26 1b       	sub	r18, r22
     a3e:	37 0b       	sbc	r19, r23
     a40:	40 e0       	ldi	r20, 0x00	; 0
     a42:	50 e0       	ldi	r21, 0x00	; 0
     a44:	0c cc       	rjmp	.-2024   	; 0x25e <BUFFER_Write>
}
     a46:	08 95       	ret

00000a48 <BUFFER_ReadString>:

uint32_t BUFFER_ReadString(BUFFER_t* Buffer, char* buff, uint32_t buffsize) {
     a48:	2f 92       	push	r2
     a4a:	3f 92       	push	r3
     a4c:	4f 92       	push	r4
     a4e:	5f 92       	push	r5
     a50:	6f 92       	push	r6
     a52:	7f 92       	push	r7
     a54:	8f 92       	push	r8
     a56:	9f 92       	push	r9
     a58:	af 92       	push	r10
     a5a:	bf 92       	push	r11
     a5c:	cf 92       	push	r12
     a5e:	df 92       	push	r13
     a60:	ef 92       	push	r14
     a62:	ff 92       	push	r15
     a64:	0f 93       	push	r16
     a66:	1f 93       	push	r17
     a68:	cf 93       	push	r28
     a6a:	df 93       	push	r29
     a6c:	1f 92       	push	r1
     a6e:	cd b7       	in	r28, 0x3d	; 61
     a70:	de b7       	in	r29, 0x3e	; 62
	uint32_t i = 0, freeMem, fullMem;
	uint8_t ch;
	if (Buffer == NULL) {
     a72:	00 97       	sbiw	r24, 0x00	; 0
     a74:	09 f4       	brne	.+2      	; 0xa78 <BUFFER_ReadString+0x30>
     a76:	67 c0       	rjmp	.+206    	; 0xb46 <BUFFER_ReadString+0xfe>
     a78:	69 01       	movw	r12, r18
     a7a:	7a 01       	movw	r14, r20
     a7c:	1b 01       	movw	r2, r22
     a7e:	8c 01       	movw	r16, r24
		return 0;											/* Check value buffer */
	}
	
	freeMem = BUFFER_GetFree(Buffer);						/* Get free memory */
     a80:	a2 db       	rcall	.-2236   	; 0x1c6 <BUFFER_GetFree>
     a82:	2b 01       	movw	r4, r22
     a84:	3c 01       	movw	r6, r24
	fullMem = BUFFER_GetFull(Buffer);						/* Get full memory */
     a86:	c8 01       	movw	r24, r16
     a88:	38 dd       	rcall	.-1424   	; 0x4fa <BUFFER_GetFull>
     a8a:	4b 01       	movw	r8, r22
     a8c:	5c 01       	movw	r10, r24
	if (													/* Check for any data in buffer */
     a8e:	67 2b       	or	r22, r23
     a90:	68 2b       	or	r22, r24
     a92:	69 2b       	or	r22, r25
     a94:	09 f4       	brne	.+2      	; 0xa98 <BUFFER_ReadString+0x50>
     a96:	5c c0       	rjmp	.+184    	; 0xb50 <BUFFER_ReadString+0x108>
		fullMem == 0 ||                                 	/* Buffer empty */
		(
			BUFFER_FindElement(Buffer, Buffer->StringDelimiter) < 0 && 	/* String delimiter is not in buffer */
     a98:	f8 01       	movw	r30, r16
     a9a:	67 85       	ldd	r22, Z+15	; 0x0f
     a9c:	c8 01       	movw	r24, r16
     a9e:	26 de       	rcall	.-948    	; 0x6ec <BUFFER_FindElement>
	}
	
	freeMem = BUFFER_GetFree(Buffer);						/* Get free memory */
	fullMem = BUFFER_GetFull(Buffer);						/* Get full memory */
	if (													/* Check for any data in buffer */
		fullMem == 0 ||                                 	/* Buffer empty */
     aa0:	99 23       	and	r25, r25
     aa2:	54 f4       	brge	.+20     	; 0xab8 <BUFFER_ReadString+0x70>
		(
			BUFFER_FindElement(Buffer, Buffer->StringDelimiter) < 0 && 	/* String delimiter is not in buffer */
     aa4:	45 28       	or	r4, r5
     aa6:	46 28       	or	r4, r6
     aa8:	47 28       	or	r4, r7
     aaa:	31 f0       	breq	.+12     	; 0xab8 <BUFFER_ReadString+0x70>
			freeMem != 0 &&                                            	/* Buffer is not full */
     aac:	8c 14       	cp	r8, r12
     aae:	9d 04       	cpc	r9, r13
     ab0:	ae 04       	cpc	r10, r14
     ab2:	bf 04       	cpc	r11, r15
     ab4:	08 f4       	brcc	.+2      	; 0xab8 <BUFFER_ReadString+0x70>
     ab6:	51 c0       	rjmp	.+162    	; 0xb5a <BUFFER_ReadString+0x112>
			fullMem < buffsize                                         	/* User buffer size is larger than number of elements in buffer */
		)
	) {
		return 0;											/* Return with no elements read */
	}
	while (i < (buffsize - 1)) {							/* If available buffer size is more than 0 characters */
     ab8:	26 01       	movw	r4, r12
     aba:	37 01       	movw	r6, r14
     abc:	f1 e0       	ldi	r31, 0x01	; 1
     abe:	4f 1a       	sub	r4, r31
     ac0:	51 08       	sbc	r5, r1
     ac2:	61 08       	sbc	r6, r1
     ac4:	71 08       	sbc	r7, r1
     ac6:	29 f1       	breq	.+74     	; 0xb12 <BUFFER_ReadString+0xca>
     ac8:	71 01       	movw	r14, r2
     aca:	81 2c       	mov	r8, r1
     acc:	91 2c       	mov	r9, r1
     ace:	54 01       	movw	r10, r8
		BUFFER_Read(Buffer, &ch, 1);						/* We have available data */
     ad0:	21 e0       	ldi	r18, 0x01	; 1
     ad2:	30 e0       	ldi	r19, 0x00	; 0
     ad4:	40 e0       	ldi	r20, 0x00	; 0
     ad6:	50 e0       	ldi	r21, 0x00	; 0
     ad8:	be 01       	movw	r22, r28
     ada:	6f 5f       	subi	r22, 0xFF	; 255
     adc:	7f 4f       	sbci	r23, 0xFF	; 255
     ade:	c8 01       	movw	r24, r16
     ae0:	4d dd       	rcall	.-1382   	; 0x57c <BUFFER_Read>
		buff[i] = (char)ch;									/* Save character */
     ae2:	89 81       	ldd	r24, Y+1	; 0x01
     ae4:	f7 01       	movw	r30, r14
     ae6:	81 93       	st	Z+, r24
     ae8:	7f 01       	movw	r14, r30
		if ((char)buff[i] == (char)Buffer->StringDelimiter) {	/* Check for end of string */
     aea:	f8 01       	movw	r30, r16
     aec:	97 85       	ldd	r25, Z+15	; 0x0f
     aee:	89 17       	cp	r24, r25
     af0:	51 f0       	breq	.+20     	; 0xb06 <BUFFER_ReadString+0xbe>
			break;											/* Done */
		}
		i++;												/* Increase */
     af2:	ff ef       	ldi	r31, 0xFF	; 255
     af4:	8f 1a       	sub	r8, r31
     af6:	9f 0a       	sbc	r9, r31
     af8:	af 0a       	sbc	r10, r31
     afa:	bf 0a       	sbc	r11, r31
			fullMem < buffsize                                         	/* User buffer size is larger than number of elements in buffer */
		)
	) {
		return 0;											/* Return with no elements read */
	}
	while (i < (buffsize - 1)) {							/* If available buffer size is more than 0 characters */
     afc:	84 14       	cp	r8, r4
     afe:	95 04       	cpc	r9, r5
     b00:	a6 04       	cpc	r10, r6
     b02:	b7 04       	cpc	r11, r7
     b04:	28 f3       	brcs	.-54     	; 0xad0 <BUFFER_ReadString+0x88>
		if ((char)buff[i] == (char)Buffer->StringDelimiter) {	/* Check for end of string */
			break;											/* Done */
		}
		i++;												/* Increase */
	}
	if (i == (buffsize - 1)) {								/* Add zero to the end of string */
     b06:	48 14       	cp	r4, r8
     b08:	59 04       	cpc	r5, r9
     b0a:	6a 04       	cpc	r6, r10
     b0c:	7b 04       	cpc	r7, r11
     b0e:	69 f4       	brne	.+26     	; 0xb2a <BUFFER_ReadString+0xe2>
     b10:	03 c0       	rjmp	.+6      	; 0xb18 <BUFFER_ReadString+0xd0>
			fullMem < buffsize                                         	/* User buffer size is larger than number of elements in buffer */
		)
	) {
		return 0;											/* Return with no elements read */
	}
	while (i < (buffsize - 1)) {							/* If available buffer size is more than 0 characters */
     b12:	81 2c       	mov	r8, r1
     b14:	91 2c       	mov	r9, r1
     b16:	54 01       	movw	r10, r8
			break;											/* Done */
		}
		i++;												/* Increase */
	}
	if (i == (buffsize - 1)) {								/* Add zero to the end of string */
		buff[i] = 0;
     b18:	f1 01       	movw	r30, r2
     b1a:	e8 0d       	add	r30, r8
     b1c:	f9 1d       	adc	r31, r9
     b1e:	10 82       	st	Z, r1
     b20:	68 2d       	mov	r22, r8
     b22:	79 2d       	mov	r23, r9
     b24:	8a 2d       	mov	r24, r10
     b26:	9b 2d       	mov	r25, r11
     b28:	1c c0       	rjmp	.+56     	; 0xb62 <BUFFER_ReadString+0x11a>
	} else {
		buff[++i] = 0;
     b2a:	8f ef       	ldi	r24, 0xFF	; 255
     b2c:	88 1a       	sub	r8, r24
     b2e:	98 0a       	sbc	r9, r24
     b30:	a8 0a       	sbc	r10, r24
     b32:	b8 0a       	sbc	r11, r24
     b34:	f1 01       	movw	r30, r2
     b36:	e8 0d       	add	r30, r8
     b38:	f9 1d       	adc	r31, r9
     b3a:	10 82       	st	Z, r1
     b3c:	68 2d       	mov	r22, r8
     b3e:	79 2d       	mov	r23, r9
     b40:	8a 2d       	mov	r24, r10
     b42:	9b 2d       	mov	r25, r11
     b44:	0e c0       	rjmp	.+28     	; 0xb62 <BUFFER_ReadString+0x11a>

uint32_t BUFFER_ReadString(BUFFER_t* Buffer, char* buff, uint32_t buffsize) {
	uint32_t i = 0, freeMem, fullMem;
	uint8_t ch;
	if (Buffer == NULL) {
		return 0;											/* Check value buffer */
     b46:	60 e0       	ldi	r22, 0x00	; 0
     b48:	70 e0       	ldi	r23, 0x00	; 0
     b4a:	80 e0       	ldi	r24, 0x00	; 0
     b4c:	90 e0       	ldi	r25, 0x00	; 0
     b4e:	09 c0       	rjmp	.+18     	; 0xb62 <BUFFER_ReadString+0x11a>
			BUFFER_FindElement(Buffer, Buffer->StringDelimiter) < 0 && 	/* String delimiter is not in buffer */
			freeMem != 0 &&                                            	/* Buffer is not full */
			fullMem < buffsize                                         	/* User buffer size is larger than number of elements in buffer */
		)
	) {
		return 0;											/* Return with no elements read */
     b50:	60 e0       	ldi	r22, 0x00	; 0
     b52:	70 e0       	ldi	r23, 0x00	; 0
     b54:	80 e0       	ldi	r24, 0x00	; 0
     b56:	90 e0       	ldi	r25, 0x00	; 0
     b58:	04 c0       	rjmp	.+8      	; 0xb62 <BUFFER_ReadString+0x11a>
     b5a:	60 e0       	ldi	r22, 0x00	; 0
     b5c:	70 e0       	ldi	r23, 0x00	; 0
     b5e:	80 e0       	ldi	r24, 0x00	; 0
     b60:	90 e0       	ldi	r25, 0x00	; 0
		buff[i] = 0;
	} else {
		buff[++i] = 0;
	}
	return i;												/* Return number of characters in buffer */
}
     b62:	0f 90       	pop	r0
     b64:	df 91       	pop	r29
     b66:	cf 91       	pop	r28
     b68:	1f 91       	pop	r17
     b6a:	0f 91       	pop	r16
     b6c:	ff 90       	pop	r15
     b6e:	ef 90       	pop	r14
     b70:	df 90       	pop	r13
     b72:	cf 90       	pop	r12
     b74:	bf 90       	pop	r11
     b76:	af 90       	pop	r10
     b78:	9f 90       	pop	r9
     b7a:	8f 90       	pop	r8
     b7c:	7f 90       	pop	r7
     b7e:	6f 90       	pop	r6
     b80:	5f 90       	pop	r5
     b82:	4f 90       	pop	r4
     b84:	3f 90       	pop	r3
     b86:	2f 90       	pop	r2
     b88:	08 95       	ret

00000b8a <ParseNumber>:
    ESP8266_USARTSENDCHAR(&c);
    ESP8266_USARTSENDSTRING(ESP8266_CRLF);
    SendCommand(ESP8266, ESP8266_COMMAND_AUTOCONN, NULL, NULL); /* Send command */
    
    return ESP8266_WaitReady(ESP8266);                      /* Wait till end */
}
     b8a:	cf 92       	push	r12
     b8c:	df 92       	push	r13
     b8e:	ef 92       	push	r14
     b90:	ff 92       	push	r15
     b92:	0f 93       	push	r16
     b94:	1f 93       	push	r17
     b96:	fc 01       	movw	r30, r24
     b98:	db 01       	movw	r26, r22
     b9a:	80 81       	ld	r24, Z
     b9c:	8d 32       	cpi	r24, 0x2D	; 45
     b9e:	19 f4       	brne	.+6      	; 0xba6 <ParseNumber+0x1c>
     ba0:	31 96       	adiw	r30, 0x01	; 1
     ba2:	91 e0       	ldi	r25, 0x01	; 1
     ba4:	01 c0       	rjmp	.+2      	; 0xba8 <ParseNumber+0x1e>
     ba6:	90 e0       	ldi	r25, 0x00	; 0
     ba8:	00 81       	ld	r16, Z
     baa:	80 ed       	ldi	r24, 0xD0	; 208
     bac:	80 0f       	add	r24, r16
     bae:	8a 30       	cpi	r24, 0x0A	; 10
     bb0:	48 f5       	brcc	.+82     	; 0xc04 <ParseNumber+0x7a>
     bb2:	31 96       	adiw	r30, 0x01	; 1
     bb4:	89 2f       	mov	r24, r25
     bb6:	40 e0       	ldi	r20, 0x00	; 0
     bb8:	50 e0       	ldi	r21, 0x00	; 0
     bba:	ba 01       	movw	r22, r20
     bbc:	44 0f       	add	r20, r20
     bbe:	55 1f       	adc	r21, r21
     bc0:	66 1f       	adc	r22, r22
     bc2:	77 1f       	adc	r23, r23
     bc4:	6a 01       	movw	r12, r20
     bc6:	7b 01       	movw	r14, r22
     bc8:	cc 0c       	add	r12, r12
     bca:	dd 1c       	adc	r13, r13
     bcc:	ee 1c       	adc	r14, r14
     bce:	ff 1c       	adc	r15, r15
     bd0:	cc 0c       	add	r12, r12
     bd2:	dd 1c       	adc	r13, r13
     bd4:	ee 1c       	adc	r14, r14
     bd6:	ff 1c       	adc	r15, r15
     bd8:	4c 0d       	add	r20, r12
     bda:	5d 1d       	adc	r21, r13
     bdc:	6e 1d       	adc	r22, r14
     bde:	7f 1d       	adc	r23, r15
     be0:	10 e0       	ldi	r17, 0x00	; 0
     be2:	00 53       	subi	r16, 0x30	; 48
     be4:	11 09       	sbc	r17, r1
     be6:	01 2e       	mov	r0, r17
     be8:	00 0c       	add	r0, r0
     bea:	22 0b       	sbc	r18, r18
     bec:	33 0b       	sbc	r19, r19
     bee:	40 0f       	add	r20, r16
     bf0:	51 1f       	adc	r21, r17
     bf2:	62 1f       	adc	r22, r18
     bf4:	73 1f       	adc	r23, r19
     bf6:	8f 5f       	subi	r24, 0xFF	; 255
     bf8:	01 91       	ld	r16, Z+
     bfa:	20 ed       	ldi	r18, 0xD0	; 208
     bfc:	20 0f       	add	r18, r16
     bfe:	2a 30       	cpi	r18, 0x0A	; 10
     c00:	e8 f2       	brcs	.-70     	; 0xbbc <ParseNumber+0x32>
     c02:	04 c0       	rjmp	.+8      	; 0xc0c <ParseNumber+0x82>
     c04:	89 2f       	mov	r24, r25
     c06:	40 e0       	ldi	r20, 0x00	; 0
     c08:	50 e0       	ldi	r21, 0x00	; 0
     c0a:	ba 01       	movw	r22, r20
     c0c:	10 97       	sbiw	r26, 0x00	; 0
     c0e:	09 f0       	breq	.+2      	; 0xc12 <ParseNumber+0x88>
     c10:	8c 93       	st	X, r24
     c12:	99 23       	and	r25, r25
     c14:	51 f0       	breq	.+20     	; 0xc2a <ParseNumber+0xa0>
     c16:	8a 01       	movw	r16, r20
     c18:	9b 01       	movw	r18, r22
     c1a:	66 27       	eor	r22, r22
     c1c:	77 27       	eor	r23, r23
     c1e:	cb 01       	movw	r24, r22
     c20:	60 1b       	sub	r22, r16
     c22:	71 0b       	sbc	r23, r17
     c24:	82 0b       	sbc	r24, r18
     c26:	93 0b       	sbc	r25, r19
     c28:	02 c0       	rjmp	.+4      	; 0xc2e <ParseNumber+0xa4>
     c2a:	cb 01       	movw	r24, r22
     c2c:	ba 01       	movw	r22, r20
     c2e:	1f 91       	pop	r17
     c30:	0f 91       	pop	r16
     c32:	ff 90       	pop	r15
     c34:	ef 90       	pop	r14
     c36:	df 90       	pop	r13
     c38:	cf 90       	pop	r12
     c3a:	08 95       	ret

00000c3c <EscapeStringAndSend>:
     c3c:	ef 92       	push	r14
     c3e:	ff 92       	push	r15
     c40:	0f 93       	push	r16
     c42:	1f 93       	push	r17
     c44:	cf 93       	push	r28
     c46:	df 93       	push	r29
     c48:	1f 92       	push	r1
     c4a:	cd b7       	in	r28, 0x3d	; 61
     c4c:	de b7       	in	r29, 0x3e	; 62
     c4e:	8c 01       	movw	r16, r24
     c50:	8c e5       	ldi	r24, 0x5C	; 92
     c52:	89 83       	std	Y+1, r24	; 0x01
     c54:	f8 01       	movw	r30, r16
     c56:	90 81       	ld	r25, Z
     c58:	99 23       	and	r25, r25
     c5a:	d9 f0       	breq	.+54     	; 0xc92 <EscapeStringAndSend+0x56>
     c5c:	01 c0       	rjmp	.+2      	; 0xc60 <EscapeStringAndSend+0x24>
     c5e:	87 01       	movw	r16, r14
     c60:	9c 32       	cpi	r25, 0x2C	; 44
     c62:	21 f0       	breq	.+8      	; 0xc6c <EscapeStringAndSend+0x30>
     c64:	92 32       	cpi	r25, 0x22	; 34
     c66:	11 f0       	breq	.+4      	; 0xc6c <EscapeStringAndSend+0x30>
     c68:	9c 35       	cpi	r25, 0x5C	; 92
     c6a:	31 f4       	brne	.+12     	; 0xc78 <EscapeStringAndSend+0x3c>
     c6c:	61 e0       	ldi	r22, 0x01	; 1
     c6e:	70 e0       	ldi	r23, 0x00	; 0
     c70:	ce 01       	movw	r24, r28
     c72:	01 96       	adiw	r24, 0x01	; 1
     c74:	0e 94 96 1c 	call	0x392c	; 0x392c <ESP8266_LL_USARTSend>
     c78:	78 01       	movw	r14, r16
     c7a:	ff ef       	ldi	r31, 0xFF	; 255
     c7c:	ef 1a       	sub	r14, r31
     c7e:	ff 0a       	sbc	r15, r31
     c80:	61 e0       	ldi	r22, 0x01	; 1
     c82:	70 e0       	ldi	r23, 0x00	; 0
     c84:	c8 01       	movw	r24, r16
     c86:	0e 94 96 1c 	call	0x392c	; 0x392c <ESP8266_LL_USARTSend>
     c8a:	f8 01       	movw	r30, r16
     c8c:	91 81       	ldd	r25, Z+1	; 0x01
     c8e:	91 11       	cpse	r25, r1
     c90:	e6 cf       	rjmp	.-52     	; 0xc5e <EscapeStringAndSend+0x22>
     c92:	0f 90       	pop	r0
     c94:	df 91       	pop	r29
     c96:	cf 91       	pop	r28
     c98:	1f 91       	pop	r17
     c9a:	0f 91       	pop	r16
     c9c:	ff 90       	pop	r15
     c9e:	ef 90       	pop	r14
     ca0:	08 95       	ret

00000ca2 <ParseIP>:
     ca2:	af 92       	push	r10
     ca4:	bf 92       	push	r11
     ca6:	cf 92       	push	r12
     ca8:	df 92       	push	r13
     caa:	ef 92       	push	r14
     cac:	ff 92       	push	r15
     cae:	1f 93       	push	r17
     cb0:	cf 93       	push	r28
     cb2:	df 93       	push	r29
     cb4:	cd b7       	in	r28, 0x3d	; 61
     cb6:	de b7       	in	r29, 0x3e	; 62
     cb8:	63 97       	sbiw	r28, 0x13	; 19
     cba:	0f b6       	in	r0, 0x3f	; 63
     cbc:	f8 94       	cli
     cbe:	de bf       	out	0x3e, r29	; 62
     cc0:	0f be       	out	0x3f, r0	; 63
     cc2:	cd bf       	out	0x3d, r28	; 61
     cc4:	fc 01       	movw	r30, r24
     cc6:	6b 01       	movw	r12, r22
     cc8:	5a 01       	movw	r10, r20
     cca:	9f e0       	ldi	r25, 0x0F	; 15
     ccc:	de 01       	movw	r26, r28
     cce:	14 96       	adiw	r26, 0x04	; 4
     cd0:	01 90       	ld	r0, Z+
     cd2:	0d 92       	st	X+, r0
     cd4:	9a 95       	dec	r25
     cd6:	e1 f7       	brne	.-8      	; 0xcd0 <ParseIP+0x2e>
     cd8:	1b 8a       	std	Y+19, r1	; 0x13
     cda:	ae 01       	movw	r20, r28
     cdc:	4f 5f       	subi	r20, 0xFF	; 255
     cde:	5f 4f       	sbci	r21, 0xFF	; 255
     ce0:	64 e1       	ldi	r22, 0x14	; 20
     ce2:	72 e0       	ldi	r23, 0x02	; 2
     ce4:	ce 01       	movw	r24, r28
     ce6:	04 96       	adiw	r24, 0x04	; 4
     ce8:	0e 94 b0 20 	call	0x4160	; 0x4160 <strtok_r>
     cec:	00 97       	sbiw	r24, 0x00	; 0
     cee:	01 f5       	brne	.+64     	; 0xd30 <ParseIP+0x8e>
     cf0:	10 e0       	ldi	r17, 0x00	; 0
     cf2:	18 c0       	rjmp	.+48     	; 0xd24 <ParseIP+0x82>
     cf4:	be 01       	movw	r22, r28
     cf6:	6d 5f       	subi	r22, 0xFD	; 253
     cf8:	7f 4f       	sbci	r23, 0xFF	; 255
     cfa:	47 df       	rcall	.-370    	; 0xb8a <ParseNumber>
     cfc:	f7 01       	movw	r30, r14
     cfe:	61 93       	st	Z+, r22
     d00:	7f 01       	movw	r14, r30
     d02:	8b 81       	ldd	r24, Y+3	; 0x03
     d04:	18 0f       	add	r17, r24
     d06:	ec 15       	cp	r30, r12
     d08:	fd 05       	cpc	r31, r13
     d0a:	61 f0       	breq	.+24     	; 0xd24 <ParseIP+0x82>
     d0c:	1f 5f       	subi	r17, 0xFF	; 255
     d0e:	ae 01       	movw	r20, r28
     d10:	4f 5f       	subi	r20, 0xFF	; 255
     d12:	5f 4f       	sbci	r21, 0xFF	; 255
     d14:	64 e1       	ldi	r22, 0x14	; 20
     d16:	72 e0       	ldi	r23, 0x02	; 2
     d18:	80 e0       	ldi	r24, 0x00	; 0
     d1a:	90 e0       	ldi	r25, 0x00	; 0
     d1c:	0e 94 b0 20 	call	0x4160	; 0x4160 <strtok_r>
     d20:	00 97       	sbiw	r24, 0x00	; 0
     d22:	41 f7       	brne	.-48     	; 0xcf4 <ParseIP+0x52>
     d24:	a1 14       	cp	r10, r1
     d26:	b1 04       	cpc	r11, r1
     d28:	79 f0       	breq	.+30     	; 0xd48 <ParseIP+0xa6>
     d2a:	f5 01       	movw	r30, r10
     d2c:	10 83       	st	Z, r17
     d2e:	0c c0       	rjmp	.+24     	; 0xd48 <ParseIP+0xa6>
     d30:	be 01       	movw	r22, r28
     d32:	6d 5f       	subi	r22, 0xFD	; 253
     d34:	7f 4f       	sbci	r23, 0xFF	; 255
     d36:	29 df       	rcall	.-430    	; 0xb8a <ParseNumber>
     d38:	f6 01       	movw	r30, r12
     d3a:	61 93       	st	Z+, r22
     d3c:	7f 01       	movw	r14, r30
     d3e:	1b 81       	ldd	r17, Y+3	; 0x03
     d40:	f4 e0       	ldi	r31, 0x04	; 4
     d42:	cf 0e       	add	r12, r31
     d44:	d1 1c       	adc	r13, r1
     d46:	e2 cf       	rjmp	.-60     	; 0xd0c <ParseIP+0x6a>
     d48:	63 96       	adiw	r28, 0x13	; 19
     d4a:	0f b6       	in	r0, 0x3f	; 63
     d4c:	f8 94       	cli
     d4e:	de bf       	out	0x3e, r29	; 62
     d50:	0f be       	out	0x3f, r0	; 63
     d52:	cd bf       	out	0x3d, r28	; 61
     d54:	df 91       	pop	r29
     d56:	cf 91       	pop	r28
     d58:	1f 91       	pop	r17
     d5a:	ff 90       	pop	r15
     d5c:	ef 90       	pop	r14
     d5e:	df 90       	pop	r13
     d60:	cf 90       	pop	r12
     d62:	bf 90       	pop	r11
     d64:	af 90       	pop	r10
     d66:	08 95       	ret

00000d68 <ParseCIPSTA>:
     d68:	0f 93       	push	r16
     d6a:	1f 93       	push	r17
     d6c:	cf 93       	push	r28
     d6e:	df 93       	push	r29
     d70:	ec 01       	movw	r28, r24
     d72:	8b 01       	movw	r16, r22
     d74:	4e e0       	ldi	r20, 0x0E	; 14
     d76:	50 e0       	ldi	r21, 0x00	; 0
     d78:	86 e1       	ldi	r24, 0x16	; 22
     d7a:	92 e0       	ldi	r25, 0x02	; 2
     d7c:	0e 94 88 20 	call	0x4110	; 0x4110 <strncmp>
     d80:	89 2b       	or	r24, r25
     d82:	09 f4       	brne	.+2      	; 0xd86 <ParseCIPSTA+0x1e>
     d84:	6f c0       	rjmp	.+222    	; 0xe64 <ParseCIPSTA+0xfc>
     d86:	43 e1       	ldi	r20, 0x13	; 19
     d88:	50 e0       	ldi	r21, 0x00	; 0
     d8a:	b8 01       	movw	r22, r16
     d8c:	85 e2       	ldi	r24, 0x25	; 37
     d8e:	92 e0       	ldi	r25, 0x02	; 2
     d90:	0e 94 88 20 	call	0x4110	; 0x4110 <strncmp>
     d94:	89 2b       	or	r24, r25
     d96:	09 f4       	brne	.+2      	; 0xd9a <ParseCIPSTA+0x32>
     d98:	79 c0       	rjmp	.+242    	; 0xe8c <ParseCIPSTA+0x124>
     d9a:	43 e1       	ldi	r20, 0x13	; 19
     d9c:	50 e0       	ldi	r21, 0x00	; 0
     d9e:	b8 01       	movw	r22, r16
     da0:	89 e3       	ldi	r24, 0x39	; 57
     da2:	92 e0       	ldi	r25, 0x02	; 2
     da4:	0e 94 88 20 	call	0x4110	; 0x4110 <strncmp>
     da8:	89 2b       	or	r24, r25
     daa:	09 f4       	brne	.+2      	; 0xdae <ParseCIPSTA+0x46>
     dac:	82 c0       	rjmp	.+260    	; 0xeb2 <ParseCIPSTA+0x14a>
     dae:	4a e0       	ldi	r20, 0x0A	; 10
     db0:	50 e0       	ldi	r21, 0x00	; 0
     db2:	b8 01       	movw	r22, r16
     db4:	8d e4       	ldi	r24, 0x4D	; 77
     db6:	92 e0       	ldi	r25, 0x02	; 2
     db8:	0e 94 88 20 	call	0x4110	; 0x4110 <strncmp>
     dbc:	89 2b       	or	r24, r25
     dbe:	09 f4       	brne	.+2      	; 0xdc2 <ParseCIPSTA+0x5a>
     dc0:	53 c0       	rjmp	.+166    	; 0xe68 <ParseCIPSTA+0x100>
     dc2:	4f e0       	ldi	r20, 0x0F	; 15
     dc4:	50 e0       	ldi	r21, 0x00	; 0
     dc6:	b8 01       	movw	r22, r16
     dc8:	88 e5       	ldi	r24, 0x58	; 88
     dca:	92 e0       	ldi	r25, 0x02	; 2
     dcc:	0e 94 88 20 	call	0x4110	; 0x4110 <strncmp>
     dd0:	89 2b       	or	r24, r25
     dd2:	09 f4       	brne	.+2      	; 0xdd6 <ParseCIPSTA+0x6e>
     dd4:	5d c0       	rjmp	.+186    	; 0xe90 <ParseCIPSTA+0x128>
     dd6:	4f e0       	ldi	r20, 0x0F	; 15
     dd8:	50 e0       	ldi	r21, 0x00	; 0
     dda:	b8 01       	movw	r22, r16
     ddc:	88 e6       	ldi	r24, 0x68	; 104
     dde:	92 e0       	ldi	r25, 0x02	; 2
     de0:	0e 94 88 20 	call	0x4110	; 0x4110 <strncmp>
     de4:	89 2b       	or	r24, r25
     de6:	09 f4       	brne	.+2      	; 0xdea <ParseCIPSTA+0x82>
     de8:	66 c0       	rjmp	.+204    	; 0xeb6 <ParseCIPSTA+0x14e>
     dea:	4d e0       	ldi	r20, 0x0D	; 13
     dec:	50 e0       	ldi	r21, 0x00	; 0
     dee:	b8 01       	movw	r22, r16
     df0:	88 e7       	ldi	r24, 0x78	; 120
     df2:	92 e0       	ldi	r25, 0x02	; 2
     df4:	0e 94 88 20 	call	0x4110	; 0x4110 <strncmp>
     df8:	89 2b       	or	r24, r25
     dfa:	09 f4       	brne	.+2      	; 0xdfe <ParseCIPSTA+0x96>
     dfc:	6d c0       	rjmp	.+218    	; 0xed8 <ParseCIPSTA+0x170>
     dfe:	42 e1       	ldi	r20, 0x12	; 18
     e00:	50 e0       	ldi	r21, 0x00	; 0
     e02:	b8 01       	movw	r22, r16
     e04:	86 e8       	ldi	r24, 0x86	; 134
     e06:	92 e0       	ldi	r25, 0x02	; 2
     e08:	0e 94 88 20 	call	0x4110	; 0x4110 <strncmp>
     e0c:	89 2b       	or	r24, r25
     e0e:	09 f4       	brne	.+2      	; 0xe12 <ParseCIPSTA+0xaa>
     e10:	76 c0       	rjmp	.+236    	; 0xefe <ParseCIPSTA+0x196>
     e12:	42 e1       	ldi	r20, 0x12	; 18
     e14:	50 e0       	ldi	r21, 0x00	; 0
     e16:	b8 01       	movw	r22, r16
     e18:	89 e9       	ldi	r24, 0x99	; 153
     e1a:	92 e0       	ldi	r25, 0x02	; 2
     e1c:	0e 94 88 20 	call	0x4110	; 0x4110 <strncmp>
     e20:	89 2b       	or	r24, r25
     e22:	09 f4       	brne	.+2      	; 0xe26 <ParseCIPSTA+0xbe>
     e24:	7f c0       	rjmp	.+254    	; 0xf24 <ParseCIPSTA+0x1bc>
     e26:	49 e0       	ldi	r20, 0x09	; 9
     e28:	50 e0       	ldi	r21, 0x00	; 0
     e2a:	b8 01       	movw	r22, r16
     e2c:	8c ea       	ldi	r24, 0xAC	; 172
     e2e:	92 e0       	ldi	r25, 0x02	; 2
     e30:	0e 94 88 20 	call	0x4110	; 0x4110 <strncmp>
     e34:	89 2b       	or	r24, r25
     e36:	09 f4       	brne	.+2      	; 0xe3a <ParseCIPSTA+0xd2>
     e38:	51 c0       	rjmp	.+162    	; 0xedc <ParseCIPSTA+0x174>
     e3a:	4e e0       	ldi	r20, 0x0E	; 14
     e3c:	50 e0       	ldi	r21, 0x00	; 0
     e3e:	b8 01       	movw	r22, r16
     e40:	86 eb       	ldi	r24, 0xB6	; 182
     e42:	92 e0       	ldi	r25, 0x02	; 2
     e44:	0e 94 88 20 	call	0x4110	; 0x4110 <strncmp>
     e48:	89 2b       	or	r24, r25
     e4a:	09 f4       	brne	.+2      	; 0xe4e <ParseCIPSTA+0xe6>
     e4c:	5a c0       	rjmp	.+180    	; 0xf02 <ParseCIPSTA+0x19a>
     e4e:	4e e0       	ldi	r20, 0x0E	; 14
     e50:	50 e0       	ldi	r21, 0x00	; 0
     e52:	b8 01       	movw	r22, r16
     e54:	85 ec       	ldi	r24, 0xC5	; 197
     e56:	92 e0       	ldi	r25, 0x02	; 2
     e58:	0e 94 88 20 	call	0x4110	; 0x4110 <strncmp>
     e5c:	89 2b       	or	r24, r25
     e5e:	09 f4       	brne	.+2      	; 0xe62 <ParseCIPSTA+0xfa>
     e60:	63 c0       	rjmp	.+198    	; 0xf28 <ParseCIPSTA+0x1c0>
     e62:	72 c0       	rjmp	.+228    	; 0xf48 <ParseCIPSTA+0x1e0>
     e64:	2e e0       	ldi	r18, 0x0E	; 14
     e66:	01 c0       	rjmp	.+2      	; 0xe6a <ParseCIPSTA+0x102>
     e68:	2a e0       	ldi	r18, 0x0A	; 10
     e6a:	be 01       	movw	r22, r28
     e6c:	67 53       	subi	r22, 0x37	; 55
     e6e:	7f 4f       	sbci	r23, 0xFF	; 255
     e70:	30 e0       	ldi	r19, 0x00	; 0
     e72:	c9 01       	movw	r24, r18
     e74:	02 96       	adiw	r24, 0x02	; 2
     e76:	40 e0       	ldi	r20, 0x00	; 0
     e78:	50 e0       	ldi	r21, 0x00	; 0
     e7a:	80 0f       	add	r24, r16
     e7c:	91 1f       	adc	r25, r17
     e7e:	11 df       	rcall	.-478    	; 0xca2 <ParseIP>
     e80:	c2 5b       	subi	r28, 0xB2	; 178
     e82:	de 4f       	sbci	r29, 0xFE	; 254
     e84:	88 81       	ld	r24, Y
     e86:	81 60       	ori	r24, 0x01	; 1
     e88:	88 83       	st	Y, r24
     e8a:	5e c0       	rjmp	.+188    	; 0xf48 <ParseCIPSTA+0x1e0>
     e8c:	83 e1       	ldi	r24, 0x13	; 19
     e8e:	01 c0       	rjmp	.+2      	; 0xe92 <ParseCIPSTA+0x12a>
     e90:	8f e0       	ldi	r24, 0x0F	; 15
     e92:	be 01       	movw	r22, r28
     e94:	6f 52       	subi	r22, 0x2F	; 47
     e96:	7f 4f       	sbci	r23, 0xFF	; 255
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	02 96       	adiw	r24, 0x02	; 2
     e9c:	40 e0       	ldi	r20, 0x00	; 0
     e9e:	50 e0       	ldi	r21, 0x00	; 0
     ea0:	80 0f       	add	r24, r16
     ea2:	91 1f       	adc	r25, r17
     ea4:	fe de       	rcall	.-516    	; 0xca2 <ParseIP>
     ea6:	c2 5b       	subi	r28, 0xB2	; 178
     ea8:	de 4f       	sbci	r29, 0xFE	; 254
     eaa:	88 81       	ld	r24, Y
     eac:	82 60       	ori	r24, 0x02	; 2
     eae:	88 83       	st	Y, r24
     eb0:	4b c0       	rjmp	.+150    	; 0xf48 <ParseCIPSTA+0x1e0>
     eb2:	83 e1       	ldi	r24, 0x13	; 19
     eb4:	01 c0       	rjmp	.+2      	; 0xeb8 <ParseCIPSTA+0x150>
     eb6:	8f e0       	ldi	r24, 0x0F	; 15
     eb8:	be 01       	movw	r22, r28
     eba:	63 53       	subi	r22, 0x33	; 51
     ebc:	7f 4f       	sbci	r23, 0xFF	; 255
     ebe:	90 e0       	ldi	r25, 0x00	; 0
     ec0:	02 96       	adiw	r24, 0x02	; 2
     ec2:	40 e0       	ldi	r20, 0x00	; 0
     ec4:	50 e0       	ldi	r21, 0x00	; 0
     ec6:	80 0f       	add	r24, r16
     ec8:	91 1f       	adc	r25, r17
     eca:	eb de       	rcall	.-554    	; 0xca2 <ParseIP>
     ecc:	c2 5b       	subi	r28, 0xB2	; 178
     ece:	de 4f       	sbci	r29, 0xFE	; 254
     ed0:	88 81       	ld	r24, Y
     ed2:	84 60       	ori	r24, 0x04	; 4
     ed4:	88 83       	st	Y, r24
     ed6:	38 c0       	rjmp	.+112    	; 0xf48 <ParseCIPSTA+0x1e0>
     ed8:	8d e0       	ldi	r24, 0x0D	; 13
     eda:	01 c0       	rjmp	.+2      	; 0xede <ParseCIPSTA+0x176>
     edc:	89 e0       	ldi	r24, 0x09	; 9
     ede:	be 01       	movw	r22, r28
     ee0:	65 52       	subi	r22, 0x25	; 37
     ee2:	7f 4f       	sbci	r23, 0xFF	; 255
     ee4:	90 e0       	ldi	r25, 0x00	; 0
     ee6:	02 96       	adiw	r24, 0x02	; 2
     ee8:	40 e0       	ldi	r20, 0x00	; 0
     eea:	50 e0       	ldi	r21, 0x00	; 0
     eec:	80 0f       	add	r24, r16
     eee:	91 1f       	adc	r25, r17
     ef0:	d8 de       	rcall	.-592    	; 0xca2 <ParseIP>
     ef2:	c2 5b       	subi	r28, 0xB2	; 178
     ef4:	de 4f       	sbci	r29, 0xFE	; 254
     ef6:	88 81       	ld	r24, Y
     ef8:	80 61       	ori	r24, 0x10	; 16
     efa:	88 83       	st	Y, r24
     efc:	25 c0       	rjmp	.+74     	; 0xf48 <ParseCIPSTA+0x1e0>
     efe:	82 e1       	ldi	r24, 0x12	; 18
     f00:	01 c0       	rjmp	.+2      	; 0xf04 <ParseCIPSTA+0x19c>
     f02:	8e e0       	ldi	r24, 0x0E	; 14
     f04:	be 01       	movw	r22, r28
     f06:	6d 51       	subi	r22, 0x1D	; 29
     f08:	7f 4f       	sbci	r23, 0xFF	; 255
     f0a:	90 e0       	ldi	r25, 0x00	; 0
     f0c:	02 96       	adiw	r24, 0x02	; 2
     f0e:	40 e0       	ldi	r20, 0x00	; 0
     f10:	50 e0       	ldi	r21, 0x00	; 0
     f12:	80 0f       	add	r24, r16
     f14:	91 1f       	adc	r25, r17
     f16:	c5 de       	rcall	.-630    	; 0xca2 <ParseIP>
     f18:	c2 5b       	subi	r28, 0xB2	; 178
     f1a:	de 4f       	sbci	r29, 0xFE	; 254
     f1c:	88 81       	ld	r24, Y
     f1e:	80 62       	ori	r24, 0x20	; 32
     f20:	88 83       	st	Y, r24
     f22:	12 c0       	rjmp	.+36     	; 0xf48 <ParseCIPSTA+0x1e0>
     f24:	82 e1       	ldi	r24, 0x12	; 18
     f26:	01 c0       	rjmp	.+2      	; 0xf2a <ParseCIPSTA+0x1c2>
     f28:	8e e0       	ldi	r24, 0x0E	; 14
     f2a:	be 01       	movw	r22, r28
     f2c:	61 52       	subi	r22, 0x21	; 33
     f2e:	7f 4f       	sbci	r23, 0xFF	; 255
     f30:	90 e0       	ldi	r25, 0x00	; 0
     f32:	02 96       	adiw	r24, 0x02	; 2
     f34:	40 e0       	ldi	r20, 0x00	; 0
     f36:	50 e0       	ldi	r21, 0x00	; 0
     f38:	80 0f       	add	r24, r16
     f3a:	91 1f       	adc	r25, r17
     f3c:	b2 de       	rcall	.-668    	; 0xca2 <ParseIP>
     f3e:	c2 5b       	subi	r28, 0xB2	; 178
     f40:	de 4f       	sbci	r29, 0xFE	; 254
     f42:	88 81       	ld	r24, Y
     f44:	80 64       	ori	r24, 0x40	; 64
     f46:	88 83       	st	Y, r24
     f48:	df 91       	pop	r29
     f4a:	cf 91       	pop	r28
     f4c:	1f 91       	pop	r17
     f4e:	0f 91       	pop	r16
     f50:	08 95       	ret

00000f52 <ParseMAC>:
     f52:	6f 92       	push	r6
     f54:	7f 92       	push	r7
     f56:	8f 92       	push	r8
     f58:	9f 92       	push	r9
     f5a:	af 92       	push	r10
     f5c:	bf 92       	push	r11
     f5e:	cf 92       	push	r12
     f60:	df 92       	push	r13
     f62:	ef 92       	push	r14
     f64:	ff 92       	push	r15
     f66:	0f 93       	push	r16
     f68:	1f 93       	push	r17
     f6a:	cf 93       	push	r28
     f6c:	df 93       	push	r29
     f6e:	1f 92       	push	r1
     f70:	1f 92       	push	r1
     f72:	cd b7       	in	r28, 0x3d	; 61
     f74:	de b7       	in	r29, 0x3e	; 62
     f76:	7b 01       	movw	r14, r22
     f78:	6a 01       	movw	r12, r20
     f7a:	ae 01       	movw	r20, r28
     f7c:	4f 5f       	subi	r20, 0xFF	; 255
     f7e:	5f 4f       	sbci	r21, 0xFF	; 255
     f80:	67 ed       	ldi	r22, 0xD7	; 215
     f82:	73 e0       	ldi	r23, 0x03	; 3
     f84:	0e 94 b0 20 	call	0x4160	; 0x4160 <strtok_r>
     f88:	00 97       	sbiw	r24, 0x00	; 0
     f8a:	09 f4       	brne	.+2      	; 0xf8e <ParseMAC+0x3c>
     f8c:	41 c0       	rjmp	.+130    	; 0x1010 <ParseMAC+0xbe>
     f8e:	87 01       	movw	r16, r14
     f90:	26 e0       	ldi	r18, 0x06	; 6
     f92:	e2 0e       	add	r14, r18
     f94:	f1 1c       	adc	r15, r1
     f96:	a1 2c       	mov	r10, r1
     f98:	61 2c       	mov	r6, r1
     f9a:	71 2c       	mov	r7, r1
     f9c:	81 2c       	mov	r8, r1
     f9e:	91 2c       	mov	r9, r1
     fa0:	b1 2c       	mov	r11, r1
     fa2:	38 2f       	mov	r19, r24
     fa4:	e8 2f       	mov	r30, r24
     fa6:	f9 2f       	mov	r31, r25
     fa8:	86 2d       	mov	r24, r6
     faa:	97 2d       	mov	r25, r7
     fac:	a8 2d       	mov	r26, r8
     fae:	b9 2d       	mov	r27, r9
     fb0:	0f c0       	rjmp	.+30     	; 0xfd0 <ParseMAC+0x7e>
     fb2:	29 ea       	ldi	r18, 0xA9	; 169
     fb4:	24 0f       	add	r18, r20
     fb6:	08 c0       	rjmp	.+16     	; 0xfc8 <ParseMAC+0x76>
     fb8:	2f eb       	ldi	r18, 0xBF	; 191
     fba:	24 0f       	add	r18, r20
     fbc:	26 30       	cpi	r18, 0x06	; 6
     fbe:	18 f4       	brcc	.+6      	; 0xfc6 <ParseMAC+0x74>
     fc0:	29 ec       	ldi	r18, 0xC9	; 201
     fc2:	24 0f       	add	r18, r20
     fc4:	01 c0       	rjmp	.+2      	; 0xfc8 <ParseMAC+0x76>
     fc6:	2b 2d       	mov	r18, r11
     fc8:	82 0f       	add	r24, r18
     fca:	91 1d       	adc	r25, r1
     fcc:	a1 1d       	adc	r26, r1
     fce:	b1 1d       	adc	r27, r1
     fd0:	5e 2f       	mov	r21, r30
     fd2:	53 1b       	sub	r21, r19
     fd4:	41 91       	ld	r20, Z+
     fd6:	20 ed       	ldi	r18, 0xD0	; 208
     fd8:	24 0f       	add	r18, r20
     fda:	2a 30       	cpi	r18, 0x0A	; 10
     fdc:	00 f1       	brcs	.+64     	; 0x101e <ParseMAC+0xcc>
     fde:	24 2f       	mov	r18, r20
     fe0:	2f 7d       	andi	r18, 0xDF	; 223
     fe2:	21 54       	subi	r18, 0x41	; 65
     fe4:	26 30       	cpi	r18, 0x06	; 6
     fe6:	60 f1       	brcs	.+88     	; 0x1040 <ParseMAC+0xee>
     fe8:	f8 01       	movw	r30, r16
     fea:	81 93       	st	Z+, r24
     fec:	8f 01       	movw	r16, r30
     fee:	a5 0e       	add	r10, r21
     ff0:	ee 15       	cp	r30, r14
     ff2:	ff 05       	cpc	r31, r15
     ff4:	71 f0       	breq	.+28     	; 0x1012 <ParseMAC+0xc0>
     ff6:	a3 94       	inc	r10
     ff8:	ae 01       	movw	r20, r28
     ffa:	4f 5f       	subi	r20, 0xFF	; 255
     ffc:	5f 4f       	sbci	r21, 0xFF	; 255
     ffe:	67 ed       	ldi	r22, 0xD7	; 215
    1000:	73 e0       	ldi	r23, 0x03	; 3
    1002:	80 e0       	ldi	r24, 0x00	; 0
    1004:	90 e0       	ldi	r25, 0x00	; 0
    1006:	0e 94 b0 20 	call	0x4160	; 0x4160 <strtok_r>
    100a:	00 97       	sbiw	r24, 0x00	; 0
    100c:	51 f6       	brne	.-108    	; 0xfa2 <ParseMAC+0x50>
    100e:	01 c0       	rjmp	.+2      	; 0x1012 <ParseMAC+0xc0>
    1010:	a1 2c       	mov	r10, r1
    1012:	c1 14       	cp	r12, r1
    1014:	d1 04       	cpc	r13, r1
    1016:	51 f1       	breq	.+84     	; 0x106c <ParseMAC+0x11a>
    1018:	f6 01       	movw	r30, r12
    101a:	a0 82       	st	Z, r10
    101c:	27 c0       	rjmp	.+78     	; 0x106c <ParseMAC+0x11a>
    101e:	88 0f       	add	r24, r24
    1020:	99 1f       	adc	r25, r25
    1022:	aa 1f       	adc	r26, r26
    1024:	bb 1f       	adc	r27, r27
    1026:	88 0f       	add	r24, r24
    1028:	99 1f       	adc	r25, r25
    102a:	aa 1f       	adc	r26, r26
    102c:	bb 1f       	adc	r27, r27
    102e:	88 0f       	add	r24, r24
    1030:	99 1f       	adc	r25, r25
    1032:	aa 1f       	adc	r26, r26
    1034:	bb 1f       	adc	r27, r27
    1036:	88 0f       	add	r24, r24
    1038:	99 1f       	adc	r25, r25
    103a:	aa 1f       	adc	r26, r26
    103c:	bb 1f       	adc	r27, r27
    103e:	c4 cf       	rjmp	.-120    	; 0xfc8 <ParseMAC+0x76>
    1040:	88 0f       	add	r24, r24
    1042:	99 1f       	adc	r25, r25
    1044:	aa 1f       	adc	r26, r26
    1046:	bb 1f       	adc	r27, r27
    1048:	88 0f       	add	r24, r24
    104a:	99 1f       	adc	r25, r25
    104c:	aa 1f       	adc	r26, r26
    104e:	bb 1f       	adc	r27, r27
    1050:	88 0f       	add	r24, r24
    1052:	99 1f       	adc	r25, r25
    1054:	aa 1f       	adc	r26, r26
    1056:	bb 1f       	adc	r27, r27
    1058:	88 0f       	add	r24, r24
    105a:	99 1f       	adc	r25, r25
    105c:	aa 1f       	adc	r26, r26
    105e:	bb 1f       	adc	r27, r27
    1060:	2f e9       	ldi	r18, 0x9F	; 159
    1062:	24 0f       	add	r18, r20
    1064:	26 30       	cpi	r18, 0x06	; 6
    1066:	08 f0       	brcs	.+2      	; 0x106a <ParseMAC+0x118>
    1068:	a7 cf       	rjmp	.-178    	; 0xfb8 <ParseMAC+0x66>
    106a:	a3 cf       	rjmp	.-186    	; 0xfb2 <ParseMAC+0x60>
    106c:	0f 90       	pop	r0
    106e:	0f 90       	pop	r0
    1070:	df 91       	pop	r29
    1072:	cf 91       	pop	r28
    1074:	1f 91       	pop	r17
    1076:	0f 91       	pop	r16
    1078:	ff 90       	pop	r15
    107a:	ef 90       	pop	r14
    107c:	df 90       	pop	r13
    107e:	cf 90       	pop	r12
    1080:	bf 90       	pop	r11
    1082:	af 90       	pop	r10
    1084:	9f 90       	pop	r9
    1086:	8f 90       	pop	r8
    1088:	7f 90       	pop	r7
    108a:	6f 90       	pop	r6
    108c:	08 95       	ret

0000108e <Int2String>:
    108e:	7f 93       	push	r23
    1090:	6f 93       	push	r22
    1092:	5f 93       	push	r21
    1094:	4f 93       	push	r20
    1096:	24 ed       	ldi	r18, 0xD4	; 212
    1098:	32 e0       	ldi	r19, 0x02	; 2
    109a:	3f 93       	push	r19
    109c:	2f 93       	push	r18
    109e:	9f 93       	push	r25
    10a0:	8f 93       	push	r24
    10a2:	0e 94 1a 21 	call	0x4234	; 0x4234 <sprintf>
    10a6:	8d b7       	in	r24, 0x3d	; 61
    10a8:	9e b7       	in	r25, 0x3e	; 62
    10aa:	08 96       	adiw	r24, 0x08	; 8
    10ac:	0f b6       	in	r0, 0x3f	; 63
    10ae:	f8 94       	cli
    10b0:	9e bf       	out	0x3e, r25	; 62
    10b2:	0f be       	out	0x3f, r0	; 63
    10b4:	8d bf       	out	0x3d, r24	; 61
    10b6:	08 95       	ret

000010b8 <ParseReceived>:
    10b8:	4f 92       	push	r4
    10ba:	5f 92       	push	r5
    10bc:	6f 92       	push	r6
    10be:	7f 92       	push	r7
    10c0:	8f 92       	push	r8
    10c2:	9f 92       	push	r9
    10c4:	af 92       	push	r10
    10c6:	bf 92       	push	r11
    10c8:	cf 92       	push	r12
    10ca:	df 92       	push	r13
    10cc:	ef 92       	push	r14
    10ce:	ff 92       	push	r15
    10d0:	0f 93       	push	r16
    10d2:	1f 93       	push	r17
    10d4:	cf 93       	push	r28
    10d6:	df 93       	push	r29
    10d8:	1f 92       	push	r1
    10da:	1f 92       	push	r1
    10dc:	cd b7       	in	r28, 0x3d	; 61
    10de:	de b7       	in	r29, 0x3e	; 62
    10e0:	fc 01       	movw	r30, r24
    10e2:	86 85       	ldd	r24, Z+14	; 0x0e
    10e4:	97 85       	ldd	r25, Z+15	; 0x0f
    10e6:	a0 89       	ldd	r26, Z+16	; 0x10
    10e8:	b1 89       	ldd	r27, Z+17	; 0x11
    10ea:	82 8b       	std	Z+18, r24	; 0x12
    10ec:	93 8b       	std	Z+19, r25	; 0x13
    10ee:	a4 8b       	std	Z+20, r26	; 0x14
    10f0:	b5 8b       	std	Z+21, r27	; 0x15
    10f2:	42 30       	cpi	r20, 0x02	; 2
    10f4:	51 05       	cpc	r21, r1
    10f6:	49 f4       	brne	.+18     	; 0x110a <ParseReceived+0x52>
    10f8:	db 01       	movw	r26, r22
    10fa:	8c 91       	ld	r24, X
    10fc:	8d 30       	cpi	r24, 0x0D	; 13
    10fe:	29 f4       	brne	.+10     	; 0x110a <ParseReceived+0x52>
    1100:	11 96       	adiw	r26, 0x01	; 1
    1102:	8c 91       	ld	r24, X
    1104:	8a 30       	cpi	r24, 0x0A	; 10
    1106:	09 f4       	brne	.+2      	; 0x110a <ParseReceived+0x52>
    1108:	6c c6       	rjmp	.+3288   	; 0x1de2 <ParseReceived+0xd2a>
    110a:	b2 2e       	mov	r11, r18
    110c:	6a 01       	movw	r12, r20
    110e:	7b 01       	movw	r14, r22
    1110:	8f 01       	movw	r16, r30
    1112:	84 81       	ldd	r24, Z+4	; 0x04
    1114:	95 81       	ldd	r25, Z+5	; 0x05
    1116:	a6 81       	ldd	r26, Z+6	; 0x06
    1118:	b7 81       	ldd	r27, Z+7	; 0x07
    111a:	89 2b       	or	r24, r25
    111c:	8a 2b       	or	r24, r26
    111e:	8b 2b       	or	r24, r27
    1120:	09 f4       	brne	.+2      	; 0x1124 <ParseReceived+0x6c>
    1122:	59 c0       	rjmp	.+178    	; 0x11d6 <ParseReceived+0x11e>
    1124:	22 23       	and	r18, r18
    1126:	09 f4       	brne	.+2      	; 0x112a <ParseReceived+0x72>
    1128:	56 c0       	rjmp	.+172    	; 0x11d6 <ParseReceived+0x11e>
    112a:	6d ed       	ldi	r22, 0xDD	; 221
    112c:	72 e0       	ldi	r23, 0x02	; 2
    112e:	c7 01       	movw	r24, r14
    1130:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1134:	89 2b       	or	r24, r25
    1136:	09 f4       	brne	.+2      	; 0x113a <ParseReceived+0x82>
    1138:	4e c0       	rjmp	.+156    	; 0x11d6 <ParseReceived+0x11e>
    113a:	68 ed       	ldi	r22, 0xD8	; 216
    113c:	72 e0       	ldi	r23, 0x02	; 2
    113e:	c7 01       	movw	r24, r14
    1140:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1144:	89 2b       	or	r24, r25
    1146:	09 f4       	brne	.+2      	; 0x114a <ParseReceived+0x92>
    1148:	46 c0       	rjmp	.+140    	; 0x11d6 <ParseReceived+0x11e>
    114a:	62 ee       	ldi	r22, 0xE2	; 226
    114c:	72 e0       	ldi	r23, 0x02	; 2
    114e:	c7 01       	movw	r24, r14
    1150:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1154:	89 2b       	or	r24, r25
    1156:	09 f4       	brne	.+2      	; 0x115a <ParseReceived+0xa2>
    1158:	3e c0       	rjmp	.+124    	; 0x11d6 <ParseReceived+0x11e>
    115a:	6e ee       	ldi	r22, 0xEE	; 238
    115c:	72 e0       	ldi	r23, 0x02	; 2
    115e:	c7 01       	movw	r24, r14
    1160:	01 96       	adiw	r24, 0x01	; 1
    1162:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1166:	89 2b       	or	r24, r25
    1168:	b1 f1       	breq	.+108    	; 0x11d6 <ParseReceived+0x11e>
    116a:	69 ef       	ldi	r22, 0xF9	; 249
    116c:	72 e0       	ldi	r23, 0x02	; 2
    116e:	c7 01       	movw	r24, r14
    1170:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1174:	89 2b       	or	r24, r25
    1176:	79 f1       	breq	.+94     	; 0x11d6 <ParseReceived+0x11e>
    1178:	61 e0       	ldi	r22, 0x01	; 1
    117a:	73 e0       	ldi	r23, 0x03	; 3
    117c:	c7 01       	movw	r24, r14
    117e:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1182:	89 2b       	or	r24, r25
    1184:	79 f1       	breq	.+94     	; 0x11e4 <ParseReceived+0x12c>
    1186:	69 e0       	ldi	r22, 0x09	; 9
    1188:	73 e0       	ldi	r23, 0x03	; 3
    118a:	c7 01       	movw	r24, r14
    118c:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1190:	89 2b       	or	r24, r25
    1192:	79 f1       	breq	.+94     	; 0x11f2 <ParseReceived+0x13a>
    1194:	45 e0       	ldi	r20, 0x05	; 5
    1196:	50 e0       	ldi	r21, 0x00	; 0
    1198:	65 e1       	ldi	r22, 0x15	; 21
    119a:	73 e0       	ldi	r23, 0x03	; 3
    119c:	c7 01       	movw	r24, r14
    119e:	0e 94 88 20 	call	0x4110	; 0x4110 <strncmp>
    11a2:	89 2b       	or	r24, r25
    11a4:	31 f1       	breq	.+76     	; 0x11f2 <ParseReceived+0x13a>
    11a6:	f8 01       	movw	r30, r16
    11a8:	60 85       	ldd	r22, Z+8	; 0x08
    11aa:	71 85       	ldd	r23, Z+9	; 0x09
    11ac:	fb 01       	movw	r30, r22
    11ae:	01 90       	ld	r0, Z+
    11b0:	00 20       	and	r0, r0
    11b2:	e9 f7       	brne	.-6      	; 0x11ae <ParseReceived+0xf6>
    11b4:	31 97       	sbiw	r30, 0x01	; 1
    11b6:	af 01       	movw	r20, r30
    11b8:	46 1b       	sub	r20, r22
    11ba:	57 0b       	sbc	r21, r23
    11bc:	c7 01       	movw	r24, r14
    11be:	0e 94 88 20 	call	0x4110	; 0x4110 <strncmp>
    11c2:	89 2b       	or	r24, r25
    11c4:	b1 f0       	breq	.+44     	; 0x11f2 <ParseReceived+0x13a>
    11c6:	b7 01       	movw	r22, r14
    11c8:	86 ea       	ldi	r24, 0xA6	; 166
    11ca:	90 e1       	ldi	r25, 0x10	; 16
    11cc:	31 dc       	rcall	.-1950   	; 0xa30 <BUFFER_WriteString>
    11ce:	60 e0       	ldi	r22, 0x00	; 0
    11d0:	70 e0       	ldi	r23, 0x00	; 0
    11d2:	cb 01       	movw	r24, r22
    11d4:	4f c6       	rjmp	.+3230   	; 0x1e74 <ParseReceived+0xdbc>
    11d6:	61 e0       	ldi	r22, 0x01	; 1
    11d8:	73 e0       	ldi	r23, 0x03	; 3
    11da:	c7 01       	movw	r24, r14
    11dc:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    11e0:	89 2b       	or	r24, r25
    11e2:	39 f4       	brne	.+14     	; 0x11f2 <ParseReceived+0x13a>
    11e4:	f8 01       	movw	r30, r16
    11e6:	e2 5b       	subi	r30, 0xB2	; 178
    11e8:	fe 4f       	sbci	r31, 0xFE	; 254
    11ea:	81 81       	ldd	r24, Z+1	; 0x01
    11ec:	80 62       	ori	r24, 0x20	; 32
    11ee:	81 83       	std	Z+1, r24	; 0x01
    11f0:	ec c0       	rjmp	.+472    	; 0x13ca <ParseReceived+0x312>
    11f2:	6b e1       	ldi	r22, 0x1B	; 27
    11f4:	73 e0       	ldi	r23, 0x03	; 3
    11f6:	c7 01       	movw	r24, r14
    11f8:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    11fc:	89 2b       	or	r24, r25
    11fe:	39 f4       	brne	.+14     	; 0x120e <ParseReceived+0x156>
    1200:	f8 01       	movw	r30, r16
    1202:	e2 5b       	subi	r30, 0xB2	; 178
    1204:	fe 4f       	sbci	r31, 0xFE	; 254
    1206:	81 81       	ldd	r24, Z+1	; 0x01
    1208:	80 64       	ori	r24, 0x40	; 64
    120a:	81 83       	std	Z+1, r24	; 0x01
    120c:	de c0       	rjmp	.+444    	; 0x13ca <ParseReceived+0x312>
    120e:	67 e2       	ldi	r22, 0x27	; 39
    1210:	73 e0       	ldi	r23, 0x03	; 3
    1212:	c7 01       	movw	r24, r14
    1214:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1218:	89 2b       	or	r24, r25
    121a:	41 f4       	brne	.+16     	; 0x122c <ParseReceived+0x174>
    121c:	f8 01       	movw	r30, r16
    121e:	e2 5b       	subi	r30, 0xB2	; 178
    1220:	fe 4f       	sbci	r31, 0xFE	; 254
    1222:	81 81       	ldd	r24, Z+1	; 0x01
    1224:	84 60       	ori	r24, 0x04	; 4
    1226:	80 68       	ori	r24, 0x80	; 128
    1228:	81 83       	std	Z+1, r24	; 0x01
    122a:	cf c0       	rjmp	.+414    	; 0x13ca <ParseReceived+0x312>
    122c:	68 e3       	ldi	r22, 0x38	; 56
    122e:	73 e0       	ldi	r23, 0x03	; 3
    1230:	c7 01       	movw	r24, r14
    1232:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1236:	89 2b       	or	r24, r25
    1238:	09 f5       	brne	.+66     	; 0x127c <ParseReceived+0x1c4>
    123a:	f8 01       	movw	r30, r16
    123c:	e2 5b       	subi	r30, 0xB2	; 178
    123e:	fe 4f       	sbci	r31, 0xFE	; 254
    1240:	81 81       	ldd	r24, Z+1	; 0x01
    1242:	8b 7f       	andi	r24, 0xFB	; 251
    1244:	87 7f       	andi	r24, 0xF7	; 247
    1246:	81 83       	std	Z+1, r24	; 0x01
    1248:	82 81       	ldd	r24, Z+2	; 0x02
    124a:	81 60       	ori	r24, 0x01	; 1
    124c:	82 83       	std	Z+2, r24	; 0x02
    124e:	89 e1       	ldi	r24, 0x19	; 25
    1250:	bc 97       	sbiw	r30, 0x2c	; 44
    1252:	df 01       	movw	r26, r30
    1254:	1d 92       	st	X+, r1
    1256:	8a 95       	dec	r24
    1258:	e9 f7       	brne	.-6      	; 0x1254 <ParseReceived+0x19c>
    125a:	f8 01       	movw	r30, r16
    125c:	17 aa       	std	Z+55, r1	; 0x37
    125e:	16 aa       	std	Z+54, r1	; 0x36
    1260:	e7 5a       	subi	r30, 0xA7	; 167
    1262:	ff 4f       	sbci	r31, 0xFF	; 255
    1264:	11 82       	std	Z+1, r1	; 0x01
    1266:	10 82       	st	Z, r1
    1268:	b3 96       	adiw	r30, 0x23	; 35
    126a:	11 82       	std	Z+1, r1	; 0x01
    126c:	10 82       	st	Z, r1
    126e:	b3 96       	adiw	r30, 0x23	; 35
    1270:	11 82       	std	Z+1, r1	; 0x01
    1272:	10 82       	st	Z, r1
    1274:	b3 96       	adiw	r30, 0x23	; 35
    1276:	11 82       	std	Z+1, r1	; 0x01
    1278:	10 82       	st	Z, r1
    127a:	a7 c0       	rjmp	.+334    	; 0x13ca <ParseReceived+0x312>
    127c:	6a e4       	ldi	r22, 0x4A	; 74
    127e:	73 e0       	ldi	r23, 0x03	; 3
    1280:	c7 01       	movw	r24, r14
    1282:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1286:	89 2b       	or	r24, r25
    1288:	51 f4       	brne	.+20     	; 0x129e <ParseReceived+0x1e6>
    128a:	f8 01       	movw	r30, r16
    128c:	e2 5b       	subi	r30, 0xB2	; 178
    128e:	fe 4f       	sbci	r31, 0xFE	; 254
    1290:	81 81       	ldd	r24, Z+1	; 0x01
    1292:	88 60       	ori	r24, 0x08	; 8
    1294:	81 83       	std	Z+1, r24	; 0x01
    1296:	82 81       	ldd	r24, Z+2	; 0x02
    1298:	84 60       	ori	r24, 0x04	; 4
    129a:	82 83       	std	Z+2, r24	; 0x02
    129c:	96 c0       	rjmp	.+300    	; 0x13ca <ParseReceived+0x312>
    129e:	68 e5       	ldi	r22, 0x58	; 88
    12a0:	73 e0       	ldi	r23, 0x03	; 3
    12a2:	c7 01       	movw	r24, r14
    12a4:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    12a8:	89 2b       	or	r24, r25
    12aa:	39 f4       	brne	.+14     	; 0x12ba <ParseReceived+0x202>
    12ac:	f8 01       	movw	r30, r16
    12ae:	e2 5b       	subi	r30, 0xB2	; 178
    12b0:	fe 4f       	sbci	r31, 0xFE	; 254
    12b2:	82 81       	ldd	r24, Z+2	; 0x02
    12b4:	80 61       	ori	r24, 0x10	; 16
    12b6:	82 83       	std	Z+2, r24	; 0x02
    12b8:	88 c0       	rjmp	.+272    	; 0x13ca <ParseReceived+0x312>
    12ba:	68 ed       	ldi	r22, 0xD8	; 216
    12bc:	72 e0       	ldi	r23, 0x02	; 2
    12be:	c7 01       	movw	r24, r14
    12c0:	0e 94 96 20 	call	0x412c	; 0x412c <strstr>
    12c4:	89 2b       	or	r24, r25
    12c6:	f1 f1       	breq	.+124    	; 0x1344 <ParseReceived+0x28c>
    12c8:	d8 01       	movw	r26, r16
    12ca:	14 96       	adiw	r26, 0x04	; 4
    12cc:	1d 92       	st	X+, r1
    12ce:	1d 92       	st	X+, r1
    12d0:	1d 92       	st	X+, r1
    12d2:	1c 92       	st	X, r1
    12d4:	17 97       	sbiw	r26, 0x07	; 7
    12d6:	80 e0       	ldi	r24, 0x00	; 0
    12d8:	90 e0       	ldi	r25, 0x00	; 0
    12da:	33 e2       	ldi	r19, 0x23	; 35
    12dc:	38 9f       	mul	r19, r24
    12de:	f0 01       	movw	r30, r0
    12e0:	39 9f       	mul	r19, r25
    12e2:	f0 0d       	add	r31, r0
    12e4:	11 24       	eor	r1, r1
    12e6:	e0 0f       	add	r30, r16
    12e8:	f1 1f       	adc	r31, r17
    12ea:	26 a9       	ldd	r18, Z+54	; 0x36
    12ec:	22 ff       	sbrs	r18, 2
    12ee:	22 c0       	rjmp	.+68     	; 0x1334 <ParseReceived+0x27c>
    12f0:	38 9f       	mul	r19, r24
    12f2:	f0 01       	movw	r30, r0
    12f4:	39 9f       	mul	r19, r25
    12f6:	f0 0d       	add	r31, r0
    12f8:	11 24       	eor	r1, r1
    12fa:	e0 0f       	add	r30, r16
    12fc:	f1 1f       	adc	r31, r17
    12fe:	2b 7f       	andi	r18, 0xFB	; 251
    1300:	26 ab       	std	Z+54, r18	; 0x36
    1302:	21 ff       	sbrs	r18, 1
    1304:	0c c0       	rjmp	.+24     	; 0x131e <ParseReceived+0x266>
    1306:	38 9f       	mul	r19, r24
    1308:	f0 01       	movw	r30, r0
    130a:	39 9f       	mul	r19, r25
    130c:	f0 0d       	add	r31, r0
    130e:	11 24       	eor	r1, r1
    1310:	e0 0f       	add	r30, r16
    1312:	f1 1f       	adc	r31, r17
    1314:	f6 96       	adiw	r30, 0x36	; 54
    1316:	21 81       	ldd	r18, Z+1	; 0x01
    1318:	21 60       	ori	r18, 0x01	; 1
    131a:	21 83       	std	Z+1, r18	; 0x01
    131c:	0b c0       	rjmp	.+22     	; 0x1334 <ParseReceived+0x27c>
    131e:	38 9f       	mul	r19, r24
    1320:	f0 01       	movw	r30, r0
    1322:	39 9f       	mul	r19, r25
    1324:	f0 0d       	add	r31, r0
    1326:	11 24       	eor	r1, r1
    1328:	e0 0f       	add	r30, r16
    132a:	f1 1f       	adc	r31, r17
    132c:	f6 96       	adiw	r30, 0x36	; 54
    132e:	21 81       	ldd	r18, Z+1	; 0x01
    1330:	20 62       	ori	r18, 0x20	; 32
    1332:	21 83       	std	Z+1, r18	; 0x01
    1334:	01 96       	adiw	r24, 0x01	; 1
    1336:	85 30       	cpi	r24, 0x05	; 5
    1338:	91 05       	cpc	r25, r1
    133a:	81 f6       	brne	.-96     	; 0x12dc <ParseReceived+0x224>
    133c:	60 e0       	ldi	r22, 0x00	; 0
    133e:	70 e0       	ldi	r23, 0x00	; 0
    1340:	cb 01       	movw	r24, r22
    1342:	98 c5       	rjmp	.+2864   	; 0x1e74 <ParseReceived+0xdbc>
    1344:	62 ee       	ldi	r22, 0xE2	; 226
    1346:	72 e0       	ldi	r23, 0x02	; 2
    1348:	c7 01       	movw	r24, r14
    134a:	0e 94 96 20 	call	0x412c	; 0x412c <strstr>
    134e:	89 2b       	or	r24, r25
    1350:	e1 f1       	breq	.+120    	; 0x13ca <ParseReceived+0x312>
    1352:	f8 01       	movw	r30, r16
    1354:	14 82       	std	Z+4, r1	; 0x04
    1356:	15 82       	std	Z+5, r1	; 0x05
    1358:	16 82       	std	Z+6, r1	; 0x06
    135a:	17 82       	std	Z+7, r1	; 0x07
    135c:	80 e0       	ldi	r24, 0x00	; 0
    135e:	90 e0       	ldi	r25, 0x00	; 0
    1360:	23 e2       	ldi	r18, 0x23	; 35
    1362:	28 9f       	mul	r18, r24
    1364:	f0 01       	movw	r30, r0
    1366:	29 9f       	mul	r18, r25
    1368:	f0 0d       	add	r31, r0
    136a:	11 24       	eor	r1, r1
    136c:	e0 0f       	add	r30, r16
    136e:	f1 1f       	adc	r31, r17
    1370:	36 a9       	ldd	r19, Z+54	; 0x36
    1372:	32 ff       	sbrs	r19, 2
    1374:	22 c0       	rjmp	.+68     	; 0x13ba <ParseReceived+0x302>
    1376:	28 9f       	mul	r18, r24
    1378:	f0 01       	movw	r30, r0
    137a:	29 9f       	mul	r18, r25
    137c:	f0 0d       	add	r31, r0
    137e:	11 24       	eor	r1, r1
    1380:	e0 0f       	add	r30, r16
    1382:	f1 1f       	adc	r31, r17
    1384:	3b 7f       	andi	r19, 0xFB	; 251
    1386:	36 ab       	std	Z+54, r19	; 0x36
    1388:	31 ff       	sbrs	r19, 1
    138a:	0c c0       	rjmp	.+24     	; 0x13a4 <ParseReceived+0x2ec>
    138c:	28 9f       	mul	r18, r24
    138e:	f0 01       	movw	r30, r0
    1390:	29 9f       	mul	r18, r25
    1392:	f0 0d       	add	r31, r0
    1394:	11 24       	eor	r1, r1
    1396:	e0 0f       	add	r30, r16
    1398:	f1 1f       	adc	r31, r17
    139a:	f6 96       	adiw	r30, 0x36	; 54
    139c:	31 81       	ldd	r19, Z+1	; 0x01
    139e:	32 60       	ori	r19, 0x02	; 2
    13a0:	31 83       	std	Z+1, r19	; 0x01
    13a2:	0b c0       	rjmp	.+22     	; 0x13ba <ParseReceived+0x302>
    13a4:	28 9f       	mul	r18, r24
    13a6:	f0 01       	movw	r30, r0
    13a8:	29 9f       	mul	r18, r25
    13aa:	f0 0d       	add	r31, r0
    13ac:	11 24       	eor	r1, r1
    13ae:	e0 0f       	add	r30, r16
    13b0:	f1 1f       	adc	r31, r17
    13b2:	f6 96       	adiw	r30, 0x36	; 54
    13b4:	31 81       	ldd	r19, Z+1	; 0x01
    13b6:	30 64       	ori	r19, 0x40	; 64
    13b8:	31 83       	std	Z+1, r19	; 0x01
    13ba:	01 96       	adiw	r24, 0x01	; 1
    13bc:	85 30       	cpi	r24, 0x05	; 5
    13be:	91 05       	cpc	r25, r1
    13c0:	81 f6       	brne	.-96     	; 0x1362 <ParseReceived+0x2aa>
    13c2:	60 e0       	ldi	r22, 0x00	; 0
    13c4:	70 e0       	ldi	r23, 0x00	; 0
    13c6:	cb 01       	movw	r24, r22
    13c8:	55 c5       	rjmp	.+2730   	; 0x1e74 <ParseReceived+0xdbc>
    13ca:	45 e0       	ldi	r20, 0x05	; 5
    13cc:	50 e0       	ldi	r21, 0x00	; 0
    13ce:	65 e1       	ldi	r22, 0x15	; 21
    13d0:	73 e0       	ldi	r23, 0x03	; 3
    13d2:	c7 01       	movw	r24, r14
    13d4:	0e 94 88 20 	call	0x4110	; 0x4110 <strncmp>
    13d8:	89 2b       	or	r24, r25
    13da:	09 f0       	breq	.+2      	; 0x13de <ParseReceived+0x326>
    13dc:	de c0       	rjmp	.+444    	; 0x159a <ParseReceived+0x4e2>
    13de:	81 e0       	ldi	r24, 0x01	; 1
    13e0:	f8 01       	movw	r30, r16
    13e2:	e5 5e       	subi	r30, 0xE5	; 229
    13e4:	fe 4f       	sbci	r31, 0xFE	; 254
    13e6:	80 83       	st	Z, r24
    13e8:	36 96       	adiw	r30, 0x06	; 6
    13ea:	b0 82       	st	Z, r11
    13ec:	d7 01       	movw	r26, r14
    13ee:	15 96       	adiw	r26, 0x05	; 5
    13f0:	8c 91       	ld	r24, X
    13f2:	80 53       	subi	r24, 0x30	; 48
    13f4:	31 97       	sbiw	r30, 0x01	; 1
    13f6:	80 83       	st	Z, r24
    13f8:	a8 2e       	mov	r10, r24
    13fa:	b1 2c       	mov	r11, r1
    13fc:	48 01       	movw	r8, r16
    13fe:	b3 e2       	ldi	r27, 0x23	; 35
    1400:	8b 9f       	mul	r24, r27
    1402:	80 0c       	add	r8, r0
    1404:	91 1c       	adc	r9, r1
    1406:	11 24       	eor	r1, r1
    1408:	28 eb       	ldi	r18, 0xB8	; 184
    140a:	30 e1       	ldi	r19, 0x10	; 16
    140c:	f4 01       	movw	r30, r8
    140e:	33 a7       	std	Z+43, r19	; 0x2b
    1410:	22 a7       	std	Z+42, r18	; 0x2a
    1412:	82 8f       	std	Z+26, r24	; 0x1a
    1414:	be 01       	movw	r22, r28
    1416:	6f 5f       	subi	r22, 0xFF	; 255
    1418:	7f 4f       	sbci	r23, 0xFF	; 255
    141a:	c7 01       	movw	r24, r14
    141c:	07 96       	adiw	r24, 0x07	; 7
    141e:	b5 db       	rcall	.-2198   	; 0xb8a <ParseNumber>
    1420:	d4 01       	movw	r26, r8
    1422:	92 96       	adiw	r26, 0x22	; 34
    1424:	6d 93       	st	X+, r22
    1426:	7d 93       	st	X+, r23
    1428:	8d 93       	st	X+, r24
    142a:	9c 93       	st	X, r25
    142c:	95 97       	sbiw	r26, 0x25	; 37
    142e:	96 96       	adiw	r26, 0x26	; 38
    1430:	8d 91       	ld	r24, X+
    1432:	9d 91       	ld	r25, X+
    1434:	0d 90       	ld	r0, X+
    1436:	bc 91       	ld	r27, X
    1438:	a0 2d       	mov	r26, r0
    143a:	89 2b       	or	r24, r25
    143c:	8a 2b       	or	r24, r26
    143e:	8b 2b       	or	r24, r27
    1440:	69 f4       	brne	.+26     	; 0x145c <ParseReceived+0x3a4>
    1442:	83 e2       	ldi	r24, 0x23	; 35
    1444:	8a 9d       	mul	r24, r10
    1446:	f0 01       	movw	r30, r0
    1448:	8b 9d       	mul	r24, r11
    144a:	f0 0d       	add	r31, r0
    144c:	11 24       	eor	r1, r1
    144e:	e0 0f       	add	r30, r16
    1450:	f1 1f       	adc	r31, r17
    1452:	86 a9       	ldd	r24, Z+54	; 0x36
    1454:	8f 7e       	andi	r24, 0xEF	; 239
    1456:	80 62       	ori	r24, 0x20	; 32
    1458:	86 ab       	std	Z+54, r24	; 0x36
    145a:	0b c0       	rjmp	.+22     	; 0x1472 <ParseReceived+0x3ba>
    145c:	83 e2       	ldi	r24, 0x23	; 35
    145e:	8a 9d       	mul	r24, r10
    1460:	f0 01       	movw	r30, r0
    1462:	8b 9d       	mul	r24, r11
    1464:	f0 0d       	add	r31, r0
    1466:	11 24       	eor	r1, r1
    1468:	e0 0f       	add	r30, r16
    146a:	f1 1f       	adc	r31, r17
    146c:	86 a9       	ldd	r24, Z+54	; 0x36
    146e:	8f 7d       	andi	r24, 0xDF	; 223
    1470:	86 ab       	std	Z+54, r24	; 0x36
    1472:	83 e2       	ldi	r24, 0x23	; 35
    1474:	8a 9d       	mul	r24, r10
    1476:	b0 01       	movw	r22, r0
    1478:	8b 9d       	mul	r24, r11
    147a:	70 0d       	add	r23, r0
    147c:	11 24       	eor	r1, r1
    147e:	58 01       	movw	r10, r16
    1480:	a6 0e       	add	r10, r22
    1482:	b7 1e       	adc	r11, r23
    1484:	f5 01       	movw	r30, r10
    1486:	42 a0       	ldd	r4, Z+34	; 0x22
    1488:	53 a0       	ldd	r5, Z+35	; 0x23
    148a:	64 a0       	ldd	r6, Z+36	; 0x24
    148c:	75 a0       	ldd	r7, Z+37	; 0x25
    148e:	86 a1       	ldd	r24, Z+38	; 0x26
    1490:	97 a1       	ldd	r25, Z+39	; 0x27
    1492:	a0 a5       	ldd	r26, Z+40	; 0x28
    1494:	b1 a5       	ldd	r27, Z+41	; 0x29
    1496:	84 0d       	add	r24, r4
    1498:	95 1d       	adc	r25, r5
    149a:	a6 1d       	adc	r26, r6
    149c:	b7 1d       	adc	r27, r7
    149e:	86 a3       	std	Z+38, r24	; 0x26
    14a0:	97 a3       	std	Z+39, r25	; 0x27
    14a2:	a0 a7       	std	Z+40, r26	; 0x28
    14a4:	b1 a7       	std	Z+41, r27	; 0x29
    14a6:	f8 01       	movw	r30, r16
    14a8:	e3 5c       	subi	r30, 0xC3	; 195
    14aa:	fe 4f       	sbci	r31, 0xFE	; 254
    14ac:	80 81       	ld	r24, Z
    14ae:	91 81       	ldd	r25, Z+1	; 0x01
    14b0:	a2 81       	ldd	r26, Z+2	; 0x02
    14b2:	b3 81       	ldd	r27, Z+3	; 0x03
    14b4:	84 0d       	add	r24, r4
    14b6:	95 1d       	adc	r25, r5
    14b8:	a6 1d       	adc	r26, r6
    14ba:	b7 1d       	adc	r27, r7
    14bc:	80 83       	st	Z, r24
    14be:	91 83       	std	Z+1, r25	; 0x01
    14c0:	a2 83       	std	Z+2, r26	; 0x02
    14c2:	b3 83       	std	Z+3, r27	; 0x03
    14c4:	49 80       	ldd	r4, Y+1	; 0x01
    14c6:	51 2c       	mov	r5, r1
    14c8:	bf ef       	ldi	r27, 0xFF	; 255
    14ca:	4b 1a       	sub	r4, r27
    14cc:	5b 0a       	sbc	r5, r27
    14ce:	05 2c       	mov	r0, r5
    14d0:	00 0c       	add	r0, r0
    14d2:	66 08       	sbc	r6, r6
    14d4:	77 08       	sbc	r7, r7
    14d6:	43 01       	movw	r8, r6
    14d8:	32 01       	movw	r6, r4
    14da:	e7 e0       	ldi	r30, 0x07	; 7
    14dc:	6e 0e       	add	r6, r30
    14de:	71 1c       	adc	r7, r1
    14e0:	81 1c       	adc	r8, r1
    14e2:	91 1c       	adc	r9, r1
    14e4:	63 5e       	subi	r22, 0xE3	; 227
    14e6:	7f 4f       	sbci	r23, 0xFF	; 255
    14e8:	60 0f       	add	r22, r16
    14ea:	71 1f       	adc	r23, r17
    14ec:	c7 01       	movw	r24, r14
    14ee:	86 0d       	add	r24, r6
    14f0:	97 1d       	adc	r25, r7
    14f2:	ae 01       	movw	r20, r28
    14f4:	4f 5f       	subi	r20, 0xFF	; 255
    14f6:	5f 4f       	sbci	r21, 0xFF	; 255
    14f8:	d4 db       	rcall	.-2136   	; 0xca2 <ParseIP>
    14fa:	49 80       	ldd	r4, Y+1	; 0x01
    14fc:	51 2c       	mov	r5, r1
    14fe:	ff ef       	ldi	r31, 0xFF	; 255
    1500:	4f 1a       	sub	r4, r31
    1502:	5f 0a       	sbc	r5, r31
    1504:	c2 01       	movw	r24, r4
    1506:	55 0c       	add	r5, r5
    1508:	aa 0b       	sbc	r26, r26
    150a:	bb 0b       	sbc	r27, r27
    150c:	23 01       	movw	r4, r6
    150e:	34 01       	movw	r6, r8
    1510:	48 0e       	add	r4, r24
    1512:	59 1e       	adc	r5, r25
    1514:	6a 1e       	adc	r6, r26
    1516:	7b 1e       	adc	r7, r27
    1518:	47 01       	movw	r8, r14
    151a:	84 0c       	add	r8, r4
    151c:	95 1c       	adc	r9, r5
    151e:	be 01       	movw	r22, r28
    1520:	6f 5f       	subi	r22, 0xFF	; 255
    1522:	7f 4f       	sbci	r23, 0xFF	; 255
    1524:	c4 01       	movw	r24, r8
    1526:	31 db       	rcall	.-2462   	; 0xb8a <ParseNumber>
    1528:	d5 01       	movw	r26, r10
    152a:	5c 96       	adiw	r26, 0x1c	; 28
    152c:	7c 93       	st	X, r23
    152e:	6e 93       	st	-X, r22
    1530:	5b 97       	sbiw	r26, 0x1b	; 27
    1532:	f4 01       	movw	r30, r8
    1534:	80 81       	ld	r24, Z
    1536:	8a 33       	cpi	r24, 0x3A	; 58
    1538:	e9 f0       	breq	.+58     	; 0x1574 <ParseReceived+0x4bc>
    153a:	a6 01       	movw	r20, r12
    153c:	60 e0       	ldi	r22, 0x00	; 0
    153e:	70 e0       	ldi	r23, 0x00	; 0
    1540:	44 16       	cp	r4, r20
    1542:	55 06       	cpc	r5, r21
    1544:	66 06       	cpc	r6, r22
    1546:	77 06       	cpc	r7, r23
    1548:	a8 f4       	brcc	.+42     	; 0x1574 <ParseReceived+0x4bc>
    154a:	d3 01       	movw	r26, r6
    154c:	c2 01       	movw	r24, r4
    154e:	01 96       	adiw	r24, 0x01	; 1
    1550:	a1 1d       	adc	r26, r1
    1552:	b1 1d       	adc	r27, r1
    1554:	f7 01       	movw	r30, r14
    1556:	e8 0f       	add	r30, r24
    1558:	f9 1f       	adc	r31, r25
    155a:	8f ef       	ldi	r24, 0xFF	; 255
    155c:	48 1a       	sub	r4, r24
    155e:	58 0a       	sbc	r5, r24
    1560:	68 0a       	sbc	r6, r24
    1562:	78 0a       	sbc	r7, r24
    1564:	81 91       	ld	r24, Z+
    1566:	8a 33       	cpi	r24, 0x3A	; 58
    1568:	29 f0       	breq	.+10     	; 0x1574 <ParseReceived+0x4bc>
    156a:	44 16       	cp	r4, r20
    156c:	55 06       	cpc	r5, r21
    156e:	66 06       	cpc	r6, r22
    1570:	77 06       	cpc	r7, r23
    1572:	98 f3       	brcs	.-26     	; 0x155a <ParseReceived+0x4a2>
    1574:	f8 01       	movw	r30, r16
    1576:	e2 5e       	subi	r30, 0xE2	; 226
    1578:	fe 4f       	sbci	r31, 0xFE	; 254
    157a:	11 82       	std	Z+1, r1	; 0x01
    157c:	10 82       	st	Z, r1
    157e:	32 97       	sbiw	r30, 0x02	; 2
    1580:	11 82       	std	Z+1, r1	; 0x01
    1582:	10 82       	st	Z, r1
    1584:	9f ef       	ldi	r25, 0xFF	; 255
    1586:	49 1a       	sub	r4, r25
    1588:	59 0a       	sbc	r5, r25
    158a:	69 0a       	sbc	r6, r25
    158c:	79 0a       	sbc	r7, r25
    158e:	b6 01       	movw	r22, r12
    1590:	64 19       	sub	r22, r4
    1592:	75 09       	sbc	r23, r5
    1594:	80 e0       	ldi	r24, 0x00	; 0
    1596:	90 e0       	ldi	r25, 0x00	; 0
    1598:	6d c4       	rjmp	.+2266   	; 0x1e74 <ParseReceived+0xdbc>
    159a:	ab e0       	ldi	r26, 0x0B	; 11
    159c:	ca 16       	cp	r12, r26
    159e:	d1 04       	cpc	r13, r1
    15a0:	08 f4       	brcc	.+2      	; 0x15a4 <ParseReceived+0x4ec>
    15a2:	45 c0       	rjmp	.+138    	; 0x162e <ParseReceived+0x576>
    15a4:	f6 01       	movw	r30, r12
    15a6:	3a 97       	sbiw	r30, 0x0a	; 10
    15a8:	57 01       	movw	r10, r14
    15aa:	ae 0e       	add	r10, r30
    15ac:	bf 1e       	adc	r11, r31
    15ae:	4a e0       	ldi	r20, 0x0A	; 10
    15b0:	50 e0       	ldi	r21, 0x00	; 0
    15b2:	6e ee       	ldi	r22, 0xEE	; 238
    15b4:	72 e0       	ldi	r23, 0x02	; 2
    15b6:	c5 01       	movw	r24, r10
    15b8:	0e 94 69 20 	call	0x40d2	; 0x40d2 <memcmp>
    15bc:	89 2b       	or	r24, r25
    15be:	b9 f5       	brne	.+110    	; 0x162e <ParseReceived+0x576>
    15c0:	a1 14       	cp	r10, r1
    15c2:	b1 04       	cpc	r11, r1
    15c4:	a1 f1       	breq	.+104    	; 0x162e <ParseReceived+0x576>
    15c6:	f5 01       	movw	r30, r10
    15c8:	22 91       	ld	r18, -Z
    15ca:	30 e0       	ldi	r19, 0x00	; 0
    15cc:	20 53       	subi	r18, 0x30	; 48
    15ce:	31 09       	sbc	r19, r1
    15d0:	43 e2       	ldi	r20, 0x23	; 35
    15d2:	42 9f       	mul	r20, r18
    15d4:	c0 01       	movw	r24, r0
    15d6:	43 9f       	mul	r20, r19
    15d8:	90 0d       	add	r25, r0
    15da:	11 24       	eor	r1, r1
    15dc:	d8 01       	movw	r26, r16
    15de:	a8 0f       	add	r26, r24
    15e0:	b9 1f       	adc	r27, r25
    15e2:	d6 96       	adiw	r26, 0x36	; 54
    15e4:	4c 91       	ld	r20, X
    15e6:	d6 97       	sbiw	r26, 0x36	; 54
    15e8:	41 60       	ori	r20, 0x01	; 1
    15ea:	d6 96       	adiw	r26, 0x36	; 54
    15ec:	4c 93       	st	X, r20
    15ee:	d6 97       	sbiw	r26, 0x36	; 54
    15f0:	40 81       	ld	r20, Z
    15f2:	40 53       	subi	r20, 0x30	; 48
    15f4:	5a 96       	adiw	r26, 0x1a	; 26
    15f6:	4c 93       	st	X, r20
    15f8:	5a 97       	sbiw	r26, 0x1a	; 26
    15fa:	f8 01       	movw	r30, r16
    15fc:	eb 5b       	subi	r30, 0xBB	; 187
    15fe:	fe 4f       	sbci	r31, 0xFE	; 254
    1600:	4a 96       	adiw	r24, 0x1a	; 26
    1602:	80 0f       	add	r24, r16
    1604:	91 1f       	adc	r25, r17
    1606:	91 83       	std	Z+1, r25	; 0x01
    1608:	80 83       	st	Z, r24
    160a:	d6 96       	adiw	r26, 0x36	; 54
    160c:	8c 91       	ld	r24, X
    160e:	d6 97       	sbiw	r26, 0x36	; 54
    1610:	81 fd       	sbrc	r24, 1
    1612:	cd c0       	rjmp	.+410    	; 0x17ae <ParseReceived+0x6f6>
    1614:	fd 01       	movw	r30, r26
    1616:	d6 96       	adiw	r26, 0x36	; 54
    1618:	11 96       	adiw	r26, 0x01	; 1
    161a:	8c 91       	ld	r24, X
    161c:	11 97       	sbiw	r26, 0x01	; 1
    161e:	80 68       	ori	r24, 0x80	; 128
    1620:	11 96       	adiw	r26, 0x01	; 1
    1622:	8c 93       	st	X, r24
    1624:	88 eb       	ldi	r24, 0xB8	; 184
    1626:	90 e1       	ldi	r25, 0x10	; 16
    1628:	93 a7       	std	Z+43, r25	; 0x2b
    162a:	82 a7       	std	Z+42, r24	; 0x2a
    162c:	c0 c0       	rjmp	.+384    	; 0x17ae <ParseReceived+0x6f6>
    162e:	65 e6       	ldi	r22, 0x65	; 101
    1630:	73 e0       	ldi	r23, 0x03	; 3
    1632:	c7 01       	movw	r24, r14
    1634:	0e 94 96 20 	call	0x412c	; 0x412c <strstr>
    1638:	89 2b       	or	r24, r25
    163a:	09 f0       	breq	.+2      	; 0x163e <ParseReceived+0x586>
    163c:	b8 c0       	rjmp	.+368    	; 0x17ae <ParseReceived+0x6f6>
    163e:	ba e0       	ldi	r27, 0x0A	; 10
    1640:	cb 16       	cp	r12, r27
    1642:	d1 04       	cpc	r13, r1
    1644:	08 f4       	brcc	.+2      	; 0x1648 <ParseReceived+0x590>
    1646:	6e c0       	rjmp	.+220    	; 0x1724 <ParseReceived+0x66c>
    1648:	b6 01       	movw	r22, r12
    164a:	69 50       	subi	r22, 0x09	; 9
    164c:	71 09       	sbc	r23, r1
    164e:	57 01       	movw	r10, r14
    1650:	a6 0e       	add	r10, r22
    1652:	b7 1e       	adc	r11, r23
    1654:	49 e0       	ldi	r20, 0x09	; 9
    1656:	50 e0       	ldi	r21, 0x00	; 0
    1658:	69 e7       	ldi	r22, 0x79	; 121
    165a:	73 e0       	ldi	r23, 0x03	; 3
    165c:	c5 01       	movw	r24, r10
    165e:	0e 94 69 20 	call	0x40d2	; 0x40d2 <memcmp>
    1662:	89 2b       	or	r24, r25
    1664:	09 f0       	breq	.+2      	; 0x1668 <ParseReceived+0x5b0>
    1666:	5e c0       	rjmp	.+188    	; 0x1724 <ParseReceived+0x66c>
    1668:	a1 14       	cp	r10, r1
    166a:	b1 04       	cpc	r11, r1
    166c:	09 f4       	brne	.+2      	; 0x1670 <ParseReceived+0x5b8>
    166e:	5a c0       	rjmp	.+180    	; 0x1724 <ParseReceived+0x66c>
    1670:	ea 14       	cp	r14, r10
    1672:	fb 04       	cpc	r15, r11
    1674:	09 f4       	brne	.+2      	; 0x1678 <ParseReceived+0x5c0>
    1676:	56 c0       	rjmp	.+172    	; 0x1724 <ParseReceived+0x66c>
    1678:	f5 01       	movw	r30, r10
    167a:	31 97       	sbiw	r30, 0x01	; 1
    167c:	80 81       	ld	r24, Z
    167e:	97 01       	movw	r18, r14
    1680:	2f 5f       	subi	r18, 0xFF	; 255
    1682:	3f 4f       	sbci	r19, 0xFF	; 255
    1684:	a2 16       	cp	r10, r18
    1686:	b3 06       	cpc	r11, r19
    1688:	09 f0       	breq	.+2      	; 0x168c <ParseReceived+0x5d4>
    168a:	40 c0       	rjmp	.+128    	; 0x170c <ParseReceived+0x654>
    168c:	90 e0       	ldi	r25, 0x00	; 0
    168e:	c0 97       	sbiw	r24, 0x30	; 48
    1690:	23 e2       	ldi	r18, 0x23	; 35
    1692:	28 9f       	mul	r18, r24
    1694:	f0 01       	movw	r30, r0
    1696:	29 9f       	mul	r18, r25
    1698:	f0 0d       	add	r31, r0
    169a:	11 24       	eor	r1, r1
    169c:	e0 0f       	add	r30, r16
    169e:	f1 1f       	adc	r31, r17
    16a0:	26 a9       	ldd	r18, Z+54	; 0x36
    16a2:	21 fb       	bst	r18, 1
    16a4:	33 27       	eor	r19, r19
    16a6:	30 f9       	bld	r19, 0
    16a8:	17 aa       	std	Z+55, r1	; 0x37
    16aa:	16 aa       	std	Z+54, r1	; 0x36
    16ac:	20 ff       	sbrs	r18, 0
    16ae:	7f c0       	rjmp	.+254    	; 0x17ae <ParseReceived+0x6f6>
    16b0:	23 e2       	ldi	r18, 0x23	; 35
    16b2:	28 9f       	mul	r18, r24
    16b4:	f0 01       	movw	r30, r0
    16b6:	29 9f       	mul	r18, r25
    16b8:	f0 0d       	add	r31, r0
    16ba:	11 24       	eor	r1, r1
    16bc:	e0 0f       	add	r30, r16
    16be:	f1 1f       	adc	r31, r17
    16c0:	26 a9       	ldd	r18, Z+54	; 0x36
    16c2:	26 ff       	sbrs	r18, 6
    16c4:	07 c0       	rjmp	.+14     	; 0x16d4 <ParseReceived+0x61c>
    16c6:	f8 01       	movw	r30, r16
    16c8:	e2 5b       	subi	r30, 0xB2	; 178
    16ca:	fe 4f       	sbci	r31, 0xFE	; 254
    16cc:	81 81       	ldd	r24, Z+1	; 0x01
    16ce:	82 60       	ori	r24, 0x02	; 2
    16d0:	81 83       	std	Z+1, r24	; 0x01
    16d2:	6d c0       	rjmp	.+218    	; 0x17ae <ParseReceived+0x6f6>
    16d4:	33 23       	and	r19, r19
    16d6:	69 f0       	breq	.+26     	; 0x16f2 <ParseReceived+0x63a>
    16d8:	23 e2       	ldi	r18, 0x23	; 35
    16da:	28 9f       	mul	r18, r24
    16dc:	f0 01       	movw	r30, r0
    16de:	29 9f       	mul	r18, r25
    16e0:	f0 0d       	add	r31, r0
    16e2:	11 24       	eor	r1, r1
    16e4:	e0 0f       	add	r30, r16
    16e6:	f1 1f       	adc	r31, r17
    16e8:	f6 96       	adiw	r30, 0x36	; 54
    16ea:	81 81       	ldd	r24, Z+1	; 0x01
    16ec:	84 60       	ori	r24, 0x04	; 4
    16ee:	81 83       	std	Z+1, r24	; 0x01
    16f0:	5e c0       	rjmp	.+188    	; 0x17ae <ParseReceived+0x6f6>
    16f2:	23 e2       	ldi	r18, 0x23	; 35
    16f4:	28 9f       	mul	r18, r24
    16f6:	f0 01       	movw	r30, r0
    16f8:	29 9f       	mul	r18, r25
    16fa:	f0 0d       	add	r31, r0
    16fc:	11 24       	eor	r1, r1
    16fe:	e0 0f       	add	r30, r16
    1700:	f1 1f       	adc	r31, r17
    1702:	f6 96       	adiw	r30, 0x36	; 54
    1704:	82 81       	ldd	r24, Z+2	; 0x02
    1706:	81 60       	ori	r24, 0x01	; 1
    1708:	82 83       	std	Z+2, r24	; 0x02
    170a:	51 c0       	rjmp	.+162    	; 0x17ae <ParseReceived+0x6f6>
    170c:	b5 01       	movw	r22, r10
    170e:	61 50       	subi	r22, 0x01	; 1
    1710:	71 09       	sbc	r23, r1
    1712:	2a e0       	ldi	r18, 0x0A	; 10
    1714:	30 e0       	ldi	r19, 0x00	; 0
    1716:	40 e0       	ldi	r20, 0x00	; 0
    1718:	50 e0       	ldi	r21, 0x00	; 0
    171a:	86 ea       	ldi	r24, 0xA6	; 166
    171c:	90 e1       	ldi	r25, 0x10	; 16
    171e:	0e 94 2f 01 	call	0x25e	; 0x25e <BUFFER_Write>
    1722:	45 c0       	rjmp	.+138    	; 0x17ae <ParseReceived+0x6f6>
    1724:	e1 e1       	ldi	r30, 0x11	; 17
    1726:	ce 16       	cp	r12, r30
    1728:	d1 04       	cpc	r13, r1
    172a:	08 f4       	brcc	.+2      	; 0x172e <ParseReceived+0x676>
    172c:	40 c0       	rjmp	.+128    	; 0x17ae <ParseReceived+0x6f6>
    172e:	c6 01       	movw	r24, r12
    1730:	0f 97       	sbiw	r24, 0x0f	; 15
    1732:	63 e8       	ldi	r22, 0x83	; 131
    1734:	73 e0       	ldi	r23, 0x03	; 3
    1736:	8e 0d       	add	r24, r14
    1738:	9f 1d       	adc	r25, r15
    173a:	0e 94 96 20 	call	0x412c	; 0x412c <strstr>
    173e:	00 97       	sbiw	r24, 0x00	; 0
    1740:	b1 f1       	breq	.+108    	; 0x17ae <ParseReceived+0x6f6>
    1742:	fc 01       	movw	r30, r24
    1744:	82 91       	ld	r24, -Z
    1746:	90 e0       	ldi	r25, 0x00	; 0
    1748:	c0 97       	sbiw	r24, 0x30	; 48
    174a:	23 e2       	ldi	r18, 0x23	; 35
    174c:	28 9f       	mul	r18, r24
    174e:	d0 01       	movw	r26, r0
    1750:	29 9f       	mul	r18, r25
    1752:	b0 0d       	add	r27, r0
    1754:	11 24       	eor	r1, r1
    1756:	a0 0f       	add	r26, r16
    1758:	b1 1f       	adc	r27, r17
    175a:	d7 96       	adiw	r26, 0x37	; 55
    175c:	1c 92       	st	X, r1
    175e:	1e 92       	st	-X, r1
    1760:	d6 97       	sbiw	r26, 0x36	; 54
    1762:	20 81       	ld	r18, Z
    1764:	20 53       	subi	r18, 0x30	; 48
    1766:	5a 96       	adiw	r26, 0x1a	; 26
    1768:	2c 93       	st	X, r18
    176a:	5a 97       	sbiw	r26, 0x1a	; 26
    176c:	d6 96       	adiw	r26, 0x36	; 54
    176e:	2c 91       	ld	r18, X
    1770:	21 ff       	sbrs	r18, 1
    1772:	1d c0       	rjmp	.+58     	; 0x17ae <ParseReceived+0x6f6>
    1774:	d8 01       	movw	r26, r16
    1776:	14 96       	adiw	r26, 0x04	; 4
    1778:	4d 91       	ld	r20, X+
    177a:	5d 91       	ld	r21, X+
    177c:	6d 91       	ld	r22, X+
    177e:	7c 91       	ld	r23, X
    1780:	17 97       	sbiw	r26, 0x07	; 7
    1782:	4a 30       	cpi	r20, 0x0A	; 10
    1784:	51 05       	cpc	r21, r1
    1786:	61 05       	cpc	r22, r1
    1788:	71 05       	cpc	r23, r1
    178a:	29 f4       	brne	.+10     	; 0x1796 <ParseReceived+0x6de>
    178c:	f8 01       	movw	r30, r16
    178e:	14 82       	std	Z+4, r1	; 0x04
    1790:	15 82       	std	Z+5, r1	; 0x05
    1792:	16 82       	std	Z+6, r1	; 0x06
    1794:	17 82       	std	Z+7, r1	; 0x07
    1796:	23 e2       	ldi	r18, 0x23	; 35
    1798:	28 9f       	mul	r18, r24
    179a:	f0 01       	movw	r30, r0
    179c:	29 9f       	mul	r18, r25
    179e:	f0 0d       	add	r31, r0
    17a0:	11 24       	eor	r1, r1
    17a2:	e0 0f       	add	r30, r16
    17a4:	f1 1f       	adc	r31, r17
    17a6:	f6 96       	adiw	r30, 0x36	; 54
    17a8:	81 81       	ldd	r24, Z+1	; 0x01
    17aa:	80 61       	ori	r24, 0x10	; 16
    17ac:	81 83       	std	Z+1, r24	; 0x01
    17ae:	f8 01       	movw	r30, r16
    17b0:	84 81       	ldd	r24, Z+4	; 0x04
    17b2:	95 81       	ldd	r25, Z+5	; 0x05
    17b4:	a6 81       	ldd	r26, Z+6	; 0x06
    17b6:	b7 81       	ldd	r27, Z+7	; 0x07
    17b8:	fc 01       	movw	r30, r24
    17ba:	31 97       	sbiw	r30, 0x01	; 1
    17bc:	e2 32       	cpi	r30, 0x22	; 34
    17be:	f1 05       	cpc	r31, r1
    17c0:	08 f0       	brcs	.+2      	; 0x17c4 <ParseReceived+0x70c>
    17c2:	d0 c2       	rjmp	.+1440   	; 0x1d64 <ParseReceived+0xcac>
    17c4:	88 27       	eor	r24, r24
    17c6:	ee 58       	subi	r30, 0x8E	; 142
    17c8:	ff 4f       	sbci	r31, 0xFF	; 255
    17ca:	8f 4f       	sbci	r24, 0xFF	; 255
    17cc:	0c 94 34 1f 	jmp	0x3e68	; 0x3e68 <__tablejump2__>
    17d0:	47 e0       	ldi	r20, 0x07	; 7
    17d2:	50 e0       	ldi	r21, 0x00	; 0
    17d4:	63 e9       	ldi	r22, 0x93	; 147
    17d6:	73 e0       	ldi	r23, 0x03	; 3
    17d8:	c7 01       	movw	r24, r14
    17da:	0e 94 88 20 	call	0x4110	; 0x4110 <strncmp>
    17de:	89 2b       	or	r24, r25
    17e0:	79 f4       	brne	.+30     	; 0x1800 <ParseReceived+0x748>
    17e2:	87 ee       	ldi	r24, 0xE7	; 231
    17e4:	92 e0       	ldi	r25, 0x02	; 2
    17e6:	d8 01       	movw	r26, r16
    17e8:	19 96       	adiw	r26, 0x09	; 9
    17ea:	9c 93       	st	X, r25
    17ec:	8e 93       	st	-X, r24
    17ee:	18 97       	sbiw	r26, 0x08	; 8
    17f0:	f8 01       	movw	r30, r16
    17f2:	e5 5c       	subi	r30, 0xC5	; 197
    17f4:	fe 4f       	sbci	r31, 0xFE	; 254
    17f6:	d7 01       	movw	r26, r14
    17f8:	17 96       	adiw	r26, 0x07	; 7
    17fa:	8c 91       	ld	r24, X
    17fc:	80 53       	subi	r24, 0x30	; 48
    17fe:	80 83       	st	Z, r24
    1800:	6d ed       	ldi	r22, 0xDD	; 221
    1802:	72 e0       	ldi	r23, 0x02	; 2
    1804:	c7 01       	movw	r24, r14
    1806:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    180a:	89 2b       	or	r24, r25
    180c:	09 f0       	breq	.+2      	; 0x1810 <ParseReceived+0x758>
    180e:	f1 c2       	rjmp	.+1506   	; 0x1df2 <ParseReceived+0xd3a>
    1810:	f8 01       	movw	r30, r16
    1812:	14 82       	std	Z+4, r1	; 0x04
    1814:	15 82       	std	Z+5, r1	; 0x05
    1816:	16 82       	std	Z+6, r1	; 0x06
    1818:	17 82       	std	Z+7, r1	; 0x07
    181a:	67 ee       	ldi	r22, 0xE7	; 231
    181c:	72 e0       	ldi	r23, 0x02	; 2
    181e:	c7 01       	movw	r24, r14
    1820:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1824:	89 2b       	or	r24, r25
    1826:	09 f0       	breq	.+2      	; 0x182a <ParseReceived+0x772>
    1828:	9d c2       	rjmp	.+1338   	; 0x1d64 <ParseReceived+0xcac>
    182a:	d8 01       	movw	r26, r16
    182c:	14 96       	adiw	r26, 0x04	; 4
    182e:	1d 92       	st	X+, r1
    1830:	1d 92       	st	X+, r1
    1832:	1d 92       	st	X+, r1
    1834:	1c 92       	st	X, r1
    1836:	17 97       	sbiw	r26, 0x07	; 7
    1838:	f8 01       	movw	r30, r16
    183a:	e2 5b       	subi	r30, 0xB2	; 178
    183c:	fe 4f       	sbci	r31, 0xFE	; 254
    183e:	82 81       	ldd	r24, Z+2	; 0x02
    1840:	82 60       	ori	r24, 0x02	; 2
    1842:	82 83       	std	Z+2, r24	; 0x02
    1844:	8f c2       	rjmp	.+1310   	; 0x1d64 <ParseReceived+0xcac>
    1846:	4b e0       	ldi	r20, 0x0B	; 11
    1848:	50 e0       	ldi	r21, 0x00	; 0
    184a:	6b e9       	ldi	r22, 0x9B	; 155
    184c:	73 e0       	ldi	r23, 0x03	; 3
    184e:	c7 01       	movw	r24, r14
    1850:	0e 94 88 20 	call	0x4110	; 0x4110 <strncmp>
    1854:	89 2b       	or	r24, r25
    1856:	09 f0       	breq	.+2      	; 0x185a <ParseReceived+0x7a2>
    1858:	67 c0       	rjmp	.+206    	; 0x1928 <ParseReceived+0x870>
    185a:	67 ea       	ldi	r22, 0xA7	; 167
    185c:	73 e0       	ldi	r23, 0x03	; 3
    185e:	c7 01       	movw	r24, r14
    1860:	0e 94 96 20 	call	0x412c	; 0x412c <strstr>
    1864:	89 2b       	or	r24, r25
    1866:	09 f4       	brne	.+2      	; 0x186a <ParseReceived+0x7b2>
    1868:	5f c0       	rjmp	.+190    	; 0x1928 <ParseReceived+0x870>
    186a:	f7 01       	movw	r30, r14
    186c:	80 81       	ld	r24, Z
    186e:	88 23       	and	r24, r24
    1870:	09 f4       	brne	.+2      	; 0x1874 <ParseReceived+0x7bc>
    1872:	5a c0       	rjmp	.+180    	; 0x1928 <ParseReceived+0x870>
    1874:	82 32       	cpi	r24, 0x22	; 34
    1876:	09 f4       	brne	.+2      	; 0x187a <ParseReceived+0x7c2>
    1878:	c5 c2       	rjmp	.+1418   	; 0x1e04 <ParseReceived+0xd4c>
    187a:	31 96       	adiw	r30, 0x01	; 1
    187c:	df 01       	movw	r26, r30
    187e:	81 91       	ld	r24, Z+
    1880:	88 23       	and	r24, r24
    1882:	09 f4       	brne	.+2      	; 0x1886 <ParseReceived+0x7ce>
    1884:	51 c0       	rjmp	.+162    	; 0x1928 <ParseReceived+0x870>
    1886:	82 32       	cpi	r24, 0x22	; 34
    1888:	c9 f7       	brne	.-14     	; 0x187c <ParseReceived+0x7c4>
    188a:	bd c2       	rjmp	.+1402   	; 0x1e06 <ParseReceived+0xd4e>
    188c:	21 e0       	ldi	r18, 0x01	; 1
    188e:	29 0f       	add	r18, r25
    1890:	ba 01       	movw	r22, r20
    1892:	f8 01       	movw	r30, r16
    1894:	e9 0f       	add	r30, r25
    1896:	f1 1d       	adc	r31, r1
    1898:	ee 5d       	subi	r30, 0xDE	; 222
    189a:	fe 4f       	sbci	r31, 0xFE	; 254
    189c:	80 83       	st	Z, r24
    189e:	fa 01       	movw	r30, r20
    18a0:	81 91       	ld	r24, Z+
    18a2:	af 01       	movw	r20, r30
    18a4:	11 96       	adiw	r26, 0x01	; 1
    18a6:	88 23       	and	r24, r24
    18a8:	81 f0       	breq	.+32     	; 0x18ca <ParseReceived+0x812>
    18aa:	92 2f       	mov	r25, r18
    18ac:	ba 01       	movw	r22, r20
    18ae:	61 50       	subi	r22, 0x01	; 1
    18b0:	71 09       	sbc	r23, r1
    18b2:	82 32       	cpi	r24, 0x22	; 34
    18b4:	59 f7       	brne	.-42     	; 0x188c <ParseReceived+0x7d4>
    18b6:	fa 01       	movw	r30, r20
    18b8:	20 81       	ld	r18, Z
    18ba:	2c 32       	cpi	r18, 0x2C	; 44
    18bc:	39 f7       	brne	.-50     	; 0x188c <ParseReceived+0x7d4>
    18be:	2c 91       	ld	r18, X
    18c0:	22 32       	cpi	r18, 0x22	; 34
    18c2:	21 f7       	brne	.-56     	; 0x188c <ParseReceived+0x7d4>
    18c4:	29 2f       	mov	r18, r25
    18c6:	01 c0       	rjmp	.+2      	; 0x18ca <ParseReceived+0x812>
    18c8:	20 e0       	ldi	r18, 0x00	; 0
    18ca:	f8 01       	movw	r30, r16
    18cc:	e2 0f       	add	r30, r18
    18ce:	f1 1d       	adc	r31, r1
    18d0:	ee 5d       	subi	r30, 0xDE	; 222
    18d2:	fe 4f       	sbci	r31, 0xFE	; 254
    18d4:	10 82       	st	Z, r1
    18d6:	6b 01       	movw	r12, r22
    18d8:	f3 e0       	ldi	r31, 0x03	; 3
    18da:	cf 0e       	add	r12, r31
    18dc:	d1 1c       	adc	r13, r1
    18de:	ae 01       	movw	r20, r28
    18e0:	4e 5f       	subi	r20, 0xFE	; 254
    18e2:	5f 4f       	sbci	r21, 0xFF	; 255
    18e4:	b8 01       	movw	r22, r16
    18e6:	6e 5c       	subi	r22, 0xCE	; 206
    18e8:	7e 4f       	sbci	r23, 0xFE	; 254
    18ea:	c6 01       	movw	r24, r12
    18ec:	32 db       	rcall	.-2460   	; 0xf52 <ParseMAC>
    18ee:	2a 81       	ldd	r18, Y+2	; 0x02
    18f0:	30 e0       	ldi	r19, 0x00	; 0
    18f2:	2e 5f       	subi	r18, 0xFE	; 254
    18f4:	3f 4f       	sbci	r19, 0xFF	; 255
    18f6:	c2 0e       	add	r12, r18
    18f8:	d3 1e       	adc	r13, r19
    18fa:	be 01       	movw	r22, r28
    18fc:	6e 5f       	subi	r22, 0xFE	; 254
    18fe:	7f 4f       	sbci	r23, 0xFF	; 255
    1900:	c6 01       	movw	r24, r12
    1902:	43 d9       	rcall	.-3450   	; 0xb8a <ParseNumber>
    1904:	f8 01       	movw	r30, r16
    1906:	e8 5c       	subi	r30, 0xC8	; 200
    1908:	fe 4f       	sbci	r31, 0xFE	; 254
    190a:	60 83       	st	Z, r22
    190c:	8a 81       	ldd	r24, Y+2	; 0x02
    190e:	90 e0       	ldi	r25, 0x00	; 0
    1910:	01 96       	adiw	r24, 0x01	; 1
    1912:	be 01       	movw	r22, r28
    1914:	6e 5f       	subi	r22, 0xFE	; 254
    1916:	7f 4f       	sbci	r23, 0xFF	; 255
    1918:	8c 0d       	add	r24, r12
    191a:	9d 1d       	adc	r25, r13
    191c:	36 d9       	rcall	.-3476   	; 0xb8a <ParseNumber>
    191e:	f8 01       	movw	r30, r16
    1920:	e7 5c       	subi	r30, 0xC7	; 199
    1922:	fe 4f       	sbci	r31, 0xFE	; 254
    1924:	71 83       	std	Z+1, r23	; 0x01
    1926:	60 83       	st	Z, r22
    1928:	6d ed       	ldi	r22, 0xDD	; 221
    192a:	72 e0       	ldi	r23, 0x02	; 2
    192c:	c7 01       	movw	r24, r14
    192e:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1932:	89 2b       	or	r24, r25
    1934:	09 f0       	breq	.+2      	; 0x1938 <ParseReceived+0x880>
    1936:	38 c2       	rjmp	.+1136   	; 0x1da8 <ParseReceived+0xcf0>
    1938:	d8 01       	movw	r26, r16
    193a:	14 96       	adiw	r26, 0x04	; 4
    193c:	1d 92       	st	X+, r1
    193e:	1d 92       	st	X+, r1
    1940:	1d 92       	st	X+, r1
    1942:	1c 92       	st	X, r1
    1944:	17 97       	sbiw	r26, 0x07	; 7
    1946:	0e c2       	rjmp	.+1052   	; 0x1d64 <ParseReceived+0xcac>
    1948:	46 e0       	ldi	r20, 0x06	; 6
    194a:	50 e0       	ldi	r21, 0x00	; 0
    194c:	6f ea       	ldi	r22, 0xAF	; 175
    194e:	73 e0       	ldi	r23, 0x03	; 3
    1950:	c7 01       	movw	r24, r14
    1952:	0e 94 88 20 	call	0x4110	; 0x4110 <strncmp>
    1956:	89 2b       	or	r24, r25
    1958:	09 f0       	breq	.+2      	; 0x195c <ParseReceived+0x8a4>
    195a:	a4 c0       	rjmp	.+328    	; 0x1aa4 <ParseReceived+0x9ec>
    195c:	f7 01       	movw	r30, r14
    195e:	80 81       	ld	r24, Z
    1960:	88 23       	and	r24, r24
    1962:	09 f4       	brne	.+2      	; 0x1966 <ParseReceived+0x8ae>
    1964:	9f c0       	rjmp	.+318    	; 0x1aa4 <ParseReceived+0x9ec>
    1966:	8a 33       	cpi	r24, 0x3A	; 58
    1968:	09 f4       	brne	.+2      	; 0x196c <ParseReceived+0x8b4>
    196a:	5c c2       	rjmp	.+1208   	; 0x1e24 <ParseReceived+0xd6c>
    196c:	d7 01       	movw	r26, r14
    196e:	11 96       	adiw	r26, 0x01	; 1
    1970:	03 c0       	rjmp	.+6      	; 0x1978 <ParseReceived+0x8c0>
    1972:	8a 33       	cpi	r24, 0x3A	; 58
    1974:	09 f4       	brne	.+2      	; 0x1978 <ParseReceived+0x8c0>
    1976:	57 c2       	rjmp	.+1198   	; 0x1e26 <ParseReceived+0xd6e>
    1978:	fd 01       	movw	r30, r26
    197a:	8d 91       	ld	r24, X+
    197c:	81 11       	cpse	r24, r1
    197e:	f9 cf       	rjmp	.-14     	; 0x1972 <ParseReceived+0x8ba>
    1980:	91 c0       	rjmp	.+290    	; 0x1aa4 <ParseReceived+0x9ec>
    1982:	9f 01       	movw	r18, r30
    1984:	2e 5f       	subi	r18, 0xFE	; 254
    1986:	3f 4f       	sbci	r19, 0xFF	; 255
    1988:	d9 01       	movw	r26, r18
    198a:	8c 91       	ld	r24, X
    198c:	88 23       	and	r24, r24
    198e:	21 f1       	breq	.+72     	; 0x19d8 <ParseReceived+0x920>
    1990:	f9 01       	movw	r30, r18
    1992:	31 96       	adiw	r30, 0x01	; 1
    1994:	b9 01       	movw	r22, r18
    1996:	6e 5f       	subi	r22, 0xFE	; 254
    1998:	7f 4f       	sbci	r23, 0xFF	; 255
    199a:	90 e0       	ldi	r25, 0x00	; 0
    199c:	0f c0       	rjmp	.+30     	; 0x19bc <ParseReceived+0x904>
    199e:	41 e0       	ldi	r20, 0x01	; 1
    19a0:	49 0f       	add	r20, r25
    19a2:	9f 01       	movw	r18, r30
    19a4:	d8 01       	movw	r26, r16
    19a6:	a9 0f       	add	r26, r25
    19a8:	b1 1d       	adc	r27, r1
    19aa:	a1 51       	subi	r26, 0x11	; 17
    19ac:	bf 4f       	sbci	r27, 0xFF	; 255
    19ae:	8c 93       	st	X, r24
    19b0:	81 91       	ld	r24, Z+
    19b2:	6f 5f       	subi	r22, 0xFF	; 255
    19b4:	7f 4f       	sbci	r23, 0xFF	; 255
    19b6:	88 23       	and	r24, r24
    19b8:	81 f0       	breq	.+32     	; 0x19da <ParseReceived+0x922>
    19ba:	94 2f       	mov	r25, r20
    19bc:	9f 01       	movw	r18, r30
    19be:	21 50       	subi	r18, 0x01	; 1
    19c0:	31 09       	sbc	r19, r1
    19c2:	82 32       	cpi	r24, 0x22	; 34
    19c4:	61 f7       	brne	.-40     	; 0x199e <ParseReceived+0x8e6>
    19c6:	40 81       	ld	r20, Z
    19c8:	4c 32       	cpi	r20, 0x2C	; 44
    19ca:	49 f7       	brne	.-46     	; 0x199e <ParseReceived+0x8e6>
    19cc:	db 01       	movw	r26, r22
    19ce:	4c 91       	ld	r20, X
    19d0:	42 32       	cpi	r20, 0x22	; 34
    19d2:	29 f7       	brne	.-54     	; 0x199e <ParseReceived+0x8e6>
    19d4:	49 2f       	mov	r20, r25
    19d6:	01 c0       	rjmp	.+2      	; 0x19da <ParseReceived+0x922>
    19d8:	40 e0       	ldi	r20, 0x00	; 0
    19da:	f8 01       	movw	r30, r16
    19dc:	e4 0f       	add	r30, r20
    19de:	f1 1d       	adc	r31, r1
    19e0:	e1 51       	subi	r30, 0x11	; 17
    19e2:	ff 4f       	sbci	r31, 0xFF	; 255
    19e4:	10 82       	st	Z, r1
    19e6:	a9 01       	movw	r20, r18
    19e8:	4d 5f       	subi	r20, 0xFD	; 253
    19ea:	5f 4f       	sbci	r21, 0xFF	; 255
    19ec:	f9 01       	movw	r30, r18
    19ee:	83 81       	ldd	r24, Z+3	; 0x03
    19f0:	88 23       	and	r24, r24
    19f2:	d1 f0       	breq	.+52     	; 0x1a28 <ParseReceived+0x970>
    19f4:	34 96       	adiw	r30, 0x04	; 4
    19f6:	90 e0       	ldi	r25, 0x00	; 0
    19f8:	0d c0       	rjmp	.+26     	; 0x1a14 <ParseReceived+0x95c>
    19fa:	21 e0       	ldi	r18, 0x01	; 1
    19fc:	29 0f       	add	r18, r25
    19fe:	af 01       	movw	r20, r30
    1a00:	d8 01       	movw	r26, r16
    1a02:	a9 0f       	add	r26, r25
    1a04:	b1 1d       	adc	r27, r1
    1a06:	ad 5f       	subi	r26, 0xFD	; 253
    1a08:	be 4f       	sbci	r27, 0xFE	; 254
    1a0a:	8c 93       	st	X, r24
    1a0c:	81 91       	ld	r24, Z+
    1a0e:	88 23       	and	r24, r24
    1a10:	61 f0       	breq	.+24     	; 0x1a2a <ParseReceived+0x972>
    1a12:	92 2f       	mov	r25, r18
    1a14:	af 01       	movw	r20, r30
    1a16:	41 50       	subi	r20, 0x01	; 1
    1a18:	51 09       	sbc	r21, r1
    1a1a:	82 32       	cpi	r24, 0x22	; 34
    1a1c:	71 f7       	brne	.-36     	; 0x19fa <ParseReceived+0x942>
    1a1e:	20 81       	ld	r18, Z
    1a20:	2c 32       	cpi	r18, 0x2C	; 44
    1a22:	59 f7       	brne	.-42     	; 0x19fa <ParseReceived+0x942>
    1a24:	29 2f       	mov	r18, r25
    1a26:	01 c0       	rjmp	.+2      	; 0x1a2a <ParseReceived+0x972>
    1a28:	20 e0       	ldi	r18, 0x00	; 0
    1a2a:	f8 01       	movw	r30, r16
    1a2c:	e2 0f       	add	r30, r18
    1a2e:	f1 1d       	adc	r31, r1
    1a30:	ed 5f       	subi	r30, 0xFD	; 253
    1a32:	fe 4f       	sbci	r31, 0xFE	; 254
    1a34:	10 82       	st	Z, r1
    1a36:	6a 01       	movw	r12, r20
    1a38:	f2 e0       	ldi	r31, 0x02	; 2
    1a3a:	cf 0e       	add	r12, r31
    1a3c:	d1 1c       	adc	r13, r1
    1a3e:	be 01       	movw	r22, r28
    1a40:	6e 5f       	subi	r22, 0xFE	; 254
    1a42:	7f 4f       	sbci	r23, 0xFF	; 255
    1a44:	c6 01       	movw	r24, r12
    1a46:	a1 d8       	rcall	.-3774   	; 0xb8a <ParseNumber>
    1a48:	f8 01       	movw	r30, r16
    1a4a:	e8 5e       	subi	r30, 0xE8	; 232
    1a4c:	fe 4f       	sbci	r31, 0xFE	; 254
    1a4e:	60 83       	st	Z, r22
    1a50:	4a 81       	ldd	r20, Y+2	; 0x02
    1a52:	50 e0       	ldi	r21, 0x00	; 0
    1a54:	4f 5f       	subi	r20, 0xFF	; 255
    1a56:	5f 4f       	sbci	r21, 0xFF	; 255
    1a58:	c4 0e       	add	r12, r20
    1a5a:	d5 1e       	adc	r13, r21
    1a5c:	be 01       	movw	r22, r28
    1a5e:	6e 5f       	subi	r22, 0xFE	; 254
    1a60:	7f 4f       	sbci	r23, 0xFF	; 255
    1a62:	c6 01       	movw	r24, r12
    1a64:	92 d8       	rcall	.-3804   	; 0xb8a <ParseNumber>
    1a66:	f8 01       	movw	r30, r16
    1a68:	e9 5e       	subi	r30, 0xE9	; 233
    1a6a:	fe 4f       	sbci	r31, 0xFE	; 254
    1a6c:	60 83       	st	Z, r22
    1a6e:	8a 81       	ldd	r24, Y+2	; 0x02
    1a70:	90 e0       	ldi	r25, 0x00	; 0
    1a72:	01 96       	adiw	r24, 0x01	; 1
    1a74:	c8 0e       	add	r12, r24
    1a76:	d9 1e       	adc	r13, r25
    1a78:	be 01       	movw	r22, r28
    1a7a:	6e 5f       	subi	r22, 0xFE	; 254
    1a7c:	7f 4f       	sbci	r23, 0xFF	; 255
    1a7e:	c6 01       	movw	r24, r12
    1a80:	84 d8       	rcall	.-3832   	; 0xb8a <ParseNumber>
    1a82:	f8 01       	movw	r30, r16
    1a84:	e7 5e       	subi	r30, 0xE7	; 231
    1a86:	fe 4f       	sbci	r31, 0xFE	; 254
    1a88:	60 83       	st	Z, r22
    1a8a:	8a 81       	ldd	r24, Y+2	; 0x02
    1a8c:	90 e0       	ldi	r25, 0x00	; 0
    1a8e:	01 96       	adiw	r24, 0x01	; 1
    1a90:	be 01       	movw	r22, r28
    1a92:	6e 5f       	subi	r22, 0xFE	; 254
    1a94:	7f 4f       	sbci	r23, 0xFF	; 255
    1a96:	8c 0d       	add	r24, r12
    1a98:	9d 1d       	adc	r25, r13
    1a9a:	77 d8       	rcall	.-3858   	; 0xb8a <ParseNumber>
    1a9c:	f8 01       	movw	r30, r16
    1a9e:	e6 5e       	subi	r30, 0xE6	; 230
    1aa0:	fe 4f       	sbci	r31, 0xFE	; 254
    1aa2:	60 83       	st	Z, r22
    1aa4:	6d ed       	ldi	r22, 0xDD	; 221
    1aa6:	72 e0       	ldi	r23, 0x02	; 2
    1aa8:	c7 01       	movw	r24, r14
    1aaa:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1aae:	89 2b       	or	r24, r25
    1ab0:	09 f0       	breq	.+2      	; 0x1ab4 <ParseReceived+0x9fc>
    1ab2:	7a c1       	rjmp	.+756    	; 0x1da8 <ParseReceived+0xcf0>
    1ab4:	d8 01       	movw	r26, r16
    1ab6:	14 96       	adiw	r26, 0x04	; 4
    1ab8:	1d 92       	st	X+, r1
    1aba:	1d 92       	st	X+, r1
    1abc:	1d 92       	st	X+, r1
    1abe:	1c 92       	st	X, r1
    1ac0:	17 97       	sbiw	r26, 0x07	; 7
    1ac2:	50 c1       	rjmp	.+672    	; 0x1d64 <ParseReceived+0xcac>
    1ac4:	47 e0       	ldi	r20, 0x07	; 7
    1ac6:	50 e0       	ldi	r21, 0x00	; 0
    1ac8:	66 eb       	ldi	r22, 0xB6	; 182
    1aca:	73 e0       	ldi	r23, 0x03	; 3
    1acc:	c7 01       	movw	r24, r14
    1ace:	0e 94 88 20 	call	0x4110	; 0x4110 <strncmp>
    1ad2:	89 2b       	or	r24, r25
    1ad4:	19 f4       	brne	.+6      	; 0x1adc <ParseReceived+0xa24>
    1ad6:	b7 01       	movw	r22, r14
    1ad8:	c8 01       	movw	r24, r16
    1ada:	46 d9       	rcall	.-3444   	; 0xd68 <ParseCIPSTA>
    1adc:	6d ed       	ldi	r22, 0xDD	; 221
    1ade:	72 e0       	ldi	r23, 0x02	; 2
    1ae0:	c7 01       	movw	r24, r14
    1ae2:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1ae6:	89 2b       	or	r24, r25
    1ae8:	09 f0       	breq	.+2      	; 0x1aec <ParseReceived+0xa34>
    1aea:	5e c1       	rjmp	.+700    	; 0x1da8 <ParseReceived+0xcf0>
    1aec:	f8 01       	movw	r30, r16
    1aee:	14 82       	std	Z+4, r1	; 0x04
    1af0:	15 82       	std	Z+5, r1	; 0x05
    1af2:	16 82       	std	Z+6, r1	; 0x06
    1af4:	17 82       	std	Z+7, r1	; 0x07
    1af6:	e2 5b       	subi	r30, 0xB2	; 178
    1af8:	fe 4f       	sbci	r31, 0xFE	; 254
    1afa:	82 81       	ldd	r24, Z+2	; 0x02
    1afc:	88 60       	ori	r24, 0x08	; 8
    1afe:	82 83       	std	Z+2, r24	; 0x02
    1b00:	31 c1       	rjmp	.+610    	; 0x1d64 <ParseReceived+0xcac>
    1b02:	46 e0       	ldi	r20, 0x06	; 6
    1b04:	50 e0       	ldi	r21, 0x00	; 0
    1b06:	6e eb       	ldi	r22, 0xBE	; 190
    1b08:	73 e0       	ldi	r23, 0x03	; 3
    1b0a:	c7 01       	movw	r24, r14
    1b0c:	0e 94 88 20 	call	0x4110	; 0x4110 <strncmp>
    1b10:	89 2b       	or	r24, r25
    1b12:	19 f4       	brne	.+6      	; 0x1b1a <ParseReceived+0xa62>
    1b14:	b7 01       	movw	r22, r14
    1b16:	c8 01       	movw	r24, r16
    1b18:	27 d9       	rcall	.-3506   	; 0xd68 <ParseCIPSTA>
    1b1a:	6d ed       	ldi	r22, 0xDD	; 221
    1b1c:	72 e0       	ldi	r23, 0x02	; 2
    1b1e:	c7 01       	movw	r24, r14
    1b20:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1b24:	89 2b       	or	r24, r25
    1b26:	09 f0       	breq	.+2      	; 0x1b2a <ParseReceived+0xa72>
    1b28:	3f c1       	rjmp	.+638    	; 0x1da8 <ParseReceived+0xcf0>
    1b2a:	d8 01       	movw	r26, r16
    1b2c:	14 96       	adiw	r26, 0x04	; 4
    1b2e:	1d 92       	st	X+, r1
    1b30:	1d 92       	st	X+, r1
    1b32:	1d 92       	st	X+, r1
    1b34:	1c 92       	st	X, r1
    1b36:	17 97       	sbiw	r26, 0x07	; 7
    1b38:	15 c1       	rjmp	.+554    	; 0x1d64 <ParseReceived+0xcac>
    1b3a:	6d ed       	ldi	r22, 0xDD	; 221
    1b3c:	72 e0       	ldi	r23, 0x02	; 2
    1b3e:	c7 01       	movw	r24, r14
    1b40:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1b44:	89 2b       	or	r24, r25
    1b46:	09 f0       	breq	.+2      	; 0x1b4a <ParseReceived+0xa92>
    1b48:	2f c1       	rjmp	.+606    	; 0x1da8 <ParseReceived+0xcf0>
    1b4a:	f8 01       	movw	r30, r16
    1b4c:	14 82       	std	Z+4, r1	; 0x04
    1b4e:	15 82       	std	Z+5, r1	; 0x05
    1b50:	16 82       	std	Z+6, r1	; 0x06
    1b52:	17 82       	std	Z+7, r1	; 0x07
    1b54:	e3 51       	subi	r30, 0x13	; 19
    1b56:	ff 4f       	sbci	r31, 0xFF	; 255
    1b58:	80 81       	ld	r24, Z
    1b5a:	31 96       	adiw	r30, 0x01	; 1
    1b5c:	80 83       	st	Z, r24
    1b5e:	02 c1       	rjmp	.+516    	; 0x1d64 <ParseReceived+0xcac>
    1b60:	6d ed       	ldi	r22, 0xDD	; 221
    1b62:	72 e0       	ldi	r23, 0x02	; 2
    1b64:	c7 01       	movw	r24, r14
    1b66:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1b6a:	89 2b       	or	r24, r25
    1b6c:	09 f0       	breq	.+2      	; 0x1b70 <ParseReceived+0xab8>
    1b6e:	1c c1       	rjmp	.+568    	; 0x1da8 <ParseReceived+0xcf0>
    1b70:	d8 01       	movw	r26, r16
    1b72:	14 96       	adiw	r26, 0x04	; 4
    1b74:	1d 92       	st	X+, r1
    1b76:	1d 92       	st	X+, r1
    1b78:	1d 92       	st	X+, r1
    1b7a:	1c 92       	st	X, r1
    1b7c:	17 97       	sbiw	r26, 0x07	; 7
    1b7e:	f2 c0       	rjmp	.+484    	; 0x1d64 <ParseReceived+0xcac>
    1b80:	6d ed       	ldi	r22, 0xDD	; 221
    1b82:	72 e0       	ldi	r23, 0x02	; 2
    1b84:	c7 01       	movw	r24, r14
    1b86:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1b8a:	89 2b       	or	r24, r25
    1b8c:	09 f0       	breq	.+2      	; 0x1b90 <ParseReceived+0xad8>
    1b8e:	0c c1       	rjmp	.+536    	; 0x1da8 <ParseReceived+0xcf0>
    1b90:	8d e1       	ldi	r24, 0x1D	; 29
    1b92:	90 e0       	ldi	r25, 0x00	; 0
    1b94:	a0 e0       	ldi	r26, 0x00	; 0
    1b96:	b0 e0       	ldi	r27, 0x00	; 0
    1b98:	f8 01       	movw	r30, r16
    1b9a:	84 83       	std	Z+4, r24	; 0x04
    1b9c:	95 83       	std	Z+5, r25	; 0x05
    1b9e:	a6 83       	std	Z+6, r26	; 0x06
    1ba0:	b7 83       	std	Z+7, r27	; 0x07
    1ba2:	e2 5b       	subi	r30, 0xB2	; 178
    1ba4:	fe 4f       	sbci	r31, 0xFE	; 254
    1ba6:	81 81       	ldd	r24, Z+1	; 0x01
    1ba8:	81 60       	ori	r24, 0x01	; 1
    1baa:	81 83       	std	Z+1, r24	; 0x01
    1bac:	85 ec       	ldi	r24, 0xC5	; 197
    1bae:	93 e0       	ldi	r25, 0x03	; 3
    1bb0:	d8 01       	movw	r26, r16
    1bb2:	19 96       	adiw	r26, 0x09	; 9
    1bb4:	9c 93       	st	X, r25
    1bb6:	8e 93       	st	-X, r24
    1bb8:	18 97       	sbiw	r26, 0x08	; 8
    1bba:	d4 c0       	rjmp	.+424    	; 0x1d64 <ParseReceived+0xcac>
    1bbc:	6d ed       	ldi	r22, 0xDD	; 221
    1bbe:	72 e0       	ldi	r23, 0x02	; 2
    1bc0:	c7 01       	movw	r24, r14
    1bc2:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1bc6:	89 2b       	or	r24, r25
    1bc8:	09 f0       	breq	.+2      	; 0x1bcc <ParseReceived+0xb14>
    1bca:	42 c1       	rjmp	.+644    	; 0x1e50 <ParseReceived+0xd98>
    1bcc:	f8 01       	movw	r30, r16
    1bce:	14 82       	std	Z+4, r1	; 0x04
    1bd0:	15 82       	std	Z+5, r1	; 0x05
    1bd2:	16 82       	std	Z+6, r1	; 0x06
    1bd4:	17 82       	std	Z+7, r1	; 0x07
    1bd6:	eb 5b       	subi	r30, 0xBB	; 187
    1bd8:	fe 4f       	sbci	r31, 0xFE	; 254
    1bda:	01 90       	ld	r0, Z+
    1bdc:	f0 81       	ld	r31, Z
    1bde:	e0 2d       	mov	r30, r0
    1be0:	85 8d       	ldd	r24, Z+29	; 0x1d
    1be2:	88 60       	ori	r24, 0x08	; 8
    1be4:	85 8f       	std	Z+29, r24	; 0x1d
    1be6:	69 ef       	ldi	r22, 0xF9	; 249
    1be8:	72 e0       	ldi	r23, 0x02	; 2
    1bea:	c7 01       	movw	r24, r14
    1bec:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1bf0:	89 2b       	or	r24, r25
    1bf2:	09 f0       	breq	.+2      	; 0x1bf6 <ParseReceived+0xb3e>
    1bf4:	24 c1       	rjmp	.+584    	; 0x1e3e <ParseReceived+0xd86>
    1bf6:	d8 01       	movw	r26, r16
    1bf8:	14 96       	adiw	r26, 0x04	; 4
    1bfa:	1d 92       	st	X+, r1
    1bfc:	1d 92       	st	X+, r1
    1bfe:	1d 92       	st	X+, r1
    1c00:	1c 92       	st	X, r1
    1c02:	17 97       	sbiw	r26, 0x07	; 7
    1c04:	f8 01       	movw	r30, r16
    1c06:	eb 5b       	subi	r30, 0xBB	; 187
    1c08:	fe 4f       	sbci	r31, 0xFE	; 254
    1c0a:	a0 81       	ld	r26, Z
    1c0c:	b1 81       	ldd	r27, Z+1	; 0x01
    1c0e:	5d 96       	adiw	r26, 0x1d	; 29
    1c10:	1c 92       	st	X, r1
    1c12:	1e 92       	st	-X, r1
    1c14:	5c 97       	sbiw	r26, 0x1c	; 28
    1c16:	01 90       	ld	r0, Z+
    1c18:	f0 81       	ld	r31, Z
    1c1a:	e0 2d       	mov	r30, r0
    1c1c:	85 8d       	ldd	r24, Z+29	; 0x1d
    1c1e:	80 61       	ori	r24, 0x10	; 16
    1c20:	85 8f       	std	Z+29, r24	; 0x1d
    1c22:	a0 c0       	rjmp	.+320    	; 0x1d64 <ParseReceived+0xcac>
    1c24:	4b e0       	ldi	r20, 0x0B	; 11
    1c26:	50 e0       	ldi	r21, 0x00	; 0
    1c28:	6d ec       	ldi	r22, 0xCD	; 205
    1c2a:	73 e0       	ldi	r23, 0x03	; 3
    1c2c:	c7 01       	movw	r24, r14
    1c2e:	0e 94 88 20 	call	0x4110	; 0x4110 <strncmp>
    1c32:	89 2b       	or	r24, r25
    1c34:	41 f4       	brne	.+16     	; 0x1c46 <ParseReceived+0xb8e>
    1c36:	40 e0       	ldi	r20, 0x00	; 0
    1c38:	50 e0       	ldi	r21, 0x00	; 0
    1c3a:	b8 01       	movw	r22, r16
    1c3c:	67 5b       	subi	r22, 0xB7	; 183
    1c3e:	7e 4f       	sbci	r23, 0xFE	; 254
    1c40:	c7 01       	movw	r24, r14
    1c42:	0b 96       	adiw	r24, 0x0b	; 11
    1c44:	2e d8       	rcall	.-4004   	; 0xca2 <ParseIP>
    1c46:	6d ed       	ldi	r22, 0xDD	; 221
    1c48:	72 e0       	ldi	r23, 0x02	; 2
    1c4a:	c7 01       	movw	r24, r14
    1c4c:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1c50:	89 2b       	or	r24, r25
    1c52:	09 f0       	breq	.+2      	; 0x1c56 <ParseReceived+0xb9e>
    1c54:	06 c1       	rjmp	.+524    	; 0x1e62 <ParseReceived+0xdaa>
    1c56:	f8 01       	movw	r30, r16
    1c58:	14 82       	std	Z+4, r1	; 0x04
    1c5a:	15 82       	std	Z+5, r1	; 0x05
    1c5c:	16 82       	std	Z+6, r1	; 0x06
    1c5e:	17 82       	std	Z+7, r1	; 0x07
    1c60:	81 e0       	ldi	r24, 0x01	; 1
    1c62:	e3 5b       	subi	r30, 0xB3	; 179
    1c64:	fe 4f       	sbci	r31, 0xFE	; 254
    1c66:	80 83       	st	Z, r24
    1c68:	31 96       	adiw	r30, 0x01	; 1
    1c6a:	82 81       	ldd	r24, Z+2	; 0x02
    1c6c:	80 62       	ori	r24, 0x20	; 32
    1c6e:	82 83       	std	Z+2, r24	; 0x02
    1c70:	69 ef       	ldi	r22, 0xF9	; 249
    1c72:	72 e0       	ldi	r23, 0x02	; 2
    1c74:	c7 01       	movw	r24, r14
    1c76:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1c7a:	89 2b       	or	r24, r25
    1c7c:	09 f0       	breq	.+2      	; 0x1c80 <ParseReceived+0xbc8>
    1c7e:	df c0       	rjmp	.+446    	; 0x1e3e <ParseReceived+0xd86>
    1c80:	d8 01       	movw	r26, r16
    1c82:	14 96       	adiw	r26, 0x04	; 4
    1c84:	1d 92       	st	X+, r1
    1c86:	1d 92       	st	X+, r1
    1c88:	1d 92       	st	X+, r1
    1c8a:	1c 92       	st	X, r1
    1c8c:	17 97       	sbiw	r26, 0x07	; 7
    1c8e:	f8 01       	movw	r30, r16
    1c90:	e3 5b       	subi	r30, 0xB3	; 179
    1c92:	fe 4f       	sbci	r31, 0xFE	; 254
    1c94:	10 82       	st	Z, r1
    1c96:	31 96       	adiw	r30, 0x01	; 1
    1c98:	82 81       	ldd	r24, Z+2	; 0x02
    1c9a:	80 62       	ori	r24, 0x20	; 32
    1c9c:	82 83       	std	Z+2, r24	; 0x02
    1c9e:	62 c0       	rjmp	.+196    	; 0x1d64 <ParseReceived+0xcac>
    1ca0:	6d ed       	ldi	r22, 0xDD	; 221
    1ca2:	72 e0       	ldi	r23, 0x02	; 2
    1ca4:	c7 01       	movw	r24, r14
    1ca6:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1caa:	89 2b       	or	r24, r25
    1cac:	09 f0       	breq	.+2      	; 0x1cb0 <ParseReceived+0xbf8>
    1cae:	7c c0       	rjmp	.+248    	; 0x1da8 <ParseReceived+0xcf0>
    1cb0:	f8 01       	movw	r30, r16
    1cb2:	14 82       	std	Z+4, r1	; 0x04
    1cb4:	15 82       	std	Z+5, r1	; 0x05
    1cb6:	16 82       	std	Z+6, r1	; 0x06
    1cb8:	17 82       	std	Z+7, r1	; 0x07
    1cba:	54 c0       	rjmp	.+168    	; 0x1d64 <ParseReceived+0xcac>
    1cbc:	61 e0       	ldi	r22, 0x01	; 1
    1cbe:	73 e0       	ldi	r23, 0x03	; 3
    1cc0:	c7 01       	movw	r24, r14
    1cc2:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1cc6:	89 2b       	or	r24, r25
    1cc8:	09 f0       	breq	.+2      	; 0x1ccc <ParseReceived+0xc14>
    1cca:	4c c0       	rjmp	.+152    	; 0x1d64 <ParseReceived+0xcac>
    1ccc:	d8 01       	movw	r26, r16
    1cce:	14 96       	adiw	r26, 0x04	; 4
    1cd0:	1d 92       	st	X+, r1
    1cd2:	1d 92       	st	X+, r1
    1cd4:	1d 92       	st	X+, r1
    1cd6:	1c 92       	st	X, r1
    1cd8:	17 97       	sbiw	r26, 0x07	; 7
    1cda:	f8 01       	movw	r30, r16
    1cdc:	e2 5b       	subi	r30, 0xB2	; 178
    1cde:	fe 4f       	sbci	r31, 0xFE	; 254
    1ce0:	81 81       	ldd	r24, Z+1	; 0x01
    1ce2:	82 60       	ori	r24, 0x02	; 2
    1ce4:	81 83       	std	Z+1, r24	; 0x01
    1ce6:	3e c0       	rjmp	.+124    	; 0x1d64 <ParseReceived+0xcac>
    1ce8:	4a e0       	ldi	r20, 0x0A	; 10
    1cea:	50 e0       	ldi	r21, 0x00	; 0
    1cec:	69 ed       	ldi	r22, 0xD9	; 217
    1cee:	73 e0       	ldi	r23, 0x03	; 3
    1cf0:	c7 01       	movw	r24, r14
    1cf2:	0e 94 88 20 	call	0x4110	; 0x4110 <strncmp>
    1cf6:	89 2b       	or	r24, r25
    1cf8:	41 f4       	brne	.+16     	; 0x1d0a <ParseReceived+0xc52>
    1cfa:	40 e0       	ldi	r20, 0x00	; 0
    1cfc:	50 e0       	ldi	r21, 0x00	; 0
    1cfe:	b8 01       	movw	r22, r16
    1d00:	6b 52       	subi	r22, 0x2B	; 43
    1d02:	7f 4f       	sbci	r23, 0xFF	; 255
    1d04:	c7 01       	movw	r24, r14
    1d06:	0c 96       	adiw	r24, 0x0c	; 12
    1d08:	24 d9       	rcall	.-3512   	; 0xf52 <ParseMAC>
    1d0a:	6d ed       	ldi	r22, 0xDD	; 221
    1d0c:	72 e0       	ldi	r23, 0x02	; 2
    1d0e:	c7 01       	movw	r24, r14
    1d10:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1d14:	89 2b       	or	r24, r25
    1d16:	09 f0       	breq	.+2      	; 0x1d1a <ParseReceived+0xc62>
    1d18:	47 c0       	rjmp	.+142    	; 0x1da8 <ParseReceived+0xcf0>
    1d1a:	f8 01       	movw	r30, r16
    1d1c:	14 82       	std	Z+4, r1	; 0x04
    1d1e:	15 82       	std	Z+5, r1	; 0x05
    1d20:	16 82       	std	Z+6, r1	; 0x06
    1d22:	17 82       	std	Z+7, r1	; 0x07
    1d24:	1f c0       	rjmp	.+62     	; 0x1d64 <ParseReceived+0xcac>
    1d26:	49 e0       	ldi	r20, 0x09	; 9
    1d28:	50 e0       	ldi	r21, 0x00	; 0
    1d2a:	64 ee       	ldi	r22, 0xE4	; 228
    1d2c:	73 e0       	ldi	r23, 0x03	; 3
    1d2e:	c7 01       	movw	r24, r14
    1d30:	0e 94 88 20 	call	0x4110	; 0x4110 <strncmp>
    1d34:	89 2b       	or	r24, r25
    1d36:	41 f4       	brne	.+16     	; 0x1d48 <ParseReceived+0xc90>
    1d38:	40 e0       	ldi	r20, 0x00	; 0
    1d3a:	50 e0       	ldi	r21, 0x00	; 0
    1d3c:	b8 01       	movw	r22, r16
    1d3e:	69 51       	subi	r22, 0x19	; 25
    1d40:	7f 4f       	sbci	r23, 0xFF	; 255
    1d42:	c7 01       	movw	r24, r14
    1d44:	0b 96       	adiw	r24, 0x0b	; 11
    1d46:	05 d9       	rcall	.-3574   	; 0xf52 <ParseMAC>
    1d48:	6d ed       	ldi	r22, 0xDD	; 221
    1d4a:	72 e0       	ldi	r23, 0x02	; 2
    1d4c:	c7 01       	movw	r24, r14
    1d4e:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1d52:	89 2b       	or	r24, r25
    1d54:	49 f5       	brne	.+82     	; 0x1da8 <ParseReceived+0xcf0>
    1d56:	d8 01       	movw	r26, r16
    1d58:	14 96       	adiw	r26, 0x04	; 4
    1d5a:	1d 92       	st	X+, r1
    1d5c:	1d 92       	st	X+, r1
    1d5e:	1d 92       	st	X+, r1
    1d60:	1c 92       	st	X, r1
    1d62:	17 97       	sbiw	r26, 0x07	; 7
    1d64:	6d ed       	ldi	r22, 0xDD	; 221
    1d66:	72 e0       	ldi	r23, 0x02	; 2
    1d68:	c7 01       	movw	r24, r14
    1d6a:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1d6e:	89 2b       	or	r24, r25
    1d70:	d9 f4       	brne	.+54     	; 0x1da8 <ParseReceived+0xcf0>
    1d72:	f8 01       	movw	r30, r16
    1d74:	e2 5b       	subi	r30, 0xB2	; 178
    1d76:	fe 4f       	sbci	r31, 0xFE	; 254
    1d78:	81 81       	ldd	r24, Z+1	; 0x01
    1d7a:	82 60       	ori	r24, 0x02	; 2
    1d7c:	81 83       	std	Z+1, r24	; 0x01
    1d7e:	f8 01       	movw	r30, r16
    1d80:	84 81       	ldd	r24, Z+4	; 0x04
    1d82:	95 81       	ldd	r25, Z+5	; 0x05
    1d84:	a6 81       	ldd	r26, Z+6	; 0x06
    1d86:	b7 81       	ldd	r27, Z+7	; 0x07
    1d88:	08 97       	sbiw	r24, 0x08	; 8
    1d8a:	a1 05       	cpc	r26, r1
    1d8c:	b1 05       	cpc	r27, r1
    1d8e:	61 f0       	breq	.+24     	; 0x1da8 <ParseReceived+0xcf0>
    1d90:	84 81       	ldd	r24, Z+4	; 0x04
    1d92:	95 81       	ldd	r25, Z+5	; 0x05
    1d94:	a6 81       	ldd	r26, Z+6	; 0x06
    1d96:	b7 81       	ldd	r27, Z+7	; 0x07
    1d98:	4d 97       	sbiw	r24, 0x1d	; 29
    1d9a:	a1 05       	cpc	r26, r1
    1d9c:	b1 05       	cpc	r27, r1
    1d9e:	21 f0       	breq	.+8      	; 0x1da8 <ParseReceived+0xcf0>
    1da0:	14 82       	std	Z+4, r1	; 0x04
    1da2:	15 82       	std	Z+5, r1	; 0x05
    1da4:	16 82       	std	Z+6, r1	; 0x06
    1da6:	17 82       	std	Z+7, r1	; 0x07
    1da8:	69 ef       	ldi	r22, 0xF9	; 249
    1daa:	72 e0       	ldi	r23, 0x02	; 2
    1dac:	c7 01       	movw	r24, r14
    1dae:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1db2:	89 2b       	or	r24, r25
    1db4:	39 f0       	breq	.+14     	; 0x1dc4 <ParseReceived+0xd0c>
    1db6:	69 e0       	ldi	r22, 0x09	; 9
    1db8:	73 e0       	ldi	r23, 0x03	; 3
    1dba:	c7 01       	movw	r24, r14
    1dbc:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1dc0:	89 2b       	or	r24, r25
    1dc2:	99 f4       	brne	.+38     	; 0x1dea <ParseReceived+0xd32>
    1dc4:	f8 01       	movw	r30, r16
    1dc6:	e2 5b       	subi	r30, 0xB2	; 178
    1dc8:	fe 4f       	sbci	r31, 0xFE	; 254
    1dca:	81 81       	ldd	r24, Z+1	; 0x01
    1dcc:	8d 7f       	andi	r24, 0xFD	; 253
    1dce:	81 83       	std	Z+1, r24	; 0x01
    1dd0:	f8 01       	movw	r30, r16
    1dd2:	14 82       	std	Z+4, r1	; 0x04
    1dd4:	15 82       	std	Z+5, r1	; 0x05
    1dd6:	16 82       	std	Z+6, r1	; 0x06
    1dd8:	17 82       	std	Z+7, r1	; 0x07
    1dda:	60 e0       	ldi	r22, 0x00	; 0
    1ddc:	70 e0       	ldi	r23, 0x00	; 0
    1dde:	cb 01       	movw	r24, r22
    1de0:	49 c0       	rjmp	.+146    	; 0x1e74 <ParseReceived+0xdbc>
    1de2:	60 e0       	ldi	r22, 0x00	; 0
    1de4:	70 e0       	ldi	r23, 0x00	; 0
    1de6:	cb 01       	movw	r24, r22
    1de8:	45 c0       	rjmp	.+138    	; 0x1e74 <ParseReceived+0xdbc>
    1dea:	60 e0       	ldi	r22, 0x00	; 0
    1dec:	70 e0       	ldi	r23, 0x00	; 0
    1dee:	cb 01       	movw	r24, r22
    1df0:	41 c0       	rjmp	.+130    	; 0x1e74 <ParseReceived+0xdbc>
    1df2:	67 ee       	ldi	r22, 0xE7	; 231
    1df4:	72 e0       	ldi	r23, 0x02	; 2
    1df6:	c7 01       	movw	r24, r14
    1df8:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1dfc:	89 2b       	or	r24, r25
    1dfe:	09 f4       	brne	.+2      	; 0x1e02 <ParseReceived+0xd4a>
    1e00:	14 cd       	rjmp	.-1496   	; 0x182a <ParseReceived+0x772>
    1e02:	d2 cf       	rjmp	.-92     	; 0x1da8 <ParseReceived+0xcf0>
    1e04:	d7 01       	movw	r26, r14
    1e06:	bd 01       	movw	r22, r26
    1e08:	6f 5f       	subi	r22, 0xFF	; 255
    1e0a:	7f 4f       	sbci	r23, 0xFF	; 255
    1e0c:	11 96       	adiw	r26, 0x01	; 1
    1e0e:	8c 91       	ld	r24, X
    1e10:	11 97       	sbiw	r26, 0x01	; 1
    1e12:	88 23       	and	r24, r24
    1e14:	09 f4       	brne	.+2      	; 0x1e18 <ParseReceived+0xd60>
    1e16:	58 cd       	rjmp	.-1360   	; 0x18c8 <ParseReceived+0x810>
    1e18:	ad 01       	movw	r20, r26
    1e1a:	4e 5f       	subi	r20, 0xFE	; 254
    1e1c:	5f 4f       	sbci	r21, 0xFF	; 255
    1e1e:	13 96       	adiw	r26, 0x03	; 3
    1e20:	90 e0       	ldi	r25, 0x00	; 0
    1e22:	44 cd       	rjmp	.-1400   	; 0x18ac <ParseReceived+0x7f4>
    1e24:	f7 01       	movw	r30, r14
    1e26:	d8 01       	movw	r26, r16
    1e28:	a1 51       	subi	r26, 0x11	; 17
    1e2a:	bf 4f       	sbci	r27, 0xFF	; 255
    1e2c:	1c 92       	st	X, r1
    1e2e:	81 81       	ldd	r24, Z+1	; 0x01
    1e30:	82 32       	cpi	r24, 0x22	; 34
    1e32:	09 f4       	brne	.+2      	; 0x1e36 <ParseReceived+0xd7e>
    1e34:	a6 cd       	rjmp	.-1204   	; 0x1982 <ParseReceived+0x8ca>
    1e36:	9f 01       	movw	r18, r30
    1e38:	2f 5f       	subi	r18, 0xFF	; 255
    1e3a:	3f 4f       	sbci	r19, 0xFF	; 255
    1e3c:	a5 cd       	rjmp	.-1206   	; 0x1988 <ParseReceived+0x8d0>
    1e3e:	6d ed       	ldi	r22, 0xDD	; 221
    1e40:	72 e0       	ldi	r23, 0x02	; 2
    1e42:	c7 01       	movw	r24, r14
    1e44:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1e48:	89 2b       	or	r24, r25
    1e4a:	09 f4       	brne	.+2      	; 0x1e4e <ParseReceived+0xd96>
    1e4c:	92 cf       	rjmp	.-220    	; 0x1d72 <ParseReceived+0xcba>
    1e4e:	b3 cf       	rjmp	.-154    	; 0x1db6 <ParseReceived+0xcfe>
    1e50:	69 ef       	ldi	r22, 0xF9	; 249
    1e52:	72 e0       	ldi	r23, 0x02	; 2
    1e54:	c7 01       	movw	r24, r14
    1e56:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1e5a:	89 2b       	or	r24, r25
    1e5c:	09 f4       	brne	.+2      	; 0x1e60 <ParseReceived+0xda8>
    1e5e:	cb ce       	rjmp	.-618    	; 0x1bf6 <ParseReceived+0xb3e>
    1e60:	aa cf       	rjmp	.-172    	; 0x1db6 <ParseReceived+0xcfe>
    1e62:	69 ef       	ldi	r22, 0xF9	; 249
    1e64:	72 e0       	ldi	r23, 0x02	; 2
    1e66:	c7 01       	movw	r24, r14
    1e68:	0e 94 7f 20 	call	0x40fe	; 0x40fe <strcmp>
    1e6c:	89 2b       	or	r24, r25
    1e6e:	09 f4       	brne	.+2      	; 0x1e72 <ParseReceived+0xdba>
    1e70:	07 cf       	rjmp	.-498    	; 0x1c80 <ParseReceived+0xbc8>
    1e72:	a1 cf       	rjmp	.-190    	; 0x1db6 <ParseReceived+0xcfe>
    1e74:	0f 90       	pop	r0
    1e76:	0f 90       	pop	r0
    1e78:	df 91       	pop	r29
    1e7a:	cf 91       	pop	r28
    1e7c:	1f 91       	pop	r17
    1e7e:	0f 91       	pop	r16
    1e80:	ff 90       	pop	r15
    1e82:	ef 90       	pop	r14
    1e84:	df 90       	pop	r13
    1e86:	cf 90       	pop	r12
    1e88:	bf 90       	pop	r11
    1e8a:	af 90       	pop	r10
    1e8c:	9f 90       	pop	r9
    1e8e:	8f 90       	pop	r8
    1e90:	7f 90       	pop	r7
    1e92:	6f 90       	pop	r6
    1e94:	5f 90       	pop	r5
    1e96:	4f 90       	pop	r4
    1e98:	08 95       	ret

00001e9a <ESP8266_TimeUpdate>:
    1e9a:	0f 93       	push	r16
    1e9c:	1f 93       	push	r17
    1e9e:	fc 01       	movw	r30, r24
    1ea0:	06 85       	ldd	r16, Z+14	; 0x0e
    1ea2:	17 85       	ldd	r17, Z+15	; 0x0f
    1ea4:	20 89       	ldd	r18, Z+16	; 0x10
    1ea6:	31 89       	ldd	r19, Z+17	; 0x11
    1ea8:	40 0f       	add	r20, r16
    1eaa:	51 1f       	adc	r21, r17
    1eac:	62 1f       	adc	r22, r18
    1eae:	73 1f       	adc	r23, r19
    1eb0:	46 87       	std	Z+14, r20	; 0x0e
    1eb2:	57 87       	std	Z+15, r21	; 0x0f
    1eb4:	60 8b       	std	Z+16, r22	; 0x10
    1eb6:	71 8b       	std	Z+17, r23	; 0x11
    1eb8:	1f 91       	pop	r17
    1eba:	0f 91       	pop	r16
    1ebc:	08 95       	ret

00001ebe <ESP8266_DataReceived>:
    1ebe:	9b 01       	movw	r18, r22
    1ec0:	40 e0       	ldi	r20, 0x00	; 0
    1ec2:	50 e0       	ldi	r21, 0x00	; 0
    1ec4:	bc 01       	movw	r22, r24
    1ec6:	84 e9       	ldi	r24, 0x94	; 148
    1ec8:	90 e1       	ldi	r25, 0x10	; 16
    1eca:	0e 94 2f 01 	call	0x25e	; 0x25e <BUFFER_Write>
    1ece:	cb 01       	movw	r24, r22
    1ed0:	08 95       	ret

00001ed2 <ESP8266_Callback_ServerConnectionActive>:
    1ed2:	08 95       	ret

00001ed4 <ESP8266_Callback_ServerConnectionClosed>:
    1ed4:	08 95       	ret

00001ed6 <ESP8266_Callback_ServerConnectionDataReceived>:
    1ed6:	08 95       	ret

00001ed8 <ESP8266_Callback_ServerConnectionSendData>:
    1ed8:	80 e0       	ldi	r24, 0x00	; 0
    1eda:	90 e0       	ldi	r25, 0x00	; 0
    1edc:	08 95       	ret

00001ede <ESP8266_Callback_ServerConnectionDataSent>:
    1ede:	08 95       	ret

00001ee0 <ESP8266_Callback_ServerConnectionDataSentError>:
    1ee0:	08 95       	ret

00001ee2 <ESP8266_Callback_DomainIP>:
    1ee2:	08 95       	ret

00001ee4 <ESP8266_Update>:
    1ee4:	2f 92       	push	r2
    1ee6:	3f 92       	push	r3
    1ee8:	4f 92       	push	r4
    1eea:	5f 92       	push	r5
    1eec:	7f 92       	push	r7
    1eee:	8f 92       	push	r8
    1ef0:	9f 92       	push	r9
    1ef2:	af 92       	push	r10
    1ef4:	bf 92       	push	r11
    1ef6:	cf 92       	push	r12
    1ef8:	df 92       	push	r13
    1efa:	ef 92       	push	r14
    1efc:	ff 92       	push	r15
    1efe:	0f 93       	push	r16
    1f00:	1f 93       	push	r17
    1f02:	cf 93       	push	r28
    1f04:	df 93       	push	r29
    1f06:	cd b7       	in	r28, 0x3d	; 61
    1f08:	de b7       	in	r29, 0x3e	; 62
    1f0a:	c3 58       	subi	r28, 0x83	; 131
    1f0c:	d1 09       	sbc	r29, r1
    1f0e:	0f b6       	in	r0, 0x3f	; 63
    1f10:	f8 94       	cli
    1f12:	de bf       	out	0x3e, r29	; 62
    1f14:	0f be       	out	0x3f, r0	; 63
    1f16:	cd bf       	out	0x3d, r28	; 61
    1f18:	fc 01       	movw	r30, r24
    1f1a:	dc 01       	movw	r26, r24
    1f1c:	a1 5b       	subi	r26, 0xB1	; 177
    1f1e:	be 4f       	sbci	r27, 0xFE	; 254
    1f20:	8c 91       	ld	r24, X
    1f22:	84 ff       	sbrs	r24, 4
    1f24:	25 c0       	rjmp	.+74     	; 0x1f70 <ESP8266_Update+0x8c>
    1f26:	06 85       	ldd	r16, Z+14	; 0x0e
    1f28:	17 85       	ldd	r17, Z+15	; 0x0f
    1f2a:	20 89       	ldd	r18, Z+16	; 0x10
    1f2c:	31 89       	ldd	r19, Z+17	; 0x11
    1f2e:	46 85       	ldd	r20, Z+14	; 0x0e
    1f30:	57 85       	ldd	r21, Z+15	; 0x0f
    1f32:	60 89       	ldd	r22, Z+16	; 0x10
    1f34:	71 89       	ldd	r23, Z+17	; 0x11
    1f36:	13 96       	adiw	r26, 0x03	; 3
    1f38:	8d 91       	ld	r24, X+
    1f3a:	9c 91       	ld	r25, X
    1f3c:	a0 e0       	ldi	r26, 0x00	; 0
    1f3e:	b0 e0       	ldi	r27, 0x00	; 0
    1f40:	40 1b       	sub	r20, r16
    1f42:	51 0b       	sbc	r21, r17
    1f44:	62 0b       	sbc	r22, r18
    1f46:	73 0b       	sbc	r23, r19
    1f48:	84 17       	cp	r24, r20
    1f4a:	95 07       	cpc	r25, r21
    1f4c:	a6 07       	cpc	r26, r22
    1f4e:	b7 07       	cpc	r27, r23
    1f50:	08 f4       	brcc	.+2      	; 0x1f54 <ESP8266_Update+0x70>
    1f52:	9c c5       	rjmp	.+2872   	; 0x2a8c <__stack+0x88d>
    1f54:	46 85       	ldd	r20, Z+14	; 0x0e
    1f56:	57 85       	ldd	r21, Z+15	; 0x0f
    1f58:	60 89       	ldd	r22, Z+16	; 0x10
    1f5a:	71 89       	ldd	r23, Z+17	; 0x11
    1f5c:	40 1b       	sub	r20, r16
    1f5e:	51 0b       	sbc	r21, r17
    1f60:	62 0b       	sbc	r22, r18
    1f62:	73 0b       	sbc	r23, r19
    1f64:	84 17       	cp	r24, r20
    1f66:	95 07       	cpc	r25, r21
    1f68:	a6 07       	cpc	r26, r22
    1f6a:	b7 07       	cpc	r27, r23
    1f6c:	98 f7       	brcc	.-26     	; 0x1f54 <ESP8266_Update+0x70>
    1f6e:	90 c5       	rjmp	.+2848   	; 0x2a90 <__stack+0x891>
    1f70:	df 01       	movw	r26, r30
    1f72:	a2 5b       	subi	r26, 0xB2	; 178
    1f74:	be 4f       	sbci	r27, 0xFE	; 254
    1f76:	11 96       	adiw	r26, 0x01	; 1
    1f78:	8c 91       	ld	r24, X
    1f7a:	11 97       	sbiw	r26, 0x01	; 1
    1f7c:	80 61       	ori	r24, 0x10	; 16
    1f7e:	11 96       	adiw	r26, 0x01	; 1
    1f80:	8c 93       	st	X, r24
    1f82:	86 89       	ldd	r24, Z+22	; 0x16
    1f84:	97 89       	ldd	r25, Z+23	; 0x17
    1f86:	a0 8d       	ldd	r26, Z+24	; 0x18
    1f88:	b1 8d       	ldd	r27, Z+25	; 0x19
    1f8a:	89 2b       	or	r24, r25
    1f8c:	8a 2b       	or	r24, r26
    1f8e:	8b 2b       	or	r24, r27
    1f90:	41 f4       	brne	.+16     	; 0x1fa2 <ESP8266_Update+0xbe>
    1f92:	80 e3       	ldi	r24, 0x30	; 48
    1f94:	95 e7       	ldi	r25, 0x75	; 117
    1f96:	a0 e0       	ldi	r26, 0x00	; 0
    1f98:	b0 e0       	ldi	r27, 0x00	; 0
    1f9a:	86 8b       	std	Z+22, r24	; 0x16
    1f9c:	97 8b       	std	Z+23, r25	; 0x17
    1f9e:	a0 8f       	std	Z+24, r26	; 0x18
    1fa0:	b1 8f       	std	Z+25, r27	; 0x19
    1fa2:	8f 01       	movw	r16, r30
    1fa4:	86 85       	ldd	r24, Z+14	; 0x0e
    1fa6:	97 85       	ldd	r25, Z+15	; 0x0f
    1fa8:	a0 89       	ldd	r26, Z+16	; 0x10
    1faa:	b1 89       	ldd	r27, Z+17	; 0x11
    1fac:	42 85       	ldd	r20, Z+10	; 0x0a
    1fae:	53 85       	ldd	r21, Z+11	; 0x0b
    1fb0:	64 85       	ldd	r22, Z+12	; 0x0c
    1fb2:	75 85       	ldd	r23, Z+13	; 0x0d
    1fb4:	84 1b       	sub	r24, r20
    1fb6:	95 0b       	sbc	r25, r21
    1fb8:	a6 0b       	sbc	r26, r22
    1fba:	b7 0b       	sbc	r27, r23
    1fbc:	46 89       	ldd	r20, Z+22	; 0x16
    1fbe:	57 89       	ldd	r21, Z+23	; 0x17
    1fc0:	60 8d       	ldd	r22, Z+24	; 0x18
    1fc2:	71 8d       	ldd	r23, Z+25	; 0x19
    1fc4:	48 17       	cp	r20, r24
    1fc6:	59 07       	cpc	r21, r25
    1fc8:	6a 07       	cpc	r22, r26
    1fca:	7b 07       	cpc	r23, r27
    1fcc:	18 f5       	brcc	.+70     	; 0x2014 <ESP8266_Update+0x130>
    1fce:	84 81       	ldd	r24, Z+4	; 0x04
    1fd0:	95 81       	ldd	r25, Z+5	; 0x05
    1fd2:	a6 81       	ldd	r26, Z+6	; 0x06
    1fd4:	b7 81       	ldd	r27, Z+7	; 0x07
    1fd6:	14 82       	std	Z+4, r1	; 0x04
    1fd8:	15 82       	std	Z+5, r1	; 0x05
    1fda:	16 82       	std	Z+6, r1	; 0x06
    1fdc:	17 82       	std	Z+7, r1	; 0x07
    1fde:	8a 30       	cpi	r24, 0x0A	; 10
    1fe0:	c9 f4       	brne	.+50     	; 0x2014 <ESP8266_Update+0x130>
    1fe2:	e4 5c       	subi	r30, 0xC4	; 196
    1fe4:	fe 4f       	sbci	r31, 0xFE	; 254
    1fe6:	80 81       	ld	r24, Z
    1fe8:	f3 e2       	ldi	r31, 0x23	; 35
    1fea:	8f 02       	muls	r24, r31
    1fec:	c0 01       	movw	r24, r0
    1fee:	11 24       	eor	r1, r1
    1ff0:	f8 01       	movw	r30, r16
    1ff2:	e8 0f       	add	r30, r24
    1ff4:	f9 1f       	adc	r31, r25
    1ff6:	17 aa       	std	Z+55, r1	; 0x37
    1ff8:	16 aa       	std	Z+54, r1	; 0x36
    1ffa:	4a 96       	adiw	r24, 0x1a	; 26
    1ffc:	b8 01       	movw	r22, r16
    1ffe:	68 0f       	add	r22, r24
    2000:	79 1f       	adc	r23, r25
    2002:	c8 01       	movw	r24, r16
    2004:	0e 94 04 1f 	call	0x3e08	; 0x3e08 <ESP8266_Callback_ClientConnectionTimeout>
    2008:	f8 01       	movw	r30, r16
    200a:	e2 5b       	subi	r30, 0xB2	; 178
    200c:	fe 4f       	sbci	r31, 0xFE	; 254
    200e:	81 81       	ldd	r24, Z+1	; 0x01
    2010:	8d 7f       	andi	r24, 0xFD	; 253
    2012:	81 83       	std	Z+1, r24	; 0x01
    2014:	f8 01       	movw	r30, r16
    2016:	e5 5e       	subi	r30, 0xE5	; 229
    2018:	fe 4f       	sbci	r31, 0xFE	; 254
    201a:	80 81       	ld	r24, Z
    201c:	81 11       	cpse	r24, r1
    201e:	50 c0       	rjmp	.+160    	; 0x20c0 <ESP8266_Update+0x1dc>
    2020:	a4 e9       	ldi	r26, 0x94	; 148
    2022:	b0 e1       	ldi	r27, 0x10	; 16
    2024:	1c 96       	adiw	r26, 0x0c	; 12
    2026:	ed 91       	ld	r30, X+
    2028:	fc 91       	ld	r31, X
    202a:	1d 97       	sbiw	r26, 0x0d	; 13
    202c:	18 96       	adiw	r26, 0x08	; 8
    202e:	8d 91       	ld	r24, X+
    2030:	9c 91       	ld	r25, X
    2032:	19 97       	sbiw	r26, 0x09	; 9
    2034:	e8 0f       	add	r30, r24
    2036:	f9 1f       	adc	r31, r25
    2038:	80 81       	ld	r24, Z
    203a:	8b 32       	cpi	r24, 0x2B	; 43
    203c:	09 f0       	breq	.+2      	; 0x2040 <ESP8266_Update+0x15c>
    203e:	40 c0       	rjmp	.+128    	; 0x20c0 <ESP8266_Update+0x1dc>
    2040:	25 e0       	ldi	r18, 0x05	; 5
    2042:	30 e0       	ldi	r19, 0x00	; 0
    2044:	40 e0       	ldi	r20, 0x00	; 0
    2046:	50 e0       	ldi	r21, 0x00	; 0
    2048:	65 e1       	ldi	r22, 0x15	; 21
    204a:	73 e0       	ldi	r23, 0x03	; 3
    204c:	cd 01       	movw	r24, r26
    204e:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <BUFFER_Find>
    2052:	67 2b       	or	r22, r23
    2054:	68 2b       	or	r22, r24
    2056:	69 2b       	or	r22, r25
    2058:	99 f5       	brne	.+102    	; 0x20c0 <ESP8266_Update+0x1dc>
    205a:	21 e0       	ldi	r18, 0x01	; 1
    205c:	30 e0       	ldi	r19, 0x00	; 0
    205e:	40 e0       	ldi	r20, 0x00	; 0
    2060:	50 e0       	ldi	r21, 0x00	; 0
    2062:	67 ed       	ldi	r22, 0xD7	; 215
    2064:	73 e0       	ldi	r23, 0x03	; 3
    2066:	84 e9       	ldi	r24, 0x94	; 148
    2068:	90 e1       	ldi	r25, 0x10	; 16
    206a:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <BUFFER_Find>
    206e:	6b 01       	movw	r12, r22
    2070:	7c 01       	movw	r14, r24
    2072:	21 e0       	ldi	r18, 0x01	; 1
    2074:	c2 1a       	sub	r12, r18
    2076:	d1 08       	sbc	r13, r1
    2078:	e1 08       	sbc	r14, r1
    207a:	f1 08       	sbc	r15, r1
    207c:	32 e2       	ldi	r19, 0x22	; 34
    207e:	c3 16       	cp	r12, r19
    2080:	d1 04       	cpc	r13, r1
    2082:	e1 04       	cpc	r14, r1
    2084:	f1 04       	cpc	r15, r1
    2086:	e0 f4       	brcc	.+56     	; 0x20c0 <ESP8266_Update+0x1dc>
    2088:	9b 01       	movw	r18, r22
    208a:	ac 01       	movw	r20, r24
    208c:	2f 5f       	subi	r18, 0xFF	; 255
    208e:	3f 4f       	sbci	r19, 0xFF	; 255
    2090:	4f 4f       	sbci	r20, 0xFF	; 255
    2092:	5f 4f       	sbci	r21, 0xFF	; 255
    2094:	be 01       	movw	r22, r28
    2096:	6e 5f       	subi	r22, 0xFE	; 254
    2098:	7f 4f       	sbci	r23, 0xFF	; 255
    209a:	84 e9       	ldi	r24, 0x94	; 148
    209c:	90 e1       	ldi	r25, 0x10	; 16
    209e:	0e 94 be 02 	call	0x57c	; 0x57c <BUFFER_Read>
    20a2:	e2 e0       	ldi	r30, 0x02	; 2
    20a4:	f0 e0       	ldi	r31, 0x00	; 0
    20a6:	ec 0f       	add	r30, r28
    20a8:	fd 1f       	adc	r31, r29
    20aa:	e6 0f       	add	r30, r22
    20ac:	f7 1f       	adc	r31, r23
    20ae:	10 82       	st	Z, r1
    20b0:	21 e0       	ldi	r18, 0x01	; 1
    20b2:	ab 01       	movw	r20, r22
    20b4:	be 01       	movw	r22, r28
    20b6:	6e 5f       	subi	r22, 0xFE	; 254
    20b8:	7f 4f       	sbci	r23, 0xFF	; 255
    20ba:	c8 01       	movw	r24, r16
    20bc:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <ParseReceived>
    20c0:	f8 01       	movw	r30, r16
    20c2:	84 81       	ldd	r24, Z+4	; 0x04
    20c4:	95 81       	ldd	r25, Z+5	; 0x05
    20c6:	a6 81       	ldd	r26, Z+6	; 0x06
    20c8:	b7 81       	ldd	r27, Z+7	; 0x07
    20ca:	4d 97       	sbiw	r24, 0x1d	; 29
    20cc:	a1 05       	cpc	r26, r1
    20ce:	b1 05       	cpc	r27, r1
    20d0:	09 f0       	breq	.+2      	; 0x20d4 <ESP8266_Update+0x1f0>
    20d2:	a0 c0       	rjmp	.+320    	; 0x2214 <__stack+0x15>
    20d4:	e1 5b       	subi	r30, 0xB1	; 177
    20d6:	fe 4f       	sbci	r31, 0xFE	; 254
    20d8:	80 81       	ld	r24, Z
    20da:	80 ff       	sbrs	r24, 0
    20dc:	9b c0       	rjmp	.+310    	; 0x2214 <__stack+0x15>
    20de:	22 e0       	ldi	r18, 0x02	; 2
    20e0:	30 e0       	ldi	r19, 0x00	; 0
    20e2:	40 e0       	ldi	r20, 0x00	; 0
    20e4:	50 e0       	ldi	r21, 0x00	; 0
    20e6:	6e ee       	ldi	r22, 0xEE	; 238
    20e8:	73 e0       	ldi	r23, 0x03	; 3
    20ea:	84 e9       	ldi	r24, 0x94	; 148
    20ec:	90 e1       	ldi	r25, 0x10	; 16
    20ee:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <BUFFER_Find>
    20f2:	77 23       	and	r23, r23
    20f4:	74 f0       	brlt	.+28     	; 0x2112 <ESP8266_Update+0x22e>
    20f6:	67 2b       	or	r22, r23
    20f8:	41 f5       	brne	.+80     	; 0x214a <ESP8266_Update+0x266>
    20fa:	22 e0       	ldi	r18, 0x02	; 2
    20fc:	30 e0       	ldi	r19, 0x00	; 0
    20fe:	40 e0       	ldi	r20, 0x00	; 0
    2100:	50 e0       	ldi	r21, 0x00	; 0
    2102:	be 01       	movw	r22, r28
    2104:	6e 57       	subi	r22, 0x7E	; 126
    2106:	7f 4f       	sbci	r23, 0xFF	; 255
    2108:	84 e9       	ldi	r24, 0x94	; 148
    210a:	90 e1       	ldi	r25, 0x10	; 16
    210c:	0e 94 be 02 	call	0x57c	; 0x57c <BUFFER_Read>
    2110:	1c c0       	rjmp	.+56     	; 0x214a <ESP8266_Update+0x266>
    2112:	22 e0       	ldi	r18, 0x02	; 2
    2114:	30 e0       	ldi	r19, 0x00	; 0
    2116:	40 e0       	ldi	r20, 0x00	; 0
    2118:	50 e0       	ldi	r21, 0x00	; 0
    211a:	6e ee       	ldi	r22, 0xEE	; 238
    211c:	73 e0       	ldi	r23, 0x03	; 3
    211e:	86 ea       	ldi	r24, 0xA6	; 166
    2120:	90 e1       	ldi	r25, 0x10	; 16
    2122:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <BUFFER_Find>
    2126:	61 15       	cp	r22, r1
    2128:	71 05       	cpc	r23, r1
    212a:	61 f4       	brne	.+24     	; 0x2144 <ESP8266_Update+0x260>
    212c:	22 e0       	ldi	r18, 0x02	; 2
    212e:	30 e0       	ldi	r19, 0x00	; 0
    2130:	40 e0       	ldi	r20, 0x00	; 0
    2132:	50 e0       	ldi	r21, 0x00	; 0
    2134:	be 01       	movw	r22, r28
    2136:	6e 57       	subi	r22, 0x7E	; 126
    2138:	7f 4f       	sbci	r23, 0xFF	; 255
    213a:	86 ea       	ldi	r24, 0xA6	; 166
    213c:	90 e1       	ldi	r25, 0x10	; 16
    213e:	0e 94 be 02 	call	0x57c	; 0x57c <BUFFER_Read>
    2142:	03 c0       	rjmp	.+6      	; 0x214a <ESP8266_Update+0x266>
    2144:	77 23       	and	r23, r23
    2146:	0c f4       	brge	.+2      	; 0x214a <ESP8266_Update+0x266>
    2148:	65 c0       	rjmp	.+202    	; 0x2214 <__stack+0x15>
    214a:	f8 01       	movw	r30, r16
    214c:	eb 5b       	subi	r30, 0xBB	; 187
    214e:	fe 4f       	sbci	r31, 0xFE	; 254
    2150:	e0 80       	ld	r14, Z
    2152:	f1 80       	ldd	r15, Z+1	; 0x01
    2154:	39 96       	adiw	r30, 0x09	; 9
    2156:	81 81       	ldd	r24, Z+1	; 0x01
    2158:	8e 7f       	andi	r24, 0xFE	; 254
    215a:	81 83       	std	Z+1, r24	; 0x01
    215c:	8d e1       	ldi	r24, 0x1D	; 29
    215e:	90 e0       	ldi	r25, 0x00	; 0
    2160:	a0 e0       	ldi	r26, 0x00	; 0
    2162:	b0 e0       	ldi	r27, 0x00	; 0
    2164:	f8 01       	movw	r30, r16
    2166:	84 83       	std	Z+4, r24	; 0x04
    2168:	95 83       	std	Z+5, r25	; 0x05
    216a:	a6 83       	std	Z+6, r26	; 0x06
    216c:	b7 83       	std	Z+7, r27	; 0x07
    216e:	d7 01       	movw	r26, r14
    2170:	5c 96       	adiw	r26, 0x1c	; 28
    2172:	8c 91       	ld	r24, X
    2174:	5c 97       	sbiw	r26, 0x1c	; 28
    2176:	86 ff       	sbrs	r24, 6
    2178:	0a c0       	rjmp	.+20     	; 0x218e <ESP8266_Update+0x2aa>
    217a:	5f 96       	adiw	r26, 0x1f	; 31
    217c:	ad 90       	ld	r10, X+
    217e:	bc 90       	ld	r11, X
    2180:	90 97       	sbiw	r26, 0x20	; 32
    2182:	91 96       	adiw	r26, 0x21	; 33
    2184:	8c 91       	ld	r24, X
    2186:	91 97       	sbiw	r26, 0x21	; 33
    2188:	92 96       	adiw	r26, 0x22	; 34
    218a:	9c 91       	ld	r25, X
    218c:	13 c0       	rjmp	.+38     	; 0x21b4 <ESP8266_Update+0x2d0>
    218e:	f7 01       	movw	r30, r14
    2190:	a0 88       	ldd	r10, Z+16	; 0x10
    2192:	b1 88       	ldd	r11, Z+17	; 0x11
    2194:	81 ff       	sbrs	r24, 1
    2196:	08 c0       	rjmp	.+16     	; 0x21a8 <ESP8266_Update+0x2c4>
    2198:	24 eb       	ldi	r18, 0xB4	; 180
    219a:	35 e0       	ldi	r19, 0x05	; 5
    219c:	a5 01       	movw	r20, r10
    219e:	b7 01       	movw	r22, r14
    21a0:	c8 01       	movw	r24, r16
    21a2:	0e 94 52 1e 	call	0x3ca4	; 0x3ca4 <ESP8266_Callback_ClientConnectionSendData>
    21a6:	06 c0       	rjmp	.+12     	; 0x21b4 <ESP8266_Update+0x2d0>
    21a8:	24 eb       	ldi	r18, 0xB4	; 180
    21aa:	35 e0       	ldi	r19, 0x05	; 5
    21ac:	a5 01       	movw	r20, r10
    21ae:	b7 01       	movw	r22, r14
    21b0:	c8 01       	movw	r24, r16
    21b2:	92 de       	rcall	.-732    	; 0x1ed8 <ESP8266_Callback_ServerConnectionSendData>
    21b4:	c8 2e       	mov	r12, r24
    21b6:	d9 2e       	mov	r13, r25
    21b8:	f5 eb       	ldi	r31, 0xB5	; 181
    21ba:	cf 16       	cp	r12, r31
    21bc:	f5 e0       	ldi	r31, 0x05	; 5
    21be:	df 06       	cpc	r13, r31
    21c0:	30 f0       	brcs	.+12     	; 0x21ce <ESP8266_Update+0x2ea>
    21c2:	0f 2e       	mov	r0, r31
    21c4:	f4 eb       	ldi	r31, 0xB4	; 180
    21c6:	cf 2e       	mov	r12, r31
    21c8:	f5 e0       	ldi	r31, 0x05	; 5
    21ca:	df 2e       	mov	r13, r31
    21cc:	f0 2d       	mov	r31, r0
    21ce:	c1 14       	cp	r12, r1
    21d0:	d1 04       	cpc	r13, r1
    21d2:	99 f0       	breq	.+38     	; 0x21fa <ESP8266_Update+0x316>
    21d4:	b6 01       	movw	r22, r12
    21d6:	c5 01       	movw	r24, r10
    21d8:	0e 94 96 1c 	call	0x392c	; 0x392c <ESP8266_LL_USARTSend>
    21dc:	f8 01       	movw	r30, r16
    21de:	ef 5b       	subi	r30, 0xBF	; 191
    21e0:	fe 4f       	sbci	r31, 0xFE	; 254
    21e2:	80 81       	ld	r24, Z
    21e4:	91 81       	ldd	r25, Z+1	; 0x01
    21e6:	a2 81       	ldd	r26, Z+2	; 0x02
    21e8:	b3 81       	ldd	r27, Z+3	; 0x03
    21ea:	8c 0d       	add	r24, r12
    21ec:	9d 1d       	adc	r25, r13
    21ee:	a1 1d       	adc	r26, r1
    21f0:	b1 1d       	adc	r27, r1
    21f2:	80 83       	st	Z, r24
    21f4:	91 83       	std	Z+1, r25	; 0x01
    21f6:	a2 83       	std	Z+2, r26	; 0x02
    21f8:	b3 83       	std	Z+3, r27	; 0x03
    21fa:	62 e0       	ldi	r22, 0x02	; 2
    21fc:	70 e0       	ldi	r23, 0x00	; 0
    21fe:	81 ef       	ldi	r24, 0xF1	; 241
    2200:	93 e0       	ldi	r25, 0x03	; 3
    2202:	0e 94 96 1c 	call	0x392c	; 0x392c <ESP8266_LL_USARTSend>
    2206:	d7 01       	movw	r26, r14
    2208:	5c 96       	adiw	r26, 0x1c	; 28
    220a:	8c 91       	ld	r24, X
    220c:	5c 97       	sbiw	r26, 0x1c	; 28
    220e:	84 60       	ori	r24, 0x04	; 4
    2210:	5c 96       	adiw	r26, 0x1c	; 28
    2212:	8c 93       	st	X, r24
    2214:	f8 01       	movw	r30, r16
    2216:	84 81       	ldd	r24, Z+4	; 0x04
    2218:	95 81       	ldd	r25, Z+5	; 0x05
    221a:	a6 81       	ldd	r26, Z+6	; 0x06
    221c:	b7 81       	ldd	r27, Z+7	; 0x07
    221e:	41 97       	sbiw	r24, 0x11	; 17
    2220:	a1 05       	cpc	r26, r1
    2222:	b1 05       	cpc	r27, r1
    2224:	11 f5       	brne	.+68     	; 0x226a <__stack+0x6b>
    2226:	e5 5e       	subi	r30, 0xE5	; 229
    2228:	fe 4f       	sbci	r31, 0xFE	; 254
    222a:	80 81       	ld	r24, Z
    222c:	81 11       	cpse	r24, r1
    222e:	1d c0       	rjmp	.+58     	; 0x226a <__stack+0x6b>
    2230:	24 e0       	ldi	r18, 0x04	; 4
    2232:	30 e0       	ldi	r19, 0x00	; 0
    2234:	40 e0       	ldi	r20, 0x00	; 0
    2236:	50 e0       	ldi	r21, 0x00	; 0
    2238:	6d ed       	ldi	r22, 0xDD	; 221
    223a:	72 e0       	ldi	r23, 0x02	; 2
    223c:	84 e9       	ldi	r24, 0x94	; 148
    223e:	90 e1       	ldi	r25, 0x10	; 16
    2240:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <BUFFER_Find>
    2244:	99 23       	and	r25, r25
    2246:	8c f0       	brlt	.+34     	; 0x226a <__stack+0x6b>
    2248:	84 e9       	ldi	r24, 0x94	; 148
    224a:	90 e1       	ldi	r25, 0x10	; 16
    224c:	0e 94 6a 03 	call	0x6d4	; 0x6d4 <BUFFER_Reset>
    2250:	d8 01       	movw	r26, r16
    2252:	14 96       	adiw	r26, 0x04	; 4
    2254:	1d 92       	st	X+, r1
    2256:	1d 92       	st	X+, r1
    2258:	1d 92       	st	X+, r1
    225a:	1c 92       	st	X, r1
    225c:	17 97       	sbiw	r26, 0x07	; 7
    225e:	f8 01       	movw	r30, r16
    2260:	e2 5b       	subi	r30, 0xB2	; 178
    2262:	fe 4f       	sbci	r31, 0xFE	; 254
    2264:	81 81       	ldd	r24, Z+1	; 0x01
    2266:	82 60       	ori	r24, 0x02	; 2
    2268:	81 83       	std	Z+1, r24	; 0x01
    226a:	78 01       	movw	r14, r16
    226c:	b5 ee       	ldi	r27, 0xE5	; 229
    226e:	eb 1a       	sub	r14, r27
    2270:	be ef       	ldi	r27, 0xFE	; 254
    2272:	fb 0a       	sbc	r15, r27
    2274:	5e 01       	movw	r10, r28
    2276:	e2 e0       	ldi	r30, 0x02	; 2
    2278:	ae 0e       	add	r10, r30
    227a:	b1 1c       	adc	r11, r1
    227c:	8a 2c       	mov	r8, r10
    227e:	9b 2c       	mov	r9, r11
    2280:	17 c0       	rjmp	.+46     	; 0x22b0 <__stack+0xb1>
    2282:	21 e0       	ldi	r18, 0x01	; 1
    2284:	ab 01       	movw	r20, r22
    2286:	68 2d       	mov	r22, r8
    2288:	79 2d       	mov	r23, r9
    228a:	c8 01       	movw	r24, r16
    228c:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <ParseReceived>
    2290:	fb 01       	movw	r30, r22
    2292:	ef 2b       	or	r30, r31
    2294:	69 f0       	breq	.+26     	; 0x22b0 <__stack+0xb1>
    2296:	9b 01       	movw	r18, r22
    2298:	ac 01       	movw	r20, r24
    229a:	44 27       	eor	r20, r20
    229c:	55 27       	eor	r21, r21
    229e:	c6 1a       	sub	r12, r22
    22a0:	d7 0a       	sbc	r13, r23
    22a2:	b5 01       	movw	r22, r10
    22a4:	6c 0d       	add	r22, r12
    22a6:	7d 1d       	adc	r23, r13
    22a8:	84 e9       	ldi	r24, 0x94	; 148
    22aa:	90 e1       	ldi	r25, 0x10	; 16
    22ac:	0e 94 da 01 	call	0x3b4	; 0x3b4 <BUFFER_WriteToTop>
    22b0:	d7 01       	movw	r26, r14
    22b2:	8c 91       	ld	r24, X
    22b4:	88 23       	and	r24, r24
    22b6:	61 f0       	breq	.+24     	; 0x22d0 <__stack+0xd1>
    22b8:	68 01       	movw	r12, r16
    22ba:	b5 ee       	ldi	r27, 0xE5	; 229
    22bc:	cb 1a       	sub	r12, r27
    22be:	be ef       	ldi	r27, 0xFE	; 254
    22c0:	db 0a       	sbc	r13, r27
    22c2:	5e 01       	movw	r10, r28
    22c4:	e2 e0       	ldi	r30, 0x02	; 2
    22c6:	ae 0e       	add	r10, r30
    22c8:	b1 1c       	adc	r11, r1
    22ca:	8a 2c       	mov	r8, r10
    22cc:	9b 2c       	mov	r9, r11
    22ce:	26 c0       	rjmp	.+76     	; 0x231c <__stack+0x11d>
    22d0:	20 e8       	ldi	r18, 0x80	; 128
    22d2:	30 e0       	ldi	r19, 0x00	; 0
    22d4:	40 e0       	ldi	r20, 0x00	; 0
    22d6:	50 e0       	ldi	r21, 0x00	; 0
    22d8:	68 2d       	mov	r22, r8
    22da:	79 2d       	mov	r23, r9
    22dc:	84 e9       	ldi	r24, 0x94	; 148
    22de:	90 e1       	ldi	r25, 0x10	; 16
    22e0:	0e 94 24 05 	call	0xa48	; 0xa48 <BUFFER_ReadString>
    22e4:	6b 01       	movw	r12, r22
    22e6:	61 15       	cp	r22, r1
    22e8:	71 05       	cpc	r23, r1
    22ea:	59 f6       	brne	.-106    	; 0x2282 <__stack+0x83>
    22ec:	e5 cf       	rjmp	.-54     	; 0x22b8 <__stack+0xb9>
    22ee:	20 e0       	ldi	r18, 0x00	; 0
    22f0:	ab 01       	movw	r20, r22
    22f2:	68 2d       	mov	r22, r8
    22f4:	79 2d       	mov	r23, r9
    22f6:	c8 01       	movw	r24, r16
    22f8:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <ParseReceived>
    22fc:	fb 01       	movw	r30, r22
    22fe:	ef 2b       	or	r30, r31
    2300:	69 f0       	breq	.+26     	; 0x231c <__stack+0x11d>
    2302:	9b 01       	movw	r18, r22
    2304:	ac 01       	movw	r20, r24
    2306:	44 27       	eor	r20, r20
    2308:	55 27       	eor	r21, r21
    230a:	e6 1a       	sub	r14, r22
    230c:	f7 0a       	sbc	r15, r23
    230e:	b5 01       	movw	r22, r10
    2310:	6e 0d       	add	r22, r14
    2312:	7f 1d       	adc	r23, r15
    2314:	86 ea       	ldi	r24, 0xA6	; 166
    2316:	90 e1       	ldi	r25, 0x10	; 16
    2318:	0e 94 da 01 	call	0x3b4	; 0x3b4 <BUFFER_WriteToTop>
    231c:	d6 01       	movw	r26, r12
    231e:	8c 91       	ld	r24, X
    2320:	81 11       	cpse	r24, r1
    2322:	1f c0       	rjmp	.+62     	; 0x2362 <__stack+0x163>
    2324:	f8 01       	movw	r30, r16
    2326:	84 81       	ldd	r24, Z+4	; 0x04
    2328:	95 81       	ldd	r25, Z+5	; 0x05
    232a:	a6 81       	ldd	r26, Z+6	; 0x06
    232c:	b7 81       	ldd	r27, Z+7	; 0x07
    232e:	89 2b       	or	r24, r25
    2330:	8a 2b       	or	r24, r26
    2332:	8b 2b       	or	r24, r27
    2334:	09 f0       	breq	.+2      	; 0x2338 <__stack+0x139>
    2336:	53 c1       	rjmp	.+678    	; 0x25de <__stack+0x3df>
    2338:	20 e8       	ldi	r18, 0x80	; 128
    233a:	30 e0       	ldi	r19, 0x00	; 0
    233c:	40 e0       	ldi	r20, 0x00	; 0
    233e:	50 e0       	ldi	r21, 0x00	; 0
    2340:	68 2d       	mov	r22, r8
    2342:	79 2d       	mov	r23, r9
    2344:	86 ea       	ldi	r24, 0xA6	; 166
    2346:	90 e1       	ldi	r25, 0x10	; 16
    2348:	0e 94 24 05 	call	0xa48	; 0xa48 <BUFFER_ReadString>
    234c:	7b 01       	movw	r14, r22
    234e:	61 15       	cp	r22, r1
    2350:	71 05       	cpc	r23, r1
    2352:	69 f6       	brne	.-102    	; 0x22ee <__stack+0xef>
    2354:	f8 01       	movw	r30, r16
    2356:	e5 5e       	subi	r30, 0xE5	; 229
    2358:	fe 4f       	sbci	r31, 0xFE	; 254
    235a:	80 81       	ld	r24, Z
    235c:	88 23       	and	r24, r24
    235e:	09 f4       	brne	.+2      	; 0x2362 <__stack+0x163>
    2360:	3e c1       	rjmp	.+636    	; 0x25de <__stack+0x3df>
    2362:	f8 01       	movw	r30, r16
    2364:	ef 5d       	subi	r30, 0xDF	; 223
    2366:	fe 4f       	sbci	r31, 0xFE	; 254
    2368:	80 81       	ld	r24, Z
    236a:	81 11       	cpse	r24, r1
    236c:	07 c0       	rjmp	.+14     	; 0x237c <__stack+0x17d>
    236e:	0f 2e       	mov	r0, r31
    2370:	f6 ea       	ldi	r31, 0xA6	; 166
    2372:	8f 2e       	mov	r8, r31
    2374:	f0 e1       	ldi	r31, 0x10	; 16
    2376:	9f 2e       	mov	r9, r31
    2378:	f0 2d       	mov	r31, r0
    237a:	06 c0       	rjmp	.+12     	; 0x2388 <__stack+0x189>
    237c:	0f 2e       	mov	r0, r31
    237e:	f4 e9       	ldi	r31, 0x94	; 148
    2380:	8f 2e       	mov	r8, r31
    2382:	f0 e1       	ldi	r31, 0x10	; 16
    2384:	9f 2e       	mov	r9, r31
    2386:	f0 2d       	mov	r31, r0
    2388:	68 01       	movw	r12, r16
    238a:	f0 ee       	ldi	r31, 0xE0	; 224
    238c:	cf 1a       	sub	r12, r31
    238e:	fe ef       	ldi	r31, 0xFE	; 254
    2390:	df 0a       	sbc	r13, r31
    2392:	58 01       	movw	r10, r16
    2394:	22 ee       	ldi	r18, 0xE2	; 226
    2396:	a2 1a       	sub	r10, r18
    2398:	2e ef       	ldi	r18, 0xFE	; 254
    239a:	b2 0a       	sbc	r11, r18
    239c:	0f 2e       	mov	r0, r31
    239e:	f3 e2       	ldi	r31, 0x23	; 35
    23a0:	7f 2e       	mov	r7, r31
    23a2:	f0 2d       	mov	r31, r0
    23a4:	78 01       	movw	r14, r16
    23a6:	34 ee       	ldi	r19, 0xE4	; 228
    23a8:	e3 1a       	sub	r14, r19
    23aa:	3e ef       	ldi	r19, 0xFE	; 254
    23ac:	f3 0a       	sbc	r15, r19
    23ae:	89 c0       	rjmp	.+274    	; 0x24c2 <__stack+0x2c3>
    23b0:	21 e0       	ldi	r18, 0x01	; 1
    23b2:	30 e0       	ldi	r19, 0x00	; 0
    23b4:	40 e0       	ldi	r20, 0x00	; 0
    23b6:	50 e0       	ldi	r21, 0x00	; 0
    23b8:	be 01       	movw	r22, r28
    23ba:	6f 5f       	subi	r22, 0xFF	; 255
    23bc:	7f 4f       	sbci	r23, 0xFF	; 255
    23be:	c4 01       	movw	r24, r8
    23c0:	0e 94 be 02 	call	0x57c	; 0x57c <BUFFER_Read>
    23c4:	29 81       	ldd	r18, Y+1	; 0x01
    23c6:	d6 01       	movw	r26, r12
    23c8:	8c 91       	ld	r24, X
    23ca:	f8 01       	movw	r30, r16
    23cc:	78 9e       	mul	r7, r24
    23ce:	e0 0d       	add	r30, r0
    23d0:	f1 1d       	adc	r31, r1
    23d2:	11 24       	eor	r1, r1
    23d4:	02 a4       	ldd	r0, Z+42	; 0x2a
    23d6:	f3 a5       	ldd	r31, Z+43	; 0x2b
    23d8:	e0 2d       	mov	r30, r0
    23da:	d7 01       	movw	r26, r14
    23dc:	8d 91       	ld	r24, X+
    23de:	9c 91       	ld	r25, X
    23e0:	11 97       	sbiw	r26, 0x01	; 1
    23e2:	e8 0f       	add	r30, r24
    23e4:	f9 1f       	adc	r31, r25
    23e6:	20 83       	st	Z, r18
    23e8:	8d 91       	ld	r24, X+
    23ea:	9c 91       	ld	r25, X
    23ec:	11 97       	sbiw	r26, 0x01	; 1
    23ee:	01 96       	adiw	r24, 0x01	; 1
    23f0:	8d 93       	st	X+, r24
    23f2:	9c 93       	st	X, r25
    23f4:	f5 01       	movw	r30, r10
    23f6:	20 81       	ld	r18, Z
    23f8:	31 81       	ldd	r19, Z+1	; 0x01
    23fa:	2f 5f       	subi	r18, 0xFF	; 255
    23fc:	3f 4f       	sbci	r19, 0xFF	; 255
    23fe:	31 83       	std	Z+1, r19	; 0x01
    2400:	20 83       	st	Z, r18
    2402:	84 3b       	cpi	r24, 0xB4	; 180
    2404:	f5 e0       	ldi	r31, 0x05	; 5
    2406:	9f 07       	cpc	r25, r31
    2408:	08 f4       	brcc	.+2      	; 0x240c <__stack+0x20d>
    240a:	5b c0       	rjmp	.+182    	; 0x24c2 <__stack+0x2c3>
    240c:	d6 01       	movw	r26, r12
    240e:	ec 91       	ld	r30, X
    2410:	ac 01       	movw	r20, r24
    2412:	60 e0       	ldi	r22, 0x00	; 0
    2414:	70 e0       	ldi	r23, 0x00	; 0
    2416:	d8 01       	movw	r26, r16
    2418:	7e 9e       	mul	r7, r30
    241a:	a0 0d       	add	r26, r0
    241c:	b1 1d       	adc	r27, r1
    241e:	11 24       	eor	r1, r1
    2420:	fd 01       	movw	r30, r26
    2422:	22 a0       	ldd	r2, Z+34	; 0x22
    2424:	33 a0       	ldd	r3, Z+35	; 0x23
    2426:	44 a0       	ldd	r4, Z+36	; 0x24
    2428:	55 a0       	ldd	r5, Z+37	; 0x25
    242a:	42 15       	cp	r20, r2
    242c:	53 05       	cpc	r21, r3
    242e:	64 05       	cpc	r22, r4
    2430:	75 05       	cpc	r23, r5
    2432:	09 f4       	brne	.+2      	; 0x2436 <__stack+0x237>
    2434:	46 c0       	rjmp	.+140    	; 0x24c2 <__stack+0x2c3>
    2436:	fd 01       	movw	r30, r26
    2438:	95 a7       	std	Z+45, r25	; 0x2d
    243a:	84 a7       	std	Z+44, r24	; 0x2c
    243c:	22 a5       	ldd	r18, Z+42	; 0x2a
    243e:	33 a5       	ldd	r19, Z+43	; 0x2b
    2440:	f9 01       	movw	r30, r18
    2442:	e8 0f       	add	r30, r24
    2444:	f9 1f       	adc	r31, r25
    2446:	10 82       	st	Z, r1
    2448:	f6 01       	movw	r30, r12
    244a:	80 81       	ld	r24, Z
    244c:	28 2f       	mov	r18, r24
    244e:	30 e0       	ldi	r19, 0x00	; 0
    2450:	f8 01       	movw	r30, r16
    2452:	78 9e       	mul	r7, r24
    2454:	e0 0d       	add	r30, r0
    2456:	f1 1d       	adc	r31, r1
    2458:	11 24       	eor	r1, r1
    245a:	86 a9       	ldd	r24, Z+54	; 0x36
    245c:	87 7f       	andi	r24, 0xF7	; 247
    245e:	86 ab       	std	Z+54, r24	; 0x36
    2460:	81 ff       	sbrs	r24, 1
    2462:	12 c0       	rjmp	.+36     	; 0x2488 <__stack+0x289>
    2464:	72 9e       	mul	r7, r18
    2466:	b0 01       	movw	r22, r0
    2468:	73 9e       	mul	r7, r19
    246a:	70 0d       	add	r23, r0
    246c:	11 24       	eor	r1, r1
    246e:	f8 01       	movw	r30, r16
    2470:	e6 0f       	add	r30, r22
    2472:	f7 1f       	adc	r31, r23
    2474:	42 a5       	ldd	r20, Z+42	; 0x2a
    2476:	53 a5       	ldd	r21, Z+43	; 0x2b
    2478:	66 5e       	subi	r22, 0xE6	; 230
    247a:	7f 4f       	sbci	r23, 0xFF	; 255
    247c:	60 0f       	add	r22, r16
    247e:	71 1f       	adc	r23, r17
    2480:	c8 01       	movw	r24, r16
    2482:	0e 94 9c 1e 	call	0x3d38	; 0x3d38 <ESP8266_Callback_ClientConnectionDataReceived>
    2486:	10 c0       	rjmp	.+32     	; 0x24a8 <__stack+0x2a9>
    2488:	72 9e       	mul	r7, r18
    248a:	b0 01       	movw	r22, r0
    248c:	73 9e       	mul	r7, r19
    248e:	70 0d       	add	r23, r0
    2490:	11 24       	eor	r1, r1
    2492:	f8 01       	movw	r30, r16
    2494:	e6 0f       	add	r30, r22
    2496:	f7 1f       	adc	r31, r23
    2498:	42 a5       	ldd	r20, Z+42	; 0x2a
    249a:	53 a5       	ldd	r21, Z+43	; 0x2b
    249c:	66 5e       	subi	r22, 0xE6	; 230
    249e:	7f 4f       	sbci	r23, 0xFF	; 255
    24a0:	60 0f       	add	r22, r16
    24a2:	71 1f       	adc	r23, r17
    24a4:	c8 01       	movw	r24, r16
    24a6:	17 dd       	rcall	.-1490   	; 0x1ed6 <ESP8266_Callback_ServerConnectionDataReceived>
    24a8:	d7 01       	movw	r26, r14
    24aa:	1d 92       	st	X+, r1
    24ac:	1c 92       	st	X, r1
    24ae:	f6 01       	movw	r30, r12
    24b0:	80 81       	ld	r24, Z
    24b2:	f8 01       	movw	r30, r16
    24b4:	78 9e       	mul	r7, r24
    24b6:	e0 0d       	add	r30, r0
    24b8:	f1 1d       	adc	r31, r1
    24ba:	11 24       	eor	r1, r1
    24bc:	86 a9       	ldd	r24, Z+54	; 0x36
    24be:	8f 7d       	andi	r24, 0xDF	; 223
    24c0:	86 ab       	std	Z+54, r24	; 0x36
    24c2:	d6 01       	movw	r26, r12
    24c4:	2c 91       	ld	r18, X
    24c6:	f5 01       	movw	r30, r10
    24c8:	80 81       	ld	r24, Z
    24ca:	91 81       	ldd	r25, Z+1	; 0x01
    24cc:	a0 e0       	ldi	r26, 0x00	; 0
    24ce:	b0 e0       	ldi	r27, 0x00	; 0
    24d0:	f8 01       	movw	r30, r16
    24d2:	72 9e       	mul	r7, r18
    24d4:	e0 0d       	add	r30, r0
    24d6:	f1 1d       	adc	r31, r1
    24d8:	11 24       	eor	r1, r1
    24da:	42 a1       	ldd	r20, Z+34	; 0x22
    24dc:	53 a1       	ldd	r21, Z+35	; 0x23
    24de:	64 a1       	ldd	r22, Z+36	; 0x24
    24e0:	75 a1       	ldd	r23, Z+37	; 0x25
    24e2:	84 17       	cp	r24, r20
    24e4:	95 07       	cpc	r25, r21
    24e6:	a6 07       	cpc	r26, r22
    24e8:	b7 07       	cpc	r27, r23
    24ea:	08 f0       	brcs	.+2      	; 0x24ee <__stack+0x2ef>
    24ec:	d3 c2       	rjmp	.+1446   	; 0x2a94 <__stack+0x895>
    24ee:	c4 01       	movw	r24, r8
    24f0:	0e 94 7d 02 	call	0x4fa	; 0x4fa <BUFFER_GetFull>
    24f4:	67 2b       	or	r22, r23
    24f6:	68 2b       	or	r22, r24
    24f8:	69 2b       	or	r22, r25
    24fa:	09 f0       	breq	.+2      	; 0x24fe <__stack+0x2ff>
    24fc:	59 cf       	rjmp	.-334    	; 0x23b0 <__stack+0x1b1>
    24fe:	f8 01       	movw	r30, r16
    2500:	e0 5e       	subi	r30, 0xE0	; 224
    2502:	fe 4f       	sbci	r31, 0xFE	; 254
    2504:	20 81       	ld	r18, Z
    2506:	32 97       	sbiw	r30, 0x02	; 2
    2508:	80 81       	ld	r24, Z
    250a:	91 81       	ldd	r25, Z+1	; 0x01
    250c:	a0 e0       	ldi	r26, 0x00	; 0
    250e:	b0 e0       	ldi	r27, 0x00	; 0
    2510:	e2 2e       	mov	r14, r18
    2512:	f1 2c       	mov	r15, r1
    2514:	f8 01       	movw	r30, r16
    2516:	33 e2       	ldi	r19, 0x23	; 35
    2518:	23 9f       	mul	r18, r19
    251a:	e0 0d       	add	r30, r0
    251c:	f1 1d       	adc	r31, r1
    251e:	11 24       	eor	r1, r1
    2520:	42 a1       	ldd	r20, Z+34	; 0x22
    2522:	53 a1       	ldd	r21, Z+35	; 0x23
    2524:	64 a1       	ldd	r22, Z+36	; 0x24
    2526:	75 a1       	ldd	r23, Z+37	; 0x25
    2528:	84 17       	cp	r24, r20
    252a:	95 07       	cpc	r25, r21
    252c:	a6 07       	cpc	r26, r22
    252e:	b7 07       	cpc	r27, r23
    2530:	08 f4       	brcc	.+2      	; 0x2534 <__stack+0x335>
    2532:	55 c0       	rjmp	.+170    	; 0x25de <__stack+0x3df>
    2534:	f8 01       	movw	r30, r16
    2536:	e5 5e       	subi	r30, 0xE5	; 229
    2538:	fe 4f       	sbci	r31, 0xFE	; 254
    253a:	10 82       	st	Z, r1
    253c:	83 e2       	ldi	r24, 0x23	; 35
    253e:	8e 9d       	mul	r24, r14
    2540:	f0 01       	movw	r30, r0
    2542:	8f 9d       	mul	r24, r15
    2544:	f0 0d       	add	r31, r0
    2546:	11 24       	eor	r1, r1
    2548:	e0 0f       	add	r30, r16
    254a:	f1 1f       	adc	r31, r17
    254c:	d8 01       	movw	r26, r16
    254e:	a4 5e       	subi	r26, 0xE4	; 228
    2550:	be 4f       	sbci	r27, 0xFE	; 254
    2552:	8d 91       	ld	r24, X+
    2554:	9c 91       	ld	r25, X
    2556:	95 a7       	std	Z+45, r25	; 0x2d
    2558:	84 a7       	std	Z+44, r24	; 0x2c
    255a:	86 a9       	ldd	r24, Z+54	; 0x36
    255c:	88 60       	ori	r24, 0x08	; 8
    255e:	86 ab       	std	Z+54, r24	; 0x36
    2560:	85 ff       	sbrs	r24, 5
    2562:	30 c0       	rjmp	.+96     	; 0x25c4 <__stack+0x3c5>
    2564:	83 e2       	ldi	r24, 0x23	; 35
    2566:	8e 9d       	mul	r24, r14
    2568:	f0 01       	movw	r30, r0
    256a:	8f 9d       	mul	r24, r15
    256c:	f0 0d       	add	r31, r0
    256e:	11 24       	eor	r1, r1
    2570:	e0 0f       	add	r30, r16
    2572:	f1 1f       	adc	r31, r17
    2574:	c2 a4       	ldd	r12, Z+42	; 0x2a
    2576:	d3 a4       	ldd	r13, Z+43	; 0x2b
    2578:	64 ef       	ldi	r22, 0xF4	; 244
    257a:	73 e0       	ldi	r23, 0x03	; 3
    257c:	c6 01       	movw	r24, r12
    257e:	0e 94 96 20 	call	0x412c	; 0x412c <strstr>
    2582:	00 97       	sbiw	r24, 0x00	; 0
    2584:	39 f4       	brne	.+14     	; 0x2594 <__stack+0x395>
    2586:	64 e0       	ldi	r22, 0x04	; 4
    2588:	74 e0       	ldi	r23, 0x04	; 4
    258a:	c6 01       	movw	r24, r12
    258c:	0e 94 96 20 	call	0x412c	; 0x412c <strstr>
    2590:	00 97       	sbiw	r24, 0x00	; 0
    2592:	c1 f0       	breq	.+48     	; 0x25c4 <__stack+0x3c5>
    2594:	dc 01       	movw	r26, r24
    2596:	1f 96       	adiw	r26, 0x0f	; 15
    2598:	2c 91       	ld	r18, X
    259a:	20 32       	cpi	r18, 0x20	; 32
    259c:	11 f0       	breq	.+4      	; 0x25a2 <__stack+0x3a3>
    259e:	0f 96       	adiw	r24, 0x0f	; 15
    25a0:	01 c0       	rjmp	.+2      	; 0x25a4 <__stack+0x3a5>
    25a2:	40 96       	adiw	r24, 0x10	; 16
    25a4:	60 e0       	ldi	r22, 0x00	; 0
    25a6:	70 e0       	ldi	r23, 0x00	; 0
    25a8:	0e 94 c5 05 	call	0xb8a	; 0xb8a <ParseNumber>
    25ac:	23 e2       	ldi	r18, 0x23	; 35
    25ae:	2e 9d       	mul	r18, r14
    25b0:	f0 01       	movw	r30, r0
    25b2:	2f 9d       	mul	r18, r15
    25b4:	f0 0d       	add	r31, r0
    25b6:	11 24       	eor	r1, r1
    25b8:	e0 0f       	add	r30, r16
    25ba:	f1 1f       	adc	r31, r17
    25bc:	66 a7       	std	Z+46, r22	; 0x2e
    25be:	77 a7       	std	Z+47, r23	; 0x2f
    25c0:	80 ab       	std	Z+48, r24	; 0x30
    25c2:	91 ab       	std	Z+49, r25	; 0x31
    25c4:	f8 01       	movw	r30, r16
    25c6:	e0 5e       	subi	r30, 0xE0	; 224
    25c8:	fe 4f       	sbci	r31, 0xFE	; 254
    25ca:	80 81       	ld	r24, Z
    25cc:	f8 01       	movw	r30, r16
    25ce:	b3 e2       	ldi	r27, 0x23	; 35
    25d0:	8b 9f       	mul	r24, r27
    25d2:	e0 0d       	add	r30, r0
    25d4:	f1 1d       	adc	r31, r1
    25d6:	11 24       	eor	r1, r1
    25d8:	86 a9       	ldd	r24, Z+54	; 0x36
    25da:	80 68       	ori	r24, 0x80	; 128
    25dc:	86 ab       	std	Z+54, r24	; 0x36
    25de:	f8 01       	movw	r30, r16
    25e0:	e2 5b       	subi	r30, 0xB2	; 178
    25e2:	fe 4f       	sbci	r31, 0xFE	; 254
    25e4:	81 81       	ldd	r24, Z+1	; 0x01
    25e6:	8f 7e       	andi	r24, 0xEF	; 239
    25e8:	81 83       	std	Z+1, r24	; 0x01
    25ea:	85 ff       	sbrs	r24, 5
    25ec:	11 c0       	rjmp	.+34     	; 0x2610 <__stack+0x411>
    25ee:	f8 01       	movw	r30, r16
    25f0:	84 81       	ldd	r24, Z+4	; 0x04
    25f2:	95 81       	ldd	r25, Z+5	; 0x05
    25f4:	a6 81       	ldd	r26, Z+6	; 0x06
    25f6:	b7 81       	ldd	r27, Z+7	; 0x07
    25f8:	89 2b       	or	r24, r25
    25fa:	8a 2b       	or	r24, r26
    25fc:	8b 2b       	or	r24, r27
    25fe:	41 f4       	brne	.+16     	; 0x2610 <__stack+0x411>
    2600:	e2 5b       	subi	r30, 0xB2	; 178
    2602:	fe 4f       	sbci	r31, 0xFE	; 254
    2604:	81 81       	ldd	r24, Z+1	; 0x01
    2606:	8f 7d       	andi	r24, 0xDF	; 223
    2608:	81 83       	std	Z+1, r24	; 0x01
    260a:	c8 01       	movw	r24, r16
    260c:	0e 94 cf 1d 	call	0x3b9e	; 0x3b9e <ESP8266_Callback_DeviceReady>
    2610:	f8 01       	movw	r30, r16
    2612:	e1 5b       	subi	r30, 0xB1	; 177
    2614:	fe 4f       	sbci	r31, 0xFE	; 254
    2616:	80 81       	ld	r24, Z
    2618:	86 ff       	sbrs	r24, 6
    261a:	11 c0       	rjmp	.+34     	; 0x263e <__stack+0x43f>
    261c:	f8 01       	movw	r30, r16
    261e:	84 81       	ldd	r24, Z+4	; 0x04
    2620:	95 81       	ldd	r25, Z+5	; 0x05
    2622:	a6 81       	ldd	r26, Z+6	; 0x06
    2624:	b7 81       	ldd	r27, Z+7	; 0x07
    2626:	89 2b       	or	r24, r25
    2628:	8a 2b       	or	r24, r26
    262a:	8b 2b       	or	r24, r27
    262c:	41 f4       	brne	.+16     	; 0x263e <__stack+0x43f>
    262e:	e2 5b       	subi	r30, 0xB2	; 178
    2630:	fe 4f       	sbci	r31, 0xFE	; 254
    2632:	81 81       	ldd	r24, Z+1	; 0x01
    2634:	8f 7b       	andi	r24, 0xBF	; 191
    2636:	81 83       	std	Z+1, r24	; 0x01
    2638:	c8 01       	movw	r24, r16
    263a:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <ESP8266_Callback_WatchdogReset>
    263e:	f8 01       	movw	r30, r16
    2640:	e1 5b       	subi	r30, 0xB1	; 177
    2642:	fe 4f       	sbci	r31, 0xFE	; 254
    2644:	80 81       	ld	r24, Z
    2646:	88 23       	and	r24, r24
    2648:	8c f4       	brge	.+34     	; 0x266c <__stack+0x46d>
    264a:	f8 01       	movw	r30, r16
    264c:	84 81       	ldd	r24, Z+4	; 0x04
    264e:	95 81       	ldd	r25, Z+5	; 0x05
    2650:	a6 81       	ldd	r26, Z+6	; 0x06
    2652:	b7 81       	ldd	r27, Z+7	; 0x07
    2654:	89 2b       	or	r24, r25
    2656:	8a 2b       	or	r24, r26
    2658:	8b 2b       	or	r24, r27
    265a:	41 f4       	brne	.+16     	; 0x266c <__stack+0x46d>
    265c:	e2 5b       	subi	r30, 0xB2	; 178
    265e:	fe 4f       	sbci	r31, 0xFE	; 254
    2660:	81 81       	ldd	r24, Z+1	; 0x01
    2662:	8f 77       	andi	r24, 0x7F	; 127
    2664:	81 83       	std	Z+1, r24	; 0x01
    2666:	c8 01       	movw	r24, r16
    2668:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <ESP8266_Callback_WifiConnected>
    266c:	f8 01       	movw	r30, r16
    266e:	e0 5b       	subi	r30, 0xB0	; 176
    2670:	fe 4f       	sbci	r31, 0xFE	; 254
    2672:	80 81       	ld	r24, Z
    2674:	80 ff       	sbrs	r24, 0
    2676:	11 c0       	rjmp	.+34     	; 0x269a <__stack+0x49b>
    2678:	f8 01       	movw	r30, r16
    267a:	84 81       	ldd	r24, Z+4	; 0x04
    267c:	95 81       	ldd	r25, Z+5	; 0x05
    267e:	a6 81       	ldd	r26, Z+6	; 0x06
    2680:	b7 81       	ldd	r27, Z+7	; 0x07
    2682:	89 2b       	or	r24, r25
    2684:	8a 2b       	or	r24, r26
    2686:	8b 2b       	or	r24, r27
    2688:	41 f4       	brne	.+16     	; 0x269a <__stack+0x49b>
    268a:	e2 5b       	subi	r30, 0xB2	; 178
    268c:	fe 4f       	sbci	r31, 0xFE	; 254
    268e:	82 81       	ldd	r24, Z+2	; 0x02
    2690:	8e 7f       	andi	r24, 0xFE	; 254
    2692:	82 83       	std	Z+2, r24	; 0x02
    2694:	c8 01       	movw	r24, r16
    2696:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <ESP8266_Callback_WifiDisconnected>
    269a:	f8 01       	movw	r30, r16
    269c:	e0 5b       	subi	r30, 0xB0	; 176
    269e:	fe 4f       	sbci	r31, 0xFE	; 254
    26a0:	80 81       	ld	r24, Z
    26a2:	82 ff       	sbrs	r24, 2
    26a4:	11 c0       	rjmp	.+34     	; 0x26c8 <__stack+0x4c9>
    26a6:	f8 01       	movw	r30, r16
    26a8:	84 81       	ldd	r24, Z+4	; 0x04
    26aa:	95 81       	ldd	r25, Z+5	; 0x05
    26ac:	a6 81       	ldd	r26, Z+6	; 0x06
    26ae:	b7 81       	ldd	r27, Z+7	; 0x07
    26b0:	89 2b       	or	r24, r25
    26b2:	8a 2b       	or	r24, r26
    26b4:	8b 2b       	or	r24, r27
    26b6:	41 f4       	brne	.+16     	; 0x26c8 <__stack+0x4c9>
    26b8:	e2 5b       	subi	r30, 0xB2	; 178
    26ba:	fe 4f       	sbci	r31, 0xFE	; 254
    26bc:	82 81       	ldd	r24, Z+2	; 0x02
    26be:	8b 7f       	andi	r24, 0xFB	; 251
    26c0:	82 83       	std	Z+2, r24	; 0x02
    26c2:	c8 01       	movw	r24, r16
    26c4:	0e 94 ef 1d 	call	0x3bde	; 0x3bde <ESP8266_Callback_WifiGotIP>
    26c8:	f8 01       	movw	r30, r16
    26ca:	e0 5b       	subi	r30, 0xB0	; 176
    26cc:	fe 4f       	sbci	r31, 0xFE	; 254
    26ce:	80 81       	ld	r24, Z
    26d0:	84 ff       	sbrs	r24, 4
    26d2:	11 c0       	rjmp	.+34     	; 0x26f6 <__stack+0x4f7>
    26d4:	f8 01       	movw	r30, r16
    26d6:	84 81       	ldd	r24, Z+4	; 0x04
    26d8:	95 81       	ldd	r25, Z+5	; 0x05
    26da:	a6 81       	ldd	r26, Z+6	; 0x06
    26dc:	b7 81       	ldd	r27, Z+7	; 0x07
    26de:	89 2b       	or	r24, r25
    26e0:	8a 2b       	or	r24, r26
    26e2:	8b 2b       	or	r24, r27
    26e4:	41 f4       	brne	.+16     	; 0x26f6 <__stack+0x4f7>
    26e6:	e2 5b       	subi	r30, 0xB2	; 178
    26e8:	fe 4f       	sbci	r31, 0xFE	; 254
    26ea:	82 81       	ldd	r24, Z+2	; 0x02
    26ec:	8f 7e       	andi	r24, 0xEF	; 239
    26ee:	82 83       	std	Z+2, r24	; 0x02
    26f0:	c8 01       	movw	r24, r16
    26f2:	0e 94 25 1e 	call	0x3c4a	; 0x3c4a <ESP8266_Callback_DHCPTimeout>
    26f6:	f8 01       	movw	r30, r16
    26f8:	e0 5b       	subi	r30, 0xB0	; 176
    26fa:	fe 4f       	sbci	r31, 0xFE	; 254
    26fc:	80 81       	ld	r24, Z
    26fe:	81 ff       	sbrs	r24, 1
    2700:	11 c0       	rjmp	.+34     	; 0x2724 <__stack+0x525>
    2702:	f8 01       	movw	r30, r16
    2704:	84 81       	ldd	r24, Z+4	; 0x04
    2706:	95 81       	ldd	r25, Z+5	; 0x05
    2708:	a6 81       	ldd	r26, Z+6	; 0x06
    270a:	b7 81       	ldd	r27, Z+7	; 0x07
    270c:	89 2b       	or	r24, r25
    270e:	8a 2b       	or	r24, r26
    2710:	8b 2b       	or	r24, r27
    2712:	41 f4       	brne	.+16     	; 0x2724 <__stack+0x525>
    2714:	e2 5b       	subi	r30, 0xB2	; 178
    2716:	fe 4f       	sbci	r31, 0xFE	; 254
    2718:	82 81       	ldd	r24, Z+2	; 0x02
    271a:	8d 7f       	andi	r24, 0xFD	; 253
    271c:	82 83       	std	Z+2, r24	; 0x02
    271e:	c8 01       	movw	r24, r16
    2720:	0e 94 df 1d 	call	0x3bbe	; 0x3bbe <ESP8266_Callback_WifiConnectFailed>
    2724:	f8 01       	movw	r30, r16
    2726:	e0 5b       	subi	r30, 0xB0	; 176
    2728:	fe 4f       	sbci	r31, 0xFE	; 254
    272a:	80 81       	ld	r24, Z
    272c:	83 ff       	sbrs	r24, 3
    272e:	11 c0       	rjmp	.+34     	; 0x2752 <__stack+0x553>
    2730:	f8 01       	movw	r30, r16
    2732:	84 81       	ldd	r24, Z+4	; 0x04
    2734:	95 81       	ldd	r25, Z+5	; 0x05
    2736:	a6 81       	ldd	r26, Z+6	; 0x06
    2738:	b7 81       	ldd	r27, Z+7	; 0x07
    273a:	89 2b       	or	r24, r25
    273c:	8a 2b       	or	r24, r26
    273e:	8b 2b       	or	r24, r27
    2740:	41 f4       	brne	.+16     	; 0x2752 <__stack+0x553>
    2742:	e2 5b       	subi	r30, 0xB2	; 178
    2744:	fe 4f       	sbci	r31, 0xFE	; 254
    2746:	82 81       	ldd	r24, Z+2	; 0x02
    2748:	87 7f       	andi	r24, 0xF7	; 247
    274a:	82 83       	std	Z+2, r24	; 0x02
    274c:	c8 01       	movw	r24, r16
    274e:	0e 94 05 1e 	call	0x3c0a	; 0x3c0a <ESP8266_Callback_WifiIPSet>
    2752:	f8 01       	movw	r30, r16
    2754:	e0 5b       	subi	r30, 0xB0	; 176
    2756:	fe 4f       	sbci	r31, 0xFE	; 254
    2758:	80 81       	ld	r24, Z
    275a:	85 ff       	sbrs	r24, 5
    275c:	9e c1       	rjmp	.+828    	; 0x2a9a <__stack+0x89b>
    275e:	f8 01       	movw	r30, r16
    2760:	84 81       	ldd	r24, Z+4	; 0x04
    2762:	95 81       	ldd	r25, Z+5	; 0x05
    2764:	a6 81       	ldd	r26, Z+6	; 0x06
    2766:	b7 81       	ldd	r27, Z+7	; 0x07
    2768:	89 2b       	or	r24, r25
    276a:	8a 2b       	or	r24, r26
    276c:	8b 2b       	or	r24, r27
    276e:	09 f0       	breq	.+2      	; 0x2772 <__stack+0x573>
    2770:	94 c1       	rjmp	.+808    	; 0x2a9a <__stack+0x89b>
    2772:	e2 5b       	subi	r30, 0xB2	; 178
    2774:	fe 4f       	sbci	r31, 0xFE	; 254
    2776:	82 81       	ldd	r24, Z+2	; 0x02
    2778:	8f 7d       	andi	r24, 0xDF	; 223
    277a:	82 83       	std	Z+2, r24	; 0x02
    277c:	b8 01       	movw	r22, r16
    277e:	69 5b       	subi	r22, 0xB9	; 185
    2780:	7e 4f       	sbci	r23, 0xFE	; 254
    2782:	c8 01       	movw	r24, r16
    2784:	ae db       	rcall	.-2212   	; 0x1ee2 <ESP8266_Callback_DomainIP>
    2786:	89 c1       	rjmp	.+786    	; 0x2a9a <__stack+0x89b>
    2788:	65 01       	movw	r12, r10
    278a:	fa 9c       	mul	r15, r10
    278c:	f0 01       	movw	r30, r0
    278e:	fb 9c       	mul	r15, r11
    2790:	f0 0d       	add	r31, r0
    2792:	11 24       	eor	r1, r1
    2794:	e0 0f       	add	r30, r16
    2796:	f1 1f       	adc	r31, r17
    2798:	86 a9       	ldd	r24, Z+54	; 0x36
    279a:	80 ff       	sbrs	r24, 0
    279c:	38 c0       	rjmp	.+112    	; 0x280e <__stack+0x60f>
    279e:	88 23       	and	r24, r24
    27a0:	b4 f5       	brge	.+108    	; 0x280e <__stack+0x60f>
    27a2:	81 fd       	sbrc	r24, 1
    27a4:	0a c0       	rjmp	.+20     	; 0x27ba <__stack+0x5bb>
    27a6:	f8 01       	movw	r30, r16
    27a8:	84 81       	ldd	r24, Z+4	; 0x04
    27aa:	95 81       	ldd	r25, Z+5	; 0x05
    27ac:	a6 81       	ldd	r26, Z+6	; 0x06
    27ae:	b7 81       	ldd	r27, Z+7	; 0x07
    27b0:	89 2b       	or	r24, r25
    27b2:	8a 2b       	or	r24, r26
    27b4:	8b 2b       	or	r24, r27
    27b6:	09 f0       	breq	.+2      	; 0x27ba <__stack+0x5bb>
    27b8:	58 c1       	rjmp	.+688    	; 0x2a6a <__stack+0x86b>
    27ba:	fc 9c       	mul	r15, r12
    27bc:	f0 01       	movw	r30, r0
    27be:	fd 9c       	mul	r15, r13
    27c0:	f0 0d       	add	r31, r0
    27c2:	11 24       	eor	r1, r1
    27c4:	e0 0f       	add	r30, r16
    27c6:	f1 1f       	adc	r31, r17
    27c8:	86 a9       	ldd	r24, Z+54	; 0x36
    27ca:	8f 77       	andi	r24, 0x7F	; 127
    27cc:	86 ab       	std	Z+54, r24	; 0x36
    27ce:	d4 01       	movw	r26, r8
    27d0:	50 96       	adiw	r26, 0x10	; 16
    27d2:	2d 91       	ld	r18, X+
    27d4:	3c 91       	ld	r19, X
    27d6:	51 97       	sbiw	r26, 0x11	; 17
    27d8:	52 96       	adiw	r26, 0x12	; 18
    27da:	8d 91       	ld	r24, X+
    27dc:	9c 91       	ld	r25, X
    27de:	53 97       	sbiw	r26, 0x13	; 19
    27e0:	d9 01       	movw	r26, r18
    27e2:	a8 0f       	add	r26, r24
    27e4:	b9 1f       	adc	r27, r25
    27e6:	1c 92       	st	X, r1
    27e8:	86 a9       	ldd	r24, Z+54	; 0x36
    27ea:	81 ff       	sbrs	r24, 1
    27ec:	08 c0       	rjmp	.+16     	; 0x27fe <__stack+0x5ff>
    27ee:	f4 01       	movw	r30, r8
    27f0:	40 89       	ldd	r20, Z+16	; 0x10
    27f2:	51 89       	ldd	r21, Z+17	; 0x11
    27f4:	b4 01       	movw	r22, r8
    27f6:	c8 01       	movw	r24, r16
    27f8:	0e 94 9c 1e 	call	0x3d38	; 0x3d38 <ESP8266_Callback_ClientConnectionDataReceived>
    27fc:	08 c0       	rjmp	.+16     	; 0x280e <__stack+0x60f>
    27fe:	d4 01       	movw	r26, r8
    2800:	50 96       	adiw	r26, 0x10	; 16
    2802:	4d 91       	ld	r20, X+
    2804:	5c 91       	ld	r21, X
    2806:	51 97       	sbiw	r26, 0x11	; 17
    2808:	b4 01       	movw	r22, r8
    280a:	c8 01       	movw	r24, r16
    280c:	64 db       	rcall	.-2360   	; 0x1ed6 <ESP8266_Callback_ServerConnectionDataReceived>
    280e:	fc 9c       	mul	r15, r12
    2810:	f0 01       	movw	r30, r0
    2812:	fd 9c       	mul	r15, r13
    2814:	f0 0d       	add	r31, r0
    2816:	11 24       	eor	r1, r1
    2818:	e0 0f       	add	r30, r16
    281a:	f1 1f       	adc	r31, r17
    281c:	87 a9       	ldd	r24, Z+55	; 0x37
    281e:	80 ff       	sbrs	r24, 0
    2820:	18 c0       	rjmp	.+48     	; 0x2852 <__stack+0x653>
    2822:	f8 01       	movw	r30, r16
    2824:	84 81       	ldd	r24, Z+4	; 0x04
    2826:	95 81       	ldd	r25, Z+5	; 0x05
    2828:	a6 81       	ldd	r26, Z+6	; 0x06
    282a:	b7 81       	ldd	r27, Z+7	; 0x07
    282c:	89 2b       	or	r24, r25
    282e:	8a 2b       	or	r24, r26
    2830:	8b 2b       	or	r24, r27
    2832:	79 f4       	brne	.+30     	; 0x2852 <__stack+0x653>
    2834:	fc 9c       	mul	r15, r12
    2836:	f0 01       	movw	r30, r0
    2838:	fd 9c       	mul	r15, r13
    283a:	f0 0d       	add	r31, r0
    283c:	11 24       	eor	r1, r1
    283e:	e0 0f       	add	r30, r16
    2840:	f1 1f       	adc	r31, r17
    2842:	f6 96       	adiw	r30, 0x36	; 54
    2844:	81 81       	ldd	r24, Z+1	; 0x01
    2846:	8e 7f       	andi	r24, 0xFE	; 254
    2848:	81 83       	std	Z+1, r24	; 0x01
    284a:	b4 01       	movw	r22, r8
    284c:	c8 01       	movw	r24, r16
    284e:	0e 94 8a 1e 	call	0x3d14	; 0x3d14 <ESP8266_Callback_ClientConnectionDataSent>
    2852:	fc 9c       	mul	r15, r12
    2854:	f0 01       	movw	r30, r0
    2856:	fd 9c       	mul	r15, r13
    2858:	f0 0d       	add	r31, r0
    285a:	11 24       	eor	r1, r1
    285c:	e0 0f       	add	r30, r16
    285e:	f1 1f       	adc	r31, r17
    2860:	87 a9       	ldd	r24, Z+55	; 0x37
    2862:	81 ff       	sbrs	r24, 1
    2864:	18 c0       	rjmp	.+48     	; 0x2896 <__stack+0x697>
    2866:	f8 01       	movw	r30, r16
    2868:	84 81       	ldd	r24, Z+4	; 0x04
    286a:	95 81       	ldd	r25, Z+5	; 0x05
    286c:	a6 81       	ldd	r26, Z+6	; 0x06
    286e:	b7 81       	ldd	r27, Z+7	; 0x07
    2870:	89 2b       	or	r24, r25
    2872:	8a 2b       	or	r24, r26
    2874:	8b 2b       	or	r24, r27
    2876:	79 f4       	brne	.+30     	; 0x2896 <__stack+0x697>
    2878:	fc 9c       	mul	r15, r12
    287a:	f0 01       	movw	r30, r0
    287c:	fd 9c       	mul	r15, r13
    287e:	f0 0d       	add	r31, r0
    2880:	11 24       	eor	r1, r1
    2882:	e0 0f       	add	r30, r16
    2884:	f1 1f       	adc	r31, r17
    2886:	f6 96       	adiw	r30, 0x36	; 54
    2888:	81 81       	ldd	r24, Z+1	; 0x01
    288a:	8d 7f       	andi	r24, 0xFD	; 253
    288c:	81 83       	std	Z+1, r24	; 0x01
    288e:	b4 01       	movw	r22, r8
    2890:	c8 01       	movw	r24, r16
    2892:	0e 94 8e 1e 	call	0x3d1c	; 0x3d1c <ESP8266_Callback_ClientConnectionDataSentError>
    2896:	fc 9c       	mul	r15, r12
    2898:	f0 01       	movw	r30, r0
    289a:	fd 9c       	mul	r15, r13
    289c:	f0 0d       	add	r31, r0
    289e:	11 24       	eor	r1, r1
    28a0:	e0 0f       	add	r30, r16
    28a2:	f1 1f       	adc	r31, r17
    28a4:	87 a9       	ldd	r24, Z+55	; 0x37
    28a6:	82 ff       	sbrs	r24, 2
    28a8:	18 c0       	rjmp	.+48     	; 0x28da <__stack+0x6db>
    28aa:	f8 01       	movw	r30, r16
    28ac:	84 81       	ldd	r24, Z+4	; 0x04
    28ae:	95 81       	ldd	r25, Z+5	; 0x05
    28b0:	a6 81       	ldd	r26, Z+6	; 0x06
    28b2:	b7 81       	ldd	r27, Z+7	; 0x07
    28b4:	89 2b       	or	r24, r25
    28b6:	8a 2b       	or	r24, r26
    28b8:	8b 2b       	or	r24, r27
    28ba:	79 f4       	brne	.+30     	; 0x28da <__stack+0x6db>
    28bc:	fc 9c       	mul	r15, r12
    28be:	f0 01       	movw	r30, r0
    28c0:	fd 9c       	mul	r15, r13
    28c2:	f0 0d       	add	r31, r0
    28c4:	11 24       	eor	r1, r1
    28c6:	e0 0f       	add	r30, r16
    28c8:	f1 1f       	adc	r31, r17
    28ca:	f6 96       	adiw	r30, 0x36	; 54
    28cc:	81 81       	ldd	r24, Z+1	; 0x01
    28ce:	8b 7f       	andi	r24, 0xFB	; 251
    28d0:	81 83       	std	Z+1, r24	; 0x01
    28d2:	b4 01       	movw	r22, r8
    28d4:	c8 01       	movw	r24, r16
    28d6:	0e 94 e2 1e 	call	0x3dc4	; 0x3dc4 <ESP8266_Callback_ClientConnectionClosed>
    28da:	fc 9c       	mul	r15, r12
    28dc:	f0 01       	movw	r30, r0
    28de:	fd 9c       	mul	r15, r13
    28e0:	f0 0d       	add	r31, r0
    28e2:	11 24       	eor	r1, r1
    28e4:	e0 0f       	add	r30, r16
    28e6:	f1 1f       	adc	r31, r17
    28e8:	87 a9       	ldd	r24, Z+55	; 0x37
    28ea:	83 ff       	sbrs	r24, 3
    28ec:	18 c0       	rjmp	.+48     	; 0x291e <__stack+0x71f>
    28ee:	f8 01       	movw	r30, r16
    28f0:	84 81       	ldd	r24, Z+4	; 0x04
    28f2:	95 81       	ldd	r25, Z+5	; 0x05
    28f4:	a6 81       	ldd	r26, Z+6	; 0x06
    28f6:	b7 81       	ldd	r27, Z+7	; 0x07
    28f8:	89 2b       	or	r24, r25
    28fa:	8a 2b       	or	r24, r26
    28fc:	8b 2b       	or	r24, r27
    28fe:	79 f4       	brne	.+30     	; 0x291e <__stack+0x71f>
    2900:	fc 9c       	mul	r15, r12
    2902:	f0 01       	movw	r30, r0
    2904:	fd 9c       	mul	r15, r13
    2906:	f0 0d       	add	r31, r0
    2908:	11 24       	eor	r1, r1
    290a:	e0 0f       	add	r30, r16
    290c:	f1 1f       	adc	r31, r17
    290e:	f6 96       	adiw	r30, 0x36	; 54
    2910:	81 81       	ldd	r24, Z+1	; 0x01
    2912:	87 7f       	andi	r24, 0xF7	; 247
    2914:	81 83       	std	Z+1, r24	; 0x01
    2916:	b4 01       	movw	r22, r8
    2918:	c8 01       	movw	r24, r16
    291a:	0e 94 29 1e 	call	0x3c52	; 0x3c52 <ESP8266_Callback_ClientConnectionConnected>
    291e:	fc 9c       	mul	r15, r12
    2920:	f0 01       	movw	r30, r0
    2922:	fd 9c       	mul	r15, r13
    2924:	f0 0d       	add	r31, r0
    2926:	11 24       	eor	r1, r1
    2928:	e0 0f       	add	r30, r16
    292a:	f1 1f       	adc	r31, r17
    292c:	87 a9       	ldd	r24, Z+55	; 0x37
    292e:	84 ff       	sbrs	r24, 4
    2930:	18 c0       	rjmp	.+48     	; 0x2962 <__stack+0x763>
    2932:	f8 01       	movw	r30, r16
    2934:	84 81       	ldd	r24, Z+4	; 0x04
    2936:	95 81       	ldd	r25, Z+5	; 0x05
    2938:	a6 81       	ldd	r26, Z+6	; 0x06
    293a:	b7 81       	ldd	r27, Z+7	; 0x07
    293c:	89 2b       	or	r24, r25
    293e:	8a 2b       	or	r24, r26
    2940:	8b 2b       	or	r24, r27
    2942:	79 f4       	brne	.+30     	; 0x2962 <__stack+0x763>
    2944:	fc 9c       	mul	r15, r12
    2946:	f0 01       	movw	r30, r0
    2948:	fd 9c       	mul	r15, r13
    294a:	f0 0d       	add	r31, r0
    294c:	11 24       	eor	r1, r1
    294e:	e0 0f       	add	r30, r16
    2950:	f1 1f       	adc	r31, r17
    2952:	f6 96       	adiw	r30, 0x36	; 54
    2954:	81 81       	ldd	r24, Z+1	; 0x01
    2956:	8f 7e       	andi	r24, 0xEF	; 239
    2958:	81 83       	std	Z+1, r24	; 0x01
    295a:	b4 01       	movw	r22, r8
    295c:	c8 01       	movw	r24, r16
    295e:	0e 94 44 1e 	call	0x3c88	; 0x3c88 <ESP8266_Callback_ClientConnectionError>
    2962:	fc 9c       	mul	r15, r12
    2964:	f0 01       	movw	r30, r0
    2966:	fd 9c       	mul	r15, r13
    2968:	f0 0d       	add	r31, r0
    296a:	11 24       	eor	r1, r1
    296c:	e0 0f       	add	r30, r16
    296e:	f1 1f       	adc	r31, r17
    2970:	87 a9       	ldd	r24, Z+55	; 0x37
    2972:	85 ff       	sbrs	r24, 5
    2974:	17 c0       	rjmp	.+46     	; 0x29a4 <__stack+0x7a5>
    2976:	f8 01       	movw	r30, r16
    2978:	84 81       	ldd	r24, Z+4	; 0x04
    297a:	95 81       	ldd	r25, Z+5	; 0x05
    297c:	a6 81       	ldd	r26, Z+6	; 0x06
    297e:	b7 81       	ldd	r27, Z+7	; 0x07
    2980:	89 2b       	or	r24, r25
    2982:	8a 2b       	or	r24, r26
    2984:	8b 2b       	or	r24, r27
    2986:	71 f4       	brne	.+28     	; 0x29a4 <__stack+0x7a5>
    2988:	fc 9c       	mul	r15, r12
    298a:	f0 01       	movw	r30, r0
    298c:	fd 9c       	mul	r15, r13
    298e:	f0 0d       	add	r31, r0
    2990:	11 24       	eor	r1, r1
    2992:	e0 0f       	add	r30, r16
    2994:	f1 1f       	adc	r31, r17
    2996:	f6 96       	adiw	r30, 0x36	; 54
    2998:	81 81       	ldd	r24, Z+1	; 0x01
    299a:	8f 7d       	andi	r24, 0xDF	; 223
    299c:	81 83       	std	Z+1, r24	; 0x01
    299e:	b4 01       	movw	r22, r8
    29a0:	c8 01       	movw	r24, r16
    29a2:	9d da       	rcall	.-2758   	; 0x1ede <ESP8266_Callback_ServerConnectionDataSent>
    29a4:	fc 9c       	mul	r15, r12
    29a6:	f0 01       	movw	r30, r0
    29a8:	fd 9c       	mul	r15, r13
    29aa:	f0 0d       	add	r31, r0
    29ac:	11 24       	eor	r1, r1
    29ae:	e0 0f       	add	r30, r16
    29b0:	f1 1f       	adc	r31, r17
    29b2:	87 a9       	ldd	r24, Z+55	; 0x37
    29b4:	86 ff       	sbrs	r24, 6
    29b6:	17 c0       	rjmp	.+46     	; 0x29e6 <__stack+0x7e7>
    29b8:	f8 01       	movw	r30, r16
    29ba:	84 81       	ldd	r24, Z+4	; 0x04
    29bc:	95 81       	ldd	r25, Z+5	; 0x05
    29be:	a6 81       	ldd	r26, Z+6	; 0x06
    29c0:	b7 81       	ldd	r27, Z+7	; 0x07
    29c2:	89 2b       	or	r24, r25
    29c4:	8a 2b       	or	r24, r26
    29c6:	8b 2b       	or	r24, r27
    29c8:	71 f4       	brne	.+28     	; 0x29e6 <__stack+0x7e7>
    29ca:	fc 9c       	mul	r15, r12
    29cc:	f0 01       	movw	r30, r0
    29ce:	fd 9c       	mul	r15, r13
    29d0:	f0 0d       	add	r31, r0
    29d2:	11 24       	eor	r1, r1
    29d4:	e0 0f       	add	r30, r16
    29d6:	f1 1f       	adc	r31, r17
    29d8:	f6 96       	adiw	r30, 0x36	; 54
    29da:	81 81       	ldd	r24, Z+1	; 0x01
    29dc:	8f 7b       	andi	r24, 0xBF	; 191
    29de:	81 83       	std	Z+1, r24	; 0x01
    29e0:	b4 01       	movw	r22, r8
    29e2:	c8 01       	movw	r24, r16
    29e4:	7d da       	rcall	.-2822   	; 0x1ee0 <ESP8266_Callback_ServerConnectionDataSentError>
    29e6:	fc 9c       	mul	r15, r12
    29e8:	f0 01       	movw	r30, r0
    29ea:	fd 9c       	mul	r15, r13
    29ec:	f0 0d       	add	r31, r0
    29ee:	11 24       	eor	r1, r1
    29f0:	e0 0f       	add	r30, r16
    29f2:	f1 1f       	adc	r31, r17
    29f4:	87 a9       	ldd	r24, Z+55	; 0x37
    29f6:	88 23       	and	r24, r24
    29f8:	bc f4       	brge	.+46     	; 0x2a28 <__stack+0x829>
    29fa:	f8 01       	movw	r30, r16
    29fc:	84 81       	ldd	r24, Z+4	; 0x04
    29fe:	95 81       	ldd	r25, Z+5	; 0x05
    2a00:	a6 81       	ldd	r26, Z+6	; 0x06
    2a02:	b7 81       	ldd	r27, Z+7	; 0x07
    2a04:	89 2b       	or	r24, r25
    2a06:	8a 2b       	or	r24, r26
    2a08:	8b 2b       	or	r24, r27
    2a0a:	71 f4       	brne	.+28     	; 0x2a28 <__stack+0x829>
    2a0c:	fc 9c       	mul	r15, r12
    2a0e:	f0 01       	movw	r30, r0
    2a10:	fd 9c       	mul	r15, r13
    2a12:	f0 0d       	add	r31, r0
    2a14:	11 24       	eor	r1, r1
    2a16:	e0 0f       	add	r30, r16
    2a18:	f1 1f       	adc	r31, r17
    2a1a:	f6 96       	adiw	r30, 0x36	; 54
    2a1c:	81 81       	ldd	r24, Z+1	; 0x01
    2a1e:	8f 77       	andi	r24, 0x7F	; 127
    2a20:	81 83       	std	Z+1, r24	; 0x01
    2a22:	b4 01       	movw	r22, r8
    2a24:	c8 01       	movw	r24, r16
    2a26:	55 da       	rcall	.-2902   	; 0x1ed2 <ESP8266_Callback_ServerConnectionActive>
    2a28:	fc 9c       	mul	r15, r12
    2a2a:	f0 01       	movw	r30, r0
    2a2c:	fd 9c       	mul	r15, r13
    2a2e:	f0 0d       	add	r31, r0
    2a30:	11 24       	eor	r1, r1
    2a32:	e0 0f       	add	r30, r16
    2a34:	f1 1f       	adc	r31, r17
    2a36:	80 ad       	ldd	r24, Z+56	; 0x38
    2a38:	80 ff       	sbrs	r24, 0
    2a3a:	17 c0       	rjmp	.+46     	; 0x2a6a <__stack+0x86b>
    2a3c:	f8 01       	movw	r30, r16
    2a3e:	84 81       	ldd	r24, Z+4	; 0x04
    2a40:	95 81       	ldd	r25, Z+5	; 0x05
    2a42:	a6 81       	ldd	r26, Z+6	; 0x06
    2a44:	b7 81       	ldd	r27, Z+7	; 0x07
    2a46:	89 2b       	or	r24, r25
    2a48:	8a 2b       	or	r24, r26
    2a4a:	8b 2b       	or	r24, r27
    2a4c:	71 f4       	brne	.+28     	; 0x2a6a <__stack+0x86b>
    2a4e:	fc 9c       	mul	r15, r12
    2a50:	f0 01       	movw	r30, r0
    2a52:	fd 9c       	mul	r15, r13
    2a54:	f0 0d       	add	r31, r0
    2a56:	11 24       	eor	r1, r1
    2a58:	e0 0f       	add	r30, r16
    2a5a:	f1 1f       	adc	r31, r17
    2a5c:	f6 96       	adiw	r30, 0x36	; 54
    2a5e:	82 81       	ldd	r24, Z+2	; 0x02
    2a60:	8e 7f       	andi	r24, 0xFE	; 254
    2a62:	82 83       	std	Z+2, r24	; 0x02
    2a64:	b4 01       	movw	r22, r8
    2a66:	c8 01       	movw	r24, r16
    2a68:	35 da       	rcall	.-2966   	; 0x1ed4 <ESP8266_Callback_ServerConnectionClosed>
    2a6a:	ff ef       	ldi	r31, 0xFF	; 255
    2a6c:	af 1a       	sub	r10, r31
    2a6e:	bf 0a       	sbc	r11, r31
    2a70:	23 e2       	ldi	r18, 0x23	; 35
    2a72:	82 0e       	add	r8, r18
    2a74:	91 1c       	adc	r9, r1
    2a76:	35 e0       	ldi	r19, 0x05	; 5
    2a78:	a3 16       	cp	r10, r19
    2a7a:	b1 04       	cpc	r11, r1
    2a7c:	09 f0       	breq	.+2      	; 0x2a80 <__stack+0x881>
    2a7e:	84 ce       	rjmp	.-760    	; 0x2788 <__stack+0x589>
    2a80:	f8 01       	movw	r30, r16
    2a82:	ec 5a       	subi	r30, 0xAC	; 172
    2a84:	fe 4f       	sbci	r31, 0xFE	; 254
    2a86:	10 82       	st	Z, r1
    2a88:	80 e0       	ldi	r24, 0x00	; 0
    2a8a:	12 c0       	rjmp	.+36     	; 0x2ab0 <__stack+0x8b1>
    2a8c:	86 e0       	ldi	r24, 0x06	; 6
    2a8e:	10 c0       	rjmp	.+32     	; 0x2ab0 <__stack+0x8b1>
    2a90:	86 e0       	ldi	r24, 0x06	; 6
    2a92:	0e c0       	rjmp	.+28     	; 0x2ab0 <__stack+0x8b1>
    2a94:	e2 2e       	mov	r14, r18
    2a96:	f1 2c       	mov	r15, r1
    2a98:	4d cd       	rjmp	.-1382   	; 0x2534 <__stack+0x335>
    2a9a:	48 01       	movw	r8, r16
    2a9c:	8a e1       	ldi	r24, 0x1A	; 26
    2a9e:	88 0e       	add	r8, r24
    2aa0:	91 1c       	adc	r9, r1
    2aa2:	a1 2c       	mov	r10, r1
    2aa4:	b1 2c       	mov	r11, r1
    2aa6:	0f 2e       	mov	r0, r31
    2aa8:	f3 e2       	ldi	r31, 0x23	; 35
    2aaa:	ff 2e       	mov	r15, r31
    2aac:	f0 2d       	mov	r31, r0
    2aae:	6c ce       	rjmp	.-808    	; 0x2788 <__stack+0x589>
    2ab0:	cd 57       	subi	r28, 0x7D	; 125
    2ab2:	df 4f       	sbci	r29, 0xFF	; 255
    2ab4:	0f b6       	in	r0, 0x3f	; 63
    2ab6:	f8 94       	cli
    2ab8:	de bf       	out	0x3e, r29	; 62
    2aba:	0f be       	out	0x3f, r0	; 63
    2abc:	cd bf       	out	0x3d, r28	; 61
    2abe:	df 91       	pop	r29
    2ac0:	cf 91       	pop	r28
    2ac2:	1f 91       	pop	r17
    2ac4:	0f 91       	pop	r16
    2ac6:	ff 90       	pop	r15
    2ac8:	ef 90       	pop	r14
    2aca:	df 90       	pop	r13
    2acc:	cf 90       	pop	r12
    2ace:	bf 90       	pop	r11
    2ad0:	af 90       	pop	r10
    2ad2:	9f 90       	pop	r9
    2ad4:	8f 90       	pop	r8
    2ad6:	7f 90       	pop	r7
    2ad8:	5f 90       	pop	r5
    2ada:	4f 90       	pop	r4
    2adc:	3f 90       	pop	r3
    2ade:	2f 90       	pop	r2
    2ae0:	08 95       	ret

00002ae2 <SendCommand>:
    2ae2:	8f 92       	push	r8
    2ae4:	9f 92       	push	r9
    2ae6:	af 92       	push	r10
    2ae8:	bf 92       	push	r11
    2aea:	ef 92       	push	r14
    2aec:	ff 92       	push	r15
    2aee:	0f 93       	push	r16
    2af0:	1f 93       	push	r17
    2af2:	cf 93       	push	r28
    2af4:	df 93       	push	r29
    2af6:	ec 01       	movw	r28, r24
    2af8:	7a 01       	movw	r14, r20
    2afa:	c9 01       	movw	r24, r18
    2afc:	0c 81       	ldd	r16, Y+4	; 0x04
    2afe:	1d 81       	ldd	r17, Y+5	; 0x05
    2b00:	2e 81       	ldd	r18, Y+6	; 0x06
    2b02:	3f 81       	ldd	r19, Y+7	; 0x07
    2b04:	01 2b       	or	r16, r17
    2b06:	02 2b       	or	r16, r18
    2b08:	03 2b       	or	r16, r19
    2b0a:	69 f0       	breq	.+26     	; 0x2b26 <SendCommand+0x44>
    2b0c:	8c 80       	ldd	r8, Y+4	; 0x04
    2b0e:	9d 80       	ldd	r9, Y+5	; 0x05
    2b10:	ae 80       	ldd	r10, Y+6	; 0x06
    2b12:	bf 80       	ldd	r11, Y+7	; 0x07
    2b14:	06 2f       	mov	r16, r22
    2b16:	10 e0       	ldi	r17, 0x00	; 0
    2b18:	20 e0       	ldi	r18, 0x00	; 0
    2b1a:	30 e0       	ldi	r19, 0x00	; 0
    2b1c:	80 16       	cp	r8, r16
    2b1e:	91 06       	cpc	r9, r17
    2b20:	a2 06       	cpc	r10, r18
    2b22:	b3 06       	cpc	r11, r19
    2b24:	31 f4       	brne	.+12     	; 0x2b32 <SendCommand+0x50>
    2b26:	fe 01       	movw	r30, r28
    2b28:	e5 5e       	subi	r30, 0xE5	; 229
    2b2a:	fe 4f       	sbci	r31, 0xFE	; 254
    2b2c:	20 81       	ld	r18, Z
    2b2e:	22 23       	and	r18, r18
    2b30:	39 f0       	breq	.+14     	; 0x2b40 <SendCommand+0x5e>
    2b32:	ce 01       	movw	r24, r28
    2b34:	d7 d9       	rcall	.-3154   	; 0x1ee4 <ESP8266_Update>
    2b36:	cc 5a       	subi	r28, 0xAC	; 172
    2b38:	de 4f       	sbci	r29, 0xFE	; 254
    2b3a:	86 e0       	ldi	r24, 0x06	; 6
    2b3c:	88 83       	st	Y, r24
    2b3e:	29 c0       	rjmp	.+82     	; 0x2b92 <SendCommand+0xb0>
    2b40:	06 2f       	mov	r16, r22
    2b42:	10 e0       	ldi	r17, 0x00	; 0
    2b44:	20 e0       	ldi	r18, 0x00	; 0
    2b46:	30 e0       	ldi	r19, 0x00	; 0
    2b48:	0c 83       	std	Y+4, r16	; 0x04
    2b4a:	1d 83       	std	Y+5, r17	; 0x05
    2b4c:	2e 83       	std	Y+6, r18	; 0x06
    2b4e:	3f 83       	std	Y+7, r19	; 0x07
    2b50:	99 87       	std	Y+9, r25	; 0x09
    2b52:	88 87       	std	Y+8, r24	; 0x08
    2b54:	61 31       	cpi	r22, 0x11	; 17
    2b56:	21 f4       	brne	.+8      	; 0x2b60 <SendCommand+0x7e>
    2b58:	84 e9       	ldi	r24, 0x94	; 148
    2b5a:	90 e1       	ldi	r25, 0x10	; 16
    2b5c:	0e 94 6a 03 	call	0x6d4	; 0x6d4 <BUFFER_Reset>
    2b60:	e1 14       	cp	r14, r1
    2b62:	f1 04       	cpc	r15, r1
    2b64:	51 f0       	breq	.+20     	; 0x2b7a <SendCommand+0x98>
    2b66:	f7 01       	movw	r30, r14
    2b68:	01 90       	ld	r0, Z+
    2b6a:	00 20       	and	r0, r0
    2b6c:	e9 f7       	brne	.-6      	; 0x2b68 <SendCommand+0x86>
    2b6e:	31 97       	sbiw	r30, 0x01	; 1
    2b70:	bf 01       	movw	r22, r30
    2b72:	6e 19       	sub	r22, r14
    2b74:	7f 09       	sbc	r23, r15
    2b76:	c7 01       	movw	r24, r14
    2b78:	d9 d6       	rcall	.+3506   	; 0x392c <ESP8266_LL_USARTSend>
    2b7a:	8e 85       	ldd	r24, Y+14	; 0x0e
    2b7c:	9f 85       	ldd	r25, Y+15	; 0x0f
    2b7e:	a8 89       	ldd	r26, Y+16	; 0x10
    2b80:	b9 89       	ldd	r27, Y+17	; 0x11
    2b82:	8a 87       	std	Y+10, r24	; 0x0a
    2b84:	9b 87       	std	Y+11, r25	; 0x0b
    2b86:	ac 87       	std	Y+12, r26	; 0x0c
    2b88:	bd 87       	std	Y+13, r27	; 0x0d
    2b8a:	cc 5a       	subi	r28, 0xAC	; 172
    2b8c:	de 4f       	sbci	r29, 0xFE	; 254
    2b8e:	18 82       	st	Y, r1
    2b90:	80 e0       	ldi	r24, 0x00	; 0
    2b92:	df 91       	pop	r29
    2b94:	cf 91       	pop	r28
    2b96:	1f 91       	pop	r17
    2b98:	0f 91       	pop	r16
    2b9a:	ff 90       	pop	r15
    2b9c:	ef 90       	pop	r14
    2b9e:	bf 90       	pop	r11
    2ba0:	af 90       	pop	r10
    2ba2:	9f 90       	pop	r9
    2ba4:	8f 90       	pop	r8
    2ba6:	08 95       	ret

00002ba8 <ESP8266_WaitReady>:
    2ba8:	cf 93       	push	r28
    2baa:	df 93       	push	r29
    2bac:	ec 01       	movw	r28, r24
    2bae:	ce 01       	movw	r24, r28
    2bb0:	99 d9       	rcall	.-3278   	; 0x1ee4 <ESP8266_Update>
    2bb2:	8c 81       	ldd	r24, Y+4	; 0x04
    2bb4:	9d 81       	ldd	r25, Y+5	; 0x05
    2bb6:	ae 81       	ldd	r26, Y+6	; 0x06
    2bb8:	bf 81       	ldd	r27, Y+7	; 0x07
    2bba:	89 2b       	or	r24, r25
    2bbc:	8a 2b       	or	r24, r26
    2bbe:	8b 2b       	or	r24, r27
    2bc0:	b1 f7       	brne	.-20     	; 0x2bae <ESP8266_WaitReady+0x6>
    2bc2:	cc 5a       	subi	r28, 0xAC	; 172
    2bc4:	de 4f       	sbci	r29, 0xFE	; 254
    2bc6:	18 82       	st	Y, r1
    2bc8:	80 e0       	ldi	r24, 0x00	; 0
    2bca:	df 91       	pop	r29
    2bcc:	cf 91       	pop	r28
    2bce:	08 95       	ret

00002bd0 <ESP8266_WifiDisconnect>:
    2bd0:	cf 93       	push	r28
    2bd2:	df 93       	push	r29
    2bd4:	ec 01       	movw	r28, r24
    2bd6:	8c 81       	ldd	r24, Y+4	; 0x04
    2bd8:	9d 81       	ldd	r25, Y+5	; 0x05
    2bda:	ae 81       	ldd	r26, Y+6	; 0x06
    2bdc:	bf 81       	ldd	r27, Y+7	; 0x07
    2bde:	89 2b       	or	r24, r25
    2be0:	8a 2b       	or	r24, r26
    2be2:	8b 2b       	or	r24, r27
    2be4:	31 f4       	brne	.+12     	; 0x2bf2 <ESP8266_WifiDisconnect+0x22>
    2be6:	fe 01       	movw	r30, r28
    2be8:	e5 5e       	subi	r30, 0xE5	; 229
    2bea:	fe 4f       	sbci	r31, 0xFE	; 254
    2bec:	80 81       	ld	r24, Z
    2bee:	88 23       	and	r24, r24
    2bf0:	39 f0       	breq	.+14     	; 0x2c00 <ESP8266_WifiDisconnect+0x30>
    2bf2:	ce 01       	movw	r24, r28
    2bf4:	77 d9       	rcall	.-3346   	; 0x1ee4 <ESP8266_Update>
    2bf6:	cc 5a       	subi	r28, 0xAC	; 172
    2bf8:	de 4f       	sbci	r29, 0xFE	; 254
    2bfa:	86 e0       	ldi	r24, 0x06	; 6
    2bfc:	88 83       	st	Y, r24
    2bfe:	07 c0       	rjmp	.+14     	; 0x2c0e <ESP8266_WifiDisconnect+0x3e>
    2c00:	24 e1       	ldi	r18, 0x14	; 20
    2c02:	34 e0       	ldi	r19, 0x04	; 4
    2c04:	4d e1       	ldi	r20, 0x1D	; 29
    2c06:	54 e0       	ldi	r21, 0x04	; 4
    2c08:	61 e0       	ldi	r22, 0x01	; 1
    2c0a:	ce 01       	movw	r24, r28
    2c0c:	6a df       	rcall	.-300    	; 0x2ae2 <SendCommand>
    2c0e:	df 91       	pop	r29
    2c10:	cf 91       	pop	r28
    2c12:	08 95       	ret

00002c14 <ESP8266_WifiConnect>:
    2c14:	cf 92       	push	r12
    2c16:	df 92       	push	r13
    2c18:	ef 92       	push	r14
    2c1a:	ff 92       	push	r15
    2c1c:	0f 93       	push	r16
    2c1e:	1f 93       	push	r17
    2c20:	cf 93       	push	r28
    2c22:	df 93       	push	r29
    2c24:	ec 01       	movw	r28, r24
    2c26:	6b 01       	movw	r12, r22
    2c28:	7a 01       	movw	r14, r20
    2c2a:	0c 81       	ldd	r16, Y+4	; 0x04
    2c2c:	1d 81       	ldd	r17, Y+5	; 0x05
    2c2e:	2e 81       	ldd	r18, Y+6	; 0x06
    2c30:	3f 81       	ldd	r19, Y+7	; 0x07
    2c32:	01 2b       	or	r16, r17
    2c34:	02 2b       	or	r16, r18
    2c36:	03 2b       	or	r16, r19
    2c38:	31 f4       	brne	.+12     	; 0x2c46 <ESP8266_WifiConnect+0x32>
    2c3a:	fc 01       	movw	r30, r24
    2c3c:	e5 5e       	subi	r30, 0xE5	; 229
    2c3e:	fe 4f       	sbci	r31, 0xFE	; 254
    2c40:	80 81       	ld	r24, Z
    2c42:	88 23       	and	r24, r24
    2c44:	39 f0       	breq	.+14     	; 0x2c54 <ESP8266_WifiConnect+0x40>
    2c46:	ce 01       	movw	r24, r28
    2c48:	4d d9       	rcall	.-3430   	; 0x1ee4 <ESP8266_Update>
    2c4a:	cc 5a       	subi	r28, 0xAC	; 172
    2c4c:	de 4f       	sbci	r29, 0xFE	; 254
    2c4e:	86 e0       	ldi	r24, 0x06	; 6
    2c50:	88 83       	st	Y, r24
    2c52:	24 c0       	rjmp	.+72     	; 0x2c9c <ESP8266_WifiConnect+0x88>
    2c54:	83 e0       	ldi	r24, 0x03	; 3
    2c56:	90 e0       	ldi	r25, 0x00	; 0
    2c58:	a0 e0       	ldi	r26, 0x00	; 0
    2c5a:	b0 e0       	ldi	r27, 0x00	; 0
    2c5c:	8c 83       	std	Y+4, r24	; 0x04
    2c5e:	9d 83       	std	Y+5, r25	; 0x05
    2c60:	ae 83       	std	Y+6, r26	; 0x06
    2c62:	bf 83       	std	Y+7, r27	; 0x07
    2c64:	6e e0       	ldi	r22, 0x0E	; 14
    2c66:	70 e0       	ldi	r23, 0x00	; 0
    2c68:	88 e2       	ldi	r24, 0x28	; 40
    2c6a:	94 e0       	ldi	r25, 0x04	; 4
    2c6c:	5f d6       	rcall	.+3262   	; 0x392c <ESP8266_LL_USARTSend>
    2c6e:	c6 01       	movw	r24, r12
    2c70:	0e 94 1e 06 	call	0xc3c	; 0xc3c <EscapeStringAndSend>
    2c74:	63 e0       	ldi	r22, 0x03	; 3
    2c76:	70 e0       	ldi	r23, 0x00	; 0
    2c78:	87 e3       	ldi	r24, 0x37	; 55
    2c7a:	94 e0       	ldi	r25, 0x04	; 4
    2c7c:	57 d6       	rcall	.+3246   	; 0x392c <ESP8266_LL_USARTSend>
    2c7e:	c7 01       	movw	r24, r14
    2c80:	0e 94 1e 06 	call	0xc3c	; 0xc3c <EscapeStringAndSend>
    2c84:	63 e0       	ldi	r22, 0x03	; 3
    2c86:	70 e0       	ldi	r23, 0x00	; 0
    2c88:	8b e3       	ldi	r24, 0x3B	; 59
    2c8a:	94 e0       	ldi	r25, 0x04	; 4
    2c8c:	4f d6       	rcall	.+3230   	; 0x392c <ESP8266_LL_USARTSend>
    2c8e:	23 e9       	ldi	r18, 0x93	; 147
    2c90:	33 e0       	ldi	r19, 0x03	; 3
    2c92:	40 e0       	ldi	r20, 0x00	; 0
    2c94:	50 e0       	ldi	r21, 0x00	; 0
    2c96:	63 e0       	ldi	r22, 0x03	; 3
    2c98:	ce 01       	movw	r24, r28
    2c9a:	23 df       	rcall	.-442    	; 0x2ae2 <SendCommand>
    2c9c:	df 91       	pop	r29
    2c9e:	cf 91       	pop	r28
    2ca0:	1f 91       	pop	r17
    2ca2:	0f 91       	pop	r16
    2ca4:	ff 90       	pop	r15
    2ca6:	ef 90       	pop	r14
    2ca8:	df 90       	pop	r13
    2caa:	cf 90       	pop	r12
    2cac:	08 95       	ret

00002cae <ESP8266_WifiGetConnected>:
    2cae:	cf 93       	push	r28
    2cb0:	df 93       	push	r29
    2cb2:	ec 01       	movw	r28, r24
    2cb4:	8c 81       	ldd	r24, Y+4	; 0x04
    2cb6:	9d 81       	ldd	r25, Y+5	; 0x05
    2cb8:	ae 81       	ldd	r26, Y+6	; 0x06
    2cba:	bf 81       	ldd	r27, Y+7	; 0x07
    2cbc:	89 2b       	or	r24, r25
    2cbe:	8a 2b       	or	r24, r26
    2cc0:	8b 2b       	or	r24, r27
    2cc2:	31 f4       	brne	.+12     	; 0x2cd0 <ESP8266_WifiGetConnected+0x22>
    2cc4:	fe 01       	movw	r30, r28
    2cc6:	e5 5e       	subi	r30, 0xE5	; 229
    2cc8:	fe 4f       	sbci	r31, 0xFE	; 254
    2cca:	80 81       	ld	r24, Z
    2ccc:	88 23       	and	r24, r24
    2cce:	39 f0       	breq	.+14     	; 0x2cde <ESP8266_WifiGetConnected+0x30>
    2cd0:	ce 01       	movw	r24, r28
    2cd2:	08 d9       	rcall	.-3568   	; 0x1ee4 <ESP8266_Update>
    2cd4:	cc 5a       	subi	r28, 0xAC	; 172
    2cd6:	de 4f       	sbci	r29, 0xFE	; 254
    2cd8:	86 e0       	ldi	r24, 0x06	; 6
    2cda:	88 83       	st	Y, r24
    2cdc:	07 c0       	rjmp	.+14     	; 0x2cec <ESP8266_WifiGetConnected+0x3e>
    2cde:	2b e9       	ldi	r18, 0x9B	; 155
    2ce0:	33 e0       	ldi	r19, 0x03	; 3
    2ce2:	4e e4       	ldi	r20, 0x4E	; 78
    2ce4:	54 e0       	ldi	r21, 0x04	; 4
    2ce6:	63 e1       	ldi	r22, 0x13	; 19
    2ce8:	ce 01       	movw	r24, r28
    2cea:	fb de       	rcall	.-522    	; 0x2ae2 <SendCommand>
    2cec:	df 91       	pop	r29
    2cee:	cf 91       	pop	r28
    2cf0:	08 95       	ret

00002cf2 <ESP8266_RequestSendData>:
    2cf2:	ef 92       	push	r14
    2cf4:	ff 92       	push	r15
    2cf6:	0f 93       	push	r16
    2cf8:	1f 93       	push	r17
    2cfa:	cf 93       	push	r28
    2cfc:	df 93       	push	r29
    2cfe:	1f 92       	push	r1
    2d00:	cd b7       	in	r28, 0x3d	; 61
    2d02:	de b7       	in	r29, 0x3e	; 62
    2d04:	8c 01       	movw	r16, r24
    2d06:	7b 01       	movw	r14, r22
    2d08:	fc 01       	movw	r30, r24
    2d0a:	84 81       	ldd	r24, Z+4	; 0x04
    2d0c:	95 81       	ldd	r25, Z+5	; 0x05
    2d0e:	a6 81       	ldd	r26, Z+6	; 0x06
    2d10:	b7 81       	ldd	r27, Z+7	; 0x07
    2d12:	89 2b       	or	r24, r25
    2d14:	8a 2b       	or	r24, r26
    2d16:	8b 2b       	or	r24, r27
    2d18:	29 f4       	brne	.+10     	; 0x2d24 <ESP8266_RequestSendData+0x32>
    2d1a:	e5 5e       	subi	r30, 0xE5	; 229
    2d1c:	fe 4f       	sbci	r31, 0xFE	; 254
    2d1e:	80 81       	ld	r24, Z
    2d20:	88 23       	and	r24, r24
    2d22:	41 f0       	breq	.+16     	; 0x2d34 <ESP8266_RequestSendData+0x42>
    2d24:	c8 01       	movw	r24, r16
    2d26:	de d8       	rcall	.-3652   	; 0x1ee4 <ESP8266_Update>
    2d28:	f8 01       	movw	r30, r16
    2d2a:	ec 5a       	subi	r30, 0xAC	; 172
    2d2c:	fe 4f       	sbci	r31, 0xFE	; 254
    2d2e:	86 e0       	ldi	r24, 0x06	; 6
    2d30:	80 83       	st	Z, r24
    2d32:	31 c0       	rjmp	.+98     	; 0x2d96 <ESP8266_RequestSendData+0xa4>
    2d34:	88 e0       	ldi	r24, 0x08	; 8
    2d36:	90 e0       	ldi	r25, 0x00	; 0
    2d38:	a0 e0       	ldi	r26, 0x00	; 0
    2d3a:	b0 e0       	ldi	r27, 0x00	; 0
    2d3c:	f8 01       	movw	r30, r16
    2d3e:	84 83       	std	Z+4, r24	; 0x04
    2d40:	95 83       	std	Z+5, r25	; 0x05
    2d42:	a6 83       	std	Z+6, r26	; 0x06
    2d44:	b7 83       	std	Z+7, r27	; 0x07
    2d46:	fb 01       	movw	r30, r22
    2d48:	80 81       	ld	r24, Z
    2d4a:	80 5d       	subi	r24, 0xD0	; 208
    2d4c:	89 83       	std	Y+1, r24	; 0x01
    2d4e:	6d e0       	ldi	r22, 0x0D	; 13
    2d50:	70 e0       	ldi	r23, 0x00	; 0
    2d52:	8c eb       	ldi	r24, 0xBC	; 188
    2d54:	94 e0       	ldi	r25, 0x04	; 4
    2d56:	ea d5       	rcall	.+3028   	; 0x392c <ESP8266_LL_USARTSend>
    2d58:	61 e0       	ldi	r22, 0x01	; 1
    2d5a:	70 e0       	ldi	r23, 0x00	; 0
    2d5c:	ce 01       	movw	r24, r28
    2d5e:	01 96       	adiw	r24, 0x01	; 1
    2d60:	e5 d5       	rcall	.+3018   	; 0x392c <ESP8266_LL_USARTSend>
    2d62:	67 e0       	ldi	r22, 0x07	; 7
    2d64:	70 e0       	ldi	r23, 0x00	; 0
    2d66:	8a ec       	ldi	r24, 0xCA	; 202
    2d68:	94 e0       	ldi	r25, 0x04	; 4
    2d6a:	e0 d5       	rcall	.+3008   	; 0x392c <ESP8266_LL_USARTSend>
    2d6c:	20 e0       	ldi	r18, 0x00	; 0
    2d6e:	30 e0       	ldi	r19, 0x00	; 0
    2d70:	40 e0       	ldi	r20, 0x00	; 0
    2d72:	50 e0       	ldi	r21, 0x00	; 0
    2d74:	68 e0       	ldi	r22, 0x08	; 8
    2d76:	c8 01       	movw	r24, r16
    2d78:	b4 de       	rcall	.-664    	; 0x2ae2 <SendCommand>
    2d7a:	88 23       	and	r24, r24
    2d7c:	29 f0       	breq	.+10     	; 0x2d88 <ESP8266_RequestSendData+0x96>
    2d7e:	f8 01       	movw	r30, r16
    2d80:	ec 5a       	subi	r30, 0xAC	; 172
    2d82:	fe 4f       	sbci	r31, 0xFE	; 254
    2d84:	80 81       	ld	r24, Z
    2d86:	07 c0       	rjmp	.+14     	; 0x2d96 <ESP8266_RequestSendData+0xa4>
    2d88:	f8 01       	movw	r30, r16
    2d8a:	eb 5b       	subi	r30, 0xBB	; 187
    2d8c:	fe 4f       	sbci	r31, 0xFE	; 254
    2d8e:	f1 82       	std	Z+1, r15	; 0x01
    2d90:	e0 82       	st	Z, r14
    2d92:	3f 96       	adiw	r30, 0x0f	; 15
    2d94:	80 81       	ld	r24, Z
    2d96:	0f 90       	pop	r0
    2d98:	df 91       	pop	r29
    2d9a:	cf 91       	pop	r28
    2d9c:	1f 91       	pop	r17
    2d9e:	0f 91       	pop	r16
    2da0:	ff 90       	pop	r15
    2da2:	ef 90       	pop	r14
    2da4:	08 95       	ret

00002da6 <ESP8266_ServerEnable>:
    2da6:	ef 92       	push	r14
    2da8:	ff 92       	push	r15
    2daa:	0f 93       	push	r16
    2dac:	1f 93       	push	r17
    2dae:	cf 93       	push	r28
    2db0:	df 93       	push	r29
    2db2:	cd b7       	in	r28, 0x3d	; 61
    2db4:	de b7       	in	r29, 0x3e	; 62
    2db6:	27 97       	sbiw	r28, 0x07	; 7
    2db8:	0f b6       	in	r0, 0x3f	; 63
    2dba:	f8 94       	cli
    2dbc:	de bf       	out	0x3e, r29	; 62
    2dbe:	0f be       	out	0x3f, r0	; 63
    2dc0:	cd bf       	out	0x3d, r28	; 61
    2dc2:	8c 01       	movw	r16, r24
    2dc4:	fc 01       	movw	r30, r24
    2dc6:	84 81       	ldd	r24, Z+4	; 0x04
    2dc8:	95 81       	ldd	r25, Z+5	; 0x05
    2dca:	a6 81       	ldd	r26, Z+6	; 0x06
    2dcc:	b7 81       	ldd	r27, Z+7	; 0x07
    2dce:	89 2b       	or	r24, r25
    2dd0:	8a 2b       	or	r24, r26
    2dd2:	8b 2b       	or	r24, r27
    2dd4:	29 f4       	brne	.+10     	; 0x2de0 <ESP8266_ServerEnable+0x3a>
    2dd6:	e5 5e       	subi	r30, 0xE5	; 229
    2dd8:	fe 4f       	sbci	r31, 0xFE	; 254
    2dda:	80 81       	ld	r24, Z
    2ddc:	88 23       	and	r24, r24
    2dde:	61 f0       	breq	.+24     	; 0x2df8 <ESP8266_ServerEnable+0x52>
    2de0:	c8 01       	movw	r24, r16
    2de2:	80 d8       	rcall	.-3840   	; 0x1ee4 <ESP8266_Update>
    2de4:	f8 01       	movw	r30, r16
    2de6:	ec 5a       	subi	r30, 0xAC	; 172
    2de8:	fe 4f       	sbci	r31, 0xFE	; 254
    2dea:	86 e0       	ldi	r24, 0x06	; 6
    2dec:	80 83       	st	Z, r24
    2dee:	0f 2e       	mov	r0, r31
    2df0:	f6 e0       	ldi	r31, 0x06	; 6
    2df2:	ff 2e       	mov	r15, r31
    2df4:	f0 2d       	mov	r31, r0
    2df6:	46 c0       	rjmp	.+140    	; 0x2e84 <ESP8266_ServerEnable+0xde>
    2df8:	86 e0       	ldi	r24, 0x06	; 6
    2dfa:	90 e0       	ldi	r25, 0x00	; 0
    2dfc:	a0 e0       	ldi	r26, 0x00	; 0
    2dfe:	b0 e0       	ldi	r27, 0x00	; 0
    2e00:	f8 01       	movw	r30, r16
    2e02:	84 83       	std	Z+4, r24	; 0x04
    2e04:	95 83       	std	Z+5, r25	; 0x05
    2e06:	a6 83       	std	Z+6, r26	; 0x06
    2e08:	b7 83       	std	Z+7, r27	; 0x07
    2e0a:	ab 01       	movw	r20, r22
    2e0c:	60 e0       	ldi	r22, 0x00	; 0
    2e0e:	70 e0       	ldi	r23, 0x00	; 0
    2e10:	ce 01       	movw	r24, r28
    2e12:	01 96       	adiw	r24, 0x01	; 1
    2e14:	7c 01       	movw	r14, r24
    2e16:	0e 94 47 08 	call	0x108e	; 0x108e <Int2String>
    2e1a:	6f e0       	ldi	r22, 0x0F	; 15
    2e1c:	70 e0       	ldi	r23, 0x00	; 0
    2e1e:	8f ee       	ldi	r24, 0xEF	; 239
    2e20:	94 e0       	ldi	r25, 0x04	; 4
    2e22:	84 d5       	rcall	.+2824   	; 0x392c <ESP8266_LL_USARTSend>
    2e24:	f7 01       	movw	r30, r14
    2e26:	01 90       	ld	r0, Z+
    2e28:	00 20       	and	r0, r0
    2e2a:	e9 f7       	brne	.-6      	; 0x2e26 <ESP8266_ServerEnable+0x80>
    2e2c:	31 97       	sbiw	r30, 0x01	; 1
    2e2e:	bf 01       	movw	r22, r30
    2e30:	6e 19       	sub	r22, r14
    2e32:	7f 09       	sbc	r23, r15
    2e34:	c7 01       	movw	r24, r14
    2e36:	7a d5       	rcall	.+2804   	; 0x392c <ESP8266_LL_USARTSend>
    2e38:	62 e0       	ldi	r22, 0x02	; 2
    2e3a:	70 e0       	ldi	r23, 0x00	; 0
    2e3c:	84 e6       	ldi	r24, 0x64	; 100
    2e3e:	99 e0       	ldi	r25, 0x09	; 9
    2e40:	75 d5       	rcall	.+2794   	; 0x392c <ESP8266_LL_USARTSend>
    2e42:	20 e0       	ldi	r18, 0x00	; 0
    2e44:	30 e0       	ldi	r19, 0x00	; 0
    2e46:	40 e0       	ldi	r20, 0x00	; 0
    2e48:	50 e0       	ldi	r21, 0x00	; 0
    2e4a:	66 e0       	ldi	r22, 0x06	; 6
    2e4c:	c8 01       	movw	r24, r16
    2e4e:	49 de       	rcall	.-878    	; 0x2ae2 <SendCommand>
    2e50:	f8 2e       	mov	r15, r24
    2e52:	88 23       	and	r24, r24
    2e54:	29 f0       	breq	.+10     	; 0x2e60 <ESP8266_ServerEnable+0xba>
    2e56:	f8 01       	movw	r30, r16
    2e58:	ec 5a       	subi	r30, 0xAC	; 172
    2e5a:	fe 4f       	sbci	r31, 0xFE	; 254
    2e5c:	f0 80       	ld	r15, Z
    2e5e:	12 c0       	rjmp	.+36     	; 0x2e84 <ESP8266_ServerEnable+0xde>
    2e60:	c8 01       	movw	r24, r16
    2e62:	a2 de       	rcall	.-700    	; 0x2ba8 <ESP8266_WaitReady>
    2e64:	f8 01       	movw	r30, r16
    2e66:	e1 5b       	subi	r30, 0xB1	; 177
    2e68:	fe 4f       	sbci	r31, 0xFE	; 254
    2e6a:	80 81       	ld	r24, Z
    2e6c:	81 fd       	sbrc	r24, 1
    2e6e:	06 c0       	rjmp	.+12     	; 0x2e7c <ESP8266_ServerEnable+0xd6>
    2e70:	35 96       	adiw	r30, 0x05	; 5
    2e72:	81 e0       	ldi	r24, 0x01	; 1
    2e74:	80 83       	st	Z, r24
    2e76:	ff 24       	eor	r15, r15
    2e78:	f3 94       	inc	r15
    2e7a:	04 c0       	rjmp	.+8      	; 0x2e84 <ESP8266_ServerEnable+0xde>
    2e7c:	f8 01       	movw	r30, r16
    2e7e:	ec 5a       	subi	r30, 0xAC	; 172
    2e80:	fe 4f       	sbci	r31, 0xFE	; 254
    2e82:	10 82       	st	Z, r1
    2e84:	8f 2d       	mov	r24, r15
    2e86:	27 96       	adiw	r28, 0x07	; 7
    2e88:	0f b6       	in	r0, 0x3f	; 63
    2e8a:	f8 94       	cli
    2e8c:	de bf       	out	0x3e, r29	; 62
    2e8e:	0f be       	out	0x3f, r0	; 63
    2e90:	cd bf       	out	0x3d, r28	; 61
    2e92:	df 91       	pop	r29
    2e94:	cf 91       	pop	r28
    2e96:	1f 91       	pop	r17
    2e98:	0f 91       	pop	r16
    2e9a:	ff 90       	pop	r15
    2e9c:	ef 90       	pop	r14
    2e9e:	08 95       	ret

00002ea0 <ESP8266_GetSTAIP>:
    2ea0:	cf 93       	push	r28
    2ea2:	df 93       	push	r29
    2ea4:	ec 01       	movw	r28, r24
    2ea6:	8c 81       	ldd	r24, Y+4	; 0x04
    2ea8:	9d 81       	ldd	r25, Y+5	; 0x05
    2eaa:	ae 81       	ldd	r26, Y+6	; 0x06
    2eac:	bf 81       	ldd	r27, Y+7	; 0x07
    2eae:	89 2b       	or	r24, r25
    2eb0:	8a 2b       	or	r24, r26
    2eb2:	8b 2b       	or	r24, r27
    2eb4:	31 f4       	brne	.+12     	; 0x2ec2 <ESP8266_GetSTAIP+0x22>
    2eb6:	fe 01       	movw	r30, r28
    2eb8:	e5 5e       	subi	r30, 0xE5	; 229
    2eba:	fe 4f       	sbci	r31, 0xFE	; 254
    2ebc:	80 81       	ld	r24, Z
    2ebe:	88 23       	and	r24, r24
    2ec0:	39 f0       	breq	.+14     	; 0x2ed0 <ESP8266_GetSTAIP+0x30>
    2ec2:	ce 01       	movw	r24, r28
    2ec4:	0f d8       	rcall	.-4066   	; 0x1ee4 <ESP8266_Update>
    2ec6:	cc 5a       	subi	r28, 0xAC	; 172
    2ec8:	de 4f       	sbci	r29, 0xFE	; 254
    2eca:	86 e0       	ldi	r24, 0x06	; 6
    2ecc:	88 83       	st	Y, r24
    2ece:	13 c0       	rjmp	.+38     	; 0x2ef6 <ESP8266_GetSTAIP+0x56>
    2ed0:	2b e1       	ldi	r18, 0x1B	; 27
    2ed2:	35 e0       	ldi	r19, 0x05	; 5
    2ed4:	47 e2       	ldi	r20, 0x27	; 39
    2ed6:	55 e0       	ldi	r21, 0x05	; 5
    2ed8:	66 e1       	ldi	r22, 0x16	; 22
    2eda:	ce 01       	movw	r24, r28
    2edc:	02 de       	rcall	.-1020   	; 0x2ae2 <SendCommand>
    2ede:	fe 01       	movw	r30, r28
    2ee0:	ec 5a       	subi	r30, 0xAC	; 172
    2ee2:	fe 4f       	sbci	r31, 0xFE	; 254
    2ee4:	80 81       	ld	r24, Z
    2ee6:	81 11       	cpse	r24, r1
    2ee8:	06 c0       	rjmp	.+12     	; 0x2ef6 <ESP8266_GetSTAIP+0x56>
    2eea:	c2 5b       	subi	r28, 0xB2	; 178
    2eec:	de 4f       	sbci	r29, 0xFE	; 254
    2eee:	98 81       	ld	r25, Y
    2ef0:	9c 7f       	andi	r25, 0xFC	; 252
    2ef2:	9b 7f       	andi	r25, 0xFB	; 251
    2ef4:	98 83       	st	Y, r25
    2ef6:	df 91       	pop	r29
    2ef8:	cf 91       	pop	r28
    2efa:	08 95       	ret

00002efc <ESP8266_GetAPIP>:
    2efc:	cf 93       	push	r28
    2efe:	df 93       	push	r29
    2f00:	ec 01       	movw	r28, r24
    2f02:	8c 81       	ldd	r24, Y+4	; 0x04
    2f04:	9d 81       	ldd	r25, Y+5	; 0x05
    2f06:	ae 81       	ldd	r26, Y+6	; 0x06
    2f08:	bf 81       	ldd	r27, Y+7	; 0x07
    2f0a:	89 2b       	or	r24, r25
    2f0c:	8a 2b       	or	r24, r26
    2f0e:	8b 2b       	or	r24, r27
    2f10:	31 f4       	brne	.+12     	; 0x2f1e <ESP8266_GetAPIP+0x22>
    2f12:	fe 01       	movw	r30, r28
    2f14:	e5 5e       	subi	r30, 0xE5	; 229
    2f16:	fe 4f       	sbci	r31, 0xFE	; 254
    2f18:	80 81       	ld	r24, Z
    2f1a:	88 23       	and	r24, r24
    2f1c:	41 f0       	breq	.+16     	; 0x2f2e <ESP8266_GetAPIP+0x32>
    2f1e:	ce 01       	movw	r24, r28
    2f20:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <ESP8266_Update>
    2f24:	cc 5a       	subi	r28, 0xAC	; 172
    2f26:	de 4f       	sbci	r29, 0xFE	; 254
    2f28:	86 e0       	ldi	r24, 0x06	; 6
    2f2a:	88 83       	st	Y, r24
    2f2c:	13 c0       	rjmp	.+38     	; 0x2f54 <ESP8266_GetAPIP+0x58>
    2f2e:	28 e3       	ldi	r18, 0x38	; 56
    2f30:	35 e0       	ldi	r19, 0x05	; 5
    2f32:	43 e4       	ldi	r20, 0x43	; 67
    2f34:	55 e0       	ldi	r21, 0x05	; 5
    2f36:	67 e1       	ldi	r22, 0x17	; 23
    2f38:	ce 01       	movw	r24, r28
    2f3a:	d3 dd       	rcall	.-1114   	; 0x2ae2 <SendCommand>
    2f3c:	fe 01       	movw	r30, r28
    2f3e:	ec 5a       	subi	r30, 0xAC	; 172
    2f40:	fe 4f       	sbci	r31, 0xFE	; 254
    2f42:	80 81       	ld	r24, Z
    2f44:	81 11       	cpse	r24, r1
    2f46:	06 c0       	rjmp	.+12     	; 0x2f54 <ESP8266_GetAPIP+0x58>
    2f48:	c2 5b       	subi	r28, 0xB2	; 178
    2f4a:	de 4f       	sbci	r29, 0xFE	; 254
    2f4c:	98 81       	ld	r25, Y
    2f4e:	9f 7c       	andi	r25, 0xCF	; 207
    2f50:	9f 7b       	andi	r25, 0xBF	; 191
    2f52:	98 83       	st	Y, r25
    2f54:	df 91       	pop	r29
    2f56:	cf 91       	pop	r28
    2f58:	08 95       	ret

00002f5a <ESP8266_GetSTAMAC>:
    2f5a:	cf 93       	push	r28
    2f5c:	df 93       	push	r29
    2f5e:	ec 01       	movw	r28, r24
    2f60:	8c 81       	ldd	r24, Y+4	; 0x04
    2f62:	9d 81       	ldd	r25, Y+5	; 0x05
    2f64:	ae 81       	ldd	r26, Y+6	; 0x06
    2f66:	bf 81       	ldd	r27, Y+7	; 0x07
    2f68:	89 2b       	or	r24, r25
    2f6a:	8a 2b       	or	r24, r26
    2f6c:	8b 2b       	or	r24, r27
    2f6e:	31 f4       	brne	.+12     	; 0x2f7c <ESP8266_GetSTAMAC+0x22>
    2f70:	fe 01       	movw	r30, r28
    2f72:	e5 5e       	subi	r30, 0xE5	; 229
    2f74:	fe 4f       	sbci	r31, 0xFE	; 254
    2f76:	80 81       	ld	r24, Z
    2f78:	88 23       	and	r24, r24
    2f7a:	41 f0       	breq	.+16     	; 0x2f8c <ESP8266_GetSTAMAC+0x32>
    2f7c:	ce 01       	movw	r24, r28
    2f7e:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <ESP8266_Update>
    2f82:	cc 5a       	subi	r28, 0xAC	; 172
    2f84:	de 4f       	sbci	r29, 0xFE	; 254
    2f86:	86 e0       	ldi	r24, 0x06	; 6
    2f88:	88 83       	st	Y, r24
    2f8a:	12 c0       	rjmp	.+36     	; 0x2fb0 <ESP8266_GetSTAMAC+0x56>
    2f8c:	29 ed       	ldi	r18, 0xD9	; 217
    2f8e:	33 e0       	ldi	r19, 0x03	; 3
    2f90:	43 e5       	ldi	r20, 0x53	; 83
    2f92:	55 e0       	ldi	r21, 0x05	; 5
    2f94:	68 e1       	ldi	r22, 0x18	; 24
    2f96:	ce 01       	movw	r24, r28
    2f98:	a4 dd       	rcall	.-1208   	; 0x2ae2 <SendCommand>
    2f9a:	fe 01       	movw	r30, r28
    2f9c:	ec 5a       	subi	r30, 0xAC	; 172
    2f9e:	fe 4f       	sbci	r31, 0xFE	; 254
    2fa0:	80 81       	ld	r24, Z
    2fa2:	81 11       	cpse	r24, r1
    2fa4:	05 c0       	rjmp	.+10     	; 0x2fb0 <ESP8266_GetSTAMAC+0x56>
    2fa6:	c2 5b       	subi	r28, 0xB2	; 178
    2fa8:	de 4f       	sbci	r29, 0xFE	; 254
    2faa:	98 81       	ld	r25, Y
    2fac:	97 7f       	andi	r25, 0xF7	; 247
    2fae:	98 83       	st	Y, r25
    2fb0:	df 91       	pop	r29
    2fb2:	cf 91       	pop	r28
    2fb4:	08 95       	ret

00002fb6 <ESP8266_GetAPMAC>:
    2fb6:	cf 93       	push	r28
    2fb8:	df 93       	push	r29
    2fba:	ec 01       	movw	r28, r24
    2fbc:	8c 81       	ldd	r24, Y+4	; 0x04
    2fbe:	9d 81       	ldd	r25, Y+5	; 0x05
    2fc0:	ae 81       	ldd	r26, Y+6	; 0x06
    2fc2:	bf 81       	ldd	r27, Y+7	; 0x07
    2fc4:	89 2b       	or	r24, r25
    2fc6:	8a 2b       	or	r24, r26
    2fc8:	8b 2b       	or	r24, r27
    2fca:	31 f4       	brne	.+12     	; 0x2fd8 <ESP8266_GetAPMAC+0x22>
    2fcc:	fe 01       	movw	r30, r28
    2fce:	e5 5e       	subi	r30, 0xE5	; 229
    2fd0:	fe 4f       	sbci	r31, 0xFE	; 254
    2fd2:	80 81       	ld	r24, Z
    2fd4:	88 23       	and	r24, r24
    2fd6:	41 f0       	breq	.+16     	; 0x2fe8 <ESP8266_GetAPMAC+0x32>
    2fd8:	ce 01       	movw	r24, r28
    2fda:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <ESP8266_Update>
    2fde:	cc 5a       	subi	r28, 0xAC	; 172
    2fe0:	de 4f       	sbci	r29, 0xFE	; 254
    2fe2:	86 e0       	ldi	r24, 0x06	; 6
    2fe4:	88 83       	st	Y, r24
    2fe6:	12 c0       	rjmp	.+36     	; 0x300c <ESP8266_GetAPMAC+0x56>
    2fe8:	24 ee       	ldi	r18, 0xE4	; 228
    2fea:	33 e0       	ldi	r19, 0x03	; 3
    2fec:	4a e8       	ldi	r20, 0x8A	; 138
    2fee:	55 e0       	ldi	r21, 0x05	; 5
    2ff0:	69 e1       	ldi	r22, 0x19	; 25
    2ff2:	ce 01       	movw	r24, r28
    2ff4:	76 dd       	rcall	.-1300   	; 0x2ae2 <SendCommand>
    2ff6:	fe 01       	movw	r30, r28
    2ff8:	ec 5a       	subi	r30, 0xAC	; 172
    2ffa:	fe 4f       	sbci	r31, 0xFE	; 254
    2ffc:	80 81       	ld	r24, Z
    2ffe:	81 11       	cpse	r24, r1
    3000:	05 c0       	rjmp	.+10     	; 0x300c <ESP8266_GetAPMAC+0x56>
    3002:	c2 5b       	subi	r28, 0xB2	; 178
    3004:	de 4f       	sbci	r29, 0xFE	; 254
    3006:	98 81       	ld	r25, Y
    3008:	9f 77       	andi	r25, 0x7F	; 127
    300a:	98 83       	st	Y, r25
    300c:	df 91       	pop	r29
    300e:	cf 91       	pop	r28
    3010:	08 95       	ret

00003012 <ESP8266_GetAP>:
    3012:	cf 93       	push	r28
    3014:	df 93       	push	r29
    3016:	ec 01       	movw	r28, r24
    3018:	8c 81       	ldd	r24, Y+4	; 0x04
    301a:	9d 81       	ldd	r25, Y+5	; 0x05
    301c:	ae 81       	ldd	r26, Y+6	; 0x06
    301e:	bf 81       	ldd	r27, Y+7	; 0x07
    3020:	89 2b       	or	r24, r25
    3022:	8a 2b       	or	r24, r26
    3024:	8b 2b       	or	r24, r27
    3026:	31 f4       	brne	.+12     	; 0x3034 <ESP8266_GetAP+0x22>
    3028:	fe 01       	movw	r30, r28
    302a:	e5 5e       	subi	r30, 0xE5	; 229
    302c:	fe 4f       	sbci	r31, 0xFE	; 254
    302e:	80 81       	ld	r24, Z
    3030:	88 23       	and	r24, r24
    3032:	41 f0       	breq	.+16     	; 0x3044 <ESP8266_GetAP+0x32>
    3034:	ce 01       	movw	r24, r28
    3036:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <ESP8266_Update>
    303a:	cc 5a       	subi	r28, 0xAC	; 172
    303c:	de 4f       	sbci	r29, 0xFE	; 254
    303e:	86 e0       	ldi	r24, 0x06	; 6
    3040:	88 83       	st	Y, r24
    3042:	0f c0       	rjmp	.+30     	; 0x3062 <ESP8266_GetAP+0x50>
    3044:	2f ea       	ldi	r18, 0xAF	; 175
    3046:	33 e0       	ldi	r19, 0x03	; 3
    3048:	49 eb       	ldi	r20, 0xB9	; 185
    304a:	55 e0       	ldi	r21, 0x05	; 5
    304c:	6c e0       	ldi	r22, 0x0C	; 12
    304e:	ce 01       	movw	r24, r28
    3050:	48 dd       	rcall	.-1392   	; 0x2ae2 <SendCommand>
    3052:	88 23       	and	r24, r24
    3054:	21 f0       	breq	.+8      	; 0x305e <ESP8266_GetAP+0x4c>
    3056:	cc 5a       	subi	r28, 0xAC	; 172
    3058:	de 4f       	sbci	r29, 0xFE	; 254
    305a:	88 81       	ld	r24, Y
    305c:	02 c0       	rjmp	.+4      	; 0x3062 <ESP8266_GetAP+0x50>
    305e:	ce 01       	movw	r24, r28
    3060:	a3 dd       	rcall	.-1210   	; 0x2ba8 <ESP8266_WaitReady>
    3062:	df 91       	pop	r29
    3064:	cf 91       	pop	r28
    3066:	08 95       	ret

00003068 <ESP8266_SetMode>:
    3068:	ff 92       	push	r15
    306a:	0f 93       	push	r16
    306c:	1f 93       	push	r17
    306e:	cf 93       	push	r28
    3070:	df 93       	push	r29
    3072:	1f 92       	push	r1
    3074:	cd b7       	in	r28, 0x3d	; 61
    3076:	de b7       	in	r29, 0x3e	; 62
    3078:	8c 01       	movw	r16, r24
    307a:	f6 2e       	mov	r15, r22
    307c:	69 83       	std	Y+1, r22	; 0x01
    307e:	fc 01       	movw	r30, r24
    3080:	84 81       	ldd	r24, Z+4	; 0x04
    3082:	95 81       	ldd	r25, Z+5	; 0x05
    3084:	a6 81       	ldd	r26, Z+6	; 0x06
    3086:	b7 81       	ldd	r27, Z+7	; 0x07
    3088:	89 2b       	or	r24, r25
    308a:	8a 2b       	or	r24, r26
    308c:	8b 2b       	or	r24, r27
    308e:	29 f4       	brne	.+10     	; 0x309a <ESP8266_SetMode+0x32>
    3090:	e5 5e       	subi	r30, 0xE5	; 229
    3092:	fe 4f       	sbci	r31, 0xFE	; 254
    3094:	80 81       	ld	r24, Z
    3096:	88 23       	and	r24, r24
    3098:	49 f0       	breq	.+18     	; 0x30ac <ESP8266_SetMode+0x44>
    309a:	c8 01       	movw	r24, r16
    309c:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <ESP8266_Update>
    30a0:	f8 01       	movw	r30, r16
    30a2:	ec 5a       	subi	r30, 0xAC	; 172
    30a4:	fe 4f       	sbci	r31, 0xFE	; 254
    30a6:	86 e0       	ldi	r24, 0x06	; 6
    30a8:	80 83       	st	Z, r24
    30aa:	3c c0       	rjmp	.+120    	; 0x3124 <ESP8266_SetMode+0xbc>
    30ac:	85 e0       	ldi	r24, 0x05	; 5
    30ae:	90 e0       	ldi	r25, 0x00	; 0
    30b0:	a0 e0       	ldi	r26, 0x00	; 0
    30b2:	b0 e0       	ldi	r27, 0x00	; 0
    30b4:	f8 01       	movw	r30, r16
    30b6:	84 83       	std	Z+4, r24	; 0x04
    30b8:	95 83       	std	Z+5, r25	; 0x05
    30ba:	a6 83       	std	Z+6, r26	; 0x06
    30bc:	b7 83       	std	Z+7, r27	; 0x07
    30be:	80 e3       	ldi	r24, 0x30	; 48
    30c0:	86 0f       	add	r24, r22
    30c2:	89 83       	std	Y+1, r24	; 0x01
    30c4:	6e e0       	ldi	r22, 0x0E	; 14
    30c6:	70 e0       	ldi	r23, 0x00	; 0
    30c8:	85 ec       	ldi	r24, 0xC5	; 197
    30ca:	95 e0       	ldi	r25, 0x05	; 5
    30cc:	2f d4       	rcall	.+2142   	; 0x392c <ESP8266_LL_USARTSend>
    30ce:	61 e0       	ldi	r22, 0x01	; 1
    30d0:	70 e0       	ldi	r23, 0x00	; 0
    30d2:	ce 01       	movw	r24, r28
    30d4:	01 96       	adiw	r24, 0x01	; 1
    30d6:	2a d4       	rcall	.+2132   	; 0x392c <ESP8266_LL_USARTSend>
    30d8:	62 e0       	ldi	r22, 0x02	; 2
    30da:	70 e0       	ldi	r23, 0x00	; 0
    30dc:	84 e6       	ldi	r24, 0x64	; 100
    30de:	99 e0       	ldi	r25, 0x09	; 9
    30e0:	25 d4       	rcall	.+2122   	; 0x392c <ESP8266_LL_USARTSend>
    30e2:	24 ed       	ldi	r18, 0xD4	; 212
    30e4:	35 e0       	ldi	r19, 0x05	; 5
    30e6:	40 e0       	ldi	r20, 0x00	; 0
    30e8:	50 e0       	ldi	r21, 0x00	; 0
    30ea:	65 e0       	ldi	r22, 0x05	; 5
    30ec:	c8 01       	movw	r24, r16
    30ee:	f9 dc       	rcall	.-1550   	; 0x2ae2 <SendCommand>
    30f0:	88 23       	and	r24, r24
    30f2:	29 f0       	breq	.+10     	; 0x30fe <ESP8266_SetMode+0x96>
    30f4:	f8 01       	movw	r30, r16
    30f6:	ec 5a       	subi	r30, 0xAC	; 172
    30f8:	fe 4f       	sbci	r31, 0xFE	; 254
    30fa:	80 81       	ld	r24, Z
    30fc:	13 c0       	rjmp	.+38     	; 0x3124 <ESP8266_SetMode+0xbc>
    30fe:	f8 01       	movw	r30, r16
    3100:	e3 51       	subi	r30, 0x13	; 19
    3102:	ff 4f       	sbci	r31, 0xFF	; 255
    3104:	f0 82       	st	Z, r15
    3106:	c8 01       	movw	r24, r16
    3108:	4f dd       	rcall	.-1378   	; 0x2ba8 <ESP8266_WaitReady>
    310a:	f8 01       	movw	r30, r16
    310c:	e2 51       	subi	r30, 0x12	; 18
    310e:	ff 4f       	sbci	r31, 0xFF	; 255
    3110:	80 81       	ld	r24, Z
    3112:	8f 15       	cp	r24, r15
    3114:	29 f0       	breq	.+10     	; 0x3120 <ESP8266_SetMode+0xb8>
    3116:	ea 59       	subi	r30, 0x9A	; 154
    3118:	ff 4f       	sbci	r31, 0xFF	; 255
    311a:	81 e0       	ldi	r24, 0x01	; 1
    311c:	80 83       	st	Z, r24
    311e:	02 c0       	rjmp	.+4      	; 0x3124 <ESP8266_SetMode+0xbc>
    3120:	c8 01       	movw	r24, r16
    3122:	77 df       	rcall	.-274    	; 0x3012 <ESP8266_GetAP>
    3124:	0f 90       	pop	r0
    3126:	df 91       	pop	r29
    3128:	cf 91       	pop	r28
    312a:	1f 91       	pop	r17
    312c:	0f 91       	pop	r16
    312e:	ff 90       	pop	r15
    3130:	08 95       	ret

00003132 <ESP8266_Init>:
    3132:	2f 92       	push	r2
    3134:	3f 92       	push	r3
    3136:	4f 92       	push	r4
    3138:	5f 92       	push	r5
    313a:	6f 92       	push	r6
    313c:	7f 92       	push	r7
    313e:	8f 92       	push	r8
    3140:	9f 92       	push	r9
    3142:	af 92       	push	r10
    3144:	bf 92       	push	r11
    3146:	cf 92       	push	r12
    3148:	df 92       	push	r13
    314a:	ef 92       	push	r14
    314c:	ff 92       	push	r15
    314e:	0f 93       	push	r16
    3150:	1f 93       	push	r17
    3152:	cf 93       	push	r28
    3154:	df 93       	push	r29
    3156:	cd b7       	in	r28, 0x3d	; 61
    3158:	de b7       	in	r29, 0x3e	; 62
    315a:	29 97       	sbiw	r28, 0x09	; 9
    315c:	0f b6       	in	r0, 0x3f	; 63
    315e:	f8 94       	cli
    3160:	de bf       	out	0x3e, r29	; 62
    3162:	0f be       	out	0x3f, r0	; 63
    3164:	cd bf       	out	0x3d, r28	; 61
    3166:	8c 01       	movw	r16, r24
    3168:	6a 01       	movw	r12, r20
    316a:	7b 01       	movw	r14, r22
    316c:	fc 01       	movw	r30, r24
    316e:	16 8a       	std	Z+22, r1	; 0x16
    3170:	17 8a       	std	Z+23, r1	; 0x17
    3172:	10 8e       	std	Z+24, r1	; 0x18
    3174:	11 8e       	std	Z+25, r1	; 0x19
    3176:	23 e9       	ldi	r18, 0x93	; 147
    3178:	3e e0       	ldi	r19, 0x0E	; 14
    317a:	41 e0       	ldi	r20, 0x01	; 1
    317c:	52 e0       	ldi	r21, 0x02	; 2
    317e:	60 e0       	ldi	r22, 0x00	; 0
    3180:	70 e0       	ldi	r23, 0x00	; 0
    3182:	86 ea       	ldi	r24, 0xA6	; 166
    3184:	90 e1       	ldi	r25, 0x10	; 16
    3186:	0e 94 b6 00 	call	0x16c	; 0x16c <BUFFER_Init>
    318a:	88 23       	and	r24, r24
    318c:	31 f0       	breq	.+12     	; 0x319a <ESP8266_Init+0x68>
    318e:	f8 01       	movw	r30, r16
    3190:	ec 5a       	subi	r30, 0xAC	; 172
    3192:	fe 4f       	sbci	r31, 0xFE	; 254
    3194:	84 e0       	ldi	r24, 0x04	; 4
    3196:	80 83       	st	Z, r24
    3198:	af c1       	rjmp	.+862    	; 0x34f8 <ESP8266_Init+0x3c6>
    319a:	22 e9       	ldi	r18, 0x92	; 146
    319c:	3a e0       	ldi	r19, 0x0A	; 10
    319e:	41 e0       	ldi	r20, 0x01	; 1
    31a0:	54 e0       	ldi	r21, 0x04	; 4
    31a2:	60 e0       	ldi	r22, 0x00	; 0
    31a4:	70 e0       	ldi	r23, 0x00	; 0
    31a6:	84 e9       	ldi	r24, 0x94	; 148
    31a8:	90 e1       	ldi	r25, 0x10	; 16
    31aa:	0e 94 b6 00 	call	0x16c	; 0x16c <BUFFER_Init>
    31ae:	88 23       	and	r24, r24
    31b0:	31 f0       	breq	.+12     	; 0x31be <ESP8266_Init+0x8c>
    31b2:	f8 01       	movw	r30, r16
    31b4:	ec 5a       	subi	r30, 0xAC	; 172
    31b6:	fe 4f       	sbci	r31, 0xFE	; 254
    31b8:	84 e0       	ldi	r24, 0x04	; 4
    31ba:	80 83       	st	Z, r24
    31bc:	9d c1       	rjmp	.+826    	; 0x34f8 <ESP8266_Init+0x3c6>
    31be:	88 ee       	ldi	r24, 0xE8	; 232
    31c0:	93 e0       	ldi	r25, 0x03	; 3
    31c2:	f8 01       	movw	r30, r16
    31c4:	ee 5a       	subi	r30, 0xAE	; 174
    31c6:	fe 4f       	sbci	r31, 0xFE	; 254
    31c8:	91 83       	std	Z+1, r25	; 0x01
    31ca:	80 83       	st	Z, r24
    31cc:	27 9a       	sbi	0x04, 7	; 4
    31ce:	2f 98       	cbi	0x05, 7	; 5
    31d0:	f8 01       	movw	r30, r16
    31d2:	86 85       	ldd	r24, Z+14	; 0x0e
    31d4:	97 85       	ldd	r25, Z+15	; 0x0f
    31d6:	a0 89       	ldd	r26, Z+16	; 0x10
    31d8:	b1 89       	ldd	r27, Z+17	; 0x11
    31da:	8d 83       	std	Y+5, r24	; 0x05
    31dc:	9e 83       	std	Y+6, r25	; 0x06
    31de:	af 83       	std	Y+7, r26	; 0x07
    31e0:	b8 87       	std	Y+8, r27	; 0x08
    31e2:	f8 01       	movw	r30, r16
    31e4:	86 85       	ldd	r24, Z+14	; 0x0e
    31e6:	97 85       	ldd	r25, Z+15	; 0x0f
    31e8:	a0 89       	ldd	r26, Z+16	; 0x10
    31ea:	b1 89       	ldd	r27, Z+17	; 0x11
    31ec:	4d 81       	ldd	r20, Y+5	; 0x05
    31ee:	5e 81       	ldd	r21, Y+6	; 0x06
    31f0:	6f 81       	ldd	r22, Y+7	; 0x07
    31f2:	78 85       	ldd	r23, Y+8	; 0x08
    31f4:	84 1b       	sub	r24, r20
    31f6:	95 0b       	sbc	r25, r21
    31f8:	a6 0b       	sbc	r26, r22
    31fa:	b7 0b       	sbc	r27, r23
    31fc:	84 36       	cpi	r24, 0x64	; 100
    31fe:	91 05       	cpc	r25, r1
    3200:	a1 05       	cpc	r26, r1
    3202:	b1 05       	cpc	r27, r1
    3204:	70 f3       	brcs	.-36     	; 0x31e2 <ESP8266_Init+0xb0>
    3206:	2f 9a       	sbi	0x05, 7	; 5
    3208:	86 85       	ldd	r24, Z+14	; 0x0e
    320a:	97 85       	ldd	r25, Z+15	; 0x0f
    320c:	a0 89       	ldd	r26, Z+16	; 0x10
    320e:	b1 89       	ldd	r27, Z+17	; 0x11
    3210:	89 83       	std	Y+1, r24	; 0x01
    3212:	9a 83       	std	Y+2, r25	; 0x02
    3214:	ab 83       	std	Y+3, r26	; 0x03
    3216:	bc 83       	std	Y+4, r27	; 0x04
    3218:	f8 01       	movw	r30, r16
    321a:	86 85       	ldd	r24, Z+14	; 0x0e
    321c:	97 85       	ldd	r25, Z+15	; 0x0f
    321e:	a0 89       	ldd	r26, Z+16	; 0x10
    3220:	b1 89       	ldd	r27, Z+17	; 0x11
    3222:	49 81       	ldd	r20, Y+1	; 0x01
    3224:	5a 81       	ldd	r21, Y+2	; 0x02
    3226:	6b 81       	ldd	r22, Y+3	; 0x03
    3228:	7c 81       	ldd	r23, Y+4	; 0x04
    322a:	84 1b       	sub	r24, r20
    322c:	95 0b       	sbc	r25, r21
    322e:	a6 0b       	sbc	r26, r22
    3230:	b7 0b       	sbc	r27, r23
    3232:	84 36       	cpi	r24, 0x64	; 100
    3234:	91 05       	cpc	r25, r1
    3236:	a1 05       	cpc	r26, r1
    3238:	b1 05       	cpc	r27, r1
    323a:	70 f3       	brcs	.-36     	; 0x3218 <ESP8266_Init+0xe6>
    323c:	c0 82       	st	Z, r12
    323e:	d1 82       	std	Z+1, r13	; 0x01
    3240:	e2 82       	std	Z+2, r14	; 0x02
    3242:	f3 82       	std	Z+3, r15	; 0x03
    3244:	c7 01       	movw	r24, r14
    3246:	b6 01       	movw	r22, r12
    3248:	1d d3       	rcall	.+1594   	; 0x3884 <ESP8266_LL_USARTInit>
    324a:	88 eb       	ldi	r24, 0xB8	; 184
    324c:	9b e0       	ldi	r25, 0x0B	; 11
    324e:	a0 e0       	ldi	r26, 0x00	; 0
    3250:	b0 e0       	ldi	r27, 0x00	; 0
    3252:	f8 01       	movw	r30, r16
    3254:	86 8b       	std	Z+22, r24	; 0x16
    3256:	97 8b       	std	Z+23, r25	; 0x17
    3258:	a0 8f       	std	Z+24, r26	; 0x18
    325a:	b1 8f       	std	Z+25, r27	; 0x19
    325c:	21 e0       	ldi	r18, 0x01	; 1
    325e:	33 e0       	ldi	r19, 0x03	; 3
    3260:	4e ed       	ldi	r20, 0xDE	; 222
    3262:	55 e0       	ldi	r21, 0x05	; 5
    3264:	6f e0       	ldi	r22, 0x0F	; 15
    3266:	c8 01       	movw	r24, r16
    3268:	3c dc       	rcall	.-1928   	; 0x2ae2 <SendCommand>
    326a:	c8 01       	movw	r24, r16
    326c:	9d dc       	rcall	.-1734   	; 0x2ba8 <ESP8266_WaitReady>
    326e:	f8 01       	movw	r30, r16
    3270:	e1 5b       	subi	r30, 0xB1	; 177
    3272:	fe 4f       	sbci	r31, 0xFE	; 254
    3274:	80 81       	ld	r24, Z
    3276:	81 fd       	sbrc	r24, 1
    3278:	38 c0       	rjmp	.+112    	; 0x32ea <ESP8266_Init+0x1b8>
    327a:	0f 2e       	mov	r0, r31
    327c:	f2 e8       	ldi	r31, 0x82	; 130
    327e:	ef 2e       	mov	r14, r31
    3280:	f6 e0       	ldi	r31, 0x06	; 6
    3282:	ff 2e       	mov	r15, r31
    3284:	f0 2d       	mov	r31, r0
    3286:	0f 2e       	mov	r0, r31
    3288:	f2 e9       	ldi	r31, 0x92	; 146
    328a:	2f 2e       	mov	r2, r31
    328c:	f6 e0       	ldi	r31, 0x06	; 6
    328e:	3f 2e       	mov	r3, r31
    3290:	f0 2d       	mov	r31, r0
    3292:	0f 2e       	mov	r0, r31
    3294:	f4 e6       	ldi	r31, 0x64	; 100
    3296:	4f 2e       	mov	r4, r31
    3298:	51 2c       	mov	r5, r1
    329a:	61 2c       	mov	r6, r1
    329c:	71 2c       	mov	r7, r1
    329e:	f0 2d       	mov	r31, r0
    32a0:	6f 01       	movw	r12, r30
    32a2:	f7 01       	movw	r30, r14
    32a4:	81 90       	ld	r8, Z+
    32a6:	91 90       	ld	r9, Z+
    32a8:	a1 90       	ld	r10, Z+
    32aa:	b1 90       	ld	r11, Z+
    32ac:	7f 01       	movw	r14, r30
    32ae:	c5 01       	movw	r24, r10
    32b0:	b4 01       	movw	r22, r8
    32b2:	e8 d2       	rcall	.+1488   	; 0x3884 <ESP8266_LL_USARTInit>
    32b4:	f8 01       	movw	r30, r16
    32b6:	46 8a       	std	Z+22, r4	; 0x16
    32b8:	57 8a       	std	Z+23, r5	; 0x17
    32ba:	60 8e       	std	Z+24, r6	; 0x18
    32bc:	71 8e       	std	Z+25, r7	; 0x19
    32be:	21 e0       	ldi	r18, 0x01	; 1
    32c0:	33 e0       	ldi	r19, 0x03	; 3
    32c2:	4e ed       	ldi	r20, 0xDE	; 222
    32c4:	55 e0       	ldi	r21, 0x05	; 5
    32c6:	6f e0       	ldi	r22, 0x0F	; 15
    32c8:	c8 01       	movw	r24, r16
    32ca:	0b dc       	rcall	.-2026   	; 0x2ae2 <SendCommand>
    32cc:	c8 01       	movw	r24, r16
    32ce:	6c dc       	rcall	.-1832   	; 0x2ba8 <ESP8266_WaitReady>
    32d0:	f6 01       	movw	r30, r12
    32d2:	80 81       	ld	r24, Z
    32d4:	81 ff       	sbrs	r24, 1
    32d6:	06 c0       	rjmp	.+12     	; 0x32e4 <ESP8266_Init+0x1b2>
    32d8:	f8 01       	movw	r30, r16
    32da:	80 82       	st	Z, r8
    32dc:	91 82       	std	Z+1, r9	; 0x01
    32de:	a2 82       	std	Z+2, r10	; 0x02
    32e0:	b3 82       	std	Z+3, r11	; 0x03
    32e2:	03 c0       	rjmp	.+6      	; 0x32ea <ESP8266_Init+0x1b8>
    32e4:	e2 14       	cp	r14, r2
    32e6:	f3 04       	cpc	r15, r3
    32e8:	e1 f6       	brne	.-72     	; 0x32a2 <ESP8266_Init+0x170>
    32ea:	80 e3       	ldi	r24, 0x30	; 48
    32ec:	95 e7       	ldi	r25, 0x75	; 117
    32ee:	a0 e0       	ldi	r26, 0x00	; 0
    32f0:	b0 e0       	ldi	r27, 0x00	; 0
    32f2:	f8 01       	movw	r30, r16
    32f4:	86 8b       	std	Z+22, r24	; 0x16
    32f6:	97 8b       	std	Z+23, r25	; 0x17
    32f8:	a0 8f       	std	Z+24, r26	; 0x18
    32fa:	b1 8f       	std	Z+25, r27	; 0x19
    32fc:	e1 5b       	subi	r30, 0xB1	; 177
    32fe:	fe 4f       	sbci	r31, 0xFE	; 254
    3300:	80 81       	ld	r24, Z
    3302:	81 fd       	sbrc	r24, 1
    3304:	04 c0       	rjmp	.+8      	; 0x330e <ESP8266_Init+0x1dc>
    3306:	35 96       	adiw	r30, 0x05	; 5
    3308:	82 e0       	ldi	r24, 0x02	; 2
    330a:	80 83       	st	Z, r24
    330c:	f5 c0       	rjmp	.+490    	; 0x34f8 <ESP8266_Init+0x3c6>
    330e:	2d ed       	ldi	r18, 0xDD	; 221
    3310:	32 e0       	ldi	r19, 0x02	; 2
    3312:	47 ee       	ldi	r20, 0xE7	; 231
    3314:	55 e0       	ldi	r21, 0x05	; 5
    3316:	6e e0       	ldi	r22, 0x0E	; 14
    3318:	c8 01       	movw	r24, r16
    331a:	e3 db       	rcall	.-2106   	; 0x2ae2 <SendCommand>
    331c:	c8 01       	movw	r24, r16
    331e:	44 dc       	rcall	.-1912   	; 0x2ba8 <ESP8266_WaitReady>
    3320:	f8 01       	movw	r30, r16
    3322:	e1 5b       	subi	r30, 0xB1	; 177
    3324:	fe 4f       	sbci	r31, 0xFE	; 254
    3326:	80 81       	ld	r24, Z
    3328:	81 fd       	sbrc	r24, 1
    332a:	04 c0       	rjmp	.+8      	; 0x3334 <ESP8266_Init+0x202>
    332c:	35 96       	adiw	r30, 0x05	; 5
    332e:	82 e0       	ldi	r24, 0x02	; 2
    3330:	80 83       	st	Z, r24
    3332:	e2 c0       	rjmp	.+452    	; 0x34f8 <ESP8266_Init+0x3c6>
    3334:	2c ee       	ldi	r18, 0xEC	; 236
    3336:	35 e0       	ldi	r19, 0x05	; 5
    3338:	41 ef       	ldi	r20, 0xF1	; 241
    333a:	55 e0       	ldi	r21, 0x05	; 5
    333c:	6d e0       	ldi	r22, 0x0D	; 13
    333e:	c8 01       	movw	r24, r16
    3340:	d0 db       	rcall	.-2144   	; 0x2ae2 <SendCommand>
    3342:	c8 01       	movw	r24, r16
    3344:	31 dc       	rcall	.-1950   	; 0x2ba8 <ESP8266_WaitReady>
    3346:	0f 2e       	mov	r0, r31
    3348:	f1 e3       	ldi	r31, 0x31	; 49
    334a:	df 2e       	mov	r13, r31
    334c:	f0 2d       	mov	r31, r0
    334e:	78 01       	movw	r14, r16
    3350:	fc ea       	ldi	r31, 0xAC	; 172
    3352:	ef 1a       	sub	r14, r31
    3354:	fe ef       	ldi	r31, 0xFE	; 254
    3356:	ff 0a       	sbc	r15, r31
    3358:	0f 2e       	mov	r0, r31
    335a:	f6 e0       	ldi	r31, 0x06	; 6
    335c:	cf 2e       	mov	r12, r31
    335e:	f0 2d       	mov	r31, r0
    3360:	58 01       	movw	r10, r16
    3362:	85 ee       	ldi	r24, 0xE5	; 229
    3364:	a8 1a       	sub	r10, r24
    3366:	8e ef       	ldi	r24, 0xFE	; 254
    3368:	b8 0a       	sbc	r11, r24
    336a:	0f 2e       	mov	r0, r31
    336c:	fb e0       	ldi	r31, 0x0B	; 11
    336e:	2f 2e       	mov	r2, r31
    3370:	31 2c       	mov	r3, r1
    3372:	41 2c       	mov	r4, r1
    3374:	51 2c       	mov	r5, r1
    3376:	f0 2d       	mov	r31, r0
    3378:	48 01       	movw	r8, r16
    337a:	e1 eb       	ldi	r30, 0xB1	; 177
    337c:	8e 1a       	sub	r8, r30
    337e:	ee ef       	ldi	r30, 0xFE	; 254
    3380:	9e 0a       	sbc	r9, r30
    3382:	77 24       	eor	r7, r7
    3384:	73 94       	inc	r7
    3386:	d9 86       	std	Y+9, r13	; 0x09
    3388:	f8 01       	movw	r30, r16
    338a:	84 81       	ldd	r24, Z+4	; 0x04
    338c:	95 81       	ldd	r25, Z+5	; 0x05
    338e:	a6 81       	ldd	r26, Z+6	; 0x06
    3390:	b7 81       	ldd	r27, Z+7	; 0x07
    3392:	89 2b       	or	r24, r25
    3394:	8a 2b       	or	r24, r26
    3396:	8b 2b       	or	r24, r27
    3398:	21 f4       	brne	.+8      	; 0x33a2 <ESP8266_Init+0x270>
    339a:	f5 01       	movw	r30, r10
    339c:	80 81       	ld	r24, Z
    339e:	88 23       	and	r24, r24
    33a0:	31 f0       	breq	.+12     	; 0x33ae <ESP8266_Init+0x27c>
    33a2:	c8 01       	movw	r24, r16
    33a4:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <ESP8266_Update>
    33a8:	f7 01       	movw	r30, r14
    33aa:	c0 82       	st	Z, r12
    33ac:	ec cf       	rjmp	.-40     	; 0x3386 <ESP8266_Init+0x254>
    33ae:	f8 01       	movw	r30, r16
    33b0:	24 82       	std	Z+4, r2	; 0x04
    33b2:	35 82       	std	Z+5, r3	; 0x05
    33b4:	46 82       	std	Z+6, r4	; 0x06
    33b6:	57 82       	std	Z+7, r5	; 0x07
    33b8:	6a e0       	ldi	r22, 0x0A	; 10
    33ba:	70 e0       	ldi	r23, 0x00	; 0
    33bc:	88 ef       	ldi	r24, 0xF8	; 248
    33be:	95 e0       	ldi	r25, 0x05	; 5
    33c0:	b5 d2       	rcall	.+1386   	; 0x392c <ESP8266_LL_USARTSend>
    33c2:	61 e0       	ldi	r22, 0x01	; 1
    33c4:	70 e0       	ldi	r23, 0x00	; 0
    33c6:	ce 01       	movw	r24, r28
    33c8:	09 96       	adiw	r24, 0x09	; 9
    33ca:	b0 d2       	rcall	.+1376   	; 0x392c <ESP8266_LL_USARTSend>
    33cc:	62 e0       	ldi	r22, 0x02	; 2
    33ce:	70 e0       	ldi	r23, 0x00	; 0
    33d0:	84 e6       	ldi	r24, 0x64	; 100
    33d2:	99 e0       	ldi	r25, 0x09	; 9
    33d4:	ab d2       	rcall	.+1366   	; 0x392c <ESP8266_LL_USARTSend>
    33d6:	20 e0       	ldi	r18, 0x00	; 0
    33d8:	30 e0       	ldi	r19, 0x00	; 0
    33da:	40 e0       	ldi	r20, 0x00	; 0
    33dc:	50 e0       	ldi	r21, 0x00	; 0
    33de:	6b e0       	ldi	r22, 0x0B	; 11
    33e0:	c8 01       	movw	r24, r16
    33e2:	7f db       	rcall	.-2306   	; 0x2ae2 <SendCommand>
    33e4:	88 23       	and	r24, r24
    33e6:	29 f0       	breq	.+10     	; 0x33f2 <ESP8266_Init+0x2c0>
    33e8:	f7 01       	movw	r30, r14
    33ea:	80 81       	ld	r24, Z
    33ec:	81 11       	cpse	r24, r1
    33ee:	cb cf       	rjmp	.-106    	; 0x3386 <ESP8266_Init+0x254>
    33f0:	0d c0       	rjmp	.+26     	; 0x340c <ESP8266_Init+0x2da>
    33f2:	c8 01       	movw	r24, r16
    33f4:	d9 db       	rcall	.-2126   	; 0x2ba8 <ESP8266_WaitReady>
    33f6:	f4 01       	movw	r30, r8
    33f8:	80 81       	ld	r24, Z
    33fa:	81 fd       	sbrc	r24, 1
    33fc:	03 c0       	rjmp	.+6      	; 0x3404 <ESP8266_Init+0x2d2>
    33fe:	f7 01       	movw	r30, r14
    3400:	70 82       	st	Z, r7
    3402:	c1 cf       	rjmp	.-126    	; 0x3386 <ESP8266_Init+0x254>
    3404:	f8 01       	movw	r30, r16
    3406:	ec 5a       	subi	r30, 0xAC	; 172
    3408:	fe 4f       	sbci	r31, 0xFE	; 254
    340a:	10 82       	st	Z, r1
    340c:	0f 2e       	mov	r0, r31
    340e:	f1 e3       	ldi	r31, 0x31	; 49
    3410:	df 2e       	mov	r13, r31
    3412:	f0 2d       	mov	r31, r0
    3414:	78 01       	movw	r14, r16
    3416:	fc ea       	ldi	r31, 0xAC	; 172
    3418:	ef 1a       	sub	r14, r31
    341a:	fe ef       	ldi	r31, 0xFE	; 254
    341c:	ff 0a       	sbc	r15, r31
    341e:	0f 2e       	mov	r0, r31
    3420:	f6 e0       	ldi	r31, 0x06	; 6
    3422:	cf 2e       	mov	r12, r31
    3424:	f0 2d       	mov	r31, r0
    3426:	58 01       	movw	r10, r16
    3428:	85 ee       	ldi	r24, 0xE5	; 229
    342a:	a8 1a       	sub	r10, r24
    342c:	8e ef       	ldi	r24, 0xFE	; 254
    342e:	b8 0a       	sbc	r11, r24
    3430:	0f 2e       	mov	r0, r31
    3432:	f7 e0       	ldi	r31, 0x07	; 7
    3434:	2f 2e       	mov	r2, r31
    3436:	31 2c       	mov	r3, r1
    3438:	41 2c       	mov	r4, r1
    343a:	51 2c       	mov	r5, r1
    343c:	f0 2d       	mov	r31, r0
    343e:	48 01       	movw	r8, r16
    3440:	e1 eb       	ldi	r30, 0xB1	; 177
    3442:	8e 1a       	sub	r8, r30
    3444:	ee ef       	ldi	r30, 0xFE	; 254
    3446:	9e 0a       	sbc	r9, r30
    3448:	77 24       	eor	r7, r7
    344a:	73 94       	inc	r7
    344c:	d9 86       	std	Y+9, r13	; 0x09
    344e:	f8 01       	movw	r30, r16
    3450:	84 81       	ldd	r24, Z+4	; 0x04
    3452:	95 81       	ldd	r25, Z+5	; 0x05
    3454:	a6 81       	ldd	r26, Z+6	; 0x06
    3456:	b7 81       	ldd	r27, Z+7	; 0x07
    3458:	89 2b       	or	r24, r25
    345a:	8a 2b       	or	r24, r26
    345c:	8b 2b       	or	r24, r27
    345e:	21 f4       	brne	.+8      	; 0x3468 <ESP8266_Init+0x336>
    3460:	f5 01       	movw	r30, r10
    3462:	80 81       	ld	r24, Z
    3464:	88 23       	and	r24, r24
    3466:	31 f0       	breq	.+12     	; 0x3474 <ESP8266_Init+0x342>
    3468:	c8 01       	movw	r24, r16
    346a:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <ESP8266_Update>
    346e:	f7 01       	movw	r30, r14
    3470:	c0 82       	st	Z, r12
    3472:	ec cf       	rjmp	.-40     	; 0x344c <ESP8266_Init+0x31a>
    3474:	f8 01       	movw	r30, r16
    3476:	24 82       	std	Z+4, r2	; 0x04
    3478:	35 82       	std	Z+5, r3	; 0x05
    347a:	46 82       	std	Z+6, r4	; 0x06
    347c:	57 82       	std	Z+7, r5	; 0x07
    347e:	6c e0       	ldi	r22, 0x0C	; 12
    3480:	70 e0       	ldi	r23, 0x00	; 0
    3482:	83 e0       	ldi	r24, 0x03	; 3
    3484:	96 e0       	ldi	r25, 0x06	; 6
    3486:	52 d2       	rcall	.+1188   	; 0x392c <ESP8266_LL_USARTSend>
    3488:	61 e0       	ldi	r22, 0x01	; 1
    348a:	70 e0       	ldi	r23, 0x00	; 0
    348c:	ce 01       	movw	r24, r28
    348e:	09 96       	adiw	r24, 0x09	; 9
    3490:	4d d2       	rcall	.+1178   	; 0x392c <ESP8266_LL_USARTSend>
    3492:	62 e0       	ldi	r22, 0x02	; 2
    3494:	70 e0       	ldi	r23, 0x00	; 0
    3496:	84 e6       	ldi	r24, 0x64	; 100
    3498:	99 e0       	ldi	r25, 0x09	; 9
    349a:	48 d2       	rcall	.+1168   	; 0x392c <ESP8266_LL_USARTSend>
    349c:	20 e0       	ldi	r18, 0x00	; 0
    349e:	30 e0       	ldi	r19, 0x00	; 0
    34a0:	40 e0       	ldi	r20, 0x00	; 0
    34a2:	50 e0       	ldi	r21, 0x00	; 0
    34a4:	67 e0       	ldi	r22, 0x07	; 7
    34a6:	c8 01       	movw	r24, r16
    34a8:	1c db       	rcall	.-2504   	; 0x2ae2 <SendCommand>
    34aa:	88 23       	and	r24, r24
    34ac:	29 f0       	breq	.+10     	; 0x34b8 <ESP8266_Init+0x386>
    34ae:	f7 01       	movw	r30, r14
    34b0:	80 81       	ld	r24, Z
    34b2:	81 11       	cpse	r24, r1
    34b4:	cb cf       	rjmp	.-106    	; 0x344c <ESP8266_Init+0x31a>
    34b6:	0d c0       	rjmp	.+26     	; 0x34d2 <ESP8266_Init+0x3a0>
    34b8:	c8 01       	movw	r24, r16
    34ba:	76 db       	rcall	.-2324   	; 0x2ba8 <ESP8266_WaitReady>
    34bc:	f4 01       	movw	r30, r8
    34be:	80 81       	ld	r24, Z
    34c0:	81 fd       	sbrc	r24, 1
    34c2:	03 c0       	rjmp	.+6      	; 0x34ca <ESP8266_Init+0x398>
    34c4:	f7 01       	movw	r30, r14
    34c6:	70 82       	st	Z, r7
    34c8:	c1 cf       	rjmp	.-126    	; 0x344c <ESP8266_Init+0x31a>
    34ca:	f8 01       	movw	r30, r16
    34cc:	ec 5a       	subi	r30, 0xAC	; 172
    34ce:	fe 4f       	sbci	r31, 0xFE	; 254
    34d0:	10 82       	st	Z, r1
    34d2:	63 e0       	ldi	r22, 0x03	; 3
    34d4:	c8 01       	movw	r24, r16
    34d6:	c8 dd       	rcall	.-1136   	; 0x3068 <ESP8266_SetMode>
    34d8:	81 11       	cpse	r24, r1
    34da:	fb cf       	rjmp	.-10     	; 0x34d2 <ESP8266_Init+0x3a0>
    34dc:	c8 01       	movw	r24, r16
    34de:	3d dd       	rcall	.-1414   	; 0x2f5a <ESP8266_GetSTAMAC>
    34e0:	81 11       	cpse	r24, r1
    34e2:	fc cf       	rjmp	.-8      	; 0x34dc <ESP8266_Init+0x3aa>
    34e4:	c8 01       	movw	r24, r16
    34e6:	67 dd       	rcall	.-1330   	; 0x2fb6 <ESP8266_GetAPMAC>
    34e8:	81 11       	cpse	r24, r1
    34ea:	fc cf       	rjmp	.-8      	; 0x34e4 <ESP8266_Init+0x3b2>
    34ec:	c8 01       	movw	r24, r16
    34ee:	06 dd       	rcall	.-1524   	; 0x2efc <ESP8266_GetAPIP>
    34f0:	81 11       	cpse	r24, r1
    34f2:	fc cf       	rjmp	.-8      	; 0x34ec <ESP8266_Init+0x3ba>
    34f4:	c8 01       	movw	r24, r16
    34f6:	58 db       	rcall	.-2384   	; 0x2ba8 <ESP8266_WaitReady>
    34f8:	29 96       	adiw	r28, 0x09	; 9
    34fa:	0f b6       	in	r0, 0x3f	; 63
    34fc:	f8 94       	cli
    34fe:	de bf       	out	0x3e, r29	; 62
    3500:	0f be       	out	0x3f, r0	; 63
    3502:	cd bf       	out	0x3d, r28	; 61
    3504:	df 91       	pop	r29
    3506:	cf 91       	pop	r28
    3508:	1f 91       	pop	r17
    350a:	0f 91       	pop	r16
    350c:	ff 90       	pop	r15
    350e:	ef 90       	pop	r14
    3510:	df 90       	pop	r13
    3512:	cf 90       	pop	r12
    3514:	bf 90       	pop	r11
    3516:	af 90       	pop	r10
    3518:	9f 90       	pop	r9
    351a:	8f 90       	pop	r8
    351c:	7f 90       	pop	r7
    351e:	6f 90       	pop	r6
    3520:	5f 90       	pop	r5
    3522:	4f 90       	pop	r4
    3524:	3f 90       	pop	r3
    3526:	2f 90       	pop	r2
    3528:	08 95       	ret

0000352a <StartClientConnection>:
    const char* location,
    uint16_t port,
    uint16_t udp_local_port,
    void* user_parameters,
    uint8_t blocking
) {
    352a:	2f 92       	push	r2
    352c:	3f 92       	push	r3
    352e:	4f 92       	push	r4
    3530:	5f 92       	push	r5
    3532:	6f 92       	push	r6
    3534:	7f 92       	push	r7
    3536:	8f 92       	push	r8
    3538:	9f 92       	push	r9
    353a:	af 92       	push	r10
    353c:	bf 92       	push	r11
    353e:	cf 92       	push	r12
    3540:	df 92       	push	r13
    3542:	ef 92       	push	r14
    3544:	ff 92       	push	r15
    3546:	0f 93       	push	r16
    3548:	1f 93       	push	r17
    354a:	cf 93       	push	r28
    354c:	df 93       	push	r29
    354e:	cd b7       	in	r28, 0x3d	; 61
    3550:	de b7       	in	r29, 0x3e	; 62
    3552:	2a 97       	sbiw	r28, 0x0a	; 10
    3554:	0f b6       	in	r0, 0x3f	; 63
    3556:	f8 94       	cli
    3558:	de bf       	out	0x3e, r29	; 62
    355a:	0f be       	out	0x3f, r0	; 63
    355c:	cd bf       	out	0x3d, r28	; 61
    355e:	3c 01       	movw	r6, r24
    3560:	79 87       	std	Y+9, r23	; 0x09
    3562:	68 87       	std	Y+8, r22	; 0x08
    3564:	34 2e       	mov	r3, r20
    3566:	29 01       	movw	r4, r18
    int8_t conn = -1;
    3568:	8f ef       	ldi	r24, 0xFF	; 255
    356a:	89 83       	std	Y+1, r24	; 0x01
    uint8_t i = 0;
    
    ESP8266_CHECK_IDLE(ESP8266);                    		/* Check IDLE state */
    356c:	f3 01       	movw	r30, r6
    356e:	84 81       	ldd	r24, Z+4	; 0x04
    3570:	95 81       	ldd	r25, Z+5	; 0x05
    3572:	a6 81       	ldd	r26, Z+6	; 0x06
    3574:	b7 81       	ldd	r27, Z+7	; 0x07
    3576:	89 2b       	or	r24, r25
    3578:	8a 2b       	or	r24, r26
    357a:	8b 2b       	or	r24, r27
    357c:	29 f4       	brne	.+10     	; 0x3588 <StartClientConnection+0x5e>
    357e:	e5 5e       	subi	r30, 0xE5	; 229
    3580:	fe 4f       	sbci	r31, 0xFE	; 254
    3582:	80 81       	ld	r24, Z
    3584:	88 23       	and	r24, r24
    3586:	69 f0       	breq	.+26     	; 0x35a2 <StartClientConnection+0x78>
    3588:	c3 01       	movw	r24, r6
    358a:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <ESP8266_Update>
    358e:	f3 01       	movw	r30, r6
    3590:	ec 5a       	subi	r30, 0xAC	; 172
    3592:	fe 4f       	sbci	r31, 0xFE	; 254
    3594:	86 e0       	ldi	r24, 0x06	; 6
    3596:	80 83       	st	Z, r24
    3598:	0f 2e       	mov	r0, r31
    359a:	f6 e0       	ldi	r31, 0x06	; 6
    359c:	ff 2e       	mov	r15, r31
    359e:	f0 2d       	mov	r31, r0
    35a0:	34 c1       	rjmp	.+616    	; 0x380a <StartClientConnection+0x2e0>
    ESP8266_CHECK_WIFICONNECTED(ESP8266);            		/* Check if connected to network */
    35a2:	f3 01       	movw	r30, r6
    35a4:	e1 5b       	subi	r30, 0xB1	; 177
    35a6:	fe 4f       	sbci	r31, 0xFE	; 254
    35a8:	80 81       	ld	r24, Z
    35aa:	82 fd       	sbrc	r24, 2
    35ac:	08 c0       	rjmp	.+16     	; 0x35be <StartClientConnection+0x94>
    35ae:	35 96       	adiw	r30, 0x05	; 5
    35b0:	85 e0       	ldi	r24, 0x05	; 5
    35b2:	80 83       	st	Z, r24
    35b4:	0f 2e       	mov	r0, r31
    35b6:	f5 e0       	ldi	r31, 0x05	; 5
    35b8:	ff 2e       	mov	r15, r31
    35ba:	f0 2d       	mov	r31, r0
    35bc:	26 c1       	rjmp	.+588    	; 0x380a <StartClientConnection+0x2e0>
    
    if (type == ESP8266_ConnectionType_SSL) {        		/* Only 1 SSL connection can be active at a time */
    35be:	f2 e0       	ldi	r31, 0x02	; 2
    35c0:	4f 13       	cpse	r20, r31
    35c2:	1c c1       	rjmp	.+568    	; 0x37fc <StartClientConnection+0x2d2>
    35c4:	d3 01       	movw	r26, r6
    35c6:	91 96       	adiw	r26, 0x21	; 33
    35c8:	80 e0       	ldi	r24, 0x00	; 0
    35ca:	90 e0       	ldi	r25, 0x00	; 0
        for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {    	/* Check if any SSL connection exists and is active */
            if (ESP8266->Connection[i].Flags.F.Active && ESP8266->Connection[i].Type == ESP8266_ConnectionType_SSL) {
    35cc:	33 e2       	ldi	r19, 0x23	; 35
    35ce:	38 9f       	mul	r19, r24
    35d0:	f0 01       	movw	r30, r0
    35d2:	39 9f       	mul	r19, r25
    35d4:	f0 0d       	add	r31, r0
    35d6:	11 24       	eor	r1, r1
    35d8:	e6 0d       	add	r30, r6
    35da:	f7 1d       	adc	r31, r7
    35dc:	26 a9       	ldd	r18, Z+54	; 0x36
    35de:	20 ff       	sbrs	r18, 0
    35e0:	0b c0       	rjmp	.+22     	; 0x35f8 <StartClientConnection+0xce>
    35e2:	2c 91       	ld	r18, X
    35e4:	22 30       	cpi	r18, 0x02	; 2
    35e6:	41 f4       	brne	.+16     	; 0x35f8 <StartClientConnection+0xce>
                ESP8266_RETURNWITHSTATUS(ESP8266, ESP_ERROR);	/* Return error, SSL connection already exists */
    35e8:	f3 01       	movw	r30, r6
    35ea:	ec 5a       	subi	r30, 0xAC	; 172
    35ec:	fe 4f       	sbci	r31, 0xFE	; 254
    35ee:	81 e0       	ldi	r24, 0x01	; 1
    35f0:	80 83       	st	Z, r24
    35f2:	ff 24       	eor	r15, r15
    35f4:	f3 94       	inc	r15
    35f6:	09 c1       	rjmp	.+530    	; 0x380a <StartClientConnection+0x2e0>
    35f8:	01 96       	adiw	r24, 0x01	; 1
    35fa:	93 96       	adiw	r26, 0x23	; 35
    
    ESP8266_CHECK_IDLE(ESP8266);                    		/* Check IDLE state */
    ESP8266_CHECK_WIFICONNECTED(ESP8266);            		/* Check if connected to network */
    
    if (type == ESP8266_ConnectionType_SSL) {        		/* Only 1 SSL connection can be active at a time */
        for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {    	/* Check if any SSL connection exists and is active */
    35fc:	85 30       	cpi	r24, 0x05	; 5
    35fe:	91 05       	cpc	r25, r1
    3600:	31 f7       	brne	.-52     	; 0x35ce <StartClientConnection+0xa4>
    3602:	fc c0       	rjmp	.+504    	; 0x37fc <StartClientConnection+0x2d2>
            }
        }
    }
    
    for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {    		/* Find available connection */
        if (!ESP8266->Connection[i].Flags.F.Active) {
    3604:	81 e0       	ldi	r24, 0x01	; 1
    3606:	90 e0       	ldi	r25, 0x00	; 0
    3608:	33 e2       	ldi	r19, 0x23	; 35
    360a:	28 2e       	mov	r2, r24
    360c:	38 9f       	mul	r19, r24
    360e:	f0 01       	movw	r30, r0
    3610:	39 9f       	mul	r19, r25
    3612:	f0 0d       	add	r31, r0
    3614:	11 24       	eor	r1, r1
    3616:	e6 0d       	add	r30, r6
    3618:	f7 1d       	adc	r31, r7
    361a:	26 a9       	ldd	r18, Z+54	; 0x36
    361c:	20 fd       	sbrc	r18, 0
    361e:	05 c0       	rjmp	.+10     	; 0x362a <StartClientConnection+0x100>
            conn = i;                                		/* Save connection and start execution*/
    3620:	8a 87       	std	Y+10, r24	; 0x0a
            break;
        }
    }
    if (conn != -1) {                                		/* Try to assign */
    3622:	8f ef       	ldi	r24, 0xFF	; 255
    3624:	28 12       	cpse	r2, r24
    3626:	06 c0       	rjmp	.+12     	; 0x3634 <StartClientConnection+0x10a>
    3628:	e1 c0       	rjmp	.+450    	; 0x37ec <StartClientConnection+0x2c2>
    362a:	01 96       	adiw	r24, 0x01	; 1
                ESP8266_RETURNWITHSTATUS(ESP8266, ESP_ERROR);	/* Return error, SSL connection already exists */
            }
        }
    }
    
    for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {    		/* Find available connection */
    362c:	85 30       	cpi	r24, 0x05	; 5
    362e:	91 05       	cpc	r25, r1
    3630:	61 f7       	brne	.-40     	; 0x360a <StartClientConnection+0xe0>
    3632:	dc c0       	rjmp	.+440    	; 0x37ec <StartClientConnection+0x2c2>
        }
    }
    if (conn != -1) {                                		/* Try to assign */
        char tmp[6];
        
        ESP8266->ActiveCommand = ESP8266_COMMAND_CIPSTART;  /* Lock active command */
    3634:	8a e0       	ldi	r24, 0x0A	; 10
    3636:	90 e0       	ldi	r25, 0x00	; 0
    3638:	a0 e0       	ldi	r26, 0x00	; 0
    363a:	b0 e0       	ldi	r27, 0x00	; 0
    363c:	f3 01       	movw	r30, r6
    363e:	84 83       	std	Z+4, r24	; 0x04
    3640:	95 83       	std	Z+5, r25	; 0x05
    3642:	a6 83       	std	Z+6, r26	; 0x06
    3644:	b7 83       	std	Z+7, r27	; 0x07
        conn += '0';                                		/* Go to ASCII number */
    3646:	8a 85       	ldd	r24, Y+10	; 0x0a
    3648:	80 5d       	subi	r24, 0xD0	; 208
    364a:	89 83       	std	Y+1, r24	; 0x01
        ESP8266_USARTSENDSTRING("AT+CIPSTART=");    		/* Send separate */
    364c:	6c e0       	ldi	r22, 0x0C	; 12
    364e:	70 e0       	ldi	r23, 0x00	; 0
    3650:	80 e4       	ldi	r24, 0x40	; 64
    3652:	96 e0       	ldi	r25, 0x06	; 6
    3654:	6b d1       	rcall	.+726    	; 0x392c <ESP8266_LL_USARTSend>
        ESP8266_USARTSENDCHAR(&conn);
    3656:	61 e0       	ldi	r22, 0x01	; 1
    3658:	70 e0       	ldi	r23, 0x00	; 0
    365a:	ce 01       	movw	r24, r28
    365c:	01 96       	adiw	r24, 0x01	; 1
    365e:	66 d1       	rcall	.+716    	; 0x392c <ESP8266_LL_USARTSend>
        ESP8266_USARTSENDSTRING(",\"");
    3660:	62 e0       	ldi	r22, 0x02	; 2
    3662:	70 e0       	ldi	r23, 0x00	; 0
    3664:	88 e3       	ldi	r24, 0x38	; 56
    3666:	94 e0       	ldi	r25, 0x04	; 4
    3668:	61 d1       	rcall	.+706    	; 0x392c <ESP8266_LL_USARTSend>
        ESP8266_USARTSENDSTRING(conn_type);
    366a:	f2 01       	movw	r30, r4
    366c:	01 90       	ld	r0, Z+
    366e:	00 20       	and	r0, r0
    3670:	e9 f7       	brne	.-6      	; 0x366c <StartClientConnection+0x142>
    3672:	31 97       	sbiw	r30, 0x01	; 1
    3674:	bf 01       	movw	r22, r30
    3676:	64 19       	sub	r22, r4
    3678:	75 09       	sbc	r23, r5
    367a:	c2 01       	movw	r24, r4
    367c:	57 d1       	rcall	.+686    	; 0x392c <ESP8266_LL_USARTSend>
        ESP8266_USARTSENDSTRING("\",\"");
    367e:	63 e0       	ldi	r22, 0x03	; 3
    3680:	70 e0       	ldi	r23, 0x00	; 0
    3682:	87 e3       	ldi	r24, 0x37	; 55
    3684:	94 e0       	ldi	r25, 0x04	; 4
    3686:	52 d1       	rcall	.+676    	; 0x392c <ESP8266_LL_USARTSend>
        ESP8266_USARTSENDSTRING(location);
    3688:	f7 01       	movw	r30, r14
    368a:	01 90       	ld	r0, Z+
    368c:	00 20       	and	r0, r0
    368e:	e9 f7       	brne	.-6      	; 0x368a <StartClientConnection+0x160>
    3690:	31 97       	sbiw	r30, 0x01	; 1
    3692:	bf 01       	movw	r22, r30
    3694:	6e 19       	sub	r22, r14
    3696:	7f 09       	sbc	r23, r15
    3698:	c7 01       	movw	r24, r14
    369a:	48 d1       	rcall	.+656    	; 0x392c <ESP8266_LL_USARTSend>
        ESP8266_USARTSENDSTRING("\",");
    369c:	62 e0       	ldi	r22, 0x02	; 2
    369e:	70 e0       	ldi	r23, 0x00	; 0
    36a0:	8f e1       	ldi	r24, 0x1F	; 31
    36a2:	96 e0       	ldi	r25, 0x06	; 6
    36a4:	43 d1       	rcall	.+646    	; 0x392c <ESP8266_LL_USARTSend>
        Int2String(tmp, port);                        		/* Format port */
    36a6:	a6 01       	movw	r20, r12
    36a8:	60 e0       	ldi	r22, 0x00	; 0
    36aa:	70 e0       	ldi	r23, 0x00	; 0
    36ac:	7e 01       	movw	r14, r28
    36ae:	f2 e0       	ldi	r31, 0x02	; 2
    36b0:	ef 0e       	add	r14, r31
    36b2:	f1 1c       	adc	r15, r1
    36b4:	c7 01       	movw	r24, r14
    36b6:	0e 94 47 08 	call	0x108e	; 0x108e <Int2String>
        ESP8266_USARTSENDSTRING(tmp);
    36ba:	f7 01       	movw	r30, r14
    36bc:	01 90       	ld	r0, Z+
    36be:	00 20       	and	r0, r0
    36c0:	e9 f7       	brne	.-6      	; 0x36bc <StartClientConnection+0x192>
    36c2:	31 97       	sbiw	r30, 0x01	; 1
    36c4:	bf 01       	movw	r22, r30
    36c6:	6e 19       	sub	r22, r14
    36c8:	7f 09       	sbc	r23, r15
    36ca:	c7 01       	movw	r24, r14
    36cc:	2f d1       	rcall	.+606    	; 0x392c <ESP8266_LL_USARTSend>
        if (type == ESP8266_ConnectionType_UDP && udp_local_port > 0) {
    36ce:	81 e0       	ldi	r24, 0x01	; 1
    36d0:	38 12       	cpse	r3, r24
    36d2:	18 c0       	rjmp	.+48     	; 0x3704 <StartClientConnection+0x1da>
    36d4:	a1 14       	cp	r10, r1
    36d6:	b1 04       	cpc	r11, r1
    36d8:	a9 f0       	breq	.+42     	; 0x3704 <StartClientConnection+0x1da>
            Int2String(tmp, udp_local_port);       			/* Format local port for UDP */
    36da:	a5 01       	movw	r20, r10
    36dc:	60 e0       	ldi	r22, 0x00	; 0
    36de:	70 e0       	ldi	r23, 0x00	; 0
    36e0:	c7 01       	movw	r24, r14
    36e2:	0e 94 47 08 	call	0x108e	; 0x108e <Int2String>
            ESP8266_USARTSENDSTRING(",");
    36e6:	61 e0       	ldi	r22, 0x01	; 1
    36e8:	70 e0       	ldi	r23, 0x00	; 0
    36ea:	80 e2       	ldi	r24, 0x20	; 32
    36ec:	96 e0       	ldi	r25, 0x06	; 6
    36ee:	1e d1       	rcall	.+572    	; 0x392c <ESP8266_LL_USARTSend>
            ESP8266_USARTSENDSTRING(tmp);
    36f0:	f7 01       	movw	r30, r14
    36f2:	01 90       	ld	r0, Z+
    36f4:	00 20       	and	r0, r0
    36f6:	e9 f7       	brne	.-6      	; 0x36f2 <StartClientConnection+0x1c8>
    36f8:	31 97       	sbiw	r30, 0x01	; 1
    36fa:	bf 01       	movw	r22, r30
    36fc:	6e 19       	sub	r22, r14
    36fe:	7f 09       	sbc	r23, r15
    3700:	c7 01       	movw	r24, r14
    3702:	14 d1       	rcall	.+552    	; 0x392c <ESP8266_LL_USARTSend>
        }
        ESP8266_USARTSENDSTRING(ESP8266_CRLF);
    3704:	62 e0       	ldi	r22, 0x02	; 2
    3706:	70 e0       	ldi	r23, 0x00	; 0
    3708:	84 e6       	ldi	r24, 0x64	; 100
    370a:	99 e0       	ldi	r25, 0x09	; 9
    370c:	0f d1       	rcall	.+542    	; 0x392c <ESP8266_LL_USARTSend>
        
        if (SendCommand(ESP8266, ESP8266_COMMAND_CIPSTART, NULL, NULL) != ESP_OK) {	/* Send command */
    370e:	20 e0       	ldi	r18, 0x00	; 0
    3710:	30 e0       	ldi	r19, 0x00	; 0
    3712:	40 e0       	ldi	r20, 0x00	; 0
    3714:	50 e0       	ldi	r21, 0x00	; 0
    3716:	6a e0       	ldi	r22, 0x0A	; 10
    3718:	c3 01       	movw	r24, r6
    371a:	e3 d9       	rcall	.-3130   	; 0x2ae2 <SendCommand>
    371c:	f8 2e       	mov	r15, r24
    371e:	88 23       	and	r24, r24
    3720:	29 f0       	breq	.+10     	; 0x372c <StartClientConnection+0x202>
            return ESP8266->Result;
    3722:	f3 01       	movw	r30, r6
    3724:	ec 5a       	subi	r30, 0xAC	; 172
    3726:	fe 4f       	sbci	r31, 0xFE	; 254
    3728:	f0 80       	ld	r15, Z
    372a:	6f c0       	rjmp	.+222    	; 0x380a <StartClientConnection+0x2e0>
        }
        
        conn -= '0';                                		/* Go back from ASCII number to real number */
    372c:	89 81       	ldd	r24, Y+1	; 0x01
    372e:	80 53       	subi	r24, 0x30	; 48
    3730:	89 83       	std	Y+1, r24	; 0x01
        ESP8266->Connection[i].Flags.F.Active = 1;    		/* We are active */
    3732:	22 2d       	mov	r18, r2
    3734:	30 e0       	ldi	r19, 0x00	; 0
    3736:	f3 01       	movw	r30, r6
    3738:	93 e2       	ldi	r25, 0x23	; 35
    373a:	29 9e       	mul	r2, r25
    373c:	e0 0d       	add	r30, r0
    373e:	f1 1d       	adc	r31, r1
    3740:	11 24       	eor	r1, r1
    3742:	96 a9       	ldd	r25, Z+54	; 0x36
        ESP8266->Connection[i].Flags.F.Client = 1;   		/* We are in client mode */
    3744:	91 60       	ori	r25, 0x01	; 1
    3746:	92 60       	ori	r25, 0x02	; 2
    3748:	96 ab       	std	Z+54, r25	; 0x36
        ESP8266->Connection[i].Flags.F.Blocking = blocking ? 1 : 0; /* Set blocking mode */
    374a:	41 e0       	ldi	r20, 0x01	; 1
    374c:	98 a1       	ldd	r25, Y+32	; 0x20
    374e:	91 11       	cpse	r25, r1
    3750:	01 c0       	rjmp	.+2      	; 0x3754 <StartClientConnection+0x22a>
    3752:	40 e0       	ldi	r20, 0x00	; 0
    3754:	96 a9       	ldd	r25, Z+54	; 0x36
    3756:	40 fb       	bst	r20, 0
    3758:	96 f9       	bld	r25, 6
    375a:	96 ab       	std	Z+54, r25	; 0x36
        ESP8266->Connection[i].Type = type;         		/* Set connection type */
    375c:	93 e2       	ldi	r25, 0x23	; 35
    375e:	92 9f       	mul	r25, r18
    3760:	f0 01       	movw	r30, r0
    3762:	93 9f       	mul	r25, r19
    3764:	f0 0d       	add	r31, r0
    3766:	11 24       	eor	r1, r1
    3768:	e6 0d       	add	r30, r6
    376a:	f7 1d       	adc	r31, r7
    376c:	31 a2       	std	Z+33, r3	; 0x21
        ESP8266->Connection[i].TotalBytesReceived = 0;
    376e:	16 a2       	std	Z+38, r1	; 0x26
    3770:	17 a2       	std	Z+39, r1	; 0x27
    3772:	10 a6       	std	Z+40, r1	; 0x28
    3774:	11 a6       	std	Z+41, r1	; 0x29
        ESP8266->Connection[i].Number = conn;
    3776:	82 8f       	std	Z+26, r24	; 0x1a
#if ESP8266_USE_SINGLE_CONNECTION_BUFFER == 1
        ESP8266->Connection[i].Data = ConnectionData;
    3778:	88 eb       	ldi	r24, 0xB8	; 184
    377a:	90 e1       	ldi	r25, 0x10	; 16
    377c:	93 a7       	std	Z+43, r25	; 0x2b
    377e:	82 a7       	std	Z+42, r24	; 0x2a
#endif
        ESP8266->StartConnectionSent = i;            		/* Save connection number we have started */
    3780:	d3 01       	movw	r26, r6
    3782:	a4 5c       	subi	r26, 0xC4	; 196
    3784:	be 4f       	sbci	r27, 0xFE	; 254
    3786:	8a 85       	ldd	r24, Y+10	; 0x0a
    3788:	8c 93       	st	X, r24
    
        ESP8266->Connection[i].Name = (char *)name;    		/* Save name */
    378a:	13 ab       	std	Z+51, r17	; 0x33
    378c:	02 ab       	std	Z+50, r16	; 0x32
        ESP8266->Connection[i].UserParameters = user_parameters;	/* Save user parameters pointer */
    378e:	95 aa       	std	Z+53, r9	; 0x35
    3790:	84 aa       	std	Z+52, r8	; 0x34
        
        if (Conn != NULL) {
    3792:	e8 85       	ldd	r30, Y+8	; 0x08
    3794:	f9 85       	ldd	r31, Y+9	; 0x09
    3796:	30 97       	sbiw	r30, 0x00	; 0
    3798:	59 f0       	breq	.+22     	; 0x37b0 <StartClientConnection+0x286>
            *Conn = &ESP8266->Connection[i];                /* Save connection to pointer */
    379a:	43 e2       	ldi	r20, 0x23	; 35
    379c:	42 9f       	mul	r20, r18
    379e:	c0 01       	movw	r24, r0
    37a0:	43 9f       	mul	r20, r19
    37a2:	90 0d       	add	r25, r0
    37a4:	11 24       	eor	r1, r1
    37a6:	4a 96       	adiw	r24, 0x1a	; 26
    37a8:	86 0d       	add	r24, r6
    37aa:	97 1d       	adc	r25, r7
    37ac:	91 83       	std	Z+1, r25	; 0x01
    37ae:	80 83       	st	Z, r24
        }
        if (ESP8266->Connection[i].Flags.F.Blocking) {
    37b0:	83 e2       	ldi	r24, 0x23	; 35
    37b2:	82 9f       	mul	r24, r18
    37b4:	f0 01       	movw	r30, r0
    37b6:	83 9f       	mul	r24, r19
    37b8:	f0 0d       	add	r31, r0
    37ba:	11 24       	eor	r1, r1
    37bc:	e6 0d       	add	r30, r6
    37be:	f7 1d       	adc	r31, r7
    37c0:	86 a9       	ldd	r24, Z+54	; 0x36
    37c2:	86 ff       	sbrs	r24, 6
    37c4:	0e c0       	rjmp	.+28     	; 0x37e2 <StartClientConnection+0x2b8>
            ESP8266_WaitReady(ESP8266);                     /* Wait till ready when in blocking mode */
    37c6:	c3 01       	movw	r24, r6
    37c8:	ef d9       	rcall	.-3106   	; 0x2ba8 <ESP8266_WaitReady>
            if (!ESP8266->Flags.F.LastOperationStatus) {
    37ca:	f3 01       	movw	r30, r6
    37cc:	e1 5b       	subi	r30, 0xB1	; 177
    37ce:	fe 4f       	sbci	r31, 0xFE	; 254
    37d0:	80 81       	ld	r24, Z
    37d2:	81 fd       	sbrc	r24, 1
    37d4:	06 c0       	rjmp	.+12     	; 0x37e2 <StartClientConnection+0x2b8>
                ESP8266_RETURNWITHSTATUS(ESP8266, ESP_ERROR);   /* Return error, ESP did not connect to web */
    37d6:	35 96       	adiw	r30, 0x05	; 5
    37d8:	81 e0       	ldi	r24, 0x01	; 1
    37da:	80 83       	st	Z, r24
    37dc:	ff 24       	eor	r15, r15
    37de:	f3 94       	inc	r15
    37e0:	14 c0       	rjmp	.+40     	; 0x380a <StartClientConnection+0x2e0>
            }
        }
        ESP8266_RETURNWITHSTATUS(ESP8266, ESP_OK);    		/* Return OK */
    37e2:	f3 01       	movw	r30, r6
    37e4:	ec 5a       	subi	r30, 0xAC	; 172
    37e6:	fe 4f       	sbci	r31, 0xFE	; 254
    37e8:	10 82       	st	Z, r1
    37ea:	0f c0       	rjmp	.+30     	; 0x380a <StartClientConnection+0x2e0>
    }
    ESP8266_RETURNWITHSTATUS(ESP8266, ESP_ERROR);    		/* Return error */
    37ec:	f3 01       	movw	r30, r6
    37ee:	ec 5a       	subi	r30, 0xAC	; 172
    37f0:	fe 4f       	sbci	r31, 0xFE	; 254
    37f2:	81 e0       	ldi	r24, 0x01	; 1
    37f4:	80 83       	st	Z, r24
    37f6:	ff 24       	eor	r15, r15
    37f8:	f3 94       	inc	r15
    37fa:	07 c0       	rjmp	.+14     	; 0x380a <StartClientConnection+0x2e0>
            }
        }
    }
    
    for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {    		/* Find available connection */
        if (!ESP8266->Connection[i].Flags.F.Active) {
    37fc:	f3 01       	movw	r30, r6
    37fe:	86 a9       	ldd	r24, Z+54	; 0x36
    3800:	80 fd       	sbrc	r24, 0
    3802:	00 cf       	rjmp	.-512    	; 0x3604 <StartClientConnection+0xda>
    3804:	21 2c       	mov	r2, r1
            conn = i;                                		/* Save connection and start execution*/
    3806:	1a 86       	std	Y+10, r1	; 0x0a
    3808:	15 cf       	rjmp	.-470    	; 0x3634 <StartClientConnection+0x10a>
            }
        }
        ESP8266_RETURNWITHSTATUS(ESP8266, ESP_OK);    		/* Return OK */
    }
    ESP8266_RETURNWITHSTATUS(ESP8266, ESP_ERROR);    		/* Return error */
}
    380a:	8f 2d       	mov	r24, r15
    380c:	2a 96       	adiw	r28, 0x0a	; 10
    380e:	0f b6       	in	r0, 0x3f	; 63
    3810:	f8 94       	cli
    3812:	de bf       	out	0x3e, r29	; 62
    3814:	0f be       	out	0x3f, r0	; 63
    3816:	cd bf       	out	0x3d, r28	; 61
    3818:	df 91       	pop	r29
    381a:	cf 91       	pop	r28
    381c:	1f 91       	pop	r17
    381e:	0f 91       	pop	r16
    3820:	ff 90       	pop	r15
    3822:	ef 90       	pop	r14
    3824:	df 90       	pop	r13
    3826:	cf 90       	pop	r12
    3828:	bf 90       	pop	r11
    382a:	af 90       	pop	r10
    382c:	9f 90       	pop	r9
    382e:	8f 90       	pop	r8
    3830:	7f 90       	pop	r7
    3832:	6f 90       	pop	r6
    3834:	5f 90       	pop	r5
    3836:	4f 90       	pop	r4
    3838:	3f 90       	pop	r3
    383a:	2f 90       	pop	r2
    383c:	08 95       	ret

0000383e <ESP8266_StartClientConnectionTCP>:
}

/******************************************/
/*               TCP CLIENT               */
/******************************************/
ESP8266_Result_t ESP8266_StartClientConnectionTCP(ESP8266_t* ESP8266, const char* name, char* location, uint16_t port, void* user_parameters) {
    383e:	8f 92       	push	r8
    3840:	9f 92       	push	r9
    3842:	af 92       	push	r10
    3844:	bf 92       	push	r11
    3846:	cf 92       	push	r12
    3848:	df 92       	push	r13
    384a:	ef 92       	push	r14
    384c:	ff 92       	push	r15
    384e:	0f 93       	push	r16
    3850:	1f 93       	push	r17
    return StartClientConnection(ESP8266, NULL, ESP8266_ConnectionType_TCP, "TCP", name, location, port, 0, user_parameters, 0);
    3852:	1f 92       	push	r1
    3854:	48 01       	movw	r8, r16
    3856:	a1 2c       	mov	r10, r1
    3858:	b1 2c       	mov	r11, r1
    385a:	69 01       	movw	r12, r18
    385c:	7a 01       	movw	r14, r20
    385e:	8b 01       	movw	r16, r22
    3860:	2d e4       	ldi	r18, 0x4D	; 77
    3862:	36 e0       	ldi	r19, 0x06	; 6
    3864:	40 e0       	ldi	r20, 0x00	; 0
    3866:	60 e0       	ldi	r22, 0x00	; 0
    3868:	70 e0       	ldi	r23, 0x00	; 0
    386a:	5f de       	rcall	.-834    	; 0x352a <StartClientConnection>
    386c:	0f 90       	pop	r0
}
    386e:	1f 91       	pop	r17
    3870:	0f 91       	pop	r16
    3872:	ff 90       	pop	r15
    3874:	ef 90       	pop	r14
    3876:	df 90       	pop	r13
    3878:	cf 90       	pop	r12
    387a:	bf 90       	pop	r11
    387c:	af 90       	pop	r10
    387e:	9f 90       	pop	r9
    3880:	8f 90       	pop	r8
    3882:	08 95       	ret

00003884 <ESP8266_LL_USARTInit>:
 * | along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * |----------------------------------------------------------------------
 */
#include "esp8266_ll.h"

uint8_t ESP8266_LL_USARTInit(uint32_t baudrate) {
    3884:	cf 92       	push	r12
    3886:	df 92       	push	r13
    3888:	ef 92       	push	r14
    388a:	ff 92       	push	r15
    388c:	6b 01       	movw	r12, r22
    388e:	7c 01       	movw	r14, r24
	
	/* Calculate prescaler for baudrate */
	prescaler =  (F_CPU / 4 / baudrate - 1) / 2; 
	
	/* Check valid input */
	if (((F_CPU == 16000000UL) && (baudrate == 57600)) || (prescaler > 4095)) {
    3890:	61 15       	cp	r22, r1
    3892:	71 4e       	sbci	r23, 0xE1	; 225
    3894:	81 05       	cpc	r24, r1
    3896:	91 05       	cpc	r25, r1
    3898:	a1 f0       	breq	.+40     	; 0x38c2 <ESP8266_LL_USARTInit+0x3e>

uint8_t ESP8266_LL_USARTInit(uint32_t baudrate) {
	uint16_t prescaler;
	
	/* Calculate prescaler for baudrate */
	prescaler =  (F_CPU / 4 / baudrate - 1) / 2; 
    389a:	60 e0       	ldi	r22, 0x00	; 0
    389c:	79 e0       	ldi	r23, 0x09	; 9
    389e:	8d e3       	ldi	r24, 0x3D	; 61
    38a0:	90 e0       	ldi	r25, 0x00	; 0
    38a2:	a7 01       	movw	r20, r14
    38a4:	96 01       	movw	r18, r12
    38a6:	be d2       	rcall	.+1404   	; 0x3e24 <__udivmodsi4>
    38a8:	da 01       	movw	r26, r20
    38aa:	c9 01       	movw	r24, r18
    38ac:	01 97       	sbiw	r24, 0x01	; 1
    38ae:	a1 09       	sbc	r26, r1
    38b0:	b1 09       	sbc	r27, r1
    38b2:	b6 95       	lsr	r27
    38b4:	a7 95       	ror	r26
    38b6:	97 95       	ror	r25
    38b8:	87 95       	ror	r24
	
	/* Check valid input */
	if (((F_CPU == 16000000UL) && (baudrate == 57600)) || (prescaler > 4095)) {
    38ba:	81 15       	cp	r24, r1
    38bc:	20 e1       	ldi	r18, 0x10	; 16
    38be:	92 07       	cpc	r25, r18
    38c0:	90 f0       	brcs	.+36     	; 0x38e6 <ESP8266_LL_USARTInit+0x62>
		UCSR0A = 0;
    38c2:	10 92 c0 00 	sts	0x00C0, r1
		
		/* Calculate new value */
		prescaler = (F_CPU / 8 / baudrate - 1) / 2;
    38c6:	60 e8       	ldi	r22, 0x80	; 128
    38c8:	74 e8       	ldi	r23, 0x84	; 132
    38ca:	8e e1       	ldi	r24, 0x1E	; 30
    38cc:	90 e0       	ldi	r25, 0x00	; 0
    38ce:	a7 01       	movw	r20, r14
    38d0:	96 01       	movw	r18, r12
    38d2:	a8 d2       	rcall	.+1360   	; 0x3e24 <__udivmodsi4>
    38d4:	da 01       	movw	r26, r20
    38d6:	c9 01       	movw	r24, r18
    38d8:	01 97       	sbiw	r24, 0x01	; 1
    38da:	a1 09       	sbc	r26, r1
    38dc:	b1 09       	sbc	r27, r1
    38de:	b6 95       	lsr	r27
    38e0:	a7 95       	ror	r26
    38e2:	97 95       	ror	r25
    38e4:	87 95       	ror	r24
	}
	
	/* Set UART prescaler for baudrate */
	UBRR1H = (prescaler >> 8) & 0xFF;
    38e6:	90 93 cd 00 	sts	0x00CD, r25
	UBRR1L = prescaler & 0xFF;
    38ea:	80 93 cc 00 	sts	0x00CC, r24
	
	/* Set double sampling */
	UCSR1A |= 1 << U2X1;
    38ee:	e8 ec       	ldi	r30, 0xC8	; 200
    38f0:	f0 e0       	ldi	r31, 0x00	; 0
    38f2:	80 81       	ld	r24, Z
    38f4:	82 60       	ori	r24, 0x02	; 2
    38f6:	80 83       	st	Z, r24
	
	/* Data size 8 bits */
	UCSR1C |= (1 << UCSZ10) | (1 << UCSZ11);
    38f8:	ea ec       	ldi	r30, 0xCA	; 202
    38fa:	f0 e0       	ldi	r31, 0x00	; 0
    38fc:	80 81       	ld	r24, Z
    38fe:	86 60       	ori	r24, 0x06	; 6
    3900:	80 83       	st	Z, r24
	
	/* Enable receiver and transmitter */
	UCSR1B |= (1 << RXEN1) | (1 << TXEN1);
    3902:	e9 ec       	ldi	r30, 0xC9	; 201
    3904:	f0 e0       	ldi	r31, 0x00	; 0
    3906:	80 81       	ld	r24, Z
    3908:	88 61       	ori	r24, 0x18	; 24
    390a:	80 83       	st	Z, r24
	
	/* Enable RX Not empty interrupt */
	UCSR1B |= (1 << RXCIE1);
    390c:	80 81       	ld	r24, Z
    390e:	80 68       	ori	r24, 0x80	; 128
    3910:	80 83       	st	Z, r24
	
	/* Enable interrupts if not already */
	sei();
    3912:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    3914:	8f e3       	ldi	r24, 0x3F	; 63
    3916:	9c e9       	ldi	r25, 0x9C	; 156
    3918:	01 97       	sbiw	r24, 0x01	; 1
    391a:	f1 f7       	brne	.-4      	; 0x3918 <ESP8266_LL_USARTInit+0x94>
    391c:	00 c0       	rjmp	.+0      	; 0x391e <ESP8266_LL_USARTInit+0x9a>
    391e:	00 00       	nop
	/* Make a little delay */
	_delay_ms(10);
	
	/* Return 0 = Successful */
	return 0;
}
    3920:	80 e0       	ldi	r24, 0x00	; 0
    3922:	ff 90       	pop	r15
    3924:	ef 90       	pop	r14
    3926:	df 90       	pop	r13
    3928:	cf 90       	pop	r12
    392a:	08 95       	ret

0000392c <ESP8266_LL_USARTSend>:

uint8_t ESP8266_LL_USARTSend(uint8_t* data, uint16_t count) {
    392c:	cf 93       	push	r28
    392e:	df 93       	push	r29
    3930:	9c 01       	movw	r18, r24
	/* Wait till end */
	while ((UCSR1A & (1 << UDRE1)) == 0);
    3932:	e8 ec       	ldi	r30, 0xC8	; 200
    3934:	f0 e0       	ldi	r31, 0x00	; 0
    3936:	90 81       	ld	r25, Z
    3938:	95 ff       	sbrs	r25, 5
    393a:	fd cf       	rjmp	.-6      	; 0x3936 <ESP8266_LL_USARTSend+0xa>
    393c:	d9 01       	movw	r26, r18
    393e:	62 0f       	add	r22, r18
    3940:	73 1f       	adc	r23, r19
	
	/* Send data via USART */
	while (count--) {
		/* Send character */
		UDR1 = *data++;
    3942:	ce ec       	ldi	r28, 0xCE	; 206
    3944:	d0 e0       	ldi	r29, 0x00	; 0

		/* Wait till done */
		while ((UCSR1A & (1 << UDRE1)) == 0);
    3946:	e8 ec       	ldi	r30, 0xC8	; 200
    3948:	f0 e0       	ldi	r31, 0x00	; 0
    394a:	05 c0       	rjmp	.+10     	; 0x3956 <ESP8266_LL_USARTSend+0x2a>
	while ((UCSR1A & (1 << UDRE1)) == 0);
	
	/* Send data via USART */
	while (count--) {
		/* Send character */
		UDR1 = *data++;
    394c:	9d 91       	ld	r25, X+
    394e:	98 83       	st	Y, r25

		/* Wait till done */
		while ((UCSR1A & (1 << UDRE1)) == 0);
    3950:	90 81       	ld	r25, Z
    3952:	95 ff       	sbrs	r25, 5
    3954:	fd cf       	rjmp	.-6      	; 0x3950 <ESP8266_LL_USARTSend+0x24>
uint8_t ESP8266_LL_USARTSend(uint8_t* data, uint16_t count) {
	/* Wait till end */
	while ((UCSR1A & (1 << UDRE1)) == 0);
	
	/* Send data via USART */
	while (count--) {
    3956:	a6 17       	cp	r26, r22
    3958:	b7 07       	cpc	r27, r23
    395a:	c1 f7       	brne	.-16     	; 0x394c <ESP8266_LL_USARTSend+0x20>
		while ((UCSR1A & (1 << UDRE1)) == 0);
	}
	
	/* Return 0 = Successful */
	return 0;
}
    395c:	80 e0       	ldi	r24, 0x00	; 0
    395e:	df 91       	pop	r29
    3960:	cf 91       	pop	r28
    3962:	08 95       	ret

00003964 <__vector_36>:

/* USART receive interrupt handler */
ISR(USART1_RX_vect) {
    3964:	1f 92       	push	r1
    3966:	0f 92       	push	r0
    3968:	0f b6       	in	r0, 0x3f	; 63
    396a:	0f 92       	push	r0
    396c:	11 24       	eor	r1, r1
    396e:	0b b6       	in	r0, 0x3b	; 59
    3970:	0f 92       	push	r0
    3972:	2f 93       	push	r18
    3974:	3f 93       	push	r19
    3976:	4f 93       	push	r20
    3978:	5f 93       	push	r21
    397a:	6f 93       	push	r22
    397c:	7f 93       	push	r23
    397e:	8f 93       	push	r24
    3980:	9f 93       	push	r25
    3982:	af 93       	push	r26
    3984:	bf 93       	push	r27
    3986:	ef 93       	push	r30
    3988:	ff 93       	push	r31
    398a:	cf 93       	push	r28
    398c:	df 93       	push	r29
    398e:	1f 92       	push	r1
    3990:	cd b7       	in	r28, 0x3d	; 61
    3992:	de b7       	in	r29, 0x3e	; 62
	uint8_t ch = UDR1;
    3994:	80 91 ce 00 	lds	r24, 0x00CE
    3998:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send received character to ESP stack */
	ESP8266_DataReceived(&ch, 1);
    399a:	61 e0       	ldi	r22, 0x01	; 1
    399c:	70 e0       	ldi	r23, 0x00	; 0
    399e:	ce 01       	movw	r24, r28
    39a0:	01 96       	adiw	r24, 0x01	; 1
    39a2:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <ESP8266_DataReceived>
}
    39a6:	0f 90       	pop	r0
    39a8:	df 91       	pop	r29
    39aa:	cf 91       	pop	r28
    39ac:	ff 91       	pop	r31
    39ae:	ef 91       	pop	r30
    39b0:	bf 91       	pop	r27
    39b2:	af 91       	pop	r26
    39b4:	9f 91       	pop	r25
    39b6:	8f 91       	pop	r24
    39b8:	7f 91       	pop	r23
    39ba:	6f 91       	pop	r22
    39bc:	5f 91       	pop	r21
    39be:	4f 91       	pop	r20
    39c0:	3f 91       	pop	r19
    39c2:	2f 91       	pop	r18
    39c4:	0f 90       	pop	r0
    39c6:	0b be       	out	0x3b, r0	; 59
    39c8:	0f 90       	pop	r0
    39ca:	0f be       	out	0x3f, r0	; 63
    39cc:	0f 90       	pop	r0
    39ce:	1f 90       	pop	r1
    39d0:	18 95       	reti

000039d2 <Debug_Putc>:
	/* Print each AP */
	for (i = 0; i < ESP8266_AP->Count; i++) {
		/* Print SSID for each AP */
		printf("%2d: %s\r\n", i, ESP8266_AP->AP[i].SSID);
	}
}
    39d2:	80 93 c6 00 	sts	0x00C6, r24
    39d6:	e0 ec       	ldi	r30, 0xC0	; 192
    39d8:	f0 e0       	ldi	r31, 0x00	; 0
    39da:	80 81       	ld	r24, Z
    39dc:	85 ff       	sbrs	r24, 5
    39de:	fd cf       	rjmp	.-6      	; 0x39da <Debug_Putc+0x8>
    39e0:	80 e0       	ldi	r24, 0x00	; 0
    39e2:	90 e0       	ldi	r25, 0x00	; 0
    39e4:	08 95       	ret

000039e6 <TimerInit>:
    39e6:	84 b5       	in	r24, 0x24	; 36
    39e8:	82 60       	ori	r24, 0x02	; 2
    39ea:	84 bd       	out	0x24, r24	; 36
    39ec:	85 b5       	in	r24, 0x25	; 37
    39ee:	83 60       	ori	r24, 0x03	; 3
    39f0:	85 bd       	out	0x25, r24	; 37
    39f2:	89 ef       	ldi	r24, 0xF9	; 249
    39f4:	87 bd       	out	0x27, r24	; 39
    39f6:	ee e6       	ldi	r30, 0x6E	; 110
    39f8:	f0 e0       	ldi	r31, 0x00	; 0
    39fa:	80 81       	ld	r24, Z
    39fc:	82 60       	ori	r24, 0x02	; 2
    39fe:	80 83       	st	Z, r24
    3a00:	08 95       	ret

00003a02 <__vector_21>:
    3a02:	1f 92       	push	r1
    3a04:	0f 92       	push	r0
    3a06:	0f b6       	in	r0, 0x3f	; 63
    3a08:	0f 92       	push	r0
    3a0a:	11 24       	eor	r1, r1
    3a0c:	0b b6       	in	r0, 0x3b	; 59
    3a0e:	0f 92       	push	r0
    3a10:	2f 93       	push	r18
    3a12:	3f 93       	push	r19
    3a14:	4f 93       	push	r20
    3a16:	5f 93       	push	r21
    3a18:	6f 93       	push	r22
    3a1a:	7f 93       	push	r23
    3a1c:	8f 93       	push	r24
    3a1e:	9f 93       	push	r25
    3a20:	af 93       	push	r26
    3a22:	bf 93       	push	r27
    3a24:	ef 93       	push	r30
    3a26:	ff 93       	push	r31
    3a28:	41 e0       	ldi	r20, 0x01	; 1
    3a2a:	50 e0       	ldi	r21, 0x00	; 0
    3a2c:	60 e0       	ldi	r22, 0x00	; 0
    3a2e:	70 e0       	ldi	r23, 0x00	; 0
    3a30:	8d e6       	ldi	r24, 0x6D	; 109
    3a32:	96 e1       	ldi	r25, 0x16	; 22
    3a34:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <ESP8266_TimeUpdate>
    3a38:	ff 91       	pop	r31
    3a3a:	ef 91       	pop	r30
    3a3c:	bf 91       	pop	r27
    3a3e:	af 91       	pop	r26
    3a40:	9f 91       	pop	r25
    3a42:	8f 91       	pop	r24
    3a44:	7f 91       	pop	r23
    3a46:	6f 91       	pop	r22
    3a48:	5f 91       	pop	r21
    3a4a:	4f 91       	pop	r20
    3a4c:	3f 91       	pop	r19
    3a4e:	2f 91       	pop	r18
    3a50:	0f 90       	pop	r0
    3a52:	0b be       	out	0x3b, r0	; 59
    3a54:	0f 90       	pop	r0
    3a56:	0f be       	out	0x3f, r0	; 63
    3a58:	0f 90       	pop	r0
    3a5a:	1f 90       	pop	r1
    3a5c:	18 95       	reti

00003a5e <__vector_25>:
    3a5e:	1f 92       	push	r1
    3a60:	0f 92       	push	r0
    3a62:	0f b6       	in	r0, 0x3f	; 63
    3a64:	0f 92       	push	r0
    3a66:	11 24       	eor	r1, r1
    3a68:	0b b6       	in	r0, 0x3b	; 59
    3a6a:	0f 92       	push	r0
    3a6c:	8f 93       	push	r24
    3a6e:	ef 93       	push	r30
    3a70:	ff 93       	push	r31
    3a72:	e6 ec       	ldi	r30, 0xC6	; 198
    3a74:	f0 e0       	ldi	r31, 0x00	; 0
    3a76:	80 81       	ld	r24, Z
    3a78:	80 83       	st	Z, r24
    3a7a:	e0 ec       	ldi	r30, 0xC0	; 192
    3a7c:	f0 e0       	ldi	r31, 0x00	; 0
    3a7e:	80 81       	ld	r24, Z
    3a80:	85 ff       	sbrs	r24, 5
    3a82:	fd cf       	rjmp	.-6      	; 0x3a7e <__vector_25+0x20>
    3a84:	ff 91       	pop	r31
    3a86:	ef 91       	pop	r30
    3a88:	8f 91       	pop	r24
    3a8a:	0f 90       	pop	r0
    3a8c:	0b be       	out	0x3b, r0	; 59
    3a8e:	0f 90       	pop	r0
    3a90:	0f be       	out	0x3f, r0	; 63
    3a92:	0f 90       	pop	r0
    3a94:	1f 90       	pop	r1
    3a96:	18 95       	reti

00003a98 <DebugUARTInit>:
    3a98:	9b 01       	movw	r18, r22
    3a9a:	ac 01       	movw	r20, r24
    3a9c:	60 e0       	ldi	r22, 0x00	; 0
    3a9e:	79 e0       	ldi	r23, 0x09	; 9
    3aa0:	8d e3       	ldi	r24, 0x3D	; 61
    3aa2:	90 e0       	ldi	r25, 0x00	; 0
    3aa4:	bf d1       	rcall	.+894    	; 0x3e24 <__udivmodsi4>
    3aa6:	da 01       	movw	r26, r20
    3aa8:	c9 01       	movw	r24, r18
    3aaa:	01 97       	sbiw	r24, 0x01	; 1
    3aac:	a1 09       	sbc	r26, r1
    3aae:	b1 09       	sbc	r27, r1
    3ab0:	ac 01       	movw	r20, r24
    3ab2:	bd 01       	movw	r22, r26
    3ab4:	76 95       	lsr	r23
    3ab6:	67 95       	ror	r22
    3ab8:	57 95       	ror	r21
    3aba:	47 95       	ror	r20
    3abc:	85 2f       	mov	r24, r21
    3abe:	99 27       	eor	r25, r25
    3ac0:	80 93 c5 00 	sts	0x00C5, r24
    3ac4:	40 93 c4 00 	sts	0x00C4, r20
    3ac8:	e0 ec       	ldi	r30, 0xC0	; 192
    3aca:	f0 e0       	ldi	r31, 0x00	; 0
    3acc:	80 81       	ld	r24, Z
    3ace:	82 60       	ori	r24, 0x02	; 2
    3ad0:	80 83       	st	Z, r24
    3ad2:	e2 ec       	ldi	r30, 0xC2	; 194
    3ad4:	f0 e0       	ldi	r31, 0x00	; 0
    3ad6:	80 81       	ld	r24, Z
    3ad8:	86 60       	ori	r24, 0x06	; 6
    3ada:	80 83       	st	Z, r24
    3adc:	e1 ec       	ldi	r30, 0xC1	; 193
    3ade:	f0 e0       	ldi	r31, 0x00	; 0
    3ae0:	80 81       	ld	r24, Z
    3ae2:	88 61       	ori	r24, 0x18	; 24
    3ae4:	80 83       	st	Z, r24
    3ae6:	80 81       	ld	r24, Z
    3ae8:	80 68       	ori	r24, 0x80	; 128
    3aea:	80 83       	st	Z, r24
    3aec:	08 95       	ret

00003aee <main>:
    3aee:	86 e0       	ldi	r24, 0x06	; 6
    3af0:	92 e0       	ldi	r25, 0x02	; 2
    3af2:	90 93 c9 17 	sts	0x17C9, r25
    3af6:	80 93 c8 17 	sts	0x17C8, r24
    3afa:	60 e0       	ldi	r22, 0x00	; 0
    3afc:	72 ec       	ldi	r23, 0xC2	; 194
    3afe:	81 e0       	ldi	r24, 0x01	; 1
    3b00:	90 e0       	ldi	r25, 0x00	; 0
    3b02:	ca df       	rcall	.-108    	; 0x3a98 <DebugUARTInit>
    3b04:	70 df       	rcall	.-288    	; 0x39e6 <TimerInit>
    3b06:	78 94       	sei
    3b08:	82 e9       	ldi	r24, 0x92	; 146
    3b0a:	96 e0       	ldi	r25, 0x06	; 6
    3b0c:	63 d3       	rcall	.+1734   	; 0x41d4 <puts>
    3b0e:	03 c0       	rjmp	.+6      	; 0x3b16 <main+0x28>
    3b10:	86 ec       	ldi	r24, 0xC6	; 198
    3b12:	96 e0       	ldi	r25, 0x06	; 6
    3b14:	5f d3       	rcall	.+1726   	; 0x41d4 <puts>
    3b16:	40 e0       	ldi	r20, 0x00	; 0
    3b18:	52 ec       	ldi	r21, 0xC2	; 194
    3b1a:	61 e0       	ldi	r22, 0x01	; 1
    3b1c:	70 e0       	ldi	r23, 0x00	; 0
    3b1e:	8d e6       	ldi	r24, 0x6D	; 109
    3b20:	96 e1       	ldi	r25, 0x16	; 22
    3b22:	07 db       	rcall	.-2546   	; 0x3132 <ESP8266_Init>
    3b24:	81 11       	cpse	r24, r1
    3b26:	f4 cf       	rjmp	.-24     	; 0x3b10 <main+0x22>
    3b28:	63 e0       	ldi	r22, 0x03	; 3
    3b2a:	8d e6       	ldi	r24, 0x6D	; 109
    3b2c:	96 e1       	ldi	r25, 0x16	; 22
    3b2e:	9c da       	rcall	.-2760   	; 0x3068 <ESP8266_SetMode>
    3b30:	81 11       	cpse	r24, r1
    3b32:	fa cf       	rjmp	.-12     	; 0x3b28 <main+0x3a>
    3b34:	60 e5       	ldi	r22, 0x50	; 80
    3b36:	70 e0       	ldi	r23, 0x00	; 0
    3b38:	8d e6       	ldi	r24, 0x6D	; 109
    3b3a:	96 e1       	ldi	r25, 0x16	; 22
    3b3c:	34 d9       	rcall	.-3480   	; 0x2da6 <ESP8266_ServerEnable>
    3b3e:	81 11       	cpse	r24, r1
    3b40:	f9 cf       	rjmp	.-14     	; 0x3b34 <main+0x46>
    3b42:	81 ef       	ldi	r24, 0xF1	; 241
    3b44:	96 e0       	ldi	r25, 0x06	; 6
    3b46:	46 d3       	rcall	.+1676   	; 0x41d4 <puts>
    3b48:	8d e6       	ldi	r24, 0x6D	; 109
    3b4a:	96 e1       	ldi	r25, 0x16	; 22
    3b4c:	41 d8       	rcall	.-3966   	; 0x2bd0 <ESP8266_WifiDisconnect>
    3b4e:	8d e6       	ldi	r24, 0x6D	; 109
    3b50:	96 e1       	ldi	r25, 0x16	; 22
    3b52:	2a d8       	rcall	.-4012   	; 0x2ba8 <ESP8266_WaitReady>
    3b54:	4b e0       	ldi	r20, 0x0B	; 11
    3b56:	57 e0       	ldi	r21, 0x07	; 7
    3b58:	69 e1       	ldi	r22, 0x19	; 25
    3b5a:	77 e0       	ldi	r23, 0x07	; 7
    3b5c:	8d e6       	ldi	r24, 0x6D	; 109
    3b5e:	96 e1       	ldi	r25, 0x16	; 22
    3b60:	59 d8       	rcall	.-3918   	; 0x2c14 <ESP8266_WifiConnect>
    3b62:	8d e6       	ldi	r24, 0x6D	; 109
    3b64:	96 e1       	ldi	r25, 0x16	; 22
    3b66:	20 d8       	rcall	.-4032   	; 0x2ba8 <ESP8266_WaitReady>
    3b68:	8d e6       	ldi	r24, 0x6D	; 109
    3b6a:	96 e1       	ldi	r25, 0x16	; 22
    3b6c:	a0 d8       	rcall	.-3776   	; 0x2cae <ESP8266_WifiGetConnected>
    3b6e:	26 98       	cbi	0x04, 6	; 4
    3b70:	2e 9a       	sbi	0x05, 6	; 5
    3b72:	8d e6       	ldi	r24, 0x6D	; 109
    3b74:	96 e1       	ldi	r25, 0x16	; 22
    3b76:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <ESP8266_Update>
    3b7a:	1e 99       	sbic	0x03, 6	; 3
    3b7c:	fa cf       	rjmp	.-12     	; 0x3b72 <main+0x84>
    3b7e:	1e 9b       	sbis	0x03, 6	; 3
    3b80:	fe cf       	rjmp	.-4      	; 0x3b7e <main+0x90>
    3b82:	00 e0       	ldi	r16, 0x00	; 0
    3b84:	10 e0       	ldi	r17, 0x00	; 0
    3b86:	20 e5       	ldi	r18, 0x50	; 80
    3b88:	30 e0       	ldi	r19, 0x00	; 0
    3b8a:	43 e2       	ldi	r20, 0x23	; 35
    3b8c:	57 e0       	ldi	r21, 0x07	; 7
    3b8e:	69 e3       	ldi	r22, 0x39	; 57
    3b90:	77 e0       	ldi	r23, 0x07	; 7
    3b92:	8d e6       	ldi	r24, 0x6D	; 109
    3b94:	96 e1       	ldi	r25, 0x16	; 22
    3b96:	53 de       	rcall	.-858    	; 0x383e <ESP8266_StartClientConnectionTCP>
    3b98:	81 11       	cpse	r24, r1
    3b9a:	f3 cf       	rjmp	.-26     	; 0x3b82 <main+0x94>
    3b9c:	ea cf       	rjmp	.-44     	; 0x3b72 <main+0x84>

00003b9e <ESP8266_Callback_DeviceReady>:
    3b9e:	86 e4       	ldi	r24, 0x46	; 70
    3ba0:	97 e0       	ldi	r25, 0x07	; 7
    3ba2:	18 c3       	rjmp	.+1584   	; 0x41d4 <puts>
    3ba4:	08 95       	ret

00003ba6 <ESP8266_Callback_WatchdogReset>:
    3ba6:	87 e5       	ldi	r24, 0x57	; 87
    3ba8:	97 e0       	ldi	r25, 0x07	; 7
    3baa:	14 c3       	rjmp	.+1576   	; 0x41d4 <puts>
    3bac:	08 95       	ret

00003bae <ESP8266_Callback_WifiDisconnected>:
    3bae:	81 e7       	ldi	r24, 0x71	; 113
    3bb0:	97 e0       	ldi	r25, 0x07	; 7
    3bb2:	10 c3       	rjmp	.+1568   	; 0x41d4 <puts>
    3bb4:	08 95       	ret

00003bb6 <ESP8266_Callback_WifiConnected>:
    3bb6:	88 e8       	ldi	r24, 0x88	; 136
    3bb8:	97 e0       	ldi	r25, 0x07	; 7
    3bba:	0c c3       	rjmp	.+1560   	; 0x41d4 <puts>
    3bbc:	08 95       	ret

00003bbe <ESP8266_Callback_WifiConnectFailed>:
    3bbe:	fc 01       	movw	r30, r24
    3bc0:	e5 5c       	subi	r30, 0xC5	; 197
    3bc2:	fe 4f       	sbci	r31, 0xFE	; 254
    3bc4:	80 81       	ld	r24, Z
    3bc6:	1f 92       	push	r1
    3bc8:	8f 93       	push	r24
    3bca:	8c e9       	ldi	r24, 0x9C	; 156
    3bcc:	97 e0       	ldi	r25, 0x07	; 7
    3bce:	9f 93       	push	r25
    3bd0:	8f 93       	push	r24
    3bd2:	ed d2       	rcall	.+1498   	; 0x41ae <printf>
    3bd4:	0f 90       	pop	r0
    3bd6:	0f 90       	pop	r0
    3bd8:	0f 90       	pop	r0
    3bda:	0f 90       	pop	r0
    3bdc:	08 95       	ret

00003bde <ESP8266_Callback_WifiGotIP>:
    3bde:	cf 93       	push	r28
    3be0:	df 93       	push	r29
    3be2:	ec 01       	movw	r28, r24
    3be4:	8f ec       	ldi	r24, 0xCF	; 207
    3be6:	97 e0       	ldi	r25, 0x07	; 7
    3be8:	f5 d2       	rcall	.+1514   	; 0x41d4 <puts>
    3bea:	ce 01       	movw	r24, r28
    3bec:	59 d9       	rcall	.-3406   	; 0x2ea0 <ESP8266_GetSTAIP>
    3bee:	1f 92       	push	r1
    3bf0:	8f 93       	push	r24
    3bf2:	87 ee       	ldi	r24, 0xE7	; 231
    3bf4:	97 e0       	ldi	r25, 0x07	; 7
    3bf6:	9f 93       	push	r25
    3bf8:	8f 93       	push	r24
    3bfa:	d9 d2       	rcall	.+1458   	; 0x41ae <printf>
    3bfc:	0f 90       	pop	r0
    3bfe:	0f 90       	pop	r0
    3c00:	0f 90       	pop	r0
    3c02:	0f 90       	pop	r0
    3c04:	df 91       	pop	r29
    3c06:	cf 91       	pop	r28
    3c08:	08 95       	ret

00003c0a <ESP8266_Callback_WifiIPSet>:
    3c0a:	fc 01       	movw	r30, r24
    3c0c:	e4 53       	subi	r30, 0x34	; 52
    3c0e:	ff 4f       	sbci	r31, 0xFF	; 255
    3c10:	20 81       	ld	r18, Z
    3c12:	1f 92       	push	r1
    3c14:	2f 93       	push	r18
    3c16:	31 97       	sbiw	r30, 0x01	; 1
    3c18:	20 81       	ld	r18, Z
    3c1a:	1f 92       	push	r1
    3c1c:	2f 93       	push	r18
    3c1e:	31 97       	sbiw	r30, 0x01	; 1
    3c20:	20 81       	ld	r18, Z
    3c22:	1f 92       	push	r1
    3c24:	2f 93       	push	r18
    3c26:	31 97       	sbiw	r30, 0x01	; 1
    3c28:	80 81       	ld	r24, Z
    3c2a:	1f 92       	push	r1
    3c2c:	8f 93       	push	r24
    3c2e:	80 e0       	ldi	r24, 0x00	; 0
    3c30:	98 e0       	ldi	r25, 0x08	; 8
    3c32:	9f 93       	push	r25
    3c34:	8f 93       	push	r24
    3c36:	bb d2       	rcall	.+1398   	; 0x41ae <printf>
    3c38:	8d b7       	in	r24, 0x3d	; 61
    3c3a:	9e b7       	in	r25, 0x3e	; 62
    3c3c:	0a 96       	adiw	r24, 0x0a	; 10
    3c3e:	0f b6       	in	r0, 0x3f	; 63
    3c40:	f8 94       	cli
    3c42:	9e bf       	out	0x3e, r25	; 62
    3c44:	0f be       	out	0x3f, r0	; 63
    3c46:	8d bf       	out	0x3d, r24	; 61
    3c48:	08 95       	ret

00003c4a <ESP8266_Callback_DHCPTimeout>:
    3c4a:	88 e2       	ldi	r24, 0x28	; 40
    3c4c:	98 e0       	ldi	r25, 0x08	; 8
    3c4e:	c2 c2       	rjmp	.+1412   	; 0x41d4 <puts>
    3c50:	08 95       	ret

00003c52 <ESP8266_Callback_ClientConnectionConnected>:


/************************************/
/*         CLIENT CALLBACKS         */
/************************************/
void ESP8266_Callback_ClientConnectionConnected(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection) {
    3c52:	0f 93       	push	r16
    3c54:	1f 93       	push	r17
    3c56:	cf 93       	push	r28
    3c58:	df 93       	push	r29
    3c5a:	8c 01       	movw	r16, r24
    3c5c:	eb 01       	movw	r28, r22
	/* We are connected to external server */
	printf("Client connected to server! Connection number: %s\r\n", Connection->Name);
    3c5e:	89 8d       	ldd	r24, Y+25	; 0x19
    3c60:	8f 93       	push	r24
    3c62:	88 8d       	ldd	r24, Y+24	; 0x18
    3c64:	8f 93       	push	r24
    3c66:	23 e6       	ldi	r18, 0x63	; 99
    3c68:	38 e0       	ldi	r19, 0x08	; 8
    3c6a:	3f 93       	push	r19
    3c6c:	2f 93       	push	r18
    3c6e:	9f d2       	rcall	.+1342   	; 0x41ae <printf>
	
	/* We are connected to server, request to sent header data to server */
	ESP8266_RequestSendData(ESP8266, Connection);
    3c70:	be 01       	movw	r22, r28
    3c72:	c8 01       	movw	r24, r16
    3c74:	3e d8       	rcall	.-3972   	; 0x2cf2 <ESP8266_RequestSendData>
    3c76:	0f 90       	pop	r0
    3c78:	0f 90       	pop	r0
    3c7a:	0f 90       	pop	r0
    3c7c:	0f 90       	pop	r0
}
    3c7e:	df 91       	pop	r29
    3c80:	cf 91       	pop	r28
    3c82:	1f 91       	pop	r17
    3c84:	0f 91       	pop	r16
    3c86:	08 95       	ret

00003c88 <ESP8266_Callback_ClientConnectionError>:

/* Called when client connection fails to server */
void ESP8266_Callback_ClientConnectionError(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection) {
	/* Fail with connection to server */
	printf("An error occurred when trying to connect on connection: %d\r\n", Connection->Number);
    3c88:	fb 01       	movw	r30, r22
    3c8a:	80 81       	ld	r24, Z
    3c8c:	1f 92       	push	r1
    3c8e:	8f 93       	push	r24
    3c90:	87 e9       	ldi	r24, 0x97	; 151
    3c92:	98 e0       	ldi	r25, 0x08	; 8
    3c94:	9f 93       	push	r25
    3c96:	8f 93       	push	r24
    3c98:	8a d2       	rcall	.+1300   	; 0x41ae <printf>
    3c9a:	0f 90       	pop	r0
    3c9c:	0f 90       	pop	r0
    3c9e:	0f 90       	pop	r0
    3ca0:	0f 90       	pop	r0
    3ca2:	08 95       	ret

00003ca4 <ESP8266_Callback_ClientConnectionSendData>:
}

/* Called when data are ready to be sent to server */
uint16_t ESP8266_Callback_ClientConnectionSendData(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection, char* Buffer, uint16_t max_buffer_size) {
    3ca4:	cf 93       	push	r28
    3ca6:	df 93       	push	r29
	/* Format data to sent to server */
	sprintf(Buffer, "GET / HTTP/1.1\r\n");
    3ca8:	81 e1       	ldi	r24, 0x11	; 17
    3caa:	e4 ed       	ldi	r30, 0xD4	; 212
    3cac:	f8 e0       	ldi	r31, 0x08	; 8
    3cae:	da 01       	movw	r26, r20
    3cb0:	01 90       	ld	r0, Z+
    3cb2:	0d 92       	st	X+, r0
    3cb4:	8a 95       	dec	r24
    3cb6:	e1 f7       	brne	.-8      	; 0x3cb0 <ESP8266_Callback_ClientConnectionSendData+0xc>
	strcat(Buffer, "Host: stm32f4-discovery.com\r\n");
    3cb8:	da 01       	movw	r26, r20
    3cba:	0d 90       	ld	r0, X+
    3cbc:	00 20       	and	r0, r0
    3cbe:	e9 f7       	brne	.-6      	; 0x3cba <ESP8266_Callback_ClientConnectionSendData+0x16>
    3cc0:	11 97       	sbiw	r26, 0x01	; 1
    3cc2:	8e e1       	ldi	r24, 0x1E	; 30
    3cc4:	e5 ee       	ldi	r30, 0xE5	; 229
    3cc6:	f8 e0       	ldi	r31, 0x08	; 8
    3cc8:	01 90       	ld	r0, Z+
    3cca:	0d 92       	st	X+, r0
    3ccc:	8a 95       	dec	r24
    3cce:	e1 f7       	brne	.-8      	; 0x3cc8 <ESP8266_Callback_ClientConnectionSendData+0x24>
	strcat(Buffer, "Connection: close\r\n");
    3cd0:	da 01       	movw	r26, r20
    3cd2:	0d 90       	ld	r0, X+
    3cd4:	00 20       	and	r0, r0
    3cd6:	e9 f7       	brne	.-6      	; 0x3cd2 <ESP8266_Callback_ClientConnectionSendData+0x2e>
    3cd8:	11 97       	sbiw	r26, 0x01	; 1
    3cda:	84 e1       	ldi	r24, 0x14	; 20
    3cdc:	e3 e0       	ldi	r30, 0x03	; 3
    3cde:	f9 e0       	ldi	r31, 0x09	; 9
    3ce0:	01 90       	ld	r0, Z+
    3ce2:	0d 92       	st	X+, r0
    3ce4:	8a 95       	dec	r24
    3ce6:	e1 f7       	brne	.-8      	; 0x3ce0 <ESP8266_Callback_ClientConnectionSendData+0x3c>
	strcat(Buffer, "\r\n");
    3ce8:	fa 01       	movw	r30, r20
    3cea:	01 90       	ld	r0, Z+
    3cec:	00 20       	and	r0, r0
    3cee:	e9 f7       	brne	.-6      	; 0x3cea <ESP8266_Callback_ClientConnectionSendData+0x46>
    3cf0:	31 97       	sbiw	r30, 0x01	; 1
    3cf2:	8d e0       	ldi	r24, 0x0D	; 13
    3cf4:	9a e0       	ldi	r25, 0x0A	; 10
    3cf6:	a0 e0       	ldi	r26, 0x00	; 0
    3cf8:	80 83       	st	Z, r24
    3cfa:	91 83       	std	Z+1, r25	; 0x01
    3cfc:	a2 83       	std	Z+2, r26	; 0x02
	
	/* Return length of buffer */
	return strlen(Buffer);
    3cfe:	fa 01       	movw	r30, r20
    3d00:	01 90       	ld	r0, Z+
    3d02:	00 20       	and	r0, r0
    3d04:	e9 f7       	brne	.-6      	; 0x3d00 <ESP8266_Callback_ClientConnectionSendData+0x5c>
    3d06:	cf 01       	movw	r24, r30
    3d08:	01 97       	sbiw	r24, 0x01	; 1
}
    3d0a:	84 1b       	sub	r24, r20
    3d0c:	95 0b       	sbc	r25, r21
    3d0e:	df 91       	pop	r29
    3d10:	cf 91       	pop	r28
    3d12:	08 95       	ret

00003d14 <ESP8266_Callback_ClientConnectionDataSent>:

/* Called when data are send successfully */
void ESP8266_Callback_ClientConnectionDataSent(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection) {
	printf("Data successfully sent as client!\r\n");
    3d14:	87 e1       	ldi	r24, 0x17	; 23
    3d16:	99 e0       	ldi	r25, 0x09	; 9
    3d18:	5d c2       	rjmp	.+1210   	; 0x41d4 <puts>
    3d1a:	08 95       	ret

00003d1c <ESP8266_Callback_ClientConnectionDataSentError>:
}

/* Called when error returned trying to sent data */
void ESP8266_Callback_ClientConnectionDataSentError(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection) {
	printf("Error while sending data on connection %d!\r\n", Connection->Number);
    3d1c:	fb 01       	movw	r30, r22
    3d1e:	80 81       	ld	r24, Z
    3d20:	1f 92       	push	r1
    3d22:	8f 93       	push	r24
    3d24:	8a e3       	ldi	r24, 0x3A	; 58
    3d26:	99 e0       	ldi	r25, 0x09	; 9
    3d28:	9f 93       	push	r25
    3d2a:	8f 93       	push	r24
    3d2c:	40 d2       	rcall	.+1152   	; 0x41ae <printf>
    3d2e:	0f 90       	pop	r0
    3d30:	0f 90       	pop	r0
    3d32:	0f 90       	pop	r0
    3d34:	0f 90       	pop	r0
    3d36:	08 95       	ret

00003d38 <ESP8266_Callback_ClientConnectionDataReceived>:
}

void ESP8266_Callback_ClientConnectionDataReceived(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection, char* Buffer) {
    3d38:	cf 93       	push	r28
    3d3a:	df 93       	push	r29
    3d3c:	eb 01       	movw	r28, r22
	/* Data received from server back to client */
	printf("Data received from server on connection: %s; Number of bytes received: %lu; %lu / %lu;\r\n",
    3d3e:	8f 89       	ldd	r24, Y+23	; 0x17
    3d40:	8f 93       	push	r24
    3d42:	8e 89       	ldd	r24, Y+22	; 0x16
    3d44:	8f 93       	push	r24
    3d46:	8d 89       	ldd	r24, Y+21	; 0x15
    3d48:	8f 93       	push	r24
    3d4a:	8c 89       	ldd	r24, Y+20	; 0x14
    3d4c:	8f 93       	push	r24
    3d4e:	8f 85       	ldd	r24, Y+15	; 0x0f
    3d50:	8f 93       	push	r24
    3d52:	8e 85       	ldd	r24, Y+14	; 0x0e
    3d54:	8f 93       	push	r24
    3d56:	8d 85       	ldd	r24, Y+13	; 0x0d
    3d58:	8f 93       	push	r24
    3d5a:	8c 85       	ldd	r24, Y+12	; 0x0c
    3d5c:	8f 93       	push	r24
    3d5e:	8b 85       	ldd	r24, Y+11	; 0x0b
    3d60:	8f 93       	push	r24
    3d62:	8a 85       	ldd	r24, Y+10	; 0x0a
    3d64:	8f 93       	push	r24
    3d66:	89 85       	ldd	r24, Y+9	; 0x09
    3d68:	8f 93       	push	r24
    3d6a:	88 85       	ldd	r24, Y+8	; 0x08
    3d6c:	8f 93       	push	r24
    3d6e:	89 8d       	ldd	r24, Y+25	; 0x19
    3d70:	8f 93       	push	r24
    3d72:	88 8d       	ldd	r24, Y+24	; 0x18
    3d74:	8f 93       	push	r24
    3d76:	87 e6       	ldi	r24, 0x67	; 103
    3d78:	99 e0       	ldi	r25, 0x09	; 9
    3d7a:	9f 93       	push	r25
    3d7c:	8f 93       	push	r24
    3d7e:	17 d2       	rcall	.+1070   	; 0x41ae <printf>
		Connection->TotalBytesReceived,
		Connection->ContentLength
	);
	
	/* Print message when first packet */
	if (Connection->Flags.F.FirstPacket) {
    3d80:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3d82:	2d b7       	in	r18, 0x3d	; 61
    3d84:	3e b7       	in	r19, 0x3e	; 62
    3d86:	20 5f       	subi	r18, 0xF0	; 240
    3d88:	3f 4f       	sbci	r19, 0xFF	; 255
    3d8a:	0f b6       	in	r0, 0x3f	; 63
    3d8c:	f8 94       	cli
    3d8e:	3e bf       	out	0x3e, r19	; 62
    3d90:	0f be       	out	0x3f, r0	; 63
    3d92:	2d bf       	out	0x3d, r18	; 61
    3d94:	85 ff       	sbrs	r24, 5
    3d96:	13 c0       	rjmp	.+38     	; 0x3dbe <ESP8266_Callback_ClientConnectionDataReceived+0x86>
		
		/* Print first message */
		printf("This is first packet received. Content length on this connection is: %lu\r\n", Connection->ContentLength);
    3d98:	8f 89       	ldd	r24, Y+23	; 0x17
    3d9a:	8f 93       	push	r24
    3d9c:	8e 89       	ldd	r24, Y+22	; 0x16
    3d9e:	8f 93       	push	r24
    3da0:	8d 89       	ldd	r24, Y+21	; 0x15
    3da2:	8f 93       	push	r24
    3da4:	8c 89       	ldd	r24, Y+20	; 0x14
    3da6:	8f 93       	push	r24
    3da8:	80 ec       	ldi	r24, 0xC0	; 192
    3daa:	99 e0       	ldi	r25, 0x09	; 9
    3dac:	9f 93       	push	r25
    3dae:	8f 93       	push	r24
    3db0:	fe d1       	rcall	.+1020   	; 0x41ae <printf>
    3db2:	0f 90       	pop	r0
    3db4:	0f 90       	pop	r0
    3db6:	0f 90       	pop	r0
    3db8:	0f 90       	pop	r0
    3dba:	0f 90       	pop	r0
    3dbc:	0f 90       	pop	r0
	}
}
    3dbe:	df 91       	pop	r29
    3dc0:	cf 91       	pop	r28
    3dc2:	08 95       	ret

00003dc4 <ESP8266_Callback_ClientConnectionClosed>:

/* Called when connection is closed */
void ESP8266_Callback_ClientConnectionClosed(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection) {
    3dc4:	fb 01       	movw	r30, r22
	printf("Client connection closed, connection: %d; Total bytes received: %lu; Content-Length header: %lu\r\n",
    3dc6:	87 89       	ldd	r24, Z+23	; 0x17
    3dc8:	8f 93       	push	r24
    3dca:	86 89       	ldd	r24, Z+22	; 0x16
    3dcc:	8f 93       	push	r24
    3dce:	85 89       	ldd	r24, Z+21	; 0x15
    3dd0:	8f 93       	push	r24
    3dd2:	84 89       	ldd	r24, Z+20	; 0x14
    3dd4:	8f 93       	push	r24
    3dd6:	87 85       	ldd	r24, Z+15	; 0x0f
    3dd8:	8f 93       	push	r24
    3dda:	86 85       	ldd	r24, Z+14	; 0x0e
    3ddc:	8f 93       	push	r24
    3dde:	85 85       	ldd	r24, Z+13	; 0x0d
    3de0:	8f 93       	push	r24
    3de2:	84 85       	ldd	r24, Z+12	; 0x0c
    3de4:	8f 93       	push	r24
    3de6:	80 81       	ld	r24, Z
    3de8:	1f 92       	push	r1
    3dea:	8f 93       	push	r24
    3dec:	8b e0       	ldi	r24, 0x0B	; 11
    3dee:	9a e0       	ldi	r25, 0x0A	; 10
    3df0:	9f 93       	push	r25
    3df2:	8f 93       	push	r24
    3df4:	dc d1       	rcall	.+952    	; 0x41ae <printf>
    3df6:	8d b7       	in	r24, 0x3d	; 61
    3df8:	9e b7       	in	r25, 0x3e	; 62
    3dfa:	0c 96       	adiw	r24, 0x0c	; 12
    3dfc:	0f b6       	in	r0, 0x3f	; 63
    3dfe:	f8 94       	cli
    3e00:	9e bf       	out	0x3e, r25	; 62
    3e02:	0f be       	out	0x3f, r0	; 63
    3e04:	8d bf       	out	0x3d, r24	; 61
    3e06:	08 95       	ret

00003e08 <ESP8266_Callback_ClientConnectionTimeout>:
	);
}

/* Called when timeout is reached on connection to server */
void ESP8266_Callback_ClientConnectionTimeout(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection) {
	printf("Timeout reached on connection: %d\r\n", Connection->Number);
    3e08:	fb 01       	movw	r30, r22
    3e0a:	80 81       	ld	r24, Z
    3e0c:	1f 92       	push	r1
    3e0e:	8f 93       	push	r24
    3e10:	8d e6       	ldi	r24, 0x6D	; 109
    3e12:	9a e0       	ldi	r25, 0x0A	; 10
    3e14:	9f 93       	push	r25
    3e16:	8f 93       	push	r24
    3e18:	ca d1       	rcall	.+916    	; 0x41ae <printf>
    3e1a:	0f 90       	pop	r0
    3e1c:	0f 90       	pop	r0
    3e1e:	0f 90       	pop	r0
    3e20:	0f 90       	pop	r0
    3e22:	08 95       	ret

00003e24 <__udivmodsi4>:
    3e24:	a1 e2       	ldi	r26, 0x21	; 33
    3e26:	1a 2e       	mov	r1, r26
    3e28:	aa 1b       	sub	r26, r26
    3e2a:	bb 1b       	sub	r27, r27
    3e2c:	fd 01       	movw	r30, r26
    3e2e:	0d c0       	rjmp	.+26     	; 0x3e4a <__udivmodsi4_ep>

00003e30 <__udivmodsi4_loop>:
    3e30:	aa 1f       	adc	r26, r26
    3e32:	bb 1f       	adc	r27, r27
    3e34:	ee 1f       	adc	r30, r30
    3e36:	ff 1f       	adc	r31, r31
    3e38:	a2 17       	cp	r26, r18
    3e3a:	b3 07       	cpc	r27, r19
    3e3c:	e4 07       	cpc	r30, r20
    3e3e:	f5 07       	cpc	r31, r21
    3e40:	20 f0       	brcs	.+8      	; 0x3e4a <__udivmodsi4_ep>
    3e42:	a2 1b       	sub	r26, r18
    3e44:	b3 0b       	sbc	r27, r19
    3e46:	e4 0b       	sbc	r30, r20
    3e48:	f5 0b       	sbc	r31, r21

00003e4a <__udivmodsi4_ep>:
    3e4a:	66 1f       	adc	r22, r22
    3e4c:	77 1f       	adc	r23, r23
    3e4e:	88 1f       	adc	r24, r24
    3e50:	99 1f       	adc	r25, r25
    3e52:	1a 94       	dec	r1
    3e54:	69 f7       	brne	.-38     	; 0x3e30 <__udivmodsi4_loop>
    3e56:	60 95       	com	r22
    3e58:	70 95       	com	r23
    3e5a:	80 95       	com	r24
    3e5c:	90 95       	com	r25
    3e5e:	9b 01       	movw	r18, r22
    3e60:	ac 01       	movw	r20, r24
    3e62:	bd 01       	movw	r22, r26
    3e64:	cf 01       	movw	r24, r30
    3e66:	08 95       	ret

00003e68 <__tablejump2__>:
    3e68:	ee 0f       	add	r30, r30
    3e6a:	ff 1f       	adc	r31, r31
    3e6c:	88 1f       	adc	r24, r24
    3e6e:	8b bf       	out	0x3b, r24	; 59
    3e70:	07 90       	elpm	r0, Z+
    3e72:	f6 91       	elpm	r31, Z
    3e74:	e0 2d       	mov	r30, r0
    3e76:	19 94       	eijmp

00003e78 <malloc>:
    3e78:	cf 93       	push	r28
    3e7a:	df 93       	push	r29
    3e7c:	82 30       	cpi	r24, 0x02	; 2
    3e7e:	91 05       	cpc	r25, r1
    3e80:	10 f4       	brcc	.+4      	; 0x3e86 <malloc+0xe>
    3e82:	82 e0       	ldi	r24, 0x02	; 2
    3e84:	90 e0       	ldi	r25, 0x00	; 0
    3e86:	e0 91 c4 17 	lds	r30, 0x17C4
    3e8a:	f0 91 c5 17 	lds	r31, 0x17C5
    3e8e:	20 e0       	ldi	r18, 0x00	; 0
    3e90:	30 e0       	ldi	r19, 0x00	; 0
    3e92:	c0 e0       	ldi	r28, 0x00	; 0
    3e94:	d0 e0       	ldi	r29, 0x00	; 0
    3e96:	30 97       	sbiw	r30, 0x00	; 0
    3e98:	11 f1       	breq	.+68     	; 0x3ede <malloc+0x66>
    3e9a:	40 81       	ld	r20, Z
    3e9c:	51 81       	ldd	r21, Z+1	; 0x01
    3e9e:	48 17       	cp	r20, r24
    3ea0:	59 07       	cpc	r21, r25
    3ea2:	c0 f0       	brcs	.+48     	; 0x3ed4 <malloc+0x5c>
    3ea4:	48 17       	cp	r20, r24
    3ea6:	59 07       	cpc	r21, r25
    3ea8:	61 f4       	brne	.+24     	; 0x3ec2 <malloc+0x4a>
    3eaa:	82 81       	ldd	r24, Z+2	; 0x02
    3eac:	93 81       	ldd	r25, Z+3	; 0x03
    3eae:	20 97       	sbiw	r28, 0x00	; 0
    3eb0:	19 f0       	breq	.+6      	; 0x3eb8 <malloc+0x40>
    3eb2:	9b 83       	std	Y+3, r25	; 0x03
    3eb4:	8a 83       	std	Y+2, r24	; 0x02
    3eb6:	2b c0       	rjmp	.+86     	; 0x3f0e <malloc+0x96>
    3eb8:	90 93 c5 17 	sts	0x17C5, r25
    3ebc:	80 93 c4 17 	sts	0x17C4, r24
    3ec0:	26 c0       	rjmp	.+76     	; 0x3f0e <malloc+0x96>
    3ec2:	21 15       	cp	r18, r1
    3ec4:	31 05       	cpc	r19, r1
    3ec6:	19 f0       	breq	.+6      	; 0x3ece <malloc+0x56>
    3ec8:	42 17       	cp	r20, r18
    3eca:	53 07       	cpc	r21, r19
    3ecc:	18 f4       	brcc	.+6      	; 0x3ed4 <malloc+0x5c>
    3ece:	9a 01       	movw	r18, r20
    3ed0:	be 01       	movw	r22, r28
    3ed2:	df 01       	movw	r26, r30
    3ed4:	ef 01       	movw	r28, r30
    3ed6:	02 80       	ldd	r0, Z+2	; 0x02
    3ed8:	f3 81       	ldd	r31, Z+3	; 0x03
    3eda:	e0 2d       	mov	r30, r0
    3edc:	dc cf       	rjmp	.-72     	; 0x3e96 <malloc+0x1e>
    3ede:	21 15       	cp	r18, r1
    3ee0:	31 05       	cpc	r19, r1
    3ee2:	09 f1       	breq	.+66     	; 0x3f26 <malloc+0xae>
    3ee4:	28 1b       	sub	r18, r24
    3ee6:	39 0b       	sbc	r19, r25
    3ee8:	24 30       	cpi	r18, 0x04	; 4
    3eea:	31 05       	cpc	r19, r1
    3eec:	90 f4       	brcc	.+36     	; 0x3f12 <malloc+0x9a>
    3eee:	12 96       	adiw	r26, 0x02	; 2
    3ef0:	8d 91       	ld	r24, X+
    3ef2:	9c 91       	ld	r25, X
    3ef4:	13 97       	sbiw	r26, 0x03	; 3
    3ef6:	61 15       	cp	r22, r1
    3ef8:	71 05       	cpc	r23, r1
    3efa:	21 f0       	breq	.+8      	; 0x3f04 <malloc+0x8c>
    3efc:	fb 01       	movw	r30, r22
    3efe:	93 83       	std	Z+3, r25	; 0x03
    3f00:	82 83       	std	Z+2, r24	; 0x02
    3f02:	04 c0       	rjmp	.+8      	; 0x3f0c <malloc+0x94>
    3f04:	90 93 c5 17 	sts	0x17C5, r25
    3f08:	80 93 c4 17 	sts	0x17C4, r24
    3f0c:	fd 01       	movw	r30, r26
    3f0e:	32 96       	adiw	r30, 0x02	; 2
    3f10:	44 c0       	rjmp	.+136    	; 0x3f9a <malloc+0x122>
    3f12:	fd 01       	movw	r30, r26
    3f14:	e2 0f       	add	r30, r18
    3f16:	f3 1f       	adc	r31, r19
    3f18:	81 93       	st	Z+, r24
    3f1a:	91 93       	st	Z+, r25
    3f1c:	22 50       	subi	r18, 0x02	; 2
    3f1e:	31 09       	sbc	r19, r1
    3f20:	2d 93       	st	X+, r18
    3f22:	3c 93       	st	X, r19
    3f24:	3a c0       	rjmp	.+116    	; 0x3f9a <malloc+0x122>
    3f26:	20 91 c2 17 	lds	r18, 0x17C2
    3f2a:	30 91 c3 17 	lds	r19, 0x17C3
    3f2e:	23 2b       	or	r18, r19
    3f30:	41 f4       	brne	.+16     	; 0x3f42 <malloc+0xca>
    3f32:	20 91 02 02 	lds	r18, 0x0202
    3f36:	30 91 03 02 	lds	r19, 0x0203
    3f3a:	30 93 c3 17 	sts	0x17C3, r19
    3f3e:	20 93 c2 17 	sts	0x17C2, r18
    3f42:	20 91 00 02 	lds	r18, 0x0200
    3f46:	30 91 01 02 	lds	r19, 0x0201
    3f4a:	21 15       	cp	r18, r1
    3f4c:	31 05       	cpc	r19, r1
    3f4e:	41 f4       	brne	.+16     	; 0x3f60 <malloc+0xe8>
    3f50:	2d b7       	in	r18, 0x3d	; 61
    3f52:	3e b7       	in	r19, 0x3e	; 62
    3f54:	40 91 04 02 	lds	r20, 0x0204
    3f58:	50 91 05 02 	lds	r21, 0x0205
    3f5c:	24 1b       	sub	r18, r20
    3f5e:	35 0b       	sbc	r19, r21
    3f60:	e0 91 c2 17 	lds	r30, 0x17C2
    3f64:	f0 91 c3 17 	lds	r31, 0x17C3
    3f68:	e2 17       	cp	r30, r18
    3f6a:	f3 07       	cpc	r31, r19
    3f6c:	a0 f4       	brcc	.+40     	; 0x3f96 <malloc+0x11e>
    3f6e:	2e 1b       	sub	r18, r30
    3f70:	3f 0b       	sbc	r19, r31
    3f72:	28 17       	cp	r18, r24
    3f74:	39 07       	cpc	r19, r25
    3f76:	78 f0       	brcs	.+30     	; 0x3f96 <malloc+0x11e>
    3f78:	ac 01       	movw	r20, r24
    3f7a:	4e 5f       	subi	r20, 0xFE	; 254
    3f7c:	5f 4f       	sbci	r21, 0xFF	; 255
    3f7e:	24 17       	cp	r18, r20
    3f80:	35 07       	cpc	r19, r21
    3f82:	48 f0       	brcs	.+18     	; 0x3f96 <malloc+0x11e>
    3f84:	4e 0f       	add	r20, r30
    3f86:	5f 1f       	adc	r21, r31
    3f88:	50 93 c3 17 	sts	0x17C3, r21
    3f8c:	40 93 c2 17 	sts	0x17C2, r20
    3f90:	81 93       	st	Z+, r24
    3f92:	91 93       	st	Z+, r25
    3f94:	02 c0       	rjmp	.+4      	; 0x3f9a <malloc+0x122>
    3f96:	e0 e0       	ldi	r30, 0x00	; 0
    3f98:	f0 e0       	ldi	r31, 0x00	; 0
    3f9a:	cf 01       	movw	r24, r30
    3f9c:	df 91       	pop	r29
    3f9e:	cf 91       	pop	r28
    3fa0:	08 95       	ret

00003fa2 <free>:
    3fa2:	0f 93       	push	r16
    3fa4:	1f 93       	push	r17
    3fa6:	cf 93       	push	r28
    3fa8:	df 93       	push	r29
    3faa:	00 97       	sbiw	r24, 0x00	; 0
    3fac:	09 f4       	brne	.+2      	; 0x3fb0 <free+0xe>
    3fae:	8c c0       	rjmp	.+280    	; 0x40c8 <free+0x126>
    3fb0:	fc 01       	movw	r30, r24
    3fb2:	32 97       	sbiw	r30, 0x02	; 2
    3fb4:	13 82       	std	Z+3, r1	; 0x03
    3fb6:	12 82       	std	Z+2, r1	; 0x02
    3fb8:	00 91 c4 17 	lds	r16, 0x17C4
    3fbc:	10 91 c5 17 	lds	r17, 0x17C5
    3fc0:	01 15       	cp	r16, r1
    3fc2:	11 05       	cpc	r17, r1
    3fc4:	81 f4       	brne	.+32     	; 0x3fe6 <free+0x44>
    3fc6:	20 81       	ld	r18, Z
    3fc8:	31 81       	ldd	r19, Z+1	; 0x01
    3fca:	82 0f       	add	r24, r18
    3fcc:	93 1f       	adc	r25, r19
    3fce:	20 91 c2 17 	lds	r18, 0x17C2
    3fd2:	30 91 c3 17 	lds	r19, 0x17C3
    3fd6:	28 17       	cp	r18, r24
    3fd8:	39 07       	cpc	r19, r25
    3fda:	79 f5       	brne	.+94     	; 0x403a <free+0x98>
    3fdc:	f0 93 c3 17 	sts	0x17C3, r31
    3fe0:	e0 93 c2 17 	sts	0x17C2, r30
    3fe4:	71 c0       	rjmp	.+226    	; 0x40c8 <free+0x126>
    3fe6:	d8 01       	movw	r26, r16
    3fe8:	40 e0       	ldi	r20, 0x00	; 0
    3fea:	50 e0       	ldi	r21, 0x00	; 0
    3fec:	ae 17       	cp	r26, r30
    3fee:	bf 07       	cpc	r27, r31
    3ff0:	50 f4       	brcc	.+20     	; 0x4006 <free+0x64>
    3ff2:	12 96       	adiw	r26, 0x02	; 2
    3ff4:	2d 91       	ld	r18, X+
    3ff6:	3c 91       	ld	r19, X
    3ff8:	13 97       	sbiw	r26, 0x03	; 3
    3ffa:	ad 01       	movw	r20, r26
    3ffc:	21 15       	cp	r18, r1
    3ffe:	31 05       	cpc	r19, r1
    4000:	09 f1       	breq	.+66     	; 0x4044 <free+0xa2>
    4002:	d9 01       	movw	r26, r18
    4004:	f3 cf       	rjmp	.-26     	; 0x3fec <free+0x4a>
    4006:	9d 01       	movw	r18, r26
    4008:	da 01       	movw	r26, r20
    400a:	33 83       	std	Z+3, r19	; 0x03
    400c:	22 83       	std	Z+2, r18	; 0x02
    400e:	60 81       	ld	r22, Z
    4010:	71 81       	ldd	r23, Z+1	; 0x01
    4012:	86 0f       	add	r24, r22
    4014:	97 1f       	adc	r25, r23
    4016:	82 17       	cp	r24, r18
    4018:	93 07       	cpc	r25, r19
    401a:	69 f4       	brne	.+26     	; 0x4036 <free+0x94>
    401c:	ec 01       	movw	r28, r24
    401e:	28 81       	ld	r18, Y
    4020:	39 81       	ldd	r19, Y+1	; 0x01
    4022:	26 0f       	add	r18, r22
    4024:	37 1f       	adc	r19, r23
    4026:	2e 5f       	subi	r18, 0xFE	; 254
    4028:	3f 4f       	sbci	r19, 0xFF	; 255
    402a:	31 83       	std	Z+1, r19	; 0x01
    402c:	20 83       	st	Z, r18
    402e:	8a 81       	ldd	r24, Y+2	; 0x02
    4030:	9b 81       	ldd	r25, Y+3	; 0x03
    4032:	93 83       	std	Z+3, r25	; 0x03
    4034:	82 83       	std	Z+2, r24	; 0x02
    4036:	45 2b       	or	r20, r21
    4038:	29 f4       	brne	.+10     	; 0x4044 <free+0xa2>
    403a:	f0 93 c5 17 	sts	0x17C5, r31
    403e:	e0 93 c4 17 	sts	0x17C4, r30
    4042:	42 c0       	rjmp	.+132    	; 0x40c8 <free+0x126>
    4044:	13 96       	adiw	r26, 0x03	; 3
    4046:	fc 93       	st	X, r31
    4048:	ee 93       	st	-X, r30
    404a:	12 97       	sbiw	r26, 0x02	; 2
    404c:	ed 01       	movw	r28, r26
    404e:	49 91       	ld	r20, Y+
    4050:	59 91       	ld	r21, Y+
    4052:	9e 01       	movw	r18, r28
    4054:	24 0f       	add	r18, r20
    4056:	35 1f       	adc	r19, r21
    4058:	e2 17       	cp	r30, r18
    405a:	f3 07       	cpc	r31, r19
    405c:	71 f4       	brne	.+28     	; 0x407a <free+0xd8>
    405e:	80 81       	ld	r24, Z
    4060:	91 81       	ldd	r25, Z+1	; 0x01
    4062:	84 0f       	add	r24, r20
    4064:	95 1f       	adc	r25, r21
    4066:	02 96       	adiw	r24, 0x02	; 2
    4068:	11 96       	adiw	r26, 0x01	; 1
    406a:	9c 93       	st	X, r25
    406c:	8e 93       	st	-X, r24
    406e:	82 81       	ldd	r24, Z+2	; 0x02
    4070:	93 81       	ldd	r25, Z+3	; 0x03
    4072:	13 96       	adiw	r26, 0x03	; 3
    4074:	9c 93       	st	X, r25
    4076:	8e 93       	st	-X, r24
    4078:	12 97       	sbiw	r26, 0x02	; 2
    407a:	e0 e0       	ldi	r30, 0x00	; 0
    407c:	f0 e0       	ldi	r31, 0x00	; 0
    407e:	d8 01       	movw	r26, r16
    4080:	12 96       	adiw	r26, 0x02	; 2
    4082:	8d 91       	ld	r24, X+
    4084:	9c 91       	ld	r25, X
    4086:	13 97       	sbiw	r26, 0x03	; 3
    4088:	00 97       	sbiw	r24, 0x00	; 0
    408a:	19 f0       	breq	.+6      	; 0x4092 <free+0xf0>
    408c:	f8 01       	movw	r30, r16
    408e:	8c 01       	movw	r16, r24
    4090:	f6 cf       	rjmp	.-20     	; 0x407e <free+0xdc>
    4092:	8d 91       	ld	r24, X+
    4094:	9c 91       	ld	r25, X
    4096:	98 01       	movw	r18, r16
    4098:	2e 5f       	subi	r18, 0xFE	; 254
    409a:	3f 4f       	sbci	r19, 0xFF	; 255
    409c:	82 0f       	add	r24, r18
    409e:	93 1f       	adc	r25, r19
    40a0:	20 91 c2 17 	lds	r18, 0x17C2
    40a4:	30 91 c3 17 	lds	r19, 0x17C3
    40a8:	28 17       	cp	r18, r24
    40aa:	39 07       	cpc	r19, r25
    40ac:	69 f4       	brne	.+26     	; 0x40c8 <free+0x126>
    40ae:	30 97       	sbiw	r30, 0x00	; 0
    40b0:	29 f4       	brne	.+10     	; 0x40bc <free+0x11a>
    40b2:	10 92 c5 17 	sts	0x17C5, r1
    40b6:	10 92 c4 17 	sts	0x17C4, r1
    40ba:	02 c0       	rjmp	.+4      	; 0x40c0 <free+0x11e>
    40bc:	13 82       	std	Z+3, r1	; 0x03
    40be:	12 82       	std	Z+2, r1	; 0x02
    40c0:	10 93 c3 17 	sts	0x17C3, r17
    40c4:	00 93 c2 17 	sts	0x17C2, r16
    40c8:	df 91       	pop	r29
    40ca:	cf 91       	pop	r28
    40cc:	1f 91       	pop	r17
    40ce:	0f 91       	pop	r16
    40d0:	08 95       	ret

000040d2 <memcmp>:
    40d2:	fb 01       	movw	r30, r22
    40d4:	dc 01       	movw	r26, r24
    40d6:	04 c0       	rjmp	.+8      	; 0x40e0 <memcmp+0xe>
    40d8:	8d 91       	ld	r24, X+
    40da:	01 90       	ld	r0, Z+
    40dc:	80 19       	sub	r24, r0
    40de:	21 f4       	brne	.+8      	; 0x40e8 <memcmp+0x16>
    40e0:	41 50       	subi	r20, 0x01	; 1
    40e2:	50 40       	sbci	r21, 0x00	; 0
    40e4:	c8 f7       	brcc	.-14     	; 0x40d8 <memcmp+0x6>
    40e6:	88 1b       	sub	r24, r24
    40e8:	99 0b       	sbc	r25, r25
    40ea:	08 95       	ret

000040ec <memcpy>:
    40ec:	fb 01       	movw	r30, r22
    40ee:	dc 01       	movw	r26, r24
    40f0:	02 c0       	rjmp	.+4      	; 0x40f6 <memcpy+0xa>
    40f2:	01 90       	ld	r0, Z+
    40f4:	0d 92       	st	X+, r0
    40f6:	41 50       	subi	r20, 0x01	; 1
    40f8:	50 40       	sbci	r21, 0x00	; 0
    40fa:	d8 f7       	brcc	.-10     	; 0x40f2 <memcpy+0x6>
    40fc:	08 95       	ret

000040fe <strcmp>:
    40fe:	fb 01       	movw	r30, r22
    4100:	dc 01       	movw	r26, r24
    4102:	8d 91       	ld	r24, X+
    4104:	01 90       	ld	r0, Z+
    4106:	80 19       	sub	r24, r0
    4108:	01 10       	cpse	r0, r1
    410a:	d9 f3       	breq	.-10     	; 0x4102 <strcmp+0x4>
    410c:	99 0b       	sbc	r25, r25
    410e:	08 95       	ret

00004110 <strncmp>:
    4110:	fb 01       	movw	r30, r22
    4112:	dc 01       	movw	r26, r24
    4114:	41 50       	subi	r20, 0x01	; 1
    4116:	50 40       	sbci	r21, 0x00	; 0
    4118:	30 f0       	brcs	.+12     	; 0x4126 <strncmp+0x16>
    411a:	8d 91       	ld	r24, X+
    411c:	01 90       	ld	r0, Z+
    411e:	80 19       	sub	r24, r0
    4120:	19 f4       	brne	.+6      	; 0x4128 <strncmp+0x18>
    4122:	00 20       	and	r0, r0
    4124:	b9 f7       	brne	.-18     	; 0x4114 <strncmp+0x4>
    4126:	88 1b       	sub	r24, r24
    4128:	99 0b       	sbc	r25, r25
    412a:	08 95       	ret

0000412c <strstr>:
    412c:	fb 01       	movw	r30, r22
    412e:	51 91       	ld	r21, Z+
    4130:	55 23       	and	r21, r21
    4132:	a9 f0       	breq	.+42     	; 0x415e <strstr+0x32>
    4134:	bf 01       	movw	r22, r30
    4136:	dc 01       	movw	r26, r24
    4138:	4d 91       	ld	r20, X+
    413a:	45 17       	cp	r20, r21
    413c:	41 11       	cpse	r20, r1
    413e:	e1 f7       	brne	.-8      	; 0x4138 <strstr+0xc>
    4140:	59 f4       	brne	.+22     	; 0x4158 <strstr+0x2c>
    4142:	cd 01       	movw	r24, r26
    4144:	01 90       	ld	r0, Z+
    4146:	00 20       	and	r0, r0
    4148:	49 f0       	breq	.+18     	; 0x415c <strstr+0x30>
    414a:	4d 91       	ld	r20, X+
    414c:	40 15       	cp	r20, r0
    414e:	41 11       	cpse	r20, r1
    4150:	c9 f3       	breq	.-14     	; 0x4144 <strstr+0x18>
    4152:	fb 01       	movw	r30, r22
    4154:	41 11       	cpse	r20, r1
    4156:	ef cf       	rjmp	.-34     	; 0x4136 <strstr+0xa>
    4158:	81 e0       	ldi	r24, 0x01	; 1
    415a:	90 e0       	ldi	r25, 0x00	; 0
    415c:	01 97       	sbiw	r24, 0x01	; 1
    415e:	08 95       	ret

00004160 <strtok_r>:
    4160:	fa 01       	movw	r30, r20
    4162:	a1 91       	ld	r26, Z+
    4164:	b0 81       	ld	r27, Z
    4166:	00 97       	sbiw	r24, 0x00	; 0
    4168:	19 f4       	brne	.+6      	; 0x4170 <strtok_r+0x10>
    416a:	10 97       	sbiw	r26, 0x00	; 0
    416c:	e1 f0       	breq	.+56     	; 0x41a6 <strtok_r+0x46>
    416e:	cd 01       	movw	r24, r26
    4170:	dc 01       	movw	r26, r24
    4172:	cd 01       	movw	r24, r26
    4174:	0d 90       	ld	r0, X+
    4176:	00 20       	and	r0, r0
    4178:	11 f4       	brne	.+4      	; 0x417e <strtok_r+0x1e>
    417a:	c0 01       	movw	r24, r0
    417c:	13 c0       	rjmp	.+38     	; 0x41a4 <strtok_r+0x44>
    417e:	fb 01       	movw	r30, r22
    4180:	21 91       	ld	r18, Z+
    4182:	22 23       	and	r18, r18
    4184:	19 f0       	breq	.+6      	; 0x418c <strtok_r+0x2c>
    4186:	20 15       	cp	r18, r0
    4188:	d9 f7       	brne	.-10     	; 0x4180 <strtok_r+0x20>
    418a:	f3 cf       	rjmp	.-26     	; 0x4172 <strtok_r+0x12>
    418c:	fb 01       	movw	r30, r22
    418e:	21 91       	ld	r18, Z+
    4190:	20 15       	cp	r18, r0
    4192:	19 f4       	brne	.+6      	; 0x419a <strtok_r+0x3a>
    4194:	1e 92       	st	-X, r1
    4196:	11 96       	adiw	r26, 0x01	; 1
    4198:	06 c0       	rjmp	.+12     	; 0x41a6 <strtok_r+0x46>
    419a:	22 23       	and	r18, r18
    419c:	c1 f7       	brne	.-16     	; 0x418e <strtok_r+0x2e>
    419e:	0d 90       	ld	r0, X+
    41a0:	00 20       	and	r0, r0
    41a2:	a1 f7       	brne	.-24     	; 0x418c <strtok_r+0x2c>
    41a4:	d0 01       	movw	r26, r0
    41a6:	fa 01       	movw	r30, r20
    41a8:	a1 93       	st	Z+, r26
    41aa:	b0 83       	st	Z, r27
    41ac:	08 95       	ret

000041ae <printf>:
    41ae:	cf 93       	push	r28
    41b0:	df 93       	push	r29
    41b2:	cd b7       	in	r28, 0x3d	; 61
    41b4:	de b7       	in	r29, 0x3e	; 62
    41b6:	ae 01       	movw	r20, r28
    41b8:	4a 5f       	subi	r20, 0xFA	; 250
    41ba:	5f 4f       	sbci	r21, 0xFF	; 255
    41bc:	fa 01       	movw	r30, r20
    41be:	61 91       	ld	r22, Z+
    41c0:	71 91       	ld	r23, Z+
    41c2:	af 01       	movw	r20, r30
    41c4:	80 91 c8 17 	lds	r24, 0x17C8
    41c8:	90 91 c9 17 	lds	r25, 0x17C9
    41cc:	62 d0       	rcall	.+196    	; 0x4292 <vfprintf>
    41ce:	df 91       	pop	r29
    41d0:	cf 91       	pop	r28
    41d2:	08 95       	ret

000041d4 <puts>:
    41d4:	0f 93       	push	r16
    41d6:	1f 93       	push	r17
    41d8:	cf 93       	push	r28
    41da:	df 93       	push	r29
    41dc:	e0 91 c8 17 	lds	r30, 0x17C8
    41e0:	f0 91 c9 17 	lds	r31, 0x17C9
    41e4:	23 81       	ldd	r18, Z+3	; 0x03
    41e6:	21 ff       	sbrs	r18, 1
    41e8:	1b c0       	rjmp	.+54     	; 0x4220 <puts+0x4c>
    41ea:	8c 01       	movw	r16, r24
    41ec:	d0 e0       	ldi	r29, 0x00	; 0
    41ee:	c0 e0       	ldi	r28, 0x00	; 0
    41f0:	f8 01       	movw	r30, r16
    41f2:	81 91       	ld	r24, Z+
    41f4:	8f 01       	movw	r16, r30
    41f6:	60 91 c8 17 	lds	r22, 0x17C8
    41fa:	70 91 c9 17 	lds	r23, 0x17C9
    41fe:	db 01       	movw	r26, r22
    4200:	18 96       	adiw	r26, 0x08	; 8
    4202:	ed 91       	ld	r30, X+
    4204:	fc 91       	ld	r31, X
    4206:	19 97       	sbiw	r26, 0x09	; 9
    4208:	88 23       	and	r24, r24
    420a:	31 f0       	breq	.+12     	; 0x4218 <puts+0x44>
    420c:	19 95       	eicall
    420e:	89 2b       	or	r24, r25
    4210:	79 f3       	breq	.-34     	; 0x41f0 <puts+0x1c>
    4212:	df ef       	ldi	r29, 0xFF	; 255
    4214:	cf ef       	ldi	r28, 0xFF	; 255
    4216:	ec cf       	rjmp	.-40     	; 0x41f0 <puts+0x1c>
    4218:	8a e0       	ldi	r24, 0x0A	; 10
    421a:	19 95       	eicall
    421c:	89 2b       	or	r24, r25
    421e:	19 f0       	breq	.+6      	; 0x4226 <puts+0x52>
    4220:	8f ef       	ldi	r24, 0xFF	; 255
    4222:	9f ef       	ldi	r25, 0xFF	; 255
    4224:	02 c0       	rjmp	.+4      	; 0x422a <puts+0x56>
    4226:	8d 2f       	mov	r24, r29
    4228:	9c 2f       	mov	r25, r28
    422a:	df 91       	pop	r29
    422c:	cf 91       	pop	r28
    422e:	1f 91       	pop	r17
    4230:	0f 91       	pop	r16
    4232:	08 95       	ret

00004234 <sprintf>:
    4234:	0f 93       	push	r16
    4236:	1f 93       	push	r17
    4238:	cf 93       	push	r28
    423a:	df 93       	push	r29
    423c:	cd b7       	in	r28, 0x3d	; 61
    423e:	de b7       	in	r29, 0x3e	; 62
    4240:	2e 97       	sbiw	r28, 0x0e	; 14
    4242:	0f b6       	in	r0, 0x3f	; 63
    4244:	f8 94       	cli
    4246:	de bf       	out	0x3e, r29	; 62
    4248:	0f be       	out	0x3f, r0	; 63
    424a:	cd bf       	out	0x3d, r28	; 61
    424c:	0e 89       	ldd	r16, Y+22	; 0x16
    424e:	1f 89       	ldd	r17, Y+23	; 0x17
    4250:	86 e0       	ldi	r24, 0x06	; 6
    4252:	8c 83       	std	Y+4, r24	; 0x04
    4254:	1a 83       	std	Y+2, r17	; 0x02
    4256:	09 83       	std	Y+1, r16	; 0x01
    4258:	8f ef       	ldi	r24, 0xFF	; 255
    425a:	9f e7       	ldi	r25, 0x7F	; 127
    425c:	9e 83       	std	Y+6, r25	; 0x06
    425e:	8d 83       	std	Y+5, r24	; 0x05
    4260:	ae 01       	movw	r20, r28
    4262:	46 5e       	subi	r20, 0xE6	; 230
    4264:	5f 4f       	sbci	r21, 0xFF	; 255
    4266:	68 8d       	ldd	r22, Y+24	; 0x18
    4268:	79 8d       	ldd	r23, Y+25	; 0x19
    426a:	ce 01       	movw	r24, r28
    426c:	01 96       	adiw	r24, 0x01	; 1
    426e:	11 d0       	rcall	.+34     	; 0x4292 <vfprintf>
    4270:	2f 81       	ldd	r18, Y+7	; 0x07
    4272:	38 85       	ldd	r19, Y+8	; 0x08
    4274:	f8 01       	movw	r30, r16
    4276:	e2 0f       	add	r30, r18
    4278:	f3 1f       	adc	r31, r19
    427a:	10 82       	st	Z, r1
    427c:	2e 96       	adiw	r28, 0x0e	; 14
    427e:	0f b6       	in	r0, 0x3f	; 63
    4280:	f8 94       	cli
    4282:	de bf       	out	0x3e, r29	; 62
    4284:	0f be       	out	0x3f, r0	; 63
    4286:	cd bf       	out	0x3d, r28	; 61
    4288:	df 91       	pop	r29
    428a:	cf 91       	pop	r28
    428c:	1f 91       	pop	r17
    428e:	0f 91       	pop	r16
    4290:	08 95       	ret

00004292 <vfprintf>:
    4292:	2f 92       	push	r2
    4294:	3f 92       	push	r3
    4296:	4f 92       	push	r4
    4298:	5f 92       	push	r5
    429a:	6f 92       	push	r6
    429c:	7f 92       	push	r7
    429e:	8f 92       	push	r8
    42a0:	9f 92       	push	r9
    42a2:	af 92       	push	r10
    42a4:	bf 92       	push	r11
    42a6:	cf 92       	push	r12
    42a8:	df 92       	push	r13
    42aa:	ef 92       	push	r14
    42ac:	ff 92       	push	r15
    42ae:	0f 93       	push	r16
    42b0:	1f 93       	push	r17
    42b2:	cf 93       	push	r28
    42b4:	df 93       	push	r29
    42b6:	cd b7       	in	r28, 0x3d	; 61
    42b8:	de b7       	in	r29, 0x3e	; 62
    42ba:	2c 97       	sbiw	r28, 0x0c	; 12
    42bc:	0f b6       	in	r0, 0x3f	; 63
    42be:	f8 94       	cli
    42c0:	de bf       	out	0x3e, r29	; 62
    42c2:	0f be       	out	0x3f, r0	; 63
    42c4:	cd bf       	out	0x3d, r28	; 61
    42c6:	7c 01       	movw	r14, r24
    42c8:	6b 01       	movw	r12, r22
    42ca:	8a 01       	movw	r16, r20
    42cc:	fc 01       	movw	r30, r24
    42ce:	17 82       	std	Z+7, r1	; 0x07
    42d0:	16 82       	std	Z+6, r1	; 0x06
    42d2:	83 81       	ldd	r24, Z+3	; 0x03
    42d4:	81 ff       	sbrs	r24, 1
    42d6:	b0 c1       	rjmp	.+864    	; 0x4638 <vfprintf+0x3a6>
    42d8:	ce 01       	movw	r24, r28
    42da:	01 96       	adiw	r24, 0x01	; 1
    42dc:	4c 01       	movw	r8, r24
    42de:	f7 01       	movw	r30, r14
    42e0:	93 81       	ldd	r25, Z+3	; 0x03
    42e2:	f6 01       	movw	r30, r12
    42e4:	93 fd       	sbrc	r25, 3
    42e6:	85 91       	lpm	r24, Z+
    42e8:	93 ff       	sbrs	r25, 3
    42ea:	81 91       	ld	r24, Z+
    42ec:	6f 01       	movw	r12, r30
    42ee:	88 23       	and	r24, r24
    42f0:	09 f4       	brne	.+2      	; 0x42f4 <vfprintf+0x62>
    42f2:	9e c1       	rjmp	.+828    	; 0x4630 <vfprintf+0x39e>
    42f4:	85 32       	cpi	r24, 0x25	; 37
    42f6:	39 f4       	brne	.+14     	; 0x4306 <vfprintf+0x74>
    42f8:	93 fd       	sbrc	r25, 3
    42fa:	85 91       	lpm	r24, Z+
    42fc:	93 ff       	sbrs	r25, 3
    42fe:	81 91       	ld	r24, Z+
    4300:	6f 01       	movw	r12, r30
    4302:	85 32       	cpi	r24, 0x25	; 37
    4304:	21 f4       	brne	.+8      	; 0x430e <vfprintf+0x7c>
    4306:	b7 01       	movw	r22, r14
    4308:	90 e0       	ldi	r25, 0x00	; 0
    430a:	c7 d1       	rcall	.+910    	; 0x469a <fputc>
    430c:	e8 cf       	rjmp	.-48     	; 0x42de <vfprintf+0x4c>
    430e:	51 2c       	mov	r5, r1
    4310:	31 2c       	mov	r3, r1
    4312:	20 e0       	ldi	r18, 0x00	; 0
    4314:	20 32       	cpi	r18, 0x20	; 32
    4316:	a0 f4       	brcc	.+40     	; 0x4340 <vfprintf+0xae>
    4318:	8b 32       	cpi	r24, 0x2B	; 43
    431a:	69 f0       	breq	.+26     	; 0x4336 <vfprintf+0xa4>
    431c:	30 f4       	brcc	.+12     	; 0x432a <vfprintf+0x98>
    431e:	80 32       	cpi	r24, 0x20	; 32
    4320:	59 f0       	breq	.+22     	; 0x4338 <vfprintf+0xa6>
    4322:	83 32       	cpi	r24, 0x23	; 35
    4324:	69 f4       	brne	.+26     	; 0x4340 <vfprintf+0xae>
    4326:	20 61       	ori	r18, 0x10	; 16
    4328:	2c c0       	rjmp	.+88     	; 0x4382 <vfprintf+0xf0>
    432a:	8d 32       	cpi	r24, 0x2D	; 45
    432c:	39 f0       	breq	.+14     	; 0x433c <vfprintf+0xaa>
    432e:	80 33       	cpi	r24, 0x30	; 48
    4330:	39 f4       	brne	.+14     	; 0x4340 <vfprintf+0xae>
    4332:	21 60       	ori	r18, 0x01	; 1
    4334:	26 c0       	rjmp	.+76     	; 0x4382 <vfprintf+0xf0>
    4336:	22 60       	ori	r18, 0x02	; 2
    4338:	24 60       	ori	r18, 0x04	; 4
    433a:	23 c0       	rjmp	.+70     	; 0x4382 <vfprintf+0xf0>
    433c:	28 60       	ori	r18, 0x08	; 8
    433e:	21 c0       	rjmp	.+66     	; 0x4382 <vfprintf+0xf0>
    4340:	27 fd       	sbrc	r18, 7
    4342:	27 c0       	rjmp	.+78     	; 0x4392 <vfprintf+0x100>
    4344:	30 ed       	ldi	r19, 0xD0	; 208
    4346:	38 0f       	add	r19, r24
    4348:	3a 30       	cpi	r19, 0x0A	; 10
    434a:	78 f4       	brcc	.+30     	; 0x436a <vfprintf+0xd8>
    434c:	26 ff       	sbrs	r18, 6
    434e:	06 c0       	rjmp	.+12     	; 0x435c <vfprintf+0xca>
    4350:	fa e0       	ldi	r31, 0x0A	; 10
    4352:	5f 9e       	mul	r5, r31
    4354:	30 0d       	add	r19, r0
    4356:	11 24       	eor	r1, r1
    4358:	53 2e       	mov	r5, r19
    435a:	13 c0       	rjmp	.+38     	; 0x4382 <vfprintf+0xf0>
    435c:	8a e0       	ldi	r24, 0x0A	; 10
    435e:	38 9e       	mul	r3, r24
    4360:	30 0d       	add	r19, r0
    4362:	11 24       	eor	r1, r1
    4364:	33 2e       	mov	r3, r19
    4366:	20 62       	ori	r18, 0x20	; 32
    4368:	0c c0       	rjmp	.+24     	; 0x4382 <vfprintf+0xf0>
    436a:	8e 32       	cpi	r24, 0x2E	; 46
    436c:	21 f4       	brne	.+8      	; 0x4376 <vfprintf+0xe4>
    436e:	26 fd       	sbrc	r18, 6
    4370:	5f c1       	rjmp	.+702    	; 0x4630 <vfprintf+0x39e>
    4372:	20 64       	ori	r18, 0x40	; 64
    4374:	06 c0       	rjmp	.+12     	; 0x4382 <vfprintf+0xf0>
    4376:	8c 36       	cpi	r24, 0x6C	; 108
    4378:	11 f4       	brne	.+4      	; 0x437e <vfprintf+0xec>
    437a:	20 68       	ori	r18, 0x80	; 128
    437c:	02 c0       	rjmp	.+4      	; 0x4382 <vfprintf+0xf0>
    437e:	88 36       	cpi	r24, 0x68	; 104
    4380:	41 f4       	brne	.+16     	; 0x4392 <vfprintf+0x100>
    4382:	f6 01       	movw	r30, r12
    4384:	93 fd       	sbrc	r25, 3
    4386:	85 91       	lpm	r24, Z+
    4388:	93 ff       	sbrs	r25, 3
    438a:	81 91       	ld	r24, Z+
    438c:	6f 01       	movw	r12, r30
    438e:	81 11       	cpse	r24, r1
    4390:	c1 cf       	rjmp	.-126    	; 0x4314 <vfprintf+0x82>
    4392:	98 2f       	mov	r25, r24
    4394:	9f 7d       	andi	r25, 0xDF	; 223
    4396:	95 54       	subi	r25, 0x45	; 69
    4398:	93 30       	cpi	r25, 0x03	; 3
    439a:	28 f4       	brcc	.+10     	; 0x43a6 <vfprintf+0x114>
    439c:	0c 5f       	subi	r16, 0xFC	; 252
    439e:	1f 4f       	sbci	r17, 0xFF	; 255
    43a0:	ff e3       	ldi	r31, 0x3F	; 63
    43a2:	f9 83       	std	Y+1, r31	; 0x01
    43a4:	0d c0       	rjmp	.+26     	; 0x43c0 <vfprintf+0x12e>
    43a6:	83 36       	cpi	r24, 0x63	; 99
    43a8:	31 f0       	breq	.+12     	; 0x43b6 <vfprintf+0x124>
    43aa:	83 37       	cpi	r24, 0x73	; 115
    43ac:	71 f0       	breq	.+28     	; 0x43ca <vfprintf+0x138>
    43ae:	83 35       	cpi	r24, 0x53	; 83
    43b0:	09 f0       	breq	.+2      	; 0x43b4 <vfprintf+0x122>
    43b2:	57 c0       	rjmp	.+174    	; 0x4462 <vfprintf+0x1d0>
    43b4:	21 c0       	rjmp	.+66     	; 0x43f8 <vfprintf+0x166>
    43b6:	f8 01       	movw	r30, r16
    43b8:	80 81       	ld	r24, Z
    43ba:	89 83       	std	Y+1, r24	; 0x01
    43bc:	0e 5f       	subi	r16, 0xFE	; 254
    43be:	1f 4f       	sbci	r17, 0xFF	; 255
    43c0:	44 24       	eor	r4, r4
    43c2:	43 94       	inc	r4
    43c4:	51 2c       	mov	r5, r1
    43c6:	54 01       	movw	r10, r8
    43c8:	14 c0       	rjmp	.+40     	; 0x43f2 <vfprintf+0x160>
    43ca:	38 01       	movw	r6, r16
    43cc:	f2 e0       	ldi	r31, 0x02	; 2
    43ce:	6f 0e       	add	r6, r31
    43d0:	71 1c       	adc	r7, r1
    43d2:	f8 01       	movw	r30, r16
    43d4:	a0 80       	ld	r10, Z
    43d6:	b1 80       	ldd	r11, Z+1	; 0x01
    43d8:	26 ff       	sbrs	r18, 6
    43da:	03 c0       	rjmp	.+6      	; 0x43e2 <vfprintf+0x150>
    43dc:	65 2d       	mov	r22, r5
    43de:	70 e0       	ldi	r23, 0x00	; 0
    43e0:	02 c0       	rjmp	.+4      	; 0x43e6 <vfprintf+0x154>
    43e2:	6f ef       	ldi	r22, 0xFF	; 255
    43e4:	7f ef       	ldi	r23, 0xFF	; 255
    43e6:	c5 01       	movw	r24, r10
    43e8:	2c 87       	std	Y+12, r18	; 0x0c
    43ea:	4c d1       	rcall	.+664    	; 0x4684 <strnlen>
    43ec:	2c 01       	movw	r4, r24
    43ee:	83 01       	movw	r16, r6
    43f0:	2c 85       	ldd	r18, Y+12	; 0x0c
    43f2:	2f 77       	andi	r18, 0x7F	; 127
    43f4:	22 2e       	mov	r2, r18
    43f6:	16 c0       	rjmp	.+44     	; 0x4424 <vfprintf+0x192>
    43f8:	38 01       	movw	r6, r16
    43fa:	f2 e0       	ldi	r31, 0x02	; 2
    43fc:	6f 0e       	add	r6, r31
    43fe:	71 1c       	adc	r7, r1
    4400:	f8 01       	movw	r30, r16
    4402:	a0 80       	ld	r10, Z
    4404:	b1 80       	ldd	r11, Z+1	; 0x01
    4406:	26 ff       	sbrs	r18, 6
    4408:	03 c0       	rjmp	.+6      	; 0x4410 <vfprintf+0x17e>
    440a:	65 2d       	mov	r22, r5
    440c:	70 e0       	ldi	r23, 0x00	; 0
    440e:	02 c0       	rjmp	.+4      	; 0x4414 <vfprintf+0x182>
    4410:	6f ef       	ldi	r22, 0xFF	; 255
    4412:	7f ef       	ldi	r23, 0xFF	; 255
    4414:	c5 01       	movw	r24, r10
    4416:	2c 87       	std	Y+12, r18	; 0x0c
    4418:	2a d1       	rcall	.+596    	; 0x466e <strnlen_P>
    441a:	2c 01       	movw	r4, r24
    441c:	2c 85       	ldd	r18, Y+12	; 0x0c
    441e:	20 68       	ori	r18, 0x80	; 128
    4420:	22 2e       	mov	r2, r18
    4422:	83 01       	movw	r16, r6
    4424:	23 fc       	sbrc	r2, 3
    4426:	19 c0       	rjmp	.+50     	; 0x445a <vfprintf+0x1c8>
    4428:	83 2d       	mov	r24, r3
    442a:	90 e0       	ldi	r25, 0x00	; 0
    442c:	48 16       	cp	r4, r24
    442e:	59 06       	cpc	r5, r25
    4430:	a0 f4       	brcc	.+40     	; 0x445a <vfprintf+0x1c8>
    4432:	b7 01       	movw	r22, r14
    4434:	80 e2       	ldi	r24, 0x20	; 32
    4436:	90 e0       	ldi	r25, 0x00	; 0
    4438:	30 d1       	rcall	.+608    	; 0x469a <fputc>
    443a:	3a 94       	dec	r3
    443c:	f5 cf       	rjmp	.-22     	; 0x4428 <vfprintf+0x196>
    443e:	f5 01       	movw	r30, r10
    4440:	27 fc       	sbrc	r2, 7
    4442:	85 91       	lpm	r24, Z+
    4444:	27 fe       	sbrs	r2, 7
    4446:	81 91       	ld	r24, Z+
    4448:	5f 01       	movw	r10, r30
    444a:	b7 01       	movw	r22, r14
    444c:	90 e0       	ldi	r25, 0x00	; 0
    444e:	25 d1       	rcall	.+586    	; 0x469a <fputc>
    4450:	31 10       	cpse	r3, r1
    4452:	3a 94       	dec	r3
    4454:	f1 e0       	ldi	r31, 0x01	; 1
    4456:	4f 1a       	sub	r4, r31
    4458:	51 08       	sbc	r5, r1
    445a:	41 14       	cp	r4, r1
    445c:	51 04       	cpc	r5, r1
    445e:	79 f7       	brne	.-34     	; 0x443e <vfprintf+0x1ac>
    4460:	de c0       	rjmp	.+444    	; 0x461e <vfprintf+0x38c>
    4462:	84 36       	cpi	r24, 0x64	; 100
    4464:	11 f0       	breq	.+4      	; 0x446a <vfprintf+0x1d8>
    4466:	89 36       	cpi	r24, 0x69	; 105
    4468:	31 f5       	brne	.+76     	; 0x44b6 <vfprintf+0x224>
    446a:	f8 01       	movw	r30, r16
    446c:	27 ff       	sbrs	r18, 7
    446e:	07 c0       	rjmp	.+14     	; 0x447e <vfprintf+0x1ec>
    4470:	60 81       	ld	r22, Z
    4472:	71 81       	ldd	r23, Z+1	; 0x01
    4474:	82 81       	ldd	r24, Z+2	; 0x02
    4476:	93 81       	ldd	r25, Z+3	; 0x03
    4478:	0c 5f       	subi	r16, 0xFC	; 252
    447a:	1f 4f       	sbci	r17, 0xFF	; 255
    447c:	08 c0       	rjmp	.+16     	; 0x448e <vfprintf+0x1fc>
    447e:	60 81       	ld	r22, Z
    4480:	71 81       	ldd	r23, Z+1	; 0x01
    4482:	07 2e       	mov	r0, r23
    4484:	00 0c       	add	r0, r0
    4486:	88 0b       	sbc	r24, r24
    4488:	99 0b       	sbc	r25, r25
    448a:	0e 5f       	subi	r16, 0xFE	; 254
    448c:	1f 4f       	sbci	r17, 0xFF	; 255
    448e:	2f 76       	andi	r18, 0x6F	; 111
    4490:	72 2e       	mov	r7, r18
    4492:	97 ff       	sbrs	r25, 7
    4494:	09 c0       	rjmp	.+18     	; 0x44a8 <vfprintf+0x216>
    4496:	90 95       	com	r25
    4498:	80 95       	com	r24
    449a:	70 95       	com	r23
    449c:	61 95       	neg	r22
    449e:	7f 4f       	sbci	r23, 0xFF	; 255
    44a0:	8f 4f       	sbci	r24, 0xFF	; 255
    44a2:	9f 4f       	sbci	r25, 0xFF	; 255
    44a4:	20 68       	ori	r18, 0x80	; 128
    44a6:	72 2e       	mov	r7, r18
    44a8:	2a e0       	ldi	r18, 0x0A	; 10
    44aa:	30 e0       	ldi	r19, 0x00	; 0
    44ac:	a4 01       	movw	r20, r8
    44ae:	2d d1       	rcall	.+602    	; 0x470a <__ultoa_invert>
    44b0:	a8 2e       	mov	r10, r24
    44b2:	a8 18       	sub	r10, r8
    44b4:	43 c0       	rjmp	.+134    	; 0x453c <vfprintf+0x2aa>
    44b6:	85 37       	cpi	r24, 0x75	; 117
    44b8:	29 f4       	brne	.+10     	; 0x44c4 <vfprintf+0x232>
    44ba:	2f 7e       	andi	r18, 0xEF	; 239
    44bc:	b2 2e       	mov	r11, r18
    44be:	2a e0       	ldi	r18, 0x0A	; 10
    44c0:	30 e0       	ldi	r19, 0x00	; 0
    44c2:	25 c0       	rjmp	.+74     	; 0x450e <vfprintf+0x27c>
    44c4:	f2 2f       	mov	r31, r18
    44c6:	f9 7f       	andi	r31, 0xF9	; 249
    44c8:	bf 2e       	mov	r11, r31
    44ca:	8f 36       	cpi	r24, 0x6F	; 111
    44cc:	c1 f0       	breq	.+48     	; 0x44fe <vfprintf+0x26c>
    44ce:	18 f4       	brcc	.+6      	; 0x44d6 <vfprintf+0x244>
    44d0:	88 35       	cpi	r24, 0x58	; 88
    44d2:	79 f0       	breq	.+30     	; 0x44f2 <vfprintf+0x260>
    44d4:	ad c0       	rjmp	.+346    	; 0x4630 <vfprintf+0x39e>
    44d6:	80 37       	cpi	r24, 0x70	; 112
    44d8:	19 f0       	breq	.+6      	; 0x44e0 <vfprintf+0x24e>
    44da:	88 37       	cpi	r24, 0x78	; 120
    44dc:	21 f0       	breq	.+8      	; 0x44e6 <vfprintf+0x254>
    44de:	a8 c0       	rjmp	.+336    	; 0x4630 <vfprintf+0x39e>
    44e0:	2f 2f       	mov	r18, r31
    44e2:	20 61       	ori	r18, 0x10	; 16
    44e4:	b2 2e       	mov	r11, r18
    44e6:	b4 fe       	sbrs	r11, 4
    44e8:	0d c0       	rjmp	.+26     	; 0x4504 <vfprintf+0x272>
    44ea:	8b 2d       	mov	r24, r11
    44ec:	84 60       	ori	r24, 0x04	; 4
    44ee:	b8 2e       	mov	r11, r24
    44f0:	09 c0       	rjmp	.+18     	; 0x4504 <vfprintf+0x272>
    44f2:	24 ff       	sbrs	r18, 4
    44f4:	0a c0       	rjmp	.+20     	; 0x450a <vfprintf+0x278>
    44f6:	9f 2f       	mov	r25, r31
    44f8:	96 60       	ori	r25, 0x06	; 6
    44fa:	b9 2e       	mov	r11, r25
    44fc:	06 c0       	rjmp	.+12     	; 0x450a <vfprintf+0x278>
    44fe:	28 e0       	ldi	r18, 0x08	; 8
    4500:	30 e0       	ldi	r19, 0x00	; 0
    4502:	05 c0       	rjmp	.+10     	; 0x450e <vfprintf+0x27c>
    4504:	20 e1       	ldi	r18, 0x10	; 16
    4506:	30 e0       	ldi	r19, 0x00	; 0
    4508:	02 c0       	rjmp	.+4      	; 0x450e <vfprintf+0x27c>
    450a:	20 e1       	ldi	r18, 0x10	; 16
    450c:	32 e0       	ldi	r19, 0x02	; 2
    450e:	f8 01       	movw	r30, r16
    4510:	b7 fe       	sbrs	r11, 7
    4512:	07 c0       	rjmp	.+14     	; 0x4522 <vfprintf+0x290>
    4514:	60 81       	ld	r22, Z
    4516:	71 81       	ldd	r23, Z+1	; 0x01
    4518:	82 81       	ldd	r24, Z+2	; 0x02
    451a:	93 81       	ldd	r25, Z+3	; 0x03
    451c:	0c 5f       	subi	r16, 0xFC	; 252
    451e:	1f 4f       	sbci	r17, 0xFF	; 255
    4520:	06 c0       	rjmp	.+12     	; 0x452e <vfprintf+0x29c>
    4522:	60 81       	ld	r22, Z
    4524:	71 81       	ldd	r23, Z+1	; 0x01
    4526:	80 e0       	ldi	r24, 0x00	; 0
    4528:	90 e0       	ldi	r25, 0x00	; 0
    452a:	0e 5f       	subi	r16, 0xFE	; 254
    452c:	1f 4f       	sbci	r17, 0xFF	; 255
    452e:	a4 01       	movw	r20, r8
    4530:	ec d0       	rcall	.+472    	; 0x470a <__ultoa_invert>
    4532:	a8 2e       	mov	r10, r24
    4534:	a8 18       	sub	r10, r8
    4536:	fb 2d       	mov	r31, r11
    4538:	ff 77       	andi	r31, 0x7F	; 127
    453a:	7f 2e       	mov	r7, r31
    453c:	76 fe       	sbrs	r7, 6
    453e:	0b c0       	rjmp	.+22     	; 0x4556 <vfprintf+0x2c4>
    4540:	37 2d       	mov	r19, r7
    4542:	3e 7f       	andi	r19, 0xFE	; 254
    4544:	a5 14       	cp	r10, r5
    4546:	50 f4       	brcc	.+20     	; 0x455c <vfprintf+0x2ca>
    4548:	74 fe       	sbrs	r7, 4
    454a:	0a c0       	rjmp	.+20     	; 0x4560 <vfprintf+0x2ce>
    454c:	72 fc       	sbrc	r7, 2
    454e:	08 c0       	rjmp	.+16     	; 0x4560 <vfprintf+0x2ce>
    4550:	37 2d       	mov	r19, r7
    4552:	3e 7e       	andi	r19, 0xEE	; 238
    4554:	05 c0       	rjmp	.+10     	; 0x4560 <vfprintf+0x2ce>
    4556:	ba 2c       	mov	r11, r10
    4558:	37 2d       	mov	r19, r7
    455a:	03 c0       	rjmp	.+6      	; 0x4562 <vfprintf+0x2d0>
    455c:	ba 2c       	mov	r11, r10
    455e:	01 c0       	rjmp	.+2      	; 0x4562 <vfprintf+0x2d0>
    4560:	b5 2c       	mov	r11, r5
    4562:	34 ff       	sbrs	r19, 4
    4564:	0d c0       	rjmp	.+26     	; 0x4580 <vfprintf+0x2ee>
    4566:	fe 01       	movw	r30, r28
    4568:	ea 0d       	add	r30, r10
    456a:	f1 1d       	adc	r31, r1
    456c:	80 81       	ld	r24, Z
    456e:	80 33       	cpi	r24, 0x30	; 48
    4570:	11 f4       	brne	.+4      	; 0x4576 <vfprintf+0x2e4>
    4572:	39 7e       	andi	r19, 0xE9	; 233
    4574:	09 c0       	rjmp	.+18     	; 0x4588 <vfprintf+0x2f6>
    4576:	32 ff       	sbrs	r19, 2
    4578:	06 c0       	rjmp	.+12     	; 0x4586 <vfprintf+0x2f4>
    457a:	b3 94       	inc	r11
    457c:	b3 94       	inc	r11
    457e:	04 c0       	rjmp	.+8      	; 0x4588 <vfprintf+0x2f6>
    4580:	83 2f       	mov	r24, r19
    4582:	86 78       	andi	r24, 0x86	; 134
    4584:	09 f0       	breq	.+2      	; 0x4588 <vfprintf+0x2f6>
    4586:	b3 94       	inc	r11
    4588:	33 fd       	sbrc	r19, 3
    458a:	12 c0       	rjmp	.+36     	; 0x45b0 <vfprintf+0x31e>
    458c:	30 ff       	sbrs	r19, 0
    458e:	06 c0       	rjmp	.+12     	; 0x459c <vfprintf+0x30a>
    4590:	5a 2c       	mov	r5, r10
    4592:	b3 14       	cp	r11, r3
    4594:	18 f4       	brcc	.+6      	; 0x459c <vfprintf+0x30a>
    4596:	53 0c       	add	r5, r3
    4598:	5b 18       	sub	r5, r11
    459a:	b3 2c       	mov	r11, r3
    459c:	b3 14       	cp	r11, r3
    459e:	60 f4       	brcc	.+24     	; 0x45b8 <vfprintf+0x326>
    45a0:	b7 01       	movw	r22, r14
    45a2:	80 e2       	ldi	r24, 0x20	; 32
    45a4:	90 e0       	ldi	r25, 0x00	; 0
    45a6:	3c 87       	std	Y+12, r19	; 0x0c
    45a8:	78 d0       	rcall	.+240    	; 0x469a <fputc>
    45aa:	b3 94       	inc	r11
    45ac:	3c 85       	ldd	r19, Y+12	; 0x0c
    45ae:	f6 cf       	rjmp	.-20     	; 0x459c <vfprintf+0x30a>
    45b0:	b3 14       	cp	r11, r3
    45b2:	10 f4       	brcc	.+4      	; 0x45b8 <vfprintf+0x326>
    45b4:	3b 18       	sub	r3, r11
    45b6:	01 c0       	rjmp	.+2      	; 0x45ba <vfprintf+0x328>
    45b8:	31 2c       	mov	r3, r1
    45ba:	34 ff       	sbrs	r19, 4
    45bc:	11 c0       	rjmp	.+34     	; 0x45e0 <vfprintf+0x34e>
    45be:	b7 01       	movw	r22, r14
    45c0:	80 e3       	ldi	r24, 0x30	; 48
    45c2:	90 e0       	ldi	r25, 0x00	; 0
    45c4:	3c 87       	std	Y+12, r19	; 0x0c
    45c6:	69 d0       	rcall	.+210    	; 0x469a <fputc>
    45c8:	3c 85       	ldd	r19, Y+12	; 0x0c
    45ca:	32 ff       	sbrs	r19, 2
    45cc:	16 c0       	rjmp	.+44     	; 0x45fa <vfprintf+0x368>
    45ce:	31 fd       	sbrc	r19, 1
    45d0:	03 c0       	rjmp	.+6      	; 0x45d8 <vfprintf+0x346>
    45d2:	88 e7       	ldi	r24, 0x78	; 120
    45d4:	90 e0       	ldi	r25, 0x00	; 0
    45d6:	02 c0       	rjmp	.+4      	; 0x45dc <vfprintf+0x34a>
    45d8:	88 e5       	ldi	r24, 0x58	; 88
    45da:	90 e0       	ldi	r25, 0x00	; 0
    45dc:	b7 01       	movw	r22, r14
    45de:	0c c0       	rjmp	.+24     	; 0x45f8 <vfprintf+0x366>
    45e0:	83 2f       	mov	r24, r19
    45e2:	86 78       	andi	r24, 0x86	; 134
    45e4:	51 f0       	breq	.+20     	; 0x45fa <vfprintf+0x368>
    45e6:	31 ff       	sbrs	r19, 1
    45e8:	02 c0       	rjmp	.+4      	; 0x45ee <vfprintf+0x35c>
    45ea:	8b e2       	ldi	r24, 0x2B	; 43
    45ec:	01 c0       	rjmp	.+2      	; 0x45f0 <vfprintf+0x35e>
    45ee:	80 e2       	ldi	r24, 0x20	; 32
    45f0:	37 fd       	sbrc	r19, 7
    45f2:	8d e2       	ldi	r24, 0x2D	; 45
    45f4:	b7 01       	movw	r22, r14
    45f6:	90 e0       	ldi	r25, 0x00	; 0
    45f8:	50 d0       	rcall	.+160    	; 0x469a <fputc>
    45fa:	a5 14       	cp	r10, r5
    45fc:	30 f4       	brcc	.+12     	; 0x460a <vfprintf+0x378>
    45fe:	b7 01       	movw	r22, r14
    4600:	80 e3       	ldi	r24, 0x30	; 48
    4602:	90 e0       	ldi	r25, 0x00	; 0
    4604:	4a d0       	rcall	.+148    	; 0x469a <fputc>
    4606:	5a 94       	dec	r5
    4608:	f8 cf       	rjmp	.-16     	; 0x45fa <vfprintf+0x368>
    460a:	aa 94       	dec	r10
    460c:	f4 01       	movw	r30, r8
    460e:	ea 0d       	add	r30, r10
    4610:	f1 1d       	adc	r31, r1
    4612:	80 81       	ld	r24, Z
    4614:	b7 01       	movw	r22, r14
    4616:	90 e0       	ldi	r25, 0x00	; 0
    4618:	40 d0       	rcall	.+128    	; 0x469a <fputc>
    461a:	a1 10       	cpse	r10, r1
    461c:	f6 cf       	rjmp	.-20     	; 0x460a <vfprintf+0x378>
    461e:	33 20       	and	r3, r3
    4620:	09 f4       	brne	.+2      	; 0x4624 <vfprintf+0x392>
    4622:	5d ce       	rjmp	.-838    	; 0x42de <vfprintf+0x4c>
    4624:	b7 01       	movw	r22, r14
    4626:	80 e2       	ldi	r24, 0x20	; 32
    4628:	90 e0       	ldi	r25, 0x00	; 0
    462a:	37 d0       	rcall	.+110    	; 0x469a <fputc>
    462c:	3a 94       	dec	r3
    462e:	f7 cf       	rjmp	.-18     	; 0x461e <vfprintf+0x38c>
    4630:	f7 01       	movw	r30, r14
    4632:	86 81       	ldd	r24, Z+6	; 0x06
    4634:	97 81       	ldd	r25, Z+7	; 0x07
    4636:	02 c0       	rjmp	.+4      	; 0x463c <vfprintf+0x3aa>
    4638:	8f ef       	ldi	r24, 0xFF	; 255
    463a:	9f ef       	ldi	r25, 0xFF	; 255
    463c:	2c 96       	adiw	r28, 0x0c	; 12
    463e:	0f b6       	in	r0, 0x3f	; 63
    4640:	f8 94       	cli
    4642:	de bf       	out	0x3e, r29	; 62
    4644:	0f be       	out	0x3f, r0	; 63
    4646:	cd bf       	out	0x3d, r28	; 61
    4648:	df 91       	pop	r29
    464a:	cf 91       	pop	r28
    464c:	1f 91       	pop	r17
    464e:	0f 91       	pop	r16
    4650:	ff 90       	pop	r15
    4652:	ef 90       	pop	r14
    4654:	df 90       	pop	r13
    4656:	cf 90       	pop	r12
    4658:	bf 90       	pop	r11
    465a:	af 90       	pop	r10
    465c:	9f 90       	pop	r9
    465e:	8f 90       	pop	r8
    4660:	7f 90       	pop	r7
    4662:	6f 90       	pop	r6
    4664:	5f 90       	pop	r5
    4666:	4f 90       	pop	r4
    4668:	3f 90       	pop	r3
    466a:	2f 90       	pop	r2
    466c:	08 95       	ret

0000466e <strnlen_P>:
    466e:	fc 01       	movw	r30, r24
    4670:	05 90       	lpm	r0, Z+
    4672:	61 50       	subi	r22, 0x01	; 1
    4674:	70 40       	sbci	r23, 0x00	; 0
    4676:	01 10       	cpse	r0, r1
    4678:	d8 f7       	brcc	.-10     	; 0x4670 <strnlen_P+0x2>
    467a:	80 95       	com	r24
    467c:	90 95       	com	r25
    467e:	8e 0f       	add	r24, r30
    4680:	9f 1f       	adc	r25, r31
    4682:	08 95       	ret

00004684 <strnlen>:
    4684:	fc 01       	movw	r30, r24
    4686:	61 50       	subi	r22, 0x01	; 1
    4688:	70 40       	sbci	r23, 0x00	; 0
    468a:	01 90       	ld	r0, Z+
    468c:	01 10       	cpse	r0, r1
    468e:	d8 f7       	brcc	.-10     	; 0x4686 <strnlen+0x2>
    4690:	80 95       	com	r24
    4692:	90 95       	com	r25
    4694:	8e 0f       	add	r24, r30
    4696:	9f 1f       	adc	r25, r31
    4698:	08 95       	ret

0000469a <fputc>:
    469a:	0f 93       	push	r16
    469c:	1f 93       	push	r17
    469e:	cf 93       	push	r28
    46a0:	df 93       	push	r29
    46a2:	fb 01       	movw	r30, r22
    46a4:	23 81       	ldd	r18, Z+3	; 0x03
    46a6:	21 fd       	sbrc	r18, 1
    46a8:	03 c0       	rjmp	.+6      	; 0x46b0 <fputc+0x16>
    46aa:	8f ef       	ldi	r24, 0xFF	; 255
    46ac:	9f ef       	ldi	r25, 0xFF	; 255
    46ae:	28 c0       	rjmp	.+80     	; 0x4700 <fputc+0x66>
    46b0:	22 ff       	sbrs	r18, 2
    46b2:	16 c0       	rjmp	.+44     	; 0x46e0 <fputc+0x46>
    46b4:	46 81       	ldd	r20, Z+6	; 0x06
    46b6:	57 81       	ldd	r21, Z+7	; 0x07
    46b8:	24 81       	ldd	r18, Z+4	; 0x04
    46ba:	35 81       	ldd	r19, Z+5	; 0x05
    46bc:	42 17       	cp	r20, r18
    46be:	53 07       	cpc	r21, r19
    46c0:	44 f4       	brge	.+16     	; 0x46d2 <fputc+0x38>
    46c2:	a0 81       	ld	r26, Z
    46c4:	b1 81       	ldd	r27, Z+1	; 0x01
    46c6:	9d 01       	movw	r18, r26
    46c8:	2f 5f       	subi	r18, 0xFF	; 255
    46ca:	3f 4f       	sbci	r19, 0xFF	; 255
    46cc:	31 83       	std	Z+1, r19	; 0x01
    46ce:	20 83       	st	Z, r18
    46d0:	8c 93       	st	X, r24
    46d2:	26 81       	ldd	r18, Z+6	; 0x06
    46d4:	37 81       	ldd	r19, Z+7	; 0x07
    46d6:	2f 5f       	subi	r18, 0xFF	; 255
    46d8:	3f 4f       	sbci	r19, 0xFF	; 255
    46da:	37 83       	std	Z+7, r19	; 0x07
    46dc:	26 83       	std	Z+6, r18	; 0x06
    46de:	10 c0       	rjmp	.+32     	; 0x4700 <fputc+0x66>
    46e0:	eb 01       	movw	r28, r22
    46e2:	09 2f       	mov	r16, r25
    46e4:	18 2f       	mov	r17, r24
    46e6:	00 84       	ldd	r0, Z+8	; 0x08
    46e8:	f1 85       	ldd	r31, Z+9	; 0x09
    46ea:	e0 2d       	mov	r30, r0
    46ec:	19 95       	eicall
    46ee:	89 2b       	or	r24, r25
    46f0:	e1 f6       	brne	.-72     	; 0x46aa <fputc+0x10>
    46f2:	8e 81       	ldd	r24, Y+6	; 0x06
    46f4:	9f 81       	ldd	r25, Y+7	; 0x07
    46f6:	01 96       	adiw	r24, 0x01	; 1
    46f8:	9f 83       	std	Y+7, r25	; 0x07
    46fa:	8e 83       	std	Y+6, r24	; 0x06
    46fc:	81 2f       	mov	r24, r17
    46fe:	90 2f       	mov	r25, r16
    4700:	df 91       	pop	r29
    4702:	cf 91       	pop	r28
    4704:	1f 91       	pop	r17
    4706:	0f 91       	pop	r16
    4708:	08 95       	ret

0000470a <__ultoa_invert>:
    470a:	fa 01       	movw	r30, r20
    470c:	aa 27       	eor	r26, r26
    470e:	28 30       	cpi	r18, 0x08	; 8
    4710:	51 f1       	breq	.+84     	; 0x4766 <__ultoa_invert+0x5c>
    4712:	20 31       	cpi	r18, 0x10	; 16
    4714:	81 f1       	breq	.+96     	; 0x4776 <__ultoa_invert+0x6c>
    4716:	e8 94       	clt
    4718:	6f 93       	push	r22
    471a:	6e 7f       	andi	r22, 0xFE	; 254
    471c:	6e 5f       	subi	r22, 0xFE	; 254
    471e:	7f 4f       	sbci	r23, 0xFF	; 255
    4720:	8f 4f       	sbci	r24, 0xFF	; 255
    4722:	9f 4f       	sbci	r25, 0xFF	; 255
    4724:	af 4f       	sbci	r26, 0xFF	; 255
    4726:	b1 e0       	ldi	r27, 0x01	; 1
    4728:	3e d0       	rcall	.+124    	; 0x47a6 <__ultoa_invert+0x9c>
    472a:	b4 e0       	ldi	r27, 0x04	; 4
    472c:	3c d0       	rcall	.+120    	; 0x47a6 <__ultoa_invert+0x9c>
    472e:	67 0f       	add	r22, r23
    4730:	78 1f       	adc	r23, r24
    4732:	89 1f       	adc	r24, r25
    4734:	9a 1f       	adc	r25, r26
    4736:	a1 1d       	adc	r26, r1
    4738:	68 0f       	add	r22, r24
    473a:	79 1f       	adc	r23, r25
    473c:	8a 1f       	adc	r24, r26
    473e:	91 1d       	adc	r25, r1
    4740:	a1 1d       	adc	r26, r1
    4742:	6a 0f       	add	r22, r26
    4744:	71 1d       	adc	r23, r1
    4746:	81 1d       	adc	r24, r1
    4748:	91 1d       	adc	r25, r1
    474a:	a1 1d       	adc	r26, r1
    474c:	20 d0       	rcall	.+64     	; 0x478e <__ultoa_invert+0x84>
    474e:	09 f4       	brne	.+2      	; 0x4752 <__ultoa_invert+0x48>
    4750:	68 94       	set
    4752:	3f 91       	pop	r19
    4754:	2a e0       	ldi	r18, 0x0A	; 10
    4756:	26 9f       	mul	r18, r22
    4758:	11 24       	eor	r1, r1
    475a:	30 19       	sub	r19, r0
    475c:	30 5d       	subi	r19, 0xD0	; 208
    475e:	31 93       	st	Z+, r19
    4760:	de f6       	brtc	.-74     	; 0x4718 <__ultoa_invert+0xe>
    4762:	cf 01       	movw	r24, r30
    4764:	08 95       	ret
    4766:	46 2f       	mov	r20, r22
    4768:	47 70       	andi	r20, 0x07	; 7
    476a:	40 5d       	subi	r20, 0xD0	; 208
    476c:	41 93       	st	Z+, r20
    476e:	b3 e0       	ldi	r27, 0x03	; 3
    4770:	0f d0       	rcall	.+30     	; 0x4790 <__ultoa_invert+0x86>
    4772:	c9 f7       	brne	.-14     	; 0x4766 <__ultoa_invert+0x5c>
    4774:	f6 cf       	rjmp	.-20     	; 0x4762 <__ultoa_invert+0x58>
    4776:	46 2f       	mov	r20, r22
    4778:	4f 70       	andi	r20, 0x0F	; 15
    477a:	40 5d       	subi	r20, 0xD0	; 208
    477c:	4a 33       	cpi	r20, 0x3A	; 58
    477e:	18 f0       	brcs	.+6      	; 0x4786 <__ultoa_invert+0x7c>
    4780:	49 5d       	subi	r20, 0xD9	; 217
    4782:	31 fd       	sbrc	r19, 1
    4784:	40 52       	subi	r20, 0x20	; 32
    4786:	41 93       	st	Z+, r20
    4788:	02 d0       	rcall	.+4      	; 0x478e <__ultoa_invert+0x84>
    478a:	a9 f7       	brne	.-22     	; 0x4776 <__ultoa_invert+0x6c>
    478c:	ea cf       	rjmp	.-44     	; 0x4762 <__ultoa_invert+0x58>
    478e:	b4 e0       	ldi	r27, 0x04	; 4
    4790:	a6 95       	lsr	r26
    4792:	97 95       	ror	r25
    4794:	87 95       	ror	r24
    4796:	77 95       	ror	r23
    4798:	67 95       	ror	r22
    479a:	ba 95       	dec	r27
    479c:	c9 f7       	brne	.-14     	; 0x4790 <__ultoa_invert+0x86>
    479e:	00 97       	sbiw	r24, 0x00	; 0
    47a0:	61 05       	cpc	r22, r1
    47a2:	71 05       	cpc	r23, r1
    47a4:	08 95       	ret
    47a6:	9b 01       	movw	r18, r22
    47a8:	ac 01       	movw	r20, r24
    47aa:	0a 2e       	mov	r0, r26
    47ac:	06 94       	lsr	r0
    47ae:	57 95       	ror	r21
    47b0:	47 95       	ror	r20
    47b2:	37 95       	ror	r19
    47b4:	27 95       	ror	r18
    47b6:	ba 95       	dec	r27
    47b8:	c9 f7       	brne	.-14     	; 0x47ac <__ultoa_invert+0xa2>
    47ba:	62 0f       	add	r22, r18
    47bc:	73 1f       	adc	r23, r19
    47be:	84 1f       	adc	r24, r20
    47c0:	95 1f       	adc	r25, r21
    47c2:	a0 1d       	adc	r26, r0
    47c4:	08 95       	ret

000047c6 <_exit>:
    47c6:	f8 94       	cli

000047c8 <__stop_program>:
    47c8:	ff cf       	rjmp	.-2      	; 0x47c8 <__stop_program>
