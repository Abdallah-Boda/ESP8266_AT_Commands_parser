
01-ESP8266_ATMEGA_2560.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000086c  00800200  00003ff8  0000408c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003ff8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000d13  00800a6c  00800a6c  000048f8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000048f8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004954  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000420  00000000  00000000  00004994  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00007a8e  00000000  00000000  00004db4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b6b  00000000  00000000  0000c842  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002c7c  00000000  00000000  0000d3ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001364  00000000  00000000  0001002c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000014b5  00000000  00000000  00011390  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00006b6a  00000000  00000000  00012845  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000470  00000000  00000000  000193af  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	92 c0       	rjmp	.+292    	; 0x126 <__ctors_end>
       2:	00 00       	nop
       4:	b1 c0       	rjmp	.+354    	; 0x168 <__bad_interrupt>
       6:	00 00       	nop
       8:	af c0       	rjmp	.+350    	; 0x168 <__bad_interrupt>
       a:	00 00       	nop
       c:	ad c0       	rjmp	.+346    	; 0x168 <__bad_interrupt>
       e:	00 00       	nop
      10:	ab c0       	rjmp	.+342    	; 0x168 <__bad_interrupt>
      12:	00 00       	nop
      14:	a9 c0       	rjmp	.+338    	; 0x168 <__bad_interrupt>
      16:	00 00       	nop
      18:	a7 c0       	rjmp	.+334    	; 0x168 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	a5 c0       	rjmp	.+330    	; 0x168 <__bad_interrupt>
      1e:	00 00       	nop
      20:	a3 c0       	rjmp	.+326    	; 0x168 <__bad_interrupt>
      22:	00 00       	nop
      24:	a1 c0       	rjmp	.+322    	; 0x168 <__bad_interrupt>
      26:	00 00       	nop
      28:	9f c0       	rjmp	.+318    	; 0x168 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	9d c0       	rjmp	.+314    	; 0x168 <__bad_interrupt>
      2e:	00 00       	nop
      30:	9b c0       	rjmp	.+310    	; 0x168 <__bad_interrupt>
      32:	00 00       	nop
      34:	99 c0       	rjmp	.+306    	; 0x168 <__bad_interrupt>
      36:	00 00       	nop
      38:	97 c0       	rjmp	.+302    	; 0x168 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	95 c0       	rjmp	.+298    	; 0x168 <__bad_interrupt>
      3e:	00 00       	nop
      40:	93 c0       	rjmp	.+294    	; 0x168 <__bad_interrupt>
      42:	00 00       	nop
      44:	91 c0       	rjmp	.+290    	; 0x168 <__bad_interrupt>
      46:	00 00       	nop
      48:	8f c0       	rjmp	.+286    	; 0x168 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	8d c0       	rjmp	.+282    	; 0x168 <__bad_interrupt>
      4e:	00 00       	nop
      50:	8b c0       	rjmp	.+278    	; 0x168 <__bad_interrupt>
      52:	00 00       	nop
      54:	0c 94 15 19 	jmp	0x322a	; 0x322a <__vector_21>
      58:	87 c0       	rjmp	.+270    	; 0x168 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	85 c0       	rjmp	.+266    	; 0x168 <__bad_interrupt>
      5e:	00 00       	nop
      60:	83 c0       	rjmp	.+262    	; 0x168 <__bad_interrupt>
      62:	00 00       	nop
      64:	0c 94 43 19 	jmp	0x3286	; 0x3286 <__vector_25>
      68:	7f c0       	rjmp	.+254    	; 0x168 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	7d c0       	rjmp	.+250    	; 0x168 <__bad_interrupt>
      6e:	00 00       	nop
      70:	7b c0       	rjmp	.+246    	; 0x168 <__bad_interrupt>
      72:	00 00       	nop
      74:	79 c0       	rjmp	.+242    	; 0x168 <__bad_interrupt>
      76:	00 00       	nop
      78:	77 c0       	rjmp	.+238    	; 0x168 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	75 c0       	rjmp	.+234    	; 0x168 <__bad_interrupt>
      7e:	00 00       	nop
      80:	73 c0       	rjmp	.+230    	; 0x168 <__bad_interrupt>
      82:	00 00       	nop
      84:	71 c0       	rjmp	.+226    	; 0x168 <__bad_interrupt>
      86:	00 00       	nop
      88:	6f c0       	rjmp	.+222    	; 0x168 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	6d c0       	rjmp	.+218    	; 0x168 <__bad_interrupt>
      8e:	00 00       	nop
      90:	0c 94 c6 18 	jmp	0x318c	; 0x318c <__vector_36>
      94:	69 c0       	rjmp	.+210    	; 0x168 <__bad_interrupt>
      96:	00 00       	nop
      98:	67 c0       	rjmp	.+206    	; 0x168 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	65 c0       	rjmp	.+202    	; 0x168 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	63 c0       	rjmp	.+198    	; 0x168 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	61 c0       	rjmp	.+194    	; 0x168 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	5f c0       	rjmp	.+190    	; 0x168 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	5d c0       	rjmp	.+186    	; 0x168 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	5b c0       	rjmp	.+182    	; 0x168 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	59 c0       	rjmp	.+178    	; 0x168 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	57 c0       	rjmp	.+174    	; 0x168 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	55 c0       	rjmp	.+170    	; 0x168 <__bad_interrupt>
      be:	00 00       	nop
      c0:	53 c0       	rjmp	.+166    	; 0x168 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	51 c0       	rjmp	.+162    	; 0x168 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	4f c0       	rjmp	.+158    	; 0x168 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	4d c0       	rjmp	.+154    	; 0x168 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	4b c0       	rjmp	.+150    	; 0x168 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	49 c0       	rjmp	.+146    	; 0x168 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	47 c0       	rjmp	.+142    	; 0x168 <__bad_interrupt>
      da:	00 00       	nop
      dc:	45 c0       	rjmp	.+138    	; 0x168 <__bad_interrupt>
      de:	00 00       	nop
      e0:	43 c0       	rjmp	.+134    	; 0x168 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	ae 0e       	add	r10, r30
      e6:	10 0f       	add	r17, r16
      e8:	7e 0c       	add	r7, r14
      ea:	10 0f       	add	r17, r16
      ec:	33 0e       	add	r3, r19
      ee:	46 0e       	add	r4, r22
      f0:	ae 0e       	add	r10, r30
      f2:	56 0e       	add	r5, r22
      f4:	ae 0e       	add	r10, r30
      f6:	74 0e       	add	r7, r20
      f8:	ae 0e       	add	r10, r30
      fa:	37 0d       	add	r19, r7
      fc:	10 0f       	add	r17, r16
      fe:	ae 0e       	add	r10, r30
     100:	bc 0e       	add	r11, r28
     102:	ae 0e       	add	r10, r30
     104:	ae 0e       	add	r10, r30
     106:	10 0f       	add	r17, r16
     108:	b6 0c       	add	r11, r6
     10a:	ae 0e       	add	r10, r30
     10c:	ae 0e       	add	r10, r30
     10e:	fa 0d       	add	r31, r10
     110:	17 0e       	add	r1, r23
     112:	d2 0e       	add	r13, r18
     114:	f1 0e       	add	r15, r17
     116:	ae 0e       	add	r10, r30
     118:	10 0f       	add	r17, r16
     11a:	10 0f       	add	r17, r16
     11c:	10 0f       	add	r17, r16
     11e:	10 0f       	add	r17, r16
     120:	ae 0e       	add	r10, r30
     122:	ae 0e       	add	r10, r30
     124:	ae 0e       	add	r10, r30

00000126 <__ctors_end>:
     126:	11 24       	eor	r1, r1
     128:	1f be       	out	0x3f, r1	; 63
     12a:	cf ef       	ldi	r28, 0xFF	; 255
     12c:	d1 e2       	ldi	r29, 0x21	; 33
     12e:	de bf       	out	0x3e, r29	; 62
     130:	cd bf       	out	0x3d, r28	; 61
     132:	00 e0       	ldi	r16, 0x00	; 0
     134:	0c bf       	out	0x3c, r16	; 60

00000136 <__do_copy_data>:
     136:	1a e0       	ldi	r17, 0x0A	; 10
     138:	a0 e0       	ldi	r26, 0x00	; 0
     13a:	b2 e0       	ldi	r27, 0x02	; 2
     13c:	e8 ef       	ldi	r30, 0xF8	; 248
     13e:	ff e3       	ldi	r31, 0x3F	; 63
     140:	00 e0       	ldi	r16, 0x00	; 0
     142:	0b bf       	out	0x3b, r16	; 59
     144:	02 c0       	rjmp	.+4      	; 0x14a <__do_copy_data+0x14>
     146:	07 90       	elpm	r0, Z+
     148:	0d 92       	st	X+, r0
     14a:	ac 36       	cpi	r26, 0x6C	; 108
     14c:	b1 07       	cpc	r27, r17
     14e:	d9 f7       	brne	.-10     	; 0x146 <__do_copy_data+0x10>

00000150 <__do_clear_bss>:
     150:	27 e1       	ldi	r18, 0x17	; 23
     152:	ac e6       	ldi	r26, 0x6C	; 108
     154:	ba e0       	ldi	r27, 0x0A	; 10
     156:	01 c0       	rjmp	.+2      	; 0x15a <.do_clear_bss_start>

00000158 <.do_clear_bss_loop>:
     158:	1d 92       	st	X+, r1

0000015a <.do_clear_bss_start>:
     15a:	af 37       	cpi	r26, 0x7F	; 127
     15c:	b2 07       	cpc	r27, r18
     15e:	e1 f7       	brne	.-8      	; 0x158 <.do_clear_bss_loop>
     160:	0e 94 8b 19 	call	0x3316	; 0x3316 <main>
     164:	0c 94 fa 1f 	jmp	0x3ff4	; 0x3ff4 <_exit>

00000168 <__bad_interrupt>:
     168:	4b cf       	rjmp	.-362    	; 0x0 <__vectors>

0000016a <BUFFER_Init>:
		return 0;
	}
	in = Buffer->In;										/* Save values */
	out = Buffer->Out;
	return (Buffer->Size + in - out) % Buffer->Size;
}
     16a:	cf 93       	push	r28
     16c:	df 93       	push	r29
     16e:	ec 01       	movw	r28, r24
     170:	89 2b       	or	r24, r25
     172:	21 f1       	breq	.+72     	; 0x1bc <BUFFER_Init+0x52>
     174:	82 e1       	ldi	r24, 0x12	; 18
     176:	fe 01       	movw	r30, r28
     178:	11 92       	st	Z+, r1
     17a:	8a 95       	dec	r24
     17c:	e9 f7       	brne	.-6      	; 0x178 <BUFFER_Init+0xe>
     17e:	48 83       	st	Y, r20
     180:	59 83       	std	Y+1, r21	; 0x01
     182:	6a 83       	std	Y+2, r22	; 0x02
     184:	7b 83       	std	Y+3, r23	; 0x03
     186:	3d 87       	std	Y+13, r19	; 0x0d
     188:	2c 87       	std	Y+12, r18	; 0x0c
     18a:	8a e0       	ldi	r24, 0x0A	; 10
     18c:	8f 87       	std	Y+15, r24	; 0x0f
     18e:	23 2b       	or	r18, r19
     190:	81 f4       	brne	.+32     	; 0x1b2 <BUFFER_Init+0x48>
     192:	ca 01       	movw	r24, r20
     194:	0e 94 50 1b 	call	0x36a0	; 0x36a0 <malloc>
     198:	9d 87       	std	Y+13, r25	; 0x0d
     19a:	8c 87       	std	Y+12, r24	; 0x0c
     19c:	89 2b       	or	r24, r25
     19e:	31 f4       	brne	.+12     	; 0x1ac <BUFFER_Init+0x42>
     1a0:	18 82       	st	Y, r1
     1a2:	19 82       	std	Y+1, r1	; 0x01
     1a4:	1a 82       	std	Y+2, r1	; 0x02
     1a6:	1b 82       	std	Y+3, r1	; 0x03
     1a8:	81 e0       	ldi	r24, 0x01	; 1
     1aa:	09 c0       	rjmp	.+18     	; 0x1be <BUFFER_Init+0x54>
     1ac:	8e 85       	ldd	r24, Y+14	; 0x0e
     1ae:	82 60       	ori	r24, 0x02	; 2
     1b0:	8e 87       	std	Y+14, r24	; 0x0e
     1b2:	8e 85       	ldd	r24, Y+14	; 0x0e
     1b4:	81 60       	ori	r24, 0x01	; 1
     1b6:	8e 87       	std	Y+14, r24	; 0x0e
     1b8:	80 e0       	ldi	r24, 0x00	; 0
     1ba:	01 c0       	rjmp	.+2      	; 0x1be <BUFFER_Init+0x54>
     1bc:	81 e0       	ldi	r24, 0x01	; 1
     1be:	df 91       	pop	r29
     1c0:	cf 91       	pop	r28
     1c2:	08 95       	ret

000001c4 <BUFFER_GetFree>:
     1c4:	cf 92       	push	r12
     1c6:	df 92       	push	r13
     1c8:	ef 92       	push	r14
     1ca:	ff 92       	push	r15
     1cc:	0f 93       	push	r16
     1ce:	1f 93       	push	r17
     1d0:	fc 01       	movw	r30, r24
     1d2:	89 2b       	or	r24, r25
     1d4:	c9 f1       	breq	.+114    	; 0x248 <BUFFER_GetFree+0x84>
     1d6:	04 81       	ldd	r16, Z+4	; 0x04
     1d8:	15 81       	ldd	r17, Z+5	; 0x05
     1da:	26 81       	ldd	r18, Z+6	; 0x06
     1dc:	37 81       	ldd	r19, Z+7	; 0x07
     1de:	c0 84       	ldd	r12, Z+8	; 0x08
     1e0:	d1 84       	ldd	r13, Z+9	; 0x09
     1e2:	e2 84       	ldd	r14, Z+10	; 0x0a
     1e4:	f3 84       	ldd	r15, Z+11	; 0x0b
     1e6:	0c 15       	cp	r16, r12
     1e8:	1d 05       	cpc	r17, r13
     1ea:	2e 05       	cpc	r18, r14
     1ec:	3f 05       	cpc	r19, r15
     1ee:	29 f4       	brne	.+10     	; 0x1fa <BUFFER_GetFree+0x36>
     1f0:	80 81       	ld	r24, Z
     1f2:	91 81       	ldd	r25, Z+1	; 0x01
     1f4:	a2 81       	ldd	r26, Z+2	; 0x02
     1f6:	b3 81       	ldd	r27, Z+3	; 0x03
     1f8:	20 c0       	rjmp	.+64     	; 0x23a <BUFFER_GetFree+0x76>
     1fa:	0c 15       	cp	r16, r12
     1fc:	1d 05       	cpc	r17, r13
     1fe:	2e 05       	cpc	r18, r14
     200:	3f 05       	cpc	r19, r15
     202:	38 f4       	brcc	.+14     	; 0x212 <BUFFER_GetFree+0x4e>
     204:	d7 01       	movw	r26, r14
     206:	c6 01       	movw	r24, r12
     208:	80 1b       	sub	r24, r16
     20a:	91 0b       	sbc	r25, r17
     20c:	a2 0b       	sbc	r26, r18
     20e:	b3 0b       	sbc	r27, r19
     210:	03 c0       	rjmp	.+6      	; 0x218 <BUFFER_GetFree+0x54>
     212:	80 e0       	ldi	r24, 0x00	; 0
     214:	90 e0       	ldi	r25, 0x00	; 0
     216:	dc 01       	movw	r26, r24
     218:	c0 16       	cp	r12, r16
     21a:	d1 06       	cpc	r13, r17
     21c:	e2 06       	cpc	r14, r18
     21e:	f3 06       	cpc	r15, r19
     220:	60 f4       	brcc	.+24     	; 0x23a <BUFFER_GetFree+0x76>
     222:	80 81       	ld	r24, Z
     224:	91 81       	ldd	r25, Z+1	; 0x01
     226:	a2 81       	ldd	r26, Z+2	; 0x02
     228:	b3 81       	ldd	r27, Z+3	; 0x03
     22a:	8c 0d       	add	r24, r12
     22c:	9d 1d       	adc	r25, r13
     22e:	ae 1d       	adc	r26, r14
     230:	bf 1d       	adc	r27, r15
     232:	80 1b       	sub	r24, r16
     234:	91 0b       	sbc	r25, r17
     236:	a2 0b       	sbc	r26, r18
     238:	b3 0b       	sbc	r27, r19
     23a:	bc 01       	movw	r22, r24
     23c:	cd 01       	movw	r24, r26
     23e:	61 50       	subi	r22, 0x01	; 1
     240:	71 09       	sbc	r23, r1
     242:	81 09       	sbc	r24, r1
     244:	91 09       	sbc	r25, r1
     246:	03 c0       	rjmp	.+6      	; 0x24e <BUFFER_GetFree+0x8a>
     248:	60 e0       	ldi	r22, 0x00	; 0
     24a:	70 e0       	ldi	r23, 0x00	; 0
     24c:	cb 01       	movw	r24, r22
     24e:	1f 91       	pop	r17
     250:	0f 91       	pop	r16
     252:	ff 90       	pop	r15
     254:	ef 90       	pop	r14
     256:	df 90       	pop	r13
     258:	cf 90       	pop	r12
     25a:	08 95       	ret

0000025c <BUFFER_Write>:
     25c:	4f 92       	push	r4
     25e:	5f 92       	push	r5
     260:	6f 92       	push	r6
     262:	7f 92       	push	r7
     264:	8f 92       	push	r8
     266:	9f 92       	push	r9
     268:	af 92       	push	r10
     26a:	bf 92       	push	r11
     26c:	cf 92       	push	r12
     26e:	df 92       	push	r13
     270:	ef 92       	push	r14
     272:	ff 92       	push	r15
     274:	0f 93       	push	r16
     276:	1f 93       	push	r17
     278:	cf 93       	push	r28
     27a:	df 93       	push	r29
     27c:	ec 01       	movw	r28, r24
     27e:	8b 01       	movw	r16, r22
     280:	69 01       	movw	r12, r18
     282:	7a 01       	movw	r14, r20
     284:	89 2b       	or	r24, r25
     286:	09 f4       	brne	.+2      	; 0x28a <BUFFER_Write+0x2e>
     288:	75 c0       	rjmp	.+234    	; 0x374 <BUFFER_Write+0x118>
     28a:	23 2b       	or	r18, r19
     28c:	24 2b       	or	r18, r20
     28e:	25 2b       	or	r18, r21
     290:	09 f4       	brne	.+2      	; 0x294 <BUFFER_Write+0x38>
     292:	75 c0       	rjmp	.+234    	; 0x37e <BUFFER_Write+0x122>
     294:	88 80       	ld	r8, Y
     296:	99 80       	ldd	r9, Y+1	; 0x01
     298:	aa 80       	ldd	r10, Y+2	; 0x02
     29a:	bb 80       	ldd	r11, Y+3	; 0x03
     29c:	8c 81       	ldd	r24, Y+4	; 0x04
     29e:	9d 81       	ldd	r25, Y+5	; 0x05
     2a0:	ae 81       	ldd	r26, Y+6	; 0x06
     2a2:	bf 81       	ldd	r27, Y+7	; 0x07
     2a4:	88 15       	cp	r24, r8
     2a6:	99 05       	cpc	r25, r9
     2a8:	aa 05       	cpc	r26, r10
     2aa:	bb 05       	cpc	r27, r11
     2ac:	20 f0       	brcs	.+8      	; 0x2b6 <BUFFER_Write+0x5a>
     2ae:	1c 82       	std	Y+4, r1	; 0x04
     2b0:	1d 82       	std	Y+5, r1	; 0x05
     2b2:	1e 82       	std	Y+6, r1	; 0x06
     2b4:	1f 82       	std	Y+7, r1	; 0x07
     2b6:	ce 01       	movw	r24, r28
     2b8:	85 df       	rcall	.-246    	; 0x1c4 <BUFFER_GetFree>
     2ba:	6c 15       	cp	r22, r12
     2bc:	7d 05       	cpc	r23, r13
     2be:	8e 05       	cpc	r24, r14
     2c0:	9f 05       	cpc	r25, r15
     2c2:	40 f4       	brcc	.+16     	; 0x2d4 <BUFFER_Write+0x78>
     2c4:	61 15       	cp	r22, r1
     2c6:	71 05       	cpc	r23, r1
     2c8:	81 05       	cpc	r24, r1
     2ca:	91 05       	cpc	r25, r1
     2cc:	09 f4       	brne	.+2      	; 0x2d0 <BUFFER_Write+0x74>
     2ce:	5c c0       	rjmp	.+184    	; 0x388 <BUFFER_Write+0x12c>
     2d0:	6b 01       	movw	r12, r22
     2d2:	7c 01       	movw	r14, r24
     2d4:	8c 81       	ldd	r24, Y+4	; 0x04
     2d6:	9d 81       	ldd	r25, Y+5	; 0x05
     2d8:	ae 81       	ldd	r26, Y+6	; 0x06
     2da:	bf 81       	ldd	r27, Y+7	; 0x07
     2dc:	b5 01       	movw	r22, r10
     2de:	a4 01       	movw	r20, r8
     2e0:	48 1b       	sub	r20, r24
     2e2:	59 0b       	sbc	r21, r25
     2e4:	6a 0b       	sbc	r22, r26
     2e6:	7b 0b       	sbc	r23, r27
     2e8:	46 01       	movw	r8, r12
     2ea:	57 01       	movw	r10, r14
     2ec:	4c 15       	cp	r20, r12
     2ee:	5d 05       	cpc	r21, r13
     2f0:	6e 05       	cpc	r22, r14
     2f2:	7f 05       	cpc	r23, r15
     2f4:	10 f4       	brcc	.+4      	; 0x2fa <BUFFER_Write+0x9e>
     2f6:	4a 01       	movw	r8, r20
     2f8:	5b 01       	movw	r10, r22
     2fa:	2c 85       	ldd	r18, Y+12	; 0x0c
     2fc:	3d 85       	ldd	r19, Y+13	; 0x0d
     2fe:	82 0f       	add	r24, r18
     300:	93 1f       	adc	r25, r19
     302:	a4 01       	movw	r20, r8
     304:	b8 01       	movw	r22, r16
     306:	0e 94 8d 1c 	call	0x391a	; 0x391a <memcpy>
     30a:	8c 81       	ldd	r24, Y+4	; 0x04
     30c:	9d 81       	ldd	r25, Y+5	; 0x05
     30e:	ae 81       	ldd	r26, Y+6	; 0x06
     310:	bf 81       	ldd	r27, Y+7	; 0x07
     312:	88 0d       	add	r24, r8
     314:	99 1d       	adc	r25, r9
     316:	aa 1d       	adc	r26, r10
     318:	bb 1d       	adc	r27, r11
     31a:	8c 83       	std	Y+4, r24	; 0x04
     31c:	9d 83       	std	Y+5, r25	; 0x05
     31e:	ae 83       	std	Y+6, r26	; 0x06
     320:	bf 83       	std	Y+7, r27	; 0x07
     322:	26 01       	movw	r4, r12
     324:	37 01       	movw	r6, r14
     326:	48 18       	sub	r4, r8
     328:	59 08       	sbc	r5, r9
     32a:	6a 08       	sbc	r6, r10
     32c:	7b 08       	sbc	r7, r11
     32e:	61 f0       	breq	.+24     	; 0x348 <BUFFER_Write+0xec>
     330:	b8 01       	movw	r22, r16
     332:	68 0d       	add	r22, r8
     334:	79 1d       	adc	r23, r9
     336:	a2 01       	movw	r20, r4
     338:	8c 85       	ldd	r24, Y+12	; 0x0c
     33a:	9d 85       	ldd	r25, Y+13	; 0x0d
     33c:	0e 94 8d 1c 	call	0x391a	; 0x391a <memcpy>
     340:	4c 82       	std	Y+4, r4	; 0x04
     342:	5d 82       	std	Y+5, r5	; 0x05
     344:	6e 82       	std	Y+6, r6	; 0x06
     346:	7f 82       	std	Y+7, r7	; 0x07
     348:	4c 81       	ldd	r20, Y+4	; 0x04
     34a:	5d 81       	ldd	r21, Y+5	; 0x05
     34c:	6e 81       	ldd	r22, Y+6	; 0x06
     34e:	7f 81       	ldd	r23, Y+7	; 0x07
     350:	88 81       	ld	r24, Y
     352:	99 81       	ldd	r25, Y+1	; 0x01
     354:	aa 81       	ldd	r26, Y+2	; 0x02
     356:	bb 81       	ldd	r27, Y+3	; 0x03
     358:	48 17       	cp	r20, r24
     35a:	59 07       	cpc	r21, r25
     35c:	6a 07       	cpc	r22, r26
     35e:	7b 07       	cpc	r23, r27
     360:	20 f0       	brcs	.+8      	; 0x36a <BUFFER_Write+0x10e>
     362:	1c 82       	std	Y+4, r1	; 0x04
     364:	1d 82       	std	Y+5, r1	; 0x05
     366:	1e 82       	std	Y+6, r1	; 0x06
     368:	1f 82       	std	Y+7, r1	; 0x07
     36a:	6c 2d       	mov	r22, r12
     36c:	7d 2d       	mov	r23, r13
     36e:	8e 2d       	mov	r24, r14
     370:	9f 2d       	mov	r25, r15
     372:	0e c0       	rjmp	.+28     	; 0x390 <BUFFER_Write+0x134>
     374:	60 e0       	ldi	r22, 0x00	; 0
     376:	70 e0       	ldi	r23, 0x00	; 0
     378:	80 e0       	ldi	r24, 0x00	; 0
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	09 c0       	rjmp	.+18     	; 0x390 <BUFFER_Write+0x134>
     37e:	60 e0       	ldi	r22, 0x00	; 0
     380:	70 e0       	ldi	r23, 0x00	; 0
     382:	80 e0       	ldi	r24, 0x00	; 0
     384:	90 e0       	ldi	r25, 0x00	; 0
     386:	04 c0       	rjmp	.+8      	; 0x390 <BUFFER_Write+0x134>
     388:	60 e0       	ldi	r22, 0x00	; 0
     38a:	70 e0       	ldi	r23, 0x00	; 0
     38c:	80 e0       	ldi	r24, 0x00	; 0
     38e:	90 e0       	ldi	r25, 0x00	; 0
     390:	df 91       	pop	r29
     392:	cf 91       	pop	r28
     394:	1f 91       	pop	r17
     396:	0f 91       	pop	r16
     398:	ff 90       	pop	r15
     39a:	ef 90       	pop	r14
     39c:	df 90       	pop	r13
     39e:	cf 90       	pop	r12
     3a0:	bf 90       	pop	r11
     3a2:	af 90       	pop	r10
     3a4:	9f 90       	pop	r9
     3a6:	8f 90       	pop	r8
     3a8:	7f 90       	pop	r7
     3aa:	6f 90       	pop	r6
     3ac:	5f 90       	pop	r5
     3ae:	4f 90       	pop	r4
     3b0:	08 95       	ret

000003b2 <BUFFER_WriteToTop>:
     3b2:	8f 92       	push	r8
     3b4:	9f 92       	push	r9
     3b6:	af 92       	push	r10
     3b8:	bf 92       	push	r11
     3ba:	cf 92       	push	r12
     3bc:	df 92       	push	r13
     3be:	ef 92       	push	r14
     3c0:	ff 92       	push	r15
     3c2:	0f 93       	push	r16
     3c4:	1f 93       	push	r17
     3c6:	cf 93       	push	r28
     3c8:	df 93       	push	r29
     3ca:	ec 01       	movw	r28, r24
     3cc:	8b 01       	movw	r16, r22
     3ce:	69 01       	movw	r12, r18
     3d0:	7a 01       	movw	r14, r20
     3d2:	89 2b       	or	r24, r25
     3d4:	09 f4       	brne	.+2      	; 0x3d8 <BUFFER_WriteToTop+0x26>
     3d6:	69 c0       	rjmp	.+210    	; 0x4aa <BUFFER_WriteToTop+0xf8>
     3d8:	23 2b       	or	r18, r19
     3da:	24 2b       	or	r18, r20
     3dc:	25 2b       	or	r18, r21
     3de:	09 f4       	brne	.+2      	; 0x3e2 <BUFFER_WriteToTop+0x30>
     3e0:	69 c0       	rjmp	.+210    	; 0x4b4 <BUFFER_WriteToTop+0x102>
     3e2:	88 81       	ld	r24, Y
     3e4:	99 81       	ldd	r25, Y+1	; 0x01
     3e6:	aa 81       	ldd	r26, Y+2	; 0x02
     3e8:	bb 81       	ldd	r27, Y+3	; 0x03
     3ea:	4c 81       	ldd	r20, Y+4	; 0x04
     3ec:	5d 81       	ldd	r21, Y+5	; 0x05
     3ee:	6e 81       	ldd	r22, Y+6	; 0x06
     3f0:	7f 81       	ldd	r23, Y+7	; 0x07
     3f2:	48 17       	cp	r20, r24
     3f4:	59 07       	cpc	r21, r25
     3f6:	6a 07       	cpc	r22, r26
     3f8:	7b 07       	cpc	r23, r27
     3fa:	20 f0       	brcs	.+8      	; 0x404 <BUFFER_WriteToTop+0x52>
     3fc:	1c 82       	std	Y+4, r1	; 0x04
     3fe:	1d 82       	std	Y+5, r1	; 0x05
     400:	1e 82       	std	Y+6, r1	; 0x06
     402:	1f 82       	std	Y+7, r1	; 0x07
     404:	48 85       	ldd	r20, Y+8	; 0x08
     406:	59 85       	ldd	r21, Y+9	; 0x09
     408:	6a 85       	ldd	r22, Y+10	; 0x0a
     40a:	7b 85       	ldd	r23, Y+11	; 0x0b
     40c:	48 17       	cp	r20, r24
     40e:	59 07       	cpc	r21, r25
     410:	6a 07       	cpc	r22, r26
     412:	7b 07       	cpc	r23, r27
     414:	20 f0       	brcs	.+8      	; 0x41e <BUFFER_WriteToTop+0x6c>
     416:	18 86       	std	Y+8, r1	; 0x08
     418:	19 86       	std	Y+9, r1	; 0x09
     41a:	1a 86       	std	Y+10, r1	; 0x0a
     41c:	1b 86       	std	Y+11, r1	; 0x0b
     41e:	ce 01       	movw	r24, r28
     420:	d1 de       	rcall	.-606    	; 0x1c4 <BUFFER_GetFree>
     422:	6c 15       	cp	r22, r12
     424:	7d 05       	cpc	r23, r13
     426:	8e 05       	cpc	r24, r14
     428:	9f 05       	cpc	r25, r15
     42a:	08 f0       	brcs	.+2      	; 0x42e <BUFFER_WriteToTop+0x7c>
     42c:	4d c0       	rjmp	.+154    	; 0x4c8 <BUFFER_WriteToTop+0x116>
     42e:	61 15       	cp	r22, r1
     430:	71 05       	cpc	r23, r1
     432:	81 05       	cpc	r24, r1
     434:	91 05       	cpc	r25, r1
     436:	09 f4       	brne	.+2      	; 0x43a <BUFFER_WriteToTop+0x88>
     438:	42 c0       	rjmp	.+132    	; 0x4be <BUFFER_WriteToTop+0x10c>
     43a:	6b 01       	movw	r12, r22
     43c:	7c 01       	movw	r14, r24
     43e:	44 c0       	rjmp	.+136    	; 0x4c8 <BUFFER_WriteToTop+0x116>
     440:	88 85       	ldd	r24, Y+8	; 0x08
     442:	99 85       	ldd	r25, Y+9	; 0x09
     444:	aa 85       	ldd	r26, Y+10	; 0x0a
     446:	bb 85       	ldd	r27, Y+11	; 0x0b
     448:	00 97       	sbiw	r24, 0x00	; 0
     44a:	a1 05       	cpc	r26, r1
     44c:	b1 05       	cpc	r27, r1
     44e:	61 f4       	brne	.+24     	; 0x468 <BUFFER_WriteToTop+0xb6>
     450:	88 81       	ld	r24, Y
     452:	99 81       	ldd	r25, Y+1	; 0x01
     454:	aa 81       	ldd	r26, Y+2	; 0x02
     456:	bb 81       	ldd	r27, Y+3	; 0x03
     458:	01 97       	sbiw	r24, 0x01	; 1
     45a:	a1 09       	sbc	r26, r1
     45c:	b1 09       	sbc	r27, r1
     45e:	88 87       	std	Y+8, r24	; 0x08
     460:	99 87       	std	Y+9, r25	; 0x09
     462:	aa 87       	std	Y+10, r26	; 0x0a
     464:	bb 87       	std	Y+11, r27	; 0x0b
     466:	07 c0       	rjmp	.+14     	; 0x476 <BUFFER_WriteToTop+0xc4>
     468:	01 97       	sbiw	r24, 0x01	; 1
     46a:	a1 09       	sbc	r26, r1
     46c:	b1 09       	sbc	r27, r1
     46e:	88 87       	std	Y+8, r24	; 0x08
     470:	99 87       	std	Y+9, r25	; 0x09
     472:	aa 87       	std	Y+10, r26	; 0x0a
     474:	bb 87       	std	Y+11, r27	; 0x0b
     476:	fb 01       	movw	r30, r22
     478:	22 91       	ld	r18, -Z
     47a:	bf 01       	movw	r22, r30
     47c:	ec 85       	ldd	r30, Y+12	; 0x0c
     47e:	fd 85       	ldd	r31, Y+13	; 0x0d
     480:	88 85       	ldd	r24, Y+8	; 0x08
     482:	99 85       	ldd	r25, Y+9	; 0x09
     484:	e8 0f       	add	r30, r24
     486:	f9 1f       	adc	r31, r25
     488:	20 83       	st	Z, r18
     48a:	f1 e0       	ldi	r31, 0x01	; 1
     48c:	8f 1a       	sub	r8, r31
     48e:	91 08       	sbc	r9, r1
     490:	a1 08       	sbc	r10, r1
     492:	b1 08       	sbc	r11, r1
     494:	8f ef       	ldi	r24, 0xFF	; 255
     496:	88 16       	cp	r8, r24
     498:	98 06       	cpc	r9, r24
     49a:	a8 06       	cpc	r10, r24
     49c:	b8 06       	cpc	r11, r24
     49e:	81 f6       	brne	.-96     	; 0x440 <BUFFER_WriteToTop+0x8e>
     4a0:	6c 2d       	mov	r22, r12
     4a2:	7d 2d       	mov	r23, r13
     4a4:	8e 2d       	mov	r24, r14
     4a6:	9f 2d       	mov	r25, r15
     4a8:	1a c0       	rjmp	.+52     	; 0x4de <BUFFER_WriteToTop+0x12c>
     4aa:	60 e0       	ldi	r22, 0x00	; 0
     4ac:	70 e0       	ldi	r23, 0x00	; 0
     4ae:	80 e0       	ldi	r24, 0x00	; 0
     4b0:	90 e0       	ldi	r25, 0x00	; 0
     4b2:	15 c0       	rjmp	.+42     	; 0x4de <BUFFER_WriteToTop+0x12c>
     4b4:	60 e0       	ldi	r22, 0x00	; 0
     4b6:	70 e0       	ldi	r23, 0x00	; 0
     4b8:	80 e0       	ldi	r24, 0x00	; 0
     4ba:	90 e0       	ldi	r25, 0x00	; 0
     4bc:	10 c0       	rjmp	.+32     	; 0x4de <BUFFER_WriteToTop+0x12c>
     4be:	60 e0       	ldi	r22, 0x00	; 0
     4c0:	70 e0       	ldi	r23, 0x00	; 0
     4c2:	80 e0       	ldi	r24, 0x00	; 0
     4c4:	90 e0       	ldi	r25, 0x00	; 0
     4c6:	0b c0       	rjmp	.+22     	; 0x4de <BUFFER_WriteToTop+0x12c>
     4c8:	46 01       	movw	r8, r12
     4ca:	57 01       	movw	r10, r14
     4cc:	e1 e0       	ldi	r30, 0x01	; 1
     4ce:	8e 1a       	sub	r8, r30
     4d0:	91 08       	sbc	r9, r1
     4d2:	a1 08       	sbc	r10, r1
     4d4:	b1 08       	sbc	r11, r1
     4d6:	b8 01       	movw	r22, r16
     4d8:	6c 0d       	add	r22, r12
     4da:	7d 1d       	adc	r23, r13
     4dc:	b1 cf       	rjmp	.-158    	; 0x440 <BUFFER_WriteToTop+0x8e>
     4de:	df 91       	pop	r29
     4e0:	cf 91       	pop	r28
     4e2:	1f 91       	pop	r17
     4e4:	0f 91       	pop	r16
     4e6:	ff 90       	pop	r15
     4e8:	ef 90       	pop	r14
     4ea:	df 90       	pop	r13
     4ec:	cf 90       	pop	r12
     4ee:	bf 90       	pop	r11
     4f0:	af 90       	pop	r10
     4f2:	9f 90       	pop	r9
     4f4:	8f 90       	pop	r8
     4f6:	08 95       	ret

000004f8 <BUFFER_GetFull>:
     4f8:	cf 92       	push	r12
     4fa:	df 92       	push	r13
     4fc:	ef 92       	push	r14
     4fe:	ff 92       	push	r15
     500:	0f 93       	push	r16
     502:	1f 93       	push	r17
     504:	fc 01       	movw	r30, r24
     506:	89 2b       	or	r24, r25
     508:	59 f1       	breq	.+86     	; 0x560 <BUFFER_GetFull+0x68>
     50a:	c4 80       	ldd	r12, Z+4	; 0x04
     50c:	d5 80       	ldd	r13, Z+5	; 0x05
     50e:	e6 80       	ldd	r14, Z+6	; 0x06
     510:	f7 80       	ldd	r15, Z+7	; 0x07
     512:	00 85       	ldd	r16, Z+8	; 0x08
     514:	11 85       	ldd	r17, Z+9	; 0x09
     516:	22 85       	ldd	r18, Z+10	; 0x0a
     518:	33 85       	ldd	r19, Z+11	; 0x0b
     51a:	0c 15       	cp	r16, r12
     51c:	1d 05       	cpc	r17, r13
     51e:	2e 05       	cpc	r18, r14
     520:	3f 05       	cpc	r19, r15
     522:	38 f4       	brcc	.+14     	; 0x532 <BUFFER_GetFull+0x3a>
     524:	d7 01       	movw	r26, r14
     526:	c6 01       	movw	r24, r12
     528:	80 1b       	sub	r24, r16
     52a:	91 0b       	sbc	r25, r17
     52c:	a2 0b       	sbc	r26, r18
     52e:	b3 0b       	sbc	r27, r19
     530:	03 c0       	rjmp	.+6      	; 0x538 <BUFFER_GetFull+0x40>
     532:	80 e0       	ldi	r24, 0x00	; 0
     534:	90 e0       	ldi	r25, 0x00	; 0
     536:	dc 01       	movw	r26, r24
     538:	c0 16       	cp	r12, r16
     53a:	d1 06       	cpc	r13, r17
     53c:	e2 06       	cpc	r14, r18
     53e:	f3 06       	cpc	r15, r19
     540:	98 f4       	brcc	.+38     	; 0x568 <BUFFER_GetFull+0x70>
     542:	80 81       	ld	r24, Z
     544:	91 81       	ldd	r25, Z+1	; 0x01
     546:	a2 81       	ldd	r26, Z+2	; 0x02
     548:	b3 81       	ldd	r27, Z+3	; 0x03
     54a:	8c 0d       	add	r24, r12
     54c:	9d 1d       	adc	r25, r13
     54e:	ae 1d       	adc	r26, r14
     550:	bf 1d       	adc	r27, r15
     552:	bc 01       	movw	r22, r24
     554:	cd 01       	movw	r24, r26
     556:	60 1b       	sub	r22, r16
     558:	71 0b       	sbc	r23, r17
     55a:	82 0b       	sbc	r24, r18
     55c:	93 0b       	sbc	r25, r19
     55e:	06 c0       	rjmp	.+12     	; 0x56c <BUFFER_GetFull+0x74>
     560:	60 e0       	ldi	r22, 0x00	; 0
     562:	70 e0       	ldi	r23, 0x00	; 0
     564:	cb 01       	movw	r24, r22
     566:	02 c0       	rjmp	.+4      	; 0x56c <BUFFER_GetFull+0x74>
     568:	bc 01       	movw	r22, r24
     56a:	cd 01       	movw	r24, r26
     56c:	1f 91       	pop	r17
     56e:	0f 91       	pop	r16
     570:	ff 90       	pop	r15
     572:	ef 90       	pop	r14
     574:	df 90       	pop	r13
     576:	cf 90       	pop	r12
     578:	08 95       	ret

0000057a <BUFFER_Read>:
     57a:	4f 92       	push	r4
     57c:	5f 92       	push	r5
     57e:	6f 92       	push	r6
     580:	7f 92       	push	r7
     582:	8f 92       	push	r8
     584:	9f 92       	push	r9
     586:	af 92       	push	r10
     588:	bf 92       	push	r11
     58a:	cf 92       	push	r12
     58c:	df 92       	push	r13
     58e:	ef 92       	push	r14
     590:	ff 92       	push	r15
     592:	0f 93       	push	r16
     594:	1f 93       	push	r17
     596:	cf 93       	push	r28
     598:	df 93       	push	r29
     59a:	ec 01       	movw	r28, r24
     59c:	8b 01       	movw	r16, r22
     59e:	69 01       	movw	r12, r18
     5a0:	7a 01       	movw	r14, r20
     5a2:	89 2b       	or	r24, r25
     5a4:	09 f4       	brne	.+2      	; 0x5a8 <BUFFER_Read+0x2e>
     5a6:	76 c0       	rjmp	.+236    	; 0x694 <BUFFER_Read+0x11a>
     5a8:	23 2b       	or	r18, r19
     5aa:	24 2b       	or	r18, r20
     5ac:	25 2b       	or	r18, r21
     5ae:	09 f4       	brne	.+2      	; 0x5b2 <BUFFER_Read+0x38>
     5b0:	76 c0       	rjmp	.+236    	; 0x69e <BUFFER_Read+0x124>
     5b2:	88 80       	ld	r8, Y
     5b4:	99 80       	ldd	r9, Y+1	; 0x01
     5b6:	aa 80       	ldd	r10, Y+2	; 0x02
     5b8:	bb 80       	ldd	r11, Y+3	; 0x03
     5ba:	88 85       	ldd	r24, Y+8	; 0x08
     5bc:	99 85       	ldd	r25, Y+9	; 0x09
     5be:	aa 85       	ldd	r26, Y+10	; 0x0a
     5c0:	bb 85       	ldd	r27, Y+11	; 0x0b
     5c2:	88 15       	cp	r24, r8
     5c4:	99 05       	cpc	r25, r9
     5c6:	aa 05       	cpc	r26, r10
     5c8:	bb 05       	cpc	r27, r11
     5ca:	20 f0       	brcs	.+8      	; 0x5d4 <BUFFER_Read+0x5a>
     5cc:	18 86       	std	Y+8, r1	; 0x08
     5ce:	19 86       	std	Y+9, r1	; 0x09
     5d0:	1a 86       	std	Y+10, r1	; 0x0a
     5d2:	1b 86       	std	Y+11, r1	; 0x0b
     5d4:	ce 01       	movw	r24, r28
     5d6:	90 df       	rcall	.-224    	; 0x4f8 <BUFFER_GetFull>
     5d8:	6c 15       	cp	r22, r12
     5da:	7d 05       	cpc	r23, r13
     5dc:	8e 05       	cpc	r24, r14
     5de:	9f 05       	cpc	r25, r15
     5e0:	40 f4       	brcc	.+16     	; 0x5f2 <BUFFER_Read+0x78>
     5e2:	61 15       	cp	r22, r1
     5e4:	71 05       	cpc	r23, r1
     5e6:	81 05       	cpc	r24, r1
     5e8:	91 05       	cpc	r25, r1
     5ea:	09 f4       	brne	.+2      	; 0x5ee <BUFFER_Read+0x74>
     5ec:	5d c0       	rjmp	.+186    	; 0x6a8 <BUFFER_Read+0x12e>
     5ee:	6b 01       	movw	r12, r22
     5f0:	7c 01       	movw	r14, r24
     5f2:	48 85       	ldd	r20, Y+8	; 0x08
     5f4:	59 85       	ldd	r21, Y+9	; 0x09
     5f6:	6a 85       	ldd	r22, Y+10	; 0x0a
     5f8:	7b 85       	ldd	r23, Y+11	; 0x0b
     5fa:	d5 01       	movw	r26, r10
     5fc:	c4 01       	movw	r24, r8
     5fe:	84 1b       	sub	r24, r20
     600:	95 0b       	sbc	r25, r21
     602:	a6 0b       	sbc	r26, r22
     604:	b7 0b       	sbc	r27, r23
     606:	46 01       	movw	r8, r12
     608:	57 01       	movw	r10, r14
     60a:	8c 15       	cp	r24, r12
     60c:	9d 05       	cpc	r25, r13
     60e:	ae 05       	cpc	r26, r14
     610:	bf 05       	cpc	r27, r15
     612:	10 f4       	brcc	.+4      	; 0x618 <BUFFER_Read+0x9e>
     614:	4c 01       	movw	r8, r24
     616:	5d 01       	movw	r10, r26
     618:	8c 85       	ldd	r24, Y+12	; 0x0c
     61a:	9d 85       	ldd	r25, Y+13	; 0x0d
     61c:	bc 01       	movw	r22, r24
     61e:	64 0f       	add	r22, r20
     620:	75 1f       	adc	r23, r21
     622:	a4 01       	movw	r20, r8
     624:	c8 01       	movw	r24, r16
     626:	0e 94 8d 1c 	call	0x391a	; 0x391a <memcpy>
     62a:	88 85       	ldd	r24, Y+8	; 0x08
     62c:	99 85       	ldd	r25, Y+9	; 0x09
     62e:	aa 85       	ldd	r26, Y+10	; 0x0a
     630:	bb 85       	ldd	r27, Y+11	; 0x0b
     632:	88 0d       	add	r24, r8
     634:	99 1d       	adc	r25, r9
     636:	aa 1d       	adc	r26, r10
     638:	bb 1d       	adc	r27, r11
     63a:	88 87       	std	Y+8, r24	; 0x08
     63c:	99 87       	std	Y+9, r25	; 0x09
     63e:	aa 87       	std	Y+10, r26	; 0x0a
     640:	bb 87       	std	Y+11, r27	; 0x0b
     642:	26 01       	movw	r4, r12
     644:	37 01       	movw	r6, r14
     646:	48 18       	sub	r4, r8
     648:	59 08       	sbc	r5, r9
     64a:	6a 08       	sbc	r6, r10
     64c:	7b 08       	sbc	r7, r11
     64e:	61 f0       	breq	.+24     	; 0x668 <BUFFER_Read+0xee>
     650:	c8 01       	movw	r24, r16
     652:	88 0d       	add	r24, r8
     654:	99 1d       	adc	r25, r9
     656:	6c 85       	ldd	r22, Y+12	; 0x0c
     658:	7d 85       	ldd	r23, Y+13	; 0x0d
     65a:	a2 01       	movw	r20, r4
     65c:	0e 94 8d 1c 	call	0x391a	; 0x391a <memcpy>
     660:	48 86       	std	Y+8, r4	; 0x08
     662:	59 86       	std	Y+9, r5	; 0x09
     664:	6a 86       	std	Y+10, r6	; 0x0a
     666:	7b 86       	std	Y+11, r7	; 0x0b
     668:	48 85       	ldd	r20, Y+8	; 0x08
     66a:	59 85       	ldd	r21, Y+9	; 0x09
     66c:	6a 85       	ldd	r22, Y+10	; 0x0a
     66e:	7b 85       	ldd	r23, Y+11	; 0x0b
     670:	88 81       	ld	r24, Y
     672:	99 81       	ldd	r25, Y+1	; 0x01
     674:	aa 81       	ldd	r26, Y+2	; 0x02
     676:	bb 81       	ldd	r27, Y+3	; 0x03
     678:	48 17       	cp	r20, r24
     67a:	59 07       	cpc	r21, r25
     67c:	6a 07       	cpc	r22, r26
     67e:	7b 07       	cpc	r23, r27
     680:	20 f0       	brcs	.+8      	; 0x68a <BUFFER_Read+0x110>
     682:	18 86       	std	Y+8, r1	; 0x08
     684:	19 86       	std	Y+9, r1	; 0x09
     686:	1a 86       	std	Y+10, r1	; 0x0a
     688:	1b 86       	std	Y+11, r1	; 0x0b
     68a:	6c 2d       	mov	r22, r12
     68c:	7d 2d       	mov	r23, r13
     68e:	8e 2d       	mov	r24, r14
     690:	9f 2d       	mov	r25, r15
     692:	0e c0       	rjmp	.+28     	; 0x6b0 <BUFFER_Read+0x136>
     694:	60 e0       	ldi	r22, 0x00	; 0
     696:	70 e0       	ldi	r23, 0x00	; 0
     698:	80 e0       	ldi	r24, 0x00	; 0
     69a:	90 e0       	ldi	r25, 0x00	; 0
     69c:	09 c0       	rjmp	.+18     	; 0x6b0 <BUFFER_Read+0x136>
     69e:	60 e0       	ldi	r22, 0x00	; 0
     6a0:	70 e0       	ldi	r23, 0x00	; 0
     6a2:	80 e0       	ldi	r24, 0x00	; 0
     6a4:	90 e0       	ldi	r25, 0x00	; 0
     6a6:	04 c0       	rjmp	.+8      	; 0x6b0 <BUFFER_Read+0x136>
     6a8:	60 e0       	ldi	r22, 0x00	; 0
     6aa:	70 e0       	ldi	r23, 0x00	; 0
     6ac:	80 e0       	ldi	r24, 0x00	; 0
     6ae:	90 e0       	ldi	r25, 0x00	; 0
     6b0:	df 91       	pop	r29
     6b2:	cf 91       	pop	r28
     6b4:	1f 91       	pop	r17
     6b6:	0f 91       	pop	r16
     6b8:	ff 90       	pop	r15
     6ba:	ef 90       	pop	r14
     6bc:	df 90       	pop	r13
     6be:	cf 90       	pop	r12
     6c0:	bf 90       	pop	r11
     6c2:	af 90       	pop	r10
     6c4:	9f 90       	pop	r9
     6c6:	8f 90       	pop	r8
     6c8:	7f 90       	pop	r7
     6ca:	6f 90       	pop	r6
     6cc:	5f 90       	pop	r5
     6ce:	4f 90       	pop	r4
     6d0:	08 95       	ret

000006d2 <BUFFER_Reset>:

void BUFFER_Reset(BUFFER_t* Buffer) {
	if (Buffer == NULL) {									/* Check buffer structure */
     6d2:	00 97       	sbiw	r24, 0x00	; 0
     6d4:	49 f0       	breq	.+18     	; 0x6e8 <BUFFER_Reset+0x16>
		return;
	}
	Buffer->In = 0;											/* Reset values */
     6d6:	fc 01       	movw	r30, r24
     6d8:	14 82       	std	Z+4, r1	; 0x04
     6da:	15 82       	std	Z+5, r1	; 0x05
     6dc:	16 82       	std	Z+6, r1	; 0x06
     6de:	17 82       	std	Z+7, r1	; 0x07
	Buffer->Out = 0;
     6e0:	10 86       	std	Z+8, r1	; 0x08
     6e2:	11 86       	std	Z+9, r1	; 0x09
     6e4:	12 86       	std	Z+10, r1	; 0x0a
     6e6:	13 86       	std	Z+11, r1	; 0x0b
     6e8:	08 95       	ret

000006ea <BUFFER_FindElement>:
}

int32_t BUFFER_FindElement(BUFFER_t* Buffer, uint8_t Element) {
     6ea:	6f 92       	push	r6
     6ec:	7f 92       	push	r7
     6ee:	8f 92       	push	r8
     6f0:	9f 92       	push	r9
     6f2:	af 92       	push	r10
     6f4:	bf 92       	push	r11
     6f6:	cf 92       	push	r12
     6f8:	df 92       	push	r13
     6fa:	ef 92       	push	r14
     6fc:	ff 92       	push	r15
     6fe:	0f 93       	push	r16
     700:	1f 93       	push	r17
     702:	cf 93       	push	r28
     704:	df 93       	push	r29
	uint32_t Num, Out, retval = 0;
	
	if (Buffer == NULL) {									/* Check buffer structure */
     706:	00 97       	sbiw	r24, 0x00	; 0
     708:	09 f4       	brne	.+2      	; 0x70c <BUFFER_FindElement+0x22>
     70a:	42 c0       	rjmp	.+132    	; 0x790 <BUFFER_FindElement+0xa6>
     70c:	c6 2f       	mov	r28, r22
     70e:	8c 01       	movw	r16, r24
		return -1;
	}
	
	Num = BUFFER_GetFull(Buffer);							/* Create temporary variables */
     710:	f3 de       	rcall	.-538    	; 0x4f8 <BUFFER_GetFull>
     712:	6b 01       	movw	r12, r22
     714:	7c 01       	movw	r14, r24
	Out = Buffer->Out;
     716:	f8 01       	movw	r30, r16
     718:	40 85       	ldd	r20, Z+8	; 0x08
     71a:	51 85       	ldd	r21, Z+9	; 0x09
     71c:	62 85       	ldd	r22, Z+10	; 0x0a
     71e:	73 85       	ldd	r23, Z+11	; 0x0b
	while (Num > 0) {										/* Go through input elements */
     720:	c1 14       	cp	r12, r1
     722:	d1 04       	cpc	r13, r1
     724:	e1 04       	cpc	r14, r1
     726:	f1 04       	cpc	r15, r1
     728:	c1 f1       	breq	.+112    	; 0x79a <BUFFER_FindElement+0xb0>
		if (Out >= Buffer->Size) {							/* Check output overflow */
     72a:	80 80       	ld	r8, Z
     72c:	91 80       	ldd	r9, Z+1	; 0x01
     72e:	a2 80       	ldd	r10, Z+2	; 0x02
     730:	b3 80       	ldd	r11, Z+3	; 0x03
			Out = 0;
		}
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Element) {	/* Check for element */
     732:	a4 85       	ldd	r26, Z+12	; 0x0c
     734:	b5 85       	ldd	r27, Z+13	; 0x0d
     736:	00 e0       	ldi	r16, 0x00	; 0
     738:	10 e0       	ldi	r17, 0x00	; 0
     73a:	98 01       	movw	r18, r16
	
	Num = BUFFER_GetFull(Buffer);							/* Create temporary variables */
	Out = Buffer->Out;
	while (Num > 0) {										/* Go through input elements */
		if (Out >= Buffer->Size) {							/* Check output overflow */
			Out = 0;
     73c:	61 2c       	mov	r6, r1
     73e:	71 2c       	mov	r7, r1
     740:	d0 e0       	ldi	r29, 0x00	; 0
     742:	90 e0       	ldi	r25, 0x00	; 0
	}
	
	Num = BUFFER_GetFull(Buffer);							/* Create temporary variables */
	Out = Buffer->Out;
	while (Num > 0) {										/* Go through input elements */
		if (Out >= Buffer->Size) {							/* Check output overflow */
     744:	48 15       	cp	r20, r8
     746:	59 05       	cpc	r21, r9
     748:	6a 05       	cpc	r22, r10
     74a:	7b 05       	cpc	r23, r11
     74c:	20 f0       	brcs	.+8      	; 0x756 <BUFFER_FindElement+0x6c>
			Out = 0;
     74e:	46 2d       	mov	r20, r6
     750:	57 2d       	mov	r21, r7
     752:	6d 2f       	mov	r22, r29
     754:	79 2f       	mov	r23, r25
		}
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Element) {	/* Check for element */
     756:	fd 01       	movw	r30, r26
     758:	e4 0f       	add	r30, r20
     75a:	f5 1f       	adc	r31, r21
     75c:	80 81       	ld	r24, Z
     75e:	8c 13       	cpse	r24, r28
     760:	05 c0       	rjmp	.+10     	; 0x76c <BUFFER_FindElement+0x82>
			return retval;									/* Element found, return position in buffer */
     762:	60 2f       	mov	r22, r16
     764:	71 2f       	mov	r23, r17
     766:	82 2f       	mov	r24, r18
     768:	93 2f       	mov	r25, r19
     76a:	1b c0       	rjmp	.+54     	; 0x7a2 <BUFFER_FindElement+0xb8>
		}
		Out++;												/* Set new variables */
     76c:	4f 5f       	subi	r20, 0xFF	; 255
     76e:	5f 4f       	sbci	r21, 0xFF	; 255
     770:	6f 4f       	sbci	r22, 0xFF	; 255
     772:	7f 4f       	sbci	r23, 0xFF	; 255
		Num--;
		retval++;
     774:	0f 5f       	subi	r16, 0xFF	; 255
     776:	1f 4f       	sbci	r17, 0xFF	; 255
     778:	2f 4f       	sbci	r18, 0xFF	; 255
     77a:	3f 4f       	sbci	r19, 0xFF	; 255
		return -1;
	}
	
	Num = BUFFER_GetFull(Buffer);							/* Create temporary variables */
	Out = Buffer->Out;
	while (Num > 0) {										/* Go through input elements */
     77c:	c0 16       	cp	r12, r16
     77e:	d1 06       	cpc	r13, r17
     780:	e2 06       	cpc	r14, r18
     782:	f3 06       	cpc	r15, r19
     784:	f9 f6       	brne	.-66     	; 0x744 <BUFFER_FindElement+0x5a>
		}
		Out++;												/* Set new variables */
		Num--;
		retval++;
	}
	return -1;												/* Element is not in buffer */
     786:	6f ef       	ldi	r22, 0xFF	; 255
     788:	7f ef       	ldi	r23, 0xFF	; 255
     78a:	8f ef       	ldi	r24, 0xFF	; 255
     78c:	9f ef       	ldi	r25, 0xFF	; 255
     78e:	09 c0       	rjmp	.+18     	; 0x7a2 <BUFFER_FindElement+0xb8>

int32_t BUFFER_FindElement(BUFFER_t* Buffer, uint8_t Element) {
	uint32_t Num, Out, retval = 0;
	
	if (Buffer == NULL) {									/* Check buffer structure */
		return -1;
     790:	6f ef       	ldi	r22, 0xFF	; 255
     792:	7f ef       	ldi	r23, 0xFF	; 255
     794:	8f ef       	ldi	r24, 0xFF	; 255
     796:	9f ef       	ldi	r25, 0xFF	; 255
     798:	04 c0       	rjmp	.+8      	; 0x7a2 <BUFFER_FindElement+0xb8>
		}
		Out++;												/* Set new variables */
		Num--;
		retval++;
	}
	return -1;												/* Element is not in buffer */
     79a:	6f ef       	ldi	r22, 0xFF	; 255
     79c:	7f ef       	ldi	r23, 0xFF	; 255
     79e:	8f ef       	ldi	r24, 0xFF	; 255
     7a0:	9f ef       	ldi	r25, 0xFF	; 255
}
     7a2:	df 91       	pop	r29
     7a4:	cf 91       	pop	r28
     7a6:	1f 91       	pop	r17
     7a8:	0f 91       	pop	r16
     7aa:	ff 90       	pop	r15
     7ac:	ef 90       	pop	r14
     7ae:	df 90       	pop	r13
     7b0:	cf 90       	pop	r12
     7b2:	bf 90       	pop	r11
     7b4:	af 90       	pop	r10
     7b6:	9f 90       	pop	r9
     7b8:	8f 90       	pop	r8
     7ba:	7f 90       	pop	r7
     7bc:	6f 90       	pop	r6
     7be:	08 95       	ret

000007c0 <BUFFER_Find>:

int32_t BUFFER_Find(BUFFER_t* Buffer, uint8_t* Data, uint32_t Size) {
     7c0:	2f 92       	push	r2
     7c2:	3f 92       	push	r3
     7c4:	4f 92       	push	r4
     7c6:	5f 92       	push	r5
     7c8:	6f 92       	push	r6
     7ca:	7f 92       	push	r7
     7cc:	8f 92       	push	r8
     7ce:	9f 92       	push	r9
     7d0:	af 92       	push	r10
     7d2:	bf 92       	push	r11
     7d4:	cf 92       	push	r12
     7d6:	df 92       	push	r13
     7d8:	ef 92       	push	r14
     7da:	ff 92       	push	r15
     7dc:	0f 93       	push	r16
     7de:	1f 93       	push	r17
     7e0:	cf 93       	push	r28
     7e2:	df 93       	push	r29
     7e4:	cd b7       	in	r28, 0x3d	; 61
     7e6:	de b7       	in	r29, 0x3e	; 62
     7e8:	2d 97       	sbiw	r28, 0x0d	; 13
     7ea:	0f b6       	in	r0, 0x3f	; 63
     7ec:	f8 94       	cli
     7ee:	de bf       	out	0x3e, r29	; 62
     7f0:	0f be       	out	0x3f, r0	; 63
     7f2:	cd bf       	out	0x3d, r28	; 61
	uint32_t Num, Out, i, retval = 0;
	uint8_t found = 0;

	if (Buffer == NULL || (Num = BUFFER_GetFull(Buffer)) < Size) {	/* Check buffer structure and number of elements in buffer */
     7f4:	00 97       	sbiw	r24, 0x00	; 0
     7f6:	09 f4       	brne	.+2      	; 0x7fa <BUFFER_Find+0x3a>
     7f8:	d7 c0       	rjmp	.+430    	; 0x9a8 <BUFFER_Find+0x1e8>
     7fa:	69 01       	movw	r12, r18
     7fc:	7a 01       	movw	r14, r20
     7fe:	b7 2e       	mov	r11, r23
     800:	a6 2e       	mov	r10, r22
     802:	4c 01       	movw	r8, r24
     804:	79 de       	rcall	.-782    	; 0x4f8 <BUFFER_GetFull>
     806:	8b 01       	movw	r16, r22
     808:	9c 01       	movw	r18, r24
     80a:	6c 15       	cp	r22, r12
     80c:	7d 05       	cpc	r23, r13
     80e:	8e 05       	cpc	r24, r14
     810:	9f 05       	cpc	r25, r15
     812:	08 f4       	brcc	.+2      	; 0x816 <BUFFER_Find+0x56>
     814:	cd c0       	rjmp	.+410    	; 0x9b0 <BUFFER_Find+0x1f0>
		return -1;
	}
	Out = Buffer->Out;										/* Create temporary variables */
     816:	d4 01       	movw	r26, r8
     818:	18 96       	adiw	r26, 0x08	; 8
     81a:	4d 91       	ld	r20, X+
     81c:	5d 91       	ld	r21, X+
     81e:	6d 91       	ld	r22, X+
     820:	7c 91       	ld	r23, X
     822:	1b 97       	sbiw	r26, 0x0b	; 11
	while (Num > 0) {										/* Go through input elements in buffer */
     824:	01 15       	cp	r16, r1
     826:	11 05       	cpc	r17, r1
     828:	21 05       	cpc	r18, r1
     82a:	31 05       	cpc	r19, r1
     82c:	09 f4       	brne	.+2      	; 0x830 <BUFFER_Find+0x70>
     82e:	c4 c0       	rjmp	.+392    	; 0x9b8 <BUFFER_Find+0x1f8>
		if (Out >= Buffer->Size) {							/* Check output overflow */
     830:	4d 90       	ld	r4, X+
     832:	5d 90       	ld	r5, X+
     834:	6d 90       	ld	r6, X+
     836:	7c 90       	ld	r7, X
     838:	13 97       	sbiw	r26, 0x03	; 3
			Out = 0;
		}
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {	/* Check if current element in buffer matches first element in data array */
     83a:	1c 96       	adiw	r26, 0x0c	; 12
     83c:	8d 91       	ld	r24, X+
     83e:	9c 91       	ld	r25, X
     840:	1d 97       	sbiw	r26, 0x0d	; 13
     842:	a8 86       	std	Y+8, r10	; 0x08
     844:	b9 86       	std	Y+9, r11	; 0x09
     846:	e8 85       	ldd	r30, Y+8	; 0x08
     848:	f9 85       	ldd	r31, Y+9	; 0x09
     84a:	a1 91       	ld	r26, Z+
     84c:	f9 87       	std	Y+9, r31	; 0x09
     84e:	e8 87       	std	Y+8, r30	; 0x08
     850:	ae 83       	std	Y+6, r26	; 0x06
     852:	1f 82       	std	Y+7, r1	; 0x07
     854:	1a 82       	std	Y+2, r1	; 0x02
     856:	1b 82       	std	Y+3, r1	; 0x03
     858:	1c 82       	std	Y+4, r1	; 0x04
     85a:	1d 82       	std	Y+5, r1	; 0x05
		retval++;
		if (found) {										/* We have found first element */
			i = 1;											/* First character found */
			while (i < Size && Num > 0) {					/* Check others */	
				if (Out >= Buffer->Size) {					/* Check output overflow */
					Out = 0;
     85c:	e0 e0       	ldi	r30, 0x00	; 0
     85e:	31 2c       	mov	r3, r1
     860:	21 2c       	mov	r2, r1
     862:	19 82       	std	Y+1, r1	; 0x01
     864:	9c 87       	std	Y+12, r25	; 0x0c
     866:	8b 87       	std	Y+11, r24	; 0x0b
     868:	ea 87       	std	Y+10, r30	; 0x0a
	if (Buffer == NULL || (Num = BUFFER_GetFull(Buffer)) < Size) {	/* Check buffer structure and number of elements in buffer */
		return -1;
	}
	Out = Buffer->Out;										/* Create temporary variables */
	while (Num > 0) {										/* Go through input elements in buffer */
		if (Out >= Buffer->Size) {							/* Check output overflow */
     86a:	44 15       	cp	r20, r4
     86c:	55 05       	cpc	r21, r5
     86e:	66 05       	cpc	r22, r6
     870:	77 05       	cpc	r23, r7
     872:	20 f0       	brcs	.+8      	; 0x87c <BUFFER_Find+0xbc>
			Out = 0;
     874:	40 e0       	ldi	r20, 0x00	; 0
     876:	50 e0       	ldi	r21, 0x00	; 0
     878:	60 e0       	ldi	r22, 0x00	; 0
     87a:	70 e0       	ldi	r23, 0x00	; 0
		}
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {	/* Check if current element in buffer matches first element in data array */
     87c:	eb 85       	ldd	r30, Y+11	; 0x0b
     87e:	fc 85       	ldd	r31, Y+12	; 0x0c
     880:	e4 0f       	add	r30, r20
     882:	f5 1f       	adc	r31, r21
     884:	e0 81       	ld	r30, Z
     886:	be 81       	ldd	r27, Y+6	; 0x06
     888:	eb 17       	cp	r30, r27
     88a:	09 f4       	brne	.+2      	; 0x88e <BUFFER_Find+0xce>
     88c:	99 c0       	rjmp	.+306    	; 0x9c0 <BUFFER_Find+0x200>
			found = 1;
		}
		
		Out++;												/* Set new variables */
     88e:	4f 5f       	subi	r20, 0xFF	; 255
     890:	5f 4f       	sbci	r21, 0xFF	; 255
     892:	6f 4f       	sbci	r22, 0xFF	; 255
     894:	7f 4f       	sbci	r23, 0xFF	; 255
		Num--;
     896:	01 50       	subi	r16, 0x01	; 1
     898:	11 09       	sbc	r17, r1
     89a:	21 09       	sbc	r18, r1
     89c:	31 09       	sbc	r19, r1
		retval++;
     89e:	8a 81       	ldd	r24, Y+2	; 0x02
     8a0:	9b 81       	ldd	r25, Y+3	; 0x03
     8a2:	ac 81       	ldd	r26, Y+4	; 0x04
     8a4:	bd 81       	ldd	r27, Y+5	; 0x05
     8a6:	01 96       	adiw	r24, 0x01	; 1
     8a8:	a1 1d       	adc	r26, r1
     8aa:	b1 1d       	adc	r27, r1
     8ac:	8a 83       	std	Y+2, r24	; 0x02
     8ae:	9b 83       	std	Y+3, r25	; 0x03
     8b0:	ac 83       	std	Y+4, r26	; 0x04
     8b2:	bd 83       	std	Y+5, r27	; 0x05
		if (found) {										/* We have found first element */
     8b4:	9f 81       	ldd	r25, Y+7	; 0x07
     8b6:	99 23       	and	r25, r25
     8b8:	09 f4       	brne	.+2      	; 0x8bc <BUFFER_Find+0xfc>
     8ba:	6c c0       	rjmp	.+216    	; 0x994 <BUFFER_Find+0x1d4>
			i = 1;											/* First character found */
			while (i < Size && Num > 0) {					/* Check others */	
     8bc:	a2 e0       	ldi	r26, 0x02	; 2
     8be:	ca 16       	cp	r12, r26
     8c0:	d1 04       	cpc	r13, r1
     8c2:	e1 04       	cpc	r14, r1
     8c4:	f1 04       	cpc	r15, r1
     8c6:	08 f4       	brcc	.+2      	; 0x8ca <BUFFER_Find+0x10a>
     8c8:	52 c0       	rjmp	.+164    	; 0x96e <BUFFER_Find+0x1ae>
     8ca:	01 15       	cp	r16, r1
     8cc:	11 05       	cpc	r17, r1
     8ce:	21 05       	cpc	r18, r1
     8d0:	31 05       	cpc	r19, r1
     8d2:	09 f4       	brne	.+2      	; 0x8d6 <BUFFER_Find+0x116>
     8d4:	8b c0       	rjmp	.+278    	; 0x9ec <BUFFER_Find+0x22c>
     8d6:	e8 85       	ldd	r30, Y+8	; 0x08
     8d8:	f9 85       	ldd	r31, Y+9	; 0x09
     8da:	88 24       	eor	r8, r8
     8dc:	83 94       	inc	r8
     8de:	91 2c       	mov	r9, r1
     8e0:	a1 2c       	mov	r10, r1
     8e2:	b1 2c       	mov	r11, r1
     8e4:	8b 85       	ldd	r24, Y+11	; 0x0b
     8e6:	9c 85       	ldd	r25, Y+12	; 0x0c
     8e8:	ba 85       	ldd	r27, Y+10	; 0x0a
     8ea:	bd 87       	std	Y+13, r27	; 0x0d
				if (Out >= Buffer->Size) {					/* Check output overflow */
     8ec:	44 15       	cp	r20, r4
     8ee:	55 05       	cpc	r21, r5
     8f0:	66 05       	cpc	r22, r6
     8f2:	77 05       	cpc	r23, r7
     8f4:	20 f0       	brcs	.+8      	; 0x8fe <BUFFER_Find+0x13e>
					Out = 0;
     8f6:	4d 85       	ldd	r20, Y+13	; 0x0d
     8f8:	53 2d       	mov	r21, r3
     8fa:	62 2d       	mov	r22, r2
     8fc:	79 81       	ldd	r23, Y+1	; 0x01
				}
				if ((uint8_t)Buffer->Buffer[Out] != (uint8_t)Data[i]) {	/* Check if current character in buffer matches character in string */
     8fe:	a1 91       	ld	r26, Z+
     900:	aa 87       	std	Y+10, r26	; 0x0a
     902:	dc 01       	movw	r26, r24
     904:	a4 0f       	add	r26, r20
     906:	b5 1f       	adc	r27, r21
     908:	ac 91       	ld	r26, X
     90a:	ba 85       	ldd	r27, Y+10	; 0x0a
     90c:	ab 17       	cp	r26, r27
     90e:	a1 f0       	breq	.+40     	; 0x938 <BUFFER_Find+0x178>
     910:	9c 87       	std	Y+12, r25	; 0x0c
     912:	8b 87       	std	Y+11, r24	; 0x0b
     914:	ed 85       	ldd	r30, Y+13	; 0x0d
     916:	ea 87       	std	Y+10, r30	; 0x0a
     918:	8a 81       	ldd	r24, Y+2	; 0x02
     91a:	9b 81       	ldd	r25, Y+3	; 0x03
     91c:	ac 81       	ldd	r26, Y+4	; 0x04
     91e:	bd 81       	ldd	r27, Y+5	; 0x05
     920:	01 97       	sbiw	r24, 0x01	; 1
     922:	a1 09       	sbc	r26, r1
     924:	b1 09       	sbc	r27, r1
					retval += i - 1;
     926:	88 0d       	add	r24, r8
     928:	99 1d       	adc	r25, r9
     92a:	aa 1d       	adc	r26, r10
     92c:	bb 1d       	adc	r27, r11
     92e:	8a 83       	std	Y+2, r24	; 0x02
     930:	9b 83       	std	Y+3, r25	; 0x03
     932:	ac 83       	std	Y+4, r26	; 0x04
     934:	bd 83       	std	Y+5, r27	; 0x05
					break;
     936:	20 c0       	rjmp	.+64     	; 0x978 <BUFFER_Find+0x1b8>
				}
				Out++;										/* Set new variables */
     938:	4f 5f       	subi	r20, 0xFF	; 255
     93a:	5f 4f       	sbci	r21, 0xFF	; 255
     93c:	6f 4f       	sbci	r22, 0xFF	; 255
     93e:	7f 4f       	sbci	r23, 0xFF	; 255
				Num--;
     940:	01 50       	subi	r16, 0x01	; 1
     942:	11 09       	sbc	r17, r1
     944:	21 09       	sbc	r18, r1
     946:	31 09       	sbc	r19, r1
				i++;
     948:	af ef       	ldi	r26, 0xFF	; 255
     94a:	8a 1a       	sub	r8, r26
     94c:	9a 0a       	sbc	r9, r26
     94e:	aa 0a       	sbc	r10, r26
     950:	ba 0a       	sbc	r11, r26
		Out++;												/* Set new variables */
		Num--;
		retval++;
		if (found) {										/* We have found first element */
			i = 1;											/* First character found */
			while (i < Size && Num > 0) {					/* Check others */	
     952:	8c 14       	cp	r8, r12
     954:	9d 04       	cpc	r9, r13
     956:	ae 04       	cpc	r10, r14
     958:	bf 04       	cpc	r11, r15
     95a:	99 f0       	breq	.+38     	; 0x982 <BUFFER_Find+0x1c2>
     95c:	01 15       	cp	r16, r1
     95e:	11 05       	cpc	r17, r1
     960:	21 05       	cpc	r18, r1
     962:	31 05       	cpc	r19, r1
     964:	19 f6       	brne	.-122    	; 0x8ec <BUFFER_Find+0x12c>
			if (i == Size) {								/* We have found data sequence in buffer */
				return retval - 1;
			}
		}
	}
	return -1;												/* Data sequence is not in buffer */
     966:	6f ef       	ldi	r22, 0xFF	; 255
     968:	7f ef       	ldi	r23, 0xFF	; 255
     96a:	cb 01       	movw	r24, r22
     96c:	47 c0       	rjmp	.+142    	; 0x9fc <BUFFER_Find+0x23c>
		Out++;												/* Set new variables */
		Num--;
		retval++;
		if (found) {										/* We have found first element */
			i = 1;											/* First character found */
			while (i < Size && Num > 0) {					/* Check others */	
     96e:	88 24       	eor	r8, r8
     970:	83 94       	inc	r8
     972:	91 2c       	mov	r9, r1
     974:	a1 2c       	mov	r10, r1
     976:	b1 2c       	mov	r11, r1
				}
				Out++;										/* Set new variables */
				Num--;
				i++;
			}
			if (i == Size) {								/* We have found data sequence in buffer */
     978:	8c 14       	cp	r8, r12
     97a:	9d 04       	cpc	r9, r13
     97c:	ae 04       	cpc	r10, r14
     97e:	bf 04       	cpc	r11, r15
     980:	49 f4       	brne	.+18     	; 0x994 <BUFFER_Find+0x1d4>
				return retval - 1;
     982:	6a 81       	ldd	r22, Y+2	; 0x02
     984:	7b 81       	ldd	r23, Y+3	; 0x03
     986:	8c 81       	ldd	r24, Y+4	; 0x04
     988:	9d 81       	ldd	r25, Y+5	; 0x05
     98a:	61 50       	subi	r22, 0x01	; 1
     98c:	71 09       	sbc	r23, r1
     98e:	81 09       	sbc	r24, r1
     990:	91 09       	sbc	r25, r1
     992:	34 c0       	rjmp	.+104    	; 0x9fc <BUFFER_Find+0x23c>

	if (Buffer == NULL || (Num = BUFFER_GetFull(Buffer)) < Size) {	/* Check buffer structure and number of elements in buffer */
		return -1;
	}
	Out = Buffer->Out;										/* Create temporary variables */
	while (Num > 0) {										/* Go through input elements in buffer */
     994:	01 15       	cp	r16, r1
     996:	11 05       	cpc	r17, r1
     998:	21 05       	cpc	r18, r1
     99a:	31 05       	cpc	r19, r1
     99c:	09 f0       	breq	.+2      	; 0x9a0 <BUFFER_Find+0x1e0>
     99e:	65 cf       	rjmp	.-310    	; 0x86a <BUFFER_Find+0xaa>
			if (i == Size) {								/* We have found data sequence in buffer */
				return retval - 1;
			}
		}
	}
	return -1;												/* Data sequence is not in buffer */
     9a0:	6f ef       	ldi	r22, 0xFF	; 255
     9a2:	7f ef       	ldi	r23, 0xFF	; 255
     9a4:	cb 01       	movw	r24, r22
     9a6:	2a c0       	rjmp	.+84     	; 0x9fc <BUFFER_Find+0x23c>
int32_t BUFFER_Find(BUFFER_t* Buffer, uint8_t* Data, uint32_t Size) {
	uint32_t Num, Out, i, retval = 0;
	uint8_t found = 0;

	if (Buffer == NULL || (Num = BUFFER_GetFull(Buffer)) < Size) {	/* Check buffer structure and number of elements in buffer */
		return -1;
     9a8:	6f ef       	ldi	r22, 0xFF	; 255
     9aa:	7f ef       	ldi	r23, 0xFF	; 255
     9ac:	cb 01       	movw	r24, r22
     9ae:	26 c0       	rjmp	.+76     	; 0x9fc <BUFFER_Find+0x23c>
     9b0:	6f ef       	ldi	r22, 0xFF	; 255
     9b2:	7f ef       	ldi	r23, 0xFF	; 255
     9b4:	cb 01       	movw	r24, r22
     9b6:	22 c0       	rjmp	.+68     	; 0x9fc <BUFFER_Find+0x23c>
			if (i == Size) {								/* We have found data sequence in buffer */
				return retval - 1;
			}
		}
	}
	return -1;												/* Data sequence is not in buffer */
     9b8:	6f ef       	ldi	r22, 0xFF	; 255
     9ba:	7f ef       	ldi	r23, 0xFF	; 255
     9bc:	cb 01       	movw	r24, r22
     9be:	1e c0       	rjmp	.+60     	; 0x9fc <BUFFER_Find+0x23c>
		}
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {	/* Check if current element in buffer matches first element in data array */
			found = 1;
		}
		
		Out++;												/* Set new variables */
     9c0:	4f 5f       	subi	r20, 0xFF	; 255
     9c2:	5f 4f       	sbci	r21, 0xFF	; 255
     9c4:	6f 4f       	sbci	r22, 0xFF	; 255
     9c6:	7f 4f       	sbci	r23, 0xFF	; 255
		Num--;
     9c8:	01 50       	subi	r16, 0x01	; 1
     9ca:	11 09       	sbc	r17, r1
     9cc:	21 09       	sbc	r18, r1
     9ce:	31 09       	sbc	r19, r1
		retval++;
     9d0:	8a 81       	ldd	r24, Y+2	; 0x02
     9d2:	9b 81       	ldd	r25, Y+3	; 0x03
     9d4:	ac 81       	ldd	r26, Y+4	; 0x04
     9d6:	bd 81       	ldd	r27, Y+5	; 0x05
     9d8:	01 96       	adiw	r24, 0x01	; 1
     9da:	a1 1d       	adc	r26, r1
     9dc:	b1 1d       	adc	r27, r1
     9de:	8a 83       	std	Y+2, r24	; 0x02
     9e0:	9b 83       	std	Y+3, r25	; 0x03
     9e2:	ac 83       	std	Y+4, r26	; 0x04
     9e4:	bd 83       	std	Y+5, r27	; 0x05
	while (Num > 0) {										/* Go through input elements in buffer */
		if (Out >= Buffer->Size) {							/* Check output overflow */
			Out = 0;
		}
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {	/* Check if current element in buffer matches first element in data array */
			found = 1;
     9e6:	91 e0       	ldi	r25, 0x01	; 1
     9e8:	9f 83       	std	Y+7, r25	; 0x07
     9ea:	68 cf       	rjmp	.-304    	; 0x8bc <BUFFER_Find+0xfc>
				}
				Out++;										/* Set new variables */
				Num--;
				i++;
			}
			if (i == Size) {								/* We have found data sequence in buffer */
     9ec:	ca 94       	dec	r12
     9ee:	cd 28       	or	r12, r13
     9f0:	ce 28       	or	r12, r14
     9f2:	cf 28       	or	r12, r15
     9f4:	31 f2       	breq	.-116    	; 0x982 <BUFFER_Find+0x1c2>
				return retval - 1;
			}
		}
	}
	return -1;												/* Data sequence is not in buffer */
     9f6:	6f ef       	ldi	r22, 0xFF	; 255
     9f8:	7f ef       	ldi	r23, 0xFF	; 255
     9fa:	cb 01       	movw	r24, r22
}
     9fc:	2d 96       	adiw	r28, 0x0d	; 13
     9fe:	0f b6       	in	r0, 0x3f	; 63
     a00:	f8 94       	cli
     a02:	de bf       	out	0x3e, r29	; 62
     a04:	0f be       	out	0x3f, r0	; 63
     a06:	cd bf       	out	0x3d, r28	; 61
     a08:	df 91       	pop	r29
     a0a:	cf 91       	pop	r28
     a0c:	1f 91       	pop	r17
     a0e:	0f 91       	pop	r16
     a10:	ff 90       	pop	r15
     a12:	ef 90       	pop	r14
     a14:	df 90       	pop	r13
     a16:	cf 90       	pop	r12
     a18:	bf 90       	pop	r11
     a1a:	af 90       	pop	r10
     a1c:	9f 90       	pop	r9
     a1e:	8f 90       	pop	r8
     a20:	7f 90       	pop	r7
     a22:	6f 90       	pop	r6
     a24:	5f 90       	pop	r5
     a26:	4f 90       	pop	r4
     a28:	3f 90       	pop	r3
     a2a:	2f 90       	pop	r2
     a2c:	08 95       	ret

00000a2e <BUFFER_WriteString>:

uint32_t BUFFER_WriteString(BUFFER_t* Buffer, char* buff) {
	return BUFFER_Write(Buffer, (uint8_t *)buff, strlen(buff));	/* Write string to buffer */
     a2e:	fb 01       	movw	r30, r22
     a30:	01 90       	ld	r0, Z+
     a32:	00 20       	and	r0, r0
     a34:	e9 f7       	brne	.-6      	; 0xa30 <BUFFER_WriteString+0x2>
     a36:	31 97       	sbiw	r30, 0x01	; 1
     a38:	9f 01       	movw	r18, r30
     a3a:	26 1b       	sub	r18, r22
     a3c:	37 0b       	sbc	r19, r23
     a3e:	40 e0       	ldi	r20, 0x00	; 0
     a40:	50 e0       	ldi	r21, 0x00	; 0
     a42:	0c cc       	rjmp	.-2024   	; 0x25c <BUFFER_Write>
}
     a44:	08 95       	ret

00000a46 <BUFFER_ReadString>:

uint32_t BUFFER_ReadString(BUFFER_t* Buffer, char* buff, uint32_t buffsize) {
     a46:	2f 92       	push	r2
     a48:	3f 92       	push	r3
     a4a:	4f 92       	push	r4
     a4c:	5f 92       	push	r5
     a4e:	6f 92       	push	r6
     a50:	7f 92       	push	r7
     a52:	8f 92       	push	r8
     a54:	9f 92       	push	r9
     a56:	af 92       	push	r10
     a58:	bf 92       	push	r11
     a5a:	cf 92       	push	r12
     a5c:	df 92       	push	r13
     a5e:	ef 92       	push	r14
     a60:	ff 92       	push	r15
     a62:	0f 93       	push	r16
     a64:	1f 93       	push	r17
     a66:	cf 93       	push	r28
     a68:	df 93       	push	r29
     a6a:	1f 92       	push	r1
     a6c:	cd b7       	in	r28, 0x3d	; 61
     a6e:	de b7       	in	r29, 0x3e	; 62
	uint32_t i = 0, freeMem, fullMem;
	uint8_t ch;
	if (Buffer == NULL) {
     a70:	00 97       	sbiw	r24, 0x00	; 0
     a72:	09 f4       	brne	.+2      	; 0xa76 <BUFFER_ReadString+0x30>
     a74:	67 c0       	rjmp	.+206    	; 0xb44 <BUFFER_ReadString+0xfe>
     a76:	69 01       	movw	r12, r18
     a78:	7a 01       	movw	r14, r20
     a7a:	1b 01       	movw	r2, r22
     a7c:	8c 01       	movw	r16, r24
		return 0;											/* Check value buffer */
	}
	
	freeMem = BUFFER_GetFree(Buffer);						/* Get free memory */
     a7e:	a2 db       	rcall	.-2236   	; 0x1c4 <BUFFER_GetFree>
     a80:	2b 01       	movw	r4, r22
     a82:	3c 01       	movw	r6, r24
	fullMem = BUFFER_GetFull(Buffer);						/* Get full memory */
     a84:	c8 01       	movw	r24, r16
     a86:	38 dd       	rcall	.-1424   	; 0x4f8 <BUFFER_GetFull>
     a88:	4b 01       	movw	r8, r22
     a8a:	5c 01       	movw	r10, r24
	if (													/* Check for any data in buffer */
     a8c:	67 2b       	or	r22, r23
     a8e:	68 2b       	or	r22, r24
     a90:	69 2b       	or	r22, r25
     a92:	09 f4       	brne	.+2      	; 0xa96 <BUFFER_ReadString+0x50>
     a94:	5c c0       	rjmp	.+184    	; 0xb4e <BUFFER_ReadString+0x108>
		fullMem == 0 ||                                 	/* Buffer empty */
		(
			BUFFER_FindElement(Buffer, Buffer->StringDelimiter) < 0 && 	/* String delimiter is not in buffer */
     a96:	f8 01       	movw	r30, r16
     a98:	67 85       	ldd	r22, Z+15	; 0x0f
     a9a:	c8 01       	movw	r24, r16
     a9c:	26 de       	rcall	.-948    	; 0x6ea <BUFFER_FindElement>
	}
	
	freeMem = BUFFER_GetFree(Buffer);						/* Get free memory */
	fullMem = BUFFER_GetFull(Buffer);						/* Get full memory */
	if (													/* Check for any data in buffer */
		fullMem == 0 ||                                 	/* Buffer empty */
     a9e:	99 23       	and	r25, r25
     aa0:	54 f4       	brge	.+20     	; 0xab6 <BUFFER_ReadString+0x70>
		(
			BUFFER_FindElement(Buffer, Buffer->StringDelimiter) < 0 && 	/* String delimiter is not in buffer */
     aa2:	45 28       	or	r4, r5
     aa4:	46 28       	or	r4, r6
     aa6:	47 28       	or	r4, r7
     aa8:	31 f0       	breq	.+12     	; 0xab6 <BUFFER_ReadString+0x70>
			freeMem != 0 &&                                            	/* Buffer is not full */
     aaa:	8c 14       	cp	r8, r12
     aac:	9d 04       	cpc	r9, r13
     aae:	ae 04       	cpc	r10, r14
     ab0:	bf 04       	cpc	r11, r15
     ab2:	08 f4       	brcc	.+2      	; 0xab6 <BUFFER_ReadString+0x70>
     ab4:	51 c0       	rjmp	.+162    	; 0xb58 <BUFFER_ReadString+0x112>
			fullMem < buffsize                                         	/* User buffer size is larger than number of elements in buffer */
		)
	) {
		return 0;											/* Return with no elements read */
	}
	while (i < (buffsize - 1)) {							/* If available buffer size is more than 0 characters */
     ab6:	26 01       	movw	r4, r12
     ab8:	37 01       	movw	r6, r14
     aba:	f1 e0       	ldi	r31, 0x01	; 1
     abc:	4f 1a       	sub	r4, r31
     abe:	51 08       	sbc	r5, r1
     ac0:	61 08       	sbc	r6, r1
     ac2:	71 08       	sbc	r7, r1
     ac4:	29 f1       	breq	.+74     	; 0xb10 <BUFFER_ReadString+0xca>
     ac6:	71 01       	movw	r14, r2
     ac8:	81 2c       	mov	r8, r1
     aca:	91 2c       	mov	r9, r1
     acc:	54 01       	movw	r10, r8
		BUFFER_Read(Buffer, &ch, 1);						/* We have available data */
     ace:	21 e0       	ldi	r18, 0x01	; 1
     ad0:	30 e0       	ldi	r19, 0x00	; 0
     ad2:	40 e0       	ldi	r20, 0x00	; 0
     ad4:	50 e0       	ldi	r21, 0x00	; 0
     ad6:	be 01       	movw	r22, r28
     ad8:	6f 5f       	subi	r22, 0xFF	; 255
     ada:	7f 4f       	sbci	r23, 0xFF	; 255
     adc:	c8 01       	movw	r24, r16
     ade:	4d dd       	rcall	.-1382   	; 0x57a <BUFFER_Read>
		buff[i] = (char)ch;									/* Save character */
     ae0:	89 81       	ldd	r24, Y+1	; 0x01
     ae2:	f7 01       	movw	r30, r14
     ae4:	81 93       	st	Z+, r24
     ae6:	7f 01       	movw	r14, r30
		if ((char)buff[i] == (char)Buffer->StringDelimiter) {	/* Check for end of string */
     ae8:	f8 01       	movw	r30, r16
     aea:	97 85       	ldd	r25, Z+15	; 0x0f
     aec:	89 17       	cp	r24, r25
     aee:	51 f0       	breq	.+20     	; 0xb04 <BUFFER_ReadString+0xbe>
			break;											/* Done */
		}
		i++;												/* Increase */
     af0:	ff ef       	ldi	r31, 0xFF	; 255
     af2:	8f 1a       	sub	r8, r31
     af4:	9f 0a       	sbc	r9, r31
     af6:	af 0a       	sbc	r10, r31
     af8:	bf 0a       	sbc	r11, r31
			fullMem < buffsize                                         	/* User buffer size is larger than number of elements in buffer */
		)
	) {
		return 0;											/* Return with no elements read */
	}
	while (i < (buffsize - 1)) {							/* If available buffer size is more than 0 characters */
     afa:	84 14       	cp	r8, r4
     afc:	95 04       	cpc	r9, r5
     afe:	a6 04       	cpc	r10, r6
     b00:	b7 04       	cpc	r11, r7
     b02:	28 f3       	brcs	.-54     	; 0xace <BUFFER_ReadString+0x88>
		if ((char)buff[i] == (char)Buffer->StringDelimiter) {	/* Check for end of string */
			break;											/* Done */
		}
		i++;												/* Increase */
	}
	if (i == (buffsize - 1)) {								/* Add zero to the end of string */
     b04:	48 14       	cp	r4, r8
     b06:	59 04       	cpc	r5, r9
     b08:	6a 04       	cpc	r6, r10
     b0a:	7b 04       	cpc	r7, r11
     b0c:	69 f4       	brne	.+26     	; 0xb28 <BUFFER_ReadString+0xe2>
     b0e:	03 c0       	rjmp	.+6      	; 0xb16 <BUFFER_ReadString+0xd0>
			fullMem < buffsize                                         	/* User buffer size is larger than number of elements in buffer */
		)
	) {
		return 0;											/* Return with no elements read */
	}
	while (i < (buffsize - 1)) {							/* If available buffer size is more than 0 characters */
     b10:	81 2c       	mov	r8, r1
     b12:	91 2c       	mov	r9, r1
     b14:	54 01       	movw	r10, r8
			break;											/* Done */
		}
		i++;												/* Increase */
	}
	if (i == (buffsize - 1)) {								/* Add zero to the end of string */
		buff[i] = 0;
     b16:	f1 01       	movw	r30, r2
     b18:	e8 0d       	add	r30, r8
     b1a:	f9 1d       	adc	r31, r9
     b1c:	10 82       	st	Z, r1
     b1e:	68 2d       	mov	r22, r8
     b20:	79 2d       	mov	r23, r9
     b22:	8a 2d       	mov	r24, r10
     b24:	9b 2d       	mov	r25, r11
     b26:	1c c0       	rjmp	.+56     	; 0xb60 <BUFFER_ReadString+0x11a>
	} else {
		buff[++i] = 0;
     b28:	8f ef       	ldi	r24, 0xFF	; 255
     b2a:	88 1a       	sub	r8, r24
     b2c:	98 0a       	sbc	r9, r24
     b2e:	a8 0a       	sbc	r10, r24
     b30:	b8 0a       	sbc	r11, r24
     b32:	f1 01       	movw	r30, r2
     b34:	e8 0d       	add	r30, r8
     b36:	f9 1d       	adc	r31, r9
     b38:	10 82       	st	Z, r1
     b3a:	68 2d       	mov	r22, r8
     b3c:	79 2d       	mov	r23, r9
     b3e:	8a 2d       	mov	r24, r10
     b40:	9b 2d       	mov	r25, r11
     b42:	0e c0       	rjmp	.+28     	; 0xb60 <BUFFER_ReadString+0x11a>

uint32_t BUFFER_ReadString(BUFFER_t* Buffer, char* buff, uint32_t buffsize) {
	uint32_t i = 0, freeMem, fullMem;
	uint8_t ch;
	if (Buffer == NULL) {
		return 0;											/* Check value buffer */
     b44:	60 e0       	ldi	r22, 0x00	; 0
     b46:	70 e0       	ldi	r23, 0x00	; 0
     b48:	80 e0       	ldi	r24, 0x00	; 0
     b4a:	90 e0       	ldi	r25, 0x00	; 0
     b4c:	09 c0       	rjmp	.+18     	; 0xb60 <BUFFER_ReadString+0x11a>
			BUFFER_FindElement(Buffer, Buffer->StringDelimiter) < 0 && 	/* String delimiter is not in buffer */
			freeMem != 0 &&                                            	/* Buffer is not full */
			fullMem < buffsize                                         	/* User buffer size is larger than number of elements in buffer */
		)
	) {
		return 0;											/* Return with no elements read */
     b4e:	60 e0       	ldi	r22, 0x00	; 0
     b50:	70 e0       	ldi	r23, 0x00	; 0
     b52:	80 e0       	ldi	r24, 0x00	; 0
     b54:	90 e0       	ldi	r25, 0x00	; 0
     b56:	04 c0       	rjmp	.+8      	; 0xb60 <BUFFER_ReadString+0x11a>
     b58:	60 e0       	ldi	r22, 0x00	; 0
     b5a:	70 e0       	ldi	r23, 0x00	; 0
     b5c:	80 e0       	ldi	r24, 0x00	; 0
     b5e:	90 e0       	ldi	r25, 0x00	; 0
		buff[i] = 0;
	} else {
		buff[++i] = 0;
	}
	return i;												/* Return number of characters in buffer */
}
     b60:	0f 90       	pop	r0
     b62:	df 91       	pop	r29
     b64:	cf 91       	pop	r28
     b66:	1f 91       	pop	r17
     b68:	0f 91       	pop	r16
     b6a:	ff 90       	pop	r15
     b6c:	ef 90       	pop	r14
     b6e:	df 90       	pop	r13
     b70:	cf 90       	pop	r12
     b72:	bf 90       	pop	r11
     b74:	af 90       	pop	r10
     b76:	9f 90       	pop	r9
     b78:	8f 90       	pop	r8
     b7a:	7f 90       	pop	r7
     b7c:	6f 90       	pop	r6
     b7e:	5f 90       	pop	r5
     b80:	4f 90       	pop	r4
     b82:	3f 90       	pop	r3
     b84:	2f 90       	pop	r2
     b86:	08 95       	ret

00000b88 <ParseNumber>:
    ESP8266_USARTSENDCHAR(&c);
    ESP8266_USARTSENDSTRING(ESP8266_CRLF);
    SendCommand(ESP8266, ESP8266_COMMAND_AUTOCONN, NULL, NULL); /* Send command */
    
    return ESP8266_WaitReady(ESP8266);                      /* Wait till end */
}
     b88:	cf 92       	push	r12
     b8a:	df 92       	push	r13
     b8c:	ef 92       	push	r14
     b8e:	ff 92       	push	r15
     b90:	0f 93       	push	r16
     b92:	1f 93       	push	r17
     b94:	fc 01       	movw	r30, r24
     b96:	db 01       	movw	r26, r22
     b98:	80 81       	ld	r24, Z
     b9a:	8d 32       	cpi	r24, 0x2D	; 45
     b9c:	19 f4       	brne	.+6      	; 0xba4 <ParseNumber+0x1c>
     b9e:	31 96       	adiw	r30, 0x01	; 1
     ba0:	91 e0       	ldi	r25, 0x01	; 1
     ba2:	01 c0       	rjmp	.+2      	; 0xba6 <ParseNumber+0x1e>
     ba4:	90 e0       	ldi	r25, 0x00	; 0
     ba6:	00 81       	ld	r16, Z
     ba8:	80 ed       	ldi	r24, 0xD0	; 208
     baa:	80 0f       	add	r24, r16
     bac:	8a 30       	cpi	r24, 0x0A	; 10
     bae:	48 f5       	brcc	.+82     	; 0xc02 <ParseNumber+0x7a>
     bb0:	31 96       	adiw	r30, 0x01	; 1
     bb2:	89 2f       	mov	r24, r25
     bb4:	40 e0       	ldi	r20, 0x00	; 0
     bb6:	50 e0       	ldi	r21, 0x00	; 0
     bb8:	ba 01       	movw	r22, r20
     bba:	44 0f       	add	r20, r20
     bbc:	55 1f       	adc	r21, r21
     bbe:	66 1f       	adc	r22, r22
     bc0:	77 1f       	adc	r23, r23
     bc2:	6a 01       	movw	r12, r20
     bc4:	7b 01       	movw	r14, r22
     bc6:	cc 0c       	add	r12, r12
     bc8:	dd 1c       	adc	r13, r13
     bca:	ee 1c       	adc	r14, r14
     bcc:	ff 1c       	adc	r15, r15
     bce:	cc 0c       	add	r12, r12
     bd0:	dd 1c       	adc	r13, r13
     bd2:	ee 1c       	adc	r14, r14
     bd4:	ff 1c       	adc	r15, r15
     bd6:	4c 0d       	add	r20, r12
     bd8:	5d 1d       	adc	r21, r13
     bda:	6e 1d       	adc	r22, r14
     bdc:	7f 1d       	adc	r23, r15
     bde:	10 e0       	ldi	r17, 0x00	; 0
     be0:	00 53       	subi	r16, 0x30	; 48
     be2:	11 09       	sbc	r17, r1
     be4:	01 2e       	mov	r0, r17
     be6:	00 0c       	add	r0, r0
     be8:	22 0b       	sbc	r18, r18
     bea:	33 0b       	sbc	r19, r19
     bec:	40 0f       	add	r20, r16
     bee:	51 1f       	adc	r21, r17
     bf0:	62 1f       	adc	r22, r18
     bf2:	73 1f       	adc	r23, r19
     bf4:	8f 5f       	subi	r24, 0xFF	; 255
     bf6:	01 91       	ld	r16, Z+
     bf8:	20 ed       	ldi	r18, 0xD0	; 208
     bfa:	20 0f       	add	r18, r16
     bfc:	2a 30       	cpi	r18, 0x0A	; 10
     bfe:	e8 f2       	brcs	.-70     	; 0xbba <ParseNumber+0x32>
     c00:	04 c0       	rjmp	.+8      	; 0xc0a <ParseNumber+0x82>
     c02:	89 2f       	mov	r24, r25
     c04:	40 e0       	ldi	r20, 0x00	; 0
     c06:	50 e0       	ldi	r21, 0x00	; 0
     c08:	ba 01       	movw	r22, r20
     c0a:	10 97       	sbiw	r26, 0x00	; 0
     c0c:	09 f0       	breq	.+2      	; 0xc10 <ParseNumber+0x88>
     c0e:	8c 93       	st	X, r24
     c10:	99 23       	and	r25, r25
     c12:	51 f0       	breq	.+20     	; 0xc28 <ParseNumber+0xa0>
     c14:	8a 01       	movw	r16, r20
     c16:	9b 01       	movw	r18, r22
     c18:	66 27       	eor	r22, r22
     c1a:	77 27       	eor	r23, r23
     c1c:	cb 01       	movw	r24, r22
     c1e:	60 1b       	sub	r22, r16
     c20:	71 0b       	sbc	r23, r17
     c22:	82 0b       	sbc	r24, r18
     c24:	93 0b       	sbc	r25, r19
     c26:	02 c0       	rjmp	.+4      	; 0xc2c <ParseNumber+0xa4>
     c28:	cb 01       	movw	r24, r22
     c2a:	ba 01       	movw	r22, r20
     c2c:	1f 91       	pop	r17
     c2e:	0f 91       	pop	r16
     c30:	ff 90       	pop	r15
     c32:	ef 90       	pop	r14
     c34:	df 90       	pop	r13
     c36:	cf 90       	pop	r12
     c38:	08 95       	ret

00000c3a <EscapeStringAndSend>:
     c3a:	ef 92       	push	r14
     c3c:	ff 92       	push	r15
     c3e:	0f 93       	push	r16
     c40:	1f 93       	push	r17
     c42:	cf 93       	push	r28
     c44:	df 93       	push	r29
     c46:	1f 92       	push	r1
     c48:	cd b7       	in	r28, 0x3d	; 61
     c4a:	de b7       	in	r29, 0x3e	; 62
     c4c:	8c 01       	movw	r16, r24
     c4e:	8c e5       	ldi	r24, 0x5C	; 92
     c50:	89 83       	std	Y+1, r24	; 0x01
     c52:	f8 01       	movw	r30, r16
     c54:	90 81       	ld	r25, Z
     c56:	99 23       	and	r25, r25
     c58:	d9 f0       	breq	.+54     	; 0xc90 <EscapeStringAndSend+0x56>
     c5a:	01 c0       	rjmp	.+2      	; 0xc5e <EscapeStringAndSend+0x24>
     c5c:	87 01       	movw	r16, r14
     c5e:	9c 32       	cpi	r25, 0x2C	; 44
     c60:	21 f0       	breq	.+8      	; 0xc6a <EscapeStringAndSend+0x30>
     c62:	92 32       	cpi	r25, 0x22	; 34
     c64:	11 f0       	breq	.+4      	; 0xc6a <EscapeStringAndSend+0x30>
     c66:	9c 35       	cpi	r25, 0x5C	; 92
     c68:	31 f4       	brne	.+12     	; 0xc76 <EscapeStringAndSend+0x3c>
     c6a:	61 e0       	ldi	r22, 0x01	; 1
     c6c:	70 e0       	ldi	r23, 0x00	; 0
     c6e:	ce 01       	movw	r24, r28
     c70:	01 96       	adiw	r24, 0x01	; 1
     c72:	0e 94 aa 18 	call	0x3154	; 0x3154 <ESP8266_LL_USARTSend>
     c76:	78 01       	movw	r14, r16
     c78:	ff ef       	ldi	r31, 0xFF	; 255
     c7a:	ef 1a       	sub	r14, r31
     c7c:	ff 0a       	sbc	r15, r31
     c7e:	61 e0       	ldi	r22, 0x01	; 1
     c80:	70 e0       	ldi	r23, 0x00	; 0
     c82:	c8 01       	movw	r24, r16
     c84:	0e 94 aa 18 	call	0x3154	; 0x3154 <ESP8266_LL_USARTSend>
     c88:	f8 01       	movw	r30, r16
     c8a:	91 81       	ldd	r25, Z+1	; 0x01
     c8c:	91 11       	cpse	r25, r1
     c8e:	e6 cf       	rjmp	.-52     	; 0xc5c <EscapeStringAndSend+0x22>
     c90:	0f 90       	pop	r0
     c92:	df 91       	pop	r29
     c94:	cf 91       	pop	r28
     c96:	1f 91       	pop	r17
     c98:	0f 91       	pop	r16
     c9a:	ff 90       	pop	r15
     c9c:	ef 90       	pop	r14
     c9e:	08 95       	ret

00000ca0 <ParseIP>:
     ca0:	af 92       	push	r10
     ca2:	bf 92       	push	r11
     ca4:	cf 92       	push	r12
     ca6:	df 92       	push	r13
     ca8:	ef 92       	push	r14
     caa:	ff 92       	push	r15
     cac:	1f 93       	push	r17
     cae:	cf 93       	push	r28
     cb0:	df 93       	push	r29
     cb2:	cd b7       	in	r28, 0x3d	; 61
     cb4:	de b7       	in	r29, 0x3e	; 62
     cb6:	61 97       	sbiw	r28, 0x11	; 17
     cb8:	0f b6       	in	r0, 0x3f	; 63
     cba:	f8 94       	cli
     cbc:	de bf       	out	0x3e, r29	; 62
     cbe:	0f be       	out	0x3f, r0	; 63
     cc0:	cd bf       	out	0x3d, r28	; 61
     cc2:	fc 01       	movw	r30, r24
     cc4:	6b 01       	movw	r12, r22
     cc6:	5a 01       	movw	r10, r20
     cc8:	9f e0       	ldi	r25, 0x0F	; 15
     cca:	de 01       	movw	r26, r28
     ccc:	12 96       	adiw	r26, 0x02	; 2
     cce:	01 90       	ld	r0, Z+
     cd0:	0d 92       	st	X+, r0
     cd2:	9a 95       	dec	r25
     cd4:	e1 f7       	brne	.-8      	; 0xcce <ParseIP+0x2e>
     cd6:	19 8a       	std	Y+17, r1	; 0x11
     cd8:	64 e1       	ldi	r22, 0x14	; 20
     cda:	72 e0       	ldi	r23, 0x02	; 2
     cdc:	ce 01       	movw	r24, r28
     cde:	02 96       	adiw	r24, 0x02	; 2
     ce0:	0e 94 7d 1c 	call	0x38fa	; 0x38fa <strtok>
     ce4:	00 97       	sbiw	r24, 0x00	; 0
     ce6:	e9 f4       	brne	.+58     	; 0xd22 <ParseIP+0x82>
     ce8:	10 e0       	ldi	r17, 0x00	; 0
     cea:	15 c0       	rjmp	.+42     	; 0xd16 <ParseIP+0x76>
     cec:	be 01       	movw	r22, r28
     cee:	6f 5f       	subi	r22, 0xFF	; 255
     cf0:	7f 4f       	sbci	r23, 0xFF	; 255
     cf2:	4a df       	rcall	.-364    	; 0xb88 <ParseNumber>
     cf4:	f7 01       	movw	r30, r14
     cf6:	61 93       	st	Z+, r22
     cf8:	7f 01       	movw	r14, r30
     cfa:	89 81       	ldd	r24, Y+1	; 0x01
     cfc:	18 0f       	add	r17, r24
     cfe:	ec 15       	cp	r30, r12
     d00:	fd 05       	cpc	r31, r13
     d02:	49 f0       	breq	.+18     	; 0xd16 <ParseIP+0x76>
     d04:	1f 5f       	subi	r17, 0xFF	; 255
     d06:	64 e1       	ldi	r22, 0x14	; 20
     d08:	72 e0       	ldi	r23, 0x02	; 2
     d0a:	80 e0       	ldi	r24, 0x00	; 0
     d0c:	90 e0       	ldi	r25, 0x00	; 0
     d0e:	0e 94 7d 1c 	call	0x38fa	; 0x38fa <strtok>
     d12:	00 97       	sbiw	r24, 0x00	; 0
     d14:	59 f7       	brne	.-42     	; 0xcec <ParseIP+0x4c>
     d16:	a1 14       	cp	r10, r1
     d18:	b1 04       	cpc	r11, r1
     d1a:	79 f0       	breq	.+30     	; 0xd3a <ParseIP+0x9a>
     d1c:	f5 01       	movw	r30, r10
     d1e:	10 83       	st	Z, r17
     d20:	0c c0       	rjmp	.+24     	; 0xd3a <ParseIP+0x9a>
     d22:	be 01       	movw	r22, r28
     d24:	6f 5f       	subi	r22, 0xFF	; 255
     d26:	7f 4f       	sbci	r23, 0xFF	; 255
     d28:	2f df       	rcall	.-418    	; 0xb88 <ParseNumber>
     d2a:	f6 01       	movw	r30, r12
     d2c:	61 93       	st	Z+, r22
     d2e:	7f 01       	movw	r14, r30
     d30:	19 81       	ldd	r17, Y+1	; 0x01
     d32:	f4 e0       	ldi	r31, 0x04	; 4
     d34:	cf 0e       	add	r12, r31
     d36:	d1 1c       	adc	r13, r1
     d38:	e5 cf       	rjmp	.-54     	; 0xd04 <ParseIP+0x64>
     d3a:	61 96       	adiw	r28, 0x11	; 17
     d3c:	0f b6       	in	r0, 0x3f	; 63
     d3e:	f8 94       	cli
     d40:	de bf       	out	0x3e, r29	; 62
     d42:	0f be       	out	0x3f, r0	; 63
     d44:	cd bf       	out	0x3d, r28	; 61
     d46:	df 91       	pop	r29
     d48:	cf 91       	pop	r28
     d4a:	1f 91       	pop	r17
     d4c:	ff 90       	pop	r15
     d4e:	ef 90       	pop	r14
     d50:	df 90       	pop	r13
     d52:	cf 90       	pop	r12
     d54:	bf 90       	pop	r11
     d56:	af 90       	pop	r10
     d58:	08 95       	ret

00000d5a <ParseCIPSTA>:
     d5a:	0f 93       	push	r16
     d5c:	1f 93       	push	r17
     d5e:	cf 93       	push	r28
     d60:	df 93       	push	r29
     d62:	ec 01       	movw	r28, r24
     d64:	8b 01       	movw	r16, r22
     d66:	4e e0       	ldi	r20, 0x0E	; 14
     d68:	50 e0       	ldi	r21, 0x00	; 0
     d6a:	86 e1       	ldi	r24, 0x16	; 22
     d6c:	92 e0       	ldi	r25, 0x02	; 2
     d6e:	0e 94 9f 1c 	call	0x393e	; 0x393e <strncmp>
     d72:	89 2b       	or	r24, r25
     d74:	09 f4       	brne	.+2      	; 0xd78 <ParseCIPSTA+0x1e>
     d76:	6f c0       	rjmp	.+222    	; 0xe56 <ParseCIPSTA+0xfc>
     d78:	43 e1       	ldi	r20, 0x13	; 19
     d7a:	50 e0       	ldi	r21, 0x00	; 0
     d7c:	b8 01       	movw	r22, r16
     d7e:	85 e2       	ldi	r24, 0x25	; 37
     d80:	92 e0       	ldi	r25, 0x02	; 2
     d82:	0e 94 9f 1c 	call	0x393e	; 0x393e <strncmp>
     d86:	89 2b       	or	r24, r25
     d88:	09 f4       	brne	.+2      	; 0xd8c <ParseCIPSTA+0x32>
     d8a:	79 c0       	rjmp	.+242    	; 0xe7e <ParseCIPSTA+0x124>
     d8c:	43 e1       	ldi	r20, 0x13	; 19
     d8e:	50 e0       	ldi	r21, 0x00	; 0
     d90:	b8 01       	movw	r22, r16
     d92:	89 e3       	ldi	r24, 0x39	; 57
     d94:	92 e0       	ldi	r25, 0x02	; 2
     d96:	0e 94 9f 1c 	call	0x393e	; 0x393e <strncmp>
     d9a:	89 2b       	or	r24, r25
     d9c:	09 f4       	brne	.+2      	; 0xda0 <ParseCIPSTA+0x46>
     d9e:	82 c0       	rjmp	.+260    	; 0xea4 <ParseCIPSTA+0x14a>
     da0:	4a e0       	ldi	r20, 0x0A	; 10
     da2:	50 e0       	ldi	r21, 0x00	; 0
     da4:	b8 01       	movw	r22, r16
     da6:	8d e4       	ldi	r24, 0x4D	; 77
     da8:	92 e0       	ldi	r25, 0x02	; 2
     daa:	0e 94 9f 1c 	call	0x393e	; 0x393e <strncmp>
     dae:	89 2b       	or	r24, r25
     db0:	09 f4       	brne	.+2      	; 0xdb4 <ParseCIPSTA+0x5a>
     db2:	53 c0       	rjmp	.+166    	; 0xe5a <ParseCIPSTA+0x100>
     db4:	4f e0       	ldi	r20, 0x0F	; 15
     db6:	50 e0       	ldi	r21, 0x00	; 0
     db8:	b8 01       	movw	r22, r16
     dba:	88 e5       	ldi	r24, 0x58	; 88
     dbc:	92 e0       	ldi	r25, 0x02	; 2
     dbe:	0e 94 9f 1c 	call	0x393e	; 0x393e <strncmp>
     dc2:	89 2b       	or	r24, r25
     dc4:	09 f4       	brne	.+2      	; 0xdc8 <ParseCIPSTA+0x6e>
     dc6:	5d c0       	rjmp	.+186    	; 0xe82 <ParseCIPSTA+0x128>
     dc8:	4f e0       	ldi	r20, 0x0F	; 15
     dca:	50 e0       	ldi	r21, 0x00	; 0
     dcc:	b8 01       	movw	r22, r16
     dce:	88 e6       	ldi	r24, 0x68	; 104
     dd0:	92 e0       	ldi	r25, 0x02	; 2
     dd2:	0e 94 9f 1c 	call	0x393e	; 0x393e <strncmp>
     dd6:	89 2b       	or	r24, r25
     dd8:	09 f4       	brne	.+2      	; 0xddc <ParseCIPSTA+0x82>
     dda:	66 c0       	rjmp	.+204    	; 0xea8 <ParseCIPSTA+0x14e>
     ddc:	4d e0       	ldi	r20, 0x0D	; 13
     dde:	50 e0       	ldi	r21, 0x00	; 0
     de0:	b8 01       	movw	r22, r16
     de2:	88 e7       	ldi	r24, 0x78	; 120
     de4:	92 e0       	ldi	r25, 0x02	; 2
     de6:	0e 94 9f 1c 	call	0x393e	; 0x393e <strncmp>
     dea:	89 2b       	or	r24, r25
     dec:	09 f4       	brne	.+2      	; 0xdf0 <ParseCIPSTA+0x96>
     dee:	6d c0       	rjmp	.+218    	; 0xeca <ParseCIPSTA+0x170>
     df0:	42 e1       	ldi	r20, 0x12	; 18
     df2:	50 e0       	ldi	r21, 0x00	; 0
     df4:	b8 01       	movw	r22, r16
     df6:	86 e8       	ldi	r24, 0x86	; 134
     df8:	92 e0       	ldi	r25, 0x02	; 2
     dfa:	0e 94 9f 1c 	call	0x393e	; 0x393e <strncmp>
     dfe:	89 2b       	or	r24, r25
     e00:	09 f4       	brne	.+2      	; 0xe04 <ParseCIPSTA+0xaa>
     e02:	76 c0       	rjmp	.+236    	; 0xef0 <ParseCIPSTA+0x196>
     e04:	42 e1       	ldi	r20, 0x12	; 18
     e06:	50 e0       	ldi	r21, 0x00	; 0
     e08:	b8 01       	movw	r22, r16
     e0a:	89 e9       	ldi	r24, 0x99	; 153
     e0c:	92 e0       	ldi	r25, 0x02	; 2
     e0e:	0e 94 9f 1c 	call	0x393e	; 0x393e <strncmp>
     e12:	89 2b       	or	r24, r25
     e14:	09 f4       	brne	.+2      	; 0xe18 <ParseCIPSTA+0xbe>
     e16:	7f c0       	rjmp	.+254    	; 0xf16 <ParseCIPSTA+0x1bc>
     e18:	49 e0       	ldi	r20, 0x09	; 9
     e1a:	50 e0       	ldi	r21, 0x00	; 0
     e1c:	b8 01       	movw	r22, r16
     e1e:	8c ea       	ldi	r24, 0xAC	; 172
     e20:	92 e0       	ldi	r25, 0x02	; 2
     e22:	0e 94 9f 1c 	call	0x393e	; 0x393e <strncmp>
     e26:	89 2b       	or	r24, r25
     e28:	09 f4       	brne	.+2      	; 0xe2c <ParseCIPSTA+0xd2>
     e2a:	51 c0       	rjmp	.+162    	; 0xece <ParseCIPSTA+0x174>
     e2c:	4e e0       	ldi	r20, 0x0E	; 14
     e2e:	50 e0       	ldi	r21, 0x00	; 0
     e30:	b8 01       	movw	r22, r16
     e32:	86 eb       	ldi	r24, 0xB6	; 182
     e34:	92 e0       	ldi	r25, 0x02	; 2
     e36:	0e 94 9f 1c 	call	0x393e	; 0x393e <strncmp>
     e3a:	89 2b       	or	r24, r25
     e3c:	09 f4       	brne	.+2      	; 0xe40 <ParseCIPSTA+0xe6>
     e3e:	5a c0       	rjmp	.+180    	; 0xef4 <ParseCIPSTA+0x19a>
     e40:	4e e0       	ldi	r20, 0x0E	; 14
     e42:	50 e0       	ldi	r21, 0x00	; 0
     e44:	b8 01       	movw	r22, r16
     e46:	85 ec       	ldi	r24, 0xC5	; 197
     e48:	92 e0       	ldi	r25, 0x02	; 2
     e4a:	0e 94 9f 1c 	call	0x393e	; 0x393e <strncmp>
     e4e:	89 2b       	or	r24, r25
     e50:	09 f4       	brne	.+2      	; 0xe54 <ParseCIPSTA+0xfa>
     e52:	63 c0       	rjmp	.+198    	; 0xf1a <ParseCIPSTA+0x1c0>
     e54:	72 c0       	rjmp	.+228    	; 0xf3a <ParseCIPSTA+0x1e0>
     e56:	2e e0       	ldi	r18, 0x0E	; 14
     e58:	01 c0       	rjmp	.+2      	; 0xe5c <ParseCIPSTA+0x102>
     e5a:	2a e0       	ldi	r18, 0x0A	; 10
     e5c:	be 01       	movw	r22, r28
     e5e:	65 55       	subi	r22, 0x55	; 85
     e60:	7f 4f       	sbci	r23, 0xFF	; 255
     e62:	30 e0       	ldi	r19, 0x00	; 0
     e64:	c9 01       	movw	r24, r18
     e66:	02 96       	adiw	r24, 0x02	; 2
     e68:	40 e0       	ldi	r20, 0x00	; 0
     e6a:	50 e0       	ldi	r21, 0x00	; 0
     e6c:	80 0f       	add	r24, r16
     e6e:	91 1f       	adc	r25, r17
     e70:	17 df       	rcall	.-466    	; 0xca0 <ParseIP>
     e72:	c7 5d       	subi	r28, 0xD7	; 215
     e74:	de 4f       	sbci	r29, 0xFE	; 254
     e76:	88 81       	ld	r24, Y
     e78:	81 60       	ori	r24, 0x01	; 1
     e7a:	88 83       	st	Y, r24
     e7c:	5e c0       	rjmp	.+188    	; 0xf3a <ParseCIPSTA+0x1e0>
     e7e:	83 e1       	ldi	r24, 0x13	; 19
     e80:	01 c0       	rjmp	.+2      	; 0xe84 <ParseCIPSTA+0x12a>
     e82:	8f e0       	ldi	r24, 0x0F	; 15
     e84:	be 01       	movw	r22, r28
     e86:	6d 54       	subi	r22, 0x4D	; 77
     e88:	7f 4f       	sbci	r23, 0xFF	; 255
     e8a:	90 e0       	ldi	r25, 0x00	; 0
     e8c:	02 96       	adiw	r24, 0x02	; 2
     e8e:	40 e0       	ldi	r20, 0x00	; 0
     e90:	50 e0       	ldi	r21, 0x00	; 0
     e92:	80 0f       	add	r24, r16
     e94:	91 1f       	adc	r25, r17
     e96:	04 df       	rcall	.-504    	; 0xca0 <ParseIP>
     e98:	c7 5d       	subi	r28, 0xD7	; 215
     e9a:	de 4f       	sbci	r29, 0xFE	; 254
     e9c:	88 81       	ld	r24, Y
     e9e:	82 60       	ori	r24, 0x02	; 2
     ea0:	88 83       	st	Y, r24
     ea2:	4b c0       	rjmp	.+150    	; 0xf3a <ParseCIPSTA+0x1e0>
     ea4:	83 e1       	ldi	r24, 0x13	; 19
     ea6:	01 c0       	rjmp	.+2      	; 0xeaa <ParseCIPSTA+0x150>
     ea8:	8f e0       	ldi	r24, 0x0F	; 15
     eaa:	be 01       	movw	r22, r28
     eac:	61 55       	subi	r22, 0x51	; 81
     eae:	7f 4f       	sbci	r23, 0xFF	; 255
     eb0:	90 e0       	ldi	r25, 0x00	; 0
     eb2:	02 96       	adiw	r24, 0x02	; 2
     eb4:	40 e0       	ldi	r20, 0x00	; 0
     eb6:	50 e0       	ldi	r21, 0x00	; 0
     eb8:	80 0f       	add	r24, r16
     eba:	91 1f       	adc	r25, r17
     ebc:	f1 de       	rcall	.-542    	; 0xca0 <ParseIP>
     ebe:	c7 5d       	subi	r28, 0xD7	; 215
     ec0:	de 4f       	sbci	r29, 0xFE	; 254
     ec2:	88 81       	ld	r24, Y
     ec4:	84 60       	ori	r24, 0x04	; 4
     ec6:	88 83       	st	Y, r24
     ec8:	38 c0       	rjmp	.+112    	; 0xf3a <ParseCIPSTA+0x1e0>
     eca:	8d e0       	ldi	r24, 0x0D	; 13
     ecc:	01 c0       	rjmp	.+2      	; 0xed0 <ParseCIPSTA+0x176>
     ece:	89 e0       	ldi	r24, 0x09	; 9
     ed0:	be 01       	movw	r22, r28
     ed2:	63 54       	subi	r22, 0x43	; 67
     ed4:	7f 4f       	sbci	r23, 0xFF	; 255
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	02 96       	adiw	r24, 0x02	; 2
     eda:	40 e0       	ldi	r20, 0x00	; 0
     edc:	50 e0       	ldi	r21, 0x00	; 0
     ede:	80 0f       	add	r24, r16
     ee0:	91 1f       	adc	r25, r17
     ee2:	de de       	rcall	.-580    	; 0xca0 <ParseIP>
     ee4:	c7 5d       	subi	r28, 0xD7	; 215
     ee6:	de 4f       	sbci	r29, 0xFE	; 254
     ee8:	88 81       	ld	r24, Y
     eea:	80 61       	ori	r24, 0x10	; 16
     eec:	88 83       	st	Y, r24
     eee:	25 c0       	rjmp	.+74     	; 0xf3a <ParseCIPSTA+0x1e0>
     ef0:	82 e1       	ldi	r24, 0x12	; 18
     ef2:	01 c0       	rjmp	.+2      	; 0xef6 <ParseCIPSTA+0x19c>
     ef4:	8e e0       	ldi	r24, 0x0E	; 14
     ef6:	be 01       	movw	r22, r28
     ef8:	6b 53       	subi	r22, 0x3B	; 59
     efa:	7f 4f       	sbci	r23, 0xFF	; 255
     efc:	90 e0       	ldi	r25, 0x00	; 0
     efe:	02 96       	adiw	r24, 0x02	; 2
     f00:	40 e0       	ldi	r20, 0x00	; 0
     f02:	50 e0       	ldi	r21, 0x00	; 0
     f04:	80 0f       	add	r24, r16
     f06:	91 1f       	adc	r25, r17
     f08:	cb de       	rcall	.-618    	; 0xca0 <ParseIP>
     f0a:	c7 5d       	subi	r28, 0xD7	; 215
     f0c:	de 4f       	sbci	r29, 0xFE	; 254
     f0e:	88 81       	ld	r24, Y
     f10:	80 62       	ori	r24, 0x20	; 32
     f12:	88 83       	st	Y, r24
     f14:	12 c0       	rjmp	.+36     	; 0xf3a <ParseCIPSTA+0x1e0>
     f16:	82 e1       	ldi	r24, 0x12	; 18
     f18:	01 c0       	rjmp	.+2      	; 0xf1c <ParseCIPSTA+0x1c2>
     f1a:	8e e0       	ldi	r24, 0x0E	; 14
     f1c:	be 01       	movw	r22, r28
     f1e:	6f 53       	subi	r22, 0x3F	; 63
     f20:	7f 4f       	sbci	r23, 0xFF	; 255
     f22:	90 e0       	ldi	r25, 0x00	; 0
     f24:	02 96       	adiw	r24, 0x02	; 2
     f26:	40 e0       	ldi	r20, 0x00	; 0
     f28:	50 e0       	ldi	r21, 0x00	; 0
     f2a:	80 0f       	add	r24, r16
     f2c:	91 1f       	adc	r25, r17
     f2e:	b8 de       	rcall	.-656    	; 0xca0 <ParseIP>
     f30:	c7 5d       	subi	r28, 0xD7	; 215
     f32:	de 4f       	sbci	r29, 0xFE	; 254
     f34:	88 81       	ld	r24, Y
     f36:	80 64       	ori	r24, 0x40	; 64
     f38:	88 83       	st	Y, r24
     f3a:	df 91       	pop	r29
     f3c:	cf 91       	pop	r28
     f3e:	1f 91       	pop	r17
     f40:	0f 91       	pop	r16
     f42:	08 95       	ret

00000f44 <ParseMAC>:
     f44:	8f 92       	push	r8
     f46:	9f 92       	push	r9
     f48:	af 92       	push	r10
     f4a:	bf 92       	push	r11
     f4c:	cf 92       	push	r12
     f4e:	df 92       	push	r13
     f50:	ef 92       	push	r14
     f52:	ff 92       	push	r15
     f54:	0f 93       	push	r16
     f56:	1f 93       	push	r17
     f58:	cf 93       	push	r28
     f5a:	df 93       	push	r29
     f5c:	8b 01       	movw	r16, r22
     f5e:	7a 01       	movw	r14, r20
     f60:	69 e9       	ldi	r22, 0x99	; 153
     f62:	73 e0       	ldi	r23, 0x03	; 3
     f64:	0e 94 7d 1c 	call	0x38fa	; 0x38fa <strtok>
     f68:	68 01       	movw	r12, r16
     f6a:	0a 5f       	subi	r16, 0xFA	; 250
     f6c:	1f 4f       	sbci	r17, 0xFF	; 255
     f6e:	d0 e0       	ldi	r29, 0x00	; 0
     f70:	81 2c       	mov	r8, r1
     f72:	91 2c       	mov	r9, r1
     f74:	a1 2c       	mov	r10, r1
     f76:	b1 2c       	mov	r11, r1
     f78:	c0 e0       	ldi	r28, 0x00	; 0
     f7a:	3f c0       	rjmp	.+126    	; 0xffa <ParseMAC+0xb6>
     f7c:	38 2f       	mov	r19, r24
     f7e:	e8 2f       	mov	r30, r24
     f80:	f9 2f       	mov	r31, r25
     f82:	48 2d       	mov	r20, r8
     f84:	59 2d       	mov	r21, r9
     f86:	6a 2d       	mov	r22, r10
     f88:	7b 2d       	mov	r23, r11
     f8a:	1d c0       	rjmp	.+58     	; 0xfc6 <ParseMAC+0x82>
     f8c:	68 94       	set
     f8e:	13 f8       	bld	r1, 3
     f90:	44 0f       	add	r20, r20
     f92:	55 1f       	adc	r21, r21
     f94:	66 1f       	adc	r22, r22
     f96:	77 1f       	adc	r23, r23
     f98:	16 94       	lsr	r1
     f9a:	d1 f7       	brne	.-12     	; 0xf90 <ParseMAC+0x4c>
     f9c:	9a 30       	cpi	r25, 0x0A	; 10
     f9e:	60 f0       	brcs	.+24     	; 0xfb8 <ParseMAC+0x74>
     fa0:	9f e9       	ldi	r25, 0x9F	; 159
     fa2:	98 0f       	add	r25, r24
     fa4:	96 30       	cpi	r25, 0x06	; 6
     fa6:	10 f4       	brcc	.+4      	; 0xfac <ParseMAC+0x68>
     fa8:	87 55       	subi	r24, 0x57	; 87
     faa:	09 c0       	rjmp	.+18     	; 0xfbe <ParseMAC+0x7a>
     fac:	9f eb       	ldi	r25, 0xBF	; 191
     fae:	98 0f       	add	r25, r24
     fb0:	96 30       	cpi	r25, 0x06	; 6
     fb2:	20 f4       	brcc	.+8      	; 0xfbc <ParseMAC+0x78>
     fb4:	87 53       	subi	r24, 0x37	; 55
     fb6:	03 c0       	rjmp	.+6      	; 0xfbe <ParseMAC+0x7a>
     fb8:	89 2f       	mov	r24, r25
     fba:	01 c0       	rjmp	.+2      	; 0xfbe <ParseMAC+0x7a>
     fbc:	8c 2f       	mov	r24, r28
     fbe:	48 0f       	add	r20, r24
     fc0:	51 1d       	adc	r21, r1
     fc2:	61 1d       	adc	r22, r1
     fc4:	71 1d       	adc	r23, r1
     fc6:	2e 2f       	mov	r18, r30
     fc8:	23 1b       	sub	r18, r19
     fca:	81 91       	ld	r24, Z+
     fcc:	90 ed       	ldi	r25, 0xD0	; 208
     fce:	98 0f       	add	r25, r24
     fd0:	9a 30       	cpi	r25, 0x0A	; 10
     fd2:	e0 f2       	brcs	.-72     	; 0xf8c <ParseMAC+0x48>
     fd4:	a8 2f       	mov	r26, r24
     fd6:	af 7d       	andi	r26, 0xDF	; 223
     fd8:	a1 54       	subi	r26, 0x41	; 65
     fda:	a6 30       	cpi	r26, 0x06	; 6
     fdc:	b8 f2       	brcs	.-82     	; 0xf8c <ParseMAC+0x48>
     fde:	f6 01       	movw	r30, r12
     fe0:	41 93       	st	Z+, r20
     fe2:	6f 01       	movw	r12, r30
     fe4:	d2 0f       	add	r29, r18
     fe6:	e0 17       	cp	r30, r16
     fe8:	f1 07       	cpc	r31, r17
     fea:	51 f0       	breq	.+20     	; 0x1000 <ParseMAC+0xbc>
     fec:	df 5f       	subi	r29, 0xFF	; 255
     fee:	69 e9       	ldi	r22, 0x99	; 153
     ff0:	73 e0       	ldi	r23, 0x03	; 3
     ff2:	80 e0       	ldi	r24, 0x00	; 0
     ff4:	90 e0       	ldi	r25, 0x00	; 0
     ff6:	0e 94 7d 1c 	call	0x38fa	; 0x38fa <strtok>
     ffa:	00 97       	sbiw	r24, 0x00	; 0
     ffc:	09 f0       	breq	.+2      	; 0x1000 <ParseMAC+0xbc>
     ffe:	be cf       	rjmp	.-132    	; 0xf7c <ParseMAC+0x38>
    1000:	e1 14       	cp	r14, r1
    1002:	f1 04       	cpc	r15, r1
    1004:	11 f0       	breq	.+4      	; 0x100a <ParseMAC+0xc6>
    1006:	f7 01       	movw	r30, r14
    1008:	d0 83       	st	Z, r29
    100a:	df 91       	pop	r29
    100c:	cf 91       	pop	r28
    100e:	1f 91       	pop	r17
    1010:	0f 91       	pop	r16
    1012:	ff 90       	pop	r15
    1014:	ef 90       	pop	r14
    1016:	df 90       	pop	r13
    1018:	cf 90       	pop	r12
    101a:	bf 90       	pop	r11
    101c:	af 90       	pop	r10
    101e:	9f 90       	pop	r9
    1020:	8f 90       	pop	r8
    1022:	08 95       	ret

00001024 <Int2String>:
    1024:	7f 93       	push	r23
    1026:	6f 93       	push	r22
    1028:	5f 93       	push	r21
    102a:	4f 93       	push	r20
    102c:	24 ed       	ldi	r18, 0xD4	; 212
    102e:	32 e0       	ldi	r19, 0x02	; 2
    1030:	3f 93       	push	r19
    1032:	2f 93       	push	r18
    1034:	9f 93       	push	r25
    1036:	8f 93       	push	r24
    1038:	0e 94 31 1d 	call	0x3a62	; 0x3a62 <sprintf>
    103c:	8d b7       	in	r24, 0x3d	; 61
    103e:	9e b7       	in	r25, 0x3e	; 62
    1040:	08 96       	adiw	r24, 0x08	; 8
    1042:	0f b6       	in	r0, 0x3f	; 63
    1044:	f8 94       	cli
    1046:	9e bf       	out	0x3e, r25	; 62
    1048:	0f be       	out	0x3f, r0	; 63
    104a:	8d bf       	out	0x3d, r24	; 61
    104c:	08 95       	ret

0000104e <ESP8266_TimeUpdate>:
    104e:	0f 93       	push	r16
    1050:	1f 93       	push	r17
    1052:	fc 01       	movw	r30, r24
    1054:	06 85       	ldd	r16, Z+14	; 0x0e
    1056:	17 85       	ldd	r17, Z+15	; 0x0f
    1058:	20 89       	ldd	r18, Z+16	; 0x10
    105a:	31 89       	ldd	r19, Z+17	; 0x11
    105c:	40 0f       	add	r20, r16
    105e:	51 1f       	adc	r21, r17
    1060:	62 1f       	adc	r22, r18
    1062:	73 1f       	adc	r23, r19
    1064:	46 87       	std	Z+14, r20	; 0x0e
    1066:	57 87       	std	Z+15, r21	; 0x0f
    1068:	60 8b       	std	Z+16, r22	; 0x10
    106a:	71 8b       	std	Z+17, r23	; 0x11
    106c:	1f 91       	pop	r17
    106e:	0f 91       	pop	r16
    1070:	08 95       	ret

00001072 <ESP8266_DataReceived>:
    1072:	9b 01       	movw	r18, r22
    1074:	40 e0       	ldi	r20, 0x00	; 0
    1076:	50 e0       	ldi	r21, 0x00	; 0
    1078:	bc 01       	movw	r22, r24
    107a:	8e e6       	ldi	r24, 0x6E	; 110
    107c:	90 e1       	ldi	r25, 0x10	; 16
    107e:	ee d8       	rcall	.-3620   	; 0x25c <BUFFER_Write>
    1080:	cb 01       	movw	r24, r22
    1082:	08 95       	ret

00001084 <ESP8266_Callback_ServerConnectionActive>:
    1084:	08 95       	ret

00001086 <ESP8266_Callback_ServerConnectionClosed>:
    1086:	08 95       	ret

00001088 <ESP8266_Callback_ServerConnectionDataReceived>:
    1088:	08 95       	ret

0000108a <ESP8266_Callback_ServerConnectionSendData>:
    108a:	80 e0       	ldi	r24, 0x00	; 0
    108c:	90 e0       	ldi	r25, 0x00	; 0
    108e:	08 95       	ret

00001090 <ESP8266_Callback_ServerConnectionDataSent>:
    1090:	08 95       	ret

00001092 <ESP8266_Callback_ServerConnectionDataSentError>:
    1092:	08 95       	ret

00001094 <CallConnectionCallbacks>:
    1094:	df 92       	push	r13
    1096:	ef 92       	push	r14
    1098:	ff 92       	push	r15
    109a:	0f 93       	push	r16
    109c:	1f 93       	push	r17
    109e:	cf 93       	push	r28
    10a0:	df 93       	push	r29
    10a2:	7c 01       	movw	r14, r24
    10a4:	8c 01       	movw	r16, r24
    10a6:	06 5e       	subi	r16, 0xE6	; 230
    10a8:	1f 4f       	sbci	r17, 0xFF	; 255
    10aa:	c0 e0       	ldi	r28, 0x00	; 0
    10ac:	d0 e0       	ldi	r29, 0x00	; 0
    10ae:	0f 2e       	mov	r0, r31
    10b0:	fd e1       	ldi	r31, 0x1D	; 29
    10b2:	df 2e       	mov	r13, r31
    10b4:	f0 2d       	mov	r31, r0
    10b6:	9e 01       	movw	r18, r28
    10b8:	dc 9e       	mul	r13, r28
    10ba:	f0 01       	movw	r30, r0
    10bc:	dd 9e       	mul	r13, r29
    10be:	f0 0d       	add	r31, r0
    10c0:	11 24       	eor	r1, r1
    10c2:	ee 0d       	add	r30, r14
    10c4:	ff 1d       	adc	r31, r15
    10c6:	86 a9       	ldd	r24, Z+54	; 0x36
    10c8:	80 ff       	sbrs	r24, 0
    10ca:	37 c0       	rjmp	.+110    	; 0x113a <CallConnectionCallbacks+0xa6>
    10cc:	83 ff       	sbrs	r24, 3
    10ce:	35 c0       	rjmp	.+106    	; 0x113a <CallConnectionCallbacks+0xa6>
    10d0:	81 fd       	sbrc	r24, 1
    10d2:	09 c0       	rjmp	.+18     	; 0x10e6 <CallConnectionCallbacks+0x52>
    10d4:	f7 01       	movw	r30, r14
    10d6:	84 81       	ldd	r24, Z+4	; 0x04
    10d8:	95 81       	ldd	r25, Z+5	; 0x05
    10da:	a6 81       	ldd	r26, Z+6	; 0x06
    10dc:	b7 81       	ldd	r27, Z+7	; 0x07
    10de:	89 2b       	or	r24, r25
    10e0:	8a 2b       	or	r24, r26
    10e2:	8b 2b       	or	r24, r27
    10e4:	51 f5       	brne	.+84     	; 0x113a <CallConnectionCallbacks+0xa6>
    10e6:	d2 9e       	mul	r13, r18
    10e8:	f0 01       	movw	r30, r0
    10ea:	d3 9e       	mul	r13, r19
    10ec:	f0 0d       	add	r31, r0
    10ee:	11 24       	eor	r1, r1
    10f0:	ee 0d       	add	r30, r14
    10f2:	ff 1d       	adc	r31, r15
    10f4:	86 a9       	ldd	r24, Z+54	; 0x36
    10f6:	87 7f       	andi	r24, 0xF7	; 247
    10f8:	86 ab       	std	Z+54, r24	; 0x36
    10fa:	d8 01       	movw	r26, r16
    10fc:	50 96       	adiw	r26, 0x10	; 16
    10fe:	2d 91       	ld	r18, X+
    1100:	3c 91       	ld	r19, X
    1102:	51 97       	sbiw	r26, 0x11	; 17
    1104:	52 96       	adiw	r26, 0x12	; 18
    1106:	8d 91       	ld	r24, X+
    1108:	9c 91       	ld	r25, X
    110a:	53 97       	sbiw	r26, 0x13	; 19
    110c:	d9 01       	movw	r26, r18
    110e:	a8 0f       	add	r26, r24
    1110:	b9 1f       	adc	r27, r25
    1112:	1c 92       	st	X, r1
    1114:	86 a9       	ldd	r24, Z+54	; 0x36
    1116:	81 ff       	sbrs	r24, 1
    1118:	08 c0       	rjmp	.+16     	; 0x112a <CallConnectionCallbacks+0x96>
    111a:	f8 01       	movw	r30, r16
    111c:	40 89       	ldd	r20, Z+16	; 0x10
    111e:	51 89       	ldd	r21, Z+17	; 0x11
    1120:	b8 01       	movw	r22, r16
    1122:	c7 01       	movw	r24, r14
    1124:	0e 94 b0 1a 	call	0x3560	; 0x3560 <ESP8266_Callback_ClientConnectionDataReceived>
    1128:	08 c0       	rjmp	.+16     	; 0x113a <CallConnectionCallbacks+0xa6>
    112a:	d8 01       	movw	r26, r16
    112c:	50 96       	adiw	r26, 0x10	; 16
    112e:	4d 91       	ld	r20, X+
    1130:	5c 91       	ld	r21, X
    1132:	51 97       	sbiw	r26, 0x11	; 17
    1134:	b8 01       	movw	r22, r16
    1136:	c7 01       	movw	r24, r14
    1138:	a7 df       	rcall	.-178    	; 0x1088 <ESP8266_Callback_ServerConnectionDataReceived>
    113a:	21 96       	adiw	r28, 0x01	; 1
    113c:	03 5e       	subi	r16, 0xE3	; 227
    113e:	1f 4f       	sbci	r17, 0xFF	; 255
    1140:	c5 30       	cpi	r28, 0x05	; 5
    1142:	d1 05       	cpc	r29, r1
    1144:	09 f0       	breq	.+2      	; 0x1148 <CallConnectionCallbacks+0xb4>
    1146:	b7 cf       	rjmp	.-146    	; 0x10b6 <CallConnectionCallbacks+0x22>
    1148:	df 91       	pop	r29
    114a:	cf 91       	pop	r28
    114c:	1f 91       	pop	r17
    114e:	0f 91       	pop	r16
    1150:	ff 90       	pop	r15
    1152:	ef 90       	pop	r14
    1154:	df 90       	pop	r13
    1156:	08 95       	ret

00001158 <ParseReceived>:
    1158:	2f 92       	push	r2
    115a:	3f 92       	push	r3
    115c:	4f 92       	push	r4
    115e:	5f 92       	push	r5
    1160:	6f 92       	push	r6
    1162:	7f 92       	push	r7
    1164:	8f 92       	push	r8
    1166:	9f 92       	push	r9
    1168:	af 92       	push	r10
    116a:	bf 92       	push	r11
    116c:	cf 92       	push	r12
    116e:	df 92       	push	r13
    1170:	ef 92       	push	r14
    1172:	ff 92       	push	r15
    1174:	0f 93       	push	r16
    1176:	1f 93       	push	r17
    1178:	cf 93       	push	r28
    117a:	df 93       	push	r29
    117c:	00 d0       	rcall	.+0      	; 0x117e <ParseReceived+0x26>
    117e:	1f 92       	push	r1
    1180:	cd b7       	in	r28, 0x3d	; 61
    1182:	de b7       	in	r29, 0x3e	; 62
    1184:	b2 2e       	mov	r11, r18
    1186:	dc 01       	movw	r26, r24
    1188:	1e 96       	adiw	r26, 0x0e	; 14
    118a:	0d 91       	ld	r16, X+
    118c:	1d 91       	ld	r17, X+
    118e:	2d 91       	ld	r18, X+
    1190:	3c 91       	ld	r19, X
    1192:	51 97       	sbiw	r26, 0x11	; 17
    1194:	fc 01       	movw	r30, r24
    1196:	02 8b       	std	Z+18, r16	; 0x12
    1198:	13 8b       	std	Z+19, r17	; 0x13
    119a:	24 8b       	std	Z+20, r18	; 0x14
    119c:	35 8b       	std	Z+21, r19	; 0x15
    119e:	42 30       	cpi	r20, 0x02	; 2
    11a0:	51 05       	cpc	r21, r1
    11a2:	49 f4       	brne	.+18     	; 0x11b6 <ParseReceived+0x5e>
    11a4:	db 01       	movw	r26, r22
    11a6:	2c 91       	ld	r18, X
    11a8:	2d 30       	cpi	r18, 0x0D	; 13
    11aa:	29 f4       	brne	.+10     	; 0x11b6 <ParseReceived+0x5e>
    11ac:	11 96       	adiw	r26, 0x01	; 1
    11ae:	2c 91       	ld	r18, X
    11b0:	2a 30       	cpi	r18, 0x0A	; 10
    11b2:	09 f4       	brne	.+2      	; 0x11b6 <ParseReceived+0x5e>
    11b4:	74 c6       	rjmp	.+3304   	; 0x1e9e <ParseReceived+0xd46>
    11b6:	6a 01       	movw	r12, r20
    11b8:	7b 01       	movw	r14, r22
    11ba:	8c 01       	movw	r16, r24
    11bc:	fc 01       	movw	r30, r24
    11be:	84 81       	ldd	r24, Z+4	; 0x04
    11c0:	95 81       	ldd	r25, Z+5	; 0x05
    11c2:	a6 81       	ldd	r26, Z+6	; 0x06
    11c4:	b7 81       	ldd	r27, Z+7	; 0x07
    11c6:	89 2b       	or	r24, r25
    11c8:	8a 2b       	or	r24, r26
    11ca:	8b 2b       	or	r24, r27
    11cc:	09 f4       	brne	.+2      	; 0x11d0 <ParseReceived+0x78>
    11ce:	5b c0       	rjmp	.+182    	; 0x1286 <ParseReceived+0x12e>
    11d0:	bb 20       	and	r11, r11
    11d2:	09 f4       	brne	.+2      	; 0x11d6 <ParseReceived+0x7e>
    11d4:	58 c0       	rjmp	.+176    	; 0x1286 <ParseReceived+0x12e>
    11d6:	6d ed       	ldi	r22, 0xDD	; 221
    11d8:	72 e0       	ldi	r23, 0x02	; 2
    11da:	c7 01       	movw	r24, r14
    11dc:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    11e0:	89 2b       	or	r24, r25
    11e2:	09 f4       	brne	.+2      	; 0x11e6 <ParseReceived+0x8e>
    11e4:	50 c0       	rjmp	.+160    	; 0x1286 <ParseReceived+0x12e>
    11e6:	68 ed       	ldi	r22, 0xD8	; 216
    11e8:	72 e0       	ldi	r23, 0x02	; 2
    11ea:	c7 01       	movw	r24, r14
    11ec:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    11f0:	89 2b       	or	r24, r25
    11f2:	09 f4       	brne	.+2      	; 0x11f6 <ParseReceived+0x9e>
    11f4:	48 c0       	rjmp	.+144    	; 0x1286 <ParseReceived+0x12e>
    11f6:	62 ee       	ldi	r22, 0xE2	; 226
    11f8:	72 e0       	ldi	r23, 0x02	; 2
    11fa:	c7 01       	movw	r24, r14
    11fc:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    1200:	89 2b       	or	r24, r25
    1202:	09 f4       	brne	.+2      	; 0x1206 <ParseReceived+0xae>
    1204:	40 c0       	rjmp	.+128    	; 0x1286 <ParseReceived+0x12e>
    1206:	6e ee       	ldi	r22, 0xEE	; 238
    1208:	72 e0       	ldi	r23, 0x02	; 2
    120a:	c7 01       	movw	r24, r14
    120c:	01 96       	adiw	r24, 0x01	; 1
    120e:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    1212:	89 2b       	or	r24, r25
    1214:	c1 f1       	breq	.+112    	; 0x1286 <ParseReceived+0x12e>
    1216:	69 ef       	ldi	r22, 0xF9	; 249
    1218:	72 e0       	ldi	r23, 0x02	; 2
    121a:	c7 01       	movw	r24, r14
    121c:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    1220:	89 2b       	or	r24, r25
    1222:	89 f1       	breq	.+98     	; 0x1286 <ParseReceived+0x12e>
    1224:	61 e0       	ldi	r22, 0x01	; 1
    1226:	73 e0       	ldi	r23, 0x03	; 3
    1228:	c7 01       	movw	r24, r14
    122a:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    122e:	89 2b       	or	r24, r25
    1230:	89 f1       	breq	.+98     	; 0x1294 <ParseReceived+0x13c>
    1232:	69 e0       	ldi	r22, 0x09	; 9
    1234:	73 e0       	ldi	r23, 0x03	; 3
    1236:	c7 01       	movw	r24, r14
    1238:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    123c:	89 2b       	or	r24, r25
    123e:	69 f1       	breq	.+90     	; 0x129a <ParseReceived+0x142>
    1240:	45 e0       	ldi	r20, 0x05	; 5
    1242:	50 e0       	ldi	r21, 0x00	; 0
    1244:	65 e1       	ldi	r22, 0x15	; 21
    1246:	73 e0       	ldi	r23, 0x03	; 3
    1248:	c7 01       	movw	r24, r14
    124a:	0e 94 9f 1c 	call	0x393e	; 0x393e <strncmp>
    124e:	89 2b       	or	r24, r25
    1250:	21 f1       	breq	.+72     	; 0x129a <ParseReceived+0x142>
    1252:	d8 01       	movw	r26, r16
    1254:	18 96       	adiw	r26, 0x08	; 8
    1256:	6d 91       	ld	r22, X+
    1258:	7c 91       	ld	r23, X
    125a:	19 97       	sbiw	r26, 0x09	; 9
    125c:	fb 01       	movw	r30, r22
    125e:	01 90       	ld	r0, Z+
    1260:	00 20       	and	r0, r0
    1262:	e9 f7       	brne	.-6      	; 0x125e <ParseReceived+0x106>
    1264:	31 97       	sbiw	r30, 0x01	; 1
    1266:	af 01       	movw	r20, r30
    1268:	46 1b       	sub	r20, r22
    126a:	57 0b       	sbc	r21, r23
    126c:	c7 01       	movw	r24, r14
    126e:	0e 94 9f 1c 	call	0x393e	; 0x393e <strncmp>
    1272:	89 2b       	or	r24, r25
    1274:	91 f0       	breq	.+36     	; 0x129a <ParseReceived+0x142>
    1276:	b7 01       	movw	r22, r14
    1278:	80 e8       	ldi	r24, 0x80	; 128
    127a:	90 e1       	ldi	r25, 0x10	; 16
    127c:	d8 db       	rcall	.-2128   	; 0xa2e <BUFFER_WriteString>
    127e:	60 e0       	ldi	r22, 0x00	; 0
    1280:	70 e0       	ldi	r23, 0x00	; 0
    1282:	cb 01       	movw	r24, r22
    1284:	4d c6       	rjmp	.+3226   	; 0x1f20 <ParseReceived+0xdc8>
    1286:	61 e0       	ldi	r22, 0x01	; 1
    1288:	73 e0       	ldi	r23, 0x03	; 3
    128a:	c7 01       	movw	r24, r14
    128c:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    1290:	89 2b       	or	r24, r25
    1292:	19 f4       	brne	.+6      	; 0x129a <ParseReceived+0x142>
    1294:	c8 01       	movw	r24, r16
    1296:	0e 94 e3 19 	call	0x33c6	; 0x33c6 <ESP8266_Callback_DeviceReady>
    129a:	6b e1       	ldi	r22, 0x1B	; 27
    129c:	73 e0       	ldi	r23, 0x03	; 3
    129e:	c7 01       	movw	r24, r14
    12a0:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    12a4:	89 2b       	or	r24, r25
    12a6:	19 f4       	brne	.+6      	; 0x12ae <ParseReceived+0x156>
    12a8:	c8 01       	movw	r24, r16
    12aa:	0e 94 e7 19 	call	0x33ce	; 0x33ce <ESP8266_Callback_WatchdogReset>
    12ae:	c8 01       	movw	r24, r16
    12b0:	f1 de       	rcall	.-542    	; 0x1094 <CallConnectionCallbacks>
    12b2:	67 e2       	ldi	r22, 0x27	; 39
    12b4:	73 e0       	ldi	r23, 0x03	; 3
    12b6:	c7 01       	movw	r24, r14
    12b8:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    12bc:	89 2b       	or	r24, r25
    12be:	51 f4       	brne	.+20     	; 0x12d4 <ParseReceived+0x17c>
    12c0:	f8 01       	movw	r30, r16
    12c2:	e7 5d       	subi	r30, 0xD7	; 215
    12c4:	fe 4f       	sbci	r31, 0xFE	; 254
    12c6:	81 81       	ldd	r24, Z+1	; 0x01
    12c8:	84 60       	ori	r24, 0x04	; 4
    12ca:	81 83       	std	Z+1, r24	; 0x01
    12cc:	c8 01       	movw	r24, r16
    12ce:	0e 94 ef 19 	call	0x33de	; 0x33de <ESP8266_Callback_WifiConnected>
    12d2:	46 c0       	rjmp	.+140    	; 0x1360 <ParseReceived+0x208>
    12d4:	68 e3       	ldi	r22, 0x38	; 56
    12d6:	73 e0       	ldi	r23, 0x03	; 3
    12d8:	c7 01       	movw	r24, r14
    12da:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    12de:	89 2b       	or	r24, r25
    12e0:	21 f5       	brne	.+72     	; 0x132a <ParseReceived+0x1d2>
    12e2:	f8 01       	movw	r30, r16
    12e4:	e7 5d       	subi	r30, 0xD7	; 215
    12e6:	fe 4f       	sbci	r31, 0xFE	; 254
    12e8:	81 81       	ldd	r24, Z+1	; 0x01
    12ea:	8b 7f       	andi	r24, 0xFB	; 251
    12ec:	87 7f       	andi	r24, 0xF7	; 247
    12ee:	81 83       	std	Z+1, r24	; 0x01
    12f0:	89 e1       	ldi	r24, 0x19	; 25
    12f2:	b5 97       	sbiw	r30, 0x25	; 37
    12f4:	df 01       	movw	r26, r30
    12f6:	1d 92       	st	X+, r1
    12f8:	8a 95       	dec	r24
    12fa:	e9 f7       	brne	.-6      	; 0x12f6 <ParseReceived+0x19e>
    12fc:	40 e0       	ldi	r20, 0x00	; 0
    12fe:	50 e0       	ldi	r21, 0x00	; 0
    1300:	9d e1       	ldi	r25, 0x1D	; 29
    1302:	94 9f       	mul	r25, r20
    1304:	f0 01       	movw	r30, r0
    1306:	95 9f       	mul	r25, r21
    1308:	f0 0d       	add	r31, r0
    130a:	11 24       	eor	r1, r1
    130c:	e0 0f       	add	r30, r16
    130e:	f1 1f       	adc	r31, r17
    1310:	86 a9       	ldd	r24, Z+54	; 0x36
    1312:	8c 7b       	andi	r24, 0xBC	; 188
    1314:	8f 7d       	andi	r24, 0xDF	; 223
    1316:	86 ab       	std	Z+54, r24	; 0x36
    1318:	4f 5f       	subi	r20, 0xFF	; 255
    131a:	5f 4f       	sbci	r21, 0xFF	; 255
    131c:	45 30       	cpi	r20, 0x05	; 5
    131e:	51 05       	cpc	r21, r1
    1320:	81 f7       	brne	.-32     	; 0x1302 <ParseReceived+0x1aa>
    1322:	c8 01       	movw	r24, r16
    1324:	0e 94 eb 19 	call	0x33d6	; 0x33d6 <ESP8266_Callback_WifiDisconnected>
    1328:	1b c0       	rjmp	.+54     	; 0x1360 <ParseReceived+0x208>
    132a:	6a e4       	ldi	r22, 0x4A	; 74
    132c:	73 e0       	ldi	r23, 0x03	; 3
    132e:	c7 01       	movw	r24, r14
    1330:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    1334:	89 2b       	or	r24, r25
    1336:	51 f4       	brne	.+20     	; 0x134c <ParseReceived+0x1f4>
    1338:	f8 01       	movw	r30, r16
    133a:	e7 5d       	subi	r30, 0xD7	; 215
    133c:	fe 4f       	sbci	r31, 0xFE	; 254
    133e:	81 81       	ldd	r24, Z+1	; 0x01
    1340:	88 60       	ori	r24, 0x08	; 8
    1342:	81 83       	std	Z+1, r24	; 0x01
    1344:	c8 01       	movw	r24, r16
    1346:	0e 94 03 1a 	call	0x3406	; 0x3406 <ESP8266_Callback_WifiGotIP>
    134a:	0a c0       	rjmp	.+20     	; 0x1360 <ParseReceived+0x208>
    134c:	68 e5       	ldi	r22, 0x58	; 88
    134e:	73 e0       	ldi	r23, 0x03	; 3
    1350:	c7 01       	movw	r24, r14
    1352:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    1356:	89 2b       	or	r24, r25
    1358:	19 f4       	brne	.+6      	; 0x1360 <ParseReceived+0x208>
    135a:	c8 01       	movw	r24, r16
    135c:	0e 94 39 1a 	call	0x3472	; 0x3472 <ESP8266_Callback_DHCPTimeout>
    1360:	68 ed       	ldi	r22, 0xD8	; 216
    1362:	72 e0       	ldi	r23, 0x02	; 2
    1364:	c7 01       	movw	r24, r14
    1366:	0e 94 ad 1c 	call	0x395a	; 0x395a <strstr>
    136a:	89 2b       	or	r24, r25
    136c:	d1 f1       	breq	.+116    	; 0x13e2 <ParseReceived+0x28a>
    136e:	f8 01       	movw	r30, r16
    1370:	14 82       	std	Z+4, r1	; 0x04
    1372:	15 82       	std	Z+5, r1	; 0x05
    1374:	16 82       	std	Z+6, r1	; 0x06
    1376:	17 82       	std	Z+7, r1	; 0x07
    1378:	68 01       	movw	r12, r16
    137a:	fa e1       	ldi	r31, 0x1A	; 26
    137c:	cf 0e       	add	r12, r31
    137e:	d1 1c       	adc	r13, r1
    1380:	e1 2c       	mov	r14, r1
    1382:	f1 2c       	mov	r15, r1
    1384:	0f 2e       	mov	r0, r31
    1386:	fd e1       	ldi	r31, 0x1D	; 29
    1388:	bf 2e       	mov	r11, r31
    138a:	f0 2d       	mov	r31, r0
    138c:	be 9c       	mul	r11, r14
    138e:	f0 01       	movw	r30, r0
    1390:	bf 9c       	mul	r11, r15
    1392:	f0 0d       	add	r31, r0
    1394:	11 24       	eor	r1, r1
    1396:	e0 0f       	add	r30, r16
    1398:	f1 1f       	adc	r31, r17
    139a:	86 a9       	ldd	r24, Z+54	; 0x36
    139c:	82 ff       	sbrs	r24, 2
    139e:	13 c0       	rjmp	.+38     	; 0x13c6 <ParseReceived+0x26e>
    13a0:	be 9c       	mul	r11, r14
    13a2:	f0 01       	movw	r30, r0
    13a4:	bf 9c       	mul	r11, r15
    13a6:	f0 0d       	add	r31, r0
    13a8:	11 24       	eor	r1, r1
    13aa:	e0 0f       	add	r30, r16
    13ac:	f1 1f       	adc	r31, r17
    13ae:	8b 7f       	andi	r24, 0xFB	; 251
    13b0:	86 ab       	std	Z+54, r24	; 0x36
    13b2:	81 ff       	sbrs	r24, 1
    13b4:	05 c0       	rjmp	.+10     	; 0x13c0 <ParseReceived+0x268>
    13b6:	b6 01       	movw	r22, r12
    13b8:	c8 01       	movw	r24, r16
    13ba:	0e 94 9e 1a 	call	0x353c	; 0x353c <ESP8266_Callback_ClientConnectionDataSent>
    13be:	03 c0       	rjmp	.+6      	; 0x13c6 <ParseReceived+0x26e>
    13c0:	b6 01       	movw	r22, r12
    13c2:	c8 01       	movw	r24, r16
    13c4:	65 de       	rcall	.-822    	; 0x1090 <ESP8266_Callback_ServerConnectionDataSent>
    13c6:	2f ef       	ldi	r18, 0xFF	; 255
    13c8:	e2 1a       	sub	r14, r18
    13ca:	f2 0a       	sbc	r15, r18
    13cc:	3d e1       	ldi	r19, 0x1D	; 29
    13ce:	c3 0e       	add	r12, r19
    13d0:	d1 1c       	adc	r13, r1
    13d2:	65 e0       	ldi	r22, 0x05	; 5
    13d4:	e6 16       	cp	r14, r22
    13d6:	f1 04       	cpc	r15, r1
    13d8:	c9 f6       	brne	.-78     	; 0x138c <ParseReceived+0x234>
    13da:	60 e0       	ldi	r22, 0x00	; 0
    13dc:	70 e0       	ldi	r23, 0x00	; 0
    13de:	cb 01       	movw	r24, r22
    13e0:	9f c5       	rjmp	.+2878   	; 0x1f20 <ParseReceived+0xdc8>
    13e2:	62 ee       	ldi	r22, 0xE2	; 226
    13e4:	72 e0       	ldi	r23, 0x02	; 2
    13e6:	c7 01       	movw	r24, r14
    13e8:	0e 94 ad 1c 	call	0x395a	; 0x395a <strstr>
    13ec:	89 2b       	or	r24, r25
    13ee:	e1 f1       	breq	.+120    	; 0x1468 <ParseReceived+0x310>
    13f0:	d8 01       	movw	r26, r16
    13f2:	14 96       	adiw	r26, 0x04	; 4
    13f4:	1d 92       	st	X+, r1
    13f6:	1d 92       	st	X+, r1
    13f8:	1d 92       	st	X+, r1
    13fa:	1c 92       	st	X, r1
    13fc:	17 97       	sbiw	r26, 0x07	; 7
    13fe:	68 01       	movw	r12, r16
    1400:	ba e1       	ldi	r27, 0x1A	; 26
    1402:	cb 0e       	add	r12, r27
    1404:	d1 1c       	adc	r13, r1
    1406:	e1 2c       	mov	r14, r1
    1408:	f1 2c       	mov	r15, r1
    140a:	0f 2e       	mov	r0, r31
    140c:	fd e1       	ldi	r31, 0x1D	; 29
    140e:	bf 2e       	mov	r11, r31
    1410:	f0 2d       	mov	r31, r0
    1412:	be 9c       	mul	r11, r14
    1414:	f0 01       	movw	r30, r0
    1416:	bf 9c       	mul	r11, r15
    1418:	f0 0d       	add	r31, r0
    141a:	11 24       	eor	r1, r1
    141c:	e0 0f       	add	r30, r16
    141e:	f1 1f       	adc	r31, r17
    1420:	86 a9       	ldd	r24, Z+54	; 0x36
    1422:	82 ff       	sbrs	r24, 2
    1424:	13 c0       	rjmp	.+38     	; 0x144c <ParseReceived+0x2f4>
    1426:	be 9c       	mul	r11, r14
    1428:	f0 01       	movw	r30, r0
    142a:	bf 9c       	mul	r11, r15
    142c:	f0 0d       	add	r31, r0
    142e:	11 24       	eor	r1, r1
    1430:	e0 0f       	add	r30, r16
    1432:	f1 1f       	adc	r31, r17
    1434:	8b 7f       	andi	r24, 0xFB	; 251
    1436:	86 ab       	std	Z+54, r24	; 0x36
    1438:	81 ff       	sbrs	r24, 1
    143a:	05 c0       	rjmp	.+10     	; 0x1446 <ParseReceived+0x2ee>
    143c:	b6 01       	movw	r22, r12
    143e:	c8 01       	movw	r24, r16
    1440:	0e 94 a2 1a 	call	0x3544	; 0x3544 <ESP8266_Callback_ClientConnectionDataSentError>
    1444:	03 c0       	rjmp	.+6      	; 0x144c <ParseReceived+0x2f4>
    1446:	b6 01       	movw	r22, r12
    1448:	c8 01       	movw	r24, r16
    144a:	23 de       	rcall	.-954    	; 0x1092 <ESP8266_Callback_ServerConnectionDataSentError>
    144c:	ef ef       	ldi	r30, 0xFF	; 255
    144e:	ee 1a       	sub	r14, r30
    1450:	fe 0a       	sbc	r15, r30
    1452:	fd e1       	ldi	r31, 0x1D	; 29
    1454:	cf 0e       	add	r12, r31
    1456:	d1 1c       	adc	r13, r1
    1458:	25 e0       	ldi	r18, 0x05	; 5
    145a:	e2 16       	cp	r14, r18
    145c:	f1 04       	cpc	r15, r1
    145e:	c9 f6       	brne	.-78     	; 0x1412 <ParseReceived+0x2ba>
    1460:	60 e0       	ldi	r22, 0x00	; 0
    1462:	70 e0       	ldi	r23, 0x00	; 0
    1464:	cb 01       	movw	r24, r22
    1466:	5c c5       	rjmp	.+2744   	; 0x1f20 <ParseReceived+0xdc8>
    1468:	3b e0       	ldi	r19, 0x0B	; 11
    146a:	c3 16       	cp	r12, r19
    146c:	d1 04       	cpc	r13, r1
    146e:	a0 f1       	brcs	.+104    	; 0x14d8 <ParseReceived+0x380>
    1470:	46 01       	movw	r8, r12
    1472:	6a e0       	ldi	r22, 0x0A	; 10
    1474:	86 1a       	sub	r8, r22
    1476:	91 08       	sbc	r9, r1
    1478:	8e 0c       	add	r8, r14
    147a:	9f 1c       	adc	r9, r15
    147c:	4a e0       	ldi	r20, 0x0A	; 10
    147e:	50 e0       	ldi	r21, 0x00	; 0
    1480:	6e ee       	ldi	r22, 0xEE	; 238
    1482:	72 e0       	ldi	r23, 0x02	; 2
    1484:	c4 01       	movw	r24, r8
    1486:	0e 94 80 1c 	call	0x3900	; 0x3900 <memcmp>
    148a:	89 2b       	or	r24, r25
    148c:	29 f5       	brne	.+74     	; 0x14d8 <ParseReceived+0x380>
    148e:	81 14       	cp	r8, r1
    1490:	91 04       	cpc	r9, r1
    1492:	11 f1       	breq	.+68     	; 0x14d8 <ParseReceived+0x380>
    1494:	d4 01       	movw	r26, r8
    1496:	8e 91       	ld	r24, -X
    1498:	90 e0       	ldi	r25, 0x00	; 0
    149a:	c0 97       	sbiw	r24, 0x30	; 48
    149c:	2d e1       	ldi	r18, 0x1D	; 29
    149e:	28 9f       	mul	r18, r24
    14a0:	f0 01       	movw	r30, r0
    14a2:	29 9f       	mul	r18, r25
    14a4:	f0 0d       	add	r31, r0
    14a6:	11 24       	eor	r1, r1
    14a8:	bf 01       	movw	r22, r30
    14aa:	66 5e       	subi	r22, 0xE6	; 230
    14ac:	7f 4f       	sbci	r23, 0xFF	; 255
    14ae:	60 0f       	add	r22, r16
    14b0:	71 1f       	adc	r23, r17
    14b2:	e0 0f       	add	r30, r16
    14b4:	f1 1f       	adc	r31, r17
    14b6:	86 a9       	ldd	r24, Z+54	; 0x36
    14b8:	81 60       	ori	r24, 0x01	; 1
    14ba:	86 ab       	std	Z+54, r24	; 0x36
    14bc:	8c 91       	ld	r24, X
    14be:	80 53       	subi	r24, 0x30	; 48
    14c0:	82 8f       	std	Z+26, r24	; 0x1a
    14c2:	d8 01       	movw	r26, r16
    14c4:	a9 5d       	subi	r26, 0xD9	; 217
    14c6:	be 4f       	sbci	r27, 0xFE	; 254
    14c8:	6d 93       	st	X+, r22
    14ca:	7c 93       	st	X, r23
    14cc:	86 a9       	ldd	r24, Z+54	; 0x36
    14ce:	81 fd       	sbrc	r24, 1
    14d0:	9c c0       	rjmp	.+312    	; 0x160a <ParseReceived+0x4b2>
    14d2:	c8 01       	movw	r24, r16
    14d4:	d7 dd       	rcall	.-1106   	; 0x1084 <ESP8266_Callback_ServerConnectionActive>
    14d6:	99 c0       	rjmp	.+306    	; 0x160a <ParseReceived+0x4b2>
    14d8:	65 e6       	ldi	r22, 0x65	; 101
    14da:	73 e0       	ldi	r23, 0x03	; 3
    14dc:	c7 01       	movw	r24, r14
    14de:	0e 94 ad 1c 	call	0x395a	; 0x395a <strstr>
    14e2:	89 2b       	or	r24, r25
    14e4:	09 f0       	breq	.+2      	; 0x14e8 <ParseReceived+0x390>
    14e6:	91 c0       	rjmp	.+290    	; 0x160a <ParseReceived+0x4b2>
    14e8:	7a e0       	ldi	r23, 0x0A	; 10
    14ea:	c7 16       	cp	r12, r23
    14ec:	d1 04       	cpc	r13, r1
    14ee:	08 f4       	brcc	.+2      	; 0x14f2 <ParseReceived+0x39a>
    14f0:	53 c0       	rjmp	.+166    	; 0x1598 <ParseReceived+0x440>
    14f2:	46 01       	movw	r8, r12
    14f4:	89 e0       	ldi	r24, 0x09	; 9
    14f6:	88 1a       	sub	r8, r24
    14f8:	91 08       	sbc	r9, r1
    14fa:	8e 0c       	add	r8, r14
    14fc:	9f 1c       	adc	r9, r15
    14fe:	49 e0       	ldi	r20, 0x09	; 9
    1500:	50 e0       	ldi	r21, 0x00	; 0
    1502:	69 e7       	ldi	r22, 0x79	; 121
    1504:	73 e0       	ldi	r23, 0x03	; 3
    1506:	c4 01       	movw	r24, r8
    1508:	0e 94 80 1c 	call	0x3900	; 0x3900 <memcmp>
    150c:	89 2b       	or	r24, r25
    150e:	09 f0       	breq	.+2      	; 0x1512 <ParseReceived+0x3ba>
    1510:	43 c0       	rjmp	.+134    	; 0x1598 <ParseReceived+0x440>
    1512:	81 14       	cp	r8, r1
    1514:	91 04       	cpc	r9, r1
    1516:	09 f4       	brne	.+2      	; 0x151a <ParseReceived+0x3c2>
    1518:	3f c0       	rjmp	.+126    	; 0x1598 <ParseReceived+0x440>
    151a:	e8 14       	cp	r14, r8
    151c:	f9 04       	cpc	r15, r9
    151e:	e1 f1       	breq	.+120    	; 0x1598 <ParseReceived+0x440>
    1520:	f4 01       	movw	r30, r8
    1522:	31 97       	sbiw	r30, 0x01	; 1
    1524:	80 81       	ld	r24, Z
    1526:	97 01       	movw	r18, r14
    1528:	2f 5f       	subi	r18, 0xFF	; 255
    152a:	3f 4f       	sbci	r19, 0xFF	; 255
    152c:	82 16       	cp	r8, r18
    152e:	93 06       	cpc	r9, r19
    1530:	39 f5       	brne	.+78     	; 0x1580 <ParseReceived+0x428>
    1532:	90 e0       	ldi	r25, 0x00	; 0
    1534:	c0 97       	sbiw	r24, 0x30	; 48
    1536:	2d e1       	ldi	r18, 0x1D	; 29
    1538:	28 9f       	mul	r18, r24
    153a:	f0 01       	movw	r30, r0
    153c:	29 9f       	mul	r18, r25
    153e:	f0 0d       	add	r31, r0
    1540:	11 24       	eor	r1, r1
    1542:	e0 0f       	add	r30, r16
    1544:	f1 1f       	adc	r31, r17
    1546:	26 a9       	ldd	r18, Z+54	; 0x36
    1548:	21 fb       	bst	r18, 1
    154a:	44 27       	eor	r20, r20
    154c:	40 f9       	bld	r20, 0
    154e:	32 2f       	mov	r19, r18
    1550:	3c 7b       	andi	r19, 0xBC	; 188
    1552:	3f 7d       	andi	r19, 0xDF	; 223
    1554:	36 ab       	std	Z+54, r19	; 0x36
    1556:	20 ff       	sbrs	r18, 0
    1558:	58 c0       	rjmp	.+176    	; 0x160a <ParseReceived+0x4b2>
    155a:	2d e1       	ldi	r18, 0x1D	; 29
    155c:	28 9f       	mul	r18, r24
    155e:	b0 01       	movw	r22, r0
    1560:	29 9f       	mul	r18, r25
    1562:	70 0d       	add	r23, r0
    1564:	11 24       	eor	r1, r1
    1566:	66 5e       	subi	r22, 0xE6	; 230
    1568:	7f 4f       	sbci	r23, 0xFF	; 255
    156a:	60 0f       	add	r22, r16
    156c:	71 1f       	adc	r23, r17
    156e:	44 23       	and	r20, r20
    1570:	21 f0       	breq	.+8      	; 0x157a <ParseReceived+0x422>
    1572:	c8 01       	movw	r24, r16
    1574:	0e 94 f6 1a 	call	0x35ec	; 0x35ec <ESP8266_Callback_ClientConnectionClosed>
    1578:	48 c0       	rjmp	.+144    	; 0x160a <ParseReceived+0x4b2>
    157a:	c8 01       	movw	r24, r16
    157c:	84 dd       	rcall	.-1272   	; 0x1086 <ESP8266_Callback_ServerConnectionClosed>
    157e:	45 c0       	rjmp	.+138    	; 0x160a <ParseReceived+0x4b2>
    1580:	b4 01       	movw	r22, r8
    1582:	61 50       	subi	r22, 0x01	; 1
    1584:	71 09       	sbc	r23, r1
    1586:	2a e0       	ldi	r18, 0x0A	; 10
    1588:	30 e0       	ldi	r19, 0x00	; 0
    158a:	40 e0       	ldi	r20, 0x00	; 0
    158c:	50 e0       	ldi	r21, 0x00	; 0
    158e:	80 e8       	ldi	r24, 0x80	; 128
    1590:	90 e1       	ldi	r25, 0x10	; 16
    1592:	0e 94 2e 01 	call	0x25c	; 0x25c <BUFFER_Write>
    1596:	39 c0       	rjmp	.+114    	; 0x160a <ParseReceived+0x4b2>
    1598:	91 e1       	ldi	r25, 0x11	; 17
    159a:	c9 16       	cp	r12, r25
    159c:	d1 04       	cpc	r13, r1
    159e:	a8 f1       	brcs	.+106    	; 0x160a <ParseReceived+0x4b2>
    15a0:	63 e8       	ldi	r22, 0x83	; 131
    15a2:	73 e0       	ldi	r23, 0x03	; 3
    15a4:	c6 01       	movw	r24, r12
    15a6:	0f 97       	sbiw	r24, 0x0f	; 15
    15a8:	8e 0d       	add	r24, r14
    15aa:	9f 1d       	adc	r25, r15
    15ac:	0e 94 ad 1c 	call	0x395a	; 0x395a <strstr>
    15b0:	00 97       	sbiw	r24, 0x00	; 0
    15b2:	59 f1       	breq	.+86     	; 0x160a <ParseReceived+0x4b2>
    15b4:	dc 01       	movw	r26, r24
    15b6:	8e 91       	ld	r24, -X
    15b8:	90 e0       	ldi	r25, 0x00	; 0
    15ba:	c0 97       	sbiw	r24, 0x30	; 48
    15bc:	2d e1       	ldi	r18, 0x1D	; 29
    15be:	28 9f       	mul	r18, r24
    15c0:	f0 01       	movw	r30, r0
    15c2:	29 9f       	mul	r18, r25
    15c4:	f0 0d       	add	r31, r0
    15c6:	11 24       	eor	r1, r1
    15c8:	bf 01       	movw	r22, r30
    15ca:	66 5e       	subi	r22, 0xE6	; 230
    15cc:	7f 4f       	sbci	r23, 0xFF	; 255
    15ce:	60 0f       	add	r22, r16
    15d0:	71 1f       	adc	r23, r17
    15d2:	e0 0f       	add	r30, r16
    15d4:	f1 1f       	adc	r31, r17
    15d6:	86 a9       	ldd	r24, Z+54	; 0x36
    15d8:	8c 7b       	andi	r24, 0xBC	; 188
    15da:	8f 7d       	andi	r24, 0xDF	; 223
    15dc:	86 ab       	std	Z+54, r24	; 0x36
    15de:	8c 91       	ld	r24, X
    15e0:	80 53       	subi	r24, 0x30	; 48
    15e2:	82 8f       	std	Z+26, r24	; 0x1a
    15e4:	86 a9       	ldd	r24, Z+54	; 0x36
    15e6:	81 ff       	sbrs	r24, 1
    15e8:	10 c0       	rjmp	.+32     	; 0x160a <ParseReceived+0x4b2>
    15ea:	f8 01       	movw	r30, r16
    15ec:	84 81       	ldd	r24, Z+4	; 0x04
    15ee:	95 81       	ldd	r25, Z+5	; 0x05
    15f0:	a6 81       	ldd	r26, Z+6	; 0x06
    15f2:	b7 81       	ldd	r27, Z+7	; 0x07
    15f4:	0a 97       	sbiw	r24, 0x0a	; 10
    15f6:	a1 05       	cpc	r26, r1
    15f8:	b1 05       	cpc	r27, r1
    15fa:	21 f4       	brne	.+8      	; 0x1604 <ParseReceived+0x4ac>
    15fc:	14 82       	std	Z+4, r1	; 0x04
    15fe:	15 82       	std	Z+5, r1	; 0x05
    1600:	16 82       	std	Z+6, r1	; 0x06
    1602:	17 82       	std	Z+7, r1	; 0x07
    1604:	c8 01       	movw	r24, r16
    1606:	0e 94 58 1a 	call	0x34b0	; 0x34b0 <ESP8266_Callback_ClientConnectionError>
    160a:	45 e0       	ldi	r20, 0x05	; 5
    160c:	50 e0       	ldi	r21, 0x00	; 0
    160e:	65 e1       	ldi	r22, 0x15	; 21
    1610:	73 e0       	ldi	r23, 0x03	; 3
    1612:	c7 01       	movw	r24, r14
    1614:	0e 94 9f 1c 	call	0x393e	; 0x393e <strncmp>
    1618:	89 2b       	or	r24, r25
    161a:	09 f0       	breq	.+2      	; 0x161e <ParseReceived+0x4c6>
    161c:	5e c1       	rjmp	.+700    	; 0x18da <ParseReceived+0x782>
    161e:	81 e0       	ldi	r24, 0x01	; 1
    1620:	f8 01       	movw	r30, r16
    1622:	e3 50       	subi	r30, 0x03	; 3
    1624:	ff 4f       	sbci	r31, 0xFF	; 255
    1626:	80 83       	st	Z, r24
    1628:	36 96       	adiw	r30, 0x06	; 6
    162a:	b0 82       	st	Z, r11
    162c:	f7 01       	movw	r30, r14
    162e:	85 81       	ldd	r24, Z+5	; 0x05
    1630:	80 53       	subi	r24, 0x30	; 48
    1632:	f8 01       	movw	r30, r16
    1634:	ee 5f       	subi	r30, 0xFE	; 254
    1636:	fe 4f       	sbci	r31, 0xFE	; 254
    1638:	80 83       	st	Z, r24
    163a:	a8 2e       	mov	r10, r24
    163c:	b1 2c       	mov	r11, r1
    163e:	48 01       	movw	r8, r16
    1640:	fd e1       	ldi	r31, 0x1D	; 29
    1642:	8f 9f       	mul	r24, r31
    1644:	80 0c       	add	r8, r0
    1646:	91 1c       	adc	r9, r1
    1648:	11 24       	eor	r1, r1
    164a:	22 e9       	ldi	r18, 0x92	; 146
    164c:	30 e1       	ldi	r19, 0x10	; 16
    164e:	d4 01       	movw	r26, r8
    1650:	9b 96       	adiw	r26, 0x2b	; 43
    1652:	3c 93       	st	X, r19
    1654:	2e 93       	st	-X, r18
    1656:	9a 97       	sbiw	r26, 0x2a	; 42
    1658:	5a 96       	adiw	r26, 0x1a	; 26
    165a:	8c 93       	st	X, r24
    165c:	be 01       	movw	r22, r28
    165e:	6f 5f       	subi	r22, 0xFF	; 255
    1660:	7f 4f       	sbci	r23, 0xFF	; 255
    1662:	c7 01       	movw	r24, r14
    1664:	07 96       	adiw	r24, 0x07	; 7
    1666:	90 da       	rcall	.-2784   	; 0xb88 <ParseNumber>
    1668:	f4 01       	movw	r30, r8
    166a:	62 a3       	std	Z+34, r22	; 0x22
    166c:	73 a3       	std	Z+35, r23	; 0x23
    166e:	84 a3       	std	Z+36, r24	; 0x24
    1670:	95 a3       	std	Z+37, r25	; 0x25
    1672:	86 a1       	ldd	r24, Z+38	; 0x26
    1674:	97 a1       	ldd	r25, Z+39	; 0x27
    1676:	a0 a5       	ldd	r26, Z+40	; 0x28
    1678:	b1 a5       	ldd	r27, Z+41	; 0x29
    167a:	89 2b       	or	r24, r25
    167c:	8a 2b       	or	r24, r26
    167e:	8b 2b       	or	r24, r27
    1680:	69 f4       	brne	.+26     	; 0x169c <ParseReceived+0x544>
    1682:	8d e1       	ldi	r24, 0x1D	; 29
    1684:	8a 9d       	mul	r24, r10
    1686:	f0 01       	movw	r30, r0
    1688:	8b 9d       	mul	r24, r11
    168a:	f0 0d       	add	r31, r0
    168c:	11 24       	eor	r1, r1
    168e:	e0 0f       	add	r30, r16
    1690:	f1 1f       	adc	r31, r17
    1692:	86 a9       	ldd	r24, Z+54	; 0x36
    1694:	8f 7d       	andi	r24, 0xDF	; 223
    1696:	80 64       	ori	r24, 0x40	; 64
    1698:	86 ab       	std	Z+54, r24	; 0x36
    169a:	0b c0       	rjmp	.+22     	; 0x16b2 <ParseReceived+0x55a>
    169c:	8d e1       	ldi	r24, 0x1D	; 29
    169e:	8a 9d       	mul	r24, r10
    16a0:	f0 01       	movw	r30, r0
    16a2:	8b 9d       	mul	r24, r11
    16a4:	f0 0d       	add	r31, r0
    16a6:	11 24       	eor	r1, r1
    16a8:	e0 0f       	add	r30, r16
    16aa:	f1 1f       	adc	r31, r17
    16ac:	86 a9       	ldd	r24, Z+54	; 0x36
    16ae:	8f 7b       	andi	r24, 0xBF	; 191
    16b0:	86 ab       	std	Z+54, r24	; 0x36
    16b2:	8d e1       	ldi	r24, 0x1D	; 29
    16b4:	8a 9d       	mul	r24, r10
    16b6:	40 01       	movw	r8, r0
    16b8:	8b 9d       	mul	r24, r11
    16ba:	90 0c       	add	r9, r0
    16bc:	11 24       	eor	r1, r1
    16be:	80 0e       	add	r8, r16
    16c0:	91 1e       	adc	r9, r17
    16c2:	d4 01       	movw	r26, r8
    16c4:	92 96       	adiw	r26, 0x22	; 34
    16c6:	4d 90       	ld	r4, X+
    16c8:	5d 90       	ld	r5, X+
    16ca:	6d 90       	ld	r6, X+
    16cc:	7c 90       	ld	r7, X
    16ce:	95 97       	sbiw	r26, 0x25	; 37
    16d0:	96 96       	adiw	r26, 0x26	; 38
    16d2:	4d 91       	ld	r20, X+
    16d4:	5d 91       	ld	r21, X+
    16d6:	6d 91       	ld	r22, X+
    16d8:	7c 91       	ld	r23, X
    16da:	99 97       	sbiw	r26, 0x29	; 41
    16dc:	44 0d       	add	r20, r4
    16de:	55 1d       	adc	r21, r5
    16e0:	66 1d       	adc	r22, r6
    16e2:	77 1d       	adc	r23, r7
    16e4:	f4 01       	movw	r30, r8
    16e6:	46 a3       	std	Z+38, r20	; 0x26
    16e8:	57 a3       	std	Z+39, r21	; 0x27
    16ea:	60 a7       	std	Z+40, r22	; 0x28
    16ec:	71 a7       	std	Z+41, r23	; 0x29
    16ee:	f8 01       	movw	r30, r16
    16f0:	e1 5e       	subi	r30, 0xE1	; 225
    16f2:	fe 4f       	sbci	r31, 0xFE	; 254
    16f4:	40 81       	ld	r20, Z
    16f6:	51 81       	ldd	r21, Z+1	; 0x01
    16f8:	62 81       	ldd	r22, Z+2	; 0x02
    16fa:	73 81       	ldd	r23, Z+3	; 0x03
    16fc:	44 0d       	add	r20, r4
    16fe:	55 1d       	adc	r21, r5
    1700:	66 1d       	adc	r22, r6
    1702:	77 1d       	adc	r23, r7
    1704:	40 83       	st	Z, r20
    1706:	51 83       	std	Z+1, r21	; 0x01
    1708:	62 83       	std	Z+2, r22	; 0x02
    170a:	73 83       	std	Z+3, r23	; 0x03
    170c:	49 80       	ldd	r4, Y+1	; 0x01
    170e:	51 2c       	mov	r5, r1
    1710:	bf ef       	ldi	r27, 0xFF	; 255
    1712:	4b 1a       	sub	r4, r27
    1714:	5b 0a       	sbc	r5, r27
    1716:	05 2c       	mov	r0, r5
    1718:	00 0c       	add	r0, r0
    171a:	66 08       	sbc	r6, r6
    171c:	77 08       	sbc	r7, r7
    171e:	e7 e0       	ldi	r30, 0x07	; 7
    1720:	4e 0e       	add	r4, r30
    1722:	51 1c       	adc	r5, r1
    1724:	61 1c       	adc	r6, r1
    1726:	71 1c       	adc	r7, r1
    1728:	95 01       	movw	r18, r10
    172a:	2f 5f       	subi	r18, 0xFF	; 255
    172c:	3f 4f       	sbci	r19, 0xFF	; 255
    172e:	82 9f       	mul	r24, r18
    1730:	b0 01       	movw	r22, r0
    1732:	83 9f       	mul	r24, r19
    1734:	70 0d       	add	r23, r0
    1736:	11 24       	eor	r1, r1
    1738:	60 0f       	add	r22, r16
    173a:	71 1f       	adc	r23, r17
    173c:	c7 01       	movw	r24, r14
    173e:	84 0d       	add	r24, r4
    1740:	95 1d       	adc	r25, r5
    1742:	ae 01       	movw	r20, r28
    1744:	4f 5f       	subi	r20, 0xFF	; 255
    1746:	5f 4f       	sbci	r21, 0xFF	; 255
    1748:	ab da       	rcall	.-2730   	; 0xca0 <ParseIP>
    174a:	89 81       	ldd	r24, Y+1	; 0x01
    174c:	90 e0       	ldi	r25, 0x00	; 0
    174e:	01 96       	adiw	r24, 0x01	; 1
    1750:	09 2e       	mov	r0, r25
    1752:	00 0c       	add	r0, r0
    1754:	aa 0b       	sbc	r26, r26
    1756:	bb 0b       	sbc	r27, r27
    1758:	48 0e       	add	r4, r24
    175a:	59 1e       	adc	r5, r25
    175c:	6a 1e       	adc	r6, r26
    175e:	7b 1e       	adc	r7, r27
    1760:	17 01       	movw	r2, r14
    1762:	24 0c       	add	r2, r4
    1764:	35 1c       	adc	r3, r5
    1766:	be 01       	movw	r22, r28
    1768:	6f 5f       	subi	r22, 0xFF	; 255
    176a:	7f 4f       	sbci	r23, 0xFF	; 255
    176c:	c1 01       	movw	r24, r2
    176e:	0c da       	rcall	.-3048   	; 0xb88 <ParseNumber>
    1770:	d4 01       	movw	r26, r8
    1772:	5c 96       	adiw	r26, 0x1c	; 28
    1774:	7c 93       	st	X, r23
    1776:	6e 93       	st	-X, r22
    1778:	5b 97       	sbiw	r26, 0x1b	; 27
    177a:	f1 01       	movw	r30, r2
    177c:	80 81       	ld	r24, Z
    177e:	8a 33       	cpi	r24, 0x3A	; 58
    1780:	e9 f0       	breq	.+58     	; 0x17bc <ParseReceived+0x664>
    1782:	a6 01       	movw	r20, r12
    1784:	60 e0       	ldi	r22, 0x00	; 0
    1786:	70 e0       	ldi	r23, 0x00	; 0
    1788:	44 16       	cp	r4, r20
    178a:	55 06       	cpc	r5, r21
    178c:	66 06       	cpc	r6, r22
    178e:	77 06       	cpc	r7, r23
    1790:	a8 f4       	brcc	.+42     	; 0x17bc <ParseReceived+0x664>
    1792:	d3 01       	movw	r26, r6
    1794:	c2 01       	movw	r24, r4
    1796:	01 96       	adiw	r24, 0x01	; 1
    1798:	a1 1d       	adc	r26, r1
    179a:	b1 1d       	adc	r27, r1
    179c:	f7 01       	movw	r30, r14
    179e:	e8 0f       	add	r30, r24
    17a0:	f9 1f       	adc	r31, r25
    17a2:	2f ef       	ldi	r18, 0xFF	; 255
    17a4:	42 1a       	sub	r4, r18
    17a6:	52 0a       	sbc	r5, r18
    17a8:	62 0a       	sbc	r6, r18
    17aa:	72 0a       	sbc	r7, r18
    17ac:	81 91       	ld	r24, Z+
    17ae:	8a 33       	cpi	r24, 0x3A	; 58
    17b0:	29 f0       	breq	.+10     	; 0x17bc <ParseReceived+0x664>
    17b2:	44 16       	cp	r4, r20
    17b4:	55 06       	cpc	r5, r21
    17b6:	66 06       	cpc	r6, r22
    17b8:	77 06       	cpc	r7, r23
    17ba:	98 f3       	brcs	.-26     	; 0x17a2 <ParseReceived+0x64a>
    17bc:	3f ef       	ldi	r19, 0xFF	; 255
    17be:	43 1a       	sub	r4, r19
    17c0:	53 0a       	sbc	r5, r19
    17c2:	63 0a       	sbc	r6, r19
    17c4:	73 0a       	sbc	r7, r19
    17c6:	8d e1       	ldi	r24, 0x1D	; 29
    17c8:	8a 9d       	mul	r24, r10
    17ca:	f0 01       	movw	r30, r0
    17cc:	8b 9d       	mul	r24, r11
    17ce:	f0 0d       	add	r31, r0
    17d0:	11 24       	eor	r1, r1
    17d2:	e0 0f       	add	r30, r16
    17d4:	f1 1f       	adc	r31, r17
    17d6:	42 a1       	ldd	r20, Z+34	; 0x22
    17d8:	53 a1       	ldd	r21, Z+35	; 0x23
    17da:	64 a1       	ldd	r22, Z+36	; 0x24
    17dc:	75 a1       	ldd	r23, Z+37	; 0x25
    17de:	c6 01       	movw	r24, r12
    17e0:	a0 e0       	ldi	r26, 0x00	; 0
    17e2:	b0 e0       	ldi	r27, 0x00	; 0
    17e4:	84 19       	sub	r24, r4
    17e6:	95 09       	sbc	r25, r5
    17e8:	a6 09       	sbc	r26, r6
    17ea:	b7 09       	sbc	r27, r7
    17ec:	48 17       	cp	r20, r24
    17ee:	59 07       	cpc	r21, r25
    17f0:	6a 07       	cpc	r22, r26
    17f2:	7b 07       	cpc	r23, r27
    17f4:	20 f4       	brcc	.+8      	; 0x17fe <ParseReceived+0x6a6>
    17f6:	12 01       	movw	r2, r4
    17f8:	24 0e       	add	r2, r20
    17fa:	35 1e       	adc	r3, r21
    17fc:	01 c0       	rjmp	.+2      	; 0x1800 <ParseReceived+0x6a8>
    17fe:	16 01       	movw	r2, r12
    1800:	41 01       	movw	r8, r2
    1802:	84 18       	sub	r8, r4
    1804:	95 08       	sbc	r9, r5
    1806:	2d e1       	ldi	r18, 0x1D	; 29
    1808:	2a 9d       	mul	r18, r10
    180a:	c0 01       	movw	r24, r0
    180c:	2b 9d       	mul	r18, r11
    180e:	90 0d       	add	r25, r0
    1810:	11 24       	eor	r1, r1
    1812:	b8 01       	movw	r22, r16
    1814:	68 0f       	add	r22, r24
    1816:	79 1f       	adc	r23, r25
    1818:	7c 83       	std	Y+4, r23	; 0x04
    181a:	6b 83       	std	Y+3, r22	; 0x03
    181c:	b7 01       	movw	r22, r14
    181e:	64 0d       	add	r22, r4
    1820:	75 1d       	adc	r23, r5
    1822:	a4 01       	movw	r20, r8
    1824:	ab 81       	ldd	r26, Y+3	; 0x03
    1826:	bc 81       	ldd	r27, Y+4	; 0x04
    1828:	9a 96       	adiw	r26, 0x2a	; 42
    182a:	8d 91       	ld	r24, X+
    182c:	9c 91       	ld	r25, X
    182e:	9b 97       	sbiw	r26, 0x2b	; 43
    1830:	0e 94 8d 1c 	call	0x391a	; 0x391a <memcpy>
    1834:	eb 81       	ldd	r30, Y+3	; 0x03
    1836:	fc 81       	ldd	r31, Y+4	; 0x04
    1838:	82 a1       	ldd	r24, Z+34	; 0x22
    183a:	93 a1       	ldd	r25, Z+35	; 0x23
    183c:	a4 a1       	ldd	r26, Z+36	; 0x24
    183e:	b5 a1       	ldd	r27, Z+37	; 0x25
    1840:	a1 01       	movw	r20, r2
    1842:	60 e0       	ldi	r22, 0x00	; 0
    1844:	70 e0       	ldi	r23, 0x00	; 0
    1846:	44 19       	sub	r20, r4
    1848:	55 09       	sbc	r21, r5
    184a:	66 09       	sbc	r22, r6
    184c:	77 09       	sbc	r23, r7
    184e:	84 17       	cp	r24, r20
    1850:	95 07       	cpc	r25, r21
    1852:	a6 07       	cpc	r26, r22
    1854:	b7 07       	cpc	r27, r23
    1856:	70 f4       	brcc	.+28     	; 0x1874 <ParseReceived+0x71c>
    1858:	2d e1       	ldi	r18, 0x1D	; 29
    185a:	2a 9d       	mul	r18, r10
    185c:	f0 01       	movw	r30, r0
    185e:	2b 9d       	mul	r18, r11
    1860:	f0 0d       	add	r31, r0
    1862:	11 24       	eor	r1, r1
    1864:	e0 0f       	add	r30, r16
    1866:	f1 1f       	adc	r31, r17
    1868:	22 a5       	ldd	r18, Z+42	; 0x2a
    186a:	33 a5       	ldd	r19, Z+43	; 0x2b
    186c:	f9 01       	movw	r30, r18
    186e:	e8 0f       	add	r30, r24
    1870:	f9 1f       	adc	r31, r25
    1872:	10 82       	st	Z, r1
    1874:	f8 01       	movw	r30, r16
    1876:	f3 95       	inc	r31
    1878:	91 82       	std	Z+1, r9	; 0x01
    187a:	80 82       	st	Z, r8
    187c:	32 97       	sbiw	r30, 0x02	; 2
    187e:	91 82       	std	Z+1, r9	; 0x01
    1880:	80 82       	st	Z, r8
    1882:	c4 01       	movw	r24, r8
    1884:	a0 e0       	ldi	r26, 0x00	; 0
    1886:	b0 e0       	ldi	r27, 0x00	; 0
    1888:	2d e1       	ldi	r18, 0x1D	; 29
    188a:	2a 9d       	mul	r18, r10
    188c:	f0 01       	movw	r30, r0
    188e:	2b 9d       	mul	r18, r11
    1890:	f0 0d       	add	r31, r0
    1892:	11 24       	eor	r1, r1
    1894:	e0 0f       	add	r30, r16
    1896:	f1 1f       	adc	r31, r17
    1898:	42 a1       	ldd	r20, Z+34	; 0x22
    189a:	53 a1       	ldd	r21, Z+35	; 0x23
    189c:	64 a1       	ldd	r22, Z+36	; 0x24
    189e:	75 a1       	ldd	r23, Z+37	; 0x25
    18a0:	84 17       	cp	r24, r20
    18a2:	95 07       	cpc	r25, r21
    18a4:	a6 07       	cpc	r26, r22
    18a6:	b7 07       	cpc	r27, r23
    18a8:	90 f0       	brcs	.+36     	; 0x18ce <ParseReceived+0x776>
    18aa:	f8 01       	movw	r30, r16
    18ac:	e3 50       	subi	r30, 0x03	; 3
    18ae:	ff 4f       	sbci	r31, 0xFF	; 255
    18b0:	10 82       	st	Z, r1
    18b2:	8d e1       	ldi	r24, 0x1D	; 29
    18b4:	8a 9d       	mul	r24, r10
    18b6:	f0 01       	movw	r30, r0
    18b8:	8b 9d       	mul	r24, r11
    18ba:	f0 0d       	add	r31, r0
    18bc:	11 24       	eor	r1, r1
    18be:	e0 0f       	add	r30, r16
    18c0:	f1 1f       	adc	r31, r17
    18c2:	55 a6       	std	Z+45, r5	; 0x2d
    18c4:	44 a6       	std	Z+44, r4	; 0x2c
    18c6:	86 a9       	ldd	r24, Z+54	; 0x36
    18c8:	80 61       	ori	r24, 0x10	; 16
    18ca:	88 60       	ori	r24, 0x08	; 8
    18cc:	86 ab       	std	Z+54, r24	; 0x36
    18ce:	b6 01       	movw	r22, r12
    18d0:	62 19       	sub	r22, r2
    18d2:	73 09       	sbc	r23, r3
    18d4:	80 e0       	ldi	r24, 0x00	; 0
    18d6:	90 e0       	ldi	r25, 0x00	; 0
    18d8:	23 c3       	rjmp	.+1606   	; 0x1f20 <ParseReceived+0xdc8>
    18da:	f8 01       	movw	r30, r16
    18dc:	84 81       	ldd	r24, Z+4	; 0x04
    18de:	95 81       	ldd	r25, Z+5	; 0x05
    18e0:	a6 81       	ldd	r26, Z+6	; 0x06
    18e2:	b7 81       	ldd	r27, Z+7	; 0x07
    18e4:	fc 01       	movw	r30, r24
    18e6:	31 97       	sbiw	r30, 0x01	; 1
    18e8:	e1 32       	cpi	r30, 0x21	; 33
    18ea:	f1 05       	cpc	r31, r1
    18ec:	08 f0       	brcs	.+2      	; 0x18f0 <ParseReceived+0x798>
    18ee:	98 c2       	rjmp	.+1328   	; 0x1e20 <ParseReceived+0xcc8>
    18f0:	88 27       	eor	r24, r24
    18f2:	ee 58       	subi	r30, 0x8E	; 142
    18f4:	ff 4f       	sbci	r31, 0xFF	; 255
    18f6:	8f 4f       	sbci	r24, 0xFF	; 255
    18f8:	0c 94 48 1b 	jmp	0x3690	; 0x3690 <__tablejump2__>
    18fc:	47 e0       	ldi	r20, 0x07	; 7
    18fe:	50 e0       	ldi	r21, 0x00	; 0
    1900:	63 e9       	ldi	r22, 0x93	; 147
    1902:	73 e0       	ldi	r23, 0x03	; 3
    1904:	c7 01       	movw	r24, r14
    1906:	0e 94 9f 1c 	call	0x393e	; 0x393e <strncmp>
    190a:	89 2b       	or	r24, r25
    190c:	79 f4       	brne	.+30     	; 0x192c <ParseReceived+0x7d4>
    190e:	87 ee       	ldi	r24, 0xE7	; 231
    1910:	92 e0       	ldi	r25, 0x02	; 2
    1912:	d8 01       	movw	r26, r16
    1914:	19 96       	adiw	r26, 0x09	; 9
    1916:	9c 93       	st	X, r25
    1918:	8e 93       	st	-X, r24
    191a:	18 97       	sbiw	r26, 0x08	; 8
    191c:	f8 01       	movw	r30, r16
    191e:	e3 5e       	subi	r30, 0xE3	; 227
    1920:	fe 4f       	sbci	r31, 0xFE	; 254
    1922:	d7 01       	movw	r26, r14
    1924:	17 96       	adiw	r26, 0x07	; 7
    1926:	8c 91       	ld	r24, X
    1928:	80 53       	subi	r24, 0x30	; 48
    192a:	80 83       	st	Z, r24
    192c:	6d ed       	ldi	r22, 0xDD	; 221
    192e:	72 e0       	ldi	r23, 0x02	; 2
    1930:	c7 01       	movw	r24, r14
    1932:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    1936:	89 2b       	or	r24, r25
    1938:	09 f0       	breq	.+2      	; 0x193c <ParseReceived+0x7e4>
    193a:	b9 c2       	rjmp	.+1394   	; 0x1eae <ParseReceived+0xd56>
    193c:	f8 01       	movw	r30, r16
    193e:	14 82       	std	Z+4, r1	; 0x04
    1940:	15 82       	std	Z+5, r1	; 0x05
    1942:	16 82       	std	Z+6, r1	; 0x06
    1944:	17 82       	std	Z+7, r1	; 0x07
    1946:	67 ee       	ldi	r22, 0xE7	; 231
    1948:	72 e0       	ldi	r23, 0x02	; 2
    194a:	c7 01       	movw	r24, r14
    194c:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    1950:	89 2b       	or	r24, r25
    1952:	09 f0       	breq	.+2      	; 0x1956 <ParseReceived+0x7fe>
    1954:	65 c2       	rjmp	.+1226   	; 0x1e20 <ParseReceived+0xcc8>
    1956:	d8 01       	movw	r26, r16
    1958:	14 96       	adiw	r26, 0x04	; 4
    195a:	1d 92       	st	X+, r1
    195c:	1d 92       	st	X+, r1
    195e:	1d 92       	st	X+, r1
    1960:	1c 92       	st	X, r1
    1962:	17 97       	sbiw	r26, 0x07	; 7
    1964:	c8 01       	movw	r24, r16
    1966:	0e 94 f3 19 	call	0x33e6	; 0x33e6 <ESP8266_Callback_WifiConnectFailed>
    196a:	5a c2       	rjmp	.+1204   	; 0x1e20 <ParseReceived+0xcc8>
    196c:	4b e0       	ldi	r20, 0x0B	; 11
    196e:	50 e0       	ldi	r21, 0x00	; 0
    1970:	6b e9       	ldi	r22, 0x9B	; 155
    1972:	73 e0       	ldi	r23, 0x03	; 3
    1974:	c7 01       	movw	r24, r14
    1976:	0e 94 9f 1c 	call	0x393e	; 0x393e <strncmp>
    197a:	89 2b       	or	r24, r25
    197c:	09 f0       	breq	.+2      	; 0x1980 <ParseReceived+0x828>
    197e:	67 c0       	rjmp	.+206    	; 0x1a4e <ParseReceived+0x8f6>
    1980:	67 ea       	ldi	r22, 0xA7	; 167
    1982:	73 e0       	ldi	r23, 0x03	; 3
    1984:	c7 01       	movw	r24, r14
    1986:	0e 94 ad 1c 	call	0x395a	; 0x395a <strstr>
    198a:	89 2b       	or	r24, r25
    198c:	09 f4       	brne	.+2      	; 0x1990 <ParseReceived+0x838>
    198e:	5f c0       	rjmp	.+190    	; 0x1a4e <ParseReceived+0x8f6>
    1990:	f7 01       	movw	r30, r14
    1992:	80 81       	ld	r24, Z
    1994:	88 23       	and	r24, r24
    1996:	09 f4       	brne	.+2      	; 0x199a <ParseReceived+0x842>
    1998:	5a c0       	rjmp	.+180    	; 0x1a4e <ParseReceived+0x8f6>
    199a:	82 32       	cpi	r24, 0x22	; 34
    199c:	09 f4       	brne	.+2      	; 0x19a0 <ParseReceived+0x848>
    199e:	8f c2       	rjmp	.+1310   	; 0x1ebe <ParseReceived+0xd66>
    19a0:	d7 01       	movw	r26, r14
    19a2:	11 96       	adiw	r26, 0x01	; 1
    19a4:	fd 01       	movw	r30, r26
    19a6:	8d 91       	ld	r24, X+
    19a8:	88 23       	and	r24, r24
    19aa:	09 f4       	brne	.+2      	; 0x19ae <ParseReceived+0x856>
    19ac:	50 c0       	rjmp	.+160    	; 0x1a4e <ParseReceived+0x8f6>
    19ae:	82 32       	cpi	r24, 0x22	; 34
    19b0:	c9 f7       	brne	.-14     	; 0x19a4 <ParseReceived+0x84c>
    19b2:	86 c2       	rjmp	.+1292   	; 0x1ec0 <ParseReceived+0xd68>
    19b4:	21 e0       	ldi	r18, 0x01	; 1
    19b6:	29 0f       	add	r18, r25
    19b8:	6d 01       	movw	r12, r26
    19ba:	a8 01       	movw	r20, r16
    19bc:	49 0f       	add	r20, r25
    19be:	51 1d       	adc	r21, r1
    19c0:	4c 5f       	subi	r20, 0xFC	; 252
    19c2:	5e 4f       	sbci	r21, 0xFE	; 254
    19c4:	fa 01       	movw	r30, r20
    19c6:	80 83       	st	Z, r24
    19c8:	8d 91       	ld	r24, X+
    19ca:	6f 5f       	subi	r22, 0xFF	; 255
    19cc:	7f 4f       	sbci	r23, 0xFF	; 255
    19ce:	88 23       	and	r24, r24
    19d0:	89 f0       	breq	.+34     	; 0x19f4 <ParseReceived+0x89c>
    19d2:	92 2f       	mov	r25, r18
    19d4:	6d 01       	movw	r12, r26
    19d6:	f1 e0       	ldi	r31, 0x01	; 1
    19d8:	cf 1a       	sub	r12, r31
    19da:	d1 08       	sbc	r13, r1
    19dc:	82 32       	cpi	r24, 0x22	; 34
    19de:	51 f7       	brne	.-44     	; 0x19b4 <ParseReceived+0x85c>
    19e0:	2c 91       	ld	r18, X
    19e2:	2c 32       	cpi	r18, 0x2C	; 44
    19e4:	39 f7       	brne	.-50     	; 0x19b4 <ParseReceived+0x85c>
    19e6:	fb 01       	movw	r30, r22
    19e8:	20 81       	ld	r18, Z
    19ea:	22 32       	cpi	r18, 0x22	; 34
    19ec:	19 f7       	brne	.-58     	; 0x19b4 <ParseReceived+0x85c>
    19ee:	29 2f       	mov	r18, r25
    19f0:	01 c0       	rjmp	.+2      	; 0x19f4 <ParseReceived+0x89c>
    19f2:	20 e0       	ldi	r18, 0x00	; 0
    19f4:	f8 01       	movw	r30, r16
    19f6:	e2 0f       	add	r30, r18
    19f8:	f1 1d       	adc	r31, r1
    19fa:	ec 5f       	subi	r30, 0xFC	; 252
    19fc:	fe 4f       	sbci	r31, 0xFE	; 254
    19fe:	10 82       	st	Z, r1
    1a00:	f3 e0       	ldi	r31, 0x03	; 3
    1a02:	cf 0e       	add	r12, r31
    1a04:	d1 1c       	adc	r13, r1
    1a06:	ae 01       	movw	r20, r28
    1a08:	4e 5f       	subi	r20, 0xFE	; 254
    1a0a:	5f 4f       	sbci	r21, 0xFF	; 255
    1a0c:	b8 01       	movw	r22, r16
    1a0e:	6c 5e       	subi	r22, 0xEC	; 236
    1a10:	7e 4f       	sbci	r23, 0xFE	; 254
    1a12:	c6 01       	movw	r24, r12
    1a14:	97 da       	rcall	.-2770   	; 0xf44 <ParseMAC>
    1a16:	8a 81       	ldd	r24, Y+2	; 0x02
    1a18:	90 e0       	ldi	r25, 0x00	; 0
    1a1a:	02 96       	adiw	r24, 0x02	; 2
    1a1c:	c8 0e       	add	r12, r24
    1a1e:	d9 1e       	adc	r13, r25
    1a20:	be 01       	movw	r22, r28
    1a22:	6e 5f       	subi	r22, 0xFE	; 254
    1a24:	7f 4f       	sbci	r23, 0xFF	; 255
    1a26:	c6 01       	movw	r24, r12
    1a28:	af d8       	rcall	.-3746   	; 0xb88 <ParseNumber>
    1a2a:	f8 01       	movw	r30, r16
    1a2c:	e6 5e       	subi	r30, 0xE6	; 230
    1a2e:	fe 4f       	sbci	r31, 0xFE	; 254
    1a30:	60 83       	st	Z, r22
    1a32:	8a 81       	ldd	r24, Y+2	; 0x02
    1a34:	90 e0       	ldi	r25, 0x00	; 0
    1a36:	01 96       	adiw	r24, 0x01	; 1
    1a38:	be 01       	movw	r22, r28
    1a3a:	6e 5f       	subi	r22, 0xFE	; 254
    1a3c:	7f 4f       	sbci	r23, 0xFF	; 255
    1a3e:	8c 0d       	add	r24, r12
    1a40:	9d 1d       	adc	r25, r13
    1a42:	a2 d8       	rcall	.-3772   	; 0xb88 <ParseNumber>
    1a44:	f8 01       	movw	r30, r16
    1a46:	e5 5e       	subi	r30, 0xE5	; 229
    1a48:	fe 4f       	sbci	r31, 0xFE	; 254
    1a4a:	71 83       	std	Z+1, r23	; 0x01
    1a4c:	60 83       	st	Z, r22
    1a4e:	6d ed       	ldi	r22, 0xDD	; 221
    1a50:	72 e0       	ldi	r23, 0x02	; 2
    1a52:	c7 01       	movw	r24, r14
    1a54:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    1a58:	89 2b       	or	r24, r25
    1a5a:	09 f0       	breq	.+2      	; 0x1a5e <ParseReceived+0x906>
    1a5c:	03 c2       	rjmp	.+1030   	; 0x1e64 <ParseReceived+0xd0c>
    1a5e:	d8 01       	movw	r26, r16
    1a60:	14 96       	adiw	r26, 0x04	; 4
    1a62:	1d 92       	st	X+, r1
    1a64:	1d 92       	st	X+, r1
    1a66:	1d 92       	st	X+, r1
    1a68:	1c 92       	st	X, r1
    1a6a:	17 97       	sbiw	r26, 0x07	; 7
    1a6c:	d9 c1       	rjmp	.+946    	; 0x1e20 <ParseReceived+0xcc8>
    1a6e:	46 e0       	ldi	r20, 0x06	; 6
    1a70:	50 e0       	ldi	r21, 0x00	; 0
    1a72:	6f ea       	ldi	r22, 0xAF	; 175
    1a74:	73 e0       	ldi	r23, 0x03	; 3
    1a76:	c7 01       	movw	r24, r14
    1a78:	0e 94 9f 1c 	call	0x393e	; 0x393e <strncmp>
    1a7c:	89 2b       	or	r24, r25
    1a7e:	09 f0       	breq	.+2      	; 0x1a82 <ParseReceived+0x92a>
    1a80:	a9 c0       	rjmp	.+338    	; 0x1bd4 <ParseReceived+0xa7c>
    1a82:	f7 01       	movw	r30, r14
    1a84:	80 81       	ld	r24, Z
    1a86:	88 23       	and	r24, r24
    1a88:	09 f4       	brne	.+2      	; 0x1a8c <ParseReceived+0x934>
    1a8a:	a4 c0       	rjmp	.+328    	; 0x1bd4 <ParseReceived+0xa7c>
    1a8c:	8a 33       	cpi	r24, 0x3A	; 58
    1a8e:	09 f4       	brne	.+2      	; 0x1a92 <ParseReceived+0x93a>
    1a90:	26 c2       	rjmp	.+1100   	; 0x1ede <ParseReceived+0xd86>
    1a92:	31 96       	adiw	r30, 0x01	; 1
    1a94:	03 c0       	rjmp	.+6      	; 0x1a9c <ParseReceived+0x944>
    1a96:	8a 33       	cpi	r24, 0x3A	; 58
    1a98:	09 f4       	brne	.+2      	; 0x1a9c <ParseReceived+0x944>
    1a9a:	22 c2       	rjmp	.+1092   	; 0x1ee0 <ParseReceived+0xd88>
    1a9c:	9f 01       	movw	r18, r30
    1a9e:	81 91       	ld	r24, Z+
    1aa0:	81 11       	cpse	r24, r1
    1aa2:	f9 cf       	rjmp	.-14     	; 0x1a96 <ParseReceived+0x93e>
    1aa4:	97 c0       	rjmp	.+302    	; 0x1bd4 <ParseReceived+0xa7c>
    1aa6:	f9 01       	movw	r30, r18
    1aa8:	32 96       	adiw	r30, 0x02	; 2
    1aaa:	80 81       	ld	r24, Z
    1aac:	88 23       	and	r24, r24
    1aae:	51 f1       	breq	.+84     	; 0x1b04 <ParseReceived+0x9ac>
    1ab0:	6f 01       	movw	r12, r30
    1ab2:	2f ef       	ldi	r18, 0xFF	; 255
    1ab4:	c2 1a       	sub	r12, r18
    1ab6:	d2 0a       	sbc	r13, r18
    1ab8:	af 01       	movw	r20, r30
    1aba:	4e 5f       	subi	r20, 0xFE	; 254
    1abc:	5f 4f       	sbci	r21, 0xFF	; 255
    1abe:	20 e0       	ldi	r18, 0x00	; 0
    1ac0:	13 c0       	rjmp	.+38     	; 0x1ae8 <ParseReceived+0x990>
    1ac2:	91 e0       	ldi	r25, 0x01	; 1
    1ac4:	92 0f       	add	r25, r18
    1ac6:	f6 01       	movw	r30, r12
    1ac8:	b8 01       	movw	r22, r16
    1aca:	62 0f       	add	r22, r18
    1acc:	71 1d       	adc	r23, r1
    1ace:	9b 01       	movw	r18, r22
    1ad0:	2f 52       	subi	r18, 0x2F	; 47
    1ad2:	3f 4f       	sbci	r19, 0xFF	; 255
    1ad4:	d9 01       	movw	r26, r18
    1ad6:	8c 93       	st	X, r24
    1ad8:	d6 01       	movw	r26, r12
    1ada:	8d 91       	ld	r24, X+
    1adc:	6d 01       	movw	r12, r26
    1ade:	4f 5f       	subi	r20, 0xFF	; 255
    1ae0:	5f 4f       	sbci	r21, 0xFF	; 255
    1ae2:	88 23       	and	r24, r24
    1ae4:	81 f0       	breq	.+32     	; 0x1b06 <ParseReceived+0x9ae>
    1ae6:	29 2f       	mov	r18, r25
    1ae8:	f6 01       	movw	r30, r12
    1aea:	31 97       	sbiw	r30, 0x01	; 1
    1aec:	82 32       	cpi	r24, 0x22	; 34
    1aee:	49 f7       	brne	.-46     	; 0x1ac2 <ParseReceived+0x96a>
    1af0:	d6 01       	movw	r26, r12
    1af2:	9c 91       	ld	r25, X
    1af4:	9c 32       	cpi	r25, 0x2C	; 44
    1af6:	29 f7       	brne	.-54     	; 0x1ac2 <ParseReceived+0x96a>
    1af8:	da 01       	movw	r26, r20
    1afa:	9c 91       	ld	r25, X
    1afc:	92 32       	cpi	r25, 0x22	; 34
    1afe:	09 f7       	brne	.-62     	; 0x1ac2 <ParseReceived+0x96a>
    1b00:	92 2f       	mov	r25, r18
    1b02:	01 c0       	rjmp	.+2      	; 0x1b06 <ParseReceived+0x9ae>
    1b04:	90 e0       	ldi	r25, 0x00	; 0
    1b06:	d8 01       	movw	r26, r16
    1b08:	a9 0f       	add	r26, r25
    1b0a:	b1 1d       	adc	r27, r1
    1b0c:	af 52       	subi	r26, 0x2F	; 47
    1b0e:	bf 4f       	sbci	r27, 0xFF	; 255
    1b10:	1c 92       	st	X, r1
    1b12:	6f 01       	movw	r12, r30
    1b14:	b3 e0       	ldi	r27, 0x03	; 3
    1b16:	cb 0e       	add	r12, r27
    1b18:	d1 1c       	adc	r13, r1
    1b1a:	83 81       	ldd	r24, Z+3	; 0x03
    1b1c:	88 23       	and	r24, r24
    1b1e:	d9 f0       	breq	.+54     	; 0x1b56 <ParseReceived+0x9fe>
    1b20:	34 96       	adiw	r30, 0x04	; 4
    1b22:	20 e0       	ldi	r18, 0x00	; 0
    1b24:	0d c0       	rjmp	.+26     	; 0x1b40 <ParseReceived+0x9e8>
    1b26:	91 e0       	ldi	r25, 0x01	; 1
    1b28:	92 0f       	add	r25, r18
    1b2a:	6f 01       	movw	r12, r30
    1b2c:	d8 01       	movw	r26, r16
    1b2e:	a2 0f       	add	r26, r18
    1b30:	b1 1d       	adc	r27, r1
    1b32:	ab 51       	subi	r26, 0x1B	; 27
    1b34:	bf 4f       	sbci	r27, 0xFF	; 255
    1b36:	8c 93       	st	X, r24
    1b38:	81 91       	ld	r24, Z+
    1b3a:	88 23       	and	r24, r24
    1b3c:	69 f0       	breq	.+26     	; 0x1b58 <ParseReceived+0xa00>
    1b3e:	29 2f       	mov	r18, r25
    1b40:	6f 01       	movw	r12, r30
    1b42:	31 e0       	ldi	r19, 0x01	; 1
    1b44:	c3 1a       	sub	r12, r19
    1b46:	d1 08       	sbc	r13, r1
    1b48:	82 32       	cpi	r24, 0x22	; 34
    1b4a:	69 f7       	brne	.-38     	; 0x1b26 <ParseReceived+0x9ce>
    1b4c:	90 81       	ld	r25, Z
    1b4e:	9c 32       	cpi	r25, 0x2C	; 44
    1b50:	51 f7       	brne	.-44     	; 0x1b26 <ParseReceived+0x9ce>
    1b52:	92 2f       	mov	r25, r18
    1b54:	01 c0       	rjmp	.+2      	; 0x1b58 <ParseReceived+0xa00>
    1b56:	90 e0       	ldi	r25, 0x00	; 0
    1b58:	f8 01       	movw	r30, r16
    1b5a:	e9 0f       	add	r30, r25
    1b5c:	f1 1d       	adc	r31, r1
    1b5e:	eb 51       	subi	r30, 0x1B	; 27
    1b60:	ff 4f       	sbci	r31, 0xFF	; 255
    1b62:	10 82       	st	Z, r1
    1b64:	62 e0       	ldi	r22, 0x02	; 2
    1b66:	c6 0e       	add	r12, r22
    1b68:	d1 1c       	adc	r13, r1
    1b6a:	be 01       	movw	r22, r28
    1b6c:	6e 5f       	subi	r22, 0xFE	; 254
    1b6e:	7f 4f       	sbci	r23, 0xFF	; 255
    1b70:	c6 01       	movw	r24, r12
    1b72:	0a d8       	rcall	.-4076   	; 0xb88 <ParseNumber>
    1b74:	f8 01       	movw	r30, r16
    1b76:	e6 50       	subi	r30, 0x06	; 6
    1b78:	ff 4f       	sbci	r31, 0xFF	; 255
    1b7a:	60 83       	st	Z, r22
    1b7c:	8a 81       	ldd	r24, Y+2	; 0x02
    1b7e:	90 e0       	ldi	r25, 0x00	; 0
    1b80:	01 96       	adiw	r24, 0x01	; 1
    1b82:	c8 0e       	add	r12, r24
    1b84:	d9 1e       	adc	r13, r25
    1b86:	be 01       	movw	r22, r28
    1b88:	6e 5f       	subi	r22, 0xFE	; 254
    1b8a:	7f 4f       	sbci	r23, 0xFF	; 255
    1b8c:	c6 01       	movw	r24, r12
    1b8e:	0e 94 c4 05 	call	0xb88	; 0xb88 <ParseNumber>
    1b92:	f8 01       	movw	r30, r16
    1b94:	e7 50       	subi	r30, 0x07	; 7
    1b96:	ff 4f       	sbci	r31, 0xFF	; 255
    1b98:	60 83       	st	Z, r22
    1b9a:	8a 81       	ldd	r24, Y+2	; 0x02
    1b9c:	90 e0       	ldi	r25, 0x00	; 0
    1b9e:	01 96       	adiw	r24, 0x01	; 1
    1ba0:	c8 0e       	add	r12, r24
    1ba2:	d9 1e       	adc	r13, r25
    1ba4:	be 01       	movw	r22, r28
    1ba6:	6e 5f       	subi	r22, 0xFE	; 254
    1ba8:	7f 4f       	sbci	r23, 0xFF	; 255
    1baa:	c6 01       	movw	r24, r12
    1bac:	0e 94 c4 05 	call	0xb88	; 0xb88 <ParseNumber>
    1bb0:	f8 01       	movw	r30, r16
    1bb2:	e5 50       	subi	r30, 0x05	; 5
    1bb4:	ff 4f       	sbci	r31, 0xFF	; 255
    1bb6:	60 83       	st	Z, r22
    1bb8:	8a 81       	ldd	r24, Y+2	; 0x02
    1bba:	90 e0       	ldi	r25, 0x00	; 0
    1bbc:	01 96       	adiw	r24, 0x01	; 1
    1bbe:	be 01       	movw	r22, r28
    1bc0:	6e 5f       	subi	r22, 0xFE	; 254
    1bc2:	7f 4f       	sbci	r23, 0xFF	; 255
    1bc4:	8c 0d       	add	r24, r12
    1bc6:	9d 1d       	adc	r25, r13
    1bc8:	0e 94 c4 05 	call	0xb88	; 0xb88 <ParseNumber>
    1bcc:	f8 01       	movw	r30, r16
    1bce:	e4 50       	subi	r30, 0x04	; 4
    1bd0:	ff 4f       	sbci	r31, 0xFF	; 255
    1bd2:	60 83       	st	Z, r22
    1bd4:	6d ed       	ldi	r22, 0xDD	; 221
    1bd6:	72 e0       	ldi	r23, 0x02	; 2
    1bd8:	c7 01       	movw	r24, r14
    1bda:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    1bde:	89 2b       	or	r24, r25
    1be0:	09 f0       	breq	.+2      	; 0x1be4 <ParseReceived+0xa8c>
    1be2:	40 c1       	rjmp	.+640    	; 0x1e64 <ParseReceived+0xd0c>
    1be4:	d8 01       	movw	r26, r16
    1be6:	14 96       	adiw	r26, 0x04	; 4
    1be8:	1d 92       	st	X+, r1
    1bea:	1d 92       	st	X+, r1
    1bec:	1d 92       	st	X+, r1
    1bee:	1c 92       	st	X, r1
    1bf0:	17 97       	sbiw	r26, 0x07	; 7
    1bf2:	16 c1       	rjmp	.+556    	; 0x1e20 <ParseReceived+0xcc8>
    1bf4:	47 e0       	ldi	r20, 0x07	; 7
    1bf6:	50 e0       	ldi	r21, 0x00	; 0
    1bf8:	66 eb       	ldi	r22, 0xB6	; 182
    1bfa:	73 e0       	ldi	r23, 0x03	; 3
    1bfc:	c7 01       	movw	r24, r14
    1bfe:	0e 94 9f 1c 	call	0x393e	; 0x393e <strncmp>
    1c02:	89 2b       	or	r24, r25
    1c04:	19 f4       	brne	.+6      	; 0x1c0c <ParseReceived+0xab4>
    1c06:	b7 01       	movw	r22, r14
    1c08:	c8 01       	movw	r24, r16
    1c0a:	a7 d8       	rcall	.-3762   	; 0xd5a <ParseCIPSTA>
    1c0c:	6d ed       	ldi	r22, 0xDD	; 221
    1c0e:	72 e0       	ldi	r23, 0x02	; 2
    1c10:	c7 01       	movw	r24, r14
    1c12:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    1c16:	89 2b       	or	r24, r25
    1c18:	09 f0       	breq	.+2      	; 0x1c1c <ParseReceived+0xac4>
    1c1a:	24 c1       	rjmp	.+584    	; 0x1e64 <ParseReceived+0xd0c>
    1c1c:	f8 01       	movw	r30, r16
    1c1e:	14 82       	std	Z+4, r1	; 0x04
    1c20:	15 82       	std	Z+5, r1	; 0x05
    1c22:	16 82       	std	Z+6, r1	; 0x06
    1c24:	17 82       	std	Z+7, r1	; 0x07
    1c26:	c8 01       	movw	r24, r16
    1c28:	0e 94 19 1a 	call	0x3432	; 0x3432 <ESP8266_Callback_WifiIPSet>
    1c2c:	f9 c0       	rjmp	.+498    	; 0x1e20 <ParseReceived+0xcc8>
    1c2e:	46 e0       	ldi	r20, 0x06	; 6
    1c30:	50 e0       	ldi	r21, 0x00	; 0
    1c32:	6e eb       	ldi	r22, 0xBE	; 190
    1c34:	73 e0       	ldi	r23, 0x03	; 3
    1c36:	c7 01       	movw	r24, r14
    1c38:	0e 94 9f 1c 	call	0x393e	; 0x393e <strncmp>
    1c3c:	89 2b       	or	r24, r25
    1c3e:	19 f4       	brne	.+6      	; 0x1c46 <ParseReceived+0xaee>
    1c40:	b7 01       	movw	r22, r14
    1c42:	c8 01       	movw	r24, r16
    1c44:	8a d8       	rcall	.-3820   	; 0xd5a <ParseCIPSTA>
    1c46:	6d ed       	ldi	r22, 0xDD	; 221
    1c48:	72 e0       	ldi	r23, 0x02	; 2
    1c4a:	c7 01       	movw	r24, r14
    1c4c:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    1c50:	89 2b       	or	r24, r25
    1c52:	09 f0       	breq	.+2      	; 0x1c56 <ParseReceived+0xafe>
    1c54:	07 c1       	rjmp	.+526    	; 0x1e64 <ParseReceived+0xd0c>
    1c56:	d8 01       	movw	r26, r16
    1c58:	14 96       	adiw	r26, 0x04	; 4
    1c5a:	1d 92       	st	X+, r1
    1c5c:	1d 92       	st	X+, r1
    1c5e:	1d 92       	st	X+, r1
    1c60:	1c 92       	st	X, r1
    1c62:	17 97       	sbiw	r26, 0x07	; 7
    1c64:	dd c0       	rjmp	.+442    	; 0x1e20 <ParseReceived+0xcc8>
    1c66:	6d ed       	ldi	r22, 0xDD	; 221
    1c68:	72 e0       	ldi	r23, 0x02	; 2
    1c6a:	c7 01       	movw	r24, r14
    1c6c:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    1c70:	89 2b       	or	r24, r25
    1c72:	09 f0       	breq	.+2      	; 0x1c76 <ParseReceived+0xb1e>
    1c74:	f7 c0       	rjmp	.+494    	; 0x1e64 <ParseReceived+0xd0c>
    1c76:	f8 01       	movw	r30, r16
    1c78:	14 82       	std	Z+4, r1	; 0x04
    1c7a:	15 82       	std	Z+5, r1	; 0x05
    1c7c:	16 82       	std	Z+6, r1	; 0x06
    1c7e:	17 82       	std	Z+7, r1	; 0x07
    1c80:	e1 53       	subi	r30, 0x31	; 49
    1c82:	ff 4f       	sbci	r31, 0xFF	; 255
    1c84:	80 81       	ld	r24, Z
    1c86:	31 96       	adiw	r30, 0x01	; 1
    1c88:	80 83       	st	Z, r24
    1c8a:	ca c0       	rjmp	.+404    	; 0x1e20 <ParseReceived+0xcc8>
    1c8c:	6d ed       	ldi	r22, 0xDD	; 221
    1c8e:	72 e0       	ldi	r23, 0x02	; 2
    1c90:	c7 01       	movw	r24, r14
    1c92:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    1c96:	89 2b       	or	r24, r25
    1c98:	09 f0       	breq	.+2      	; 0x1c9c <ParseReceived+0xb44>
    1c9a:	e4 c0       	rjmp	.+456    	; 0x1e64 <ParseReceived+0xd0c>
    1c9c:	d8 01       	movw	r26, r16
    1c9e:	14 96       	adiw	r26, 0x04	; 4
    1ca0:	1d 92       	st	X+, r1
    1ca2:	1d 92       	st	X+, r1
    1ca4:	1d 92       	st	X+, r1
    1ca6:	1c 92       	st	X, r1
    1ca8:	17 97       	sbiw	r26, 0x07	; 7
    1caa:	ba c0       	rjmp	.+372    	; 0x1e20 <ParseReceived+0xcc8>
    1cac:	6d ed       	ldi	r22, 0xDD	; 221
    1cae:	72 e0       	ldi	r23, 0x02	; 2
    1cb0:	c7 01       	movw	r24, r14
    1cb2:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    1cb6:	89 2b       	or	r24, r25
    1cb8:	09 f0       	breq	.+2      	; 0x1cbc <ParseReceived+0xb64>
    1cba:	d4 c0       	rjmp	.+424    	; 0x1e64 <ParseReceived+0xd0c>
    1cbc:	8d e1       	ldi	r24, 0x1D	; 29
    1cbe:	90 e0       	ldi	r25, 0x00	; 0
    1cc0:	a0 e0       	ldi	r26, 0x00	; 0
    1cc2:	b0 e0       	ldi	r27, 0x00	; 0
    1cc4:	f8 01       	movw	r30, r16
    1cc6:	84 83       	std	Z+4, r24	; 0x04
    1cc8:	95 83       	std	Z+5, r25	; 0x05
    1cca:	a6 83       	std	Z+6, r26	; 0x06
    1ccc:	b7 83       	std	Z+7, r27	; 0x07
    1cce:	e7 5d       	subi	r30, 0xD7	; 215
    1cd0:	fe 4f       	sbci	r31, 0xFE	; 254
    1cd2:	81 81       	ldd	r24, Z+1	; 0x01
    1cd4:	81 60       	ori	r24, 0x01	; 1
    1cd6:	81 83       	std	Z+1, r24	; 0x01
    1cd8:	85 ec       	ldi	r24, 0xC5	; 197
    1cda:	93 e0       	ldi	r25, 0x03	; 3
    1cdc:	d8 01       	movw	r26, r16
    1cde:	19 96       	adiw	r26, 0x09	; 9
    1ce0:	9c 93       	st	X, r25
    1ce2:	8e 93       	st	-X, r24
    1ce4:	18 97       	sbiw	r26, 0x08	; 8
    1ce6:	9c c0       	rjmp	.+312    	; 0x1e20 <ParseReceived+0xcc8>
    1ce8:	6d ed       	ldi	r22, 0xDD	; 221
    1cea:	72 e0       	ldi	r23, 0x02	; 2
    1cec:	c7 01       	movw	r24, r14
    1cee:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    1cf2:	89 2b       	or	r24, r25
    1cf4:	09 f0       	breq	.+2      	; 0x1cf8 <ParseReceived+0xba0>
    1cf6:	0b c1       	rjmp	.+534    	; 0x1f0e <ParseReceived+0xdb6>
    1cf8:	f8 01       	movw	r30, r16
    1cfa:	14 82       	std	Z+4, r1	; 0x04
    1cfc:	15 82       	std	Z+5, r1	; 0x05
    1cfe:	16 82       	std	Z+6, r1	; 0x06
    1d00:	17 82       	std	Z+7, r1	; 0x07
    1d02:	e9 5d       	subi	r30, 0xD9	; 217
    1d04:	fe 4f       	sbci	r31, 0xFE	; 254
    1d06:	60 81       	ld	r22, Z
    1d08:	71 81       	ldd	r23, Z+1	; 0x01
    1d0a:	c8 01       	movw	r24, r16
    1d0c:	0e 94 3d 1a 	call	0x347a	; 0x347a <ESP8266_Callback_ClientConnectionConnected>
    1d10:	69 ef       	ldi	r22, 0xF9	; 249
    1d12:	72 e0       	ldi	r23, 0x02	; 2
    1d14:	c7 01       	movw	r24, r14
    1d16:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    1d1a:	89 2b       	or	r24, r25
    1d1c:	09 f0       	breq	.+2      	; 0x1d20 <ParseReceived+0xbc8>
    1d1e:	ee c0       	rjmp	.+476    	; 0x1efc <ParseReceived+0xda4>
    1d20:	d8 01       	movw	r26, r16
    1d22:	14 96       	adiw	r26, 0x04	; 4
    1d24:	1d 92       	st	X+, r1
    1d26:	1d 92       	st	X+, r1
    1d28:	1d 92       	st	X+, r1
    1d2a:	1c 92       	st	X, r1
    1d2c:	17 97       	sbiw	r26, 0x07	; 7
    1d2e:	f8 01       	movw	r30, r16
    1d30:	e2 5e       	subi	r30, 0xE2	; 226
    1d32:	fe 4f       	sbci	r31, 0xFE	; 254
    1d34:	80 81       	ld	r24, Z
    1d36:	bd e1       	ldi	r27, 0x1D	; 29
    1d38:	8b 02       	muls	r24, r27
    1d3a:	c0 01       	movw	r24, r0
    1d3c:	11 24       	eor	r1, r1
    1d3e:	f8 01       	movw	r30, r16
    1d40:	e8 0f       	add	r30, r24
    1d42:	f9 1f       	adc	r31, r25
    1d44:	26 a9       	ldd	r18, Z+54	; 0x36
    1d46:	2c 7b       	andi	r18, 0xBC	; 188
    1d48:	2f 7d       	andi	r18, 0xDF	; 223
    1d4a:	26 ab       	std	Z+54, r18	; 0x36
    1d4c:	4a 96       	adiw	r24, 0x1a	; 26
    1d4e:	b8 01       	movw	r22, r16
    1d50:	68 0f       	add	r22, r24
    1d52:	79 1f       	adc	r23, r25
    1d54:	c8 01       	movw	r24, r16
    1d56:	0e 94 58 1a 	call	0x34b0	; 0x34b0 <ESP8266_Callback_ClientConnectionError>
    1d5a:	62 c0       	rjmp	.+196    	; 0x1e20 <ParseReceived+0xcc8>
    1d5c:	6d ed       	ldi	r22, 0xDD	; 221
    1d5e:	72 e0       	ldi	r23, 0x02	; 2
    1d60:	c7 01       	movw	r24, r14
    1d62:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    1d66:	89 2b       	or	r24, r25
    1d68:	09 f0       	breq	.+2      	; 0x1d6c <ParseReceived+0xc14>
    1d6a:	7c c0       	rjmp	.+248    	; 0x1e64 <ParseReceived+0xd0c>
    1d6c:	f8 01       	movw	r30, r16
    1d6e:	14 82       	std	Z+4, r1	; 0x04
    1d70:	15 82       	std	Z+5, r1	; 0x05
    1d72:	16 82       	std	Z+6, r1	; 0x06
    1d74:	17 82       	std	Z+7, r1	; 0x07
    1d76:	54 c0       	rjmp	.+168    	; 0x1e20 <ParseReceived+0xcc8>
    1d78:	61 e0       	ldi	r22, 0x01	; 1
    1d7a:	73 e0       	ldi	r23, 0x03	; 3
    1d7c:	c7 01       	movw	r24, r14
    1d7e:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    1d82:	89 2b       	or	r24, r25
    1d84:	09 f0       	breq	.+2      	; 0x1d88 <ParseReceived+0xc30>
    1d86:	4c c0       	rjmp	.+152    	; 0x1e20 <ParseReceived+0xcc8>
    1d88:	d8 01       	movw	r26, r16
    1d8a:	14 96       	adiw	r26, 0x04	; 4
    1d8c:	1d 92       	st	X+, r1
    1d8e:	1d 92       	st	X+, r1
    1d90:	1d 92       	st	X+, r1
    1d92:	1c 92       	st	X, r1
    1d94:	17 97       	sbiw	r26, 0x07	; 7
    1d96:	f8 01       	movw	r30, r16
    1d98:	e7 5d       	subi	r30, 0xD7	; 215
    1d9a:	fe 4f       	sbci	r31, 0xFE	; 254
    1d9c:	81 81       	ldd	r24, Z+1	; 0x01
    1d9e:	82 60       	ori	r24, 0x02	; 2
    1da0:	81 83       	std	Z+1, r24	; 0x01
    1da2:	3e c0       	rjmp	.+124    	; 0x1e20 <ParseReceived+0xcc8>
    1da4:	4a e0       	ldi	r20, 0x0A	; 10
    1da6:	50 e0       	ldi	r21, 0x00	; 0
    1da8:	6d ec       	ldi	r22, 0xCD	; 205
    1daa:	73 e0       	ldi	r23, 0x03	; 3
    1dac:	c7 01       	movw	r24, r14
    1dae:	0e 94 9f 1c 	call	0x393e	; 0x393e <strncmp>
    1db2:	89 2b       	or	r24, r25
    1db4:	41 f4       	brne	.+16     	; 0x1dc6 <ParseReceived+0xc6e>
    1db6:	40 e0       	ldi	r20, 0x00	; 0
    1db8:	50 e0       	ldi	r21, 0x00	; 0
    1dba:	b8 01       	movw	r22, r16
    1dbc:	69 54       	subi	r22, 0x49	; 73
    1dbe:	7f 4f       	sbci	r23, 0xFF	; 255
    1dc0:	c7 01       	movw	r24, r14
    1dc2:	0c 96       	adiw	r24, 0x0c	; 12
    1dc4:	bf d8       	rcall	.-3714   	; 0xf44 <ParseMAC>
    1dc6:	6d ed       	ldi	r22, 0xDD	; 221
    1dc8:	72 e0       	ldi	r23, 0x02	; 2
    1dca:	c7 01       	movw	r24, r14
    1dcc:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    1dd0:	89 2b       	or	r24, r25
    1dd2:	09 f0       	breq	.+2      	; 0x1dd6 <ParseReceived+0xc7e>
    1dd4:	47 c0       	rjmp	.+142    	; 0x1e64 <ParseReceived+0xd0c>
    1dd6:	f8 01       	movw	r30, r16
    1dd8:	14 82       	std	Z+4, r1	; 0x04
    1dda:	15 82       	std	Z+5, r1	; 0x05
    1ddc:	16 82       	std	Z+6, r1	; 0x06
    1dde:	17 82       	std	Z+7, r1	; 0x07
    1de0:	1f c0       	rjmp	.+62     	; 0x1e20 <ParseReceived+0xcc8>
    1de2:	49 e0       	ldi	r20, 0x09	; 9
    1de4:	50 e0       	ldi	r21, 0x00	; 0
    1de6:	68 ed       	ldi	r22, 0xD8	; 216
    1de8:	73 e0       	ldi	r23, 0x03	; 3
    1dea:	c7 01       	movw	r24, r14
    1dec:	0e 94 9f 1c 	call	0x393e	; 0x393e <strncmp>
    1df0:	89 2b       	or	r24, r25
    1df2:	41 f4       	brne	.+16     	; 0x1e04 <ParseReceived+0xcac>
    1df4:	40 e0       	ldi	r20, 0x00	; 0
    1df6:	50 e0       	ldi	r21, 0x00	; 0
    1df8:	b8 01       	movw	r22, r16
    1dfa:	67 53       	subi	r22, 0x37	; 55
    1dfc:	7f 4f       	sbci	r23, 0xFF	; 255
    1dfe:	c7 01       	movw	r24, r14
    1e00:	0b 96       	adiw	r24, 0x0b	; 11
    1e02:	a0 d8       	rcall	.-3776   	; 0xf44 <ParseMAC>
    1e04:	6d ed       	ldi	r22, 0xDD	; 221
    1e06:	72 e0       	ldi	r23, 0x02	; 2
    1e08:	c7 01       	movw	r24, r14
    1e0a:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    1e0e:	89 2b       	or	r24, r25
    1e10:	49 f5       	brne	.+82     	; 0x1e64 <ParseReceived+0xd0c>
    1e12:	d8 01       	movw	r26, r16
    1e14:	14 96       	adiw	r26, 0x04	; 4
    1e16:	1d 92       	st	X+, r1
    1e18:	1d 92       	st	X+, r1
    1e1a:	1d 92       	st	X+, r1
    1e1c:	1c 92       	st	X, r1
    1e1e:	17 97       	sbiw	r26, 0x07	; 7
    1e20:	6d ed       	ldi	r22, 0xDD	; 221
    1e22:	72 e0       	ldi	r23, 0x02	; 2
    1e24:	c7 01       	movw	r24, r14
    1e26:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    1e2a:	89 2b       	or	r24, r25
    1e2c:	d9 f4       	brne	.+54     	; 0x1e64 <ParseReceived+0xd0c>
    1e2e:	f8 01       	movw	r30, r16
    1e30:	e7 5d       	subi	r30, 0xD7	; 215
    1e32:	fe 4f       	sbci	r31, 0xFE	; 254
    1e34:	81 81       	ldd	r24, Z+1	; 0x01
    1e36:	82 60       	ori	r24, 0x02	; 2
    1e38:	81 83       	std	Z+1, r24	; 0x01
    1e3a:	f8 01       	movw	r30, r16
    1e3c:	84 81       	ldd	r24, Z+4	; 0x04
    1e3e:	95 81       	ldd	r25, Z+5	; 0x05
    1e40:	a6 81       	ldd	r26, Z+6	; 0x06
    1e42:	b7 81       	ldd	r27, Z+7	; 0x07
    1e44:	08 97       	sbiw	r24, 0x08	; 8
    1e46:	a1 05       	cpc	r26, r1
    1e48:	b1 05       	cpc	r27, r1
    1e4a:	61 f0       	breq	.+24     	; 0x1e64 <ParseReceived+0xd0c>
    1e4c:	84 81       	ldd	r24, Z+4	; 0x04
    1e4e:	95 81       	ldd	r25, Z+5	; 0x05
    1e50:	a6 81       	ldd	r26, Z+6	; 0x06
    1e52:	b7 81       	ldd	r27, Z+7	; 0x07
    1e54:	4d 97       	sbiw	r24, 0x1d	; 29
    1e56:	a1 05       	cpc	r26, r1
    1e58:	b1 05       	cpc	r27, r1
    1e5a:	21 f0       	breq	.+8      	; 0x1e64 <ParseReceived+0xd0c>
    1e5c:	14 82       	std	Z+4, r1	; 0x04
    1e5e:	15 82       	std	Z+5, r1	; 0x05
    1e60:	16 82       	std	Z+6, r1	; 0x06
    1e62:	17 82       	std	Z+7, r1	; 0x07
    1e64:	69 ef       	ldi	r22, 0xF9	; 249
    1e66:	72 e0       	ldi	r23, 0x02	; 2
    1e68:	c7 01       	movw	r24, r14
    1e6a:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    1e6e:	89 2b       	or	r24, r25
    1e70:	39 f0       	breq	.+14     	; 0x1e80 <ParseReceived+0xd28>
    1e72:	69 e0       	ldi	r22, 0x09	; 9
    1e74:	73 e0       	ldi	r23, 0x03	; 3
    1e76:	c7 01       	movw	r24, r14
    1e78:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    1e7c:	89 2b       	or	r24, r25
    1e7e:	99 f4       	brne	.+38     	; 0x1ea6 <ParseReceived+0xd4e>
    1e80:	f8 01       	movw	r30, r16
    1e82:	e7 5d       	subi	r30, 0xD7	; 215
    1e84:	fe 4f       	sbci	r31, 0xFE	; 254
    1e86:	81 81       	ldd	r24, Z+1	; 0x01
    1e88:	8d 7f       	andi	r24, 0xFD	; 253
    1e8a:	81 83       	std	Z+1, r24	; 0x01
    1e8c:	f8 01       	movw	r30, r16
    1e8e:	14 82       	std	Z+4, r1	; 0x04
    1e90:	15 82       	std	Z+5, r1	; 0x05
    1e92:	16 82       	std	Z+6, r1	; 0x06
    1e94:	17 82       	std	Z+7, r1	; 0x07
    1e96:	60 e0       	ldi	r22, 0x00	; 0
    1e98:	70 e0       	ldi	r23, 0x00	; 0
    1e9a:	cb 01       	movw	r24, r22
    1e9c:	41 c0       	rjmp	.+130    	; 0x1f20 <ParseReceived+0xdc8>
    1e9e:	60 e0       	ldi	r22, 0x00	; 0
    1ea0:	70 e0       	ldi	r23, 0x00	; 0
    1ea2:	cb 01       	movw	r24, r22
    1ea4:	3d c0       	rjmp	.+122    	; 0x1f20 <ParseReceived+0xdc8>
    1ea6:	60 e0       	ldi	r22, 0x00	; 0
    1ea8:	70 e0       	ldi	r23, 0x00	; 0
    1eaa:	cb 01       	movw	r24, r22
    1eac:	39 c0       	rjmp	.+114    	; 0x1f20 <ParseReceived+0xdc8>
    1eae:	67 ee       	ldi	r22, 0xE7	; 231
    1eb0:	72 e0       	ldi	r23, 0x02	; 2
    1eb2:	c7 01       	movw	r24, r14
    1eb4:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    1eb8:	89 2b       	or	r24, r25
    1eba:	a1 f6       	brne	.-88     	; 0x1e64 <ParseReceived+0xd0c>
    1ebc:	4c cd       	rjmp	.-1384   	; 0x1956 <ParseReceived+0x7fe>
    1ebe:	f7 01       	movw	r30, r14
    1ec0:	6f 01       	movw	r12, r30
    1ec2:	2f ef       	ldi	r18, 0xFF	; 255
    1ec4:	c2 1a       	sub	r12, r18
    1ec6:	d2 0a       	sbc	r13, r18
    1ec8:	81 81       	ldd	r24, Z+1	; 0x01
    1eca:	88 23       	and	r24, r24
    1ecc:	09 f4       	brne	.+2      	; 0x1ed0 <ParseReceived+0xd78>
    1ece:	91 cd       	rjmp	.-1246   	; 0x19f2 <ParseReceived+0x89a>
    1ed0:	df 01       	movw	r26, r30
    1ed2:	12 96       	adiw	r26, 0x02	; 2
    1ed4:	bf 01       	movw	r22, r30
    1ed6:	6d 5f       	subi	r22, 0xFD	; 253
    1ed8:	7f 4f       	sbci	r23, 0xFF	; 255
    1eda:	90 e0       	ldi	r25, 0x00	; 0
    1edc:	7b cd       	rjmp	.-1290   	; 0x19d4 <ParseReceived+0x87c>
    1ede:	97 01       	movw	r18, r14
    1ee0:	f9 01       	movw	r30, r18
    1ee2:	31 96       	adiw	r30, 0x01	; 1
    1ee4:	c8 01       	movw	r24, r16
    1ee6:	8f 52       	subi	r24, 0x2F	; 47
    1ee8:	9f 4f       	sbci	r25, 0xFF	; 255
    1eea:	dc 01       	movw	r26, r24
    1eec:	1c 92       	st	X, r1
    1eee:	d9 01       	movw	r26, r18
    1ef0:	11 96       	adiw	r26, 0x01	; 1
    1ef2:	8c 91       	ld	r24, X
    1ef4:	82 32       	cpi	r24, 0x22	; 34
    1ef6:	09 f0       	breq	.+2      	; 0x1efa <ParseReceived+0xda2>
    1ef8:	d8 cd       	rjmp	.-1104   	; 0x1aaa <ParseReceived+0x952>
    1efa:	d5 cd       	rjmp	.-1110   	; 0x1aa6 <ParseReceived+0x94e>
    1efc:	6d ed       	ldi	r22, 0xDD	; 221
    1efe:	72 e0       	ldi	r23, 0x02	; 2
    1f00:	c7 01       	movw	r24, r14
    1f02:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    1f06:	89 2b       	or	r24, r25
    1f08:	09 f4       	brne	.+2      	; 0x1f0c <ParseReceived+0xdb4>
    1f0a:	91 cf       	rjmp	.-222    	; 0x1e2e <ParseReceived+0xcd6>
    1f0c:	b2 cf       	rjmp	.-156    	; 0x1e72 <ParseReceived+0xd1a>
    1f0e:	69 ef       	ldi	r22, 0xF9	; 249
    1f10:	72 e0       	ldi	r23, 0x02	; 2
    1f12:	c7 01       	movw	r24, r14
    1f14:	0e 94 96 1c 	call	0x392c	; 0x392c <strcmp>
    1f18:	89 2b       	or	r24, r25
    1f1a:	09 f0       	breq	.+2      	; 0x1f1e <ParseReceived+0xdc6>
    1f1c:	aa cf       	rjmp	.-172    	; 0x1e72 <ParseReceived+0xd1a>
    1f1e:	00 cf       	rjmp	.-512    	; 0x1d20 <ParseReceived+0xbc8>
    1f20:	0f 90       	pop	r0
    1f22:	0f 90       	pop	r0
    1f24:	0f 90       	pop	r0
    1f26:	0f 90       	pop	r0
    1f28:	df 91       	pop	r29
    1f2a:	cf 91       	pop	r28
    1f2c:	1f 91       	pop	r17
    1f2e:	0f 91       	pop	r16
    1f30:	ff 90       	pop	r15
    1f32:	ef 90       	pop	r14
    1f34:	df 90       	pop	r13
    1f36:	cf 90       	pop	r12
    1f38:	bf 90       	pop	r11
    1f3a:	af 90       	pop	r10
    1f3c:	9f 90       	pop	r9
    1f3e:	8f 90       	pop	r8
    1f40:	7f 90       	pop	r7
    1f42:	6f 90       	pop	r6
    1f44:	5f 90       	pop	r5
    1f46:	4f 90       	pop	r4
    1f48:	3f 90       	pop	r3
    1f4a:	2f 90       	pop	r2
    1f4c:	08 95       	ret

00001f4e <ESP8266_Update>:
    1f4e:	2f 92       	push	r2
    1f50:	3f 92       	push	r3
    1f52:	4f 92       	push	r4
    1f54:	5f 92       	push	r5
    1f56:	7f 92       	push	r7
    1f58:	8f 92       	push	r8
    1f5a:	9f 92       	push	r9
    1f5c:	af 92       	push	r10
    1f5e:	bf 92       	push	r11
    1f60:	cf 92       	push	r12
    1f62:	df 92       	push	r13
    1f64:	ef 92       	push	r14
    1f66:	ff 92       	push	r15
    1f68:	0f 93       	push	r16
    1f6a:	1f 93       	push	r17
    1f6c:	cf 93       	push	r28
    1f6e:	df 93       	push	r29
    1f70:	cd b7       	in	r28, 0x3d	; 61
    1f72:	de b7       	in	r29, 0x3e	; 62
    1f74:	c3 58       	subi	r28, 0x83	; 131
    1f76:	d1 09       	sbc	r29, r1
    1f78:	0f b6       	in	r0, 0x3f	; 63
    1f7a:	f8 94       	cli
    1f7c:	de bf       	out	0x3e, r29	; 62
    1f7e:	0f be       	out	0x3f, r0	; 63
    1f80:	cd bf       	out	0x3d, r28	; 61
    1f82:	8c 01       	movw	r16, r24
    1f84:	fc 01       	movw	r30, r24
    1f86:	86 89       	ldd	r24, Z+22	; 0x16
    1f88:	97 89       	ldd	r25, Z+23	; 0x17
    1f8a:	a0 8d       	ldd	r26, Z+24	; 0x18
    1f8c:	b1 8d       	ldd	r27, Z+25	; 0x19
    1f8e:	89 2b       	or	r24, r25
    1f90:	8a 2b       	or	r24, r26
    1f92:	8b 2b       	or	r24, r27
    1f94:	41 f4       	brne	.+16     	; 0x1fa6 <ESP8266_Update+0x58>
    1f96:	80 e3       	ldi	r24, 0x30	; 48
    1f98:	95 e7       	ldi	r25, 0x75	; 117
    1f9a:	a0 e0       	ldi	r26, 0x00	; 0
    1f9c:	b0 e0       	ldi	r27, 0x00	; 0
    1f9e:	86 8b       	std	Z+22, r24	; 0x16
    1fa0:	97 8b       	std	Z+23, r25	; 0x17
    1fa2:	a0 8f       	std	Z+24, r26	; 0x18
    1fa4:	b1 8f       	std	Z+25, r27	; 0x19
    1fa6:	f8 01       	movw	r30, r16
    1fa8:	86 85       	ldd	r24, Z+14	; 0x0e
    1faa:	97 85       	ldd	r25, Z+15	; 0x0f
    1fac:	a0 89       	ldd	r26, Z+16	; 0x10
    1fae:	b1 89       	ldd	r27, Z+17	; 0x11
    1fb0:	42 85       	ldd	r20, Z+10	; 0x0a
    1fb2:	53 85       	ldd	r21, Z+11	; 0x0b
    1fb4:	64 85       	ldd	r22, Z+12	; 0x0c
    1fb6:	75 85       	ldd	r23, Z+13	; 0x0d
    1fb8:	84 1b       	sub	r24, r20
    1fba:	95 0b       	sbc	r25, r21
    1fbc:	a6 0b       	sbc	r26, r22
    1fbe:	b7 0b       	sbc	r27, r23
    1fc0:	46 89       	ldd	r20, Z+22	; 0x16
    1fc2:	57 89       	ldd	r21, Z+23	; 0x17
    1fc4:	60 8d       	ldd	r22, Z+24	; 0x18
    1fc6:	71 8d       	ldd	r23, Z+25	; 0x19
    1fc8:	48 17       	cp	r20, r24
    1fca:	59 07       	cpc	r21, r25
    1fcc:	6a 07       	cpc	r22, r26
    1fce:	7b 07       	cpc	r23, r27
    1fd0:	f8 f4       	brcc	.+62     	; 0x2010 <ESP8266_Update+0xc2>
    1fd2:	84 81       	ldd	r24, Z+4	; 0x04
    1fd4:	95 81       	ldd	r25, Z+5	; 0x05
    1fd6:	a6 81       	ldd	r26, Z+6	; 0x06
    1fd8:	b7 81       	ldd	r27, Z+7	; 0x07
    1fda:	14 82       	std	Z+4, r1	; 0x04
    1fdc:	15 82       	std	Z+5, r1	; 0x05
    1fde:	16 82       	std	Z+6, r1	; 0x06
    1fe0:	17 82       	std	Z+7, r1	; 0x07
    1fe2:	8a 30       	cpi	r24, 0x0A	; 10
    1fe4:	a9 f4       	brne	.+42     	; 0x2010 <ESP8266_Update+0xc2>
    1fe6:	e2 5e       	subi	r30, 0xE2	; 226
    1fe8:	fe 4f       	sbci	r31, 0xFE	; 254
    1fea:	80 81       	ld	r24, Z
    1fec:	fd e1       	ldi	r31, 0x1D	; 29
    1fee:	8f 02       	muls	r24, r31
    1ff0:	c0 01       	movw	r24, r0
    1ff2:	11 24       	eor	r1, r1
    1ff4:	f8 01       	movw	r30, r16
    1ff6:	e8 0f       	add	r30, r24
    1ff8:	f9 1f       	adc	r31, r25
    1ffa:	26 a9       	ldd	r18, Z+54	; 0x36
    1ffc:	2c 7b       	andi	r18, 0xBC	; 188
    1ffe:	2f 7d       	andi	r18, 0xDF	; 223
    2000:	26 ab       	std	Z+54, r18	; 0x36
    2002:	4a 96       	adiw	r24, 0x1a	; 26
    2004:	b8 01       	movw	r22, r16
    2006:	68 0f       	add	r22, r24
    2008:	79 1f       	adc	r23, r25
    200a:	c8 01       	movw	r24, r16
    200c:	0e 94 18 1b 	call	0x3630	; 0x3630 <ESP8266_Callback_ClientConnectionTimeout>
    2010:	f8 01       	movw	r30, r16
    2012:	84 81       	ldd	r24, Z+4	; 0x04
    2014:	95 81       	ldd	r25, Z+5	; 0x05
    2016:	a6 81       	ldd	r26, Z+6	; 0x06
    2018:	b7 81       	ldd	r27, Z+7	; 0x07
    201a:	4d 97       	sbiw	r24, 0x1d	; 29
    201c:	a1 05       	cpc	r26, r1
    201e:	b1 05       	cpc	r27, r1
    2020:	09 f0       	breq	.+2      	; 0x2024 <ESP8266_Update+0xd6>
    2022:	98 c0       	rjmp	.+304    	; 0x2154 <ESP8266_Update+0x206>
    2024:	e6 5d       	subi	r30, 0xD6	; 214
    2026:	fe 4f       	sbci	r31, 0xFE	; 254
    2028:	80 81       	ld	r24, Z
    202a:	80 ff       	sbrs	r24, 0
    202c:	93 c0       	rjmp	.+294    	; 0x2154 <ESP8266_Update+0x206>
    202e:	22 e0       	ldi	r18, 0x02	; 2
    2030:	30 e0       	ldi	r19, 0x00	; 0
    2032:	40 e0       	ldi	r20, 0x00	; 0
    2034:	50 e0       	ldi	r21, 0x00	; 0
    2036:	62 ee       	ldi	r22, 0xE2	; 226
    2038:	73 e0       	ldi	r23, 0x03	; 3
    203a:	8e e6       	ldi	r24, 0x6E	; 110
    203c:	90 e1       	ldi	r25, 0x10	; 16
    203e:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <BUFFER_Find>
    2042:	77 23       	and	r23, r23
    2044:	74 f0       	brlt	.+28     	; 0x2062 <ESP8266_Update+0x114>
    2046:	67 2b       	or	r22, r23
    2048:	41 f5       	brne	.+80     	; 0x209a <ESP8266_Update+0x14c>
    204a:	22 e0       	ldi	r18, 0x02	; 2
    204c:	30 e0       	ldi	r19, 0x00	; 0
    204e:	40 e0       	ldi	r20, 0x00	; 0
    2050:	50 e0       	ldi	r21, 0x00	; 0
    2052:	be 01       	movw	r22, r28
    2054:	6e 57       	subi	r22, 0x7E	; 126
    2056:	7f 4f       	sbci	r23, 0xFF	; 255
    2058:	8e e6       	ldi	r24, 0x6E	; 110
    205a:	90 e1       	ldi	r25, 0x10	; 16
    205c:	0e 94 bd 02 	call	0x57a	; 0x57a <BUFFER_Read>
    2060:	1c c0       	rjmp	.+56     	; 0x209a <ESP8266_Update+0x14c>
    2062:	22 e0       	ldi	r18, 0x02	; 2
    2064:	30 e0       	ldi	r19, 0x00	; 0
    2066:	40 e0       	ldi	r20, 0x00	; 0
    2068:	50 e0       	ldi	r21, 0x00	; 0
    206a:	62 ee       	ldi	r22, 0xE2	; 226
    206c:	73 e0       	ldi	r23, 0x03	; 3
    206e:	80 e8       	ldi	r24, 0x80	; 128
    2070:	90 e1       	ldi	r25, 0x10	; 16
    2072:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <BUFFER_Find>
    2076:	61 15       	cp	r22, r1
    2078:	71 05       	cpc	r23, r1
    207a:	61 f4       	brne	.+24     	; 0x2094 <ESP8266_Update+0x146>
    207c:	22 e0       	ldi	r18, 0x02	; 2
    207e:	30 e0       	ldi	r19, 0x00	; 0
    2080:	40 e0       	ldi	r20, 0x00	; 0
    2082:	50 e0       	ldi	r21, 0x00	; 0
    2084:	be 01       	movw	r22, r28
    2086:	6e 57       	subi	r22, 0x7E	; 126
    2088:	7f 4f       	sbci	r23, 0xFF	; 255
    208a:	80 e8       	ldi	r24, 0x80	; 128
    208c:	90 e1       	ldi	r25, 0x10	; 16
    208e:	0e 94 bd 02 	call	0x57a	; 0x57a <BUFFER_Read>
    2092:	03 c0       	rjmp	.+6      	; 0x209a <ESP8266_Update+0x14c>
    2094:	77 23       	and	r23, r23
    2096:	0c f4       	brge	.+2      	; 0x209a <ESP8266_Update+0x14c>
    2098:	5d c0       	rjmp	.+186    	; 0x2154 <ESP8266_Update+0x206>
    209a:	f8 01       	movw	r30, r16
    209c:	e9 5d       	subi	r30, 0xD9	; 217
    209e:	fe 4f       	sbci	r31, 0xFE	; 254
    20a0:	e0 80       	ld	r14, Z
    20a2:	f1 80       	ldd	r15, Z+1	; 0x01
    20a4:	32 96       	adiw	r30, 0x02	; 2
    20a6:	81 81       	ldd	r24, Z+1	; 0x01
    20a8:	8e 7f       	andi	r24, 0xFE	; 254
    20aa:	81 83       	std	Z+1, r24	; 0x01
    20ac:	8d e1       	ldi	r24, 0x1D	; 29
    20ae:	90 e0       	ldi	r25, 0x00	; 0
    20b0:	a0 e0       	ldi	r26, 0x00	; 0
    20b2:	b0 e0       	ldi	r27, 0x00	; 0
    20b4:	f8 01       	movw	r30, r16
    20b6:	84 83       	std	Z+4, r24	; 0x04
    20b8:	95 83       	std	Z+5, r25	; 0x05
    20ba:	a6 83       	std	Z+6, r26	; 0x06
    20bc:	b7 83       	std	Z+7, r27	; 0x07
    20be:	d7 01       	movw	r26, r14
    20c0:	5c 96       	adiw	r26, 0x1c	; 28
    20c2:	8c 91       	ld	r24, X
    20c4:	5c 97       	sbiw	r26, 0x1c	; 28
    20c6:	81 ff       	sbrs	r24, 1
    20c8:	0b c0       	rjmp	.+22     	; 0x20e0 <ESP8266_Update+0x192>
    20ca:	50 96       	adiw	r26, 0x10	; 16
    20cc:	4d 91       	ld	r20, X+
    20ce:	5c 91       	ld	r21, X
    20d0:	51 97       	sbiw	r26, 0x11	; 17
    20d2:	24 eb       	ldi	r18, 0xB4	; 180
    20d4:	35 e0       	ldi	r19, 0x05	; 5
    20d6:	b7 01       	movw	r22, r14
    20d8:	c8 01       	movw	r24, r16
    20da:	0e 94 66 1a 	call	0x34cc	; 0x34cc <ESP8266_Callback_ClientConnectionSendData>
    20de:	09 c0       	rjmp	.+18     	; 0x20f2 <ESP8266_Update+0x1a4>
    20e0:	f7 01       	movw	r30, r14
    20e2:	40 89       	ldd	r20, Z+16	; 0x10
    20e4:	51 89       	ldd	r21, Z+17	; 0x11
    20e6:	24 eb       	ldi	r18, 0xB4	; 180
    20e8:	35 e0       	ldi	r19, 0x05	; 5
    20ea:	b7 01       	movw	r22, r14
    20ec:	c8 01       	movw	r24, r16
    20ee:	0e 94 45 08 	call	0x108a	; 0x108a <ESP8266_Callback_ServerConnectionSendData>
    20f2:	c8 2e       	mov	r12, r24
    20f4:	d9 2e       	mov	r13, r25
    20f6:	f5 eb       	ldi	r31, 0xB5	; 181
    20f8:	cf 16       	cp	r12, r31
    20fa:	f5 e0       	ldi	r31, 0x05	; 5
    20fc:	df 06       	cpc	r13, r31
    20fe:	30 f0       	brcs	.+12     	; 0x210c <ESP8266_Update+0x1be>
    2100:	0f 2e       	mov	r0, r31
    2102:	f4 eb       	ldi	r31, 0xB4	; 180
    2104:	cf 2e       	mov	r12, r31
    2106:	f5 e0       	ldi	r31, 0x05	; 5
    2108:	df 2e       	mov	r13, r31
    210a:	f0 2d       	mov	r31, r0
    210c:	c1 14       	cp	r12, r1
    210e:	d1 04       	cpc	r13, r1
    2110:	b9 f0       	breq	.+46     	; 0x2140 <ESP8266_Update+0x1f2>
    2112:	b6 01       	movw	r22, r12
    2114:	d7 01       	movw	r26, r14
    2116:	50 96       	adiw	r26, 0x10	; 16
    2118:	8d 91       	ld	r24, X+
    211a:	9c 91       	ld	r25, X
    211c:	51 97       	sbiw	r26, 0x11	; 17
    211e:	0e 94 aa 18 	call	0x3154	; 0x3154 <ESP8266_LL_USARTSend>
    2122:	f8 01       	movw	r30, r16
    2124:	ed 5d       	subi	r30, 0xDD	; 221
    2126:	fe 4f       	sbci	r31, 0xFE	; 254
    2128:	80 81       	ld	r24, Z
    212a:	91 81       	ldd	r25, Z+1	; 0x01
    212c:	a2 81       	ldd	r26, Z+2	; 0x02
    212e:	b3 81       	ldd	r27, Z+3	; 0x03
    2130:	8c 0d       	add	r24, r12
    2132:	9d 1d       	adc	r25, r13
    2134:	a1 1d       	adc	r26, r1
    2136:	b1 1d       	adc	r27, r1
    2138:	80 83       	st	Z, r24
    213a:	91 83       	std	Z+1, r25	; 0x01
    213c:	a2 83       	std	Z+2, r26	; 0x02
    213e:	b3 83       	std	Z+3, r27	; 0x03
    2140:	62 e0       	ldi	r22, 0x02	; 2
    2142:	70 e0       	ldi	r23, 0x00	; 0
    2144:	85 ee       	ldi	r24, 0xE5	; 229
    2146:	93 e0       	ldi	r25, 0x03	; 3
    2148:	0e 94 aa 18 	call	0x3154	; 0x3154 <ESP8266_LL_USARTSend>
    214c:	f7 01       	movw	r30, r14
    214e:	84 8d       	ldd	r24, Z+28	; 0x1c
    2150:	84 60       	ori	r24, 0x04	; 4
    2152:	84 8f       	std	Z+28, r24	; 0x1c
    2154:	f8 01       	movw	r30, r16
    2156:	84 81       	ldd	r24, Z+4	; 0x04
    2158:	95 81       	ldd	r25, Z+5	; 0x05
    215a:	a6 81       	ldd	r26, Z+6	; 0x06
    215c:	b7 81       	ldd	r27, Z+7	; 0x07
    215e:	41 97       	sbiw	r24, 0x11	; 17
    2160:	a1 05       	cpc	r26, r1
    2162:	b1 05       	cpc	r27, r1
    2164:	11 f5       	brne	.+68     	; 0x21aa <ESP8266_Update+0x25c>
    2166:	e3 50       	subi	r30, 0x03	; 3
    2168:	ff 4f       	sbci	r31, 0xFF	; 255
    216a:	80 81       	ld	r24, Z
    216c:	81 11       	cpse	r24, r1
    216e:	1d c0       	rjmp	.+58     	; 0x21aa <ESP8266_Update+0x25c>
    2170:	24 e0       	ldi	r18, 0x04	; 4
    2172:	30 e0       	ldi	r19, 0x00	; 0
    2174:	40 e0       	ldi	r20, 0x00	; 0
    2176:	50 e0       	ldi	r21, 0x00	; 0
    2178:	6d ed       	ldi	r22, 0xDD	; 221
    217a:	72 e0       	ldi	r23, 0x02	; 2
    217c:	8e e6       	ldi	r24, 0x6E	; 110
    217e:	90 e1       	ldi	r25, 0x10	; 16
    2180:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <BUFFER_Find>
    2184:	99 23       	and	r25, r25
    2186:	8c f0       	brlt	.+34     	; 0x21aa <ESP8266_Update+0x25c>
    2188:	8e e6       	ldi	r24, 0x6E	; 110
    218a:	90 e1       	ldi	r25, 0x10	; 16
    218c:	0e 94 69 03 	call	0x6d2	; 0x6d2 <BUFFER_Reset>
    2190:	d8 01       	movw	r26, r16
    2192:	14 96       	adiw	r26, 0x04	; 4
    2194:	1d 92       	st	X+, r1
    2196:	1d 92       	st	X+, r1
    2198:	1d 92       	st	X+, r1
    219a:	1c 92       	st	X, r1
    219c:	17 97       	sbiw	r26, 0x07	; 7
    219e:	f8 01       	movw	r30, r16
    21a0:	e7 5d       	subi	r30, 0xD7	; 215
    21a2:	fe 4f       	sbci	r31, 0xFE	; 254
    21a4:	81 81       	ldd	r24, Z+1	; 0x01
    21a6:	82 60       	ori	r24, 0x02	; 2
    21a8:	81 83       	std	Z+1, r24	; 0x01
    21aa:	68 01       	movw	r12, r16
    21ac:	bd ef       	ldi	r27, 0xFD	; 253
    21ae:	cb 0e       	add	r12, r27
    21b0:	d1 1c       	adc	r13, r1
    21b2:	5e 01       	movw	r10, r28
    21b4:	e2 e0       	ldi	r30, 0x02	; 2
    21b6:	ae 0e       	add	r10, r30
    21b8:	b1 1c       	adc	r11, r1
    21ba:	8a 2c       	mov	r8, r10
    21bc:	9b 2c       	mov	r9, r11
    21be:	17 c0       	rjmp	.+46     	; 0x21ee <ESP8266_Update+0x2a0>
    21c0:	21 e0       	ldi	r18, 0x01	; 1
    21c2:	ab 01       	movw	r20, r22
    21c4:	68 2d       	mov	r22, r8
    21c6:	79 2d       	mov	r23, r9
    21c8:	c8 01       	movw	r24, r16
    21ca:	0e 94 ac 08 	call	0x1158	; 0x1158 <ParseReceived>
    21ce:	fb 01       	movw	r30, r22
    21d0:	ef 2b       	or	r30, r31
    21d2:	69 f0       	breq	.+26     	; 0x21ee <ESP8266_Update+0x2a0>
    21d4:	9b 01       	movw	r18, r22
    21d6:	ac 01       	movw	r20, r24
    21d8:	44 27       	eor	r20, r20
    21da:	55 27       	eor	r21, r21
    21dc:	e6 1a       	sub	r14, r22
    21de:	f7 0a       	sbc	r15, r23
    21e0:	b5 01       	movw	r22, r10
    21e2:	6e 0d       	add	r22, r14
    21e4:	7f 1d       	adc	r23, r15
    21e6:	8e e6       	ldi	r24, 0x6E	; 110
    21e8:	90 e1       	ldi	r25, 0x10	; 16
    21ea:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <BUFFER_WriteToTop>
    21ee:	d6 01       	movw	r26, r12
    21f0:	8c 91       	ld	r24, X
    21f2:	88 23       	and	r24, r24
    21f4:	59 f0       	breq	.+22     	; 0x220c <__stack+0xd>
    21f6:	68 01       	movw	r12, r16
    21f8:	bd ef       	ldi	r27, 0xFD	; 253
    21fa:	cb 0e       	add	r12, r27
    21fc:	d1 1c       	adc	r13, r1
    21fe:	5e 01       	movw	r10, r28
    2200:	e2 e0       	ldi	r30, 0x02	; 2
    2202:	ae 0e       	add	r10, r30
    2204:	b1 1c       	adc	r11, r1
    2206:	8a 2c       	mov	r8, r10
    2208:	9b 2c       	mov	r9, r11
    220a:	26 c0       	rjmp	.+76     	; 0x2258 <__stack+0x59>
    220c:	20 e8       	ldi	r18, 0x80	; 128
    220e:	30 e0       	ldi	r19, 0x00	; 0
    2210:	40 e0       	ldi	r20, 0x00	; 0
    2212:	50 e0       	ldi	r21, 0x00	; 0
    2214:	68 2d       	mov	r22, r8
    2216:	79 2d       	mov	r23, r9
    2218:	8e e6       	ldi	r24, 0x6E	; 110
    221a:	90 e1       	ldi	r25, 0x10	; 16
    221c:	0e 94 23 05 	call	0xa46	; 0xa46 <BUFFER_ReadString>
    2220:	7b 01       	movw	r14, r22
    2222:	61 15       	cp	r22, r1
    2224:	71 05       	cpc	r23, r1
    2226:	61 f6       	brne	.-104    	; 0x21c0 <ESP8266_Update+0x272>
    2228:	e6 cf       	rjmp	.-52     	; 0x21f6 <ESP8266_Update+0x2a8>
    222a:	20 e0       	ldi	r18, 0x00	; 0
    222c:	ab 01       	movw	r20, r22
    222e:	68 2d       	mov	r22, r8
    2230:	79 2d       	mov	r23, r9
    2232:	c8 01       	movw	r24, r16
    2234:	0e 94 ac 08 	call	0x1158	; 0x1158 <ParseReceived>
    2238:	fb 01       	movw	r30, r22
    223a:	ef 2b       	or	r30, r31
    223c:	69 f0       	breq	.+26     	; 0x2258 <__stack+0x59>
    223e:	9b 01       	movw	r18, r22
    2240:	ac 01       	movw	r20, r24
    2242:	44 27       	eor	r20, r20
    2244:	55 27       	eor	r21, r21
    2246:	e6 1a       	sub	r14, r22
    2248:	f7 0a       	sbc	r15, r23
    224a:	b5 01       	movw	r22, r10
    224c:	6e 0d       	add	r22, r14
    224e:	7f 1d       	adc	r23, r15
    2250:	80 e8       	ldi	r24, 0x80	; 128
    2252:	90 e1       	ldi	r25, 0x10	; 16
    2254:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <BUFFER_WriteToTop>
    2258:	d6 01       	movw	r26, r12
    225a:	8c 91       	ld	r24, X
    225c:	81 11       	cpse	r24, r1
    225e:	74 c0       	rjmp	.+232    	; 0x2348 <__stack+0x149>
    2260:	f8 01       	movw	r30, r16
    2262:	84 81       	ldd	r24, Z+4	; 0x04
    2264:	95 81       	ldd	r25, Z+5	; 0x05
    2266:	a6 81       	ldd	r26, Z+6	; 0x06
    2268:	b7 81       	ldd	r27, Z+7	; 0x07
    226a:	89 2b       	or	r24, r25
    226c:	8a 2b       	or	r24, r26
    226e:	8b 2b       	or	r24, r27
    2270:	a1 f4       	brne	.+40     	; 0x229a <__stack+0x9b>
    2272:	20 e8       	ldi	r18, 0x80	; 128
    2274:	30 e0       	ldi	r19, 0x00	; 0
    2276:	40 e0       	ldi	r20, 0x00	; 0
    2278:	50 e0       	ldi	r21, 0x00	; 0
    227a:	68 2d       	mov	r22, r8
    227c:	79 2d       	mov	r23, r9
    227e:	80 e8       	ldi	r24, 0x80	; 128
    2280:	90 e1       	ldi	r25, 0x10	; 16
    2282:	0e 94 23 05 	call	0xa46	; 0xa46 <BUFFER_ReadString>
    2286:	7b 01       	movw	r14, r22
    2288:	61 15       	cp	r22, r1
    228a:	71 05       	cpc	r23, r1
    228c:	71 f6       	brne	.-100    	; 0x222a <__stack+0x2b>
    228e:	f8 01       	movw	r30, r16
    2290:	e3 50       	subi	r30, 0x03	; 3
    2292:	ff 4f       	sbci	r31, 0xFF	; 255
    2294:	80 81       	ld	r24, Z
    2296:	81 11       	cpse	r24, r1
    2298:	57 c0       	rjmp	.+174    	; 0x2348 <__stack+0x149>
    229a:	ae e6       	ldi	r26, 0x6E	; 110
    229c:	b0 e1       	ldi	r27, 0x10	; 16
    229e:	1c 96       	adiw	r26, 0x0c	; 12
    22a0:	ed 91       	ld	r30, X+
    22a2:	fc 91       	ld	r31, X
    22a4:	1d 97       	sbiw	r26, 0x0d	; 13
    22a6:	18 96       	adiw	r26, 0x08	; 8
    22a8:	8d 91       	ld	r24, X+
    22aa:	9c 91       	ld	r25, X
    22ac:	19 97       	sbiw	r26, 0x09	; 9
    22ae:	e8 0f       	add	r30, r24
    22b0:	f9 1f       	adc	r31, r25
    22b2:	80 81       	ld	r24, Z
    22b4:	8b 32       	cpi	r24, 0x2B	; 43
    22b6:	09 f0       	breq	.+2      	; 0x22ba <__stack+0xbb>
    22b8:	85 c1       	rjmp	.+778    	; 0x25c4 <__stack+0x3c5>
    22ba:	25 e0       	ldi	r18, 0x05	; 5
    22bc:	30 e0       	ldi	r19, 0x00	; 0
    22be:	40 e0       	ldi	r20, 0x00	; 0
    22c0:	50 e0       	ldi	r21, 0x00	; 0
    22c2:	65 e1       	ldi	r22, 0x15	; 21
    22c4:	73 e0       	ldi	r23, 0x03	; 3
    22c6:	cd 01       	movw	r24, r26
    22c8:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <BUFFER_Find>
    22cc:	67 2b       	or	r22, r23
    22ce:	68 2b       	or	r22, r24
    22d0:	69 2b       	or	r22, r25
    22d2:	99 f5       	brne	.+102    	; 0x233a <__stack+0x13b>
    22d4:	21 e0       	ldi	r18, 0x01	; 1
    22d6:	30 e0       	ldi	r19, 0x00	; 0
    22d8:	40 e0       	ldi	r20, 0x00	; 0
    22da:	50 e0       	ldi	r21, 0x00	; 0
    22dc:	69 e9       	ldi	r22, 0x99	; 153
    22de:	73 e0       	ldi	r23, 0x03	; 3
    22e0:	8e e6       	ldi	r24, 0x6E	; 110
    22e2:	90 e1       	ldi	r25, 0x10	; 16
    22e4:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <BUFFER_Find>
    22e8:	6b 01       	movw	r12, r22
    22ea:	7c 01       	movw	r14, r24
    22ec:	f1 e0       	ldi	r31, 0x01	; 1
    22ee:	cf 1a       	sub	r12, r31
    22f0:	d1 08       	sbc	r13, r1
    22f2:	e1 08       	sbc	r14, r1
    22f4:	f1 08       	sbc	r15, r1
    22f6:	22 e2       	ldi	r18, 0x22	; 34
    22f8:	c2 16       	cp	r12, r18
    22fa:	d1 04       	cpc	r13, r1
    22fc:	e1 04       	cpc	r14, r1
    22fe:	f1 04       	cpc	r15, r1
    2300:	e0 f4       	brcc	.+56     	; 0x233a <__stack+0x13b>
    2302:	9b 01       	movw	r18, r22
    2304:	ac 01       	movw	r20, r24
    2306:	2f 5f       	subi	r18, 0xFF	; 255
    2308:	3f 4f       	sbci	r19, 0xFF	; 255
    230a:	4f 4f       	sbci	r20, 0xFF	; 255
    230c:	5f 4f       	sbci	r21, 0xFF	; 255
    230e:	be 01       	movw	r22, r28
    2310:	6e 5f       	subi	r22, 0xFE	; 254
    2312:	7f 4f       	sbci	r23, 0xFF	; 255
    2314:	8e e6       	ldi	r24, 0x6E	; 110
    2316:	90 e1       	ldi	r25, 0x10	; 16
    2318:	0e 94 bd 02 	call	0x57a	; 0x57a <BUFFER_Read>
    231c:	e2 e0       	ldi	r30, 0x02	; 2
    231e:	f0 e0       	ldi	r31, 0x00	; 0
    2320:	ec 0f       	add	r30, r28
    2322:	fd 1f       	adc	r31, r29
    2324:	e6 0f       	add	r30, r22
    2326:	f7 1f       	adc	r31, r23
    2328:	10 82       	st	Z, r1
    232a:	21 e0       	ldi	r18, 0x01	; 1
    232c:	ab 01       	movw	r20, r22
    232e:	be 01       	movw	r22, r28
    2330:	6e 5f       	subi	r22, 0xFE	; 254
    2332:	7f 4f       	sbci	r23, 0xFF	; 255
    2334:	c8 01       	movw	r24, r16
    2336:	0e 94 ac 08 	call	0x1158	; 0x1158 <ParseReceived>
    233a:	f8 01       	movw	r30, r16
    233c:	e3 50       	subi	r30, 0x03	; 3
    233e:	ff 4f       	sbci	r31, 0xFF	; 255
    2340:	80 81       	ld	r24, Z
    2342:	88 23       	and	r24, r24
    2344:	09 f4       	brne	.+2      	; 0x2348 <__stack+0x149>
    2346:	3e c1       	rjmp	.+636    	; 0x25c4 <__stack+0x3c5>
    2348:	f8 01       	movw	r30, r16
    234a:	ed 5f       	subi	r30, 0xFD	; 253
    234c:	fe 4f       	sbci	r31, 0xFE	; 254
    234e:	80 81       	ld	r24, Z
    2350:	81 11       	cpse	r24, r1
    2352:	07 c0       	rjmp	.+14     	; 0x2362 <__stack+0x163>
    2354:	0f 2e       	mov	r0, r31
    2356:	f0 e8       	ldi	r31, 0x80	; 128
    2358:	8f 2e       	mov	r8, r31
    235a:	f0 e1       	ldi	r31, 0x10	; 16
    235c:	9f 2e       	mov	r9, r31
    235e:	f0 2d       	mov	r31, r0
    2360:	06 c0       	rjmp	.+12     	; 0x236e <__stack+0x16f>
    2362:	0f 2e       	mov	r0, r31
    2364:	fe e6       	ldi	r31, 0x6E	; 110
    2366:	8f 2e       	mov	r8, r31
    2368:	f0 e1       	ldi	r31, 0x10	; 16
    236a:	9f 2e       	mov	r9, r31
    236c:	f0 2d       	mov	r31, r0
    236e:	68 01       	movw	r12, r16
    2370:	3e ef       	ldi	r19, 0xFE	; 254
    2372:	c3 1a       	sub	r12, r19
    2374:	d3 0a       	sbc	r13, r19
    2376:	58 01       	movw	r10, r16
    2378:	b3 94       	inc	r11
    237a:	0f 2e       	mov	r0, r31
    237c:	fd e1       	ldi	r31, 0x1D	; 29
    237e:	7f 2e       	mov	r7, r31
    2380:	f0 2d       	mov	r31, r0
    2382:	78 01       	movw	r14, r16
    2384:	9e ef       	ldi	r25, 0xFE	; 254
    2386:	e9 0e       	add	r14, r25
    2388:	f1 1c       	adc	r15, r1
    238a:	8a c0       	rjmp	.+276    	; 0x24a0 <__stack+0x2a1>
    238c:	21 e0       	ldi	r18, 0x01	; 1
    238e:	30 e0       	ldi	r19, 0x00	; 0
    2390:	40 e0       	ldi	r20, 0x00	; 0
    2392:	50 e0       	ldi	r21, 0x00	; 0
    2394:	be 01       	movw	r22, r28
    2396:	6f 5f       	subi	r22, 0xFF	; 255
    2398:	7f 4f       	sbci	r23, 0xFF	; 255
    239a:	c4 01       	movw	r24, r8
    239c:	0e 94 bd 02 	call	0x57a	; 0x57a <BUFFER_Read>
    23a0:	29 81       	ldd	r18, Y+1	; 0x01
    23a2:	d6 01       	movw	r26, r12
    23a4:	8c 91       	ld	r24, X
    23a6:	f8 01       	movw	r30, r16
    23a8:	78 9e       	mul	r7, r24
    23aa:	e0 0d       	add	r30, r0
    23ac:	f1 1d       	adc	r31, r1
    23ae:	11 24       	eor	r1, r1
    23b0:	02 a4       	ldd	r0, Z+42	; 0x2a
    23b2:	f3 a5       	ldd	r31, Z+43	; 0x2b
    23b4:	e0 2d       	mov	r30, r0
    23b6:	d7 01       	movw	r26, r14
    23b8:	8d 91       	ld	r24, X+
    23ba:	9c 91       	ld	r25, X
    23bc:	11 97       	sbiw	r26, 0x01	; 1
    23be:	e8 0f       	add	r30, r24
    23c0:	f9 1f       	adc	r31, r25
    23c2:	20 83       	st	Z, r18
    23c4:	8d 91       	ld	r24, X+
    23c6:	9c 91       	ld	r25, X
    23c8:	11 97       	sbiw	r26, 0x01	; 1
    23ca:	01 96       	adiw	r24, 0x01	; 1
    23cc:	8d 93       	st	X+, r24
    23ce:	9c 93       	st	X, r25
    23d0:	f5 01       	movw	r30, r10
    23d2:	20 81       	ld	r18, Z
    23d4:	31 81       	ldd	r19, Z+1	; 0x01
    23d6:	2f 5f       	subi	r18, 0xFF	; 255
    23d8:	3f 4f       	sbci	r19, 0xFF	; 255
    23da:	31 83       	std	Z+1, r19	; 0x01
    23dc:	20 83       	st	Z, r18
    23de:	84 3b       	cpi	r24, 0xB4	; 180
    23e0:	f5 e0       	ldi	r31, 0x05	; 5
    23e2:	9f 07       	cpc	r25, r31
    23e4:	08 f4       	brcc	.+2      	; 0x23e8 <__stack+0x1e9>
    23e6:	5c c0       	rjmp	.+184    	; 0x24a0 <__stack+0x2a1>
    23e8:	d6 01       	movw	r26, r12
    23ea:	ec 91       	ld	r30, X
    23ec:	ac 01       	movw	r20, r24
    23ee:	60 e0       	ldi	r22, 0x00	; 0
    23f0:	70 e0       	ldi	r23, 0x00	; 0
    23f2:	d8 01       	movw	r26, r16
    23f4:	7e 9e       	mul	r7, r30
    23f6:	a0 0d       	add	r26, r0
    23f8:	b1 1d       	adc	r27, r1
    23fa:	11 24       	eor	r1, r1
    23fc:	fd 01       	movw	r30, r26
    23fe:	22 a0       	ldd	r2, Z+34	; 0x22
    2400:	33 a0       	ldd	r3, Z+35	; 0x23
    2402:	44 a0       	ldd	r4, Z+36	; 0x24
    2404:	55 a0       	ldd	r5, Z+37	; 0x25
    2406:	42 15       	cp	r20, r2
    2408:	53 05       	cpc	r21, r3
    240a:	64 05       	cpc	r22, r4
    240c:	75 05       	cpc	r23, r5
    240e:	09 f4       	brne	.+2      	; 0x2412 <__stack+0x213>
    2410:	47 c0       	rjmp	.+142    	; 0x24a0 <__stack+0x2a1>
    2412:	fd 01       	movw	r30, r26
    2414:	95 a7       	std	Z+45, r25	; 0x2d
    2416:	84 a7       	std	Z+44, r24	; 0x2c
    2418:	22 a5       	ldd	r18, Z+42	; 0x2a
    241a:	33 a5       	ldd	r19, Z+43	; 0x2b
    241c:	f9 01       	movw	r30, r18
    241e:	e8 0f       	add	r30, r24
    2420:	f9 1f       	adc	r31, r25
    2422:	10 82       	st	Z, r1
    2424:	f6 01       	movw	r30, r12
    2426:	80 81       	ld	r24, Z
    2428:	28 2f       	mov	r18, r24
    242a:	30 e0       	ldi	r19, 0x00	; 0
    242c:	f8 01       	movw	r30, r16
    242e:	78 9e       	mul	r7, r24
    2430:	e0 0d       	add	r30, r0
    2432:	f1 1d       	adc	r31, r1
    2434:	11 24       	eor	r1, r1
    2436:	86 a9       	ldd	r24, Z+54	; 0x36
    2438:	8f 7e       	andi	r24, 0xEF	; 239
    243a:	86 ab       	std	Z+54, r24	; 0x36
    243c:	81 ff       	sbrs	r24, 1
    243e:	12 c0       	rjmp	.+36     	; 0x2464 <__stack+0x265>
    2440:	72 9e       	mul	r7, r18
    2442:	b0 01       	movw	r22, r0
    2444:	73 9e       	mul	r7, r19
    2446:	70 0d       	add	r23, r0
    2448:	11 24       	eor	r1, r1
    244a:	f8 01       	movw	r30, r16
    244c:	e6 0f       	add	r30, r22
    244e:	f7 1f       	adc	r31, r23
    2450:	42 a5       	ldd	r20, Z+42	; 0x2a
    2452:	53 a5       	ldd	r21, Z+43	; 0x2b
    2454:	66 5e       	subi	r22, 0xE6	; 230
    2456:	7f 4f       	sbci	r23, 0xFF	; 255
    2458:	60 0f       	add	r22, r16
    245a:	71 1f       	adc	r23, r17
    245c:	c8 01       	movw	r24, r16
    245e:	0e 94 b0 1a 	call	0x3560	; 0x3560 <ESP8266_Callback_ClientConnectionDataReceived>
    2462:	11 c0       	rjmp	.+34     	; 0x2486 <__stack+0x287>
    2464:	72 9e       	mul	r7, r18
    2466:	b0 01       	movw	r22, r0
    2468:	73 9e       	mul	r7, r19
    246a:	70 0d       	add	r23, r0
    246c:	11 24       	eor	r1, r1
    246e:	f8 01       	movw	r30, r16
    2470:	e6 0f       	add	r30, r22
    2472:	f7 1f       	adc	r31, r23
    2474:	42 a5       	ldd	r20, Z+42	; 0x2a
    2476:	53 a5       	ldd	r21, Z+43	; 0x2b
    2478:	66 5e       	subi	r22, 0xE6	; 230
    247a:	7f 4f       	sbci	r23, 0xFF	; 255
    247c:	60 0f       	add	r22, r16
    247e:	71 1f       	adc	r23, r17
    2480:	c8 01       	movw	r24, r16
    2482:	0e 94 44 08 	call	0x1088	; 0x1088 <ESP8266_Callback_ServerConnectionDataReceived>
    2486:	d7 01       	movw	r26, r14
    2488:	1d 92       	st	X+, r1
    248a:	1c 92       	st	X, r1
    248c:	f6 01       	movw	r30, r12
    248e:	80 81       	ld	r24, Z
    2490:	f8 01       	movw	r30, r16
    2492:	78 9e       	mul	r7, r24
    2494:	e0 0d       	add	r30, r0
    2496:	f1 1d       	adc	r31, r1
    2498:	11 24       	eor	r1, r1
    249a:	86 a9       	ldd	r24, Z+54	; 0x36
    249c:	8f 7b       	andi	r24, 0xBF	; 191
    249e:	86 ab       	std	Z+54, r24	; 0x36
    24a0:	d6 01       	movw	r26, r12
    24a2:	2c 91       	ld	r18, X
    24a4:	f5 01       	movw	r30, r10
    24a6:	80 81       	ld	r24, Z
    24a8:	91 81       	ldd	r25, Z+1	; 0x01
    24aa:	a0 e0       	ldi	r26, 0x00	; 0
    24ac:	b0 e0       	ldi	r27, 0x00	; 0
    24ae:	f8 01       	movw	r30, r16
    24b0:	72 9e       	mul	r7, r18
    24b2:	e0 0d       	add	r30, r0
    24b4:	f1 1d       	adc	r31, r1
    24b6:	11 24       	eor	r1, r1
    24b8:	42 a1       	ldd	r20, Z+34	; 0x22
    24ba:	53 a1       	ldd	r21, Z+35	; 0x23
    24bc:	64 a1       	ldd	r22, Z+36	; 0x24
    24be:	75 a1       	ldd	r23, Z+37	; 0x25
    24c0:	84 17       	cp	r24, r20
    24c2:	95 07       	cpc	r25, r21
    24c4:	a6 07       	cpc	r26, r22
    24c6:	b7 07       	cpc	r27, r23
    24c8:	08 f0       	brcs	.+2      	; 0x24cc <__stack+0x2cd>
    24ca:	79 c0       	rjmp	.+242    	; 0x25be <__stack+0x3bf>
    24cc:	c4 01       	movw	r24, r8
    24ce:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <BUFFER_GetFull>
    24d2:	67 2b       	or	r22, r23
    24d4:	68 2b       	or	r22, r24
    24d6:	69 2b       	or	r22, r25
    24d8:	09 f0       	breq	.+2      	; 0x24dc <__stack+0x2dd>
    24da:	58 cf       	rjmp	.-336    	; 0x238c <__stack+0x18d>
    24dc:	f8 01       	movw	r30, r16
    24de:	ee 5f       	subi	r30, 0xFE	; 254
    24e0:	fe 4f       	sbci	r31, 0xFE	; 254
    24e2:	20 81       	ld	r18, Z
    24e4:	32 97       	sbiw	r30, 0x02	; 2
    24e6:	80 81       	ld	r24, Z
    24e8:	91 81       	ldd	r25, Z+1	; 0x01
    24ea:	a0 e0       	ldi	r26, 0x00	; 0
    24ec:	b0 e0       	ldi	r27, 0x00	; 0
    24ee:	e2 2e       	mov	r14, r18
    24f0:	f1 2c       	mov	r15, r1
    24f2:	f8 01       	movw	r30, r16
    24f4:	3d e1       	ldi	r19, 0x1D	; 29
    24f6:	23 9f       	mul	r18, r19
    24f8:	e0 0d       	add	r30, r0
    24fa:	f1 1d       	adc	r31, r1
    24fc:	11 24       	eor	r1, r1
    24fe:	42 a1       	ldd	r20, Z+34	; 0x22
    2500:	53 a1       	ldd	r21, Z+35	; 0x23
    2502:	64 a1       	ldd	r22, Z+36	; 0x24
    2504:	75 a1       	ldd	r23, Z+37	; 0x25
    2506:	84 17       	cp	r24, r20
    2508:	95 07       	cpc	r25, r21
    250a:	a6 07       	cpc	r26, r22
    250c:	b7 07       	cpc	r27, r23
    250e:	08 f4       	brcc	.+2      	; 0x2512 <__stack+0x313>
    2510:	59 c0       	rjmp	.+178    	; 0x25c4 <__stack+0x3c5>
    2512:	f8 01       	movw	r30, r16
    2514:	e3 50       	subi	r30, 0x03	; 3
    2516:	ff 4f       	sbci	r31, 0xFF	; 255
    2518:	10 82       	st	Z, r1
    251a:	8d e1       	ldi	r24, 0x1D	; 29
    251c:	8e 9d       	mul	r24, r14
    251e:	f0 01       	movw	r30, r0
    2520:	8f 9d       	mul	r24, r15
    2522:	f0 0d       	add	r31, r0
    2524:	11 24       	eor	r1, r1
    2526:	e0 0f       	add	r30, r16
    2528:	f1 1f       	adc	r31, r17
    252a:	d8 01       	movw	r26, r16
    252c:	a2 50       	subi	r26, 0x02	; 2
    252e:	bf 4f       	sbci	r27, 0xFF	; 255
    2530:	8d 91       	ld	r24, X+
    2532:	9c 91       	ld	r25, X
    2534:	95 a7       	std	Z+45, r25	; 0x2d
    2536:	84 a7       	std	Z+44, r24	; 0x2c
    2538:	86 a9       	ldd	r24, Z+54	; 0x36
    253a:	80 61       	ori	r24, 0x10	; 16
    253c:	86 ab       	std	Z+54, r24	; 0x36
    253e:	86 ff       	sbrs	r24, 6
    2540:	30 c0       	rjmp	.+96     	; 0x25a2 <__stack+0x3a3>
    2542:	8d e1       	ldi	r24, 0x1D	; 29
    2544:	8e 9d       	mul	r24, r14
    2546:	f0 01       	movw	r30, r0
    2548:	8f 9d       	mul	r24, r15
    254a:	f0 0d       	add	r31, r0
    254c:	11 24       	eor	r1, r1
    254e:	e0 0f       	add	r30, r16
    2550:	f1 1f       	adc	r31, r17
    2552:	c2 a4       	ldd	r12, Z+42	; 0x2a
    2554:	d3 a4       	ldd	r13, Z+43	; 0x2b
    2556:	68 ee       	ldi	r22, 0xE8	; 232
    2558:	73 e0       	ldi	r23, 0x03	; 3
    255a:	c6 01       	movw	r24, r12
    255c:	0e 94 ad 1c 	call	0x395a	; 0x395a <strstr>
    2560:	00 97       	sbiw	r24, 0x00	; 0
    2562:	39 f4       	brne	.+14     	; 0x2572 <__stack+0x373>
    2564:	68 ef       	ldi	r22, 0xF8	; 248
    2566:	73 e0       	ldi	r23, 0x03	; 3
    2568:	c6 01       	movw	r24, r12
    256a:	0e 94 ad 1c 	call	0x395a	; 0x395a <strstr>
    256e:	00 97       	sbiw	r24, 0x00	; 0
    2570:	c1 f0       	breq	.+48     	; 0x25a2 <__stack+0x3a3>
    2572:	dc 01       	movw	r26, r24
    2574:	1f 96       	adiw	r26, 0x0f	; 15
    2576:	2c 91       	ld	r18, X
    2578:	20 32       	cpi	r18, 0x20	; 32
    257a:	11 f0       	breq	.+4      	; 0x2580 <__stack+0x381>
    257c:	0f 96       	adiw	r24, 0x0f	; 15
    257e:	01 c0       	rjmp	.+2      	; 0x2582 <__stack+0x383>
    2580:	40 96       	adiw	r24, 0x10	; 16
    2582:	60 e0       	ldi	r22, 0x00	; 0
    2584:	70 e0       	ldi	r23, 0x00	; 0
    2586:	0e 94 c4 05 	call	0xb88	; 0xb88 <ParseNumber>
    258a:	2d e1       	ldi	r18, 0x1D	; 29
    258c:	2e 9d       	mul	r18, r14
    258e:	f0 01       	movw	r30, r0
    2590:	2f 9d       	mul	r18, r15
    2592:	f0 0d       	add	r31, r0
    2594:	11 24       	eor	r1, r1
    2596:	e0 0f       	add	r30, r16
    2598:	f1 1f       	adc	r31, r17
    259a:	66 a7       	std	Z+46, r22	; 0x2e
    259c:	77 a7       	std	Z+47, r23	; 0x2f
    259e:	80 ab       	std	Z+48, r24	; 0x30
    25a0:	91 ab       	std	Z+49, r25	; 0x31
    25a2:	f8 01       	movw	r30, r16
    25a4:	ee 5f       	subi	r30, 0xFE	; 254
    25a6:	fe 4f       	sbci	r31, 0xFE	; 254
    25a8:	80 81       	ld	r24, Z
    25aa:	f8 01       	movw	r30, r16
    25ac:	bd e1       	ldi	r27, 0x1D	; 29
    25ae:	8b 9f       	mul	r24, r27
    25b0:	e0 0d       	add	r30, r0
    25b2:	f1 1d       	adc	r31, r1
    25b4:	11 24       	eor	r1, r1
    25b6:	86 a9       	ldd	r24, Z+54	; 0x36
    25b8:	88 60       	ori	r24, 0x08	; 8
    25ba:	86 ab       	std	Z+54, r24	; 0x36
    25bc:	03 c0       	rjmp	.+6      	; 0x25c4 <__stack+0x3c5>
    25be:	e2 2e       	mov	r14, r18
    25c0:	f1 2c       	mov	r15, r1
    25c2:	a7 cf       	rjmp	.-178    	; 0x2512 <__stack+0x313>
    25c4:	c8 01       	movw	r24, r16
    25c6:	0e 94 4a 08 	call	0x1094	; 0x1094 <CallConnectionCallbacks>
    25ca:	f8 01       	movw	r30, r16
    25cc:	e3 5d       	subi	r30, 0xD3	; 211
    25ce:	fe 4f       	sbci	r31, 0xFE	; 254
    25d0:	10 82       	st	Z, r1
    25d2:	80 e0       	ldi	r24, 0x00	; 0
    25d4:	cd 57       	subi	r28, 0x7D	; 125
    25d6:	df 4f       	sbci	r29, 0xFF	; 255
    25d8:	0f b6       	in	r0, 0x3f	; 63
    25da:	f8 94       	cli
    25dc:	de bf       	out	0x3e, r29	; 62
    25de:	0f be       	out	0x3f, r0	; 63
    25e0:	cd bf       	out	0x3d, r28	; 61
    25e2:	df 91       	pop	r29
    25e4:	cf 91       	pop	r28
    25e6:	1f 91       	pop	r17
    25e8:	0f 91       	pop	r16
    25ea:	ff 90       	pop	r15
    25ec:	ef 90       	pop	r14
    25ee:	df 90       	pop	r13
    25f0:	cf 90       	pop	r12
    25f2:	bf 90       	pop	r11
    25f4:	af 90       	pop	r10
    25f6:	9f 90       	pop	r9
    25f8:	8f 90       	pop	r8
    25fa:	7f 90       	pop	r7
    25fc:	5f 90       	pop	r5
    25fe:	4f 90       	pop	r4
    2600:	3f 90       	pop	r3
    2602:	2f 90       	pop	r2
    2604:	08 95       	ret

00002606 <SendCommand>:
    2606:	0f 93       	push	r16
    2608:	1f 93       	push	r17
    260a:	cf 93       	push	r28
    260c:	df 93       	push	r29
    260e:	ec 01       	movw	r28, r24
    2610:	8a 01       	movw	r16, r20
    2612:	8c 81       	ldd	r24, Y+4	; 0x04
    2614:	9d 81       	ldd	r25, Y+5	; 0x05
    2616:	ae 81       	ldd	r26, Y+6	; 0x06
    2618:	bf 81       	ldd	r27, Y+7	; 0x07
    261a:	89 2b       	or	r24, r25
    261c:	8a 2b       	or	r24, r26
    261e:	8b 2b       	or	r24, r27
    2620:	39 f0       	breq	.+14     	; 0x2630 <SendCommand+0x2a>
    2622:	ce 01       	movw	r24, r28
    2624:	94 dc       	rcall	.-1752   	; 0x1f4e <ESP8266_Update>
    2626:	c3 5d       	subi	r28, 0xD3	; 211
    2628:	de 4f       	sbci	r29, 0xFE	; 254
    262a:	86 e0       	ldi	r24, 0x06	; 6
    262c:	88 83       	st	Y, r24
    262e:	29 c0       	rjmp	.+82     	; 0x2682 <SendCommand+0x7c>
    2630:	86 2f       	mov	r24, r22
    2632:	90 e0       	ldi	r25, 0x00	; 0
    2634:	a0 e0       	ldi	r26, 0x00	; 0
    2636:	b0 e0       	ldi	r27, 0x00	; 0
    2638:	8c 83       	std	Y+4, r24	; 0x04
    263a:	9d 83       	std	Y+5, r25	; 0x05
    263c:	ae 83       	std	Y+6, r26	; 0x06
    263e:	bf 83       	std	Y+7, r27	; 0x07
    2640:	39 87       	std	Y+9, r19	; 0x09
    2642:	28 87       	std	Y+8, r18	; 0x08
    2644:	61 31       	cpi	r22, 0x11	; 17
    2646:	21 f4       	brne	.+8      	; 0x2650 <SendCommand+0x4a>
    2648:	8e e6       	ldi	r24, 0x6E	; 110
    264a:	90 e1       	ldi	r25, 0x10	; 16
    264c:	0e 94 69 03 	call	0x6d2	; 0x6d2 <BUFFER_Reset>
    2650:	01 15       	cp	r16, r1
    2652:	11 05       	cpc	r17, r1
    2654:	51 f0       	breq	.+20     	; 0x266a <SendCommand+0x64>
    2656:	f8 01       	movw	r30, r16
    2658:	01 90       	ld	r0, Z+
    265a:	00 20       	and	r0, r0
    265c:	e9 f7       	brne	.-6      	; 0x2658 <SendCommand+0x52>
    265e:	31 97       	sbiw	r30, 0x01	; 1
    2660:	bf 01       	movw	r22, r30
    2662:	60 1b       	sub	r22, r16
    2664:	71 0b       	sbc	r23, r17
    2666:	c8 01       	movw	r24, r16
    2668:	75 d5       	rcall	.+2794   	; 0x3154 <ESP8266_LL_USARTSend>
    266a:	8e 85       	ldd	r24, Y+14	; 0x0e
    266c:	9f 85       	ldd	r25, Y+15	; 0x0f
    266e:	a8 89       	ldd	r26, Y+16	; 0x10
    2670:	b9 89       	ldd	r27, Y+17	; 0x11
    2672:	8a 87       	std	Y+10, r24	; 0x0a
    2674:	9b 87       	std	Y+11, r25	; 0x0b
    2676:	ac 87       	std	Y+12, r26	; 0x0c
    2678:	bd 87       	std	Y+13, r27	; 0x0d
    267a:	c3 5d       	subi	r28, 0xD3	; 211
    267c:	de 4f       	sbci	r29, 0xFE	; 254
    267e:	18 82       	st	Y, r1
    2680:	80 e0       	ldi	r24, 0x00	; 0
    2682:	df 91       	pop	r29
    2684:	cf 91       	pop	r28
    2686:	1f 91       	pop	r17
    2688:	0f 91       	pop	r16
    268a:	08 95       	ret

0000268c <ESP8266_WifiDisconnect>:
    268c:	28 e0       	ldi	r18, 0x08	; 8
    268e:	34 e0       	ldi	r19, 0x04	; 4
    2690:	41 e1       	ldi	r20, 0x11	; 17
    2692:	54 e0       	ldi	r21, 0x04	; 4
    2694:	61 e0       	ldi	r22, 0x01	; 1
    2696:	b7 cf       	rjmp	.-146    	; 0x2606 <SendCommand>
    2698:	08 95       	ret

0000269a <ESP8266_WifiGetConnected>:
    269a:	2b e9       	ldi	r18, 0x9B	; 155
    269c:	33 e0       	ldi	r19, 0x03	; 3
    269e:	4c e1       	ldi	r20, 0x1C	; 28
    26a0:	54 e0       	ldi	r21, 0x04	; 4
    26a2:	63 e1       	ldi	r22, 0x13	; 19
    26a4:	b0 cf       	rjmp	.-160    	; 0x2606 <SendCommand>
    26a6:	08 95       	ret

000026a8 <ESP8266_GetSTAIP>:
    26a8:	cf 93       	push	r28
    26aa:	df 93       	push	r29
    26ac:	ec 01       	movw	r28, r24
    26ae:	2c e3       	ldi	r18, 0x3C	; 60
    26b0:	34 e0       	ldi	r19, 0x04	; 4
    26b2:	48 e4       	ldi	r20, 0x48	; 72
    26b4:	54 e0       	ldi	r21, 0x04	; 4
    26b6:	66 e1       	ldi	r22, 0x16	; 22
    26b8:	a6 df       	rcall	.-180    	; 0x2606 <SendCommand>
    26ba:	fe 01       	movw	r30, r28
    26bc:	e3 5d       	subi	r30, 0xD3	; 211
    26be:	fe 4f       	sbci	r31, 0xFE	; 254
    26c0:	80 81       	ld	r24, Z
    26c2:	81 11       	cpse	r24, r1
    26c4:	06 c0       	rjmp	.+12     	; 0x26d2 <ESP8266_GetSTAIP+0x2a>
    26c6:	c7 5d       	subi	r28, 0xD7	; 215
    26c8:	de 4f       	sbci	r29, 0xFE	; 254
    26ca:	98 81       	ld	r25, Y
    26cc:	9c 7f       	andi	r25, 0xFC	; 252
    26ce:	9b 7f       	andi	r25, 0xFB	; 251
    26d0:	98 83       	st	Y, r25
    26d2:	df 91       	pop	r29
    26d4:	cf 91       	pop	r28
    26d6:	08 95       	ret

000026d8 <ESP8266_GetAPIP>:
    26d8:	cf 93       	push	r28
    26da:	df 93       	push	r29
    26dc:	ec 01       	movw	r28, r24
    26de:	29 e5       	ldi	r18, 0x59	; 89
    26e0:	34 e0       	ldi	r19, 0x04	; 4
    26e2:	44 e6       	ldi	r20, 0x64	; 100
    26e4:	54 e0       	ldi	r21, 0x04	; 4
    26e6:	67 e1       	ldi	r22, 0x17	; 23
    26e8:	8e df       	rcall	.-228    	; 0x2606 <SendCommand>
    26ea:	fe 01       	movw	r30, r28
    26ec:	e3 5d       	subi	r30, 0xD3	; 211
    26ee:	fe 4f       	sbci	r31, 0xFE	; 254
    26f0:	80 81       	ld	r24, Z
    26f2:	81 11       	cpse	r24, r1
    26f4:	06 c0       	rjmp	.+12     	; 0x2702 <ESP8266_GetAPIP+0x2a>
    26f6:	c7 5d       	subi	r28, 0xD7	; 215
    26f8:	de 4f       	sbci	r29, 0xFE	; 254
    26fa:	98 81       	ld	r25, Y
    26fc:	9f 7c       	andi	r25, 0xCF	; 207
    26fe:	9f 7b       	andi	r25, 0xBF	; 191
    2700:	98 83       	st	Y, r25
    2702:	df 91       	pop	r29
    2704:	cf 91       	pop	r28
    2706:	08 95       	ret

00002708 <ESP8266_GetSTAMAC>:
    2708:	cf 93       	push	r28
    270a:	df 93       	push	r29
    270c:	ec 01       	movw	r28, r24
    270e:	2d ec       	ldi	r18, 0xCD	; 205
    2710:	33 e0       	ldi	r19, 0x03	; 3
    2712:	44 e7       	ldi	r20, 0x74	; 116
    2714:	54 e0       	ldi	r21, 0x04	; 4
    2716:	68 e1       	ldi	r22, 0x18	; 24
    2718:	76 df       	rcall	.-276    	; 0x2606 <SendCommand>
    271a:	fe 01       	movw	r30, r28
    271c:	e3 5d       	subi	r30, 0xD3	; 211
    271e:	fe 4f       	sbci	r31, 0xFE	; 254
    2720:	80 81       	ld	r24, Z
    2722:	81 11       	cpse	r24, r1
    2724:	05 c0       	rjmp	.+10     	; 0x2730 <ESP8266_GetSTAMAC+0x28>
    2726:	c7 5d       	subi	r28, 0xD7	; 215
    2728:	de 4f       	sbci	r29, 0xFE	; 254
    272a:	98 81       	ld	r25, Y
    272c:	97 7f       	andi	r25, 0xF7	; 247
    272e:	98 83       	st	Y, r25
    2730:	df 91       	pop	r29
    2732:	cf 91       	pop	r28
    2734:	08 95       	ret

00002736 <ESP8266_GetAPMAC>:
    2736:	cf 93       	push	r28
    2738:	df 93       	push	r29
    273a:	ec 01       	movw	r28, r24
    273c:	28 ed       	ldi	r18, 0xD8	; 216
    273e:	33 e0       	ldi	r19, 0x03	; 3
    2740:	44 e8       	ldi	r20, 0x84	; 132
    2742:	54 e0       	ldi	r21, 0x04	; 4
    2744:	69 e1       	ldi	r22, 0x19	; 25
    2746:	5f df       	rcall	.-322    	; 0x2606 <SendCommand>
    2748:	fe 01       	movw	r30, r28
    274a:	e3 5d       	subi	r30, 0xD3	; 211
    274c:	fe 4f       	sbci	r31, 0xFE	; 254
    274e:	80 81       	ld	r24, Z
    2750:	81 11       	cpse	r24, r1
    2752:	05 c0       	rjmp	.+10     	; 0x275e <ESP8266_GetAPMAC+0x28>
    2754:	c7 5d       	subi	r28, 0xD7	; 215
    2756:	de 4f       	sbci	r29, 0xFE	; 254
    2758:	98 81       	ld	r25, Y
    275a:	9f 77       	andi	r25, 0x7F	; 127
    275c:	98 83       	st	Y, r25
    275e:	df 91       	pop	r29
    2760:	cf 91       	pop	r28
    2762:	08 95       	ret

00002764 <ESP8266_WaitReady>:
    2764:	0f 93       	push	r16
    2766:	1f 93       	push	r17
    2768:	cf 93       	push	r28
    276a:	df 93       	push	r29
    276c:	ec 01       	movw	r28, r24
    276e:	8c 01       	movw	r16, r24
    2770:	06 5d       	subi	r16, 0xD6	; 214
    2772:	1e 4f       	sbci	r17, 0xFE	; 254
    2774:	f8 01       	movw	r30, r16
    2776:	80 81       	ld	r24, Z
    2778:	80 ff       	sbrs	r24, 0
    277a:	0c c0       	rjmp	.+24     	; 0x2794 <ESP8266_WaitReady+0x30>
    277c:	22 e0       	ldi	r18, 0x02	; 2
    277e:	30 e0       	ldi	r19, 0x00	; 0
    2780:	40 e0       	ldi	r20, 0x00	; 0
    2782:	50 e0       	ldi	r21, 0x00	; 0
    2784:	62 ee       	ldi	r22, 0xE2	; 226
    2786:	73 e0       	ldi	r23, 0x03	; 3
    2788:	8e e6       	ldi	r24, 0x6E	; 110
    278a:	90 e1       	ldi	r25, 0x10	; 16
    278c:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <BUFFER_Find>
    2790:	99 23       	and	r25, r25
    2792:	54 f4       	brge	.+20     	; 0x27a8 <ESP8266_WaitReady+0x44>
    2794:	ce 01       	movw	r24, r28
    2796:	db db       	rcall	.-2122   	; 0x1f4e <ESP8266_Update>
    2798:	8c 81       	ldd	r24, Y+4	; 0x04
    279a:	9d 81       	ldd	r25, Y+5	; 0x05
    279c:	ae 81       	ldd	r26, Y+6	; 0x06
    279e:	bf 81       	ldd	r27, Y+7	; 0x07
    27a0:	89 2b       	or	r24, r25
    27a2:	8a 2b       	or	r24, r26
    27a4:	8b 2b       	or	r24, r27
    27a6:	31 f7       	brne	.-52     	; 0x2774 <ESP8266_WaitReady+0x10>
    27a8:	c3 5d       	subi	r28, 0xD3	; 211
    27aa:	de 4f       	sbci	r29, 0xFE	; 254
    27ac:	18 82       	st	Y, r1
    27ae:	80 e0       	ldi	r24, 0x00	; 0
    27b0:	df 91       	pop	r29
    27b2:	cf 91       	pop	r28
    27b4:	1f 91       	pop	r17
    27b6:	0f 91       	pop	r16
    27b8:	08 95       	ret

000027ba <ESP8266_GetAP>:
    27ba:	cf 93       	push	r28
    27bc:	df 93       	push	r29
    27be:	ec 01       	movw	r28, r24
    27c0:	2f ea       	ldi	r18, 0xAF	; 175
    27c2:	33 e0       	ldi	r19, 0x03	; 3
    27c4:	41 eb       	ldi	r20, 0xB1	; 177
    27c6:	54 e0       	ldi	r21, 0x04	; 4
    27c8:	6c e0       	ldi	r22, 0x0C	; 12
    27ca:	1d df       	rcall	.-454    	; 0x2606 <SendCommand>
    27cc:	88 23       	and	r24, r24
    27ce:	21 f0       	breq	.+8      	; 0x27d8 <ESP8266_GetAP+0x1e>
    27d0:	c3 5d       	subi	r28, 0xD3	; 211
    27d2:	de 4f       	sbci	r29, 0xFE	; 254
    27d4:	88 81       	ld	r24, Y
    27d6:	02 c0       	rjmp	.+4      	; 0x27dc <ESP8266_GetAP+0x22>
    27d8:	ce 01       	movw	r24, r28
    27da:	c4 df       	rcall	.-120    	; 0x2764 <ESP8266_WaitReady>
    27dc:	df 91       	pop	r29
    27de:	cf 91       	pop	r28
    27e0:	08 95       	ret

000027e2 <ESP8266_WifiConnect>:
    27e2:	cf 92       	push	r12
    27e4:	df 92       	push	r13
    27e6:	ef 92       	push	r14
    27e8:	ff 92       	push	r15
    27ea:	0f 93       	push	r16
    27ec:	1f 93       	push	r17
    27ee:	cf 93       	push	r28
    27f0:	df 93       	push	r29
    27f2:	ec 01       	movw	r28, r24
    27f4:	6b 01       	movw	r12, r22
    27f6:	7a 01       	movw	r14, r20
    27f8:	0c 81       	ldd	r16, Y+4	; 0x04
    27fa:	1d 81       	ldd	r17, Y+5	; 0x05
    27fc:	2e 81       	ldd	r18, Y+6	; 0x06
    27fe:	3f 81       	ldd	r19, Y+7	; 0x07
    2800:	01 2b       	or	r16, r17
    2802:	02 2b       	or	r16, r18
    2804:	03 2b       	or	r16, r19
    2806:	31 f0       	breq	.+12     	; 0x2814 <ESP8266_WifiConnect+0x32>
    2808:	a2 db       	rcall	.-2236   	; 0x1f4e <ESP8266_Update>
    280a:	c3 5d       	subi	r28, 0xD3	; 211
    280c:	de 4f       	sbci	r29, 0xFE	; 254
    280e:	86 e0       	ldi	r24, 0x06	; 6
    2810:	88 83       	st	Y, r24
    2812:	1c c0       	rjmp	.+56     	; 0x284c <ESP8266_WifiConnect+0x6a>
    2814:	6e e0       	ldi	r22, 0x0E	; 14
    2816:	70 e0       	ldi	r23, 0x00	; 0
    2818:	8d eb       	ldi	r24, 0xBD	; 189
    281a:	94 e0       	ldi	r25, 0x04	; 4
    281c:	9b d4       	rcall	.+2358   	; 0x3154 <ESP8266_LL_USARTSend>
    281e:	c6 01       	movw	r24, r12
    2820:	0e 94 1d 06 	call	0xc3a	; 0xc3a <EscapeStringAndSend>
    2824:	63 e0       	ldi	r22, 0x03	; 3
    2826:	70 e0       	ldi	r23, 0x00	; 0
    2828:	8c ec       	ldi	r24, 0xCC	; 204
    282a:	94 e0       	ldi	r25, 0x04	; 4
    282c:	93 d4       	rcall	.+2342   	; 0x3154 <ESP8266_LL_USARTSend>
    282e:	c7 01       	movw	r24, r14
    2830:	0e 94 1d 06 	call	0xc3a	; 0xc3a <EscapeStringAndSend>
    2834:	63 e0       	ldi	r22, 0x03	; 3
    2836:	70 e0       	ldi	r23, 0x00	; 0
    2838:	80 ed       	ldi	r24, 0xD0	; 208
    283a:	94 e0       	ldi	r25, 0x04	; 4
    283c:	8b d4       	rcall	.+2326   	; 0x3154 <ESP8266_LL_USARTSend>
    283e:	23 e9       	ldi	r18, 0x93	; 147
    2840:	33 e0       	ldi	r19, 0x03	; 3
    2842:	40 e0       	ldi	r20, 0x00	; 0
    2844:	50 e0       	ldi	r21, 0x00	; 0
    2846:	63 e0       	ldi	r22, 0x03	; 3
    2848:	ce 01       	movw	r24, r28
    284a:	dd de       	rcall	.-582    	; 0x2606 <SendCommand>
    284c:	df 91       	pop	r29
    284e:	cf 91       	pop	r28
    2850:	1f 91       	pop	r17
    2852:	0f 91       	pop	r16
    2854:	ff 90       	pop	r15
    2856:	ef 90       	pop	r14
    2858:	df 90       	pop	r13
    285a:	cf 90       	pop	r12
    285c:	08 95       	ret

0000285e <ESP8266_SetMode>:
    285e:	ff 92       	push	r15
    2860:	0f 93       	push	r16
    2862:	1f 93       	push	r17
    2864:	cf 93       	push	r28
    2866:	df 93       	push	r29
    2868:	1f 92       	push	r1
    286a:	cd b7       	in	r28, 0x3d	; 61
    286c:	de b7       	in	r29, 0x3e	; 62
    286e:	8c 01       	movw	r16, r24
    2870:	f6 2e       	mov	r15, r22
    2872:	69 83       	std	Y+1, r22	; 0x01
    2874:	fc 01       	movw	r30, r24
    2876:	84 81       	ldd	r24, Z+4	; 0x04
    2878:	95 81       	ldd	r25, Z+5	; 0x05
    287a:	a6 81       	ldd	r26, Z+6	; 0x06
    287c:	b7 81       	ldd	r27, Z+7	; 0x07
    287e:	89 2b       	or	r24, r25
    2880:	8a 2b       	or	r24, r26
    2882:	8b 2b       	or	r24, r27
    2884:	41 f0       	breq	.+16     	; 0x2896 <ESP8266_SetMode+0x38>
    2886:	c8 01       	movw	r24, r16
    2888:	62 db       	rcall	.-2364   	; 0x1f4e <ESP8266_Update>
    288a:	f8 01       	movw	r30, r16
    288c:	e3 5d       	subi	r30, 0xD3	; 211
    288e:	fe 4f       	sbci	r31, 0xFE	; 254
    2890:	86 e0       	ldi	r24, 0x06	; 6
    2892:	80 83       	st	Z, r24
    2894:	33 c0       	rjmp	.+102    	; 0x28fc <ESP8266_SetMode+0x9e>
    2896:	80 e3       	ldi	r24, 0x30	; 48
    2898:	86 0f       	add	r24, r22
    289a:	89 83       	std	Y+1, r24	; 0x01
    289c:	6e e0       	ldi	r22, 0x0E	; 14
    289e:	70 e0       	ldi	r23, 0x00	; 0
    28a0:	84 e3       	ldi	r24, 0x34	; 52
    28a2:	95 e0       	ldi	r25, 0x05	; 5
    28a4:	57 d4       	rcall	.+2222   	; 0x3154 <ESP8266_LL_USARTSend>
    28a6:	61 e0       	ldi	r22, 0x01	; 1
    28a8:	70 e0       	ldi	r23, 0x00	; 0
    28aa:	ce 01       	movw	r24, r28
    28ac:	01 96       	adiw	r24, 0x01	; 1
    28ae:	52 d4       	rcall	.+2212   	; 0x3154 <ESP8266_LL_USARTSend>
    28b0:	62 e0       	ldi	r22, 0x02	; 2
    28b2:	70 e0       	ldi	r23, 0x00	; 0
    28b4:	8e e3       	ldi	r24, 0x3E	; 62
    28b6:	99 e0       	ldi	r25, 0x09	; 9
    28b8:	4d d4       	rcall	.+2202   	; 0x3154 <ESP8266_LL_USARTSend>
    28ba:	23 e4       	ldi	r18, 0x43	; 67
    28bc:	35 e0       	ldi	r19, 0x05	; 5
    28be:	40 e0       	ldi	r20, 0x00	; 0
    28c0:	50 e0       	ldi	r21, 0x00	; 0
    28c2:	65 e0       	ldi	r22, 0x05	; 5
    28c4:	c8 01       	movw	r24, r16
    28c6:	9f de       	rcall	.-706    	; 0x2606 <SendCommand>
    28c8:	88 23       	and	r24, r24
    28ca:	29 f0       	breq	.+10     	; 0x28d6 <ESP8266_SetMode+0x78>
    28cc:	f8 01       	movw	r30, r16
    28ce:	e3 5d       	subi	r30, 0xD3	; 211
    28d0:	fe 4f       	sbci	r31, 0xFE	; 254
    28d2:	80 81       	ld	r24, Z
    28d4:	13 c0       	rjmp	.+38     	; 0x28fc <ESP8266_SetMode+0x9e>
    28d6:	f8 01       	movw	r30, r16
    28d8:	e1 53       	subi	r30, 0x31	; 49
    28da:	ff 4f       	sbci	r31, 0xFF	; 255
    28dc:	f0 82       	st	Z, r15
    28de:	c8 01       	movw	r24, r16
    28e0:	41 df       	rcall	.-382    	; 0x2764 <ESP8266_WaitReady>
    28e2:	f8 01       	movw	r30, r16
    28e4:	e0 53       	subi	r30, 0x30	; 48
    28e6:	ff 4f       	sbci	r31, 0xFF	; 255
    28e8:	80 81       	ld	r24, Z
    28ea:	8f 15       	cp	r24, r15
    28ec:	29 f0       	breq	.+10     	; 0x28f8 <ESP8266_SetMode+0x9a>
    28ee:	e3 5a       	subi	r30, 0xA3	; 163
    28f0:	ff 4f       	sbci	r31, 0xFF	; 255
    28f2:	81 e0       	ldi	r24, 0x01	; 1
    28f4:	80 83       	st	Z, r24
    28f6:	02 c0       	rjmp	.+4      	; 0x28fc <ESP8266_SetMode+0x9e>
    28f8:	c8 01       	movw	r24, r16
    28fa:	5f df       	rcall	.-322    	; 0x27ba <ESP8266_GetAP>
    28fc:	0f 90       	pop	r0
    28fe:	df 91       	pop	r29
    2900:	cf 91       	pop	r28
    2902:	1f 91       	pop	r17
    2904:	0f 91       	pop	r16
    2906:	ff 90       	pop	r15
    2908:	08 95       	ret

0000290a <ESP8266_Init>:
    290a:	2f 92       	push	r2
    290c:	3f 92       	push	r3
    290e:	4f 92       	push	r4
    2910:	5f 92       	push	r5
    2912:	6f 92       	push	r6
    2914:	7f 92       	push	r7
    2916:	8f 92       	push	r8
    2918:	9f 92       	push	r9
    291a:	af 92       	push	r10
    291c:	bf 92       	push	r11
    291e:	cf 92       	push	r12
    2920:	df 92       	push	r13
    2922:	ef 92       	push	r14
    2924:	ff 92       	push	r15
    2926:	0f 93       	push	r16
    2928:	1f 93       	push	r17
    292a:	cf 93       	push	r28
    292c:	df 93       	push	r29
    292e:	cd b7       	in	r28, 0x3d	; 61
    2930:	de b7       	in	r29, 0x3e	; 62
    2932:	29 97       	sbiw	r28, 0x09	; 9
    2934:	0f b6       	in	r0, 0x3f	; 63
    2936:	f8 94       	cli
    2938:	de bf       	out	0x3e, r29	; 62
    293a:	0f be       	out	0x3f, r0	; 63
    293c:	cd bf       	out	0x3d, r28	; 61
    293e:	8c 01       	movw	r16, r24
    2940:	6a 01       	movw	r12, r20
    2942:	7b 01       	movw	r14, r22
    2944:	fc 01       	movw	r30, r24
    2946:	16 8a       	std	Z+22, r1	; 0x16
    2948:	17 8a       	std	Z+23, r1	; 0x17
    294a:	10 8e       	std	Z+24, r1	; 0x18
    294c:	11 8e       	std	Z+25, r1	; 0x19
    294e:	2e e6       	ldi	r18, 0x6E	; 110
    2950:	3e e0       	ldi	r19, 0x0E	; 14
    2952:	40 e0       	ldi	r20, 0x00	; 0
    2954:	52 e0       	ldi	r21, 0x02	; 2
    2956:	60 e0       	ldi	r22, 0x00	; 0
    2958:	70 e0       	ldi	r23, 0x00	; 0
    295a:	80 e8       	ldi	r24, 0x80	; 128
    295c:	90 e1       	ldi	r25, 0x10	; 16
    295e:	0e 94 b5 00 	call	0x16a	; 0x16a <BUFFER_Init>
    2962:	88 23       	and	r24, r24
    2964:	31 f0       	breq	.+12     	; 0x2972 <ESP8266_Init+0x68>
    2966:	f8 01       	movw	r30, r16
    2968:	e3 5d       	subi	r30, 0xD3	; 211
    296a:	fe 4f       	sbci	r31, 0xFE	; 254
    296c:	84 e0       	ldi	r24, 0x04	; 4
    296e:	80 83       	st	Z, r24
    2970:	7f c1       	rjmp	.+766    	; 0x2c70 <ESP8266_Init+0x366>
    2972:	2e e6       	ldi	r18, 0x6E	; 110
    2974:	3a e0       	ldi	r19, 0x0A	; 10
    2976:	40 e0       	ldi	r20, 0x00	; 0
    2978:	54 e0       	ldi	r21, 0x04	; 4
    297a:	60 e0       	ldi	r22, 0x00	; 0
    297c:	70 e0       	ldi	r23, 0x00	; 0
    297e:	8e e6       	ldi	r24, 0x6E	; 110
    2980:	90 e1       	ldi	r25, 0x10	; 16
    2982:	0e 94 b5 00 	call	0x16a	; 0x16a <BUFFER_Init>
    2986:	88 23       	and	r24, r24
    2988:	31 f0       	breq	.+12     	; 0x2996 <ESP8266_Init+0x8c>
    298a:	f8 01       	movw	r30, r16
    298c:	e3 5d       	subi	r30, 0xD3	; 211
    298e:	fe 4f       	sbci	r31, 0xFE	; 254
    2990:	84 e0       	ldi	r24, 0x04	; 4
    2992:	80 83       	st	Z, r24
    2994:	6d c1       	rjmp	.+730    	; 0x2c70 <ESP8266_Init+0x366>
    2996:	27 9a       	sbi	0x04, 7	; 4
    2998:	2f 98       	cbi	0x05, 7	; 5
    299a:	f8 01       	movw	r30, r16
    299c:	86 85       	ldd	r24, Z+14	; 0x0e
    299e:	97 85       	ldd	r25, Z+15	; 0x0f
    29a0:	a0 89       	ldd	r26, Z+16	; 0x10
    29a2:	b1 89       	ldd	r27, Z+17	; 0x11
    29a4:	8d 83       	std	Y+5, r24	; 0x05
    29a6:	9e 83       	std	Y+6, r25	; 0x06
    29a8:	af 83       	std	Y+7, r26	; 0x07
    29aa:	b8 87       	std	Y+8, r27	; 0x08
    29ac:	f8 01       	movw	r30, r16
    29ae:	86 85       	ldd	r24, Z+14	; 0x0e
    29b0:	97 85       	ldd	r25, Z+15	; 0x0f
    29b2:	a0 89       	ldd	r26, Z+16	; 0x10
    29b4:	b1 89       	ldd	r27, Z+17	; 0x11
    29b6:	4d 81       	ldd	r20, Y+5	; 0x05
    29b8:	5e 81       	ldd	r21, Y+6	; 0x06
    29ba:	6f 81       	ldd	r22, Y+7	; 0x07
    29bc:	78 85       	ldd	r23, Y+8	; 0x08
    29be:	84 1b       	sub	r24, r20
    29c0:	95 0b       	sbc	r25, r21
    29c2:	a6 0b       	sbc	r26, r22
    29c4:	b7 0b       	sbc	r27, r23
    29c6:	84 36       	cpi	r24, 0x64	; 100
    29c8:	91 05       	cpc	r25, r1
    29ca:	a1 05       	cpc	r26, r1
    29cc:	b1 05       	cpc	r27, r1
    29ce:	70 f3       	brcs	.-36     	; 0x29ac <ESP8266_Init+0xa2>
    29d0:	2f 9a       	sbi	0x05, 7	; 5
    29d2:	86 85       	ldd	r24, Z+14	; 0x0e
    29d4:	97 85       	ldd	r25, Z+15	; 0x0f
    29d6:	a0 89       	ldd	r26, Z+16	; 0x10
    29d8:	b1 89       	ldd	r27, Z+17	; 0x11
    29da:	89 83       	std	Y+1, r24	; 0x01
    29dc:	9a 83       	std	Y+2, r25	; 0x02
    29de:	ab 83       	std	Y+3, r26	; 0x03
    29e0:	bc 83       	std	Y+4, r27	; 0x04
    29e2:	f8 01       	movw	r30, r16
    29e4:	86 85       	ldd	r24, Z+14	; 0x0e
    29e6:	97 85       	ldd	r25, Z+15	; 0x0f
    29e8:	a0 89       	ldd	r26, Z+16	; 0x10
    29ea:	b1 89       	ldd	r27, Z+17	; 0x11
    29ec:	49 81       	ldd	r20, Y+1	; 0x01
    29ee:	5a 81       	ldd	r21, Y+2	; 0x02
    29f0:	6b 81       	ldd	r22, Y+3	; 0x03
    29f2:	7c 81       	ldd	r23, Y+4	; 0x04
    29f4:	84 1b       	sub	r24, r20
    29f6:	95 0b       	sbc	r25, r21
    29f8:	a6 0b       	sbc	r26, r22
    29fa:	b7 0b       	sbc	r27, r23
    29fc:	84 36       	cpi	r24, 0x64	; 100
    29fe:	91 05       	cpc	r25, r1
    2a00:	a1 05       	cpc	r26, r1
    2a02:	b1 05       	cpc	r27, r1
    2a04:	70 f3       	brcs	.-36     	; 0x29e2 <ESP8266_Init+0xd8>
    2a06:	c0 82       	st	Z, r12
    2a08:	d1 82       	std	Z+1, r13	; 0x01
    2a0a:	e2 82       	std	Z+2, r14	; 0x02
    2a0c:	f3 82       	std	Z+3, r15	; 0x03
    2a0e:	c7 01       	movw	r24, r14
    2a10:	b6 01       	movw	r22, r12
    2a12:	4c d3       	rcall	.+1688   	; 0x30ac <ESP8266_LL_USARTInit>
    2a14:	88 ee       	ldi	r24, 0xE8	; 232
    2a16:	93 e0       	ldi	r25, 0x03	; 3
    2a18:	a0 e0       	ldi	r26, 0x00	; 0
    2a1a:	b0 e0       	ldi	r27, 0x00	; 0
    2a1c:	f8 01       	movw	r30, r16
    2a1e:	86 8b       	std	Z+22, r24	; 0x16
    2a20:	97 8b       	std	Z+23, r25	; 0x17
    2a22:	a0 8f       	std	Z+24, r26	; 0x18
    2a24:	b1 8f       	std	Z+25, r27	; 0x19
    2a26:	21 e0       	ldi	r18, 0x01	; 1
    2a28:	33 e0       	ldi	r19, 0x03	; 3
    2a2a:	4d e4       	ldi	r20, 0x4D	; 77
    2a2c:	55 e0       	ldi	r21, 0x05	; 5
    2a2e:	6f e0       	ldi	r22, 0x0F	; 15
    2a30:	c8 01       	movw	r24, r16
    2a32:	e9 dd       	rcall	.-1070   	; 0x2606 <SendCommand>
    2a34:	c8 01       	movw	r24, r16
    2a36:	96 de       	rcall	.-724    	; 0x2764 <ESP8266_WaitReady>
    2a38:	f8 01       	movw	r30, r16
    2a3a:	e6 5d       	subi	r30, 0xD6	; 214
    2a3c:	fe 4f       	sbci	r31, 0xFE	; 254
    2a3e:	80 81       	ld	r24, Z
    2a40:	81 fd       	sbrc	r24, 1
    2a42:	44 c0       	rjmp	.+136    	; 0x2acc <ESP8266_Init+0x1c2>
    2a44:	0f 2e       	mov	r0, r31
    2a46:	fc e5       	ldi	r31, 0x5C	; 92
    2a48:	ef 2e       	mov	r14, r31
    2a4a:	f6 e0       	ldi	r31, 0x06	; 6
    2a4c:	ff 2e       	mov	r15, r31
    2a4e:	f0 2d       	mov	r31, r0
    2a50:	0f 2e       	mov	r0, r31
    2a52:	fc e6       	ldi	r31, 0x6C	; 108
    2a54:	2f 2e       	mov	r2, r31
    2a56:	f6 e0       	ldi	r31, 0x06	; 6
    2a58:	3f 2e       	mov	r3, r31
    2a5a:	f0 2d       	mov	r31, r0
    2a5c:	0f 2e       	mov	r0, r31
    2a5e:	f8 ee       	ldi	r31, 0xE8	; 232
    2a60:	4f 2e       	mov	r4, r31
    2a62:	f3 e0       	ldi	r31, 0x03	; 3
    2a64:	5f 2e       	mov	r5, r31
    2a66:	61 2c       	mov	r6, r1
    2a68:	71 2c       	mov	r7, r1
    2a6a:	f0 2d       	mov	r31, r0
    2a6c:	6f 01       	movw	r12, r30
    2a6e:	f7 01       	movw	r30, r14
    2a70:	81 90       	ld	r8, Z+
    2a72:	91 90       	ld	r9, Z+
    2a74:	a1 90       	ld	r10, Z+
    2a76:	b1 90       	ld	r11, Z+
    2a78:	7f 01       	movw	r14, r30
    2a7a:	c5 01       	movw	r24, r10
    2a7c:	b4 01       	movw	r22, r8
    2a7e:	16 d3       	rcall	.+1580   	; 0x30ac <ESP8266_LL_USARTInit>
    2a80:	f8 01       	movw	r30, r16
    2a82:	46 8a       	std	Z+22, r4	; 0x16
    2a84:	57 8a       	std	Z+23, r5	; 0x17
    2a86:	60 8e       	std	Z+24, r6	; 0x18
    2a88:	71 8e       	std	Z+25, r7	; 0x19
    2a8a:	21 e0       	ldi	r18, 0x01	; 1
    2a8c:	33 e0       	ldi	r19, 0x03	; 3
    2a8e:	4d e4       	ldi	r20, 0x4D	; 77
    2a90:	55 e0       	ldi	r21, 0x05	; 5
    2a92:	6f e0       	ldi	r22, 0x0F	; 15
    2a94:	c8 01       	movw	r24, r16
    2a96:	b7 dd       	rcall	.-1170   	; 0x2606 <SendCommand>
    2a98:	c8 01       	movw	r24, r16
    2a9a:	64 de       	rcall	.-824    	; 0x2764 <ESP8266_WaitReady>
    2a9c:	f6 01       	movw	r30, r12
    2a9e:	80 81       	ld	r24, Z
    2aa0:	81 ff       	sbrs	r24, 1
    2aa2:	0b c0       	rjmp	.+22     	; 0x2aba <ESP8266_Init+0x1b0>
    2aa4:	f8 01       	movw	r30, r16
    2aa6:	80 82       	st	Z, r8
    2aa8:	91 82       	std	Z+1, r9	; 0x01
    2aaa:	a2 82       	std	Z+2, r10	; 0x02
    2aac:	b3 82       	std	Z+3, r11	; 0x03
    2aae:	e6 5d       	subi	r30, 0xD6	; 214
    2ab0:	fe 4f       	sbci	r31, 0xFE	; 254
    2ab2:	80 81       	ld	r24, Z
    2ab4:	81 ff       	sbrs	r24, 1
    2ab6:	04 c0       	rjmp	.+8      	; 0x2ac0 <ESP8266_Init+0x1b6>
    2ab8:	09 c0       	rjmp	.+18     	; 0x2acc <ESP8266_Init+0x1c2>
    2aba:	e2 14       	cp	r14, r2
    2abc:	f3 04       	cpc	r15, r3
    2abe:	b9 f6       	brne	.-82     	; 0x2a6e <ESP8266_Init+0x164>
    2ac0:	f8 01       	movw	r30, r16
    2ac2:	e3 5d       	subi	r30, 0xD3	; 211
    2ac4:	fe 4f       	sbci	r31, 0xFE	; 254
    2ac6:	82 e0       	ldi	r24, 0x02	; 2
    2ac8:	80 83       	st	Z, r24
    2aca:	d2 c0       	rjmp	.+420    	; 0x2c70 <ESP8266_Init+0x366>
    2acc:	80 e3       	ldi	r24, 0x30	; 48
    2ace:	95 e7       	ldi	r25, 0x75	; 117
    2ad0:	a0 e0       	ldi	r26, 0x00	; 0
    2ad2:	b0 e0       	ldi	r27, 0x00	; 0
    2ad4:	f8 01       	movw	r30, r16
    2ad6:	86 8b       	std	Z+22, r24	; 0x16
    2ad8:	97 8b       	std	Z+23, r25	; 0x17
    2ada:	a0 8f       	std	Z+24, r26	; 0x18
    2adc:	b1 8f       	std	Z+25, r27	; 0x19
    2ade:	2d ed       	ldi	r18, 0xDD	; 221
    2ae0:	32 e0       	ldi	r19, 0x02	; 2
    2ae2:	46 e5       	ldi	r20, 0x56	; 86
    2ae4:	55 e0       	ldi	r21, 0x05	; 5
    2ae6:	6e e0       	ldi	r22, 0x0E	; 14
    2ae8:	c8 01       	movw	r24, r16
    2aea:	8d dd       	rcall	.-1254   	; 0x2606 <SendCommand>
    2aec:	c8 01       	movw	r24, r16
    2aee:	3a de       	rcall	.-908    	; 0x2764 <ESP8266_WaitReady>
    2af0:	f8 01       	movw	r30, r16
    2af2:	e6 5d       	subi	r30, 0xD6	; 214
    2af4:	fe 4f       	sbci	r31, 0xFE	; 254
    2af6:	80 81       	ld	r24, Z
    2af8:	81 fd       	sbrc	r24, 1
    2afa:	04 c0       	rjmp	.+8      	; 0x2b04 <ESP8266_Init+0x1fa>
    2afc:	33 96       	adiw	r30, 0x03	; 3
    2afe:	82 e0       	ldi	r24, 0x02	; 2
    2b00:	80 83       	st	Z, r24
    2b02:	b6 c0       	rjmp	.+364    	; 0x2c70 <ESP8266_Init+0x366>
    2b04:	2b e5       	ldi	r18, 0x5B	; 91
    2b06:	35 e0       	ldi	r19, 0x05	; 5
    2b08:	40 e6       	ldi	r20, 0x60	; 96
    2b0a:	55 e0       	ldi	r21, 0x05	; 5
    2b0c:	6d e0       	ldi	r22, 0x0D	; 13
    2b0e:	c8 01       	movw	r24, r16
    2b10:	7a dd       	rcall	.-1292   	; 0x2606 <SendCommand>
    2b12:	c8 01       	movw	r24, r16
    2b14:	27 de       	rcall	.-946    	; 0x2764 <ESP8266_WaitReady>
    2b16:	0f 2e       	mov	r0, r31
    2b18:	f1 e3       	ldi	r31, 0x31	; 49
    2b1a:	bf 2e       	mov	r11, r31
    2b1c:	f0 2d       	mov	r31, r0
    2b1e:	68 01       	movw	r12, r16
    2b20:	f6 ed       	ldi	r31, 0xD6	; 214
    2b22:	cf 1a       	sub	r12, r31
    2b24:	fe ef       	ldi	r31, 0xFE	; 254
    2b26:	df 0a       	sbc	r13, r31
    2b28:	78 01       	movw	r14, r16
    2b2a:	83 ed       	ldi	r24, 0xD3	; 211
    2b2c:	e8 1a       	sub	r14, r24
    2b2e:	8e ef       	ldi	r24, 0xFE	; 254
    2b30:	f8 0a       	sbc	r15, r24
    2b32:	99 24       	eor	r9, r9
    2b34:	93 94       	inc	r9
    2b36:	0f 2e       	mov	r0, r31
    2b38:	f6 e0       	ldi	r31, 0x06	; 6
    2b3a:	af 2e       	mov	r10, r31
    2b3c:	f0 2d       	mov	r31, r0
    2b3e:	b9 86       	std	Y+9, r11	; 0x09
    2b40:	f8 01       	movw	r30, r16
    2b42:	84 81       	ldd	r24, Z+4	; 0x04
    2b44:	95 81       	ldd	r25, Z+5	; 0x05
    2b46:	a6 81       	ldd	r26, Z+6	; 0x06
    2b48:	b7 81       	ldd	r27, Z+7	; 0x07
    2b4a:	89 2b       	or	r24, r25
    2b4c:	8a 2b       	or	r24, r26
    2b4e:	8b 2b       	or	r24, r27
    2b50:	29 f0       	breq	.+10     	; 0x2b5c <ESP8266_Init+0x252>
    2b52:	c8 01       	movw	r24, r16
    2b54:	fc d9       	rcall	.-3080   	; 0x1f4e <ESP8266_Update>
    2b56:	f7 01       	movw	r30, r14
    2b58:	a0 82       	st	Z, r10
    2b5a:	f1 cf       	rjmp	.-30     	; 0x2b3e <ESP8266_Init+0x234>
    2b5c:	6a e0       	ldi	r22, 0x0A	; 10
    2b5e:	70 e0       	ldi	r23, 0x00	; 0
    2b60:	87 e6       	ldi	r24, 0x67	; 103
    2b62:	95 e0       	ldi	r25, 0x05	; 5
    2b64:	f7 d2       	rcall	.+1518   	; 0x3154 <ESP8266_LL_USARTSend>
    2b66:	61 e0       	ldi	r22, 0x01	; 1
    2b68:	70 e0       	ldi	r23, 0x00	; 0
    2b6a:	ce 01       	movw	r24, r28
    2b6c:	09 96       	adiw	r24, 0x09	; 9
    2b6e:	f2 d2       	rcall	.+1508   	; 0x3154 <ESP8266_LL_USARTSend>
    2b70:	62 e0       	ldi	r22, 0x02	; 2
    2b72:	70 e0       	ldi	r23, 0x00	; 0
    2b74:	8e e3       	ldi	r24, 0x3E	; 62
    2b76:	99 e0       	ldi	r25, 0x09	; 9
    2b78:	ed d2       	rcall	.+1498   	; 0x3154 <ESP8266_LL_USARTSend>
    2b7a:	20 e0       	ldi	r18, 0x00	; 0
    2b7c:	30 e0       	ldi	r19, 0x00	; 0
    2b7e:	40 e0       	ldi	r20, 0x00	; 0
    2b80:	50 e0       	ldi	r21, 0x00	; 0
    2b82:	6b e0       	ldi	r22, 0x0B	; 11
    2b84:	c8 01       	movw	r24, r16
    2b86:	3f dd       	rcall	.-1410   	; 0x2606 <SendCommand>
    2b88:	88 23       	and	r24, r24
    2b8a:	29 f0       	breq	.+10     	; 0x2b96 <ESP8266_Init+0x28c>
    2b8c:	f7 01       	movw	r30, r14
    2b8e:	80 81       	ld	r24, Z
    2b90:	81 11       	cpse	r24, r1
    2b92:	d5 cf       	rjmp	.-86     	; 0x2b3e <ESP8266_Init+0x234>
    2b94:	0d c0       	rjmp	.+26     	; 0x2bb0 <ESP8266_Init+0x2a6>
    2b96:	c8 01       	movw	r24, r16
    2b98:	e5 dd       	rcall	.-1078   	; 0x2764 <ESP8266_WaitReady>
    2b9a:	f6 01       	movw	r30, r12
    2b9c:	80 81       	ld	r24, Z
    2b9e:	81 fd       	sbrc	r24, 1
    2ba0:	03 c0       	rjmp	.+6      	; 0x2ba8 <ESP8266_Init+0x29e>
    2ba2:	f7 01       	movw	r30, r14
    2ba4:	90 82       	st	Z, r9
    2ba6:	cb cf       	rjmp	.-106    	; 0x2b3e <ESP8266_Init+0x234>
    2ba8:	f8 01       	movw	r30, r16
    2baa:	e3 5d       	subi	r30, 0xD3	; 211
    2bac:	fe 4f       	sbci	r31, 0xFE	; 254
    2bae:	10 82       	st	Z, r1
    2bb0:	0f 2e       	mov	r0, r31
    2bb2:	f1 e3       	ldi	r31, 0x31	; 49
    2bb4:	bf 2e       	mov	r11, r31
    2bb6:	f0 2d       	mov	r31, r0
    2bb8:	68 01       	movw	r12, r16
    2bba:	f6 ed       	ldi	r31, 0xD6	; 214
    2bbc:	cf 1a       	sub	r12, r31
    2bbe:	fe ef       	ldi	r31, 0xFE	; 254
    2bc0:	df 0a       	sbc	r13, r31
    2bc2:	78 01       	movw	r14, r16
    2bc4:	83 ed       	ldi	r24, 0xD3	; 211
    2bc6:	e8 1a       	sub	r14, r24
    2bc8:	8e ef       	ldi	r24, 0xFE	; 254
    2bca:	f8 0a       	sbc	r15, r24
    2bcc:	99 24       	eor	r9, r9
    2bce:	93 94       	inc	r9
    2bd0:	0f 2e       	mov	r0, r31
    2bd2:	f6 e0       	ldi	r31, 0x06	; 6
    2bd4:	af 2e       	mov	r10, r31
    2bd6:	f0 2d       	mov	r31, r0
    2bd8:	b9 86       	std	Y+9, r11	; 0x09
    2bda:	f8 01       	movw	r30, r16
    2bdc:	84 81       	ldd	r24, Z+4	; 0x04
    2bde:	95 81       	ldd	r25, Z+5	; 0x05
    2be0:	a6 81       	ldd	r26, Z+6	; 0x06
    2be2:	b7 81       	ldd	r27, Z+7	; 0x07
    2be4:	89 2b       	or	r24, r25
    2be6:	8a 2b       	or	r24, r26
    2be8:	8b 2b       	or	r24, r27
    2bea:	29 f0       	breq	.+10     	; 0x2bf6 <ESP8266_Init+0x2ec>
    2bec:	c8 01       	movw	r24, r16
    2bee:	af d9       	rcall	.-3234   	; 0x1f4e <ESP8266_Update>
    2bf0:	f7 01       	movw	r30, r14
    2bf2:	a0 82       	st	Z, r10
    2bf4:	f1 cf       	rjmp	.-30     	; 0x2bd8 <ESP8266_Init+0x2ce>
    2bf6:	6c e0       	ldi	r22, 0x0C	; 12
    2bf8:	70 e0       	ldi	r23, 0x00	; 0
    2bfa:	82 e7       	ldi	r24, 0x72	; 114
    2bfc:	95 e0       	ldi	r25, 0x05	; 5
    2bfe:	aa d2       	rcall	.+1364   	; 0x3154 <ESP8266_LL_USARTSend>
    2c00:	61 e0       	ldi	r22, 0x01	; 1
    2c02:	70 e0       	ldi	r23, 0x00	; 0
    2c04:	ce 01       	movw	r24, r28
    2c06:	09 96       	adiw	r24, 0x09	; 9
    2c08:	a5 d2       	rcall	.+1354   	; 0x3154 <ESP8266_LL_USARTSend>
    2c0a:	62 e0       	ldi	r22, 0x02	; 2
    2c0c:	70 e0       	ldi	r23, 0x00	; 0
    2c0e:	8e e3       	ldi	r24, 0x3E	; 62
    2c10:	99 e0       	ldi	r25, 0x09	; 9
    2c12:	a0 d2       	rcall	.+1344   	; 0x3154 <ESP8266_LL_USARTSend>
    2c14:	20 e0       	ldi	r18, 0x00	; 0
    2c16:	30 e0       	ldi	r19, 0x00	; 0
    2c18:	40 e0       	ldi	r20, 0x00	; 0
    2c1a:	50 e0       	ldi	r21, 0x00	; 0
    2c1c:	67 e0       	ldi	r22, 0x07	; 7
    2c1e:	c8 01       	movw	r24, r16
    2c20:	f2 dc       	rcall	.-1564   	; 0x2606 <SendCommand>
    2c22:	88 23       	and	r24, r24
    2c24:	29 f0       	breq	.+10     	; 0x2c30 <ESP8266_Init+0x326>
    2c26:	f7 01       	movw	r30, r14
    2c28:	80 81       	ld	r24, Z
    2c2a:	81 11       	cpse	r24, r1
    2c2c:	d5 cf       	rjmp	.-86     	; 0x2bd8 <ESP8266_Init+0x2ce>
    2c2e:	0d c0       	rjmp	.+26     	; 0x2c4a <ESP8266_Init+0x340>
    2c30:	c8 01       	movw	r24, r16
    2c32:	98 dd       	rcall	.-1232   	; 0x2764 <ESP8266_WaitReady>
    2c34:	f6 01       	movw	r30, r12
    2c36:	80 81       	ld	r24, Z
    2c38:	81 fd       	sbrc	r24, 1
    2c3a:	03 c0       	rjmp	.+6      	; 0x2c42 <ESP8266_Init+0x338>
    2c3c:	f7 01       	movw	r30, r14
    2c3e:	90 82       	st	Z, r9
    2c40:	cb cf       	rjmp	.-106    	; 0x2bd8 <ESP8266_Init+0x2ce>
    2c42:	f8 01       	movw	r30, r16
    2c44:	e3 5d       	subi	r30, 0xD3	; 211
    2c46:	fe 4f       	sbci	r31, 0xFE	; 254
    2c48:	10 82       	st	Z, r1
    2c4a:	63 e0       	ldi	r22, 0x03	; 3
    2c4c:	c8 01       	movw	r24, r16
    2c4e:	07 de       	rcall	.-1010   	; 0x285e <ESP8266_SetMode>
    2c50:	81 11       	cpse	r24, r1
    2c52:	fb cf       	rjmp	.-10     	; 0x2c4a <ESP8266_Init+0x340>
    2c54:	c8 01       	movw	r24, r16
    2c56:	58 dd       	rcall	.-1360   	; 0x2708 <ESP8266_GetSTAMAC>
    2c58:	81 11       	cpse	r24, r1
    2c5a:	fc cf       	rjmp	.-8      	; 0x2c54 <ESP8266_Init+0x34a>
    2c5c:	c8 01       	movw	r24, r16
    2c5e:	6b dd       	rcall	.-1322   	; 0x2736 <ESP8266_GetAPMAC>
    2c60:	81 11       	cpse	r24, r1
    2c62:	fc cf       	rjmp	.-8      	; 0x2c5c <ESP8266_Init+0x352>
    2c64:	c8 01       	movw	r24, r16
    2c66:	38 dd       	rcall	.-1424   	; 0x26d8 <ESP8266_GetAPIP>
    2c68:	81 11       	cpse	r24, r1
    2c6a:	fc cf       	rjmp	.-8      	; 0x2c64 <ESP8266_Init+0x35a>
    2c6c:	c8 01       	movw	r24, r16
    2c6e:	7a dd       	rcall	.-1292   	; 0x2764 <ESP8266_WaitReady>
    2c70:	29 96       	adiw	r28, 0x09	; 9
    2c72:	0f b6       	in	r0, 0x3f	; 63
    2c74:	f8 94       	cli
    2c76:	de bf       	out	0x3e, r29	; 62
    2c78:	0f be       	out	0x3f, r0	; 63
    2c7a:	cd bf       	out	0x3d, r28	; 61
    2c7c:	df 91       	pop	r29
    2c7e:	cf 91       	pop	r28
    2c80:	1f 91       	pop	r17
    2c82:	0f 91       	pop	r16
    2c84:	ff 90       	pop	r15
    2c86:	ef 90       	pop	r14
    2c88:	df 90       	pop	r13
    2c8a:	cf 90       	pop	r12
    2c8c:	bf 90       	pop	r11
    2c8e:	af 90       	pop	r10
    2c90:	9f 90       	pop	r9
    2c92:	8f 90       	pop	r8
    2c94:	7f 90       	pop	r7
    2c96:	6f 90       	pop	r6
    2c98:	5f 90       	pop	r5
    2c9a:	4f 90       	pop	r4
    2c9c:	3f 90       	pop	r3
    2c9e:	2f 90       	pop	r2
    2ca0:	08 95       	ret

00002ca2 <ESP8266_RequestSendData>:
    2ca2:	ef 92       	push	r14
    2ca4:	ff 92       	push	r15
    2ca6:	0f 93       	push	r16
    2ca8:	1f 93       	push	r17
    2caa:	cf 93       	push	r28
    2cac:	df 93       	push	r29
    2cae:	1f 92       	push	r1
    2cb0:	cd b7       	in	r28, 0x3d	; 61
    2cb2:	de b7       	in	r29, 0x3e	; 62
    2cb4:	8c 01       	movw	r16, r24
    2cb6:	7b 01       	movw	r14, r22
    2cb8:	fc 01       	movw	r30, r24
    2cba:	84 81       	ldd	r24, Z+4	; 0x04
    2cbc:	95 81       	ldd	r25, Z+5	; 0x05
    2cbe:	a6 81       	ldd	r26, Z+6	; 0x06
    2cc0:	b7 81       	ldd	r27, Z+7	; 0x07
    2cc2:	89 2b       	or	r24, r25
    2cc4:	8a 2b       	or	r24, r26
    2cc6:	8b 2b       	or	r24, r27
    2cc8:	41 f0       	breq	.+16     	; 0x2cda <ESP8266_RequestSendData+0x38>
    2cca:	c8 01       	movw	r24, r16
    2ccc:	40 d9       	rcall	.-3456   	; 0x1f4e <ESP8266_Update>
    2cce:	f8 01       	movw	r30, r16
    2cd0:	e3 5d       	subi	r30, 0xD3	; 211
    2cd2:	fe 4f       	sbci	r31, 0xFE	; 254
    2cd4:	86 e0       	ldi	r24, 0x06	; 6
    2cd6:	80 83       	st	Z, r24
    2cd8:	28 c0       	rjmp	.+80     	; 0x2d2a <ESP8266_RequestSendData+0x88>
    2cda:	fb 01       	movw	r30, r22
    2cdc:	80 81       	ld	r24, Z
    2cde:	80 5d       	subi	r24, 0xD0	; 208
    2ce0:	89 83       	std	Y+1, r24	; 0x01
    2ce2:	6d e0       	ldi	r22, 0x0D	; 13
    2ce4:	70 e0       	ldi	r23, 0x00	; 0
    2ce6:	8f e7       	ldi	r24, 0x7F	; 127
    2ce8:	95 e0       	ldi	r25, 0x05	; 5
    2cea:	34 d2       	rcall	.+1128   	; 0x3154 <ESP8266_LL_USARTSend>
    2cec:	61 e0       	ldi	r22, 0x01	; 1
    2cee:	70 e0       	ldi	r23, 0x00	; 0
    2cf0:	ce 01       	movw	r24, r28
    2cf2:	01 96       	adiw	r24, 0x01	; 1
    2cf4:	2f d2       	rcall	.+1118   	; 0x3154 <ESP8266_LL_USARTSend>
    2cf6:	67 e0       	ldi	r22, 0x07	; 7
    2cf8:	70 e0       	ldi	r23, 0x00	; 0
    2cfa:	8d e8       	ldi	r24, 0x8D	; 141
    2cfc:	95 e0       	ldi	r25, 0x05	; 5
    2cfe:	2a d2       	rcall	.+1108   	; 0x3154 <ESP8266_LL_USARTSend>
    2d00:	20 e0       	ldi	r18, 0x00	; 0
    2d02:	30 e0       	ldi	r19, 0x00	; 0
    2d04:	40 e0       	ldi	r20, 0x00	; 0
    2d06:	50 e0       	ldi	r21, 0x00	; 0
    2d08:	68 e0       	ldi	r22, 0x08	; 8
    2d0a:	c8 01       	movw	r24, r16
    2d0c:	7c dc       	rcall	.-1800   	; 0x2606 <SendCommand>
    2d0e:	88 23       	and	r24, r24
    2d10:	29 f0       	breq	.+10     	; 0x2d1c <ESP8266_RequestSendData+0x7a>
    2d12:	f8 01       	movw	r30, r16
    2d14:	e3 5d       	subi	r30, 0xD3	; 211
    2d16:	fe 4f       	sbci	r31, 0xFE	; 254
    2d18:	80 81       	ld	r24, Z
    2d1a:	07 c0       	rjmp	.+14     	; 0x2d2a <ESP8266_RequestSendData+0x88>
    2d1c:	f8 01       	movw	r30, r16
    2d1e:	e9 5d       	subi	r30, 0xD9	; 217
    2d20:	fe 4f       	sbci	r31, 0xFE	; 254
    2d22:	f1 82       	std	Z+1, r15	; 0x01
    2d24:	e0 82       	st	Z, r14
    2d26:	36 96       	adiw	r30, 0x06	; 6
    2d28:	80 81       	ld	r24, Z
    2d2a:	0f 90       	pop	r0
    2d2c:	df 91       	pop	r29
    2d2e:	cf 91       	pop	r28
    2d30:	1f 91       	pop	r17
    2d32:	0f 91       	pop	r16
    2d34:	ff 90       	pop	r15
    2d36:	ef 90       	pop	r14
    2d38:	08 95       	ret

00002d3a <ESP8266_ServerEnable>:
    2d3a:	ef 92       	push	r14
    2d3c:	ff 92       	push	r15
    2d3e:	0f 93       	push	r16
    2d40:	1f 93       	push	r17
    2d42:	cf 93       	push	r28
    2d44:	df 93       	push	r29
    2d46:	cd b7       	in	r28, 0x3d	; 61
    2d48:	de b7       	in	r29, 0x3e	; 62
    2d4a:	27 97       	sbiw	r28, 0x07	; 7
    2d4c:	0f b6       	in	r0, 0x3f	; 63
    2d4e:	f8 94       	cli
    2d50:	de bf       	out	0x3e, r29	; 62
    2d52:	0f be       	out	0x3f, r0	; 63
    2d54:	cd bf       	out	0x3d, r28	; 61
    2d56:	8c 01       	movw	r16, r24
    2d58:	fc 01       	movw	r30, r24
    2d5a:	84 81       	ldd	r24, Z+4	; 0x04
    2d5c:	95 81       	ldd	r25, Z+5	; 0x05
    2d5e:	a6 81       	ldd	r26, Z+6	; 0x06
    2d60:	b7 81       	ldd	r27, Z+7	; 0x07
    2d62:	89 2b       	or	r24, r25
    2d64:	8a 2b       	or	r24, r26
    2d66:	8b 2b       	or	r24, r27
    2d68:	61 f0       	breq	.+24     	; 0x2d82 <ESP8266_ServerEnable+0x48>
    2d6a:	c8 01       	movw	r24, r16
    2d6c:	f0 d8       	rcall	.-3616   	; 0x1f4e <ESP8266_Update>
    2d6e:	f8 01       	movw	r30, r16
    2d70:	e3 5d       	subi	r30, 0xD3	; 211
    2d72:	fe 4f       	sbci	r31, 0xFE	; 254
    2d74:	86 e0       	ldi	r24, 0x06	; 6
    2d76:	80 83       	st	Z, r24
    2d78:	0f 2e       	mov	r0, r31
    2d7a:	f6 e0       	ldi	r31, 0x06	; 6
    2d7c:	ff 2e       	mov	r15, r31
    2d7e:	f0 2d       	mov	r31, r0
    2d80:	3d c0       	rjmp	.+122    	; 0x2dfc <ESP8266_ServerEnable+0xc2>
    2d82:	ab 01       	movw	r20, r22
    2d84:	60 e0       	ldi	r22, 0x00	; 0
    2d86:	70 e0       	ldi	r23, 0x00	; 0
    2d88:	ce 01       	movw	r24, r28
    2d8a:	01 96       	adiw	r24, 0x01	; 1
    2d8c:	7c 01       	movw	r14, r24
    2d8e:	0e 94 12 08 	call	0x1024	; 0x1024 <Int2String>
    2d92:	6f e0       	ldi	r22, 0x0F	; 15
    2d94:	70 e0       	ldi	r23, 0x00	; 0
    2d96:	82 ea       	ldi	r24, 0xA2	; 162
    2d98:	95 e0       	ldi	r25, 0x05	; 5
    2d9a:	dc d1       	rcall	.+952    	; 0x3154 <ESP8266_LL_USARTSend>
    2d9c:	f7 01       	movw	r30, r14
    2d9e:	01 90       	ld	r0, Z+
    2da0:	00 20       	and	r0, r0
    2da2:	e9 f7       	brne	.-6      	; 0x2d9e <ESP8266_ServerEnable+0x64>
    2da4:	31 97       	sbiw	r30, 0x01	; 1
    2da6:	bf 01       	movw	r22, r30
    2da8:	6e 19       	sub	r22, r14
    2daa:	7f 09       	sbc	r23, r15
    2dac:	c7 01       	movw	r24, r14
    2dae:	d2 d1       	rcall	.+932    	; 0x3154 <ESP8266_LL_USARTSend>
    2db0:	62 e0       	ldi	r22, 0x02	; 2
    2db2:	70 e0       	ldi	r23, 0x00	; 0
    2db4:	8e e3       	ldi	r24, 0x3E	; 62
    2db6:	99 e0       	ldi	r25, 0x09	; 9
    2db8:	cd d1       	rcall	.+922    	; 0x3154 <ESP8266_LL_USARTSend>
    2dba:	20 e0       	ldi	r18, 0x00	; 0
    2dbc:	30 e0       	ldi	r19, 0x00	; 0
    2dbe:	40 e0       	ldi	r20, 0x00	; 0
    2dc0:	50 e0       	ldi	r21, 0x00	; 0
    2dc2:	66 e0       	ldi	r22, 0x06	; 6
    2dc4:	c8 01       	movw	r24, r16
    2dc6:	1f dc       	rcall	.-1986   	; 0x2606 <SendCommand>
    2dc8:	f8 2e       	mov	r15, r24
    2dca:	88 23       	and	r24, r24
    2dcc:	29 f0       	breq	.+10     	; 0x2dd8 <ESP8266_ServerEnable+0x9e>
    2dce:	f8 01       	movw	r30, r16
    2dd0:	e3 5d       	subi	r30, 0xD3	; 211
    2dd2:	fe 4f       	sbci	r31, 0xFE	; 254
    2dd4:	f0 80       	ld	r15, Z
    2dd6:	12 c0       	rjmp	.+36     	; 0x2dfc <ESP8266_ServerEnable+0xc2>
    2dd8:	c8 01       	movw	r24, r16
    2dda:	c4 dc       	rcall	.-1656   	; 0x2764 <ESP8266_WaitReady>
    2ddc:	f8 01       	movw	r30, r16
    2dde:	e6 5d       	subi	r30, 0xD6	; 214
    2de0:	fe 4f       	sbci	r31, 0xFE	; 254
    2de2:	80 81       	ld	r24, Z
    2de4:	81 fd       	sbrc	r24, 1
    2de6:	06 c0       	rjmp	.+12     	; 0x2df4 <ESP8266_ServerEnable+0xba>
    2de8:	33 96       	adiw	r30, 0x03	; 3
    2dea:	81 e0       	ldi	r24, 0x01	; 1
    2dec:	80 83       	st	Z, r24
    2dee:	ff 24       	eor	r15, r15
    2df0:	f3 94       	inc	r15
    2df2:	04 c0       	rjmp	.+8      	; 0x2dfc <ESP8266_ServerEnable+0xc2>
    2df4:	f8 01       	movw	r30, r16
    2df6:	e3 5d       	subi	r30, 0xD3	; 211
    2df8:	fe 4f       	sbci	r31, 0xFE	; 254
    2dfa:	10 82       	st	Z, r1
    2dfc:	8f 2d       	mov	r24, r15
    2dfe:	27 96       	adiw	r28, 0x07	; 7
    2e00:	0f b6       	in	r0, 0x3f	; 63
    2e02:	f8 94       	cli
    2e04:	de bf       	out	0x3e, r29	; 62
    2e06:	0f be       	out	0x3f, r0	; 63
    2e08:	cd bf       	out	0x3d, r28	; 61
    2e0a:	df 91       	pop	r29
    2e0c:	cf 91       	pop	r28
    2e0e:	1f 91       	pop	r17
    2e10:	0f 91       	pop	r16
    2e12:	ff 90       	pop	r15
    2e14:	ef 90       	pop	r14
    2e16:	08 95       	ret

00002e18 <StartClientConnection>:
    const char* name,
    const char* location,
    uint16_t port,
    uint16_t udp_local_port,
    void* user_parameters
) {
    2e18:	2f 92       	push	r2
    2e1a:	3f 92       	push	r3
    2e1c:	4f 92       	push	r4
    2e1e:	5f 92       	push	r5
    2e20:	6f 92       	push	r6
    2e22:	7f 92       	push	r7
    2e24:	8f 92       	push	r8
    2e26:	9f 92       	push	r9
    2e28:	af 92       	push	r10
    2e2a:	bf 92       	push	r11
    2e2c:	cf 92       	push	r12
    2e2e:	df 92       	push	r13
    2e30:	ef 92       	push	r14
    2e32:	ff 92       	push	r15
    2e34:	0f 93       	push	r16
    2e36:	1f 93       	push	r17
    2e38:	cf 93       	push	r28
    2e3a:	df 93       	push	r29
    2e3c:	cd b7       	in	r28, 0x3d	; 61
    2e3e:	de b7       	in	r29, 0x3e	; 62
    2e40:	28 97       	sbiw	r28, 0x08	; 8
    2e42:	0f b6       	in	r0, 0x3f	; 63
    2e44:	f8 94       	cli
    2e46:	de bf       	out	0x3e, r29	; 62
    2e48:	0f be       	out	0x3f, r0	; 63
    2e4a:	cd bf       	out	0x3d, r28	; 61
    2e4c:	4c 01       	movw	r8, r24
    2e4e:	56 2e       	mov	r5, r22
    2e50:	1a 01       	movw	r2, r20
    2e52:	39 01       	movw	r6, r18
    int8_t conn = -1;
    2e54:	8f ef       	ldi	r24, 0xFF	; 255
    2e56:	89 83       	std	Y+1, r24	; 0x01
    uint8_t i = 0;
    
    ESP8266_CHECK_IDLE(ESP8266);                    		/* Check IDLE state */
    2e58:	f4 01       	movw	r30, r8
    2e5a:	84 81       	ldd	r24, Z+4	; 0x04
    2e5c:	95 81       	ldd	r25, Z+5	; 0x05
    2e5e:	a6 81       	ldd	r26, Z+6	; 0x06
    2e60:	b7 81       	ldd	r27, Z+7	; 0x07
    2e62:	89 2b       	or	r24, r25
    2e64:	8a 2b       	or	r24, r26
    2e66:	8b 2b       	or	r24, r27
    2e68:	41 f0       	breq	.+16     	; 0x2e7a <StartClientConnection+0x62>
    2e6a:	c4 01       	movw	r24, r8
    2e6c:	70 d8       	rcall	.-3872   	; 0x1f4e <ESP8266_Update>
    2e6e:	f4 01       	movw	r30, r8
    2e70:	e3 5d       	subi	r30, 0xD3	; 211
    2e72:	fe 4f       	sbci	r31, 0xFE	; 254
    2e74:	86 e0       	ldi	r24, 0x06	; 6
    2e76:	80 83       	st	Z, r24
    2e78:	e5 c0       	rjmp	.+458    	; 0x3044 <StartClientConnection+0x22c>
    ESP8266_CHECK_WIFICONNECTED(ESP8266);            		/* Check if connected to network */
    2e7a:	f4 01       	movw	r30, r8
    2e7c:	e6 5d       	subi	r30, 0xD6	; 214
    2e7e:	fe 4f       	sbci	r31, 0xFE	; 254
    2e80:	80 81       	ld	r24, Z
    2e82:	82 fd       	sbrc	r24, 2
    2e84:	04 c0       	rjmp	.+8      	; 0x2e8e <StartClientConnection+0x76>
    2e86:	33 96       	adiw	r30, 0x03	; 3
    2e88:	85 e0       	ldi	r24, 0x05	; 5
    2e8a:	80 83       	st	Z, r24
    2e8c:	db c0       	rjmp	.+438    	; 0x3044 <StartClientConnection+0x22c>
    
    if (type == ESP8266_ConnectionType_SSL) {        		/* Only 1 SSL connection can be active at a time */
    2e8e:	f2 e0       	ldi	r31, 0x02	; 2
    2e90:	6f 13       	cpse	r22, r31
    2e92:	d1 c0       	rjmp	.+418    	; 0x3036 <StartClientConnection+0x21e>
    2e94:	d4 01       	movw	r26, r8
    2e96:	91 96       	adiw	r26, 0x21	; 33
    2e98:	80 e0       	ldi	r24, 0x00	; 0
    2e9a:	90 e0       	ldi	r25, 0x00	; 0
        for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {    	/* Check if any SSL connection exists and is active */
            if (ESP8266->Connection[i].Flags.F.Active && ESP8266->Connection[i].Type == ESP8266_ConnectionType_SSL) {
    2e9c:	3d e1       	ldi	r19, 0x1D	; 29
    2e9e:	38 9f       	mul	r19, r24
    2ea0:	f0 01       	movw	r30, r0
    2ea2:	39 9f       	mul	r19, r25
    2ea4:	f0 0d       	add	r31, r0
    2ea6:	11 24       	eor	r1, r1
    2ea8:	e8 0d       	add	r30, r8
    2eaa:	f9 1d       	adc	r31, r9
    2eac:	26 a9       	ldd	r18, Z+54	; 0x36
    2eae:	20 ff       	sbrs	r18, 0
    2eb0:	09 c0       	rjmp	.+18     	; 0x2ec4 <StartClientConnection+0xac>
    2eb2:	2c 91       	ld	r18, X
    2eb4:	22 30       	cpi	r18, 0x02	; 2
    2eb6:	31 f4       	brne	.+12     	; 0x2ec4 <StartClientConnection+0xac>
                ESP8266_RETURNWITHSTATUS(ESP8266, ESP_ERROR);	/* Return error, SSL connection already exists */
    2eb8:	f4 01       	movw	r30, r8
    2eba:	e3 5d       	subi	r30, 0xD3	; 211
    2ebc:	fe 4f       	sbci	r31, 0xFE	; 254
    2ebe:	81 e0       	ldi	r24, 0x01	; 1
    2ec0:	80 83       	st	Z, r24
    2ec2:	c0 c0       	rjmp	.+384    	; 0x3044 <StartClientConnection+0x22c>
    2ec4:	01 96       	adiw	r24, 0x01	; 1
    2ec6:	5d 96       	adiw	r26, 0x1d	; 29
    
    ESP8266_CHECK_IDLE(ESP8266);                    		/* Check IDLE state */
    ESP8266_CHECK_WIFICONNECTED(ESP8266);            		/* Check if connected to network */
    
    if (type == ESP8266_ConnectionType_SSL) {        		/* Only 1 SSL connection can be active at a time */
        for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {    	/* Check if any SSL connection exists and is active */
    2ec8:	85 30       	cpi	r24, 0x05	; 5
    2eca:	91 05       	cpc	r25, r1
    2ecc:	41 f7       	brne	.-48     	; 0x2e9e <StartClientConnection+0x86>
    2ece:	b3 c0       	rjmp	.+358    	; 0x3036 <StartClientConnection+0x21e>
            }
        }
    }
    
    for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {    		/* Find available connection */
        if (!ESP8266->Connection[i].Flags.F.Active) {
    2ed0:	81 e0       	ldi	r24, 0x01	; 1
    2ed2:	90 e0       	ldi	r25, 0x00	; 0
    2ed4:	3d e1       	ldi	r19, 0x1D	; 29
    2ed6:	48 2e       	mov	r4, r24
    2ed8:	38 9f       	mul	r19, r24
    2eda:	f0 01       	movw	r30, r0
    2edc:	39 9f       	mul	r19, r25
    2ede:	f0 0d       	add	r31, r0
    2ee0:	11 24       	eor	r1, r1
    2ee2:	e8 0d       	add	r30, r8
    2ee4:	f9 1d       	adc	r31, r9
    2ee6:	26 a9       	ldd	r18, Z+54	; 0x36
    2ee8:	20 fd       	sbrc	r18, 0
    2eea:	05 c0       	rjmp	.+10     	; 0x2ef6 <StartClientConnection+0xde>
            conn = i;                                		/* Save connection and start execution*/
    2eec:	88 87       	std	Y+8, r24	; 0x08
            break;
        }
    }
    if (conn != -1) {                                		/* Try to assign */
    2eee:	8f ef       	ldi	r24, 0xFF	; 255
    2ef0:	48 12       	cpse	r4, r24
    2ef2:	06 c0       	rjmp	.+12     	; 0x2f00 <StartClientConnection+0xe8>
    2ef4:	9a c0       	rjmp	.+308    	; 0x302a <StartClientConnection+0x212>
    2ef6:	01 96       	adiw	r24, 0x01	; 1
                ESP8266_RETURNWITHSTATUS(ESP8266, ESP_ERROR);	/* Return error, SSL connection already exists */
            }
        }
    }
    
    for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {    		/* Find available connection */
    2ef8:	85 30       	cpi	r24, 0x05	; 5
    2efa:	91 05       	cpc	r25, r1
    2efc:	61 f7       	brne	.-40     	; 0x2ed6 <StartClientConnection+0xbe>
    2efe:	95 c0       	rjmp	.+298    	; 0x302a <StartClientConnection+0x212>
        }
    }
    if (conn != -1) {                                		/* Try to assign */
        char tmp[6];

        conn += '0';                                		/* Go to ASCII number */
    2f00:	88 85       	ldd	r24, Y+8	; 0x08
    2f02:	80 5d       	subi	r24, 0xD0	; 208
    2f04:	89 83       	std	Y+1, r24	; 0x01
        ESP8266_USARTSENDSTRING("AT+CIPSTART=");    		/* Send separate */
    2f06:	6c e0       	ldi	r22, 0x0C	; 12
    2f08:	70 e0       	ldi	r23, 0x00	; 0
    2f0a:	84 e3       	ldi	r24, 0x34	; 52
    2f0c:	96 e0       	ldi	r25, 0x06	; 6
    2f0e:	22 d1       	rcall	.+580    	; 0x3154 <ESP8266_LL_USARTSend>
        ESP8266_USARTSENDCHAR(&conn);
    2f10:	61 e0       	ldi	r22, 0x01	; 1
    2f12:	70 e0       	ldi	r23, 0x00	; 0
    2f14:	ce 01       	movw	r24, r28
    2f16:	01 96       	adiw	r24, 0x01	; 1
    2f18:	1d d1       	rcall	.+570    	; 0x3154 <ESP8266_LL_USARTSend>
        ESP8266_USARTSENDSTRING(",\"");
    2f1a:	62 e0       	ldi	r22, 0x02	; 2
    2f1c:	70 e0       	ldi	r23, 0x00	; 0
    2f1e:	8d ec       	ldi	r24, 0xCD	; 205
    2f20:	94 e0       	ldi	r25, 0x04	; 4
    2f22:	18 d1       	rcall	.+560    	; 0x3154 <ESP8266_LL_USARTSend>
        ESP8266_USARTSENDSTRING(conn_type);
    2f24:	f1 01       	movw	r30, r2
    2f26:	01 90       	ld	r0, Z+
    2f28:	00 20       	and	r0, r0
    2f2a:	e9 f7       	brne	.-6      	; 0x2f26 <StartClientConnection+0x10e>
    2f2c:	31 97       	sbiw	r30, 0x01	; 1
    2f2e:	bf 01       	movw	r22, r30
    2f30:	62 19       	sub	r22, r2
    2f32:	73 09       	sbc	r23, r3
    2f34:	c1 01       	movw	r24, r2
    2f36:	0e d1       	rcall	.+540    	; 0x3154 <ESP8266_LL_USARTSend>
        ESP8266_USARTSENDSTRING("\",\"");
    2f38:	63 e0       	ldi	r22, 0x03	; 3
    2f3a:	70 e0       	ldi	r23, 0x00	; 0
    2f3c:	8c ec       	ldi	r24, 0xCC	; 204
    2f3e:	94 e0       	ldi	r25, 0x04	; 4
    2f40:	09 d1       	rcall	.+530    	; 0x3154 <ESP8266_LL_USARTSend>
        ESP8266_USARTSENDSTRING(location);
    2f42:	f8 01       	movw	r30, r16
    2f44:	01 90       	ld	r0, Z+
    2f46:	00 20       	and	r0, r0
    2f48:	e9 f7       	brne	.-6      	; 0x2f44 <StartClientConnection+0x12c>
    2f4a:	31 97       	sbiw	r30, 0x01	; 1
    2f4c:	bf 01       	movw	r22, r30
    2f4e:	60 1b       	sub	r22, r16
    2f50:	71 0b       	sbc	r23, r17
    2f52:	c8 01       	movw	r24, r16
    2f54:	ff d0       	rcall	.+510    	; 0x3154 <ESP8266_LL_USARTSend>
        ESP8266_USARTSENDSTRING("\",");
    2f56:	62 e0       	ldi	r22, 0x02	; 2
    2f58:	70 e0       	ldi	r23, 0x00	; 0
    2f5a:	83 e1       	ldi	r24, 0x13	; 19
    2f5c:	96 e0       	ldi	r25, 0x06	; 6
    2f5e:	fa d0       	rcall	.+500    	; 0x3154 <ESP8266_LL_USARTSend>
        Int2String(tmp, port);                        		/* Format port */
    2f60:	a7 01       	movw	r20, r14
    2f62:	60 e0       	ldi	r22, 0x00	; 0
    2f64:	70 e0       	ldi	r23, 0x00	; 0
    2f66:	8e 01       	movw	r16, r28
    2f68:	0e 5f       	subi	r16, 0xFE	; 254
    2f6a:	1f 4f       	sbci	r17, 0xFF	; 255
    2f6c:	c8 01       	movw	r24, r16
    2f6e:	0e 94 12 08 	call	0x1024	; 0x1024 <Int2String>
        ESP8266_USARTSENDSTRING(tmp);
    2f72:	f8 01       	movw	r30, r16
    2f74:	01 90       	ld	r0, Z+
    2f76:	00 20       	and	r0, r0
    2f78:	e9 f7       	brne	.-6      	; 0x2f74 <StartClientConnection+0x15c>
    2f7a:	31 97       	sbiw	r30, 0x01	; 1
    2f7c:	bf 01       	movw	r22, r30
    2f7e:	60 1b       	sub	r22, r16
    2f80:	71 0b       	sbc	r23, r17
    2f82:	c8 01       	movw	r24, r16
    2f84:	e7 d0       	rcall	.+462    	; 0x3154 <ESP8266_LL_USARTSend>
        if (type == ESP8266_ConnectionType_UDP && udp_local_port > 0) {
    2f86:	91 e0       	ldi	r25, 0x01	; 1
    2f88:	59 12       	cpse	r5, r25
    2f8a:	18 c0       	rjmp	.+48     	; 0x2fbc <StartClientConnection+0x1a4>
    2f8c:	c1 14       	cp	r12, r1
    2f8e:	d1 04       	cpc	r13, r1
    2f90:	a9 f0       	breq	.+42     	; 0x2fbc <StartClientConnection+0x1a4>
            Int2String(tmp, udp_local_port);       			/* Format local port for UDP */
    2f92:	a6 01       	movw	r20, r12
    2f94:	60 e0       	ldi	r22, 0x00	; 0
    2f96:	70 e0       	ldi	r23, 0x00	; 0
    2f98:	c8 01       	movw	r24, r16
    2f9a:	0e 94 12 08 	call	0x1024	; 0x1024 <Int2String>
            ESP8266_USARTSENDSTRING(",");
    2f9e:	61 e0       	ldi	r22, 0x01	; 1
    2fa0:	70 e0       	ldi	r23, 0x00	; 0
    2fa2:	84 e1       	ldi	r24, 0x14	; 20
    2fa4:	96 e0       	ldi	r25, 0x06	; 6
    2fa6:	d6 d0       	rcall	.+428    	; 0x3154 <ESP8266_LL_USARTSend>
            ESP8266_USARTSENDSTRING(tmp);
    2fa8:	f8 01       	movw	r30, r16
    2faa:	01 90       	ld	r0, Z+
    2fac:	00 20       	and	r0, r0
    2fae:	e9 f7       	brne	.-6      	; 0x2faa <StartClientConnection+0x192>
    2fb0:	31 97       	sbiw	r30, 0x01	; 1
    2fb2:	bf 01       	movw	r22, r30
    2fb4:	60 1b       	sub	r22, r16
    2fb6:	71 0b       	sbc	r23, r17
    2fb8:	c8 01       	movw	r24, r16
    2fba:	cc d0       	rcall	.+408    	; 0x3154 <ESP8266_LL_USARTSend>
        }
        ESP8266_USARTSENDSTRING(ESP8266_CRLF);
    2fbc:	62 e0       	ldi	r22, 0x02	; 2
    2fbe:	70 e0       	ldi	r23, 0x00	; 0
    2fc0:	8e e3       	ldi	r24, 0x3E	; 62
    2fc2:	99 e0       	ldi	r25, 0x09	; 9
    2fc4:	c7 d0       	rcall	.+398    	; 0x3154 <ESP8266_LL_USARTSend>
        
        if (SendCommand(ESP8266, ESP8266_COMMAND_CIPSTART, NULL, NULL) != ESP_OK) {	/* Send command */
    2fc6:	20 e0       	ldi	r18, 0x00	; 0
    2fc8:	30 e0       	ldi	r19, 0x00	; 0
    2fca:	40 e0       	ldi	r20, 0x00	; 0
    2fcc:	50 e0       	ldi	r21, 0x00	; 0
    2fce:	6a e0       	ldi	r22, 0x0A	; 10
    2fd0:	c4 01       	movw	r24, r8
    2fd2:	19 db       	rcall	.-2510   	; 0x2606 <SendCommand>
    2fd4:	88 23       	and	r24, r24
    2fd6:	29 f0       	breq	.+10     	; 0x2fe2 <StartClientConnection+0x1ca>
            return ESP8266->Result;
    2fd8:	f4 01       	movw	r30, r8
    2fda:	e3 5d       	subi	r30, 0xD3	; 211
    2fdc:	fe 4f       	sbci	r31, 0xFE	; 254
    2fde:	80 81       	ld	r24, Z
    2fe0:	31 c0       	rjmp	.+98     	; 0x3044 <StartClientConnection+0x22c>
        }
        
        conn -= '0';                                		/* Go back from ASCII number to real number */
    2fe2:	29 81       	ldd	r18, Y+1	; 0x01
    2fe4:	20 53       	subi	r18, 0x30	; 48
        ESP8266->Connection[i].Flags.F.Active = 1;    		/* We are active */
    2fe6:	f4 01       	movw	r30, r8
    2fe8:	9d e1       	ldi	r25, 0x1D	; 29
    2fea:	49 9e       	mul	r4, r25
    2fec:	e0 0d       	add	r30, r0
    2fee:	f1 1d       	adc	r31, r1
    2ff0:	11 24       	eor	r1, r1
    2ff2:	96 a9       	ldd	r25, Z+54	; 0x36
        ESP8266->Connection[i].Flags.F.Client = 1;   		/* We are in client mode */
    2ff4:	91 60       	ori	r25, 0x01	; 1
    2ff6:	92 60       	ori	r25, 0x02	; 2
    2ff8:	96 ab       	std	Z+54, r25	; 0x36
        ESP8266->Connection[i].Type = type;         		/* Set connection type */
    2ffa:	51 a2       	std	Z+33, r5	; 0x21
        ESP8266->Connection[i].TotalBytesReceived = 0;
    2ffc:	16 a2       	std	Z+38, r1	; 0x26
    2ffe:	17 a2       	std	Z+39, r1	; 0x27
    3000:	10 a6       	std	Z+40, r1	; 0x28
    3002:	11 a6       	std	Z+41, r1	; 0x29
        ESP8266->Connection[i].Number = conn;
    3004:	22 8f       	std	Z+26, r18	; 0x1a
#if ESP8266_USE_SINGLE_CONNECTION_BUFFER == 1
        ESP8266->Connection[i].Data = ConnectionData;
    3006:	22 e9       	ldi	r18, 0x92	; 146
    3008:	30 e1       	ldi	r19, 0x10	; 16
    300a:	33 a7       	std	Z+43, r19	; 0x2b
    300c:	22 a7       	std	Z+42, r18	; 0x2a
#endif
        ESP8266->StartConnectionSent = i;            		/* Save connection number we have started */
    300e:	d4 01       	movw	r26, r8
    3010:	a2 5e       	subi	r26, 0xE2	; 226
    3012:	be 4f       	sbci	r27, 0xFE	; 254
    3014:	98 85       	ldd	r25, Y+8	; 0x08
    3016:	9c 93       	st	X, r25
    
        ESP8266->Connection[i].Name = (char *)name;    		/* Save name */
    3018:	73 aa       	std	Z+51, r7	; 0x33
    301a:	62 aa       	std	Z+50, r6	; 0x32
        ESP8266->Connection[i].UserParameters = user_parameters;	/* Save user parameters pointer */
    301c:	b5 aa       	std	Z+53, r11	; 0x35
    301e:	a4 aa       	std	Z+52, r10	; 0x34
        
        ESP8266_RETURNWITHSTATUS(ESP8266, ESP_OK);    		/* Return OK */
    3020:	f4 01       	movw	r30, r8
    3022:	e3 5d       	subi	r30, 0xD3	; 211
    3024:	fe 4f       	sbci	r31, 0xFE	; 254
    3026:	10 82       	st	Z, r1
    3028:	0d c0       	rjmp	.+26     	; 0x3044 <StartClientConnection+0x22c>
    }
    ESP8266_RETURNWITHSTATUS(ESP8266, ESP_ERROR);    		/* Return error */
    302a:	f4 01       	movw	r30, r8
    302c:	e3 5d       	subi	r30, 0xD3	; 211
    302e:	fe 4f       	sbci	r31, 0xFE	; 254
    3030:	81 e0       	ldi	r24, 0x01	; 1
    3032:	80 83       	st	Z, r24
    3034:	07 c0       	rjmp	.+14     	; 0x3044 <StartClientConnection+0x22c>
            }
        }
    }
    
    for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {    		/* Find available connection */
        if (!ESP8266->Connection[i].Flags.F.Active) {
    3036:	f4 01       	movw	r30, r8
    3038:	86 a9       	ldd	r24, Z+54	; 0x36
    303a:	80 fd       	sbrc	r24, 0
    303c:	49 cf       	rjmp	.-366    	; 0x2ed0 <StartClientConnection+0xb8>
    303e:	41 2c       	mov	r4, r1
            conn = i;                                		/* Save connection and start execution*/
    3040:	18 86       	std	Y+8, r1	; 0x08
    3042:	5e cf       	rjmp	.-324    	; 0x2f00 <StartClientConnection+0xe8>
        ESP8266->Connection[i].UserParameters = user_parameters;	/* Save user parameters pointer */
        
        ESP8266_RETURNWITHSTATUS(ESP8266, ESP_OK);    		/* Return OK */
    }
    ESP8266_RETURNWITHSTATUS(ESP8266, ESP_ERROR);    		/* Return error */
}
    3044:	28 96       	adiw	r28, 0x08	; 8
    3046:	0f b6       	in	r0, 0x3f	; 63
    3048:	f8 94       	cli
    304a:	de bf       	out	0x3e, r29	; 62
    304c:	0f be       	out	0x3f, r0	; 63
    304e:	cd bf       	out	0x3d, r28	; 61
    3050:	df 91       	pop	r29
    3052:	cf 91       	pop	r28
    3054:	1f 91       	pop	r17
    3056:	0f 91       	pop	r16
    3058:	ff 90       	pop	r15
    305a:	ef 90       	pop	r14
    305c:	df 90       	pop	r13
    305e:	cf 90       	pop	r12
    3060:	bf 90       	pop	r11
    3062:	af 90       	pop	r10
    3064:	9f 90       	pop	r9
    3066:	8f 90       	pop	r8
    3068:	7f 90       	pop	r7
    306a:	6f 90       	pop	r6
    306c:	5f 90       	pop	r5
    306e:	4f 90       	pop	r4
    3070:	3f 90       	pop	r3
    3072:	2f 90       	pop	r2
    3074:	08 95       	ret

00003076 <ESP8266_StartClientConnectionTCP>:
}

/******************************************/
/*               TCP CLIENT               */
/******************************************/
ESP8266_Result_t ESP8266_StartClientConnectionTCP(ESP8266_t* ESP8266, const char* name, char* location, uint16_t port, void* user_parameters) {
    3076:	af 92       	push	r10
    3078:	bf 92       	push	r11
    307a:	cf 92       	push	r12
    307c:	df 92       	push	r13
    307e:	ef 92       	push	r14
    3080:	ff 92       	push	r15
    3082:	0f 93       	push	r16
    3084:	1f 93       	push	r17
    return StartClientConnection(ESP8266, ESP8266_ConnectionType_TCP, "TCP", name, location, port, 0, user_parameters);
    3086:	58 01       	movw	r10, r16
    3088:	c1 2c       	mov	r12, r1
    308a:	d1 2c       	mov	r13, r1
    308c:	79 01       	movw	r14, r18
    308e:	8a 01       	movw	r16, r20
    3090:	9b 01       	movw	r18, r22
    3092:	41 e4       	ldi	r20, 0x41	; 65
    3094:	56 e0       	ldi	r21, 0x06	; 6
    3096:	60 e0       	ldi	r22, 0x00	; 0
    3098:	bf de       	rcall	.-642    	; 0x2e18 <StartClientConnection>
}
    309a:	1f 91       	pop	r17
    309c:	0f 91       	pop	r16
    309e:	ff 90       	pop	r15
    30a0:	ef 90       	pop	r14
    30a2:	df 90       	pop	r13
    30a4:	cf 90       	pop	r12
    30a6:	bf 90       	pop	r11
    30a8:	af 90       	pop	r10
    30aa:	08 95       	ret

000030ac <ESP8266_LL_USARTInit>:
 * | along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * |----------------------------------------------------------------------
 */
#include "esp8266_ll.h"

uint8_t ESP8266_LL_USARTInit(uint32_t baudrate) {
    30ac:	cf 92       	push	r12
    30ae:	df 92       	push	r13
    30b0:	ef 92       	push	r14
    30b2:	ff 92       	push	r15
    30b4:	6b 01       	movw	r12, r22
    30b6:	7c 01       	movw	r14, r24
	
	/* Calculate prescaler for baudrate */
	prescaler =  (F_CPU / 4 / baudrate - 1) / 2; 
	
	/* Check valid input */
	if (((F_CPU == 16000000UL) && (baudrate == 57600)) || (prescaler > 4095)) {
    30b8:	61 15       	cp	r22, r1
    30ba:	71 4e       	sbci	r23, 0xE1	; 225
    30bc:	81 05       	cpc	r24, r1
    30be:	91 05       	cpc	r25, r1
    30c0:	a1 f0       	breq	.+40     	; 0x30ea <ESP8266_LL_USARTInit+0x3e>

uint8_t ESP8266_LL_USARTInit(uint32_t baudrate) {
	uint16_t prescaler;
	
	/* Calculate prescaler for baudrate */
	prescaler =  (F_CPU / 4 / baudrate - 1) / 2; 
    30c2:	60 e0       	ldi	r22, 0x00	; 0
    30c4:	79 e0       	ldi	r23, 0x09	; 9
    30c6:	8d e3       	ldi	r24, 0x3D	; 61
    30c8:	90 e0       	ldi	r25, 0x00	; 0
    30ca:	a7 01       	movw	r20, r14
    30cc:	96 01       	movw	r18, r12
    30ce:	be d2       	rcall	.+1404   	; 0x364c <__udivmodsi4>
    30d0:	da 01       	movw	r26, r20
    30d2:	c9 01       	movw	r24, r18
    30d4:	01 97       	sbiw	r24, 0x01	; 1
    30d6:	a1 09       	sbc	r26, r1
    30d8:	b1 09       	sbc	r27, r1
    30da:	b6 95       	lsr	r27
    30dc:	a7 95       	ror	r26
    30de:	97 95       	ror	r25
    30e0:	87 95       	ror	r24
	
	/* Check valid input */
	if (((F_CPU == 16000000UL) && (baudrate == 57600)) || (prescaler > 4095)) {
    30e2:	81 15       	cp	r24, r1
    30e4:	20 e1       	ldi	r18, 0x10	; 16
    30e6:	92 07       	cpc	r25, r18
    30e8:	90 f0       	brcs	.+36     	; 0x310e <ESP8266_LL_USARTInit+0x62>
		UCSR0A = 0;
    30ea:	10 92 c0 00 	sts	0x00C0, r1
		
		/* Calculate new value */
		prescaler = (F_CPU / 8 / baudrate - 1) / 2;
    30ee:	60 e8       	ldi	r22, 0x80	; 128
    30f0:	74 e8       	ldi	r23, 0x84	; 132
    30f2:	8e e1       	ldi	r24, 0x1E	; 30
    30f4:	90 e0       	ldi	r25, 0x00	; 0
    30f6:	a7 01       	movw	r20, r14
    30f8:	96 01       	movw	r18, r12
    30fa:	a8 d2       	rcall	.+1360   	; 0x364c <__udivmodsi4>
    30fc:	da 01       	movw	r26, r20
    30fe:	c9 01       	movw	r24, r18
    3100:	01 97       	sbiw	r24, 0x01	; 1
    3102:	a1 09       	sbc	r26, r1
    3104:	b1 09       	sbc	r27, r1
    3106:	b6 95       	lsr	r27
    3108:	a7 95       	ror	r26
    310a:	97 95       	ror	r25
    310c:	87 95       	ror	r24
	}
	
	/* Set UART prescaler for baudrate */
	UBRR1H = (prescaler >> 8) & 0xFF;
    310e:	90 93 cd 00 	sts	0x00CD, r25
	UBRR1L = prescaler & 0xFF;
    3112:	80 93 cc 00 	sts	0x00CC, r24
	
	/* Set double sampling */
	UCSR1A |= 1 << U2X1;
    3116:	e8 ec       	ldi	r30, 0xC8	; 200
    3118:	f0 e0       	ldi	r31, 0x00	; 0
    311a:	80 81       	ld	r24, Z
    311c:	82 60       	ori	r24, 0x02	; 2
    311e:	80 83       	st	Z, r24
	
	/* Data size 8 bits */
	UCSR1C |= (1 << UCSZ10) | (1 << UCSZ11);
    3120:	ea ec       	ldi	r30, 0xCA	; 202
    3122:	f0 e0       	ldi	r31, 0x00	; 0
    3124:	80 81       	ld	r24, Z
    3126:	86 60       	ori	r24, 0x06	; 6
    3128:	80 83       	st	Z, r24
	
	/* Enable receiver and transmitter */
	UCSR1B |= (1 << RXEN1) | (1 << TXEN1);
    312a:	e9 ec       	ldi	r30, 0xC9	; 201
    312c:	f0 e0       	ldi	r31, 0x00	; 0
    312e:	80 81       	ld	r24, Z
    3130:	88 61       	ori	r24, 0x18	; 24
    3132:	80 83       	st	Z, r24
	
	/* Enable RX Not empty interrupt */
	UCSR1B |= (1 << RXCIE1);
    3134:	80 81       	ld	r24, Z
    3136:	80 68       	ori	r24, 0x80	; 128
    3138:	80 83       	st	Z, r24
	
	/* Enable interrupts if not already */
	sei();
    313a:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    313c:	8f e3       	ldi	r24, 0x3F	; 63
    313e:	9c e9       	ldi	r25, 0x9C	; 156
    3140:	01 97       	sbiw	r24, 0x01	; 1
    3142:	f1 f7       	brne	.-4      	; 0x3140 <ESP8266_LL_USARTInit+0x94>
    3144:	00 c0       	rjmp	.+0      	; 0x3146 <ESP8266_LL_USARTInit+0x9a>
    3146:	00 00       	nop
	/* Make a little delay */
	_delay_ms(10);
	
	/* Return 0 = Successful */
	return 0;
}
    3148:	80 e0       	ldi	r24, 0x00	; 0
    314a:	ff 90       	pop	r15
    314c:	ef 90       	pop	r14
    314e:	df 90       	pop	r13
    3150:	cf 90       	pop	r12
    3152:	08 95       	ret

00003154 <ESP8266_LL_USARTSend>:

uint8_t ESP8266_LL_USARTSend(uint8_t* data, uint16_t count) {
    3154:	cf 93       	push	r28
    3156:	df 93       	push	r29
    3158:	9c 01       	movw	r18, r24
	/* Wait till end */
	while ((UCSR1A & (1 << UDRE1)) == 0);
    315a:	e8 ec       	ldi	r30, 0xC8	; 200
    315c:	f0 e0       	ldi	r31, 0x00	; 0
    315e:	90 81       	ld	r25, Z
    3160:	95 ff       	sbrs	r25, 5
    3162:	fd cf       	rjmp	.-6      	; 0x315e <ESP8266_LL_USARTSend+0xa>
    3164:	d9 01       	movw	r26, r18
    3166:	62 0f       	add	r22, r18
    3168:	73 1f       	adc	r23, r19
	
	/* Send data via USART */
	while (count--) {
		/* Send character */
		UDR1 = *data++;
    316a:	ce ec       	ldi	r28, 0xCE	; 206
    316c:	d0 e0       	ldi	r29, 0x00	; 0

		/* Wait till done */
		while ((UCSR1A & (1 << UDRE1)) == 0);
    316e:	e8 ec       	ldi	r30, 0xC8	; 200
    3170:	f0 e0       	ldi	r31, 0x00	; 0
    3172:	05 c0       	rjmp	.+10     	; 0x317e <ESP8266_LL_USARTSend+0x2a>
	while ((UCSR1A & (1 << UDRE1)) == 0);
	
	/* Send data via USART */
	while (count--) {
		/* Send character */
		UDR1 = *data++;
    3174:	9d 91       	ld	r25, X+
    3176:	98 83       	st	Y, r25

		/* Wait till done */
		while ((UCSR1A & (1 << UDRE1)) == 0);
    3178:	90 81       	ld	r25, Z
    317a:	95 ff       	sbrs	r25, 5
    317c:	fd cf       	rjmp	.-6      	; 0x3178 <ESP8266_LL_USARTSend+0x24>
uint8_t ESP8266_LL_USARTSend(uint8_t* data, uint16_t count) {
	/* Wait till end */
	while ((UCSR1A & (1 << UDRE1)) == 0);
	
	/* Send data via USART */
	while (count--) {
    317e:	a6 17       	cp	r26, r22
    3180:	b7 07       	cpc	r27, r23
    3182:	c1 f7       	brne	.-16     	; 0x3174 <ESP8266_LL_USARTSend+0x20>
		while ((UCSR1A & (1 << UDRE1)) == 0);
	}
	
	/* Return 0 = Successful */
	return 0;
}
    3184:	80 e0       	ldi	r24, 0x00	; 0
    3186:	df 91       	pop	r29
    3188:	cf 91       	pop	r28
    318a:	08 95       	ret

0000318c <__vector_36>:

/* USART receive interrupt handler */
ISR(USART1_RX_vect) {
    318c:	1f 92       	push	r1
    318e:	0f 92       	push	r0
    3190:	0f b6       	in	r0, 0x3f	; 63
    3192:	0f 92       	push	r0
    3194:	11 24       	eor	r1, r1
    3196:	0b b6       	in	r0, 0x3b	; 59
    3198:	0f 92       	push	r0
    319a:	2f 93       	push	r18
    319c:	3f 93       	push	r19
    319e:	4f 93       	push	r20
    31a0:	5f 93       	push	r21
    31a2:	6f 93       	push	r22
    31a4:	7f 93       	push	r23
    31a6:	8f 93       	push	r24
    31a8:	9f 93       	push	r25
    31aa:	af 93       	push	r26
    31ac:	bf 93       	push	r27
    31ae:	ef 93       	push	r30
    31b0:	ff 93       	push	r31
    31b2:	cf 93       	push	r28
    31b4:	df 93       	push	r29
    31b6:	1f 92       	push	r1
    31b8:	cd b7       	in	r28, 0x3d	; 61
    31ba:	de b7       	in	r29, 0x3e	; 62
	uint8_t ch = UDR1;
    31bc:	80 91 ce 00 	lds	r24, 0x00CE
    31c0:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send received character to ESP stack */
	ESP8266_DataReceived(&ch, 1);
    31c2:	61 e0       	ldi	r22, 0x01	; 1
    31c4:	70 e0       	ldi	r23, 0x00	; 0
    31c6:	ce 01       	movw	r24, r28
    31c8:	01 96       	adiw	r24, 0x01	; 1
    31ca:	0e 94 39 08 	call	0x1072	; 0x1072 <ESP8266_DataReceived>
}
    31ce:	0f 90       	pop	r0
    31d0:	df 91       	pop	r29
    31d2:	cf 91       	pop	r28
    31d4:	ff 91       	pop	r31
    31d6:	ef 91       	pop	r30
    31d8:	bf 91       	pop	r27
    31da:	af 91       	pop	r26
    31dc:	9f 91       	pop	r25
    31de:	8f 91       	pop	r24
    31e0:	7f 91       	pop	r23
    31e2:	6f 91       	pop	r22
    31e4:	5f 91       	pop	r21
    31e6:	4f 91       	pop	r20
    31e8:	3f 91       	pop	r19
    31ea:	2f 91       	pop	r18
    31ec:	0f 90       	pop	r0
    31ee:	0b be       	out	0x3b, r0	; 59
    31f0:	0f 90       	pop	r0
    31f2:	0f be       	out	0x3f, r0	; 63
    31f4:	0f 90       	pop	r0
    31f6:	1f 90       	pop	r1
    31f8:	18 95       	reti

000031fa <Debug_Putc>:
	/* Print each AP */
	for (i = 0; i < ESP8266_AP->Count; i++) {
		/* Print SSID for each AP */
		printf("%2d: %s\r\n", i, ESP8266_AP->AP[i].SSID);
	}
}
    31fa:	80 93 c6 00 	sts	0x00C6, r24
    31fe:	e0 ec       	ldi	r30, 0xC0	; 192
    3200:	f0 e0       	ldi	r31, 0x00	; 0
    3202:	80 81       	ld	r24, Z
    3204:	85 ff       	sbrs	r24, 5
    3206:	fd cf       	rjmp	.-6      	; 0x3202 <Debug_Putc+0x8>
    3208:	80 e0       	ldi	r24, 0x00	; 0
    320a:	90 e0       	ldi	r25, 0x00	; 0
    320c:	08 95       	ret

0000320e <TimerInit>:
    320e:	84 b5       	in	r24, 0x24	; 36
    3210:	82 60       	ori	r24, 0x02	; 2
    3212:	84 bd       	out	0x24, r24	; 36
    3214:	85 b5       	in	r24, 0x25	; 37
    3216:	83 60       	ori	r24, 0x03	; 3
    3218:	85 bd       	out	0x25, r24	; 37
    321a:	89 ef       	ldi	r24, 0xF9	; 249
    321c:	87 bd       	out	0x27, r24	; 39
    321e:	ee e6       	ldi	r30, 0x6E	; 110
    3220:	f0 e0       	ldi	r31, 0x00	; 0
    3222:	80 81       	ld	r24, Z
    3224:	82 60       	ori	r24, 0x02	; 2
    3226:	80 83       	st	Z, r24
    3228:	08 95       	ret

0000322a <__vector_21>:
    322a:	1f 92       	push	r1
    322c:	0f 92       	push	r0
    322e:	0f b6       	in	r0, 0x3f	; 63
    3230:	0f 92       	push	r0
    3232:	11 24       	eor	r1, r1
    3234:	0b b6       	in	r0, 0x3b	; 59
    3236:	0f 92       	push	r0
    3238:	2f 93       	push	r18
    323a:	3f 93       	push	r19
    323c:	4f 93       	push	r20
    323e:	5f 93       	push	r21
    3240:	6f 93       	push	r22
    3242:	7f 93       	push	r23
    3244:	8f 93       	push	r24
    3246:	9f 93       	push	r25
    3248:	af 93       	push	r26
    324a:	bf 93       	push	r27
    324c:	ef 93       	push	r30
    324e:	ff 93       	push	r31
    3250:	41 e0       	ldi	r20, 0x01	; 1
    3252:	50 e0       	ldi	r21, 0x00	; 0
    3254:	60 e0       	ldi	r22, 0x00	; 0
    3256:	70 e0       	ldi	r23, 0x00	; 0
    3258:	87 e4       	ldi	r24, 0x47	; 71
    325a:	96 e1       	ldi	r25, 0x16	; 22
    325c:	0e 94 27 08 	call	0x104e	; 0x104e <ESP8266_TimeUpdate>
    3260:	ff 91       	pop	r31
    3262:	ef 91       	pop	r30
    3264:	bf 91       	pop	r27
    3266:	af 91       	pop	r26
    3268:	9f 91       	pop	r25
    326a:	8f 91       	pop	r24
    326c:	7f 91       	pop	r23
    326e:	6f 91       	pop	r22
    3270:	5f 91       	pop	r21
    3272:	4f 91       	pop	r20
    3274:	3f 91       	pop	r19
    3276:	2f 91       	pop	r18
    3278:	0f 90       	pop	r0
    327a:	0b be       	out	0x3b, r0	; 59
    327c:	0f 90       	pop	r0
    327e:	0f be       	out	0x3f, r0	; 63
    3280:	0f 90       	pop	r0
    3282:	1f 90       	pop	r1
    3284:	18 95       	reti

00003286 <__vector_25>:
    3286:	1f 92       	push	r1
    3288:	0f 92       	push	r0
    328a:	0f b6       	in	r0, 0x3f	; 63
    328c:	0f 92       	push	r0
    328e:	11 24       	eor	r1, r1
    3290:	0b b6       	in	r0, 0x3b	; 59
    3292:	0f 92       	push	r0
    3294:	8f 93       	push	r24
    3296:	ef 93       	push	r30
    3298:	ff 93       	push	r31
    329a:	e6 ec       	ldi	r30, 0xC6	; 198
    329c:	f0 e0       	ldi	r31, 0x00	; 0
    329e:	80 81       	ld	r24, Z
    32a0:	80 83       	st	Z, r24
    32a2:	e0 ec       	ldi	r30, 0xC0	; 192
    32a4:	f0 e0       	ldi	r31, 0x00	; 0
    32a6:	80 81       	ld	r24, Z
    32a8:	85 ff       	sbrs	r24, 5
    32aa:	fd cf       	rjmp	.-6      	; 0x32a6 <__vector_25+0x20>
    32ac:	ff 91       	pop	r31
    32ae:	ef 91       	pop	r30
    32b0:	8f 91       	pop	r24
    32b2:	0f 90       	pop	r0
    32b4:	0b be       	out	0x3b, r0	; 59
    32b6:	0f 90       	pop	r0
    32b8:	0f be       	out	0x3f, r0	; 63
    32ba:	0f 90       	pop	r0
    32bc:	1f 90       	pop	r1
    32be:	18 95       	reti

000032c0 <DebugUARTInit>:
    32c0:	9b 01       	movw	r18, r22
    32c2:	ac 01       	movw	r20, r24
    32c4:	60 e0       	ldi	r22, 0x00	; 0
    32c6:	79 e0       	ldi	r23, 0x09	; 9
    32c8:	8d e3       	ldi	r24, 0x3D	; 61
    32ca:	90 e0       	ldi	r25, 0x00	; 0
    32cc:	bf d1       	rcall	.+894    	; 0x364c <__udivmodsi4>
    32ce:	da 01       	movw	r26, r20
    32d0:	c9 01       	movw	r24, r18
    32d2:	01 97       	sbiw	r24, 0x01	; 1
    32d4:	a1 09       	sbc	r26, r1
    32d6:	b1 09       	sbc	r27, r1
    32d8:	ac 01       	movw	r20, r24
    32da:	bd 01       	movw	r22, r26
    32dc:	76 95       	lsr	r23
    32de:	67 95       	ror	r22
    32e0:	57 95       	ror	r21
    32e2:	47 95       	ror	r20
    32e4:	85 2f       	mov	r24, r21
    32e6:	99 27       	eor	r25, r25
    32e8:	80 93 c5 00 	sts	0x00C5, r24
    32ec:	40 93 c4 00 	sts	0x00C4, r20
    32f0:	e0 ec       	ldi	r30, 0xC0	; 192
    32f2:	f0 e0       	ldi	r31, 0x00	; 0
    32f4:	80 81       	ld	r24, Z
    32f6:	82 60       	ori	r24, 0x02	; 2
    32f8:	80 83       	st	Z, r24
    32fa:	e2 ec       	ldi	r30, 0xC2	; 194
    32fc:	f0 e0       	ldi	r31, 0x00	; 0
    32fe:	80 81       	ld	r24, Z
    3300:	86 60       	ori	r24, 0x06	; 6
    3302:	80 83       	st	Z, r24
    3304:	e1 ec       	ldi	r30, 0xC1	; 193
    3306:	f0 e0       	ldi	r31, 0x00	; 0
    3308:	80 81       	ld	r24, Z
    330a:	88 61       	ori	r24, 0x18	; 24
    330c:	80 83       	st	Z, r24
    330e:	80 81       	ld	r24, Z
    3310:	80 68       	ori	r24, 0x80	; 128
    3312:	80 83       	st	Z, r24
    3314:	08 95       	ret

00003316 <main>:
    3316:	86 e0       	ldi	r24, 0x06	; 6
    3318:	92 e0       	ldi	r25, 0x02	; 2
    331a:	90 93 7c 17 	sts	0x177C, r25
    331e:	80 93 7b 17 	sts	0x177B, r24
    3322:	60 e0       	ldi	r22, 0x00	; 0
    3324:	72 ec       	ldi	r23, 0xC2	; 194
    3326:	81 e0       	ldi	r24, 0x01	; 1
    3328:	90 e0       	ldi	r25, 0x00	; 0
    332a:	ca df       	rcall	.-108    	; 0x32c0 <DebugUARTInit>
    332c:	70 df       	rcall	.-288    	; 0x320e <TimerInit>
    332e:	78 94       	sei
    3330:	8c e6       	ldi	r24, 0x6C	; 108
    3332:	96 e0       	ldi	r25, 0x06	; 6
    3334:	66 d3       	rcall	.+1740   	; 0x3a02 <puts>
    3336:	03 c0       	rjmp	.+6      	; 0x333e <main+0x28>
    3338:	80 ea       	ldi	r24, 0xA0	; 160
    333a:	96 e0       	ldi	r25, 0x06	; 6
    333c:	62 d3       	rcall	.+1732   	; 0x3a02 <puts>
    333e:	40 e0       	ldi	r20, 0x00	; 0
    3340:	52 ec       	ldi	r21, 0xC2	; 194
    3342:	61 e0       	ldi	r22, 0x01	; 1
    3344:	70 e0       	ldi	r23, 0x00	; 0
    3346:	87 e4       	ldi	r24, 0x47	; 71
    3348:	96 e1       	ldi	r25, 0x16	; 22
    334a:	df da       	rcall	.-2626   	; 0x290a <ESP8266_Init>
    334c:	81 11       	cpse	r24, r1
    334e:	f4 cf       	rjmp	.-24     	; 0x3338 <main+0x22>
    3350:	63 e0       	ldi	r22, 0x03	; 3
    3352:	87 e4       	ldi	r24, 0x47	; 71
    3354:	96 e1       	ldi	r25, 0x16	; 22
    3356:	83 da       	rcall	.-2810   	; 0x285e <ESP8266_SetMode>
    3358:	81 11       	cpse	r24, r1
    335a:	fa cf       	rjmp	.-12     	; 0x3350 <main+0x3a>
    335c:	60 e5       	ldi	r22, 0x50	; 80
    335e:	70 e0       	ldi	r23, 0x00	; 0
    3360:	87 e4       	ldi	r24, 0x47	; 71
    3362:	96 e1       	ldi	r25, 0x16	; 22
    3364:	ea dc       	rcall	.-1580   	; 0x2d3a <ESP8266_ServerEnable>
    3366:	81 11       	cpse	r24, r1
    3368:	f9 cf       	rjmp	.-14     	; 0x335c <main+0x46>
    336a:	8b ec       	ldi	r24, 0xCB	; 203
    336c:	96 e0       	ldi	r25, 0x06	; 6
    336e:	49 d3       	rcall	.+1682   	; 0x3a02 <puts>
    3370:	87 e4       	ldi	r24, 0x47	; 71
    3372:	96 e1       	ldi	r25, 0x16	; 22
    3374:	8b d9       	rcall	.-3306   	; 0x268c <ESP8266_WifiDisconnect>
    3376:	87 e4       	ldi	r24, 0x47	; 71
    3378:	96 e1       	ldi	r25, 0x16	; 22
    337a:	f4 d9       	rcall	.-3096   	; 0x2764 <ESP8266_WaitReady>
    337c:	45 ee       	ldi	r20, 0xE5	; 229
    337e:	56 e0       	ldi	r21, 0x06	; 6
    3380:	63 ef       	ldi	r22, 0xF3	; 243
    3382:	76 e0       	ldi	r23, 0x06	; 6
    3384:	87 e4       	ldi	r24, 0x47	; 71
    3386:	96 e1       	ldi	r25, 0x16	; 22
    3388:	2c da       	rcall	.-2984   	; 0x27e2 <ESP8266_WifiConnect>
    338a:	87 e4       	ldi	r24, 0x47	; 71
    338c:	96 e1       	ldi	r25, 0x16	; 22
    338e:	ea d9       	rcall	.-3116   	; 0x2764 <ESP8266_WaitReady>
    3390:	87 e4       	ldi	r24, 0x47	; 71
    3392:	96 e1       	ldi	r25, 0x16	; 22
    3394:	82 d9       	rcall	.-3324   	; 0x269a <ESP8266_WifiGetConnected>
    3396:	26 98       	cbi	0x04, 6	; 4
    3398:	2e 9a       	sbi	0x05, 6	; 5
    339a:	87 e4       	ldi	r24, 0x47	; 71
    339c:	96 e1       	ldi	r25, 0x16	; 22
    339e:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <ESP8266_Update>
    33a2:	1e 99       	sbic	0x03, 6	; 3
    33a4:	fa cf       	rjmp	.-12     	; 0x339a <main+0x84>
    33a6:	1e 9b       	sbis	0x03, 6	; 3
    33a8:	fe cf       	rjmp	.-4      	; 0x33a6 <main+0x90>
    33aa:	00 e0       	ldi	r16, 0x00	; 0
    33ac:	10 e0       	ldi	r17, 0x00	; 0
    33ae:	20 e5       	ldi	r18, 0x50	; 80
    33b0:	30 e0       	ldi	r19, 0x00	; 0
    33b2:	4d ef       	ldi	r20, 0xFD	; 253
    33b4:	56 e0       	ldi	r21, 0x06	; 6
    33b6:	63 e1       	ldi	r22, 0x13	; 19
    33b8:	77 e0       	ldi	r23, 0x07	; 7
    33ba:	87 e4       	ldi	r24, 0x47	; 71
    33bc:	96 e1       	ldi	r25, 0x16	; 22
    33be:	5b de       	rcall	.-842    	; 0x3076 <ESP8266_StartClientConnectionTCP>
    33c0:	81 11       	cpse	r24, r1
    33c2:	f3 cf       	rjmp	.-26     	; 0x33aa <main+0x94>
    33c4:	ea cf       	rjmp	.-44     	; 0x339a <main+0x84>

000033c6 <ESP8266_Callback_DeviceReady>:
    33c6:	80 e2       	ldi	r24, 0x20	; 32
    33c8:	97 e0       	ldi	r25, 0x07	; 7
    33ca:	1b c3       	rjmp	.+1590   	; 0x3a02 <puts>
    33cc:	08 95       	ret

000033ce <ESP8266_Callback_WatchdogReset>:
    33ce:	81 e3       	ldi	r24, 0x31	; 49
    33d0:	97 e0       	ldi	r25, 0x07	; 7
    33d2:	17 c3       	rjmp	.+1582   	; 0x3a02 <puts>
    33d4:	08 95       	ret

000033d6 <ESP8266_Callback_WifiDisconnected>:
    33d6:	8b e4       	ldi	r24, 0x4B	; 75
    33d8:	97 e0       	ldi	r25, 0x07	; 7
    33da:	13 c3       	rjmp	.+1574   	; 0x3a02 <puts>
    33dc:	08 95       	ret

000033de <ESP8266_Callback_WifiConnected>:
    33de:	82 e6       	ldi	r24, 0x62	; 98
    33e0:	97 e0       	ldi	r25, 0x07	; 7
    33e2:	0f c3       	rjmp	.+1566   	; 0x3a02 <puts>
    33e4:	08 95       	ret

000033e6 <ESP8266_Callback_WifiConnectFailed>:
    33e6:	fc 01       	movw	r30, r24
    33e8:	e3 5e       	subi	r30, 0xE3	; 227
    33ea:	fe 4f       	sbci	r31, 0xFE	; 254
    33ec:	80 81       	ld	r24, Z
    33ee:	1f 92       	push	r1
    33f0:	8f 93       	push	r24
    33f2:	86 e7       	ldi	r24, 0x76	; 118
    33f4:	97 e0       	ldi	r25, 0x07	; 7
    33f6:	9f 93       	push	r25
    33f8:	8f 93       	push	r24
    33fa:	f0 d2       	rcall	.+1504   	; 0x39dc <printf>
    33fc:	0f 90       	pop	r0
    33fe:	0f 90       	pop	r0
    3400:	0f 90       	pop	r0
    3402:	0f 90       	pop	r0
    3404:	08 95       	ret

00003406 <ESP8266_Callback_WifiGotIP>:
    3406:	cf 93       	push	r28
    3408:	df 93       	push	r29
    340a:	ec 01       	movw	r28, r24
    340c:	89 ea       	ldi	r24, 0xA9	; 169
    340e:	97 e0       	ldi	r25, 0x07	; 7
    3410:	f8 d2       	rcall	.+1520   	; 0x3a02 <puts>
    3412:	ce 01       	movw	r24, r28
    3414:	49 d9       	rcall	.-3438   	; 0x26a8 <ESP8266_GetSTAIP>
    3416:	1f 92       	push	r1
    3418:	8f 93       	push	r24
    341a:	81 ec       	ldi	r24, 0xC1	; 193
    341c:	97 e0       	ldi	r25, 0x07	; 7
    341e:	9f 93       	push	r25
    3420:	8f 93       	push	r24
    3422:	dc d2       	rcall	.+1464   	; 0x39dc <printf>
    3424:	0f 90       	pop	r0
    3426:	0f 90       	pop	r0
    3428:	0f 90       	pop	r0
    342a:	0f 90       	pop	r0
    342c:	df 91       	pop	r29
    342e:	cf 91       	pop	r28
    3430:	08 95       	ret

00003432 <ESP8266_Callback_WifiIPSet>:
    3432:	fc 01       	movw	r30, r24
    3434:	e2 55       	subi	r30, 0x52	; 82
    3436:	ff 4f       	sbci	r31, 0xFF	; 255
    3438:	20 81       	ld	r18, Z
    343a:	1f 92       	push	r1
    343c:	2f 93       	push	r18
    343e:	31 97       	sbiw	r30, 0x01	; 1
    3440:	20 81       	ld	r18, Z
    3442:	1f 92       	push	r1
    3444:	2f 93       	push	r18
    3446:	31 97       	sbiw	r30, 0x01	; 1
    3448:	20 81       	ld	r18, Z
    344a:	1f 92       	push	r1
    344c:	2f 93       	push	r18
    344e:	31 97       	sbiw	r30, 0x01	; 1
    3450:	80 81       	ld	r24, Z
    3452:	1f 92       	push	r1
    3454:	8f 93       	push	r24
    3456:	8a ed       	ldi	r24, 0xDA	; 218
    3458:	97 e0       	ldi	r25, 0x07	; 7
    345a:	9f 93       	push	r25
    345c:	8f 93       	push	r24
    345e:	be d2       	rcall	.+1404   	; 0x39dc <printf>
    3460:	8d b7       	in	r24, 0x3d	; 61
    3462:	9e b7       	in	r25, 0x3e	; 62
    3464:	0a 96       	adiw	r24, 0x0a	; 10
    3466:	0f b6       	in	r0, 0x3f	; 63
    3468:	f8 94       	cli
    346a:	9e bf       	out	0x3e, r25	; 62
    346c:	0f be       	out	0x3f, r0	; 63
    346e:	8d bf       	out	0x3d, r24	; 61
    3470:	08 95       	ret

00003472 <ESP8266_Callback_DHCPTimeout>:
    3472:	82 e0       	ldi	r24, 0x02	; 2
    3474:	98 e0       	ldi	r25, 0x08	; 8
    3476:	c5 c2       	rjmp	.+1418   	; 0x3a02 <puts>
    3478:	08 95       	ret

0000347a <ESP8266_Callback_ClientConnectionConnected>:


/************************************/
/*         CLIENT CALLBACKS         */
/************************************/
void ESP8266_Callback_ClientConnectionConnected(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection) {
    347a:	0f 93       	push	r16
    347c:	1f 93       	push	r17
    347e:	cf 93       	push	r28
    3480:	df 93       	push	r29
    3482:	8c 01       	movw	r16, r24
    3484:	eb 01       	movw	r28, r22
	/* We are connected to external server */
	printf("Client connected to server! Connection number: %s\r\n", Connection->Name);
    3486:	89 8d       	ldd	r24, Y+25	; 0x19
    3488:	8f 93       	push	r24
    348a:	88 8d       	ldd	r24, Y+24	; 0x18
    348c:	8f 93       	push	r24
    348e:	2d e3       	ldi	r18, 0x3D	; 61
    3490:	38 e0       	ldi	r19, 0x08	; 8
    3492:	3f 93       	push	r19
    3494:	2f 93       	push	r18
    3496:	a2 d2       	rcall	.+1348   	; 0x39dc <printf>
	
	/* We are connected to server, request to sent header data to server */
	ESP8266_RequestSendData(ESP8266, Connection);
    3498:	be 01       	movw	r22, r28
    349a:	c8 01       	movw	r24, r16
    349c:	02 dc       	rcall	.-2044   	; 0x2ca2 <ESP8266_RequestSendData>
    349e:	0f 90       	pop	r0
    34a0:	0f 90       	pop	r0
    34a2:	0f 90       	pop	r0
    34a4:	0f 90       	pop	r0
}
    34a6:	df 91       	pop	r29
    34a8:	cf 91       	pop	r28
    34aa:	1f 91       	pop	r17
    34ac:	0f 91       	pop	r16
    34ae:	08 95       	ret

000034b0 <ESP8266_Callback_ClientConnectionError>:

/* Called when client connection fails to server */
void ESP8266_Callback_ClientConnectionError(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection) {
	/* Fail with connection to server */
	printf("An error occurred when trying to connect on connection: %d\r\n", Connection->Number);
    34b0:	fb 01       	movw	r30, r22
    34b2:	80 81       	ld	r24, Z
    34b4:	1f 92       	push	r1
    34b6:	8f 93       	push	r24
    34b8:	81 e7       	ldi	r24, 0x71	; 113
    34ba:	98 e0       	ldi	r25, 0x08	; 8
    34bc:	9f 93       	push	r25
    34be:	8f 93       	push	r24
    34c0:	8d d2       	rcall	.+1306   	; 0x39dc <printf>
    34c2:	0f 90       	pop	r0
    34c4:	0f 90       	pop	r0
    34c6:	0f 90       	pop	r0
    34c8:	0f 90       	pop	r0
    34ca:	08 95       	ret

000034cc <ESP8266_Callback_ClientConnectionSendData>:
}

/* Called when data are ready to be sent to server */
uint16_t ESP8266_Callback_ClientConnectionSendData(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection, char* Buffer, uint16_t max_buffer_size) {
    34cc:	cf 93       	push	r28
    34ce:	df 93       	push	r29
	/* Format data to sent to server */
	sprintf(Buffer, "GET / HTTP/1.1\r\n");
    34d0:	81 e1       	ldi	r24, 0x11	; 17
    34d2:	ee ea       	ldi	r30, 0xAE	; 174
    34d4:	f8 e0       	ldi	r31, 0x08	; 8
    34d6:	da 01       	movw	r26, r20
    34d8:	01 90       	ld	r0, Z+
    34da:	0d 92       	st	X+, r0
    34dc:	8a 95       	dec	r24
    34de:	e1 f7       	brne	.-8      	; 0x34d8 <ESP8266_Callback_ClientConnectionSendData+0xc>
	strcat(Buffer, "Host: stm32f4-discovery.com\r\n");
    34e0:	da 01       	movw	r26, r20
    34e2:	0d 90       	ld	r0, X+
    34e4:	00 20       	and	r0, r0
    34e6:	e9 f7       	brne	.-6      	; 0x34e2 <ESP8266_Callback_ClientConnectionSendData+0x16>
    34e8:	11 97       	sbiw	r26, 0x01	; 1
    34ea:	8e e1       	ldi	r24, 0x1E	; 30
    34ec:	ef eb       	ldi	r30, 0xBF	; 191
    34ee:	f8 e0       	ldi	r31, 0x08	; 8
    34f0:	01 90       	ld	r0, Z+
    34f2:	0d 92       	st	X+, r0
    34f4:	8a 95       	dec	r24
    34f6:	e1 f7       	brne	.-8      	; 0x34f0 <ESP8266_Callback_ClientConnectionSendData+0x24>
	strcat(Buffer, "Connection: close\r\n");
    34f8:	da 01       	movw	r26, r20
    34fa:	0d 90       	ld	r0, X+
    34fc:	00 20       	and	r0, r0
    34fe:	e9 f7       	brne	.-6      	; 0x34fa <ESP8266_Callback_ClientConnectionSendData+0x2e>
    3500:	11 97       	sbiw	r26, 0x01	; 1
    3502:	84 e1       	ldi	r24, 0x14	; 20
    3504:	ed ed       	ldi	r30, 0xDD	; 221
    3506:	f8 e0       	ldi	r31, 0x08	; 8
    3508:	01 90       	ld	r0, Z+
    350a:	0d 92       	st	X+, r0
    350c:	8a 95       	dec	r24
    350e:	e1 f7       	brne	.-8      	; 0x3508 <ESP8266_Callback_ClientConnectionSendData+0x3c>
	strcat(Buffer, "\r\n");
    3510:	fa 01       	movw	r30, r20
    3512:	01 90       	ld	r0, Z+
    3514:	00 20       	and	r0, r0
    3516:	e9 f7       	brne	.-6      	; 0x3512 <ESP8266_Callback_ClientConnectionSendData+0x46>
    3518:	31 97       	sbiw	r30, 0x01	; 1
    351a:	8d e0       	ldi	r24, 0x0D	; 13
    351c:	9a e0       	ldi	r25, 0x0A	; 10
    351e:	a0 e0       	ldi	r26, 0x00	; 0
    3520:	80 83       	st	Z, r24
    3522:	91 83       	std	Z+1, r25	; 0x01
    3524:	a2 83       	std	Z+2, r26	; 0x02
	
	/* Return length of buffer */
	return strlen(Buffer);
    3526:	fa 01       	movw	r30, r20
    3528:	01 90       	ld	r0, Z+
    352a:	00 20       	and	r0, r0
    352c:	e9 f7       	brne	.-6      	; 0x3528 <ESP8266_Callback_ClientConnectionSendData+0x5c>
    352e:	cf 01       	movw	r24, r30
    3530:	01 97       	sbiw	r24, 0x01	; 1
}
    3532:	84 1b       	sub	r24, r20
    3534:	95 0b       	sbc	r25, r21
    3536:	df 91       	pop	r29
    3538:	cf 91       	pop	r28
    353a:	08 95       	ret

0000353c <ESP8266_Callback_ClientConnectionDataSent>:

/* Called when data are send successfully */
void ESP8266_Callback_ClientConnectionDataSent(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection) {
	printf("Data successfully sent as client!\r\n");
    353c:	81 ef       	ldi	r24, 0xF1	; 241
    353e:	98 e0       	ldi	r25, 0x08	; 8
    3540:	60 c2       	rjmp	.+1216   	; 0x3a02 <puts>
    3542:	08 95       	ret

00003544 <ESP8266_Callback_ClientConnectionDataSentError>:
}

/* Called when error returned trying to sent data */
void ESP8266_Callback_ClientConnectionDataSentError(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection) {
	printf("Error while sending data on connection %d!\r\n", Connection->Number);
    3544:	fb 01       	movw	r30, r22
    3546:	80 81       	ld	r24, Z
    3548:	1f 92       	push	r1
    354a:	8f 93       	push	r24
    354c:	84 e1       	ldi	r24, 0x14	; 20
    354e:	99 e0       	ldi	r25, 0x09	; 9
    3550:	9f 93       	push	r25
    3552:	8f 93       	push	r24
    3554:	43 d2       	rcall	.+1158   	; 0x39dc <printf>
    3556:	0f 90       	pop	r0
    3558:	0f 90       	pop	r0
    355a:	0f 90       	pop	r0
    355c:	0f 90       	pop	r0
    355e:	08 95       	ret

00003560 <ESP8266_Callback_ClientConnectionDataReceived>:
}

void ESP8266_Callback_ClientConnectionDataReceived(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection, char* Buffer) {
    3560:	cf 93       	push	r28
    3562:	df 93       	push	r29
    3564:	eb 01       	movw	r28, r22
	/* Data received from server back to client */
	printf("Data received from server on connection: %s; Number of bytes received: %lu; %lu / %lu;\r\n",
    3566:	8f 89       	ldd	r24, Y+23	; 0x17
    3568:	8f 93       	push	r24
    356a:	8e 89       	ldd	r24, Y+22	; 0x16
    356c:	8f 93       	push	r24
    356e:	8d 89       	ldd	r24, Y+21	; 0x15
    3570:	8f 93       	push	r24
    3572:	8c 89       	ldd	r24, Y+20	; 0x14
    3574:	8f 93       	push	r24
    3576:	8f 85       	ldd	r24, Y+15	; 0x0f
    3578:	8f 93       	push	r24
    357a:	8e 85       	ldd	r24, Y+14	; 0x0e
    357c:	8f 93       	push	r24
    357e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3580:	8f 93       	push	r24
    3582:	8c 85       	ldd	r24, Y+12	; 0x0c
    3584:	8f 93       	push	r24
    3586:	8b 85       	ldd	r24, Y+11	; 0x0b
    3588:	8f 93       	push	r24
    358a:	8a 85       	ldd	r24, Y+10	; 0x0a
    358c:	8f 93       	push	r24
    358e:	89 85       	ldd	r24, Y+9	; 0x09
    3590:	8f 93       	push	r24
    3592:	88 85       	ldd	r24, Y+8	; 0x08
    3594:	8f 93       	push	r24
    3596:	89 8d       	ldd	r24, Y+25	; 0x19
    3598:	8f 93       	push	r24
    359a:	88 8d       	ldd	r24, Y+24	; 0x18
    359c:	8f 93       	push	r24
    359e:	81 e4       	ldi	r24, 0x41	; 65
    35a0:	99 e0       	ldi	r25, 0x09	; 9
    35a2:	9f 93       	push	r25
    35a4:	8f 93       	push	r24
    35a6:	1a d2       	rcall	.+1076   	; 0x39dc <printf>
	Connection->TotalBytesReceived,
	Connection->ContentLength
	);
	
	/* Print message when first packet */
	if (Connection->Flags.F.FirstPacket) {
    35a8:	8c 8d       	ldd	r24, Y+28	; 0x1c
    35aa:	2d b7       	in	r18, 0x3d	; 61
    35ac:	3e b7       	in	r19, 0x3e	; 62
    35ae:	20 5f       	subi	r18, 0xF0	; 240
    35b0:	3f 4f       	sbci	r19, 0xFF	; 255
    35b2:	0f b6       	in	r0, 0x3f	; 63
    35b4:	f8 94       	cli
    35b6:	3e bf       	out	0x3e, r19	; 62
    35b8:	0f be       	out	0x3f, r0	; 63
    35ba:	2d bf       	out	0x3d, r18	; 61
    35bc:	86 ff       	sbrs	r24, 6
    35be:	13 c0       	rjmp	.+38     	; 0x35e6 <ESP8266_Callback_ClientConnectionDataReceived+0x86>
		
		/* Print first message */
		printf("This is first packet received. Content length on this connection is: %lu\r\n", Connection->ContentLength);
    35c0:	8f 89       	ldd	r24, Y+23	; 0x17
    35c2:	8f 93       	push	r24
    35c4:	8e 89       	ldd	r24, Y+22	; 0x16
    35c6:	8f 93       	push	r24
    35c8:	8d 89       	ldd	r24, Y+21	; 0x15
    35ca:	8f 93       	push	r24
    35cc:	8c 89       	ldd	r24, Y+20	; 0x14
    35ce:	8f 93       	push	r24
    35d0:	8a e9       	ldi	r24, 0x9A	; 154
    35d2:	99 e0       	ldi	r25, 0x09	; 9
    35d4:	9f 93       	push	r25
    35d6:	8f 93       	push	r24
    35d8:	01 d2       	rcall	.+1026   	; 0x39dc <printf>
    35da:	0f 90       	pop	r0
    35dc:	0f 90       	pop	r0
    35de:	0f 90       	pop	r0
    35e0:	0f 90       	pop	r0
    35e2:	0f 90       	pop	r0
    35e4:	0f 90       	pop	r0
	}
}
    35e6:	df 91       	pop	r29
    35e8:	cf 91       	pop	r28
    35ea:	08 95       	ret

000035ec <ESP8266_Callback_ClientConnectionClosed>:

/* Called when connection is closed */
void ESP8266_Callback_ClientConnectionClosed(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection) {
    35ec:	fb 01       	movw	r30, r22
	printf("Client connection closed, connection: %d; Total bytes received: %lu; Content-Length header: %lu\r\n",
    35ee:	87 89       	ldd	r24, Z+23	; 0x17
    35f0:	8f 93       	push	r24
    35f2:	86 89       	ldd	r24, Z+22	; 0x16
    35f4:	8f 93       	push	r24
    35f6:	85 89       	ldd	r24, Z+21	; 0x15
    35f8:	8f 93       	push	r24
    35fa:	84 89       	ldd	r24, Z+20	; 0x14
    35fc:	8f 93       	push	r24
    35fe:	87 85       	ldd	r24, Z+15	; 0x0f
    3600:	8f 93       	push	r24
    3602:	86 85       	ldd	r24, Z+14	; 0x0e
    3604:	8f 93       	push	r24
    3606:	85 85       	ldd	r24, Z+13	; 0x0d
    3608:	8f 93       	push	r24
    360a:	84 85       	ldd	r24, Z+12	; 0x0c
    360c:	8f 93       	push	r24
    360e:	80 81       	ld	r24, Z
    3610:	1f 92       	push	r1
    3612:	8f 93       	push	r24
    3614:	85 ee       	ldi	r24, 0xE5	; 229
    3616:	99 e0       	ldi	r25, 0x09	; 9
    3618:	9f 93       	push	r25
    361a:	8f 93       	push	r24
    361c:	df d1       	rcall	.+958    	; 0x39dc <printf>
    361e:	8d b7       	in	r24, 0x3d	; 61
    3620:	9e b7       	in	r25, 0x3e	; 62
    3622:	0c 96       	adiw	r24, 0x0c	; 12
    3624:	0f b6       	in	r0, 0x3f	; 63
    3626:	f8 94       	cli
    3628:	9e bf       	out	0x3e, r25	; 62
    362a:	0f be       	out	0x3f, r0	; 63
    362c:	8d bf       	out	0x3d, r24	; 61
    362e:	08 95       	ret

00003630 <ESP8266_Callback_ClientConnectionTimeout>:
	);
}

/* Called when timeout is reached on connection to server */
void ESP8266_Callback_ClientConnectionTimeout(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection) {
	printf("Timeout reached on connection: %d\r\n", Connection->Number);
    3630:	fb 01       	movw	r30, r22
    3632:	80 81       	ld	r24, Z
    3634:	1f 92       	push	r1
    3636:	8f 93       	push	r24
    3638:	87 e4       	ldi	r24, 0x47	; 71
    363a:	9a e0       	ldi	r25, 0x0A	; 10
    363c:	9f 93       	push	r25
    363e:	8f 93       	push	r24
    3640:	cd d1       	rcall	.+922    	; 0x39dc <printf>
    3642:	0f 90       	pop	r0
    3644:	0f 90       	pop	r0
    3646:	0f 90       	pop	r0
    3648:	0f 90       	pop	r0
    364a:	08 95       	ret

0000364c <__udivmodsi4>:
    364c:	a1 e2       	ldi	r26, 0x21	; 33
    364e:	1a 2e       	mov	r1, r26
    3650:	aa 1b       	sub	r26, r26
    3652:	bb 1b       	sub	r27, r27
    3654:	fd 01       	movw	r30, r26
    3656:	0d c0       	rjmp	.+26     	; 0x3672 <__udivmodsi4_ep>

00003658 <__udivmodsi4_loop>:
    3658:	aa 1f       	adc	r26, r26
    365a:	bb 1f       	adc	r27, r27
    365c:	ee 1f       	adc	r30, r30
    365e:	ff 1f       	adc	r31, r31
    3660:	a2 17       	cp	r26, r18
    3662:	b3 07       	cpc	r27, r19
    3664:	e4 07       	cpc	r30, r20
    3666:	f5 07       	cpc	r31, r21
    3668:	20 f0       	brcs	.+8      	; 0x3672 <__udivmodsi4_ep>
    366a:	a2 1b       	sub	r26, r18
    366c:	b3 0b       	sbc	r27, r19
    366e:	e4 0b       	sbc	r30, r20
    3670:	f5 0b       	sbc	r31, r21

00003672 <__udivmodsi4_ep>:
    3672:	66 1f       	adc	r22, r22
    3674:	77 1f       	adc	r23, r23
    3676:	88 1f       	adc	r24, r24
    3678:	99 1f       	adc	r25, r25
    367a:	1a 94       	dec	r1
    367c:	69 f7       	brne	.-38     	; 0x3658 <__udivmodsi4_loop>
    367e:	60 95       	com	r22
    3680:	70 95       	com	r23
    3682:	80 95       	com	r24
    3684:	90 95       	com	r25
    3686:	9b 01       	movw	r18, r22
    3688:	ac 01       	movw	r20, r24
    368a:	bd 01       	movw	r22, r26
    368c:	cf 01       	movw	r24, r30
    368e:	08 95       	ret

00003690 <__tablejump2__>:
    3690:	ee 0f       	add	r30, r30
    3692:	ff 1f       	adc	r31, r31
    3694:	88 1f       	adc	r24, r24
    3696:	8b bf       	out	0x3b, r24	; 59
    3698:	07 90       	elpm	r0, Z+
    369a:	f6 91       	elpm	r31, Z
    369c:	e0 2d       	mov	r30, r0
    369e:	19 94       	eijmp

000036a0 <malloc>:
    36a0:	cf 93       	push	r28
    36a2:	df 93       	push	r29
    36a4:	82 30       	cpi	r24, 0x02	; 2
    36a6:	91 05       	cpc	r25, r1
    36a8:	10 f4       	brcc	.+4      	; 0x36ae <malloc+0xe>
    36aa:	82 e0       	ldi	r24, 0x02	; 2
    36ac:	90 e0       	ldi	r25, 0x00	; 0
    36ae:	e0 91 77 17 	lds	r30, 0x1777
    36b2:	f0 91 78 17 	lds	r31, 0x1778
    36b6:	20 e0       	ldi	r18, 0x00	; 0
    36b8:	30 e0       	ldi	r19, 0x00	; 0
    36ba:	c0 e0       	ldi	r28, 0x00	; 0
    36bc:	d0 e0       	ldi	r29, 0x00	; 0
    36be:	30 97       	sbiw	r30, 0x00	; 0
    36c0:	11 f1       	breq	.+68     	; 0x3706 <malloc+0x66>
    36c2:	40 81       	ld	r20, Z
    36c4:	51 81       	ldd	r21, Z+1	; 0x01
    36c6:	48 17       	cp	r20, r24
    36c8:	59 07       	cpc	r21, r25
    36ca:	c0 f0       	brcs	.+48     	; 0x36fc <malloc+0x5c>
    36cc:	48 17       	cp	r20, r24
    36ce:	59 07       	cpc	r21, r25
    36d0:	61 f4       	brne	.+24     	; 0x36ea <malloc+0x4a>
    36d2:	82 81       	ldd	r24, Z+2	; 0x02
    36d4:	93 81       	ldd	r25, Z+3	; 0x03
    36d6:	20 97       	sbiw	r28, 0x00	; 0
    36d8:	19 f0       	breq	.+6      	; 0x36e0 <malloc+0x40>
    36da:	9b 83       	std	Y+3, r25	; 0x03
    36dc:	8a 83       	std	Y+2, r24	; 0x02
    36de:	2b c0       	rjmp	.+86     	; 0x3736 <malloc+0x96>
    36e0:	90 93 78 17 	sts	0x1778, r25
    36e4:	80 93 77 17 	sts	0x1777, r24
    36e8:	26 c0       	rjmp	.+76     	; 0x3736 <malloc+0x96>
    36ea:	21 15       	cp	r18, r1
    36ec:	31 05       	cpc	r19, r1
    36ee:	19 f0       	breq	.+6      	; 0x36f6 <malloc+0x56>
    36f0:	42 17       	cp	r20, r18
    36f2:	53 07       	cpc	r21, r19
    36f4:	18 f4       	brcc	.+6      	; 0x36fc <malloc+0x5c>
    36f6:	9a 01       	movw	r18, r20
    36f8:	be 01       	movw	r22, r28
    36fa:	df 01       	movw	r26, r30
    36fc:	ef 01       	movw	r28, r30
    36fe:	02 80       	ldd	r0, Z+2	; 0x02
    3700:	f3 81       	ldd	r31, Z+3	; 0x03
    3702:	e0 2d       	mov	r30, r0
    3704:	dc cf       	rjmp	.-72     	; 0x36be <malloc+0x1e>
    3706:	21 15       	cp	r18, r1
    3708:	31 05       	cpc	r19, r1
    370a:	09 f1       	breq	.+66     	; 0x374e <malloc+0xae>
    370c:	28 1b       	sub	r18, r24
    370e:	39 0b       	sbc	r19, r25
    3710:	24 30       	cpi	r18, 0x04	; 4
    3712:	31 05       	cpc	r19, r1
    3714:	90 f4       	brcc	.+36     	; 0x373a <malloc+0x9a>
    3716:	12 96       	adiw	r26, 0x02	; 2
    3718:	8d 91       	ld	r24, X+
    371a:	9c 91       	ld	r25, X
    371c:	13 97       	sbiw	r26, 0x03	; 3
    371e:	61 15       	cp	r22, r1
    3720:	71 05       	cpc	r23, r1
    3722:	21 f0       	breq	.+8      	; 0x372c <malloc+0x8c>
    3724:	fb 01       	movw	r30, r22
    3726:	93 83       	std	Z+3, r25	; 0x03
    3728:	82 83       	std	Z+2, r24	; 0x02
    372a:	04 c0       	rjmp	.+8      	; 0x3734 <malloc+0x94>
    372c:	90 93 78 17 	sts	0x1778, r25
    3730:	80 93 77 17 	sts	0x1777, r24
    3734:	fd 01       	movw	r30, r26
    3736:	32 96       	adiw	r30, 0x02	; 2
    3738:	44 c0       	rjmp	.+136    	; 0x37c2 <malloc+0x122>
    373a:	fd 01       	movw	r30, r26
    373c:	e2 0f       	add	r30, r18
    373e:	f3 1f       	adc	r31, r19
    3740:	81 93       	st	Z+, r24
    3742:	91 93       	st	Z+, r25
    3744:	22 50       	subi	r18, 0x02	; 2
    3746:	31 09       	sbc	r19, r1
    3748:	2d 93       	st	X+, r18
    374a:	3c 93       	st	X, r19
    374c:	3a c0       	rjmp	.+116    	; 0x37c2 <malloc+0x122>
    374e:	20 91 75 17 	lds	r18, 0x1775
    3752:	30 91 76 17 	lds	r19, 0x1776
    3756:	23 2b       	or	r18, r19
    3758:	41 f4       	brne	.+16     	; 0x376a <malloc+0xca>
    375a:	20 91 02 02 	lds	r18, 0x0202
    375e:	30 91 03 02 	lds	r19, 0x0203
    3762:	30 93 76 17 	sts	0x1776, r19
    3766:	20 93 75 17 	sts	0x1775, r18
    376a:	20 91 00 02 	lds	r18, 0x0200
    376e:	30 91 01 02 	lds	r19, 0x0201
    3772:	21 15       	cp	r18, r1
    3774:	31 05       	cpc	r19, r1
    3776:	41 f4       	brne	.+16     	; 0x3788 <malloc+0xe8>
    3778:	2d b7       	in	r18, 0x3d	; 61
    377a:	3e b7       	in	r19, 0x3e	; 62
    377c:	40 91 04 02 	lds	r20, 0x0204
    3780:	50 91 05 02 	lds	r21, 0x0205
    3784:	24 1b       	sub	r18, r20
    3786:	35 0b       	sbc	r19, r21
    3788:	e0 91 75 17 	lds	r30, 0x1775
    378c:	f0 91 76 17 	lds	r31, 0x1776
    3790:	e2 17       	cp	r30, r18
    3792:	f3 07       	cpc	r31, r19
    3794:	a0 f4       	brcc	.+40     	; 0x37be <malloc+0x11e>
    3796:	2e 1b       	sub	r18, r30
    3798:	3f 0b       	sbc	r19, r31
    379a:	28 17       	cp	r18, r24
    379c:	39 07       	cpc	r19, r25
    379e:	78 f0       	brcs	.+30     	; 0x37be <malloc+0x11e>
    37a0:	ac 01       	movw	r20, r24
    37a2:	4e 5f       	subi	r20, 0xFE	; 254
    37a4:	5f 4f       	sbci	r21, 0xFF	; 255
    37a6:	24 17       	cp	r18, r20
    37a8:	35 07       	cpc	r19, r21
    37aa:	48 f0       	brcs	.+18     	; 0x37be <malloc+0x11e>
    37ac:	4e 0f       	add	r20, r30
    37ae:	5f 1f       	adc	r21, r31
    37b0:	50 93 76 17 	sts	0x1776, r21
    37b4:	40 93 75 17 	sts	0x1775, r20
    37b8:	81 93       	st	Z+, r24
    37ba:	91 93       	st	Z+, r25
    37bc:	02 c0       	rjmp	.+4      	; 0x37c2 <malloc+0x122>
    37be:	e0 e0       	ldi	r30, 0x00	; 0
    37c0:	f0 e0       	ldi	r31, 0x00	; 0
    37c2:	cf 01       	movw	r24, r30
    37c4:	df 91       	pop	r29
    37c6:	cf 91       	pop	r28
    37c8:	08 95       	ret

000037ca <free>:
    37ca:	0f 93       	push	r16
    37cc:	1f 93       	push	r17
    37ce:	cf 93       	push	r28
    37d0:	df 93       	push	r29
    37d2:	00 97       	sbiw	r24, 0x00	; 0
    37d4:	09 f4       	brne	.+2      	; 0x37d8 <free+0xe>
    37d6:	8c c0       	rjmp	.+280    	; 0x38f0 <free+0x126>
    37d8:	fc 01       	movw	r30, r24
    37da:	32 97       	sbiw	r30, 0x02	; 2
    37dc:	13 82       	std	Z+3, r1	; 0x03
    37de:	12 82       	std	Z+2, r1	; 0x02
    37e0:	00 91 77 17 	lds	r16, 0x1777
    37e4:	10 91 78 17 	lds	r17, 0x1778
    37e8:	01 15       	cp	r16, r1
    37ea:	11 05       	cpc	r17, r1
    37ec:	81 f4       	brne	.+32     	; 0x380e <free+0x44>
    37ee:	20 81       	ld	r18, Z
    37f0:	31 81       	ldd	r19, Z+1	; 0x01
    37f2:	82 0f       	add	r24, r18
    37f4:	93 1f       	adc	r25, r19
    37f6:	20 91 75 17 	lds	r18, 0x1775
    37fa:	30 91 76 17 	lds	r19, 0x1776
    37fe:	28 17       	cp	r18, r24
    3800:	39 07       	cpc	r19, r25
    3802:	79 f5       	brne	.+94     	; 0x3862 <free+0x98>
    3804:	f0 93 76 17 	sts	0x1776, r31
    3808:	e0 93 75 17 	sts	0x1775, r30
    380c:	71 c0       	rjmp	.+226    	; 0x38f0 <free+0x126>
    380e:	d8 01       	movw	r26, r16
    3810:	40 e0       	ldi	r20, 0x00	; 0
    3812:	50 e0       	ldi	r21, 0x00	; 0
    3814:	ae 17       	cp	r26, r30
    3816:	bf 07       	cpc	r27, r31
    3818:	50 f4       	brcc	.+20     	; 0x382e <free+0x64>
    381a:	12 96       	adiw	r26, 0x02	; 2
    381c:	2d 91       	ld	r18, X+
    381e:	3c 91       	ld	r19, X
    3820:	13 97       	sbiw	r26, 0x03	; 3
    3822:	ad 01       	movw	r20, r26
    3824:	21 15       	cp	r18, r1
    3826:	31 05       	cpc	r19, r1
    3828:	09 f1       	breq	.+66     	; 0x386c <free+0xa2>
    382a:	d9 01       	movw	r26, r18
    382c:	f3 cf       	rjmp	.-26     	; 0x3814 <free+0x4a>
    382e:	9d 01       	movw	r18, r26
    3830:	da 01       	movw	r26, r20
    3832:	33 83       	std	Z+3, r19	; 0x03
    3834:	22 83       	std	Z+2, r18	; 0x02
    3836:	60 81       	ld	r22, Z
    3838:	71 81       	ldd	r23, Z+1	; 0x01
    383a:	86 0f       	add	r24, r22
    383c:	97 1f       	adc	r25, r23
    383e:	82 17       	cp	r24, r18
    3840:	93 07       	cpc	r25, r19
    3842:	69 f4       	brne	.+26     	; 0x385e <free+0x94>
    3844:	ec 01       	movw	r28, r24
    3846:	28 81       	ld	r18, Y
    3848:	39 81       	ldd	r19, Y+1	; 0x01
    384a:	26 0f       	add	r18, r22
    384c:	37 1f       	adc	r19, r23
    384e:	2e 5f       	subi	r18, 0xFE	; 254
    3850:	3f 4f       	sbci	r19, 0xFF	; 255
    3852:	31 83       	std	Z+1, r19	; 0x01
    3854:	20 83       	st	Z, r18
    3856:	8a 81       	ldd	r24, Y+2	; 0x02
    3858:	9b 81       	ldd	r25, Y+3	; 0x03
    385a:	93 83       	std	Z+3, r25	; 0x03
    385c:	82 83       	std	Z+2, r24	; 0x02
    385e:	45 2b       	or	r20, r21
    3860:	29 f4       	brne	.+10     	; 0x386c <free+0xa2>
    3862:	f0 93 78 17 	sts	0x1778, r31
    3866:	e0 93 77 17 	sts	0x1777, r30
    386a:	42 c0       	rjmp	.+132    	; 0x38f0 <free+0x126>
    386c:	13 96       	adiw	r26, 0x03	; 3
    386e:	fc 93       	st	X, r31
    3870:	ee 93       	st	-X, r30
    3872:	12 97       	sbiw	r26, 0x02	; 2
    3874:	ed 01       	movw	r28, r26
    3876:	49 91       	ld	r20, Y+
    3878:	59 91       	ld	r21, Y+
    387a:	9e 01       	movw	r18, r28
    387c:	24 0f       	add	r18, r20
    387e:	35 1f       	adc	r19, r21
    3880:	e2 17       	cp	r30, r18
    3882:	f3 07       	cpc	r31, r19
    3884:	71 f4       	brne	.+28     	; 0x38a2 <free+0xd8>
    3886:	80 81       	ld	r24, Z
    3888:	91 81       	ldd	r25, Z+1	; 0x01
    388a:	84 0f       	add	r24, r20
    388c:	95 1f       	adc	r25, r21
    388e:	02 96       	adiw	r24, 0x02	; 2
    3890:	11 96       	adiw	r26, 0x01	; 1
    3892:	9c 93       	st	X, r25
    3894:	8e 93       	st	-X, r24
    3896:	82 81       	ldd	r24, Z+2	; 0x02
    3898:	93 81       	ldd	r25, Z+3	; 0x03
    389a:	13 96       	adiw	r26, 0x03	; 3
    389c:	9c 93       	st	X, r25
    389e:	8e 93       	st	-X, r24
    38a0:	12 97       	sbiw	r26, 0x02	; 2
    38a2:	e0 e0       	ldi	r30, 0x00	; 0
    38a4:	f0 e0       	ldi	r31, 0x00	; 0
    38a6:	d8 01       	movw	r26, r16
    38a8:	12 96       	adiw	r26, 0x02	; 2
    38aa:	8d 91       	ld	r24, X+
    38ac:	9c 91       	ld	r25, X
    38ae:	13 97       	sbiw	r26, 0x03	; 3
    38b0:	00 97       	sbiw	r24, 0x00	; 0
    38b2:	19 f0       	breq	.+6      	; 0x38ba <free+0xf0>
    38b4:	f8 01       	movw	r30, r16
    38b6:	8c 01       	movw	r16, r24
    38b8:	f6 cf       	rjmp	.-20     	; 0x38a6 <free+0xdc>
    38ba:	8d 91       	ld	r24, X+
    38bc:	9c 91       	ld	r25, X
    38be:	98 01       	movw	r18, r16
    38c0:	2e 5f       	subi	r18, 0xFE	; 254
    38c2:	3f 4f       	sbci	r19, 0xFF	; 255
    38c4:	82 0f       	add	r24, r18
    38c6:	93 1f       	adc	r25, r19
    38c8:	20 91 75 17 	lds	r18, 0x1775
    38cc:	30 91 76 17 	lds	r19, 0x1776
    38d0:	28 17       	cp	r18, r24
    38d2:	39 07       	cpc	r19, r25
    38d4:	69 f4       	brne	.+26     	; 0x38f0 <free+0x126>
    38d6:	30 97       	sbiw	r30, 0x00	; 0
    38d8:	29 f4       	brne	.+10     	; 0x38e4 <free+0x11a>
    38da:	10 92 78 17 	sts	0x1778, r1
    38de:	10 92 77 17 	sts	0x1777, r1
    38e2:	02 c0       	rjmp	.+4      	; 0x38e8 <free+0x11e>
    38e4:	13 82       	std	Z+3, r1	; 0x03
    38e6:	12 82       	std	Z+2, r1	; 0x02
    38e8:	10 93 76 17 	sts	0x1776, r17
    38ec:	00 93 75 17 	sts	0x1775, r16
    38f0:	df 91       	pop	r29
    38f2:	cf 91       	pop	r28
    38f4:	1f 91       	pop	r17
    38f6:	0f 91       	pop	r16
    38f8:	08 95       	ret

000038fa <strtok>:
    38fa:	4c e6       	ldi	r20, 0x6C	; 108
    38fc:	5a e0       	ldi	r21, 0x0A	; 10
    38fe:	47 c0       	rjmp	.+142    	; 0x398e <strtok_r>

00003900 <memcmp>:
    3900:	fb 01       	movw	r30, r22
    3902:	dc 01       	movw	r26, r24
    3904:	04 c0       	rjmp	.+8      	; 0x390e <memcmp+0xe>
    3906:	8d 91       	ld	r24, X+
    3908:	01 90       	ld	r0, Z+
    390a:	80 19       	sub	r24, r0
    390c:	21 f4       	brne	.+8      	; 0x3916 <memcmp+0x16>
    390e:	41 50       	subi	r20, 0x01	; 1
    3910:	50 40       	sbci	r21, 0x00	; 0
    3912:	c8 f7       	brcc	.-14     	; 0x3906 <memcmp+0x6>
    3914:	88 1b       	sub	r24, r24
    3916:	99 0b       	sbc	r25, r25
    3918:	08 95       	ret

0000391a <memcpy>:
    391a:	fb 01       	movw	r30, r22
    391c:	dc 01       	movw	r26, r24
    391e:	02 c0       	rjmp	.+4      	; 0x3924 <memcpy+0xa>
    3920:	01 90       	ld	r0, Z+
    3922:	0d 92       	st	X+, r0
    3924:	41 50       	subi	r20, 0x01	; 1
    3926:	50 40       	sbci	r21, 0x00	; 0
    3928:	d8 f7       	brcc	.-10     	; 0x3920 <memcpy+0x6>
    392a:	08 95       	ret

0000392c <strcmp>:
    392c:	fb 01       	movw	r30, r22
    392e:	dc 01       	movw	r26, r24
    3930:	8d 91       	ld	r24, X+
    3932:	01 90       	ld	r0, Z+
    3934:	80 19       	sub	r24, r0
    3936:	01 10       	cpse	r0, r1
    3938:	d9 f3       	breq	.-10     	; 0x3930 <strcmp+0x4>
    393a:	99 0b       	sbc	r25, r25
    393c:	08 95       	ret

0000393e <strncmp>:
    393e:	fb 01       	movw	r30, r22
    3940:	dc 01       	movw	r26, r24
    3942:	41 50       	subi	r20, 0x01	; 1
    3944:	50 40       	sbci	r21, 0x00	; 0
    3946:	30 f0       	brcs	.+12     	; 0x3954 <strncmp+0x16>
    3948:	8d 91       	ld	r24, X+
    394a:	01 90       	ld	r0, Z+
    394c:	80 19       	sub	r24, r0
    394e:	19 f4       	brne	.+6      	; 0x3956 <strncmp+0x18>
    3950:	00 20       	and	r0, r0
    3952:	b9 f7       	brne	.-18     	; 0x3942 <strncmp+0x4>
    3954:	88 1b       	sub	r24, r24
    3956:	99 0b       	sbc	r25, r25
    3958:	08 95       	ret

0000395a <strstr>:
    395a:	fb 01       	movw	r30, r22
    395c:	51 91       	ld	r21, Z+
    395e:	55 23       	and	r21, r21
    3960:	a9 f0       	breq	.+42     	; 0x398c <strstr+0x32>
    3962:	bf 01       	movw	r22, r30
    3964:	dc 01       	movw	r26, r24
    3966:	4d 91       	ld	r20, X+
    3968:	45 17       	cp	r20, r21
    396a:	41 11       	cpse	r20, r1
    396c:	e1 f7       	brne	.-8      	; 0x3966 <strstr+0xc>
    396e:	59 f4       	brne	.+22     	; 0x3986 <strstr+0x2c>
    3970:	cd 01       	movw	r24, r26
    3972:	01 90       	ld	r0, Z+
    3974:	00 20       	and	r0, r0
    3976:	49 f0       	breq	.+18     	; 0x398a <strstr+0x30>
    3978:	4d 91       	ld	r20, X+
    397a:	40 15       	cp	r20, r0
    397c:	41 11       	cpse	r20, r1
    397e:	c9 f3       	breq	.-14     	; 0x3972 <strstr+0x18>
    3980:	fb 01       	movw	r30, r22
    3982:	41 11       	cpse	r20, r1
    3984:	ef cf       	rjmp	.-34     	; 0x3964 <strstr+0xa>
    3986:	81 e0       	ldi	r24, 0x01	; 1
    3988:	90 e0       	ldi	r25, 0x00	; 0
    398a:	01 97       	sbiw	r24, 0x01	; 1
    398c:	08 95       	ret

0000398e <strtok_r>:
    398e:	fa 01       	movw	r30, r20
    3990:	a1 91       	ld	r26, Z+
    3992:	b0 81       	ld	r27, Z
    3994:	00 97       	sbiw	r24, 0x00	; 0
    3996:	19 f4       	brne	.+6      	; 0x399e <strtok_r+0x10>
    3998:	10 97       	sbiw	r26, 0x00	; 0
    399a:	e1 f0       	breq	.+56     	; 0x39d4 <strtok_r+0x46>
    399c:	cd 01       	movw	r24, r26
    399e:	dc 01       	movw	r26, r24
    39a0:	cd 01       	movw	r24, r26
    39a2:	0d 90       	ld	r0, X+
    39a4:	00 20       	and	r0, r0
    39a6:	11 f4       	brne	.+4      	; 0x39ac <strtok_r+0x1e>
    39a8:	c0 01       	movw	r24, r0
    39aa:	13 c0       	rjmp	.+38     	; 0x39d2 <strtok_r+0x44>
    39ac:	fb 01       	movw	r30, r22
    39ae:	21 91       	ld	r18, Z+
    39b0:	22 23       	and	r18, r18
    39b2:	19 f0       	breq	.+6      	; 0x39ba <strtok_r+0x2c>
    39b4:	20 15       	cp	r18, r0
    39b6:	d9 f7       	brne	.-10     	; 0x39ae <strtok_r+0x20>
    39b8:	f3 cf       	rjmp	.-26     	; 0x39a0 <strtok_r+0x12>
    39ba:	fb 01       	movw	r30, r22
    39bc:	21 91       	ld	r18, Z+
    39be:	20 15       	cp	r18, r0
    39c0:	19 f4       	brne	.+6      	; 0x39c8 <strtok_r+0x3a>
    39c2:	1e 92       	st	-X, r1
    39c4:	11 96       	adiw	r26, 0x01	; 1
    39c6:	06 c0       	rjmp	.+12     	; 0x39d4 <strtok_r+0x46>
    39c8:	22 23       	and	r18, r18
    39ca:	c1 f7       	brne	.-16     	; 0x39bc <strtok_r+0x2e>
    39cc:	0d 90       	ld	r0, X+
    39ce:	00 20       	and	r0, r0
    39d0:	a1 f7       	brne	.-24     	; 0x39ba <strtok_r+0x2c>
    39d2:	d0 01       	movw	r26, r0
    39d4:	fa 01       	movw	r30, r20
    39d6:	a1 93       	st	Z+, r26
    39d8:	b0 83       	st	Z, r27
    39da:	08 95       	ret

000039dc <printf>:
    39dc:	cf 93       	push	r28
    39de:	df 93       	push	r29
    39e0:	cd b7       	in	r28, 0x3d	; 61
    39e2:	de b7       	in	r29, 0x3e	; 62
    39e4:	ae 01       	movw	r20, r28
    39e6:	4a 5f       	subi	r20, 0xFA	; 250
    39e8:	5f 4f       	sbci	r21, 0xFF	; 255
    39ea:	fa 01       	movw	r30, r20
    39ec:	61 91       	ld	r22, Z+
    39ee:	71 91       	ld	r23, Z+
    39f0:	af 01       	movw	r20, r30
    39f2:	80 91 7b 17 	lds	r24, 0x177B
    39f6:	90 91 7c 17 	lds	r25, 0x177C
    39fa:	62 d0       	rcall	.+196    	; 0x3ac0 <vfprintf>
    39fc:	df 91       	pop	r29
    39fe:	cf 91       	pop	r28
    3a00:	08 95       	ret

00003a02 <puts>:
    3a02:	0f 93       	push	r16
    3a04:	1f 93       	push	r17
    3a06:	cf 93       	push	r28
    3a08:	df 93       	push	r29
    3a0a:	e0 91 7b 17 	lds	r30, 0x177B
    3a0e:	f0 91 7c 17 	lds	r31, 0x177C
    3a12:	23 81       	ldd	r18, Z+3	; 0x03
    3a14:	21 ff       	sbrs	r18, 1
    3a16:	1b c0       	rjmp	.+54     	; 0x3a4e <puts+0x4c>
    3a18:	8c 01       	movw	r16, r24
    3a1a:	d0 e0       	ldi	r29, 0x00	; 0
    3a1c:	c0 e0       	ldi	r28, 0x00	; 0
    3a1e:	f8 01       	movw	r30, r16
    3a20:	81 91       	ld	r24, Z+
    3a22:	8f 01       	movw	r16, r30
    3a24:	60 91 7b 17 	lds	r22, 0x177B
    3a28:	70 91 7c 17 	lds	r23, 0x177C
    3a2c:	db 01       	movw	r26, r22
    3a2e:	18 96       	adiw	r26, 0x08	; 8
    3a30:	ed 91       	ld	r30, X+
    3a32:	fc 91       	ld	r31, X
    3a34:	19 97       	sbiw	r26, 0x09	; 9
    3a36:	88 23       	and	r24, r24
    3a38:	31 f0       	breq	.+12     	; 0x3a46 <puts+0x44>
    3a3a:	19 95       	eicall
    3a3c:	89 2b       	or	r24, r25
    3a3e:	79 f3       	breq	.-34     	; 0x3a1e <puts+0x1c>
    3a40:	df ef       	ldi	r29, 0xFF	; 255
    3a42:	cf ef       	ldi	r28, 0xFF	; 255
    3a44:	ec cf       	rjmp	.-40     	; 0x3a1e <puts+0x1c>
    3a46:	8a e0       	ldi	r24, 0x0A	; 10
    3a48:	19 95       	eicall
    3a4a:	89 2b       	or	r24, r25
    3a4c:	19 f0       	breq	.+6      	; 0x3a54 <puts+0x52>
    3a4e:	8f ef       	ldi	r24, 0xFF	; 255
    3a50:	9f ef       	ldi	r25, 0xFF	; 255
    3a52:	02 c0       	rjmp	.+4      	; 0x3a58 <puts+0x56>
    3a54:	8d 2f       	mov	r24, r29
    3a56:	9c 2f       	mov	r25, r28
    3a58:	df 91       	pop	r29
    3a5a:	cf 91       	pop	r28
    3a5c:	1f 91       	pop	r17
    3a5e:	0f 91       	pop	r16
    3a60:	08 95       	ret

00003a62 <sprintf>:
    3a62:	0f 93       	push	r16
    3a64:	1f 93       	push	r17
    3a66:	cf 93       	push	r28
    3a68:	df 93       	push	r29
    3a6a:	cd b7       	in	r28, 0x3d	; 61
    3a6c:	de b7       	in	r29, 0x3e	; 62
    3a6e:	2e 97       	sbiw	r28, 0x0e	; 14
    3a70:	0f b6       	in	r0, 0x3f	; 63
    3a72:	f8 94       	cli
    3a74:	de bf       	out	0x3e, r29	; 62
    3a76:	0f be       	out	0x3f, r0	; 63
    3a78:	cd bf       	out	0x3d, r28	; 61
    3a7a:	0e 89       	ldd	r16, Y+22	; 0x16
    3a7c:	1f 89       	ldd	r17, Y+23	; 0x17
    3a7e:	86 e0       	ldi	r24, 0x06	; 6
    3a80:	8c 83       	std	Y+4, r24	; 0x04
    3a82:	1a 83       	std	Y+2, r17	; 0x02
    3a84:	09 83       	std	Y+1, r16	; 0x01
    3a86:	8f ef       	ldi	r24, 0xFF	; 255
    3a88:	9f e7       	ldi	r25, 0x7F	; 127
    3a8a:	9e 83       	std	Y+6, r25	; 0x06
    3a8c:	8d 83       	std	Y+5, r24	; 0x05
    3a8e:	ae 01       	movw	r20, r28
    3a90:	46 5e       	subi	r20, 0xE6	; 230
    3a92:	5f 4f       	sbci	r21, 0xFF	; 255
    3a94:	68 8d       	ldd	r22, Y+24	; 0x18
    3a96:	79 8d       	ldd	r23, Y+25	; 0x19
    3a98:	ce 01       	movw	r24, r28
    3a9a:	01 96       	adiw	r24, 0x01	; 1
    3a9c:	11 d0       	rcall	.+34     	; 0x3ac0 <vfprintf>
    3a9e:	2f 81       	ldd	r18, Y+7	; 0x07
    3aa0:	38 85       	ldd	r19, Y+8	; 0x08
    3aa2:	f8 01       	movw	r30, r16
    3aa4:	e2 0f       	add	r30, r18
    3aa6:	f3 1f       	adc	r31, r19
    3aa8:	10 82       	st	Z, r1
    3aaa:	2e 96       	adiw	r28, 0x0e	; 14
    3aac:	0f b6       	in	r0, 0x3f	; 63
    3aae:	f8 94       	cli
    3ab0:	de bf       	out	0x3e, r29	; 62
    3ab2:	0f be       	out	0x3f, r0	; 63
    3ab4:	cd bf       	out	0x3d, r28	; 61
    3ab6:	df 91       	pop	r29
    3ab8:	cf 91       	pop	r28
    3aba:	1f 91       	pop	r17
    3abc:	0f 91       	pop	r16
    3abe:	08 95       	ret

00003ac0 <vfprintf>:
    3ac0:	2f 92       	push	r2
    3ac2:	3f 92       	push	r3
    3ac4:	4f 92       	push	r4
    3ac6:	5f 92       	push	r5
    3ac8:	6f 92       	push	r6
    3aca:	7f 92       	push	r7
    3acc:	8f 92       	push	r8
    3ace:	9f 92       	push	r9
    3ad0:	af 92       	push	r10
    3ad2:	bf 92       	push	r11
    3ad4:	cf 92       	push	r12
    3ad6:	df 92       	push	r13
    3ad8:	ef 92       	push	r14
    3ada:	ff 92       	push	r15
    3adc:	0f 93       	push	r16
    3ade:	1f 93       	push	r17
    3ae0:	cf 93       	push	r28
    3ae2:	df 93       	push	r29
    3ae4:	cd b7       	in	r28, 0x3d	; 61
    3ae6:	de b7       	in	r29, 0x3e	; 62
    3ae8:	2c 97       	sbiw	r28, 0x0c	; 12
    3aea:	0f b6       	in	r0, 0x3f	; 63
    3aec:	f8 94       	cli
    3aee:	de bf       	out	0x3e, r29	; 62
    3af0:	0f be       	out	0x3f, r0	; 63
    3af2:	cd bf       	out	0x3d, r28	; 61
    3af4:	7c 01       	movw	r14, r24
    3af6:	6b 01       	movw	r12, r22
    3af8:	8a 01       	movw	r16, r20
    3afa:	fc 01       	movw	r30, r24
    3afc:	17 82       	std	Z+7, r1	; 0x07
    3afe:	16 82       	std	Z+6, r1	; 0x06
    3b00:	83 81       	ldd	r24, Z+3	; 0x03
    3b02:	81 ff       	sbrs	r24, 1
    3b04:	b0 c1       	rjmp	.+864    	; 0x3e66 <vfprintf+0x3a6>
    3b06:	ce 01       	movw	r24, r28
    3b08:	01 96       	adiw	r24, 0x01	; 1
    3b0a:	4c 01       	movw	r8, r24
    3b0c:	f7 01       	movw	r30, r14
    3b0e:	93 81       	ldd	r25, Z+3	; 0x03
    3b10:	f6 01       	movw	r30, r12
    3b12:	93 fd       	sbrc	r25, 3
    3b14:	85 91       	lpm	r24, Z+
    3b16:	93 ff       	sbrs	r25, 3
    3b18:	81 91       	ld	r24, Z+
    3b1a:	6f 01       	movw	r12, r30
    3b1c:	88 23       	and	r24, r24
    3b1e:	09 f4       	brne	.+2      	; 0x3b22 <vfprintf+0x62>
    3b20:	9e c1       	rjmp	.+828    	; 0x3e5e <vfprintf+0x39e>
    3b22:	85 32       	cpi	r24, 0x25	; 37
    3b24:	39 f4       	brne	.+14     	; 0x3b34 <vfprintf+0x74>
    3b26:	93 fd       	sbrc	r25, 3
    3b28:	85 91       	lpm	r24, Z+
    3b2a:	93 ff       	sbrs	r25, 3
    3b2c:	81 91       	ld	r24, Z+
    3b2e:	6f 01       	movw	r12, r30
    3b30:	85 32       	cpi	r24, 0x25	; 37
    3b32:	21 f4       	brne	.+8      	; 0x3b3c <vfprintf+0x7c>
    3b34:	b7 01       	movw	r22, r14
    3b36:	90 e0       	ldi	r25, 0x00	; 0
    3b38:	c7 d1       	rcall	.+910    	; 0x3ec8 <fputc>
    3b3a:	e8 cf       	rjmp	.-48     	; 0x3b0c <vfprintf+0x4c>
    3b3c:	51 2c       	mov	r5, r1
    3b3e:	31 2c       	mov	r3, r1
    3b40:	20 e0       	ldi	r18, 0x00	; 0
    3b42:	20 32       	cpi	r18, 0x20	; 32
    3b44:	a0 f4       	brcc	.+40     	; 0x3b6e <vfprintf+0xae>
    3b46:	8b 32       	cpi	r24, 0x2B	; 43
    3b48:	69 f0       	breq	.+26     	; 0x3b64 <vfprintf+0xa4>
    3b4a:	30 f4       	brcc	.+12     	; 0x3b58 <vfprintf+0x98>
    3b4c:	80 32       	cpi	r24, 0x20	; 32
    3b4e:	59 f0       	breq	.+22     	; 0x3b66 <vfprintf+0xa6>
    3b50:	83 32       	cpi	r24, 0x23	; 35
    3b52:	69 f4       	brne	.+26     	; 0x3b6e <vfprintf+0xae>
    3b54:	20 61       	ori	r18, 0x10	; 16
    3b56:	2c c0       	rjmp	.+88     	; 0x3bb0 <vfprintf+0xf0>
    3b58:	8d 32       	cpi	r24, 0x2D	; 45
    3b5a:	39 f0       	breq	.+14     	; 0x3b6a <vfprintf+0xaa>
    3b5c:	80 33       	cpi	r24, 0x30	; 48
    3b5e:	39 f4       	brne	.+14     	; 0x3b6e <vfprintf+0xae>
    3b60:	21 60       	ori	r18, 0x01	; 1
    3b62:	26 c0       	rjmp	.+76     	; 0x3bb0 <vfprintf+0xf0>
    3b64:	22 60       	ori	r18, 0x02	; 2
    3b66:	24 60       	ori	r18, 0x04	; 4
    3b68:	23 c0       	rjmp	.+70     	; 0x3bb0 <vfprintf+0xf0>
    3b6a:	28 60       	ori	r18, 0x08	; 8
    3b6c:	21 c0       	rjmp	.+66     	; 0x3bb0 <vfprintf+0xf0>
    3b6e:	27 fd       	sbrc	r18, 7
    3b70:	27 c0       	rjmp	.+78     	; 0x3bc0 <vfprintf+0x100>
    3b72:	30 ed       	ldi	r19, 0xD0	; 208
    3b74:	38 0f       	add	r19, r24
    3b76:	3a 30       	cpi	r19, 0x0A	; 10
    3b78:	78 f4       	brcc	.+30     	; 0x3b98 <vfprintf+0xd8>
    3b7a:	26 ff       	sbrs	r18, 6
    3b7c:	06 c0       	rjmp	.+12     	; 0x3b8a <vfprintf+0xca>
    3b7e:	fa e0       	ldi	r31, 0x0A	; 10
    3b80:	5f 9e       	mul	r5, r31
    3b82:	30 0d       	add	r19, r0
    3b84:	11 24       	eor	r1, r1
    3b86:	53 2e       	mov	r5, r19
    3b88:	13 c0       	rjmp	.+38     	; 0x3bb0 <vfprintf+0xf0>
    3b8a:	8a e0       	ldi	r24, 0x0A	; 10
    3b8c:	38 9e       	mul	r3, r24
    3b8e:	30 0d       	add	r19, r0
    3b90:	11 24       	eor	r1, r1
    3b92:	33 2e       	mov	r3, r19
    3b94:	20 62       	ori	r18, 0x20	; 32
    3b96:	0c c0       	rjmp	.+24     	; 0x3bb0 <vfprintf+0xf0>
    3b98:	8e 32       	cpi	r24, 0x2E	; 46
    3b9a:	21 f4       	brne	.+8      	; 0x3ba4 <vfprintf+0xe4>
    3b9c:	26 fd       	sbrc	r18, 6
    3b9e:	5f c1       	rjmp	.+702    	; 0x3e5e <vfprintf+0x39e>
    3ba0:	20 64       	ori	r18, 0x40	; 64
    3ba2:	06 c0       	rjmp	.+12     	; 0x3bb0 <vfprintf+0xf0>
    3ba4:	8c 36       	cpi	r24, 0x6C	; 108
    3ba6:	11 f4       	brne	.+4      	; 0x3bac <vfprintf+0xec>
    3ba8:	20 68       	ori	r18, 0x80	; 128
    3baa:	02 c0       	rjmp	.+4      	; 0x3bb0 <vfprintf+0xf0>
    3bac:	88 36       	cpi	r24, 0x68	; 104
    3bae:	41 f4       	brne	.+16     	; 0x3bc0 <vfprintf+0x100>
    3bb0:	f6 01       	movw	r30, r12
    3bb2:	93 fd       	sbrc	r25, 3
    3bb4:	85 91       	lpm	r24, Z+
    3bb6:	93 ff       	sbrs	r25, 3
    3bb8:	81 91       	ld	r24, Z+
    3bba:	6f 01       	movw	r12, r30
    3bbc:	81 11       	cpse	r24, r1
    3bbe:	c1 cf       	rjmp	.-126    	; 0x3b42 <vfprintf+0x82>
    3bc0:	98 2f       	mov	r25, r24
    3bc2:	9f 7d       	andi	r25, 0xDF	; 223
    3bc4:	95 54       	subi	r25, 0x45	; 69
    3bc6:	93 30       	cpi	r25, 0x03	; 3
    3bc8:	28 f4       	brcc	.+10     	; 0x3bd4 <vfprintf+0x114>
    3bca:	0c 5f       	subi	r16, 0xFC	; 252
    3bcc:	1f 4f       	sbci	r17, 0xFF	; 255
    3bce:	ff e3       	ldi	r31, 0x3F	; 63
    3bd0:	f9 83       	std	Y+1, r31	; 0x01
    3bd2:	0d c0       	rjmp	.+26     	; 0x3bee <vfprintf+0x12e>
    3bd4:	83 36       	cpi	r24, 0x63	; 99
    3bd6:	31 f0       	breq	.+12     	; 0x3be4 <vfprintf+0x124>
    3bd8:	83 37       	cpi	r24, 0x73	; 115
    3bda:	71 f0       	breq	.+28     	; 0x3bf8 <vfprintf+0x138>
    3bdc:	83 35       	cpi	r24, 0x53	; 83
    3bde:	09 f0       	breq	.+2      	; 0x3be2 <vfprintf+0x122>
    3be0:	57 c0       	rjmp	.+174    	; 0x3c90 <vfprintf+0x1d0>
    3be2:	21 c0       	rjmp	.+66     	; 0x3c26 <vfprintf+0x166>
    3be4:	f8 01       	movw	r30, r16
    3be6:	80 81       	ld	r24, Z
    3be8:	89 83       	std	Y+1, r24	; 0x01
    3bea:	0e 5f       	subi	r16, 0xFE	; 254
    3bec:	1f 4f       	sbci	r17, 0xFF	; 255
    3bee:	44 24       	eor	r4, r4
    3bf0:	43 94       	inc	r4
    3bf2:	51 2c       	mov	r5, r1
    3bf4:	54 01       	movw	r10, r8
    3bf6:	14 c0       	rjmp	.+40     	; 0x3c20 <vfprintf+0x160>
    3bf8:	38 01       	movw	r6, r16
    3bfa:	f2 e0       	ldi	r31, 0x02	; 2
    3bfc:	6f 0e       	add	r6, r31
    3bfe:	71 1c       	adc	r7, r1
    3c00:	f8 01       	movw	r30, r16
    3c02:	a0 80       	ld	r10, Z
    3c04:	b1 80       	ldd	r11, Z+1	; 0x01
    3c06:	26 ff       	sbrs	r18, 6
    3c08:	03 c0       	rjmp	.+6      	; 0x3c10 <vfprintf+0x150>
    3c0a:	65 2d       	mov	r22, r5
    3c0c:	70 e0       	ldi	r23, 0x00	; 0
    3c0e:	02 c0       	rjmp	.+4      	; 0x3c14 <vfprintf+0x154>
    3c10:	6f ef       	ldi	r22, 0xFF	; 255
    3c12:	7f ef       	ldi	r23, 0xFF	; 255
    3c14:	c5 01       	movw	r24, r10
    3c16:	2c 87       	std	Y+12, r18	; 0x0c
    3c18:	4c d1       	rcall	.+664    	; 0x3eb2 <strnlen>
    3c1a:	2c 01       	movw	r4, r24
    3c1c:	83 01       	movw	r16, r6
    3c1e:	2c 85       	ldd	r18, Y+12	; 0x0c
    3c20:	2f 77       	andi	r18, 0x7F	; 127
    3c22:	22 2e       	mov	r2, r18
    3c24:	16 c0       	rjmp	.+44     	; 0x3c52 <vfprintf+0x192>
    3c26:	38 01       	movw	r6, r16
    3c28:	f2 e0       	ldi	r31, 0x02	; 2
    3c2a:	6f 0e       	add	r6, r31
    3c2c:	71 1c       	adc	r7, r1
    3c2e:	f8 01       	movw	r30, r16
    3c30:	a0 80       	ld	r10, Z
    3c32:	b1 80       	ldd	r11, Z+1	; 0x01
    3c34:	26 ff       	sbrs	r18, 6
    3c36:	03 c0       	rjmp	.+6      	; 0x3c3e <vfprintf+0x17e>
    3c38:	65 2d       	mov	r22, r5
    3c3a:	70 e0       	ldi	r23, 0x00	; 0
    3c3c:	02 c0       	rjmp	.+4      	; 0x3c42 <vfprintf+0x182>
    3c3e:	6f ef       	ldi	r22, 0xFF	; 255
    3c40:	7f ef       	ldi	r23, 0xFF	; 255
    3c42:	c5 01       	movw	r24, r10
    3c44:	2c 87       	std	Y+12, r18	; 0x0c
    3c46:	2a d1       	rcall	.+596    	; 0x3e9c <strnlen_P>
    3c48:	2c 01       	movw	r4, r24
    3c4a:	2c 85       	ldd	r18, Y+12	; 0x0c
    3c4c:	20 68       	ori	r18, 0x80	; 128
    3c4e:	22 2e       	mov	r2, r18
    3c50:	83 01       	movw	r16, r6
    3c52:	23 fc       	sbrc	r2, 3
    3c54:	19 c0       	rjmp	.+50     	; 0x3c88 <vfprintf+0x1c8>
    3c56:	83 2d       	mov	r24, r3
    3c58:	90 e0       	ldi	r25, 0x00	; 0
    3c5a:	48 16       	cp	r4, r24
    3c5c:	59 06       	cpc	r5, r25
    3c5e:	a0 f4       	brcc	.+40     	; 0x3c88 <vfprintf+0x1c8>
    3c60:	b7 01       	movw	r22, r14
    3c62:	80 e2       	ldi	r24, 0x20	; 32
    3c64:	90 e0       	ldi	r25, 0x00	; 0
    3c66:	30 d1       	rcall	.+608    	; 0x3ec8 <fputc>
    3c68:	3a 94       	dec	r3
    3c6a:	f5 cf       	rjmp	.-22     	; 0x3c56 <vfprintf+0x196>
    3c6c:	f5 01       	movw	r30, r10
    3c6e:	27 fc       	sbrc	r2, 7
    3c70:	85 91       	lpm	r24, Z+
    3c72:	27 fe       	sbrs	r2, 7
    3c74:	81 91       	ld	r24, Z+
    3c76:	5f 01       	movw	r10, r30
    3c78:	b7 01       	movw	r22, r14
    3c7a:	90 e0       	ldi	r25, 0x00	; 0
    3c7c:	25 d1       	rcall	.+586    	; 0x3ec8 <fputc>
    3c7e:	31 10       	cpse	r3, r1
    3c80:	3a 94       	dec	r3
    3c82:	f1 e0       	ldi	r31, 0x01	; 1
    3c84:	4f 1a       	sub	r4, r31
    3c86:	51 08       	sbc	r5, r1
    3c88:	41 14       	cp	r4, r1
    3c8a:	51 04       	cpc	r5, r1
    3c8c:	79 f7       	brne	.-34     	; 0x3c6c <vfprintf+0x1ac>
    3c8e:	de c0       	rjmp	.+444    	; 0x3e4c <vfprintf+0x38c>
    3c90:	84 36       	cpi	r24, 0x64	; 100
    3c92:	11 f0       	breq	.+4      	; 0x3c98 <vfprintf+0x1d8>
    3c94:	89 36       	cpi	r24, 0x69	; 105
    3c96:	31 f5       	brne	.+76     	; 0x3ce4 <vfprintf+0x224>
    3c98:	f8 01       	movw	r30, r16
    3c9a:	27 ff       	sbrs	r18, 7
    3c9c:	07 c0       	rjmp	.+14     	; 0x3cac <vfprintf+0x1ec>
    3c9e:	60 81       	ld	r22, Z
    3ca0:	71 81       	ldd	r23, Z+1	; 0x01
    3ca2:	82 81       	ldd	r24, Z+2	; 0x02
    3ca4:	93 81       	ldd	r25, Z+3	; 0x03
    3ca6:	0c 5f       	subi	r16, 0xFC	; 252
    3ca8:	1f 4f       	sbci	r17, 0xFF	; 255
    3caa:	08 c0       	rjmp	.+16     	; 0x3cbc <vfprintf+0x1fc>
    3cac:	60 81       	ld	r22, Z
    3cae:	71 81       	ldd	r23, Z+1	; 0x01
    3cb0:	07 2e       	mov	r0, r23
    3cb2:	00 0c       	add	r0, r0
    3cb4:	88 0b       	sbc	r24, r24
    3cb6:	99 0b       	sbc	r25, r25
    3cb8:	0e 5f       	subi	r16, 0xFE	; 254
    3cba:	1f 4f       	sbci	r17, 0xFF	; 255
    3cbc:	2f 76       	andi	r18, 0x6F	; 111
    3cbe:	72 2e       	mov	r7, r18
    3cc0:	97 ff       	sbrs	r25, 7
    3cc2:	09 c0       	rjmp	.+18     	; 0x3cd6 <vfprintf+0x216>
    3cc4:	90 95       	com	r25
    3cc6:	80 95       	com	r24
    3cc8:	70 95       	com	r23
    3cca:	61 95       	neg	r22
    3ccc:	7f 4f       	sbci	r23, 0xFF	; 255
    3cce:	8f 4f       	sbci	r24, 0xFF	; 255
    3cd0:	9f 4f       	sbci	r25, 0xFF	; 255
    3cd2:	20 68       	ori	r18, 0x80	; 128
    3cd4:	72 2e       	mov	r7, r18
    3cd6:	2a e0       	ldi	r18, 0x0A	; 10
    3cd8:	30 e0       	ldi	r19, 0x00	; 0
    3cda:	a4 01       	movw	r20, r8
    3cdc:	2d d1       	rcall	.+602    	; 0x3f38 <__ultoa_invert>
    3cde:	a8 2e       	mov	r10, r24
    3ce0:	a8 18       	sub	r10, r8
    3ce2:	43 c0       	rjmp	.+134    	; 0x3d6a <vfprintf+0x2aa>
    3ce4:	85 37       	cpi	r24, 0x75	; 117
    3ce6:	29 f4       	brne	.+10     	; 0x3cf2 <vfprintf+0x232>
    3ce8:	2f 7e       	andi	r18, 0xEF	; 239
    3cea:	b2 2e       	mov	r11, r18
    3cec:	2a e0       	ldi	r18, 0x0A	; 10
    3cee:	30 e0       	ldi	r19, 0x00	; 0
    3cf0:	25 c0       	rjmp	.+74     	; 0x3d3c <vfprintf+0x27c>
    3cf2:	f2 2f       	mov	r31, r18
    3cf4:	f9 7f       	andi	r31, 0xF9	; 249
    3cf6:	bf 2e       	mov	r11, r31
    3cf8:	8f 36       	cpi	r24, 0x6F	; 111
    3cfa:	c1 f0       	breq	.+48     	; 0x3d2c <vfprintf+0x26c>
    3cfc:	18 f4       	brcc	.+6      	; 0x3d04 <vfprintf+0x244>
    3cfe:	88 35       	cpi	r24, 0x58	; 88
    3d00:	79 f0       	breq	.+30     	; 0x3d20 <vfprintf+0x260>
    3d02:	ad c0       	rjmp	.+346    	; 0x3e5e <vfprintf+0x39e>
    3d04:	80 37       	cpi	r24, 0x70	; 112
    3d06:	19 f0       	breq	.+6      	; 0x3d0e <vfprintf+0x24e>
    3d08:	88 37       	cpi	r24, 0x78	; 120
    3d0a:	21 f0       	breq	.+8      	; 0x3d14 <vfprintf+0x254>
    3d0c:	a8 c0       	rjmp	.+336    	; 0x3e5e <vfprintf+0x39e>
    3d0e:	2f 2f       	mov	r18, r31
    3d10:	20 61       	ori	r18, 0x10	; 16
    3d12:	b2 2e       	mov	r11, r18
    3d14:	b4 fe       	sbrs	r11, 4
    3d16:	0d c0       	rjmp	.+26     	; 0x3d32 <vfprintf+0x272>
    3d18:	8b 2d       	mov	r24, r11
    3d1a:	84 60       	ori	r24, 0x04	; 4
    3d1c:	b8 2e       	mov	r11, r24
    3d1e:	09 c0       	rjmp	.+18     	; 0x3d32 <vfprintf+0x272>
    3d20:	24 ff       	sbrs	r18, 4
    3d22:	0a c0       	rjmp	.+20     	; 0x3d38 <vfprintf+0x278>
    3d24:	9f 2f       	mov	r25, r31
    3d26:	96 60       	ori	r25, 0x06	; 6
    3d28:	b9 2e       	mov	r11, r25
    3d2a:	06 c0       	rjmp	.+12     	; 0x3d38 <vfprintf+0x278>
    3d2c:	28 e0       	ldi	r18, 0x08	; 8
    3d2e:	30 e0       	ldi	r19, 0x00	; 0
    3d30:	05 c0       	rjmp	.+10     	; 0x3d3c <vfprintf+0x27c>
    3d32:	20 e1       	ldi	r18, 0x10	; 16
    3d34:	30 e0       	ldi	r19, 0x00	; 0
    3d36:	02 c0       	rjmp	.+4      	; 0x3d3c <vfprintf+0x27c>
    3d38:	20 e1       	ldi	r18, 0x10	; 16
    3d3a:	32 e0       	ldi	r19, 0x02	; 2
    3d3c:	f8 01       	movw	r30, r16
    3d3e:	b7 fe       	sbrs	r11, 7
    3d40:	07 c0       	rjmp	.+14     	; 0x3d50 <vfprintf+0x290>
    3d42:	60 81       	ld	r22, Z
    3d44:	71 81       	ldd	r23, Z+1	; 0x01
    3d46:	82 81       	ldd	r24, Z+2	; 0x02
    3d48:	93 81       	ldd	r25, Z+3	; 0x03
    3d4a:	0c 5f       	subi	r16, 0xFC	; 252
    3d4c:	1f 4f       	sbci	r17, 0xFF	; 255
    3d4e:	06 c0       	rjmp	.+12     	; 0x3d5c <vfprintf+0x29c>
    3d50:	60 81       	ld	r22, Z
    3d52:	71 81       	ldd	r23, Z+1	; 0x01
    3d54:	80 e0       	ldi	r24, 0x00	; 0
    3d56:	90 e0       	ldi	r25, 0x00	; 0
    3d58:	0e 5f       	subi	r16, 0xFE	; 254
    3d5a:	1f 4f       	sbci	r17, 0xFF	; 255
    3d5c:	a4 01       	movw	r20, r8
    3d5e:	ec d0       	rcall	.+472    	; 0x3f38 <__ultoa_invert>
    3d60:	a8 2e       	mov	r10, r24
    3d62:	a8 18       	sub	r10, r8
    3d64:	fb 2d       	mov	r31, r11
    3d66:	ff 77       	andi	r31, 0x7F	; 127
    3d68:	7f 2e       	mov	r7, r31
    3d6a:	76 fe       	sbrs	r7, 6
    3d6c:	0b c0       	rjmp	.+22     	; 0x3d84 <vfprintf+0x2c4>
    3d6e:	37 2d       	mov	r19, r7
    3d70:	3e 7f       	andi	r19, 0xFE	; 254
    3d72:	a5 14       	cp	r10, r5
    3d74:	50 f4       	brcc	.+20     	; 0x3d8a <vfprintf+0x2ca>
    3d76:	74 fe       	sbrs	r7, 4
    3d78:	0a c0       	rjmp	.+20     	; 0x3d8e <vfprintf+0x2ce>
    3d7a:	72 fc       	sbrc	r7, 2
    3d7c:	08 c0       	rjmp	.+16     	; 0x3d8e <vfprintf+0x2ce>
    3d7e:	37 2d       	mov	r19, r7
    3d80:	3e 7e       	andi	r19, 0xEE	; 238
    3d82:	05 c0       	rjmp	.+10     	; 0x3d8e <vfprintf+0x2ce>
    3d84:	ba 2c       	mov	r11, r10
    3d86:	37 2d       	mov	r19, r7
    3d88:	03 c0       	rjmp	.+6      	; 0x3d90 <vfprintf+0x2d0>
    3d8a:	ba 2c       	mov	r11, r10
    3d8c:	01 c0       	rjmp	.+2      	; 0x3d90 <vfprintf+0x2d0>
    3d8e:	b5 2c       	mov	r11, r5
    3d90:	34 ff       	sbrs	r19, 4
    3d92:	0d c0       	rjmp	.+26     	; 0x3dae <vfprintf+0x2ee>
    3d94:	fe 01       	movw	r30, r28
    3d96:	ea 0d       	add	r30, r10
    3d98:	f1 1d       	adc	r31, r1
    3d9a:	80 81       	ld	r24, Z
    3d9c:	80 33       	cpi	r24, 0x30	; 48
    3d9e:	11 f4       	brne	.+4      	; 0x3da4 <vfprintf+0x2e4>
    3da0:	39 7e       	andi	r19, 0xE9	; 233
    3da2:	09 c0       	rjmp	.+18     	; 0x3db6 <vfprintf+0x2f6>
    3da4:	32 ff       	sbrs	r19, 2
    3da6:	06 c0       	rjmp	.+12     	; 0x3db4 <vfprintf+0x2f4>
    3da8:	b3 94       	inc	r11
    3daa:	b3 94       	inc	r11
    3dac:	04 c0       	rjmp	.+8      	; 0x3db6 <vfprintf+0x2f6>
    3dae:	83 2f       	mov	r24, r19
    3db0:	86 78       	andi	r24, 0x86	; 134
    3db2:	09 f0       	breq	.+2      	; 0x3db6 <vfprintf+0x2f6>
    3db4:	b3 94       	inc	r11
    3db6:	33 fd       	sbrc	r19, 3
    3db8:	12 c0       	rjmp	.+36     	; 0x3dde <vfprintf+0x31e>
    3dba:	30 ff       	sbrs	r19, 0
    3dbc:	06 c0       	rjmp	.+12     	; 0x3dca <vfprintf+0x30a>
    3dbe:	5a 2c       	mov	r5, r10
    3dc0:	b3 14       	cp	r11, r3
    3dc2:	18 f4       	brcc	.+6      	; 0x3dca <vfprintf+0x30a>
    3dc4:	53 0c       	add	r5, r3
    3dc6:	5b 18       	sub	r5, r11
    3dc8:	b3 2c       	mov	r11, r3
    3dca:	b3 14       	cp	r11, r3
    3dcc:	60 f4       	brcc	.+24     	; 0x3de6 <vfprintf+0x326>
    3dce:	b7 01       	movw	r22, r14
    3dd0:	80 e2       	ldi	r24, 0x20	; 32
    3dd2:	90 e0       	ldi	r25, 0x00	; 0
    3dd4:	3c 87       	std	Y+12, r19	; 0x0c
    3dd6:	78 d0       	rcall	.+240    	; 0x3ec8 <fputc>
    3dd8:	b3 94       	inc	r11
    3dda:	3c 85       	ldd	r19, Y+12	; 0x0c
    3ddc:	f6 cf       	rjmp	.-20     	; 0x3dca <vfprintf+0x30a>
    3dde:	b3 14       	cp	r11, r3
    3de0:	10 f4       	brcc	.+4      	; 0x3de6 <vfprintf+0x326>
    3de2:	3b 18       	sub	r3, r11
    3de4:	01 c0       	rjmp	.+2      	; 0x3de8 <vfprintf+0x328>
    3de6:	31 2c       	mov	r3, r1
    3de8:	34 ff       	sbrs	r19, 4
    3dea:	11 c0       	rjmp	.+34     	; 0x3e0e <vfprintf+0x34e>
    3dec:	b7 01       	movw	r22, r14
    3dee:	80 e3       	ldi	r24, 0x30	; 48
    3df0:	90 e0       	ldi	r25, 0x00	; 0
    3df2:	3c 87       	std	Y+12, r19	; 0x0c
    3df4:	69 d0       	rcall	.+210    	; 0x3ec8 <fputc>
    3df6:	3c 85       	ldd	r19, Y+12	; 0x0c
    3df8:	32 ff       	sbrs	r19, 2
    3dfa:	16 c0       	rjmp	.+44     	; 0x3e28 <vfprintf+0x368>
    3dfc:	31 fd       	sbrc	r19, 1
    3dfe:	03 c0       	rjmp	.+6      	; 0x3e06 <vfprintf+0x346>
    3e00:	88 e7       	ldi	r24, 0x78	; 120
    3e02:	90 e0       	ldi	r25, 0x00	; 0
    3e04:	02 c0       	rjmp	.+4      	; 0x3e0a <vfprintf+0x34a>
    3e06:	88 e5       	ldi	r24, 0x58	; 88
    3e08:	90 e0       	ldi	r25, 0x00	; 0
    3e0a:	b7 01       	movw	r22, r14
    3e0c:	0c c0       	rjmp	.+24     	; 0x3e26 <vfprintf+0x366>
    3e0e:	83 2f       	mov	r24, r19
    3e10:	86 78       	andi	r24, 0x86	; 134
    3e12:	51 f0       	breq	.+20     	; 0x3e28 <vfprintf+0x368>
    3e14:	31 ff       	sbrs	r19, 1
    3e16:	02 c0       	rjmp	.+4      	; 0x3e1c <vfprintf+0x35c>
    3e18:	8b e2       	ldi	r24, 0x2B	; 43
    3e1a:	01 c0       	rjmp	.+2      	; 0x3e1e <vfprintf+0x35e>
    3e1c:	80 e2       	ldi	r24, 0x20	; 32
    3e1e:	37 fd       	sbrc	r19, 7
    3e20:	8d e2       	ldi	r24, 0x2D	; 45
    3e22:	b7 01       	movw	r22, r14
    3e24:	90 e0       	ldi	r25, 0x00	; 0
    3e26:	50 d0       	rcall	.+160    	; 0x3ec8 <fputc>
    3e28:	a5 14       	cp	r10, r5
    3e2a:	30 f4       	brcc	.+12     	; 0x3e38 <vfprintf+0x378>
    3e2c:	b7 01       	movw	r22, r14
    3e2e:	80 e3       	ldi	r24, 0x30	; 48
    3e30:	90 e0       	ldi	r25, 0x00	; 0
    3e32:	4a d0       	rcall	.+148    	; 0x3ec8 <fputc>
    3e34:	5a 94       	dec	r5
    3e36:	f8 cf       	rjmp	.-16     	; 0x3e28 <vfprintf+0x368>
    3e38:	aa 94       	dec	r10
    3e3a:	f4 01       	movw	r30, r8
    3e3c:	ea 0d       	add	r30, r10
    3e3e:	f1 1d       	adc	r31, r1
    3e40:	80 81       	ld	r24, Z
    3e42:	b7 01       	movw	r22, r14
    3e44:	90 e0       	ldi	r25, 0x00	; 0
    3e46:	40 d0       	rcall	.+128    	; 0x3ec8 <fputc>
    3e48:	a1 10       	cpse	r10, r1
    3e4a:	f6 cf       	rjmp	.-20     	; 0x3e38 <vfprintf+0x378>
    3e4c:	33 20       	and	r3, r3
    3e4e:	09 f4       	brne	.+2      	; 0x3e52 <vfprintf+0x392>
    3e50:	5d ce       	rjmp	.-838    	; 0x3b0c <vfprintf+0x4c>
    3e52:	b7 01       	movw	r22, r14
    3e54:	80 e2       	ldi	r24, 0x20	; 32
    3e56:	90 e0       	ldi	r25, 0x00	; 0
    3e58:	37 d0       	rcall	.+110    	; 0x3ec8 <fputc>
    3e5a:	3a 94       	dec	r3
    3e5c:	f7 cf       	rjmp	.-18     	; 0x3e4c <vfprintf+0x38c>
    3e5e:	f7 01       	movw	r30, r14
    3e60:	86 81       	ldd	r24, Z+6	; 0x06
    3e62:	97 81       	ldd	r25, Z+7	; 0x07
    3e64:	02 c0       	rjmp	.+4      	; 0x3e6a <vfprintf+0x3aa>
    3e66:	8f ef       	ldi	r24, 0xFF	; 255
    3e68:	9f ef       	ldi	r25, 0xFF	; 255
    3e6a:	2c 96       	adiw	r28, 0x0c	; 12
    3e6c:	0f b6       	in	r0, 0x3f	; 63
    3e6e:	f8 94       	cli
    3e70:	de bf       	out	0x3e, r29	; 62
    3e72:	0f be       	out	0x3f, r0	; 63
    3e74:	cd bf       	out	0x3d, r28	; 61
    3e76:	df 91       	pop	r29
    3e78:	cf 91       	pop	r28
    3e7a:	1f 91       	pop	r17
    3e7c:	0f 91       	pop	r16
    3e7e:	ff 90       	pop	r15
    3e80:	ef 90       	pop	r14
    3e82:	df 90       	pop	r13
    3e84:	cf 90       	pop	r12
    3e86:	bf 90       	pop	r11
    3e88:	af 90       	pop	r10
    3e8a:	9f 90       	pop	r9
    3e8c:	8f 90       	pop	r8
    3e8e:	7f 90       	pop	r7
    3e90:	6f 90       	pop	r6
    3e92:	5f 90       	pop	r5
    3e94:	4f 90       	pop	r4
    3e96:	3f 90       	pop	r3
    3e98:	2f 90       	pop	r2
    3e9a:	08 95       	ret

00003e9c <strnlen_P>:
    3e9c:	fc 01       	movw	r30, r24
    3e9e:	05 90       	lpm	r0, Z+
    3ea0:	61 50       	subi	r22, 0x01	; 1
    3ea2:	70 40       	sbci	r23, 0x00	; 0
    3ea4:	01 10       	cpse	r0, r1
    3ea6:	d8 f7       	brcc	.-10     	; 0x3e9e <strnlen_P+0x2>
    3ea8:	80 95       	com	r24
    3eaa:	90 95       	com	r25
    3eac:	8e 0f       	add	r24, r30
    3eae:	9f 1f       	adc	r25, r31
    3eb0:	08 95       	ret

00003eb2 <strnlen>:
    3eb2:	fc 01       	movw	r30, r24
    3eb4:	61 50       	subi	r22, 0x01	; 1
    3eb6:	70 40       	sbci	r23, 0x00	; 0
    3eb8:	01 90       	ld	r0, Z+
    3eba:	01 10       	cpse	r0, r1
    3ebc:	d8 f7       	brcc	.-10     	; 0x3eb4 <strnlen+0x2>
    3ebe:	80 95       	com	r24
    3ec0:	90 95       	com	r25
    3ec2:	8e 0f       	add	r24, r30
    3ec4:	9f 1f       	adc	r25, r31
    3ec6:	08 95       	ret

00003ec8 <fputc>:
    3ec8:	0f 93       	push	r16
    3eca:	1f 93       	push	r17
    3ecc:	cf 93       	push	r28
    3ece:	df 93       	push	r29
    3ed0:	fb 01       	movw	r30, r22
    3ed2:	23 81       	ldd	r18, Z+3	; 0x03
    3ed4:	21 fd       	sbrc	r18, 1
    3ed6:	03 c0       	rjmp	.+6      	; 0x3ede <fputc+0x16>
    3ed8:	8f ef       	ldi	r24, 0xFF	; 255
    3eda:	9f ef       	ldi	r25, 0xFF	; 255
    3edc:	28 c0       	rjmp	.+80     	; 0x3f2e <fputc+0x66>
    3ede:	22 ff       	sbrs	r18, 2
    3ee0:	16 c0       	rjmp	.+44     	; 0x3f0e <fputc+0x46>
    3ee2:	46 81       	ldd	r20, Z+6	; 0x06
    3ee4:	57 81       	ldd	r21, Z+7	; 0x07
    3ee6:	24 81       	ldd	r18, Z+4	; 0x04
    3ee8:	35 81       	ldd	r19, Z+5	; 0x05
    3eea:	42 17       	cp	r20, r18
    3eec:	53 07       	cpc	r21, r19
    3eee:	44 f4       	brge	.+16     	; 0x3f00 <fputc+0x38>
    3ef0:	a0 81       	ld	r26, Z
    3ef2:	b1 81       	ldd	r27, Z+1	; 0x01
    3ef4:	9d 01       	movw	r18, r26
    3ef6:	2f 5f       	subi	r18, 0xFF	; 255
    3ef8:	3f 4f       	sbci	r19, 0xFF	; 255
    3efa:	31 83       	std	Z+1, r19	; 0x01
    3efc:	20 83       	st	Z, r18
    3efe:	8c 93       	st	X, r24
    3f00:	26 81       	ldd	r18, Z+6	; 0x06
    3f02:	37 81       	ldd	r19, Z+7	; 0x07
    3f04:	2f 5f       	subi	r18, 0xFF	; 255
    3f06:	3f 4f       	sbci	r19, 0xFF	; 255
    3f08:	37 83       	std	Z+7, r19	; 0x07
    3f0a:	26 83       	std	Z+6, r18	; 0x06
    3f0c:	10 c0       	rjmp	.+32     	; 0x3f2e <fputc+0x66>
    3f0e:	eb 01       	movw	r28, r22
    3f10:	09 2f       	mov	r16, r25
    3f12:	18 2f       	mov	r17, r24
    3f14:	00 84       	ldd	r0, Z+8	; 0x08
    3f16:	f1 85       	ldd	r31, Z+9	; 0x09
    3f18:	e0 2d       	mov	r30, r0
    3f1a:	19 95       	eicall
    3f1c:	89 2b       	or	r24, r25
    3f1e:	e1 f6       	brne	.-72     	; 0x3ed8 <fputc+0x10>
    3f20:	8e 81       	ldd	r24, Y+6	; 0x06
    3f22:	9f 81       	ldd	r25, Y+7	; 0x07
    3f24:	01 96       	adiw	r24, 0x01	; 1
    3f26:	9f 83       	std	Y+7, r25	; 0x07
    3f28:	8e 83       	std	Y+6, r24	; 0x06
    3f2a:	81 2f       	mov	r24, r17
    3f2c:	90 2f       	mov	r25, r16
    3f2e:	df 91       	pop	r29
    3f30:	cf 91       	pop	r28
    3f32:	1f 91       	pop	r17
    3f34:	0f 91       	pop	r16
    3f36:	08 95       	ret

00003f38 <__ultoa_invert>:
    3f38:	fa 01       	movw	r30, r20
    3f3a:	aa 27       	eor	r26, r26
    3f3c:	28 30       	cpi	r18, 0x08	; 8
    3f3e:	51 f1       	breq	.+84     	; 0x3f94 <__ultoa_invert+0x5c>
    3f40:	20 31       	cpi	r18, 0x10	; 16
    3f42:	81 f1       	breq	.+96     	; 0x3fa4 <__ultoa_invert+0x6c>
    3f44:	e8 94       	clt
    3f46:	6f 93       	push	r22
    3f48:	6e 7f       	andi	r22, 0xFE	; 254
    3f4a:	6e 5f       	subi	r22, 0xFE	; 254
    3f4c:	7f 4f       	sbci	r23, 0xFF	; 255
    3f4e:	8f 4f       	sbci	r24, 0xFF	; 255
    3f50:	9f 4f       	sbci	r25, 0xFF	; 255
    3f52:	af 4f       	sbci	r26, 0xFF	; 255
    3f54:	b1 e0       	ldi	r27, 0x01	; 1
    3f56:	3e d0       	rcall	.+124    	; 0x3fd4 <__ultoa_invert+0x9c>
    3f58:	b4 e0       	ldi	r27, 0x04	; 4
    3f5a:	3c d0       	rcall	.+120    	; 0x3fd4 <__ultoa_invert+0x9c>
    3f5c:	67 0f       	add	r22, r23
    3f5e:	78 1f       	adc	r23, r24
    3f60:	89 1f       	adc	r24, r25
    3f62:	9a 1f       	adc	r25, r26
    3f64:	a1 1d       	adc	r26, r1
    3f66:	68 0f       	add	r22, r24
    3f68:	79 1f       	adc	r23, r25
    3f6a:	8a 1f       	adc	r24, r26
    3f6c:	91 1d       	adc	r25, r1
    3f6e:	a1 1d       	adc	r26, r1
    3f70:	6a 0f       	add	r22, r26
    3f72:	71 1d       	adc	r23, r1
    3f74:	81 1d       	adc	r24, r1
    3f76:	91 1d       	adc	r25, r1
    3f78:	a1 1d       	adc	r26, r1
    3f7a:	20 d0       	rcall	.+64     	; 0x3fbc <__ultoa_invert+0x84>
    3f7c:	09 f4       	brne	.+2      	; 0x3f80 <__ultoa_invert+0x48>
    3f7e:	68 94       	set
    3f80:	3f 91       	pop	r19
    3f82:	2a e0       	ldi	r18, 0x0A	; 10
    3f84:	26 9f       	mul	r18, r22
    3f86:	11 24       	eor	r1, r1
    3f88:	30 19       	sub	r19, r0
    3f8a:	30 5d       	subi	r19, 0xD0	; 208
    3f8c:	31 93       	st	Z+, r19
    3f8e:	de f6       	brtc	.-74     	; 0x3f46 <__ultoa_invert+0xe>
    3f90:	cf 01       	movw	r24, r30
    3f92:	08 95       	ret
    3f94:	46 2f       	mov	r20, r22
    3f96:	47 70       	andi	r20, 0x07	; 7
    3f98:	40 5d       	subi	r20, 0xD0	; 208
    3f9a:	41 93       	st	Z+, r20
    3f9c:	b3 e0       	ldi	r27, 0x03	; 3
    3f9e:	0f d0       	rcall	.+30     	; 0x3fbe <__ultoa_invert+0x86>
    3fa0:	c9 f7       	brne	.-14     	; 0x3f94 <__ultoa_invert+0x5c>
    3fa2:	f6 cf       	rjmp	.-20     	; 0x3f90 <__ultoa_invert+0x58>
    3fa4:	46 2f       	mov	r20, r22
    3fa6:	4f 70       	andi	r20, 0x0F	; 15
    3fa8:	40 5d       	subi	r20, 0xD0	; 208
    3faa:	4a 33       	cpi	r20, 0x3A	; 58
    3fac:	18 f0       	brcs	.+6      	; 0x3fb4 <__ultoa_invert+0x7c>
    3fae:	49 5d       	subi	r20, 0xD9	; 217
    3fb0:	31 fd       	sbrc	r19, 1
    3fb2:	40 52       	subi	r20, 0x20	; 32
    3fb4:	41 93       	st	Z+, r20
    3fb6:	02 d0       	rcall	.+4      	; 0x3fbc <__ultoa_invert+0x84>
    3fb8:	a9 f7       	brne	.-22     	; 0x3fa4 <__ultoa_invert+0x6c>
    3fba:	ea cf       	rjmp	.-44     	; 0x3f90 <__ultoa_invert+0x58>
    3fbc:	b4 e0       	ldi	r27, 0x04	; 4
    3fbe:	a6 95       	lsr	r26
    3fc0:	97 95       	ror	r25
    3fc2:	87 95       	ror	r24
    3fc4:	77 95       	ror	r23
    3fc6:	67 95       	ror	r22
    3fc8:	ba 95       	dec	r27
    3fca:	c9 f7       	brne	.-14     	; 0x3fbe <__ultoa_invert+0x86>
    3fcc:	00 97       	sbiw	r24, 0x00	; 0
    3fce:	61 05       	cpc	r22, r1
    3fd0:	71 05       	cpc	r23, r1
    3fd2:	08 95       	ret
    3fd4:	9b 01       	movw	r18, r22
    3fd6:	ac 01       	movw	r20, r24
    3fd8:	0a 2e       	mov	r0, r26
    3fda:	06 94       	lsr	r0
    3fdc:	57 95       	ror	r21
    3fde:	47 95       	ror	r20
    3fe0:	37 95       	ror	r19
    3fe2:	27 95       	ror	r18
    3fe4:	ba 95       	dec	r27
    3fe6:	c9 f7       	brne	.-14     	; 0x3fda <__ultoa_invert+0xa2>
    3fe8:	62 0f       	add	r22, r18
    3fea:	73 1f       	adc	r23, r19
    3fec:	84 1f       	adc	r24, r20
    3fee:	95 1f       	adc	r25, r21
    3ff0:	a0 1d       	adc	r26, r0
    3ff2:	08 95       	ret

00003ff4 <_exit>:
    3ff4:	f8 94       	cli

00003ff6 <__stop_program>:
    3ff6:	ff cf       	rjmp	.-2      	; 0x3ff6 <__stop_program>
