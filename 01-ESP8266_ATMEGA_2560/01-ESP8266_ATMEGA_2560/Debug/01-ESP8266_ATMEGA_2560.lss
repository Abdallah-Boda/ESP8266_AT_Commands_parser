
01-ESP8266_ATMEGA_2560.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000008b2  00800200  00003578  0000360c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003578  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000dfe  00800ab2  00800ab2  00003ebe  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00003ebe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003f1c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000408  00000000  00000000  00003f5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00006dd7  00000000  00000000  00004364  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a95  00000000  00000000  0000b13b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002879  00000000  00000000  0000bbd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001158  00000000  00000000  0000e44c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000140f  00000000  00000000  0000f5a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00005de1  00000000  00000000  000109b3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000458  00000000  00000000  00016794  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	92 c0       	rjmp	.+292    	; 0x126 <__ctors_end>
       2:	00 00       	nop
       4:	b1 c0       	rjmp	.+354    	; 0x168 <__bad_interrupt>
       6:	00 00       	nop
       8:	af c0       	rjmp	.+350    	; 0x168 <__bad_interrupt>
       a:	00 00       	nop
       c:	ad c0       	rjmp	.+346    	; 0x168 <__bad_interrupt>
       e:	00 00       	nop
      10:	ab c0       	rjmp	.+342    	; 0x168 <__bad_interrupt>
      12:	00 00       	nop
      14:	a9 c0       	rjmp	.+338    	; 0x168 <__bad_interrupt>
      16:	00 00       	nop
      18:	a7 c0       	rjmp	.+334    	; 0x168 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	a5 c0       	rjmp	.+330    	; 0x168 <__bad_interrupt>
      1e:	00 00       	nop
      20:	a3 c0       	rjmp	.+326    	; 0x168 <__bad_interrupt>
      22:	00 00       	nop
      24:	a1 c0       	rjmp	.+322    	; 0x168 <__bad_interrupt>
      26:	00 00       	nop
      28:	9f c0       	rjmp	.+318    	; 0x168 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	9d c0       	rjmp	.+314    	; 0x168 <__bad_interrupt>
      2e:	00 00       	nop
      30:	9b c0       	rjmp	.+310    	; 0x168 <__bad_interrupt>
      32:	00 00       	nop
      34:	99 c0       	rjmp	.+306    	; 0x168 <__bad_interrupt>
      36:	00 00       	nop
      38:	97 c0       	rjmp	.+302    	; 0x168 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	95 c0       	rjmp	.+298    	; 0x168 <__bad_interrupt>
      3e:	00 00       	nop
      40:	93 c0       	rjmp	.+294    	; 0x168 <__bad_interrupt>
      42:	00 00       	nop
      44:	91 c0       	rjmp	.+290    	; 0x168 <__bad_interrupt>
      46:	00 00       	nop
      48:	8f c0       	rjmp	.+286    	; 0x168 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	8d c0       	rjmp	.+282    	; 0x168 <__bad_interrupt>
      4e:	00 00       	nop
      50:	8b c0       	rjmp	.+278    	; 0x168 <__bad_interrupt>
      52:	00 00       	nop
      54:	0c 94 ca 13 	jmp	0x2794	; 0x2794 <__vector_21>
      58:	87 c0       	rjmp	.+270    	; 0x168 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	85 c0       	rjmp	.+266    	; 0x168 <__bad_interrupt>
      5e:	00 00       	nop
      60:	83 c0       	rjmp	.+262    	; 0x168 <__bad_interrupt>
      62:	00 00       	nop
      64:	0c 94 f8 13 	jmp	0x27f0	; 0x27f0 <__vector_25>
      68:	7f c0       	rjmp	.+254    	; 0x168 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	7d c0       	rjmp	.+250    	; 0x168 <__bad_interrupt>
      6e:	00 00       	nop
      70:	7b c0       	rjmp	.+246    	; 0x168 <__bad_interrupt>
      72:	00 00       	nop
      74:	79 c0       	rjmp	.+242    	; 0x168 <__bad_interrupt>
      76:	00 00       	nop
      78:	77 c0       	rjmp	.+238    	; 0x168 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	75 c0       	rjmp	.+234    	; 0x168 <__bad_interrupt>
      7e:	00 00       	nop
      80:	73 c0       	rjmp	.+230    	; 0x168 <__bad_interrupt>
      82:	00 00       	nop
      84:	71 c0       	rjmp	.+226    	; 0x168 <__bad_interrupt>
      86:	00 00       	nop
      88:	6f c0       	rjmp	.+222    	; 0x168 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	6d c0       	rjmp	.+218    	; 0x168 <__bad_interrupt>
      8e:	00 00       	nop
      90:	0c 94 7b 13 	jmp	0x26f6	; 0x26f6 <__vector_36>
      94:	69 c0       	rjmp	.+210    	; 0x168 <__bad_interrupt>
      96:	00 00       	nop
      98:	67 c0       	rjmp	.+206    	; 0x168 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	65 c0       	rjmp	.+202    	; 0x168 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	63 c0       	rjmp	.+198    	; 0x168 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	61 c0       	rjmp	.+194    	; 0x168 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	5f c0       	rjmp	.+190    	; 0x168 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	5d c0       	rjmp	.+186    	; 0x168 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	5b c0       	rjmp	.+182    	; 0x168 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	59 c0       	rjmp	.+178    	; 0x168 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	57 c0       	rjmp	.+174    	; 0x168 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	55 c0       	rjmp	.+170    	; 0x168 <__bad_interrupt>
      be:	00 00       	nop
      c0:	53 c0       	rjmp	.+166    	; 0x168 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	51 c0       	rjmp	.+162    	; 0x168 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	4f c0       	rjmp	.+158    	; 0x168 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	4d c0       	rjmp	.+154    	; 0x168 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	4b c0       	rjmp	.+150    	; 0x168 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	49 c0       	rjmp	.+146    	; 0x168 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	47 c0       	rjmp	.+142    	; 0x168 <__bad_interrupt>
      da:	00 00       	nop
      dc:	45 c0       	rjmp	.+138    	; 0x168 <__bad_interrupt>
      de:	00 00       	nop
      e0:	43 c0       	rjmp	.+134    	; 0x168 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	9e 0c       	add	r9, r14
      e6:	ff 0c       	add	r15, r15
      e8:	5d 0a       	sbc	r5, r29
      ea:	ff 0c       	add	r15, r15
      ec:	21 0c       	add	r2, r1
      ee:	37 0c       	add	r3, r7
      f0:	9e 0c       	add	r9, r14
      f2:	45 0c       	add	r4, r5
      f4:	9e 0c       	add	r9, r14
      f6:	65 0c       	add	r6, r5
      f8:	9e 0c       	add	r9, r14
      fa:	15 0b       	sbc	r17, r21
      fc:	ff 0c       	add	r15, r15
      fe:	9e 0c       	add	r9, r14
     100:	ae 0c       	add	r10, r14
     102:	9e 0c       	add	r9, r14
     104:	9e 0c       	add	r9, r14
     106:	ff 0c       	add	r15, r15
     108:	97 0a       	sbc	r9, r23
     10a:	9e 0c       	add	r9, r14
     10c:	9e 0c       	add	r9, r14
     10e:	e7 0b       	sbc	r30, r23
     110:	06 0c       	add	r0, r6
     112:	c1 0c       	add	r12, r1
     114:	e2 0c       	add	r14, r2
     116:	9e 0c       	add	r9, r14
     118:	ff 0c       	add	r15, r15
     11a:	ff 0c       	add	r15, r15
     11c:	ff 0c       	add	r15, r15
     11e:	ff 0c       	add	r15, r15
     120:	9e 0c       	add	r9, r14
     122:	9e 0c       	add	r9, r14
     124:	9e 0c       	add	r9, r14

00000126 <__ctors_end>:
     126:	11 24       	eor	r1, r1
     128:	1f be       	out	0x3f, r1	; 63
     12a:	cf ef       	ldi	r28, 0xFF	; 255
     12c:	d1 e2       	ldi	r29, 0x21	; 33
     12e:	de bf       	out	0x3e, r29	; 62
     130:	cd bf       	out	0x3d, r28	; 61
     132:	00 e0       	ldi	r16, 0x00	; 0
     134:	0c bf       	out	0x3c, r16	; 60

00000136 <__do_copy_data>:
     136:	1a e0       	ldi	r17, 0x0A	; 10
     138:	a0 e0       	ldi	r26, 0x00	; 0
     13a:	b2 e0       	ldi	r27, 0x02	; 2
     13c:	e8 e7       	ldi	r30, 0x78	; 120
     13e:	f5 e3       	ldi	r31, 0x35	; 53
     140:	00 e0       	ldi	r16, 0x00	; 0
     142:	0b bf       	out	0x3b, r16	; 59
     144:	02 c0       	rjmp	.+4      	; 0x14a <__do_copy_data+0x14>
     146:	07 90       	elpm	r0, Z+
     148:	0d 92       	st	X+, r0
     14a:	a2 3b       	cpi	r26, 0xB2	; 178
     14c:	b1 07       	cpc	r27, r17
     14e:	d9 f7       	brne	.-10     	; 0x146 <__do_copy_data+0x10>

00000150 <__do_clear_bss>:
     150:	28 e1       	ldi	r18, 0x18	; 24
     152:	a2 eb       	ldi	r26, 0xB2	; 178
     154:	ba e0       	ldi	r27, 0x0A	; 10
     156:	01 c0       	rjmp	.+2      	; 0x15a <.do_clear_bss_start>

00000158 <.do_clear_bss_loop>:
     158:	1d 92       	st	X+, r1

0000015a <.do_clear_bss_start>:
     15a:	a0 3b       	cpi	r26, 0xB0	; 176
     15c:	b2 07       	cpc	r27, r18
     15e:	e1 f7       	brne	.-8      	; 0x158 <.do_clear_bss_loop>
     160:	0e 94 40 14 	call	0x2880	; 0x2880 <main>
     164:	0c 94 ba 1a 	jmp	0x3574	; 0x3574 <_exit>

00000168 <__bad_interrupt>:
     168:	4b cf       	rjmp	.-362    	; 0x0 <__vectors>

0000016a <BUFFER_Init>:
	}
	
	/* Clear flags */
	Buffer->Flags = 0;
	Buffer->Size = 0;
}
     16a:	cf 93       	push	r28
     16c:	df 93       	push	r29
     16e:	ec 01       	movw	r28, r24
     170:	8c e0       	ldi	r24, 0x0C	; 12
     172:	fe 01       	movw	r30, r28
     174:	11 92       	st	Z+, r1
     176:	8a 95       	dec	r24
     178:	e9 f7       	brne	.-6      	; 0x174 <BUFFER_Init+0xa>
     17a:	79 83       	std	Y+1, r23	; 0x01
     17c:	68 83       	st	Y, r22
     17e:	5f 83       	std	Y+7, r21	; 0x07
     180:	4e 83       	std	Y+6, r20	; 0x06
     182:	8a e0       	ldi	r24, 0x0A	; 10
     184:	89 87       	std	Y+9, r24	; 0x09
     186:	45 2b       	or	r20, r21
     188:	71 f4       	brne	.+28     	; 0x1a6 <BUFFER_Init+0x3c>
     18a:	cb 01       	movw	r24, r22
     18c:	0e 94 fa 15 	call	0x2bf4	; 0x2bf4 <malloc>
     190:	9f 83       	std	Y+7, r25	; 0x07
     192:	8e 83       	std	Y+6, r24	; 0x06
     194:	89 2b       	or	r24, r25
     196:	21 f4       	brne	.+8      	; 0x1a0 <BUFFER_Init+0x36>
     198:	19 82       	std	Y+1, r1	; 0x01
     19a:	18 82       	st	Y, r1
     19c:	81 e0       	ldi	r24, 0x01	; 1
     19e:	07 c0       	rjmp	.+14     	; 0x1ae <BUFFER_Init+0x44>
     1a0:	88 85       	ldd	r24, Y+8	; 0x08
     1a2:	82 60       	ori	r24, 0x02	; 2
     1a4:	88 87       	std	Y+8, r24	; 0x08
     1a6:	88 85       	ldd	r24, Y+8	; 0x08
     1a8:	81 60       	ori	r24, 0x01	; 1
     1aa:	88 87       	std	Y+8, r24	; 0x08
     1ac:	80 e0       	ldi	r24, 0x00	; 0
     1ae:	df 91       	pop	r29
     1b0:	cf 91       	pop	r28
     1b2:	08 95       	ret

000001b4 <BUFFER_Write>:

uint16_t BUFFER_Write(BUFFER_t* Buffer, uint8_t* Data, uint16_t count) {
     1b4:	1f 93       	push	r17
     1b6:	cf 93       	push	r28
     1b8:	df 93       	push	r29
     1ba:	fc 01       	movw	r30, r24
	uint8_t i = 0;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
     1bc:	89 2b       	or	r24, r25
     1be:	e1 f1       	breq	.+120    	; 0x238 <BUFFER_Write+0x84>
		return 0;
	}

	/* Check input pointer */
	if (Buffer->In >= Buffer->Size) {
     1c0:	22 81       	ldd	r18, Z+2	; 0x02
     1c2:	33 81       	ldd	r19, Z+3	; 0x03
     1c4:	80 81       	ld	r24, Z
     1c6:	91 81       	ldd	r25, Z+1	; 0x01
     1c8:	28 17       	cp	r18, r24
     1ca:	39 07       	cpc	r19, r25
     1cc:	10 f0       	brcs	.+4      	; 0x1d2 <BUFFER_Write+0x1e>
		Buffer->In = 0;
     1ce:	13 82       	std	Z+3, r1	; 0x03
     1d0:	12 82       	std	Z+2, r1	; 0x02
     1d2:	16 2f       	mov	r17, r22
     1d4:	46 0f       	add	r20, r22
     1d6:	57 1f       	adc	r21, r23
	/* Clear flags */
	Buffer->Flags = 0;
	Buffer->Size = 0;
}

uint16_t BUFFER_Write(BUFFER_t* Buffer, uint8_t* Data, uint16_t count) {
     1d8:	a6 2f       	mov	r26, r22
     1da:	b7 2f       	mov	r27, r23
     1dc:	26 c0       	rjmp	.+76     	; 0x22a <BUFFER_Write+0x76>
	
	/* Go through all elements */
	while (count--) {
		/* Check if buffer full */
		if (
			(Buffer->In == (Buffer->Out - 1)) ||
     1de:	22 81       	ldd	r18, Z+2	; 0x02
     1e0:	33 81       	ldd	r19, Z+3	; 0x03
     1e2:	64 81       	ldd	r22, Z+4	; 0x04
     1e4:	75 81       	ldd	r23, Z+5	; 0x05
     1e6:	eb 01       	movw	r28, r22
     1e8:	21 97       	sbiw	r28, 0x01	; 1
	}
	
	/* Go through all elements */
	while (count--) {
		/* Check if buffer full */
		if (
     1ea:	2c 17       	cp	r18, r28
     1ec:	3d 07       	cpc	r19, r29
     1ee:	11 f1       	breq	.+68     	; 0x234 <BUFFER_Write+0x80>
			(Buffer->In == (Buffer->Out - 1)) ||
     1f0:	67 2b       	or	r22, r23
     1f2:	39 f4       	brne	.+14     	; 0x202 <BUFFER_Write+0x4e>
			(Buffer->Out == 0 && Buffer->In == (Buffer->Size - 1))
     1f4:	60 81       	ld	r22, Z
     1f6:	71 81       	ldd	r23, Z+1	; 0x01
     1f8:	61 50       	subi	r22, 0x01	; 1
     1fa:	71 09       	sbc	r23, r1
     1fc:	26 17       	cp	r18, r22
     1fe:	37 07       	cpc	r19, r23
     200:	c9 f0       	breq	.+50     	; 0x234 <BUFFER_Write+0x80>
		) {
			break;
		}
		
		/* Add to buffer */
		Buffer->Buffer[Buffer->In++] = *Data++;
     202:	66 81       	ldd	r22, Z+6	; 0x06
     204:	77 81       	ldd	r23, Z+7	; 0x07
     206:	c9 01       	movw	r24, r18
     208:	01 96       	adiw	r24, 0x01	; 1
     20a:	93 83       	std	Z+3, r25	; 0x03
     20c:	82 83       	std	Z+2, r24	; 0x02
     20e:	8d 91       	ld	r24, X+
     210:	eb 01       	movw	r28, r22
     212:	c2 0f       	add	r28, r18
     214:	d3 1f       	adc	r29, r19
     216:	88 83       	st	Y, r24
		
		/* Increase pointers */
		i++;
		
		/* Check input overflow */
		if (Buffer->In >= Buffer->Size) {
     218:	22 81       	ldd	r18, Z+2	; 0x02
     21a:	33 81       	ldd	r19, Z+3	; 0x03
     21c:	80 81       	ld	r24, Z
     21e:	91 81       	ldd	r25, Z+1	; 0x01
     220:	28 17       	cp	r18, r24
     222:	39 07       	cpc	r19, r25
     224:	10 f0       	brcs	.+4      	; 0x22a <BUFFER_Write+0x76>
			Buffer->In = 0;
     226:	13 82       	std	Z+3, r1	; 0x03
     228:	12 82       	std	Z+2, r1	; 0x02
     22a:	8a 2f       	mov	r24, r26
     22c:	81 1b       	sub	r24, r17
	if (Buffer->In >= Buffer->Size) {
		Buffer->In = 0;
	}
	
	/* Go through all elements */
	while (count--) {
     22e:	a4 17       	cp	r26, r20
     230:	b5 07       	cpc	r27, r21
     232:	a9 f6       	brne	.-86     	; 0x1de <BUFFER_Write+0x2a>
			Buffer->In = 0;
		}
	}
	
	/* Return number of elements stored in memory */
	return i;
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	02 c0       	rjmp	.+4      	; 0x23c <BUFFER_Write+0x88>
uint16_t BUFFER_Write(BUFFER_t* Buffer, uint8_t* Data, uint16_t count) {
	uint8_t i = 0;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
		return 0;
     238:	80 e0       	ldi	r24, 0x00	; 0
     23a:	90 e0       	ldi	r25, 0x00	; 0
		}
	}
	
	/* Return number of elements stored in memory */
	return i;
}
     23c:	df 91       	pop	r29
     23e:	cf 91       	pop	r28
     240:	1f 91       	pop	r17
     242:	08 95       	ret

00000244 <BUFFER_Read>:

uint16_t BUFFER_Read(BUFFER_t* Buffer, uint8_t* Data, uint16_t count) {
     244:	cf 93       	push	r28
     246:	df 93       	push	r29
     248:	fc 01       	movw	r30, r24
	uint16_t i = 0;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
     24a:	89 2b       	or	r24, r25
     24c:	89 f1       	breq	.+98     	; 0x2b0 <BUFFER_Read+0x6c>
		return 0;
	}

	/* Check output pointer */
	if (Buffer->Out >= Buffer->Size) {
     24e:	24 81       	ldd	r18, Z+4	; 0x04
     250:	35 81       	ldd	r19, Z+5	; 0x05
     252:	80 81       	ld	r24, Z
     254:	91 81       	ldd	r25, Z+1	; 0x01
     256:	28 17       	cp	r18, r24
     258:	39 07       	cpc	r19, r25
     25a:	10 f0       	brcs	.+4      	; 0x260 <BUFFER_Read+0x1c>
		Buffer->Out = 0;
     25c:	15 82       	std	Z+5, r1	; 0x05
     25e:	14 82       	std	Z+4, r1	; 0x04
     260:	a6 2f       	mov	r26, r22
     262:	b7 2f       	mov	r27, r23
	
	/* Return number of elements stored in memory */
	return i;
}

uint16_t BUFFER_Read(BUFFER_t* Buffer, uint8_t* Data, uint16_t count) {
     264:	20 e0       	ldi	r18, 0x00	; 0
     266:	30 e0       	ldi	r19, 0x00	; 0
     268:	1d c0       	rjmp	.+58     	; 0x2a4 <BUFFER_Read+0x60>
	}
	
	/* Go through all elements */
	while (count--) {
		/* Check if pointers are same = buffer is empty */
		if (Buffer->Out == Buffer->In) {
     26a:	84 81       	ldd	r24, Z+4	; 0x04
     26c:	95 81       	ldd	r25, Z+5	; 0x05
     26e:	62 81       	ldd	r22, Z+2	; 0x02
     270:	73 81       	ldd	r23, Z+3	; 0x03
     272:	86 17       	cp	r24, r22
     274:	97 07       	cpc	r25, r23
     276:	f9 f0       	breq	.+62     	; 0x2b6 <BUFFER_Read+0x72>
			break;
		}
		
		/* Save to user buffer */
		*Data++ = Buffer->Buffer[Buffer->Out++];
     278:	66 81       	ldd	r22, Z+6	; 0x06
     27a:	77 81       	ldd	r23, Z+7	; 0x07
     27c:	ec 01       	movw	r28, r24
     27e:	21 96       	adiw	r28, 0x01	; 1
     280:	d5 83       	std	Z+5, r29	; 0x05
     282:	c4 83       	std	Z+4, r28	; 0x04
     284:	eb 01       	movw	r28, r22
     286:	c8 0f       	add	r28, r24
     288:	d9 1f       	adc	r29, r25
     28a:	88 81       	ld	r24, Y
     28c:	8d 93       	st	X+, r24
		
		/* Increase pointers */
		i++;
     28e:	2f 5f       	subi	r18, 0xFF	; 255
     290:	3f 4f       	sbci	r19, 0xFF	; 255

		/* Check output overflow */
		if (Buffer->Out >= Buffer->Size) {
     292:	64 81       	ldd	r22, Z+4	; 0x04
     294:	75 81       	ldd	r23, Z+5	; 0x05
     296:	80 81       	ld	r24, Z
     298:	91 81       	ldd	r25, Z+1	; 0x01
     29a:	68 17       	cp	r22, r24
     29c:	79 07       	cpc	r23, r25
     29e:	10 f0       	brcs	.+4      	; 0x2a4 <BUFFER_Read+0x60>
			Buffer->Out = 0;
     2a0:	15 82       	std	Z+5, r1	; 0x05
     2a2:	14 82       	std	Z+4, r1	; 0x04
	if (Buffer->Out >= Buffer->Size) {
		Buffer->Out = 0;
	}
	
	/* Go through all elements */
	while (count--) {
     2a4:	24 17       	cp	r18, r20
     2a6:	35 07       	cpc	r19, r21
     2a8:	01 f7       	brne	.-64     	; 0x26a <BUFFER_Read+0x26>
     2aa:	84 2f       	mov	r24, r20
     2ac:	95 2f       	mov	r25, r21
     2ae:	05 c0       	rjmp	.+10     	; 0x2ba <BUFFER_Read+0x76>
uint16_t BUFFER_Read(BUFFER_t* Buffer, uint8_t* Data, uint16_t count) {
	uint16_t i = 0;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
		return 0;
     2b0:	80 e0       	ldi	r24, 0x00	; 0
     2b2:	90 e0       	ldi	r25, 0x00	; 0
     2b4:	02 c0       	rjmp	.+4      	; 0x2ba <BUFFER_Read+0x76>
     2b6:	82 2f       	mov	r24, r18
     2b8:	93 2f       	mov	r25, r19
		}
	}
	
	/* Return number of elements read from buffer */
	return i;
}
     2ba:	df 91       	pop	r29
     2bc:	cf 91       	pop	r28
     2be:	08 95       	ret

000002c0 <BUFFER_GetFree>:

uint16_t BUFFER_GetFree(BUFFER_t* Buffer) {
     2c0:	0f 93       	push	r16
     2c2:	1f 93       	push	r17
     2c4:	fc 01       	movw	r30, r24
	uint32_t size = 0, in, out;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
     2c6:	89 2b       	or	r24, r25
     2c8:	99 f1       	breq	.+102    	; 0x330 <BUFFER_GetFree+0x70>
		return 0;
	}
	
	/* Save values */
	in = Buffer->In;
     2ca:	02 81       	ldd	r16, Z+2	; 0x02
     2cc:	13 81       	ldd	r17, Z+3	; 0x03
     2ce:	20 e0       	ldi	r18, 0x00	; 0
     2d0:	30 e0       	ldi	r19, 0x00	; 0
	out = Buffer->Out;
     2d2:	44 81       	ldd	r20, Z+4	; 0x04
     2d4:	55 81       	ldd	r21, Z+5	; 0x05
     2d6:	60 e0       	ldi	r22, 0x00	; 0
     2d8:	70 e0       	ldi	r23, 0x00	; 0
	
	/* Check if the same */
	if (in == out) {
     2da:	04 17       	cp	r16, r20
     2dc:	15 07       	cpc	r17, r21
     2de:	26 07       	cpc	r18, r22
     2e0:	37 07       	cpc	r19, r23
     2e2:	21 f4       	brne	.+8      	; 0x2ec <BUFFER_GetFree+0x2c>
		size = Buffer->Size;
     2e4:	40 81       	ld	r20, Z
     2e6:	51 81       	ldd	r21, Z+1	; 0x01
     2e8:	ca 01       	movw	r24, r20
     2ea:	20 c0       	rjmp	.+64     	; 0x32c <BUFFER_GetFree+0x6c>
	}

	/* Check normal mode */
	if (out > in) {
     2ec:	04 17       	cp	r16, r20
     2ee:	15 07       	cpc	r17, r21
     2f0:	26 07       	cpc	r18, r22
     2f2:	37 07       	cpc	r19, r23
     2f4:	38 f4       	brcc	.+14     	; 0x304 <BUFFER_GetFree+0x44>
		size = out - in;
     2f6:	db 01       	movw	r26, r22
     2f8:	ca 01       	movw	r24, r20
     2fa:	80 1b       	sub	r24, r16
     2fc:	91 0b       	sbc	r25, r17
     2fe:	a2 0b       	sbc	r26, r18
     300:	b3 0b       	sbc	r27, r19
     302:	03 c0       	rjmp	.+6      	; 0x30a <BUFFER_GetFree+0x4a>
	/* Return number of elements read from buffer */
	return i;
}

uint16_t BUFFER_GetFree(BUFFER_t* Buffer) {
	uint32_t size = 0, in, out;
     304:	80 e0       	ldi	r24, 0x00	; 0
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	dc 01       	movw	r26, r24
	if (out > in) {
		size = out - in;
	}
	
	/* Check if overflow mode */
	if (in > out) {
     30a:	40 17       	cp	r20, r16
     30c:	51 07       	cpc	r21, r17
     30e:	62 07       	cpc	r22, r18
     310:	73 07       	cpc	r23, r19
     312:	60 f4       	brcc	.+24     	; 0x32c <BUFFER_GetFree+0x6c>
		size = Buffer->Size - (in - out);
     314:	80 81       	ld	r24, Z
     316:	91 81       	ldd	r25, Z+1	; 0x01
     318:	48 0f       	add	r20, r24
     31a:	59 1f       	adc	r21, r25
     31c:	61 1d       	adc	r22, r1
     31e:	71 1d       	adc	r23, r1
     320:	db 01       	movw	r26, r22
     322:	ca 01       	movw	r24, r20
     324:	80 1b       	sub	r24, r16
     326:	91 0b       	sbc	r25, r17
     328:	a2 0b       	sbc	r26, r18
     32a:	b3 0b       	sbc	r27, r19
	}
	
	/* Return free memory */
	return size - 1;
     32c:	01 97       	sbiw	r24, 0x01	; 1
     32e:	02 c0       	rjmp	.+4      	; 0x334 <BUFFER_GetFree+0x74>
uint16_t BUFFER_GetFree(BUFFER_t* Buffer) {
	uint32_t size = 0, in, out;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
		return 0;
     330:	80 e0       	ldi	r24, 0x00	; 0
     332:	90 e0       	ldi	r25, 0x00	; 0
		size = Buffer->Size - (in - out);
	}
	
	/* Return free memory */
	return size - 1;
}
     334:	1f 91       	pop	r17
     336:	0f 91       	pop	r16
     338:	08 95       	ret

0000033a <BUFFER_GetFull>:

uint16_t BUFFER_GetFull(BUFFER_t* Buffer) {
     33a:	0f 93       	push	r16
     33c:	1f 93       	push	r17
     33e:	fc 01       	movw	r30, r24
	uint32_t in, out, size;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
     340:	89 2b       	or	r24, r25
     342:	49 f1       	breq	.+82     	; 0x396 <BUFFER_GetFull+0x5c>
		return 0;
	}
	
	/* Save values */
	in = Buffer->In;
     344:	42 81       	ldd	r20, Z+2	; 0x02
     346:	53 81       	ldd	r21, Z+3	; 0x03
     348:	60 e0       	ldi	r22, 0x00	; 0
     34a:	70 e0       	ldi	r23, 0x00	; 0
	out = Buffer->Out;
     34c:	04 81       	ldd	r16, Z+4	; 0x04
     34e:	15 81       	ldd	r17, Z+5	; 0x05
     350:	20 e0       	ldi	r18, 0x00	; 0
     352:	30 e0       	ldi	r19, 0x00	; 0
		size = 0;
	}
	
	/* Check pointers and return values */
	/* Buffer is not in overflow mode */
	if (in > out) {
     354:	04 17       	cp	r16, r20
     356:	15 07       	cpc	r17, r21
     358:	26 07       	cpc	r18, r22
     35a:	37 07       	cpc	r19, r23
     35c:	38 f4       	brcc	.+14     	; 0x36c <BUFFER_GetFull+0x32>
		size = in - out;
     35e:	db 01       	movw	r26, r22
     360:	ca 01       	movw	r24, r20
     362:	80 1b       	sub	r24, r16
     364:	91 0b       	sbc	r25, r17
     366:	a2 0b       	sbc	r26, r18
     368:	b3 0b       	sbc	r27, r19
     36a:	03 c0       	rjmp	.+6      	; 0x372 <BUFFER_GetFull+0x38>
     36c:	80 e0       	ldi	r24, 0x00	; 0
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	dc 01       	movw	r26, r24
	}
	
	/* Buffer is in overflow mode */
	if (out > in) {
     372:	40 17       	cp	r20, r16
     374:	51 07       	cpc	r21, r17
     376:	62 07       	cpc	r22, r18
     378:	73 07       	cpc	r23, r19
     37a:	78 f4       	brcc	.+30     	; 0x39a <BUFFER_GetFull+0x60>
		size = Buffer->Size - (out - in);
     37c:	80 81       	ld	r24, Z
     37e:	91 81       	ldd	r25, Z+1	; 0x01
     380:	48 0f       	add	r20, r24
     382:	59 1f       	adc	r21, r25
     384:	61 1d       	adc	r22, r1
     386:	71 1d       	adc	r23, r1
     388:	db 01       	movw	r26, r22
     38a:	ca 01       	movw	r24, r20
     38c:	80 1b       	sub	r24, r16
     38e:	91 0b       	sbc	r25, r17
     390:	a2 0b       	sbc	r26, r18
     392:	b3 0b       	sbc	r27, r19
	}
	
	/* Return number of elements in buffer */
	return size;
     394:	02 c0       	rjmp	.+4      	; 0x39a <BUFFER_GetFull+0x60>
uint16_t BUFFER_GetFull(BUFFER_t* Buffer) {
	uint32_t in, out, size;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
		return 0;
     396:	80 e0       	ldi	r24, 0x00	; 0
     398:	90 e0       	ldi	r25, 0x00	; 0
		size = Buffer->Size - (out - in);
	}
	
	/* Return number of elements in buffer */
	return size;
}
     39a:	1f 91       	pop	r17
     39c:	0f 91       	pop	r16
     39e:	08 95       	ret

000003a0 <BUFFER_Reset>:

void BUFFER_Reset(BUFFER_t* Buffer) {
	/* Check buffer structure */
	if (Buffer == NULL) {
     3a0:	00 97       	sbiw	r24, 0x00	; 0
     3a2:	29 f0       	breq	.+10     	; 0x3ae <BUFFER_Reset+0xe>
		return;
	}
	
	/* Reset values */
	Buffer->In = 0;
     3a4:	fc 01       	movw	r30, r24
     3a6:	13 82       	std	Z+3, r1	; 0x03
     3a8:	12 82       	std	Z+2, r1	; 0x02
	Buffer->Out = 0;
     3aa:	15 82       	std	Z+5, r1	; 0x05
     3ac:	14 82       	std	Z+4, r1	; 0x04
     3ae:	08 95       	ret

000003b0 <BUFFER_FindElement>:
}

int16_t BUFFER_FindElement(BUFFER_t* Buffer, uint8_t Element) {
     3b0:	ef 92       	push	r14
     3b2:	ff 92       	push	r15
     3b4:	0f 93       	push	r16
     3b6:	1f 93       	push	r17
     3b8:	cf 93       	push	r28
	uint16_t Num, Out, retval = 0;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
     3ba:	00 97       	sbiw	r24, 0x00	; 0
     3bc:	49 f1       	breq	.+82     	; 0x410 <BUFFER_FindElement+0x60>
     3be:	c6 2f       	mov	r28, r22
     3c0:	7c 01       	movw	r14, r24
		return -1;
	}
	
	/* Create temporary variables */
	Num = BUFFER_GetFull(Buffer);
     3c2:	bb df       	rcall	.-138    	; 0x33a <BUFFER_GetFull>
     3c4:	bc 01       	movw	r22, r24
	Out = Buffer->Out;
     3c6:	f7 01       	movw	r30, r14
     3c8:	24 81       	ldd	r18, Z+4	; 0x04
     3ca:	35 81       	ldd	r19, Z+5	; 0x05
	
	/* Go through input elements */
	while (Num > 0) {
     3cc:	89 2b       	or	r24, r25
     3ce:	19 f1       	breq	.+70     	; 0x416 <BUFFER_FindElement+0x66>
		/* Check output overflow */
		if (Out >= Buffer->Size) {
     3d0:	00 81       	ld	r16, Z
     3d2:	11 81       	ldd	r17, Z+1	; 0x01
			Out = 0;
		}
		
		/* Check for element */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Element) {
     3d4:	a6 81       	ldd	r26, Z+6	; 0x06
     3d6:	b7 81       	ldd	r27, Z+7	; 0x07
     3d8:	40 e0       	ldi	r20, 0x00	; 0
     3da:	50 e0       	ldi	r21, 0x00	; 0
	
	/* Go through input elements */
	while (Num > 0) {
		/* Check output overflow */
		if (Out >= Buffer->Size) {
			Out = 0;
     3dc:	f1 2c       	mov	r15, r1
     3de:	80 e0       	ldi	r24, 0x00	; 0
	Out = Buffer->Out;
	
	/* Go through input elements */
	while (Num > 0) {
		/* Check output overflow */
		if (Out >= Buffer->Size) {
     3e0:	20 17       	cp	r18, r16
     3e2:	31 07       	cpc	r19, r17
     3e4:	10 f0       	brcs	.+4      	; 0x3ea <BUFFER_FindElement+0x3a>
			Out = 0;
     3e6:	2f 2d       	mov	r18, r15
     3e8:	38 2f       	mov	r19, r24
		}
		
		/* Check for element */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Element) {
     3ea:	fd 01       	movw	r30, r26
     3ec:	e2 0f       	add	r30, r18
     3ee:	f3 1f       	adc	r31, r19
     3f0:	90 81       	ld	r25, Z
     3f2:	9c 13       	cpse	r25, r28
     3f4:	03 c0       	rjmp	.+6      	; 0x3fc <BUFFER_FindElement+0x4c>
			/* Element found, return position in buffer */
			return retval;
     3f6:	84 2f       	mov	r24, r20
     3f8:	95 2f       	mov	r25, r21
     3fa:	0f c0       	rjmp	.+30     	; 0x41a <BUFFER_FindElement+0x6a>
		}
		
		/* Set new variables */
		Out++;
     3fc:	2f 5f       	subi	r18, 0xFF	; 255
     3fe:	3f 4f       	sbci	r19, 0xFF	; 255
		Num--;
		retval++;
     400:	4f 5f       	subi	r20, 0xFF	; 255
     402:	5f 4f       	sbci	r21, 0xFF	; 255
	/* Create temporary variables */
	Num = BUFFER_GetFull(Buffer);
	Out = Buffer->Out;
	
	/* Go through input elements */
	while (Num > 0) {
     404:	64 17       	cp	r22, r20
     406:	75 07       	cpc	r23, r21
     408:	59 f7       	brne	.-42     	; 0x3e0 <BUFFER_FindElement+0x30>
		Num--;
		retval++;
	}
	
	/* Element is not in buffer */
	return -1;
     40a:	8f ef       	ldi	r24, 0xFF	; 255
     40c:	9f ef       	ldi	r25, 0xFF	; 255
     40e:	05 c0       	rjmp	.+10     	; 0x41a <BUFFER_FindElement+0x6a>
int16_t BUFFER_FindElement(BUFFER_t* Buffer, uint8_t Element) {
	uint16_t Num, Out, retval = 0;
	
	/* Check buffer structure */
	if (Buffer == NULL) {
		return -1;
     410:	8f ef       	ldi	r24, 0xFF	; 255
     412:	9f ef       	ldi	r25, 0xFF	; 255
     414:	02 c0       	rjmp	.+4      	; 0x41a <BUFFER_FindElement+0x6a>
		Num--;
		retval++;
	}
	
	/* Element is not in buffer */
	return -1;
     416:	8f ef       	ldi	r24, 0xFF	; 255
     418:	9f ef       	ldi	r25, 0xFF	; 255
}
     41a:	cf 91       	pop	r28
     41c:	1f 91       	pop	r17
     41e:	0f 91       	pop	r16
     420:	ff 90       	pop	r15
     422:	ef 90       	pop	r14
     424:	08 95       	ret

00000426 <BUFFER_Find>:

int16_t BUFFER_Find(BUFFER_t* Buffer, uint8_t* Data, uint16_t Size) {
     426:	2f 92       	push	r2
     428:	3f 92       	push	r3
     42a:	4f 92       	push	r4
     42c:	5f 92       	push	r5
     42e:	6f 92       	push	r6
     430:	7f 92       	push	r7
     432:	8f 92       	push	r8
     434:	9f 92       	push	r9
     436:	af 92       	push	r10
     438:	bf 92       	push	r11
     43a:	cf 92       	push	r12
     43c:	df 92       	push	r13
     43e:	ef 92       	push	r14
     440:	ff 92       	push	r15
     442:	0f 93       	push	r16
     444:	1f 93       	push	r17
     446:	cf 93       	push	r28
     448:	df 93       	push	r29
	uint16_t Num, Out, i, retval = 0;
	uint8_t found = 0;

	/* Check buffer structure and number of elements in buffer */
	if (Buffer == NULL || (Num = BUFFER_GetFull(Buffer)) < Size) {
     44a:	00 97       	sbiw	r24, 0x00	; 0
     44c:	09 f4       	brne	.+2      	; 0x450 <BUFFER_Find+0x2a>
     44e:	60 c0       	rjmp	.+192    	; 0x510 <BUFFER_Find+0xea>
     450:	8a 01       	movw	r16, r20
     452:	b7 2e       	mov	r11, r23
     454:	a6 2e       	mov	r10, r22
     456:	ec 01       	movw	r28, r24
     458:	70 df       	rcall	.-288    	; 0x33a <BUFFER_GetFull>
     45a:	fc 01       	movw	r30, r24
     45c:	80 17       	cp	r24, r16
     45e:	91 07       	cpc	r25, r17
     460:	08 f4       	brcc	.+2      	; 0x464 <BUFFER_Find+0x3e>
     462:	59 c0       	rjmp	.+178    	; 0x516 <BUFFER_Find+0xf0>
		return -1;
	}

	/* Create temporary variables */
	Out = Buffer->Out;
     464:	2c 81       	ldd	r18, Y+4	; 0x04
     466:	3d 81       	ldd	r19, Y+5	; 0x05

	/* Go through input elements in buffer */
	while (Num > 0) {
     468:	89 2b       	or	r24, r25
     46a:	09 f4       	brne	.+2      	; 0x46e <BUFFER_Find+0x48>
     46c:	57 c0       	rjmp	.+174    	; 0x51c <BUFFER_Find+0xf6>
		/* Check output overflow */
		if (Out >= Buffer->Size) {
     46e:	e8 80       	ld	r14, Y
     470:	f9 80       	ldd	r15, Y+1	; 0x01
			Out = 0;
		}

		/* Check if current element in buffer matches first element in data array */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {
     472:	4e 81       	ldd	r20, Y+6	; 0x06
     474:	5f 81       	ldd	r21, Y+7	; 0x07
     476:	ca 2c       	mov	r12, r10
     478:	db 2c       	mov	r13, r11
     47a:	d6 01       	movw	r26, r12
     47c:	9d 90       	ld	r9, X+
     47e:	6d 01       	movw	r12, r26
     480:	81 2c       	mov	r8, r1
     482:	80 e0       	ldi	r24, 0x00	; 0
     484:	90 e0       	ldi	r25, 0x00	; 0

	/* Go through input elements in buffer */
	while (Num > 0) {
		/* Check output overflow */
		if (Out >= Buffer->Size) {
			Out = 0;
     486:	71 2c       	mov	r7, r1
     488:	51 2c       	mov	r5, r1
		}

		/* Check if current element in buffer matches first element in data array */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {
			found = 1;
     48a:	33 24       	eor	r3, r3
     48c:	33 94       	inc	r3
		/* We have found first element */
		if (found) {
			/* First character found */
			/* Check others */
			i = 1;
			while (i < Size) {
     48e:	66 24       	eor	r6, r6
     490:	63 94       	inc	r6
     492:	41 2c       	mov	r4, r1
				/* Check output overflow */
				if (Out >= Buffer->Size) {
					Out = 0;
     494:	a7 2c       	mov	r10, r7
     496:	b5 2c       	mov	r11, r5
	Out = Buffer->Out;

	/* Go through input elements in buffer */
	while (Num > 0) {
		/* Check output overflow */
		if (Out >= Buffer->Size) {
     498:	2e 15       	cp	r18, r14
     49a:	3f 05       	cpc	r19, r15
     49c:	10 f0       	brcs	.+4      	; 0x4a2 <BUFFER_Find+0x7c>
			Out = 0;
     49e:	27 2d       	mov	r18, r7
     4a0:	35 2d       	mov	r19, r5
		}

		/* Check if current element in buffer matches first element in data array */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {
     4a2:	da 01       	movw	r26, r20
     4a4:	a2 0f       	add	r26, r18
     4a6:	b3 1f       	adc	r27, r19
     4a8:	6c 91       	ld	r22, X
     4aa:	69 15       	cp	r22, r9
     4ac:	d1 f1       	breq	.+116    	; 0x522 <BUFFER_Find+0xfc>
			found = 1;
		}

		/* Set new variables */
		Out++;
     4ae:	2f 5f       	subi	r18, 0xFF	; 255
     4b0:	3f 4f       	sbci	r19, 0xFF	; 255
		Num--;
     4b2:	31 97       	sbiw	r30, 0x01	; 1
		retval++;
     4b4:	01 96       	adiw	r24, 0x01	; 1

		/* We have found first element */
		if (found) {
     4b6:	88 20       	and	r8, r8
     4b8:	31 f1       	breq	.+76     	; 0x506 <BUFFER_Find+0xe0>
			/* First character found */
			/* Check others */
			i = 1;
			while (i < Size) {
     4ba:	02 30       	cpi	r16, 0x02	; 2
     4bc:	11 05       	cpc	r17, r1
     4be:	e0 f0       	brcs	.+56     	; 0x4f8 <BUFFER_Find+0xd2>
     4c0:	d6 01       	movw	r26, r12
     4c2:	66 2d       	mov	r22, r6
     4c4:	74 2d       	mov	r23, r4
				/* Check output overflow */
				if (Out >= Buffer->Size) {
     4c6:	2e 15       	cp	r18, r14
     4c8:	3f 05       	cpc	r19, r15
     4ca:	10 f0       	brcs	.+4      	; 0x4d0 <BUFFER_Find+0xaa>
					Out = 0;
     4cc:	2a 2d       	mov	r18, r10
     4ce:	3b 2d       	mov	r19, r11
				}

				/* Check if current character in buffer matches character in string */
				if ((uint8_t)Buffer->Buffer[Out] != (uint8_t)Data[i]) {
     4d0:	2d 90       	ld	r2, X+
     4d2:	ea 01       	movw	r28, r20
     4d4:	c2 0f       	add	r28, r18
     4d6:	d3 1f       	adc	r29, r19
     4d8:	c8 81       	ld	r28, Y
     4da:	c2 15       	cp	r28, r2
     4dc:	21 f0       	breq	.+8      	; 0x4e6 <BUFFER_Find+0xc0>
     4de:	01 97       	sbiw	r24, 0x01	; 1
					retval += i - 1;
     4e0:	86 0f       	add	r24, r22
     4e2:	97 1f       	adc	r25, r23
					break;
     4e4:	0b c0       	rjmp	.+22     	; 0x4fc <BUFFER_Find+0xd6>
				}

				/* Set new variables */
				Out++;
     4e6:	2f 5f       	subi	r18, 0xFF	; 255
     4e8:	3f 4f       	sbci	r19, 0xFF	; 255
				Num--;
     4ea:	31 97       	sbiw	r30, 0x01	; 1
				i++;
     4ec:	6f 5f       	subi	r22, 0xFF	; 255
     4ee:	7f 4f       	sbci	r23, 0xFF	; 255
		/* We have found first element */
		if (found) {
			/* First character found */
			/* Check others */
			i = 1;
			while (i < Size) {
     4f0:	60 17       	cp	r22, r16
     4f2:	71 07       	cpc	r23, r17
     4f4:	41 f7       	brne	.-48     	; 0x4c6 <BUFFER_Find+0xa0>
     4f6:	05 c0       	rjmp	.+10     	; 0x502 <BUFFER_Find+0xdc>
     4f8:	66 2d       	mov	r22, r6
     4fa:	74 2d       	mov	r23, r4
				Num--;
				i++;
			}

			/* We have found data sequence in buffer */
			if (i == Size) {
     4fc:	60 17       	cp	r22, r16
     4fe:	71 07       	cpc	r23, r17
     500:	11 f4       	brne	.+4      	; 0x506 <BUFFER_Find+0xe0>
				return retval - 1;
     502:	01 97       	sbiw	r24, 0x01	; 1
     504:	14 c0       	rjmp	.+40     	; 0x52e <BUFFER_Find+0x108>

	/* Create temporary variables */
	Out = Buffer->Out;

	/* Go through input elements in buffer */
	while (Num > 0) {
     506:	30 97       	sbiw	r30, 0x00	; 0
     508:	39 f6       	brne	.-114    	; 0x498 <BUFFER_Find+0x72>
			}
		}
	}

	/* Data sequence is not in buffer */
	return -1;
     50a:	8f ef       	ldi	r24, 0xFF	; 255
     50c:	9f ef       	ldi	r25, 0xFF	; 255
     50e:	0f c0       	rjmp	.+30     	; 0x52e <BUFFER_Find+0x108>
	uint16_t Num, Out, i, retval = 0;
	uint8_t found = 0;

	/* Check buffer structure and number of elements in buffer */
	if (Buffer == NULL || (Num = BUFFER_GetFull(Buffer)) < Size) {
		return -1;
     510:	8f ef       	ldi	r24, 0xFF	; 255
     512:	9f ef       	ldi	r25, 0xFF	; 255
     514:	0c c0       	rjmp	.+24     	; 0x52e <BUFFER_Find+0x108>
     516:	8f ef       	ldi	r24, 0xFF	; 255
     518:	9f ef       	ldi	r25, 0xFF	; 255
     51a:	09 c0       	rjmp	.+18     	; 0x52e <BUFFER_Find+0x108>
			}
		}
	}

	/* Data sequence is not in buffer */
	return -1;
     51c:	8f ef       	ldi	r24, 0xFF	; 255
     51e:	9f ef       	ldi	r25, 0xFF	; 255
     520:	06 c0       	rjmp	.+12     	; 0x52e <BUFFER_Find+0x108>
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {
			found = 1;
		}

		/* Set new variables */
		Out++;
     522:	2f 5f       	subi	r18, 0xFF	; 255
     524:	3f 4f       	sbci	r19, 0xFF	; 255
		Num--;
     526:	31 97       	sbiw	r30, 0x01	; 1
		retval++;
     528:	01 96       	adiw	r24, 0x01	; 1
			Out = 0;
		}

		/* Check if current element in buffer matches first element in data array */
		if ((uint8_t)Buffer->Buffer[Out] == (uint8_t)Data[0]) {
			found = 1;
     52a:	83 2c       	mov	r8, r3
     52c:	c6 cf       	rjmp	.-116    	; 0x4ba <BUFFER_Find+0x94>
		}
	}

	/* Data sequence is not in buffer */
	return -1;
}
     52e:	df 91       	pop	r29
     530:	cf 91       	pop	r28
     532:	1f 91       	pop	r17
     534:	0f 91       	pop	r16
     536:	ff 90       	pop	r15
     538:	ef 90       	pop	r14
     53a:	df 90       	pop	r13
     53c:	cf 90       	pop	r12
     53e:	bf 90       	pop	r11
     540:	af 90       	pop	r10
     542:	9f 90       	pop	r9
     544:	8f 90       	pop	r8
     546:	7f 90       	pop	r7
     548:	6f 90       	pop	r6
     54a:	5f 90       	pop	r5
     54c:	4f 90       	pop	r4
     54e:	3f 90       	pop	r3
     550:	2f 90       	pop	r2
     552:	08 95       	ret

00000554 <BUFFER_WriteString>:

uint16_t BUFFER_WriteString(BUFFER_t* Buffer, char* buff) {
	/* Write string to buffer */
	return BUFFER_Write(Buffer, (uint8_t *)buff, strlen(buff));
     554:	fb 01       	movw	r30, r22
     556:	01 90       	ld	r0, Z+
     558:	00 20       	and	r0, r0
     55a:	e9 f7       	brne	.-6      	; 0x556 <BUFFER_WriteString+0x2>
     55c:	31 97       	sbiw	r30, 0x01	; 1
     55e:	af 01       	movw	r20, r30
     560:	46 1b       	sub	r20, r22
     562:	57 0b       	sbc	r21, r23
     564:	27 ce       	rjmp	.-946    	; 0x1b4 <BUFFER_Write>
}
     566:	08 95       	ret

00000568 <BUFFER_ReadString>:

uint16_t BUFFER_ReadString(BUFFER_t* Buffer, char* buff, uint16_t buffsize) {
     568:	8f 92       	push	r8
     56a:	9f 92       	push	r9
     56c:	af 92       	push	r10
     56e:	bf 92       	push	r11
     570:	cf 92       	push	r12
     572:	df 92       	push	r13
     574:	ef 92       	push	r14
     576:	ff 92       	push	r15
     578:	0f 93       	push	r16
     57a:	1f 93       	push	r17
     57c:	cf 93       	push	r28
     57e:	df 93       	push	r29
     580:	1f 92       	push	r1
     582:	cd b7       	in	r28, 0x3d	; 61
     584:	de b7       	in	r29, 0x3e	; 62
	uint16_t i = 0;
	uint8_t ch;
	uint16_t freeMem;
	
	/* Check value buffer */
	if (Buffer == NULL) {
     586:	00 97       	sbiw	r24, 0x00	; 0
     588:	09 f4       	brne	.+2      	; 0x58c <BUFFER_ReadString+0x24>
     58a:	43 c0       	rjmp	.+134    	; 0x612 <BUFFER_ReadString+0xaa>
     58c:	4a 01       	movw	r8, r20
     58e:	5b 01       	movw	r10, r22
     590:	7c 01       	movw	r14, r24
		return 0;
	}
	
	/* Get free */
	freeMem = BUFFER_GetFree(Buffer);
     592:	96 de       	rcall	.-724    	; 0x2c0 <BUFFER_GetFree>
	
	/* Check for any data on USART */
	if (
     594:	89 2b       	or	r24, r25
     596:	09 f4       	brne	.+2      	; 0x59a <BUFFER_ReadString+0x32>
     598:	3f c0       	rjmp	.+126    	; 0x618 <BUFFER_ReadString+0xb0>
		freeMem == 0 ||                                                /*!< Buffer empty */
		(
			BUFFER_FindElement(Buffer, Buffer->StringDelimiter) < 0 && /*!< String delimiter is not in buffer */
     59a:	f7 01       	movw	r30, r14
     59c:	61 85       	ldd	r22, Z+9	; 0x09
     59e:	c7 01       	movw	r24, r14
     5a0:	07 df       	rcall	.-498    	; 0x3b0 <BUFFER_FindElement>
	/* Get free */
	freeMem = BUFFER_GetFree(Buffer);
	
	/* Check for any data on USART */
	if (
		freeMem == 0 ||                                                /*!< Buffer empty */
     5a2:	99 23       	and	r25, r25
     5a4:	2c f4       	brge	.+10     	; 0x5b0 <BUFFER_ReadString+0x48>
		(
			BUFFER_FindElement(Buffer, Buffer->StringDelimiter) < 0 && /*!< String delimiter is not in buffer */
			freeMem != 0 &&                                            /*!< Buffer is not full */
			BUFFER_GetFull(Buffer) < buffsize                          /*!< User buffer size is larger than number of elements in buffer */
     5a6:	c7 01       	movw	r24, r14
     5a8:	c8 de       	rcall	.-624    	; 0x33a <BUFFER_GetFull>
	/* Check for any data on USART */
	if (
		freeMem == 0 ||                                                /*!< Buffer empty */
		(
			BUFFER_FindElement(Buffer, Buffer->StringDelimiter) < 0 && /*!< String delimiter is not in buffer */
			freeMem != 0 &&                                            /*!< Buffer is not full */
     5aa:	88 15       	cp	r24, r8
     5ac:	99 05       	cpc	r25, r9
     5ae:	b8 f1       	brcs	.+110    	; 0x61e <BUFFER_ReadString+0xb6>
		/* Return 0 */
		return 0;
	}
	
	/* If available buffer size is more than 0 characters */
	while (i < (buffsize - 1)) {
     5b0:	f1 e0       	ldi	r31, 0x01	; 1
     5b2:	8f 1a       	sub	r8, r31
     5b4:	91 08       	sbc	r9, r1
     5b6:	d9 f0       	breq	.+54     	; 0x5ee <BUFFER_ReadString+0x86>
     5b8:	65 01       	movw	r12, r10
     5ba:	00 e0       	ldi	r16, 0x00	; 0
     5bc:	10 e0       	ldi	r17, 0x00	; 0
		/* We have available data */
		BUFFER_Read(Buffer, &ch, 1);
     5be:	41 e0       	ldi	r20, 0x01	; 1
     5c0:	50 e0       	ldi	r21, 0x00	; 0
     5c2:	be 01       	movw	r22, r28
     5c4:	6f 5f       	subi	r22, 0xFF	; 255
     5c6:	7f 4f       	sbci	r23, 0xFF	; 255
     5c8:	c7 01       	movw	r24, r14
     5ca:	3c de       	rcall	.-904    	; 0x244 <BUFFER_Read>
		
		/* Save character */
		buff[i] = (char)ch;
     5cc:	89 81       	ldd	r24, Y+1	; 0x01
     5ce:	f6 01       	movw	r30, r12
     5d0:	81 93       	st	Z+, r24
     5d2:	6f 01       	movw	r12, r30
		
		/* Check for end of string */
		if ((char)buff[i] == (char)Buffer->StringDelimiter) {
     5d4:	f7 01       	movw	r30, r14
     5d6:	91 85       	ldd	r25, Z+9	; 0x09
     5d8:	89 17       	cp	r24, r25
     5da:	29 f0       	breq	.+10     	; 0x5e6 <BUFFER_ReadString+0x7e>
			/* Done */
			break;
		}
		
		/* Increase */
		i++;
     5dc:	0f 5f       	subi	r16, 0xFF	; 255
     5de:	1f 4f       	sbci	r17, 0xFF	; 255
		/* Return 0 */
		return 0;
	}
	
	/* If available buffer size is more than 0 characters */
	while (i < (buffsize - 1)) {
     5e0:	08 15       	cp	r16, r8
     5e2:	19 05       	cpc	r17, r9
     5e4:	60 f3       	brcs	.-40     	; 0x5be <BUFFER_ReadString+0x56>
		/* Increase */
		i++;
	}
	
	/* Add zero to the end of string */
	if (i == (buffsize - 1)) {
     5e6:	80 16       	cp	r8, r16
     5e8:	91 06       	cpc	r9, r17
     5ea:	51 f4       	brne	.+20     	; 0x600 <BUFFER_ReadString+0x98>
     5ec:	02 c0       	rjmp	.+4      	; 0x5f2 <BUFFER_ReadString+0x8a>
		/* Return 0 */
		return 0;
	}
	
	/* If available buffer size is more than 0 characters */
	while (i < (buffsize - 1)) {
     5ee:	00 e0       	ldi	r16, 0x00	; 0
     5f0:	10 e0       	ldi	r17, 0x00	; 0
		i++;
	}
	
	/* Add zero to the end of string */
	if (i == (buffsize - 1)) {
		buff[i] = 0;
     5f2:	f5 01       	movw	r30, r10
     5f4:	e0 0f       	add	r30, r16
     5f6:	f1 1f       	adc	r31, r17
     5f8:	10 82       	st	Z, r1
     5fa:	80 2f       	mov	r24, r16
     5fc:	91 2f       	mov	r25, r17
     5fe:	11 c0       	rjmp	.+34     	; 0x622 <BUFFER_ReadString+0xba>
	} else {
		buff[++i] = 0;
     600:	0f 5f       	subi	r16, 0xFF	; 255
     602:	1f 4f       	sbci	r17, 0xFF	; 255
     604:	f5 01       	movw	r30, r10
     606:	e0 0f       	add	r30, r16
     608:	f1 1f       	adc	r31, r17
     60a:	10 82       	st	Z, r1
     60c:	80 2f       	mov	r24, r16
     60e:	91 2f       	mov	r25, r17
     610:	08 c0       	rjmp	.+16     	; 0x622 <BUFFER_ReadString+0xba>
	uint8_t ch;
	uint16_t freeMem;
	
	/* Check value buffer */
	if (Buffer == NULL) {
		return 0;
     612:	80 e0       	ldi	r24, 0x00	; 0
     614:	90 e0       	ldi	r25, 0x00	; 0
     616:	05 c0       	rjmp	.+10     	; 0x622 <BUFFER_ReadString+0xba>
			freeMem != 0 &&                                            /*!< Buffer is not full */
			BUFFER_GetFull(Buffer) < buffsize                          /*!< User buffer size is larger than number of elements in buffer */
		)
	) {
		/* Return 0 */
		return 0;
     618:	80 e0       	ldi	r24, 0x00	; 0
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	02 c0       	rjmp	.+4      	; 0x622 <BUFFER_ReadString+0xba>
     61e:	80 e0       	ldi	r24, 0x00	; 0
     620:	90 e0       	ldi	r25, 0x00	; 0
		buff[++i] = 0;
	}

	/* Return number of characters in buffer */
	return i;
}
     622:	0f 90       	pop	r0
     624:	df 91       	pop	r29
     626:	cf 91       	pop	r28
     628:	1f 91       	pop	r17
     62a:	0f 91       	pop	r16
     62c:	ff 90       	pop	r15
     62e:	ef 90       	pop	r14
     630:	df 90       	pop	r13
     632:	cf 90       	pop	r12
     634:	bf 90       	pop	r11
     636:	af 90       	pop	r10
     638:	9f 90       	pop	r9
     63a:	8f 90       	pop	r8
     63c:	08 95       	ret

0000063e <ParseNumber>:
	/* Send command */
	SendCommand(ESP8266, ESP8266_COMMAND_AUTOCONN, NULL, NULL);
	
	/* Wait till end */
	return ESP8266_WaitReady(ESP8266);
}
     63e:	cf 92       	push	r12
     640:	df 92       	push	r13
     642:	ef 92       	push	r14
     644:	ff 92       	push	r15
     646:	0f 93       	push	r16
     648:	1f 93       	push	r17
     64a:	fc 01       	movw	r30, r24
     64c:	db 01       	movw	r26, r22
     64e:	80 81       	ld	r24, Z
     650:	8d 32       	cpi	r24, 0x2D	; 45
     652:	19 f4       	brne	.+6      	; 0x65a <ParseNumber+0x1c>
     654:	31 96       	adiw	r30, 0x01	; 1
     656:	91 e0       	ldi	r25, 0x01	; 1
     658:	01 c0       	rjmp	.+2      	; 0x65c <ParseNumber+0x1e>
     65a:	90 e0       	ldi	r25, 0x00	; 0
     65c:	00 81       	ld	r16, Z
     65e:	80 ed       	ldi	r24, 0xD0	; 208
     660:	80 0f       	add	r24, r16
     662:	8a 30       	cpi	r24, 0x0A	; 10
     664:	48 f5       	brcc	.+82     	; 0x6b8 <ParseNumber+0x7a>
     666:	31 96       	adiw	r30, 0x01	; 1
     668:	89 2f       	mov	r24, r25
     66a:	40 e0       	ldi	r20, 0x00	; 0
     66c:	50 e0       	ldi	r21, 0x00	; 0
     66e:	ba 01       	movw	r22, r20
     670:	44 0f       	add	r20, r20
     672:	55 1f       	adc	r21, r21
     674:	66 1f       	adc	r22, r22
     676:	77 1f       	adc	r23, r23
     678:	6a 01       	movw	r12, r20
     67a:	7b 01       	movw	r14, r22
     67c:	cc 0c       	add	r12, r12
     67e:	dd 1c       	adc	r13, r13
     680:	ee 1c       	adc	r14, r14
     682:	ff 1c       	adc	r15, r15
     684:	cc 0c       	add	r12, r12
     686:	dd 1c       	adc	r13, r13
     688:	ee 1c       	adc	r14, r14
     68a:	ff 1c       	adc	r15, r15
     68c:	4c 0d       	add	r20, r12
     68e:	5d 1d       	adc	r21, r13
     690:	6e 1d       	adc	r22, r14
     692:	7f 1d       	adc	r23, r15
     694:	10 e0       	ldi	r17, 0x00	; 0
     696:	00 53       	subi	r16, 0x30	; 48
     698:	11 09       	sbc	r17, r1
     69a:	01 2e       	mov	r0, r17
     69c:	00 0c       	add	r0, r0
     69e:	22 0b       	sbc	r18, r18
     6a0:	33 0b       	sbc	r19, r19
     6a2:	40 0f       	add	r20, r16
     6a4:	51 1f       	adc	r21, r17
     6a6:	62 1f       	adc	r22, r18
     6a8:	73 1f       	adc	r23, r19
     6aa:	8f 5f       	subi	r24, 0xFF	; 255
     6ac:	01 91       	ld	r16, Z+
     6ae:	20 ed       	ldi	r18, 0xD0	; 208
     6b0:	20 0f       	add	r18, r16
     6b2:	2a 30       	cpi	r18, 0x0A	; 10
     6b4:	e8 f2       	brcs	.-70     	; 0x670 <ParseNumber+0x32>
     6b6:	04 c0       	rjmp	.+8      	; 0x6c0 <ParseNumber+0x82>
     6b8:	89 2f       	mov	r24, r25
     6ba:	40 e0       	ldi	r20, 0x00	; 0
     6bc:	50 e0       	ldi	r21, 0x00	; 0
     6be:	ba 01       	movw	r22, r20
     6c0:	10 97       	sbiw	r26, 0x00	; 0
     6c2:	09 f0       	breq	.+2      	; 0x6c6 <ParseNumber+0x88>
     6c4:	8c 93       	st	X, r24
     6c6:	99 23       	and	r25, r25
     6c8:	51 f0       	breq	.+20     	; 0x6de <ParseNumber+0xa0>
     6ca:	8a 01       	movw	r16, r20
     6cc:	9b 01       	movw	r18, r22
     6ce:	66 27       	eor	r22, r22
     6d0:	77 27       	eor	r23, r23
     6d2:	cb 01       	movw	r24, r22
     6d4:	60 1b       	sub	r22, r16
     6d6:	71 0b       	sbc	r23, r17
     6d8:	82 0b       	sbc	r24, r18
     6da:	93 0b       	sbc	r25, r19
     6dc:	02 c0       	rjmp	.+4      	; 0x6e2 <ParseNumber+0xa4>
     6de:	cb 01       	movw	r24, r22
     6e0:	ba 01       	movw	r22, r20
     6e2:	1f 91       	pop	r17
     6e4:	0f 91       	pop	r16
     6e6:	ff 90       	pop	r15
     6e8:	ef 90       	pop	r14
     6ea:	df 90       	pop	r13
     6ec:	cf 90       	pop	r12
     6ee:	08 95       	ret

000006f0 <EscapeStringAndSend>:
     6f0:	ef 92       	push	r14
     6f2:	ff 92       	push	r15
     6f4:	0f 93       	push	r16
     6f6:	1f 93       	push	r17
     6f8:	cf 93       	push	r28
     6fa:	df 93       	push	r29
     6fc:	1f 92       	push	r1
     6fe:	cd b7       	in	r28, 0x3d	; 61
     700:	de b7       	in	r29, 0x3e	; 62
     702:	8c 01       	movw	r16, r24
     704:	8c e5       	ldi	r24, 0x5C	; 92
     706:	89 83       	std	Y+1, r24	; 0x01
     708:	f8 01       	movw	r30, r16
     70a:	90 81       	ld	r25, Z
     70c:	99 23       	and	r25, r25
     70e:	d9 f0       	breq	.+54     	; 0x746 <EscapeStringAndSend+0x56>
     710:	01 c0       	rjmp	.+2      	; 0x714 <EscapeStringAndSend+0x24>
     712:	87 01       	movw	r16, r14
     714:	9c 32       	cpi	r25, 0x2C	; 44
     716:	21 f0       	breq	.+8      	; 0x720 <EscapeStringAndSend+0x30>
     718:	92 32       	cpi	r25, 0x22	; 34
     71a:	11 f0       	breq	.+4      	; 0x720 <EscapeStringAndSend+0x30>
     71c:	9c 35       	cpi	r25, 0x5C	; 92
     71e:	31 f4       	brne	.+12     	; 0x72c <EscapeStringAndSend+0x3c>
     720:	61 e0       	ldi	r22, 0x01	; 1
     722:	70 e0       	ldi	r23, 0x00	; 0
     724:	ce 01       	movw	r24, r28
     726:	01 96       	adiw	r24, 0x01	; 1
     728:	0e 94 5f 13 	call	0x26be	; 0x26be <ESP8266_LL_USARTSend>
     72c:	78 01       	movw	r14, r16
     72e:	ff ef       	ldi	r31, 0xFF	; 255
     730:	ef 1a       	sub	r14, r31
     732:	ff 0a       	sbc	r15, r31
     734:	61 e0       	ldi	r22, 0x01	; 1
     736:	70 e0       	ldi	r23, 0x00	; 0
     738:	c8 01       	movw	r24, r16
     73a:	0e 94 5f 13 	call	0x26be	; 0x26be <ESP8266_LL_USARTSend>
     73e:	f8 01       	movw	r30, r16
     740:	91 81       	ldd	r25, Z+1	; 0x01
     742:	91 11       	cpse	r25, r1
     744:	e6 cf       	rjmp	.-52     	; 0x712 <EscapeStringAndSend+0x22>
     746:	0f 90       	pop	r0
     748:	df 91       	pop	r29
     74a:	cf 91       	pop	r28
     74c:	1f 91       	pop	r17
     74e:	0f 91       	pop	r16
     750:	ff 90       	pop	r15
     752:	ef 90       	pop	r14
     754:	08 95       	ret

00000756 <ParseIP>:
     756:	af 92       	push	r10
     758:	bf 92       	push	r11
     75a:	cf 92       	push	r12
     75c:	df 92       	push	r13
     75e:	ef 92       	push	r14
     760:	ff 92       	push	r15
     762:	1f 93       	push	r17
     764:	cf 93       	push	r28
     766:	df 93       	push	r29
     768:	cd b7       	in	r28, 0x3d	; 61
     76a:	de b7       	in	r29, 0x3e	; 62
     76c:	61 97       	sbiw	r28, 0x11	; 17
     76e:	0f b6       	in	r0, 0x3f	; 63
     770:	f8 94       	cli
     772:	de bf       	out	0x3e, r29	; 62
     774:	0f be       	out	0x3f, r0	; 63
     776:	cd bf       	out	0x3d, r28	; 61
     778:	fc 01       	movw	r30, r24
     77a:	6b 01       	movw	r12, r22
     77c:	5a 01       	movw	r10, r20
     77e:	9f e0       	ldi	r25, 0x0F	; 15
     780:	de 01       	movw	r26, r28
     782:	12 96       	adiw	r26, 0x02	; 2
     784:	01 90       	ld	r0, Z+
     786:	0d 92       	st	X+, r0
     788:	9a 95       	dec	r25
     78a:	e1 f7       	brne	.-8      	; 0x784 <ParseIP+0x2e>
     78c:	19 8a       	std	Y+17, r1	; 0x11
     78e:	64 e1       	ldi	r22, 0x14	; 20
     790:	72 e0       	ldi	r23, 0x02	; 2
     792:	ce 01       	movw	r24, r28
     794:	02 96       	adiw	r24, 0x02	; 2
     796:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <strtok>
     79a:	00 97       	sbiw	r24, 0x00	; 0
     79c:	e9 f4       	brne	.+58     	; 0x7d8 <ParseIP+0x82>
     79e:	10 e0       	ldi	r17, 0x00	; 0
     7a0:	15 c0       	rjmp	.+42     	; 0x7cc <ParseIP+0x76>
     7a2:	be 01       	movw	r22, r28
     7a4:	6f 5f       	subi	r22, 0xFF	; 255
     7a6:	7f 4f       	sbci	r23, 0xFF	; 255
     7a8:	4a df       	rcall	.-364    	; 0x63e <ParseNumber>
     7aa:	f7 01       	movw	r30, r14
     7ac:	61 93       	st	Z+, r22
     7ae:	7f 01       	movw	r14, r30
     7b0:	89 81       	ldd	r24, Y+1	; 0x01
     7b2:	18 0f       	add	r17, r24
     7b4:	ec 15       	cp	r30, r12
     7b6:	fd 05       	cpc	r31, r13
     7b8:	49 f0       	breq	.+18     	; 0x7cc <ParseIP+0x76>
     7ba:	1f 5f       	subi	r17, 0xFF	; 255
     7bc:	64 e1       	ldi	r22, 0x14	; 20
     7be:	72 e0       	ldi	r23, 0x02	; 2
     7c0:	80 e0       	ldi	r24, 0x00	; 0
     7c2:	90 e0       	ldi	r25, 0x00	; 0
     7c4:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <strtok>
     7c8:	00 97       	sbiw	r24, 0x00	; 0
     7ca:	59 f7       	brne	.-42     	; 0x7a2 <ParseIP+0x4c>
     7cc:	a1 14       	cp	r10, r1
     7ce:	b1 04       	cpc	r11, r1
     7d0:	79 f0       	breq	.+30     	; 0x7f0 <ParseIP+0x9a>
     7d2:	f5 01       	movw	r30, r10
     7d4:	10 83       	st	Z, r17
     7d6:	0c c0       	rjmp	.+24     	; 0x7f0 <ParseIP+0x9a>
     7d8:	be 01       	movw	r22, r28
     7da:	6f 5f       	subi	r22, 0xFF	; 255
     7dc:	7f 4f       	sbci	r23, 0xFF	; 255
     7de:	2f df       	rcall	.-418    	; 0x63e <ParseNumber>
     7e0:	f6 01       	movw	r30, r12
     7e2:	61 93       	st	Z+, r22
     7e4:	7f 01       	movw	r14, r30
     7e6:	19 81       	ldd	r17, Y+1	; 0x01
     7e8:	f4 e0       	ldi	r31, 0x04	; 4
     7ea:	cf 0e       	add	r12, r31
     7ec:	d1 1c       	adc	r13, r1
     7ee:	e5 cf       	rjmp	.-54     	; 0x7ba <ParseIP+0x64>
     7f0:	61 96       	adiw	r28, 0x11	; 17
     7f2:	0f b6       	in	r0, 0x3f	; 63
     7f4:	f8 94       	cli
     7f6:	de bf       	out	0x3e, r29	; 62
     7f8:	0f be       	out	0x3f, r0	; 63
     7fa:	cd bf       	out	0x3d, r28	; 61
     7fc:	df 91       	pop	r29
     7fe:	cf 91       	pop	r28
     800:	1f 91       	pop	r17
     802:	ff 90       	pop	r15
     804:	ef 90       	pop	r14
     806:	df 90       	pop	r13
     808:	cf 90       	pop	r12
     80a:	bf 90       	pop	r11
     80c:	af 90       	pop	r10
     80e:	08 95       	ret

00000810 <ParseCIPSTA>:
     810:	0f 93       	push	r16
     812:	1f 93       	push	r17
     814:	cf 93       	push	r28
     816:	df 93       	push	r29
     818:	ec 01       	movw	r28, r24
     81a:	8b 01       	movw	r16, r22
     81c:	4e e0       	ldi	r20, 0x0E	; 14
     81e:	50 e0       	ldi	r21, 0x00	; 0
     820:	86 e1       	ldi	r24, 0x16	; 22
     822:	92 e0       	ldi	r25, 0x02	; 2
     824:	0e 94 50 17 	call	0x2ea0	; 0x2ea0 <strncmp>
     828:	89 2b       	or	r24, r25
     82a:	09 f4       	brne	.+2      	; 0x82e <ParseCIPSTA+0x1e>
     82c:	6f c0       	rjmp	.+222    	; 0x90c <ParseCIPSTA+0xfc>
     82e:	43 e1       	ldi	r20, 0x13	; 19
     830:	50 e0       	ldi	r21, 0x00	; 0
     832:	b8 01       	movw	r22, r16
     834:	85 e2       	ldi	r24, 0x25	; 37
     836:	92 e0       	ldi	r25, 0x02	; 2
     838:	0e 94 50 17 	call	0x2ea0	; 0x2ea0 <strncmp>
     83c:	89 2b       	or	r24, r25
     83e:	09 f4       	brne	.+2      	; 0x842 <ParseCIPSTA+0x32>
     840:	79 c0       	rjmp	.+242    	; 0x934 <ParseCIPSTA+0x124>
     842:	43 e1       	ldi	r20, 0x13	; 19
     844:	50 e0       	ldi	r21, 0x00	; 0
     846:	b8 01       	movw	r22, r16
     848:	89 e3       	ldi	r24, 0x39	; 57
     84a:	92 e0       	ldi	r25, 0x02	; 2
     84c:	0e 94 50 17 	call	0x2ea0	; 0x2ea0 <strncmp>
     850:	89 2b       	or	r24, r25
     852:	09 f4       	brne	.+2      	; 0x856 <ParseCIPSTA+0x46>
     854:	82 c0       	rjmp	.+260    	; 0x95a <ParseCIPSTA+0x14a>
     856:	4a e0       	ldi	r20, 0x0A	; 10
     858:	50 e0       	ldi	r21, 0x00	; 0
     85a:	b8 01       	movw	r22, r16
     85c:	8d e4       	ldi	r24, 0x4D	; 77
     85e:	92 e0       	ldi	r25, 0x02	; 2
     860:	0e 94 50 17 	call	0x2ea0	; 0x2ea0 <strncmp>
     864:	89 2b       	or	r24, r25
     866:	09 f4       	brne	.+2      	; 0x86a <ParseCIPSTA+0x5a>
     868:	53 c0       	rjmp	.+166    	; 0x910 <ParseCIPSTA+0x100>
     86a:	4f e0       	ldi	r20, 0x0F	; 15
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	b8 01       	movw	r22, r16
     870:	88 e5       	ldi	r24, 0x58	; 88
     872:	92 e0       	ldi	r25, 0x02	; 2
     874:	0e 94 50 17 	call	0x2ea0	; 0x2ea0 <strncmp>
     878:	89 2b       	or	r24, r25
     87a:	09 f4       	brne	.+2      	; 0x87e <ParseCIPSTA+0x6e>
     87c:	5d c0       	rjmp	.+186    	; 0x938 <ParseCIPSTA+0x128>
     87e:	4f e0       	ldi	r20, 0x0F	; 15
     880:	50 e0       	ldi	r21, 0x00	; 0
     882:	b8 01       	movw	r22, r16
     884:	88 e6       	ldi	r24, 0x68	; 104
     886:	92 e0       	ldi	r25, 0x02	; 2
     888:	0e 94 50 17 	call	0x2ea0	; 0x2ea0 <strncmp>
     88c:	89 2b       	or	r24, r25
     88e:	09 f4       	brne	.+2      	; 0x892 <ParseCIPSTA+0x82>
     890:	66 c0       	rjmp	.+204    	; 0x95e <ParseCIPSTA+0x14e>
     892:	4d e0       	ldi	r20, 0x0D	; 13
     894:	50 e0       	ldi	r21, 0x00	; 0
     896:	b8 01       	movw	r22, r16
     898:	88 e7       	ldi	r24, 0x78	; 120
     89a:	92 e0       	ldi	r25, 0x02	; 2
     89c:	0e 94 50 17 	call	0x2ea0	; 0x2ea0 <strncmp>
     8a0:	89 2b       	or	r24, r25
     8a2:	09 f4       	brne	.+2      	; 0x8a6 <ParseCIPSTA+0x96>
     8a4:	6d c0       	rjmp	.+218    	; 0x980 <ParseCIPSTA+0x170>
     8a6:	42 e1       	ldi	r20, 0x12	; 18
     8a8:	50 e0       	ldi	r21, 0x00	; 0
     8aa:	b8 01       	movw	r22, r16
     8ac:	86 e8       	ldi	r24, 0x86	; 134
     8ae:	92 e0       	ldi	r25, 0x02	; 2
     8b0:	0e 94 50 17 	call	0x2ea0	; 0x2ea0 <strncmp>
     8b4:	89 2b       	or	r24, r25
     8b6:	09 f4       	brne	.+2      	; 0x8ba <ParseCIPSTA+0xaa>
     8b8:	76 c0       	rjmp	.+236    	; 0x9a6 <ParseCIPSTA+0x196>
     8ba:	42 e1       	ldi	r20, 0x12	; 18
     8bc:	50 e0       	ldi	r21, 0x00	; 0
     8be:	b8 01       	movw	r22, r16
     8c0:	89 e9       	ldi	r24, 0x99	; 153
     8c2:	92 e0       	ldi	r25, 0x02	; 2
     8c4:	0e 94 50 17 	call	0x2ea0	; 0x2ea0 <strncmp>
     8c8:	89 2b       	or	r24, r25
     8ca:	09 f4       	brne	.+2      	; 0x8ce <ParseCIPSTA+0xbe>
     8cc:	7f c0       	rjmp	.+254    	; 0x9cc <ParseCIPSTA+0x1bc>
     8ce:	49 e0       	ldi	r20, 0x09	; 9
     8d0:	50 e0       	ldi	r21, 0x00	; 0
     8d2:	b8 01       	movw	r22, r16
     8d4:	8c ea       	ldi	r24, 0xAC	; 172
     8d6:	92 e0       	ldi	r25, 0x02	; 2
     8d8:	0e 94 50 17 	call	0x2ea0	; 0x2ea0 <strncmp>
     8dc:	89 2b       	or	r24, r25
     8de:	09 f4       	brne	.+2      	; 0x8e2 <ParseCIPSTA+0xd2>
     8e0:	51 c0       	rjmp	.+162    	; 0x984 <ParseCIPSTA+0x174>
     8e2:	4e e0       	ldi	r20, 0x0E	; 14
     8e4:	50 e0       	ldi	r21, 0x00	; 0
     8e6:	b8 01       	movw	r22, r16
     8e8:	86 eb       	ldi	r24, 0xB6	; 182
     8ea:	92 e0       	ldi	r25, 0x02	; 2
     8ec:	0e 94 50 17 	call	0x2ea0	; 0x2ea0 <strncmp>
     8f0:	89 2b       	or	r24, r25
     8f2:	09 f4       	brne	.+2      	; 0x8f6 <ParseCIPSTA+0xe6>
     8f4:	5a c0       	rjmp	.+180    	; 0x9aa <ParseCIPSTA+0x19a>
     8f6:	4e e0       	ldi	r20, 0x0E	; 14
     8f8:	50 e0       	ldi	r21, 0x00	; 0
     8fa:	b8 01       	movw	r22, r16
     8fc:	85 ec       	ldi	r24, 0xC5	; 197
     8fe:	92 e0       	ldi	r25, 0x02	; 2
     900:	0e 94 50 17 	call	0x2ea0	; 0x2ea0 <strncmp>
     904:	89 2b       	or	r24, r25
     906:	09 f4       	brne	.+2      	; 0x90a <ParseCIPSTA+0xfa>
     908:	63 c0       	rjmp	.+198    	; 0x9d0 <ParseCIPSTA+0x1c0>
     90a:	72 c0       	rjmp	.+228    	; 0x9f0 <ParseCIPSTA+0x1e0>
     90c:	2e e0       	ldi	r18, 0x0E	; 14
     90e:	01 c0       	rjmp	.+2      	; 0x912 <ParseCIPSTA+0x102>
     910:	2a e0       	ldi	r18, 0x0A	; 10
     912:	be 01       	movw	r22, r28
     914:	69 55       	subi	r22, 0x59	; 89
     916:	7e 4f       	sbci	r23, 0xFE	; 254
     918:	30 e0       	ldi	r19, 0x00	; 0
     91a:	c9 01       	movw	r24, r18
     91c:	02 96       	adiw	r24, 0x02	; 2
     91e:	40 e0       	ldi	r20, 0x00	; 0
     920:	50 e0       	ldi	r21, 0x00	; 0
     922:	80 0f       	add	r24, r16
     924:	91 1f       	adc	r25, r17
     926:	17 df       	rcall	.-466    	; 0x756 <ParseIP>
     928:	cf 5d       	subi	r28, 0xDF	; 223
     92a:	dd 4f       	sbci	r29, 0xFD	; 253
     92c:	88 81       	ld	r24, Y
     92e:	81 60       	ori	r24, 0x01	; 1
     930:	88 83       	st	Y, r24
     932:	5e c0       	rjmp	.+188    	; 0x9f0 <ParseCIPSTA+0x1e0>
     934:	83 e1       	ldi	r24, 0x13	; 19
     936:	01 c0       	rjmp	.+2      	; 0x93a <ParseCIPSTA+0x12a>
     938:	8f e0       	ldi	r24, 0x0F	; 15
     93a:	be 01       	movw	r22, r28
     93c:	61 55       	subi	r22, 0x51	; 81
     93e:	7e 4f       	sbci	r23, 0xFE	; 254
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	02 96       	adiw	r24, 0x02	; 2
     944:	40 e0       	ldi	r20, 0x00	; 0
     946:	50 e0       	ldi	r21, 0x00	; 0
     948:	80 0f       	add	r24, r16
     94a:	91 1f       	adc	r25, r17
     94c:	04 df       	rcall	.-504    	; 0x756 <ParseIP>
     94e:	cf 5d       	subi	r28, 0xDF	; 223
     950:	dd 4f       	sbci	r29, 0xFD	; 253
     952:	88 81       	ld	r24, Y
     954:	82 60       	ori	r24, 0x02	; 2
     956:	88 83       	st	Y, r24
     958:	4b c0       	rjmp	.+150    	; 0x9f0 <ParseCIPSTA+0x1e0>
     95a:	83 e1       	ldi	r24, 0x13	; 19
     95c:	01 c0       	rjmp	.+2      	; 0x960 <ParseCIPSTA+0x150>
     95e:	8f e0       	ldi	r24, 0x0F	; 15
     960:	be 01       	movw	r22, r28
     962:	65 55       	subi	r22, 0x55	; 85
     964:	7e 4f       	sbci	r23, 0xFE	; 254
     966:	90 e0       	ldi	r25, 0x00	; 0
     968:	02 96       	adiw	r24, 0x02	; 2
     96a:	40 e0       	ldi	r20, 0x00	; 0
     96c:	50 e0       	ldi	r21, 0x00	; 0
     96e:	80 0f       	add	r24, r16
     970:	91 1f       	adc	r25, r17
     972:	f1 de       	rcall	.-542    	; 0x756 <ParseIP>
     974:	cf 5d       	subi	r28, 0xDF	; 223
     976:	dd 4f       	sbci	r29, 0xFD	; 253
     978:	88 81       	ld	r24, Y
     97a:	84 60       	ori	r24, 0x04	; 4
     97c:	88 83       	st	Y, r24
     97e:	38 c0       	rjmp	.+112    	; 0x9f0 <ParseCIPSTA+0x1e0>
     980:	8d e0       	ldi	r24, 0x0D	; 13
     982:	01 c0       	rjmp	.+2      	; 0x986 <ParseCIPSTA+0x176>
     984:	89 e0       	ldi	r24, 0x09	; 9
     986:	be 01       	movw	r22, r28
     988:	67 54       	subi	r22, 0x47	; 71
     98a:	7e 4f       	sbci	r23, 0xFE	; 254
     98c:	90 e0       	ldi	r25, 0x00	; 0
     98e:	02 96       	adiw	r24, 0x02	; 2
     990:	40 e0       	ldi	r20, 0x00	; 0
     992:	50 e0       	ldi	r21, 0x00	; 0
     994:	80 0f       	add	r24, r16
     996:	91 1f       	adc	r25, r17
     998:	de de       	rcall	.-580    	; 0x756 <ParseIP>
     99a:	cf 5d       	subi	r28, 0xDF	; 223
     99c:	dd 4f       	sbci	r29, 0xFD	; 253
     99e:	88 81       	ld	r24, Y
     9a0:	80 61       	ori	r24, 0x10	; 16
     9a2:	88 83       	st	Y, r24
     9a4:	25 c0       	rjmp	.+74     	; 0x9f0 <ParseCIPSTA+0x1e0>
     9a6:	82 e1       	ldi	r24, 0x12	; 18
     9a8:	01 c0       	rjmp	.+2      	; 0x9ac <ParseCIPSTA+0x19c>
     9aa:	8e e0       	ldi	r24, 0x0E	; 14
     9ac:	be 01       	movw	r22, r28
     9ae:	6f 53       	subi	r22, 0x3F	; 63
     9b0:	7e 4f       	sbci	r23, 0xFE	; 254
     9b2:	90 e0       	ldi	r25, 0x00	; 0
     9b4:	02 96       	adiw	r24, 0x02	; 2
     9b6:	40 e0       	ldi	r20, 0x00	; 0
     9b8:	50 e0       	ldi	r21, 0x00	; 0
     9ba:	80 0f       	add	r24, r16
     9bc:	91 1f       	adc	r25, r17
     9be:	cb de       	rcall	.-618    	; 0x756 <ParseIP>
     9c0:	cf 5d       	subi	r28, 0xDF	; 223
     9c2:	dd 4f       	sbci	r29, 0xFD	; 253
     9c4:	88 81       	ld	r24, Y
     9c6:	80 62       	ori	r24, 0x20	; 32
     9c8:	88 83       	st	Y, r24
     9ca:	12 c0       	rjmp	.+36     	; 0x9f0 <ParseCIPSTA+0x1e0>
     9cc:	82 e1       	ldi	r24, 0x12	; 18
     9ce:	01 c0       	rjmp	.+2      	; 0x9d2 <ParseCIPSTA+0x1c2>
     9d0:	8e e0       	ldi	r24, 0x0E	; 14
     9d2:	be 01       	movw	r22, r28
     9d4:	63 54       	subi	r22, 0x43	; 67
     9d6:	7e 4f       	sbci	r23, 0xFE	; 254
     9d8:	90 e0       	ldi	r25, 0x00	; 0
     9da:	02 96       	adiw	r24, 0x02	; 2
     9dc:	40 e0       	ldi	r20, 0x00	; 0
     9de:	50 e0       	ldi	r21, 0x00	; 0
     9e0:	80 0f       	add	r24, r16
     9e2:	91 1f       	adc	r25, r17
     9e4:	b8 de       	rcall	.-656    	; 0x756 <ParseIP>
     9e6:	cf 5d       	subi	r28, 0xDF	; 223
     9e8:	dd 4f       	sbci	r29, 0xFD	; 253
     9ea:	88 81       	ld	r24, Y
     9ec:	80 64       	ori	r24, 0x40	; 64
     9ee:	88 83       	st	Y, r24
     9f0:	df 91       	pop	r29
     9f2:	cf 91       	pop	r28
     9f4:	1f 91       	pop	r17
     9f6:	0f 91       	pop	r16
     9f8:	08 95       	ret

000009fa <ParseMAC>:
     9fa:	8f 92       	push	r8
     9fc:	9f 92       	push	r9
     9fe:	af 92       	push	r10
     a00:	bf 92       	push	r11
     a02:	cf 92       	push	r12
     a04:	df 92       	push	r13
     a06:	ef 92       	push	r14
     a08:	ff 92       	push	r15
     a0a:	0f 93       	push	r16
     a0c:	1f 93       	push	r17
     a0e:	cf 93       	push	r28
     a10:	df 93       	push	r29
     a12:	8b 01       	movw	r16, r22
     a14:	7a 01       	movw	r14, r20
     a16:	69 e8       	ldi	r22, 0x89	; 137
     a18:	73 e0       	ldi	r23, 0x03	; 3
     a1a:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <strtok>
     a1e:	00 97       	sbiw	r24, 0x00	; 0
     a20:	e1 f1       	breq	.+120    	; 0xa9a <ParseMAC+0xa0>
     a22:	e8 01       	movw	r28, r16
     a24:	0a 5f       	subi	r16, 0xFA	; 250
     a26:	1f 4f       	sbci	r17, 0xFF	; 255
     a28:	d1 2c       	mov	r13, r1
     a2a:	81 2c       	mov	r8, r1
     a2c:	91 2c       	mov	r9, r1
     a2e:	a1 2c       	mov	r10, r1
     a30:	b1 2c       	mov	r11, r1
     a32:	c1 2c       	mov	r12, r1
     a34:	28 2f       	mov	r18, r24
     a36:	e8 2f       	mov	r30, r24
     a38:	f9 2f       	mov	r31, r25
     a3a:	88 2d       	mov	r24, r8
     a3c:	99 2d       	mov	r25, r9
     a3e:	aa 2d       	mov	r26, r10
     a40:	bb 2d       	mov	r27, r11
     a42:	0d c0       	rjmp	.+26     	; 0xa5e <ParseMAC+0x64>
     a44:	37 55       	subi	r19, 0x57	; 87
     a46:	07 c0       	rjmp	.+14     	; 0xa56 <ParseMAC+0x5c>
     a48:	4f eb       	ldi	r20, 0xBF	; 191
     a4a:	43 0f       	add	r20, r19
     a4c:	46 30       	cpi	r20, 0x06	; 6
     a4e:	10 f4       	brcc	.+4      	; 0xa54 <ParseMAC+0x5a>
     a50:	37 53       	subi	r19, 0x37	; 55
     a52:	01 c0       	rjmp	.+2      	; 0xa56 <ParseMAC+0x5c>
     a54:	3c 2d       	mov	r19, r12
     a56:	83 0f       	add	r24, r19
     a58:	91 1d       	adc	r25, r1
     a5a:	a1 1d       	adc	r26, r1
     a5c:	b1 1d       	adc	r27, r1
     a5e:	5e 2f       	mov	r21, r30
     a60:	52 1b       	sub	r21, r18
     a62:	31 91       	ld	r19, Z+
     a64:	40 ed       	ldi	r20, 0xD0	; 208
     a66:	43 0f       	add	r20, r19
     a68:	4a 30       	cpi	r20, 0x0A	; 10
     a6a:	78 f1       	brcs	.+94     	; 0xaca <ParseMAC+0xd0>
     a6c:	4f e9       	ldi	r20, 0x9F	; 159
     a6e:	43 0f       	add	r20, r19
     a70:	46 30       	cpi	r20, 0x06	; 6
     a72:	e8 f1       	brcs	.+122    	; 0xaee <ParseMAC+0xf4>
     a74:	4f eb       	ldi	r20, 0xBF	; 191
     a76:	43 0f       	add	r20, r19
     a78:	46 30       	cpi	r20, 0x06	; 6
     a7a:	b0 f0       	brcs	.+44     	; 0xaa8 <ParseMAC+0xae>
     a7c:	89 93       	st	Y+, r24
     a7e:	d5 0e       	add	r13, r21
     a80:	c0 17       	cp	r28, r16
     a82:	d1 07       	cpc	r29, r17
     a84:	59 f0       	breq	.+22     	; 0xa9c <ParseMAC+0xa2>
     a86:	d3 94       	inc	r13
     a88:	69 e8       	ldi	r22, 0x89	; 137
     a8a:	73 e0       	ldi	r23, 0x03	; 3
     a8c:	80 e0       	ldi	r24, 0x00	; 0
     a8e:	90 e0       	ldi	r25, 0x00	; 0
     a90:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <strtok>
     a94:	00 97       	sbiw	r24, 0x00	; 0
     a96:	71 f6       	brne	.-100    	; 0xa34 <ParseMAC+0x3a>
     a98:	01 c0       	rjmp	.+2      	; 0xa9c <ParseMAC+0xa2>
     a9a:	d1 2c       	mov	r13, r1
     a9c:	e1 14       	cp	r14, r1
     a9e:	f1 04       	cpc	r15, r1
     aa0:	e1 f1       	breq	.+120    	; 0xb1a <ParseMAC+0x120>
     aa2:	f7 01       	movw	r30, r14
     aa4:	d0 82       	st	Z, r13
     aa6:	39 c0       	rjmp	.+114    	; 0xb1a <ParseMAC+0x120>
     aa8:	88 0f       	add	r24, r24
     aaa:	99 1f       	adc	r25, r25
     aac:	aa 1f       	adc	r26, r26
     aae:	bb 1f       	adc	r27, r27
     ab0:	88 0f       	add	r24, r24
     ab2:	99 1f       	adc	r25, r25
     ab4:	aa 1f       	adc	r26, r26
     ab6:	bb 1f       	adc	r27, r27
     ab8:	88 0f       	add	r24, r24
     aba:	99 1f       	adc	r25, r25
     abc:	aa 1f       	adc	r26, r26
     abe:	bb 1f       	adc	r27, r27
     ac0:	88 0f       	add	r24, r24
     ac2:	99 1f       	adc	r25, r25
     ac4:	aa 1f       	adc	r26, r26
     ac6:	bb 1f       	adc	r27, r27
     ac8:	bf cf       	rjmp	.-130    	; 0xa48 <ParseMAC+0x4e>
     aca:	88 0f       	add	r24, r24
     acc:	99 1f       	adc	r25, r25
     ace:	aa 1f       	adc	r26, r26
     ad0:	bb 1f       	adc	r27, r27
     ad2:	88 0f       	add	r24, r24
     ad4:	99 1f       	adc	r25, r25
     ad6:	aa 1f       	adc	r26, r26
     ad8:	bb 1f       	adc	r27, r27
     ada:	88 0f       	add	r24, r24
     adc:	99 1f       	adc	r25, r25
     ade:	aa 1f       	adc	r26, r26
     ae0:	bb 1f       	adc	r27, r27
     ae2:	88 0f       	add	r24, r24
     ae4:	99 1f       	adc	r25, r25
     ae6:	aa 1f       	adc	r26, r26
     ae8:	bb 1f       	adc	r27, r27
     aea:	34 2f       	mov	r19, r20
     aec:	b4 cf       	rjmp	.-152    	; 0xa56 <ParseMAC+0x5c>
     aee:	88 0f       	add	r24, r24
     af0:	99 1f       	adc	r25, r25
     af2:	aa 1f       	adc	r26, r26
     af4:	bb 1f       	adc	r27, r27
     af6:	88 0f       	add	r24, r24
     af8:	99 1f       	adc	r25, r25
     afa:	aa 1f       	adc	r26, r26
     afc:	bb 1f       	adc	r27, r27
     afe:	88 0f       	add	r24, r24
     b00:	99 1f       	adc	r25, r25
     b02:	aa 1f       	adc	r26, r26
     b04:	bb 1f       	adc	r27, r27
     b06:	88 0f       	add	r24, r24
     b08:	99 1f       	adc	r25, r25
     b0a:	aa 1f       	adc	r26, r26
     b0c:	bb 1f       	adc	r27, r27
     b0e:	4f e9       	ldi	r20, 0x9F	; 159
     b10:	43 0f       	add	r20, r19
     b12:	46 30       	cpi	r20, 0x06	; 6
     b14:	08 f0       	brcs	.+2      	; 0xb18 <ParseMAC+0x11e>
     b16:	98 cf       	rjmp	.-208    	; 0xa48 <ParseMAC+0x4e>
     b18:	95 cf       	rjmp	.-214    	; 0xa44 <ParseMAC+0x4a>
     b1a:	df 91       	pop	r29
     b1c:	cf 91       	pop	r28
     b1e:	1f 91       	pop	r17
     b20:	0f 91       	pop	r16
     b22:	ff 90       	pop	r15
     b24:	ef 90       	pop	r14
     b26:	df 90       	pop	r13
     b28:	cf 90       	pop	r12
     b2a:	bf 90       	pop	r11
     b2c:	af 90       	pop	r10
     b2e:	9f 90       	pop	r9
     b30:	8f 90       	pop	r8
     b32:	08 95       	ret

00000b34 <ESP8266_Init>:
     b34:	cf 93       	push	r28
     b36:	df 93       	push	r29
     b38:	ec 01       	movw	r28, r24
     b3a:	fc 01       	movw	r30, r24
     b3c:	ec 5a       	subi	r30, 0xAC	; 172
     b3e:	ff 4f       	sbci	r31, 0xFF	; 255
     b40:	10 82       	st	Z, r1
     b42:	11 82       	std	Z+1, r1	; 0x01
     b44:	12 82       	std	Z+2, r1	; 0x02
     b46:	13 82       	std	Z+3, r1	; 0x03
     b48:	48 e6       	ldi	r20, 0x68	; 104
     b4a:	54 e1       	ldi	r21, 0x14	; 20
     b4c:	60 e0       	ldi	r22, 0x00	; 0
     b4e:	72 e0       	ldi	r23, 0x02	; 2
     b50:	84 e7       	ldi	r24, 0x74	; 116
     b52:	96 e1       	ldi	r25, 0x16	; 22
     b54:	0a db       	rcall	.-2540   	; 0x16a <BUFFER_Init>
     b56:	88 23       	and	r24, r24
     b58:	29 f0       	breq	.+10     	; 0xb64 <ESP8266_Init+0x30>
     b5a:	cb 5d       	subi	r28, 0xDB	; 219
     b5c:	dd 4f       	sbci	r29, 0xFD	; 253
     b5e:	85 e0       	ldi	r24, 0x05	; 5
     b60:	88 83       	st	Y, r24
     b62:	11 c0       	rjmp	.+34     	; 0xb86 <ESP8266_Init+0x52>
     b64:	48 e6       	ldi	r20, 0x68	; 104
     b66:	50 e1       	ldi	r21, 0x10	; 16
     b68:	60 e0       	ldi	r22, 0x00	; 0
     b6a:	74 e0       	ldi	r23, 0x04	; 4
     b6c:	88 e6       	ldi	r24, 0x68	; 104
     b6e:	96 e1       	ldi	r25, 0x16	; 22
     b70:	fc da       	rcall	.-2568   	; 0x16a <BUFFER_Init>
     b72:	88 23       	and	r24, r24
     b74:	29 f0       	breq	.+10     	; 0xb80 <ESP8266_Init+0x4c>
     b76:	cb 5d       	subi	r28, 0xDB	; 219
     b78:	dd 4f       	sbci	r29, 0xFD	; 253
     b7a:	85 e0       	ldi	r24, 0x05	; 5
     b7c:	88 83       	st	Y, r24
     b7e:	03 c0       	rjmp	.+6      	; 0xb86 <ESP8266_Init+0x52>
     b80:	27 9a       	sbi	0x04, 7	; 4
     b82:	2f 98       	cbi	0x05, 7	; 5
     b84:	ff cf       	rjmp	.-2      	; 0xb84 <ESP8266_Init+0x50>
     b86:	85 e0       	ldi	r24, 0x05	; 5
     b88:	df 91       	pop	r29
     b8a:	cf 91       	pop	r28
     b8c:	08 95       	ret

00000b8e <ESP8266_TimeUpdate>:
     b8e:	0f 93       	push	r16
     b90:	1f 93       	push	r17
     b92:	fc 01       	movw	r30, r24
     b94:	e4 5b       	subi	r30, 0xB4	; 180
     b96:	ff 4f       	sbci	r31, 0xFF	; 255
     b98:	00 81       	ld	r16, Z
     b9a:	11 81       	ldd	r17, Z+1	; 0x01
     b9c:	22 81       	ldd	r18, Z+2	; 0x02
     b9e:	33 81       	ldd	r19, Z+3	; 0x03
     ba0:	40 0f       	add	r20, r16
     ba2:	51 1f       	adc	r21, r17
     ba4:	62 1f       	adc	r22, r18
     ba6:	73 1f       	adc	r23, r19
     ba8:	40 83       	st	Z, r20
     baa:	51 83       	std	Z+1, r21	; 0x01
     bac:	62 83       	std	Z+2, r22	; 0x02
     bae:	73 83       	std	Z+3, r23	; 0x03
     bb0:	1f 91       	pop	r17
     bb2:	0f 91       	pop	r16
     bb4:	08 95       	ret

00000bb6 <ESP8266_DataReceived>:
     bb6:	ab 01       	movw	r20, r22
     bb8:	bc 01       	movw	r22, r24
     bba:	88 e6       	ldi	r24, 0x68	; 104
     bbc:	96 e1       	ldi	r25, 0x16	; 22
     bbe:	fa ca       	rjmp	.-2572   	; 0x1b4 <BUFFER_Write>
     bc0:	08 95       	ret

00000bc2 <ESP8266_Callback_ServerConnectionActive>:
     bc2:	08 95       	ret

00000bc4 <ESP8266_Callback_ServerConnectionClosed>:
     bc4:	08 95       	ret

00000bc6 <ESP8266_Callback_ServerConnectionDataReceived>:
     bc6:	08 95       	ret

00000bc8 <ESP8266_Callback_ServerConnectionSendData>:
     bc8:	80 e0       	ldi	r24, 0x00	; 0
     bca:	90 e0       	ldi	r25, 0x00	; 0
     bcc:	08 95       	ret

00000bce <ESP8266_Callback_ServerConnectionDataSent>:
     bce:	08 95       	ret

00000bd0 <CallConnectionCallbacks>:
     bd0:	4f 92       	push	r4
     bd2:	5f 92       	push	r5
     bd4:	6f 92       	push	r6
     bd6:	7f 92       	push	r7
     bd8:	af 92       	push	r10
     bda:	bf 92       	push	r11
     bdc:	cf 92       	push	r12
     bde:	df 92       	push	r13
     be0:	ef 92       	push	r14
     be2:	ff 92       	push	r15
     be4:	0f 93       	push	r16
     be6:	1f 93       	push	r17
     be8:	cf 93       	push	r28
     bea:	df 93       	push	r29
     bec:	6c 01       	movw	r12, r24
     bee:	ec 01       	movw	r28, r24
     bf0:	c8 5a       	subi	r28, 0xA8	; 168
     bf2:	df 4f       	sbci	r29, 0xFF	; 255
     bf4:	7c 01       	movw	r14, r24
     bf6:	81 e7       	ldi	r24, 0x71	; 113
     bf8:	e8 0e       	add	r14, r24
     bfa:	f1 1c       	adc	r15, r1
     bfc:	86 01       	movw	r16, r12
     bfe:	06 5a       	subi	r16, 0xA6	; 166
     c00:	1f 4f       	sbci	r17, 0xFF	; 255
     c02:	56 01       	movw	r10, r12
     c04:	a7 e5       	ldi	r26, 0x57	; 87
     c06:	aa 1a       	sub	r10, r26
     c08:	ae ef       	ldi	r26, 0xFE	; 254
     c0a:	ba 0a       	sbc	r11, r26
     c0c:	6c 2f       	mov	r22, r28
     c0e:	7d 2f       	mov	r23, r29
     c10:	98 81       	ld	r25, Y
     c12:	99 23       	and	r25, r25
     c14:	29 f1       	breq	.+74     	; 0xc60 <CallConnectionCallbacks+0x90>
     c16:	97 01       	movw	r18, r14
     c18:	f7 01       	movw	r30, r14
     c1a:	80 81       	ld	r24, Z
     c1c:	88 23       	and	r24, r24
     c1e:	01 f1       	breq	.+64     	; 0xc60 <CallConnectionCallbacks+0x90>
     c20:	d8 01       	movw	r26, r16
     c22:	8c 91       	ld	r24, X
     c24:	81 11       	cpse	r24, r1
     c26:	09 c0       	rjmp	.+18     	; 0xc3a <CallConnectionCallbacks+0x6a>
     c28:	f6 01       	movw	r30, r12
     c2a:	44 80       	ldd	r4, Z+4	; 0x04
     c2c:	55 80       	ldd	r5, Z+5	; 0x05
     c2e:	66 80       	ldd	r6, Z+6	; 0x06
     c30:	77 80       	ldd	r7, Z+7	; 0x07
     c32:	45 28       	or	r4, r5
     c34:	46 28       	or	r4, r6
     c36:	47 28       	or	r4, r7
     c38:	99 f4       	brne	.+38     	; 0xc60 <CallConnectionCallbacks+0x90>
     c3a:	f9 01       	movw	r30, r18
     c3c:	10 82       	st	Z, r1
     c3e:	8c 91       	ld	r24, X
     c40:	88 23       	and	r24, r24
     c42:	41 f0       	breq	.+16     	; 0xc54 <CallConnectionCallbacks+0x84>
     c44:	52 96       	adiw	r26, 0x12	; 18
     c46:	4d 91       	ld	r20, X+
     c48:	5c 91       	ld	r21, X
     c4a:	53 97       	sbiw	r26, 0x13	; 19
     c4c:	c6 01       	movw	r24, r12
     c4e:	0e 94 58 15 	call	0x2ab0	; 0x2ab0 <ESP8266_Callback_ClientConnectionDataReceived>
     c52:	06 c0       	rjmp	.+12     	; 0xc60 <CallConnectionCallbacks+0x90>
     c54:	52 96       	adiw	r26, 0x12	; 18
     c56:	4d 91       	ld	r20, X+
     c58:	5c 91       	ld	r21, X
     c5a:	53 97       	sbiw	r26, 0x13	; 19
     c5c:	c6 01       	movw	r24, r12
     c5e:	b3 df       	rcall	.-154    	; 0xbc6 <ESP8266_Callback_ServerConnectionDataReceived>
     c60:	cd 5b       	subi	r28, 0xBD	; 189
     c62:	df 4f       	sbci	r29, 0xFF	; 255
     c64:	f3 e4       	ldi	r31, 0x43	; 67
     c66:	ef 0e       	add	r14, r31
     c68:	f1 1c       	adc	r15, r1
     c6a:	0d 5b       	subi	r16, 0xBD	; 189
     c6c:	1f 4f       	sbci	r17, 0xFF	; 255
     c6e:	0a 15       	cp	r16, r10
     c70:	1b 05       	cpc	r17, r11
     c72:	61 f6       	brne	.-104    	; 0xc0c <CallConnectionCallbacks+0x3c>
     c74:	df 91       	pop	r29
     c76:	cf 91       	pop	r28
     c78:	1f 91       	pop	r17
     c7a:	0f 91       	pop	r16
     c7c:	ff 90       	pop	r15
     c7e:	ef 90       	pop	r14
     c80:	df 90       	pop	r13
     c82:	cf 90       	pop	r12
     c84:	bf 90       	pop	r11
     c86:	af 90       	pop	r10
     c88:	7f 90       	pop	r7
     c8a:	6f 90       	pop	r6
     c8c:	5f 90       	pop	r5
     c8e:	4f 90       	pop	r4
     c90:	08 95       	ret

00000c92 <ParseReceived>:
     c92:	2f 92       	push	r2
     c94:	3f 92       	push	r3
     c96:	4f 92       	push	r4
     c98:	5f 92       	push	r5
     c9a:	6f 92       	push	r6
     c9c:	7f 92       	push	r7
     c9e:	8f 92       	push	r8
     ca0:	9f 92       	push	r9
     ca2:	af 92       	push	r10
     ca4:	bf 92       	push	r11
     ca6:	cf 92       	push	r12
     ca8:	df 92       	push	r13
     caa:	ef 92       	push	r14
     cac:	ff 92       	push	r15
     cae:	0f 93       	push	r16
     cb0:	1f 93       	push	r17
     cb2:	cf 93       	push	r28
     cb4:	df 93       	push	r29
     cb6:	1f 92       	push	r1
     cb8:	1f 92       	push	r1
     cba:	cd b7       	in	r28, 0x3d	; 61
     cbc:	de b7       	in	r29, 0x3e	; 62
     cbe:	8c 01       	movw	r16, r24
     cc0:	6b 01       	movw	r12, r22
     cc2:	54 2e       	mov	r5, r20
     cc4:	49 01       	movw	r8, r18
     cc6:	fc 01       	movw	r30, r24
     cc8:	e0 5b       	subi	r30, 0xB0	; 176
     cca:	ff 4f       	sbci	r31, 0xFF	; 255
     ccc:	dc 01       	movw	r26, r24
     cce:	a4 5b       	subi	r26, 0xB4	; 180
     cd0:	bf 4f       	sbci	r27, 0xFF	; 255
     cd2:	8d 91       	ld	r24, X+
     cd4:	9d 91       	ld	r25, X+
     cd6:	0d 90       	ld	r0, X+
     cd8:	bc 91       	ld	r27, X
     cda:	a0 2d       	mov	r26, r0
     cdc:	80 83       	st	Z, r24
     cde:	91 83       	std	Z+1, r25	; 0x01
     ce0:	a2 83       	std	Z+2, r26	; 0x02
     ce2:	b3 83       	std	Z+3, r27	; 0x03
     ce4:	22 e0       	ldi	r18, 0x02	; 2
     ce6:	82 16       	cp	r8, r18
     ce8:	91 04       	cpc	r9, r1
     cea:	49 f4       	brne	.+18     	; 0xcfe <ParseReceived+0x6c>
     cec:	db 01       	movw	r26, r22
     cee:	8c 91       	ld	r24, X
     cf0:	8d 30       	cpi	r24, 0x0D	; 13
     cf2:	29 f4       	brne	.+10     	; 0xcfe <ParseReceived+0x6c>
     cf4:	11 96       	adiw	r26, 0x01	; 1
     cf6:	8c 91       	ld	r24, X
     cf8:	8a 30       	cpi	r24, 0x0A	; 10
     cfa:	09 f4       	brne	.+2      	; 0xcfe <ParseReceived+0x6c>
     cfc:	03 c7       	rjmp	.+3590   	; 0x1b04 <ParseReceived+0xe72>
     cfe:	f8 01       	movw	r30, r16
     d00:	84 81       	ldd	r24, Z+4	; 0x04
     d02:	95 81       	ldd	r25, Z+5	; 0x05
     d04:	a6 81       	ldd	r26, Z+6	; 0x06
     d06:	b7 81       	ldd	r27, Z+7	; 0x07
     d08:	89 2b       	or	r24, r25
     d0a:	8a 2b       	or	r24, r26
     d0c:	8b 2b       	or	r24, r27
     d0e:	09 f4       	brne	.+2      	; 0xd12 <ParseReceived+0x80>
     d10:	44 c0       	rjmp	.+136    	; 0xd9a <ParseReceived+0x108>
     d12:	55 20       	and	r5, r5
     d14:	09 f4       	brne	.+2      	; 0xd18 <ParseReceived+0x86>
     d16:	41 c0       	rjmp	.+130    	; 0xd9a <ParseReceived+0x108>
     d18:	69 ed       	ldi	r22, 0xD9	; 217
     d1a:	72 e0       	ldi	r23, 0x02	; 2
     d1c:	c6 01       	movw	r24, r12
     d1e:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
     d22:	89 2b       	or	r24, r25
     d24:	d1 f1       	breq	.+116    	; 0xd9a <ParseReceived+0x108>
     d26:	64 ed       	ldi	r22, 0xD4	; 212
     d28:	72 e0       	ldi	r23, 0x02	; 2
     d2a:	c6 01       	movw	r24, r12
     d2c:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
     d30:	89 2b       	or	r24, r25
     d32:	99 f1       	breq	.+102    	; 0xd9a <ParseReceived+0x108>
     d34:	6e ed       	ldi	r22, 0xDE	; 222
     d36:	72 e0       	ldi	r23, 0x02	; 2
     d38:	c6 01       	movw	r24, r12
     d3a:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
     d3e:	89 2b       	or	r24, r25
     d40:	61 f1       	breq	.+88     	; 0xd9a <ParseReceived+0x108>
     d42:	66 ee       	ldi	r22, 0xE6	; 230
     d44:	72 e0       	ldi	r23, 0x02	; 2
     d46:	c6 01       	movw	r24, r12
     d48:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
     d4c:	89 2b       	or	r24, r25
     d4e:	61 f1       	breq	.+88     	; 0xda8 <ParseReceived+0x116>
     d50:	6e ee       	ldi	r22, 0xEE	; 238
     d52:	72 e0       	ldi	r23, 0x02	; 2
     d54:	c6 01       	movw	r24, r12
     d56:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
     d5a:	89 2b       	or	r24, r25
     d5c:	41 f1       	breq	.+80     	; 0xdae <ParseReceived+0x11c>
     d5e:	45 e0       	ldi	r20, 0x05	; 5
     d60:	50 e0       	ldi	r21, 0x00	; 0
     d62:	6a ef       	ldi	r22, 0xFA	; 250
     d64:	72 e0       	ldi	r23, 0x02	; 2
     d66:	c6 01       	movw	r24, r12
     d68:	0e 94 50 17 	call	0x2ea0	; 0x2ea0 <strncmp>
     d6c:	89 2b       	or	r24, r25
     d6e:	f9 f0       	breq	.+62     	; 0xdae <ParseReceived+0x11c>
     d70:	b8 01       	movw	r22, r16
     d72:	68 5f       	subi	r22, 0xF8	; 248
     d74:	7f 4f       	sbci	r23, 0xFF	; 255
     d76:	fb 01       	movw	r30, r22
     d78:	01 90       	ld	r0, Z+
     d7a:	00 20       	and	r0, r0
     d7c:	e9 f7       	brne	.-6      	; 0xd78 <ParseReceived+0xe6>
     d7e:	31 97       	sbiw	r30, 0x01	; 1
     d80:	af 01       	movw	r20, r30
     d82:	46 1b       	sub	r20, r22
     d84:	57 0b       	sbc	r21, r23
     d86:	c6 01       	movw	r24, r12
     d88:	0e 94 50 17 	call	0x2ea0	; 0x2ea0 <strncmp>
     d8c:	89 2b       	or	r24, r25
     d8e:	79 f0       	breq	.+30     	; 0xdae <ParseReceived+0x11c>
     d90:	b6 01       	movw	r22, r12
     d92:	84 e7       	ldi	r24, 0x74	; 116
     d94:	96 e1       	ldi	r25, 0x16	; 22
     d96:	de db       	rcall	.-2116   	; 0x554 <BUFFER_WriteString>
     d98:	b5 c6       	rjmp	.+3434   	; 0x1b04 <ParseReceived+0xe72>
     d9a:	66 ee       	ldi	r22, 0xE6	; 230
     d9c:	72 e0       	ldi	r23, 0x02	; 2
     d9e:	c6 01       	movw	r24, r12
     da0:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
     da4:	89 2b       	or	r24, r25
     da6:	19 f4       	brne	.+6      	; 0xdae <ParseReceived+0x11c>
     da8:	c8 01       	movw	r24, r16
     daa:	0e 94 98 14 	call	0x2930	; 0x2930 <ESP8266_Callback_DeviceReady>
     dae:	60 e0       	ldi	r22, 0x00	; 0
     db0:	73 e0       	ldi	r23, 0x03	; 3
     db2:	c6 01       	movw	r24, r12
     db4:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
     db8:	89 2b       	or	r24, r25
     dba:	19 f4       	brne	.+6      	; 0xdc2 <ParseReceived+0x130>
     dbc:	c8 01       	movw	r24, r16
     dbe:	0e 94 9c 14 	call	0x2938	; 0x2938 <ESP8266_Callback_WatchdogReset>
     dc2:	c8 01       	movw	r24, r16
     dc4:	05 df       	rcall	.-502    	; 0xbd0 <CallConnectionCallbacks>
     dc6:	6c e0       	ldi	r22, 0x0C	; 12
     dc8:	73 e0       	ldi	r23, 0x03	; 3
     dca:	c6 01       	movw	r24, r12
     dcc:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
     dd0:	89 2b       	or	r24, r25
     dd2:	51 f4       	brne	.+20     	; 0xde8 <ParseReceived+0x156>
     dd4:	f8 01       	movw	r30, r16
     dd6:	ef 5d       	subi	r30, 0xDF	; 223
     dd8:	fd 4f       	sbci	r31, 0xFD	; 253
     dda:	81 81       	ldd	r24, Z+1	; 0x01
     ddc:	84 60       	ori	r24, 0x04	; 4
     dde:	81 83       	std	Z+1, r24	; 0x01
     de0:	c8 01       	movw	r24, r16
     de2:	0e 94 a4 14 	call	0x2948	; 0x2948 <ESP8266_Callback_WifiConnected>
     de6:	3d c0       	rjmp	.+122    	; 0xe62 <ParseReceived+0x1d0>
     de8:	6d e1       	ldi	r22, 0x1D	; 29
     dea:	73 e0       	ldi	r23, 0x03	; 3
     dec:	c6 01       	movw	r24, r12
     dee:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
     df2:	89 2b       	or	r24, r25
     df4:	d9 f4       	brne	.+54     	; 0xe2c <ParseReceived+0x19a>
     df6:	f8 01       	movw	r30, r16
     df8:	ef 5d       	subi	r30, 0xDF	; 223
     dfa:	fd 4f       	sbci	r31, 0xFD	; 253
     dfc:	81 81       	ldd	r24, Z+1	; 0x01
     dfe:	8b 7f       	andi	r24, 0xFB	; 251
     e00:	87 7f       	andi	r24, 0xF7	; 247
     e02:	81 83       	std	Z+1, r24	; 0x01
     e04:	89 e1       	ldi	r24, 0x19	; 25
     e06:	b5 97       	sbiw	r30, 0x25	; 37
     e08:	df 01       	movw	r26, r30
     e0a:	1d 92       	st	X+, r1
     e0c:	8a 95       	dec	r24
     e0e:	e9 f7       	brne	.-6      	; 0xe0a <ParseReceived+0x178>
     e10:	8f e4       	ldi	r24, 0x4F	; 79
     e12:	91 e0       	ldi	r25, 0x01	; 1
     e14:	e4 5a       	subi	r30, 0xA4	; 164
     e16:	f1 40       	sbci	r31, 0x01	; 1
     e18:	df 01       	movw	r26, r30
     e1a:	9c 01       	movw	r18, r24
     e1c:	1d 92       	st	X+, r1
     e1e:	21 50       	subi	r18, 0x01	; 1
     e20:	30 40       	sbci	r19, 0x00	; 0
     e22:	e1 f7       	brne	.-8      	; 0xe1c <ParseReceived+0x18a>
     e24:	c8 01       	movw	r24, r16
     e26:	0e 94 a0 14 	call	0x2940	; 0x2940 <ESP8266_Callback_WifiDisconnected>
     e2a:	1b c0       	rjmp	.+54     	; 0xe62 <ParseReceived+0x1d0>
     e2c:	6f e2       	ldi	r22, 0x2F	; 47
     e2e:	73 e0       	ldi	r23, 0x03	; 3
     e30:	c6 01       	movw	r24, r12
     e32:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
     e36:	89 2b       	or	r24, r25
     e38:	51 f4       	brne	.+20     	; 0xe4e <ParseReceived+0x1bc>
     e3a:	f8 01       	movw	r30, r16
     e3c:	ef 5d       	subi	r30, 0xDF	; 223
     e3e:	fd 4f       	sbci	r31, 0xFD	; 253
     e40:	81 81       	ldd	r24, Z+1	; 0x01
     e42:	88 60       	ori	r24, 0x08	; 8
     e44:	81 83       	std	Z+1, r24	; 0x01
     e46:	c8 01       	movw	r24, r16
     e48:	0e 94 b8 14 	call	0x2970	; 0x2970 <ESP8266_Callback_WifiGotIP>
     e4c:	0a c0       	rjmp	.+20     	; 0xe62 <ParseReceived+0x1d0>
     e4e:	6d e3       	ldi	r22, 0x3D	; 61
     e50:	73 e0       	ldi	r23, 0x03	; 3
     e52:	c6 01       	movw	r24, r12
     e54:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
     e58:	89 2b       	or	r24, r25
     e5a:	19 f4       	brne	.+6      	; 0xe62 <ParseReceived+0x1d0>
     e5c:	c8 01       	movw	r24, r16
     e5e:	0e 94 ee 14 	call	0x29dc	; 0x29dc <ESP8266_Callback_DHCPTimeout>
     e62:	64 ed       	ldi	r22, 0xD4	; 212
     e64:	72 e0       	ldi	r23, 0x02	; 2
     e66:	c6 01       	movw	r24, r12
     e68:	0e 94 6d 17 	call	0x2eda	; 0x2eda <strstr>
     e6c:	89 2b       	or	r24, r25
     e6e:	09 f4       	brne	.+2      	; 0xe72 <ParseReceived+0x1e0>
     e70:	36 c6       	rjmp	.+3180   	; 0x1ade <ParseReceived+0xe4c>
     e72:	d8 01       	movw	r26, r16
     e74:	14 96       	adiw	r26, 0x04	; 4
     e76:	1d 92       	st	X+, r1
     e78:	1d 92       	st	X+, r1
     e7a:	1d 92       	st	X+, r1
     e7c:	1c 92       	st	X, r1
     e7e:	17 97       	sbiw	r26, 0x07	; 7
     e80:	78 01       	movw	r14, r16
     e82:	bb e6       	ldi	r27, 0x6B	; 107
     e84:	eb 0e       	add	r14, r27
     e86:	f1 1c       	adc	r15, r1
     e88:	58 01       	movw	r10, r16
     e8a:	e8 e5       	ldi	r30, 0x58	; 88
     e8c:	ae 0e       	add	r10, r30
     e8e:	b1 1c       	adc	r11, r1
     e90:	38 01       	movw	r6, r16
     e92:	f6 e4       	ldi	r31, 0x46	; 70
     e94:	6f 1a       	sub	r6, r31
     e96:	fe ef       	ldi	r31, 0xFE	; 254
     e98:	7f 0a       	sbc	r7, r31
     e9a:	d7 01       	movw	r26, r14
     e9c:	8c 91       	ld	r24, X
     e9e:	88 23       	and	r24, r24
     ea0:	71 f0       	breq	.+28     	; 0xebe <ParseReceived+0x22c>
     ea2:	1c 92       	st	X, r1
     ea4:	f7 01       	movw	r30, r14
     ea6:	71 97       	sbiw	r30, 0x11	; 17
     ea8:	80 81       	ld	r24, Z
     eaa:	88 23       	and	r24, r24
     eac:	29 f0       	breq	.+10     	; 0xeb8 <ParseReceived+0x226>
     eae:	b5 01       	movw	r22, r10
     eb0:	c8 01       	movw	r24, r16
     eb2:	0e 94 54 15 	call	0x2aa8	; 0x2aa8 <ESP8266_Callback_ClientConnectionDataSent>
     eb6:	03 c0       	rjmp	.+6      	; 0xebe <ParseReceived+0x22c>
     eb8:	b5 01       	movw	r22, r10
     eba:	c8 01       	movw	r24, r16
     ebc:	88 de       	rcall	.-752    	; 0xbce <ESP8266_Callback_ServerConnectionDataSent>
     ebe:	b3 e4       	ldi	r27, 0x43	; 67
     ec0:	eb 0e       	add	r14, r27
     ec2:	f1 1c       	adc	r15, r1
     ec4:	e3 e4       	ldi	r30, 0x43	; 67
     ec6:	ae 0e       	add	r10, r30
     ec8:	b1 1c       	adc	r11, r1
     eca:	e6 14       	cp	r14, r6
     ecc:	f7 04       	cpc	r15, r7
     ece:	29 f7       	brne	.-54     	; 0xe9a <ParseReceived+0x208>
     ed0:	06 c6       	rjmp	.+3084   	; 0x1ade <ParseReceived+0xe4c>
     ed2:	a1 2c       	mov	r10, r1
     ed4:	b1 2c       	mov	r11, r1
     ed6:	73 01       	movw	r14, r6
     ed8:	ea 0c       	add	r14, r10
     eda:	fb 1c       	adc	r15, r11
     edc:	ec 0c       	add	r14, r12
     ede:	fd 1c       	adc	r15, r13
     ee0:	4a e0       	ldi	r20, 0x0A	; 10
     ee2:	50 e0       	ldi	r21, 0x00	; 0
     ee4:	6a e4       	ldi	r22, 0x4A	; 74
     ee6:	73 e0       	ldi	r23, 0x03	; 3
     ee8:	c7 01       	movw	r24, r14
     eea:	0e 94 2a 17 	call	0x2e54	; 0x2e54 <memcmp>
     eee:	89 2b       	or	r24, r25
     ef0:	21 f4       	brne	.+8      	; 0xefa <ParseReceived+0x268>
     ef2:	e1 14       	cp	r14, r1
     ef4:	f1 04       	cpc	r15, r1
     ef6:	41 f4       	brne	.+16     	; 0xf08 <ParseReceived+0x276>
     ef8:	3c c0       	rjmp	.+120    	; 0xf72 <ParseReceived+0x2e0>
     efa:	ff ef       	ldi	r31, 0xFF	; 255
     efc:	af 1a       	sub	r10, r31
     efe:	bf 0a       	sbc	r11, r31
     f00:	a8 14       	cp	r10, r8
     f02:	b9 04       	cpc	r11, r9
     f04:	41 f7       	brne	.-48     	; 0xed6 <ParseReceived+0x244>
     f06:	35 c0       	rjmp	.+106    	; 0xf72 <ParseReceived+0x2e0>
     f08:	f7 01       	movw	r30, r14
     f0a:	22 91       	ld	r18, -Z
     f0c:	30 e0       	ldi	r19, 0x00	; 0
     f0e:	20 53       	subi	r18, 0x30	; 48
     f10:	31 09       	sbc	r19, r1
     f12:	43 e4       	ldi	r20, 0x43	; 67
     f14:	42 9f       	mul	r20, r18
     f16:	c0 01       	movw	r24, r0
     f18:	43 9f       	mul	r20, r19
     f1a:	90 0d       	add	r25, r0
     f1c:	11 24       	eor	r1, r1
     f1e:	bc 01       	movw	r22, r24
     f20:	68 5a       	subi	r22, 0xA8	; 168
     f22:	7f 4f       	sbci	r23, 0xFF	; 255
     f24:	60 0f       	add	r22, r16
     f26:	71 1f       	adc	r23, r17
     f28:	80 0f       	add	r24, r16
     f2a:	91 1f       	adc	r25, r17
     f2c:	dc 01       	movw	r26, r24
     f2e:	a8 5a       	subi	r26, 0xA8	; 168
     f30:	bf 4f       	sbci	r27, 0xFF	; 255
     f32:	21 e0       	ldi	r18, 0x01	; 1
     f34:	2c 93       	st	X, r18
     f36:	11 96       	adiw	r26, 0x01	; 1
     f38:	20 81       	ld	r18, Z
     f3a:	20 53       	subi	r18, 0x30	; 48
     f3c:	2c 93       	st	X, r18
     f3e:	fc 01       	movw	r30, r24
     f40:	e6 5a       	subi	r30, 0xA6	; 166
     f42:	ff 4f       	sbci	r31, 0xFF	; 255
     f44:	80 81       	ld	r24, Z
     f46:	88 23       	and	r24, r24
     f48:	89 f0       	breq	.+34     	; 0xf6c <ParseReceived+0x2da>
     f4a:	f8 01       	movw	r30, r16
     f4c:	84 81       	ldd	r24, Z+4	; 0x04
     f4e:	95 81       	ldd	r25, Z+5	; 0x05
     f50:	a6 81       	ldd	r26, Z+6	; 0x06
     f52:	b7 81       	ldd	r27, Z+7	; 0x07
     f54:	0a 97       	sbiw	r24, 0x0a	; 10
     f56:	a1 05       	cpc	r26, r1
     f58:	b1 05       	cpc	r27, r1
     f5a:	21 f4       	brne	.+8      	; 0xf64 <ParseReceived+0x2d2>
     f5c:	14 82       	std	Z+4, r1	; 0x04
     f5e:	15 82       	std	Z+5, r1	; 0x05
     f60:	16 82       	std	Z+6, r1	; 0x06
     f62:	17 82       	std	Z+7, r1	; 0x07
     f64:	c8 01       	movw	r24, r16
     f66:	0e 94 f2 14 	call	0x29e4	; 0x29e4 <ESP8266_Callback_ClientConnectionConnected>
     f6a:	f5 c0       	rjmp	.+490    	; 0x1156 <ParseReceived+0x4c4>
     f6c:	c8 01       	movw	r24, r16
     f6e:	29 de       	rcall	.-942    	; 0xbc2 <ESP8266_Callback_ServerConnectionActive>
     f70:	f2 c0       	rjmp	.+484    	; 0x1156 <ParseReceived+0x4c4>
     f72:	65 e5       	ldi	r22, 0x55	; 85
     f74:	73 e0       	ldi	r23, 0x03	; 3
     f76:	c6 01       	movw	r24, r12
     f78:	0e 94 6d 17 	call	0x2eda	; 0x2eda <strstr>
     f7c:	89 2b       	or	r24, r25
     f7e:	09 f0       	breq	.+2      	; 0xf82 <ParseReceived+0x2f0>
     f80:	ea c0       	rjmp	.+468    	; 0x1156 <ParseReceived+0x4c4>
     f82:	ba e0       	ldi	r27, 0x0A	; 10
     f84:	8b 16       	cp	r8, r27
     f86:	91 04       	cpc	r9, r1
     f88:	08 f4       	brcc	.+2      	; 0xf8c <ParseReceived+0x2fa>
     f8a:	9a c0       	rjmp	.+308    	; 0x10c0 <ParseReceived+0x42e>
     f8c:	34 01       	movw	r6, r8
     f8e:	e9 e0       	ldi	r30, 0x09	; 9
     f90:	6e 1a       	sub	r6, r30
     f92:	71 08       	sbc	r7, r1
     f94:	81 14       	cp	r8, r1
     f96:	91 04       	cpc	r9, r1
     f98:	09 f4       	brne	.+2      	; 0xf9c <ParseReceived+0x30a>
     f9a:	dd c0       	rjmp	.+442    	; 0x1156 <ParseReceived+0x4c4>
     f9c:	a1 2c       	mov	r10, r1
     f9e:	b1 2c       	mov	r11, r1
     fa0:	73 01       	movw	r14, r6
     fa2:	ea 0c       	add	r14, r10
     fa4:	fb 1c       	adc	r15, r11
     fa6:	ec 0c       	add	r14, r12
     fa8:	fd 1c       	adc	r15, r13
     faa:	49 e0       	ldi	r20, 0x09	; 9
     fac:	50 e0       	ldi	r21, 0x00	; 0
     fae:	69 e6       	ldi	r22, 0x69	; 105
     fb0:	73 e0       	ldi	r23, 0x03	; 3
     fb2:	c7 01       	movw	r24, r14
     fb4:	0e 94 2a 17 	call	0x2e54	; 0x2e54 <memcmp>
     fb8:	89 2b       	or	r24, r25
     fba:	21 f4       	brne	.+8      	; 0xfc4 <ParseReceived+0x332>
     fbc:	c7 01       	movw	r24, r14
     fbe:	89 2b       	or	r24, r25
     fc0:	41 f4       	brne	.+16     	; 0xfd2 <ParseReceived+0x340>
     fc2:	7e c0       	rjmp	.+252    	; 0x10c0 <ParseReceived+0x42e>
     fc4:	ff ef       	ldi	r31, 0xFF	; 255
     fc6:	af 1a       	sub	r10, r31
     fc8:	bf 0a       	sbc	r11, r31
     fca:	a8 14       	cp	r10, r8
     fcc:	b9 04       	cpc	r11, r9
     fce:	41 f7       	brne	.-48     	; 0xfa0 <ParseReceived+0x30e>
     fd0:	77 c0       	rjmp	.+238    	; 0x10c0 <ParseReceived+0x42e>
     fd2:	ce 14       	cp	r12, r14
     fd4:	df 04       	cpc	r13, r15
     fd6:	09 f4       	brne	.+2      	; 0xfda <ParseReceived+0x348>
     fd8:	73 c0       	rjmp	.+230    	; 0x10c0 <ParseReceived+0x42e>
     fda:	96 01       	movw	r18, r12
     fdc:	2f 5f       	subi	r18, 0xFF	; 255
     fde:	3f 4f       	sbci	r19, 0xFF	; 255
     fe0:	e2 16       	cp	r14, r18
     fe2:	f3 06       	cpc	r15, r19
     fe4:	09 f0       	breq	.+2      	; 0xfe8 <ParseReceived+0x356>
     fe6:	63 c0       	rjmp	.+198    	; 0x10ae <ParseReceived+0x41c>
     fe8:	d6 01       	movw	r26, r12
     fea:	8c 91       	ld	r24, X
     fec:	90 e0       	ldi	r25, 0x00	; 0
     fee:	c0 97       	sbiw	r24, 0x30	; 48
     ff0:	23 e4       	ldi	r18, 0x43	; 67
     ff2:	28 9f       	mul	r18, r24
     ff4:	f0 01       	movw	r30, r0
     ff6:	29 9f       	mul	r18, r25
     ff8:	f0 0d       	add	r31, r0
     ffa:	11 24       	eor	r1, r1
     ffc:	e0 0f       	add	r30, r16
     ffe:	f1 1f       	adc	r31, r17
    1000:	df 01       	movw	r26, r30
    1002:	a6 5a       	subi	r26, 0xA6	; 166
    1004:	bf 4f       	sbci	r27, 0xFF	; 255
    1006:	3c 91       	ld	r19, X
    1008:	e8 5a       	subi	r30, 0xA8	; 168
    100a:	ff 4f       	sbci	r31, 0xFF	; 255
    100c:	40 81       	ld	r20, Z
    100e:	10 82       	st	Z, r1
    1010:	f6 01       	movw	r30, r12
    1012:	80 81       	ld	r24, Z
    1014:	90 e0       	ldi	r25, 0x00	; 0
    1016:	c0 97       	sbiw	r24, 0x30	; 48
    1018:	28 9f       	mul	r18, r24
    101a:	f0 01       	movw	r30, r0
    101c:	29 9f       	mul	r18, r25
    101e:	f0 0d       	add	r31, r0
    1020:	11 24       	eor	r1, r1
    1022:	e0 0f       	add	r30, r16
    1024:	f1 1f       	adc	r31, r17
    1026:	e6 5a       	subi	r30, 0xA6	; 166
    1028:	ff 4f       	sbci	r31, 0xFF	; 255
    102a:	10 82       	st	Z, r1
    102c:	d6 01       	movw	r26, r12
    102e:	8c 91       	ld	r24, X
    1030:	90 e0       	ldi	r25, 0x00	; 0
    1032:	c0 97       	sbiw	r24, 0x30	; 48
    1034:	28 9f       	mul	r18, r24
    1036:	f0 01       	movw	r30, r0
    1038:	29 9f       	mul	r18, r25
    103a:	f0 0d       	add	r31, r0
    103c:	11 24       	eor	r1, r1
    103e:	e0 0f       	add	r30, r16
    1040:	f1 1f       	adc	r31, r17
    1042:	e7 56       	subi	r30, 0x67	; 103
    1044:	ff 4f       	sbci	r31, 0xFF	; 255
    1046:	10 82       	st	Z, r1
    1048:	8c 91       	ld	r24, X
    104a:	90 e0       	ldi	r25, 0x00	; 0
    104c:	c0 97       	sbiw	r24, 0x30	; 48
    104e:	28 9f       	mul	r18, r24
    1050:	f0 01       	movw	r30, r0
    1052:	29 9f       	mul	r18, r25
    1054:	f0 0d       	add	r31, r0
    1056:	11 24       	eor	r1, r1
    1058:	e0 0f       	add	r30, r16
    105a:	f1 1f       	adc	r31, r17
    105c:	e8 56       	subi	r30, 0x68	; 104
    105e:	ff 4f       	sbci	r31, 0xFF	; 255
    1060:	10 82       	st	Z, r1
    1062:	44 23       	and	r20, r20
    1064:	09 f4       	brne	.+2      	; 0x1068 <ParseReceived+0x3d6>
    1066:	77 c0       	rjmp	.+238    	; 0x1156 <ParseReceived+0x4c4>
    1068:	33 23       	and	r19, r19
    106a:	81 f0       	breq	.+32     	; 0x108c <ParseReceived+0x3fa>
    106c:	8c 91       	ld	r24, X
    106e:	90 e0       	ldi	r25, 0x00	; 0
    1070:	c0 97       	sbiw	r24, 0x30	; 48
    1072:	28 9f       	mul	r18, r24
    1074:	b0 01       	movw	r22, r0
    1076:	29 9f       	mul	r18, r25
    1078:	70 0d       	add	r23, r0
    107a:	11 24       	eor	r1, r1
    107c:	68 5a       	subi	r22, 0xA8	; 168
    107e:	7f 4f       	sbci	r23, 0xFF	; 255
    1080:	60 0f       	add	r22, r16
    1082:	71 1f       	adc	r23, r17
    1084:	c8 01       	movw	r24, r16
    1086:	0e 94 a0 15 	call	0x2b40	; 0x2b40 <ESP8266_Callback_ClientConnectionClosed>
    108a:	65 c0       	rjmp	.+202    	; 0x1156 <ParseReceived+0x4c4>
    108c:	f6 01       	movw	r30, r12
    108e:	80 81       	ld	r24, Z
    1090:	90 e0       	ldi	r25, 0x00	; 0
    1092:	c0 97       	sbiw	r24, 0x30	; 48
    1094:	23 e4       	ldi	r18, 0x43	; 67
    1096:	28 9f       	mul	r18, r24
    1098:	b0 01       	movw	r22, r0
    109a:	29 9f       	mul	r18, r25
    109c:	70 0d       	add	r23, r0
    109e:	11 24       	eor	r1, r1
    10a0:	68 5a       	subi	r22, 0xA8	; 168
    10a2:	7f 4f       	sbci	r23, 0xFF	; 255
    10a4:	60 0f       	add	r22, r16
    10a6:	71 1f       	adc	r23, r17
    10a8:	c8 01       	movw	r24, r16
    10aa:	8c dd       	rcall	.-1256   	; 0xbc4 <ESP8266_Callback_ServerConnectionClosed>
    10ac:	54 c0       	rjmp	.+168    	; 0x1156 <ParseReceived+0x4c4>
    10ae:	b7 01       	movw	r22, r14
    10b0:	61 50       	subi	r22, 0x01	; 1
    10b2:	71 09       	sbc	r23, r1
    10b4:	4a e0       	ldi	r20, 0x0A	; 10
    10b6:	50 e0       	ldi	r21, 0x00	; 0
    10b8:	84 e7       	ldi	r24, 0x74	; 116
    10ba:	96 e1       	ldi	r25, 0x16	; 22
    10bc:	7b d8       	rcall	.-3850   	; 0x1b4 <BUFFER_Write>
    10be:	4b c0       	rjmp	.+150    	; 0x1156 <ParseReceived+0x4c4>
    10c0:	f1 e1       	ldi	r31, 0x11	; 17
    10c2:	8f 16       	cp	r8, r31
    10c4:	91 04       	cpc	r9, r1
    10c6:	08 f4       	brcc	.+2      	; 0x10ca <ParseReceived+0x438>
    10c8:	46 c0       	rjmp	.+140    	; 0x1156 <ParseReceived+0x4c4>
    10ca:	63 e7       	ldi	r22, 0x73	; 115
    10cc:	73 e0       	ldi	r23, 0x03	; 3
    10ce:	c4 01       	movw	r24, r8
    10d0:	0f 97       	sbiw	r24, 0x0f	; 15
    10d2:	8c 0d       	add	r24, r12
    10d4:	9d 1d       	adc	r25, r13
    10d6:	0e 94 6d 17 	call	0x2eda	; 0x2eda <strstr>
    10da:	00 97       	sbiw	r24, 0x00	; 0
    10dc:	e1 f1       	breq	.+120    	; 0x1156 <ParseReceived+0x4c4>
    10de:	dc 01       	movw	r26, r24
    10e0:	8e 91       	ld	r24, -X
    10e2:	90 e0       	ldi	r25, 0x00	; 0
    10e4:	c0 97       	sbiw	r24, 0x30	; 48
    10e6:	43 e4       	ldi	r20, 0x43	; 67
    10e8:	48 9f       	mul	r20, r24
    10ea:	90 01       	movw	r18, r0
    10ec:	49 9f       	mul	r20, r25
    10ee:	30 0d       	add	r19, r0
    10f0:	11 24       	eor	r1, r1
    10f2:	20 0f       	add	r18, r16
    10f4:	31 1f       	adc	r19, r17
    10f6:	f9 01       	movw	r30, r18
    10f8:	e8 5a       	subi	r30, 0xA8	; 168
    10fa:	ff 4f       	sbci	r31, 0xFF	; 255
    10fc:	10 82       	st	Z, r1
    10fe:	a9 01       	movw	r20, r18
    1100:	46 5a       	subi	r20, 0xA6	; 166
    1102:	5f 4f       	sbci	r21, 0xFF	; 255
    1104:	fa 01       	movw	r30, r20
    1106:	10 82       	st	Z, r1
    1108:	ff 96       	adiw	r30, 0x3f	; 63
    110a:	10 82       	st	Z, r1
    110c:	31 97       	sbiw	r30, 0x01	; 1
    110e:	10 82       	st	Z, r1
    1110:	ff 97       	sbiw	r30, 0x3f	; 63
    1112:	2c 91       	ld	r18, X
    1114:	20 53       	subi	r18, 0x30	; 48
    1116:	20 83       	st	Z, r18
    1118:	da 01       	movw	r26, r20
    111a:	2c 91       	ld	r18, X
    111c:	22 23       	and	r18, r18
    111e:	d9 f0       	breq	.+54     	; 0x1156 <ParseReceived+0x4c4>
    1120:	f8 01       	movw	r30, r16
    1122:	44 81       	ldd	r20, Z+4	; 0x04
    1124:	55 81       	ldd	r21, Z+5	; 0x05
    1126:	66 81       	ldd	r22, Z+6	; 0x06
    1128:	77 81       	ldd	r23, Z+7	; 0x07
    112a:	4a 30       	cpi	r20, 0x0A	; 10
    112c:	51 05       	cpc	r21, r1
    112e:	61 05       	cpc	r22, r1
    1130:	71 05       	cpc	r23, r1
    1132:	21 f4       	brne	.+8      	; 0x113c <ParseReceived+0x4aa>
    1134:	14 82       	std	Z+4, r1	; 0x04
    1136:	15 82       	std	Z+5, r1	; 0x05
    1138:	16 82       	std	Z+6, r1	; 0x06
    113a:	17 82       	std	Z+7, r1	; 0x07
    113c:	23 e4       	ldi	r18, 0x43	; 67
    113e:	28 9f       	mul	r18, r24
    1140:	b0 01       	movw	r22, r0
    1142:	29 9f       	mul	r18, r25
    1144:	70 0d       	add	r23, r0
    1146:	11 24       	eor	r1, r1
    1148:	68 5a       	subi	r22, 0xA8	; 168
    114a:	7f 4f       	sbci	r23, 0xFF	; 255
    114c:	60 0f       	add	r22, r16
    114e:	71 1f       	adc	r23, r17
    1150:	c8 01       	movw	r24, r16
    1152:	0e 94 0e 15 	call	0x2a1c	; 0x2a1c <ESP8266_Callback_ClientConnectionError>
    1156:	45 e0       	ldi	r20, 0x05	; 5
    1158:	50 e0       	ldi	r21, 0x00	; 0
    115a:	6a ef       	ldi	r22, 0xFA	; 250
    115c:	72 e0       	ldi	r23, 0x02	; 2
    115e:	c6 01       	movw	r24, r12
    1160:	0e 94 50 17 	call	0x2ea0	; 0x2ea0 <strncmp>
    1164:	89 2b       	or	r24, r25
    1166:	09 f0       	breq	.+2      	; 0x116a <ParseReceived+0x4d8>
    1168:	97 c1       	rjmp	.+814    	; 0x1498 <ParseReceived+0x806>
    116a:	81 e0       	ldi	r24, 0x01	; 1
    116c:	f8 01       	movw	r30, r16
    116e:	eb 50       	subi	r30, 0x0B	; 11
    1170:	fe 4f       	sbci	r31, 0xFE	; 254
    1172:	80 83       	st	Z, r24
    1174:	36 96       	adiw	r30, 0x06	; 6
    1176:	50 82       	st	Z, r5
    1178:	f6 01       	movw	r30, r12
    117a:	85 81       	ldd	r24, Z+5	; 0x05
    117c:	80 53       	subi	r24, 0x30	; 48
    117e:	78 01       	movw	r14, r16
    1180:	f6 e0       	ldi	r31, 0x06	; 6
    1182:	ef 1a       	sub	r14, r31
    1184:	fe ef       	ldi	r31, 0xFE	; 254
    1186:	ff 0a       	sbc	r15, r31
    1188:	d7 01       	movw	r26, r14
    118a:	8c 93       	st	X, r24
    118c:	0f 2e       	mov	r0, r31
    118e:	f3 e4       	ldi	r31, 0x43	; 67
    1190:	7f 2e       	mov	r7, r31
    1192:	f0 2d       	mov	r31, r0
    1194:	58 01       	movw	r10, r16
    1196:	78 9e       	mul	r7, r24
    1198:	a0 0c       	add	r10, r0
    119a:	b1 1c       	adc	r11, r1
    119c:	11 24       	eor	r1, r1
    119e:	f5 01       	movw	r30, r10
    11a0:	e4 59       	subi	r30, 0x94	; 148
    11a2:	ff 4f       	sbci	r31, 0xFF	; 255
    11a4:	24 eb       	ldi	r18, 0xB4	; 180
    11a6:	3a e0       	ldi	r19, 0x0A	; 10
    11a8:	31 83       	std	Z+1, r19	; 0x01
    11aa:	20 83       	st	Z, r18
    11ac:	73 97       	sbiw	r30, 0x13	; 19
    11ae:	80 83       	st	Z, r24
    11b0:	be 01       	movw	r22, r28
    11b2:	6f 5f       	subi	r22, 0xFF	; 255
    11b4:	7f 4f       	sbci	r23, 0xFF	; 255
    11b6:	c6 01       	movw	r24, r12
    11b8:	07 96       	adiw	r24, 0x07	; 7
    11ba:	41 da       	rcall	.-2942   	; 0x63e <ParseNumber>
    11bc:	f5 01       	movw	r30, r10
    11be:	ee 59       	subi	r30, 0x9E	; 158
    11c0:	ff 4f       	sbci	r31, 0xFF	; 255
    11c2:	60 83       	st	Z, r22
    11c4:	71 83       	std	Z+1, r23	; 0x01
    11c6:	82 83       	std	Z+2, r24	; 0x02
    11c8:	93 83       	std	Z+3, r25	; 0x03
    11ca:	f7 01       	movw	r30, r14
    11cc:	80 81       	ld	r24, Z
    11ce:	28 2f       	mov	r18, r24
    11d0:	30 e0       	ldi	r19, 0x00	; 0
    11d2:	f8 01       	movw	r30, r16
    11d4:	78 9e       	mul	r7, r24
    11d6:	e0 0d       	add	r30, r0
    11d8:	f1 1d       	adc	r31, r1
    11da:	11 24       	eor	r1, r1
    11dc:	ea 59       	subi	r30, 0x9A	; 154
    11de:	ff 4f       	sbci	r31, 0xFF	; 255
    11e0:	80 81       	ld	r24, Z
    11e2:	91 81       	ldd	r25, Z+1	; 0x01
    11e4:	a2 81       	ldd	r26, Z+2	; 0x02
    11e6:	b3 81       	ldd	r27, Z+3	; 0x03
    11e8:	89 2b       	or	r24, r25
    11ea:	8a 2b       	or	r24, r26
    11ec:	8b 2b       	or	r24, r27
    11ee:	81 f4       	brne	.+32     	; 0x1210 <ParseReceived+0x57e>
    11f0:	43 e4       	ldi	r20, 0x43	; 67
    11f2:	42 9f       	mul	r20, r18
    11f4:	c0 01       	movw	r24, r0
    11f6:	43 9f       	mul	r20, r19
    11f8:	90 0d       	add	r25, r0
    11fa:	11 24       	eor	r1, r1
    11fc:	80 0f       	add	r24, r16
    11fe:	91 1f       	adc	r25, r17
    1200:	fc 01       	movw	r30, r24
    1202:	e8 56       	subi	r30, 0x68	; 104
    1204:	ff 4f       	sbci	r31, 0xFF	; 255
    1206:	10 82       	st	Z, r1
    1208:	31 96       	adiw	r30, 0x01	; 1
    120a:	81 e0       	ldi	r24, 0x01	; 1
    120c:	80 83       	st	Z, r24
    120e:	0b c0       	rjmp	.+22     	; 0x1226 <ParseReceived+0x594>
    1210:	83 e4       	ldi	r24, 0x43	; 67
    1212:	82 9f       	mul	r24, r18
    1214:	f0 01       	movw	r30, r0
    1216:	83 9f       	mul	r24, r19
    1218:	f0 0d       	add	r31, r0
    121a:	11 24       	eor	r1, r1
    121c:	e0 0f       	add	r30, r16
    121e:	f1 1f       	adc	r31, r17
    1220:	e7 56       	subi	r30, 0x67	; 103
    1222:	ff 4f       	sbci	r31, 0xFF	; 255
    1224:	10 82       	st	Z, r1
    1226:	78 01       	movw	r14, r16
    1228:	f6 e0       	ldi	r31, 0x06	; 6
    122a:	ef 1a       	sub	r14, r31
    122c:	fe ef       	ldi	r31, 0xFE	; 254
    122e:	ff 0a       	sbc	r15, r31
    1230:	d7 01       	movw	r26, r14
    1232:	2c 91       	ld	r18, X
    1234:	0f 2e       	mov	r0, r31
    1236:	f3 e4       	ldi	r31, 0x43	; 67
    1238:	bf 2e       	mov	r11, r31
    123a:	f0 2d       	mov	r31, r0
    123c:	b2 9e       	mul	r11, r18
    123e:	90 01       	movw	r18, r0
    1240:	11 24       	eor	r1, r1
    1242:	f8 01       	movw	r30, r16
    1244:	e2 0f       	add	r30, r18
    1246:	f3 1f       	adc	r31, r19
    1248:	df 01       	movw	r26, r30
    124a:	aa 59       	subi	r26, 0x9A	; 154
    124c:	bf 4f       	sbci	r27, 0xFF	; 255
    124e:	ee 59       	subi	r30, 0x9E	; 158
    1250:	ff 4f       	sbci	r31, 0xFF	; 255
    1252:	40 80       	ld	r4, Z
    1254:	51 80       	ldd	r5, Z+1	; 0x01
    1256:	62 80       	ldd	r6, Z+2	; 0x02
    1258:	73 80       	ldd	r7, Z+3	; 0x03
    125a:	4d 91       	ld	r20, X+
    125c:	5d 91       	ld	r21, X+
    125e:	6d 91       	ld	r22, X+
    1260:	7c 91       	ld	r23, X
    1262:	13 97       	sbiw	r26, 0x03	; 3
    1264:	44 0d       	add	r20, r4
    1266:	55 1d       	adc	r21, r5
    1268:	66 1d       	adc	r22, r6
    126a:	77 1d       	adc	r23, r7
    126c:	4d 93       	st	X+, r20
    126e:	5d 93       	st	X+, r21
    1270:	6d 93       	st	X+, r22
    1272:	7c 93       	st	X, r23
    1274:	13 97       	sbiw	r26, 0x03	; 3
    1276:	d8 01       	movw	r26, r16
    1278:	a9 5e       	subi	r26, 0xE9	; 233
    127a:	bd 4f       	sbci	r27, 0xFD	; 253
    127c:	40 80       	ld	r4, Z
    127e:	51 80       	ldd	r5, Z+1	; 0x01
    1280:	62 80       	ldd	r6, Z+2	; 0x02
    1282:	73 80       	ldd	r7, Z+3	; 0x03
    1284:	4d 91       	ld	r20, X+
    1286:	5d 91       	ld	r21, X+
    1288:	6d 91       	ld	r22, X+
    128a:	7c 91       	ld	r23, X
    128c:	13 97       	sbiw	r26, 0x03	; 3
    128e:	44 0d       	add	r20, r4
    1290:	55 1d       	adc	r21, r5
    1292:	66 1d       	adc	r22, r6
    1294:	77 1d       	adc	r23, r7
    1296:	4d 93       	st	X+, r20
    1298:	5d 93       	st	X+, r21
    129a:	6d 93       	st	X+, r22
    129c:	7c 93       	st	X, r23
    129e:	13 97       	sbiw	r26, 0x03	; 3
    12a0:	89 81       	ldd	r24, Y+1	; 0x01
    12a2:	90 e0       	ldi	r25, 0x00	; 0
    12a4:	01 96       	adiw	r24, 0x01	; 1
    12a6:	09 2e       	mov	r0, r25
    12a8:	00 0c       	add	r0, r0
    12aa:	aa 0b       	sbc	r26, r26
    12ac:	bb 0b       	sbc	r27, r27
    12ae:	2c 01       	movw	r4, r24
    12b0:	3d 01       	movw	r6, r26
    12b2:	e7 e0       	ldi	r30, 0x07	; 7
    12b4:	4e 0e       	add	r4, r30
    12b6:	51 1c       	adc	r5, r1
    12b8:	61 1c       	adc	r6, r1
    12ba:	71 1c       	adc	r7, r1
    12bc:	b9 01       	movw	r22, r18
    12be:	63 5a       	subi	r22, 0xA3	; 163
    12c0:	7f 4f       	sbci	r23, 0xFF	; 255
    12c2:	60 0f       	add	r22, r16
    12c4:	71 1f       	adc	r23, r17
    12c6:	c6 01       	movw	r24, r12
    12c8:	84 0d       	add	r24, r4
    12ca:	95 1d       	adc	r25, r5
    12cc:	ae 01       	movw	r20, r28
    12ce:	4f 5f       	subi	r20, 0xFF	; 255
    12d0:	5f 4f       	sbci	r21, 0xFF	; 255
    12d2:	41 da       	rcall	.-2942   	; 0x756 <ParseIP>
    12d4:	d7 01       	movw	r26, r14
    12d6:	ec 90       	ld	r14, X
    12d8:	f1 2c       	mov	r15, r1
    12da:	89 81       	ldd	r24, Y+1	; 0x01
    12dc:	90 e0       	ldi	r25, 0x00	; 0
    12de:	01 96       	adiw	r24, 0x01	; 1
    12e0:	09 2e       	mov	r0, r25
    12e2:	00 0c       	add	r0, r0
    12e4:	aa 0b       	sbc	r26, r26
    12e6:	bb 0b       	sbc	r27, r27
    12e8:	84 0d       	add	r24, r4
    12ea:	95 1d       	adc	r25, r5
    12ec:	a6 1d       	adc	r26, r6
    12ee:	b7 1d       	adc	r27, r7
    12f0:	8c 0d       	add	r24, r12
    12f2:	9d 1d       	adc	r25, r13
    12f4:	be 01       	movw	r22, r28
    12f6:	6f 5f       	subi	r22, 0xFF	; 255
    12f8:	7f 4f       	sbci	r23, 0xFF	; 255
    12fa:	a1 d9       	rcall	.-3262   	; 0x63e <ParseNumber>
    12fc:	be 9c       	mul	r11, r14
    12fe:	f0 01       	movw	r30, r0
    1300:	bf 9c       	mul	r11, r15
    1302:	f0 0d       	add	r31, r0
    1304:	11 24       	eor	r1, r1
    1306:	e0 0f       	add	r30, r16
    1308:	f1 1f       	adc	r31, r17
    130a:	e5 5a       	subi	r30, 0xA5	; 165
    130c:	ff 4f       	sbci	r31, 0xFF	; 255
    130e:	71 83       	std	Z+1, r23	; 0x01
    1310:	60 83       	st	Z, r22
    1312:	f6 01       	movw	r30, r12
    1314:	80 81       	ld	r24, Z
    1316:	8a 33       	cpi	r24, 0x3A	; 58
    1318:	c1 f0       	breq	.+48     	; 0x134a <ParseReceived+0x6b8>
    131a:	a4 01       	movw	r20, r8
    131c:	60 e0       	ldi	r22, 0x00	; 0
    131e:	70 e0       	ldi	r23, 0x00	; 0
    1320:	41 15       	cp	r20, r1
    1322:	51 05       	cpc	r21, r1
    1324:	61 05       	cpc	r22, r1
    1326:	71 05       	cpc	r23, r1
    1328:	a1 f0       	breq	.+40     	; 0x1352 <ParseReceived+0x6c0>
    132a:	31 96       	adiw	r30, 0x01	; 1
    132c:	80 e0       	ldi	r24, 0x00	; 0
    132e:	90 e0       	ldi	r25, 0x00	; 0
    1330:	dc 01       	movw	r26, r24
    1332:	01 96       	adiw	r24, 0x01	; 1
    1334:	a1 1d       	adc	r26, r1
    1336:	b1 1d       	adc	r27, r1
    1338:	21 91       	ld	r18, Z+
    133a:	2a 33       	cpi	r18, 0x3A	; 58
    133c:	69 f0       	breq	.+26     	; 0x1358 <ParseReceived+0x6c6>
    133e:	84 17       	cp	r24, r20
    1340:	95 07       	cpc	r25, r21
    1342:	a6 07       	cpc	r26, r22
    1344:	b7 07       	cpc	r27, r23
    1346:	a8 f3       	brcs	.-22     	; 0x1332 <ParseReceived+0x6a0>
    1348:	07 c0       	rjmp	.+14     	; 0x1358 <ParseReceived+0x6c6>
    134a:	80 e0       	ldi	r24, 0x00	; 0
    134c:	90 e0       	ldi	r25, 0x00	; 0
    134e:	dc 01       	movw	r26, r24
    1350:	03 c0       	rjmp	.+6      	; 0x1358 <ParseReceived+0x6c6>
    1352:	80 e0       	ldi	r24, 0x00	; 0
    1354:	90 e0       	ldi	r25, 0x00	; 0
    1356:	dc 01       	movw	r26, r24
    1358:	2c 01       	movw	r4, r24
    135a:	3d 01       	movw	r6, r26
    135c:	ff ef       	ldi	r31, 0xFF	; 255
    135e:	4f 1a       	sub	r4, r31
    1360:	5f 0a       	sbc	r5, r31
    1362:	6f 0a       	sbc	r6, r31
    1364:	7f 0a       	sbc	r7, r31
    1366:	f8 01       	movw	r30, r16
    1368:	e6 50       	subi	r30, 0x06	; 6
    136a:	fe 4f       	sbci	r31, 0xFE	; 254
    136c:	20 81       	ld	r18, Z
    136e:	22 2e       	mov	r2, r18
    1370:	31 2c       	mov	r3, r1
    1372:	f8 01       	movw	r30, r16
    1374:	33 e4       	ldi	r19, 0x43	; 67
    1376:	23 9f       	mul	r18, r19
    1378:	e0 0d       	add	r30, r0
    137a:	f1 1d       	adc	r31, r1
    137c:	11 24       	eor	r1, r1
    137e:	ee 59       	subi	r30, 0x9E	; 158
    1380:	ff 4f       	sbci	r31, 0xFF	; 255
    1382:	80 81       	ld	r24, Z
    1384:	91 81       	ldd	r25, Z+1	; 0x01
    1386:	a2 81       	ldd	r26, Z+2	; 0x02
    1388:	b3 81       	ldd	r27, Z+3	; 0x03
    138a:	a4 01       	movw	r20, r8
    138c:	60 e0       	ldi	r22, 0x00	; 0
    138e:	70 e0       	ldi	r23, 0x00	; 0
    1390:	44 19       	sub	r20, r4
    1392:	55 09       	sbc	r21, r5
    1394:	66 09       	sbc	r22, r6
    1396:	77 09       	sbc	r23, r7
    1398:	84 17       	cp	r24, r20
    139a:	95 07       	cpc	r25, r21
    139c:	a6 07       	cpc	r26, r22
    139e:	b7 07       	cpc	r27, r23
    13a0:	18 f4       	brcc	.+6      	; 0x13a8 <ParseReceived+0x716>
    13a2:	42 01       	movw	r8, r4
    13a4:	88 0e       	add	r8, r24
    13a6:	99 1e       	adc	r9, r25
    13a8:	74 01       	movw	r14, r8
    13aa:	e4 18       	sub	r14, r4
    13ac:	f5 08       	sbc	r15, r5
    13ae:	0f 2e       	mov	r0, r31
    13b0:	f3 e4       	ldi	r31, 0x43	; 67
    13b2:	bf 2e       	mov	r11, r31
    13b4:	f0 2d       	mov	r31, r0
    13b6:	b2 9c       	mul	r11, r2
    13b8:	f0 01       	movw	r30, r0
    13ba:	b3 9c       	mul	r11, r3
    13bc:	f0 0d       	add	r31, r0
    13be:	11 24       	eor	r1, r1
    13c0:	e0 0f       	add	r30, r16
    13c2:	f1 1f       	adc	r31, r17
    13c4:	e4 59       	subi	r30, 0x94	; 148
    13c6:	ff 4f       	sbci	r31, 0xFF	; 255
    13c8:	a7 01       	movw	r20, r14
    13ca:	b6 01       	movw	r22, r12
    13cc:	64 0d       	add	r22, r4
    13ce:	75 1d       	adc	r23, r5
    13d0:	80 81       	ld	r24, Z
    13d2:	91 81       	ldd	r25, Z+1	; 0x01
    13d4:	0e 94 37 17 	call	0x2e6e	; 0x2e6e <memcpy>
    13d8:	f8 01       	movw	r30, r16
    13da:	e6 50       	subi	r30, 0x06	; 6
    13dc:	fe 4f       	sbci	r31, 0xFE	; 254
    13de:	20 81       	ld	r18, Z
    13e0:	82 2f       	mov	r24, r18
    13e2:	90 e0       	ldi	r25, 0x00	; 0
    13e4:	f8 01       	movw	r30, r16
    13e6:	b2 9e       	mul	r11, r18
    13e8:	e0 0d       	add	r30, r0
    13ea:	f1 1d       	adc	r31, r1
    13ec:	11 24       	eor	r1, r1
    13ee:	ee 59       	subi	r30, 0x9E	; 158
    13f0:	ff 4f       	sbci	r31, 0xFF	; 255
    13f2:	40 81       	ld	r20, Z
    13f4:	51 81       	ldd	r21, Z+1	; 0x01
    13f6:	62 81       	ldd	r22, Z+2	; 0x02
    13f8:	73 81       	ldd	r23, Z+3	; 0x03
    13fa:	a1 2c       	mov	r10, r1
    13fc:	b1 2c       	mov	r11, r1
    13fe:	84 18       	sub	r8, r4
    1400:	95 08       	sbc	r9, r5
    1402:	a6 08       	sbc	r10, r6
    1404:	b7 08       	sbc	r11, r7
    1406:	48 15       	cp	r20, r8
    1408:	59 05       	cpc	r21, r9
    140a:	6a 05       	cpc	r22, r10
    140c:	7b 05       	cpc	r23, r11
    140e:	88 f4       	brcc	.+34     	; 0x1432 <ParseReceived+0x7a0>
    1410:	e3 e4       	ldi	r30, 0x43	; 67
    1412:	e8 9f       	mul	r30, r24
    1414:	90 01       	movw	r18, r0
    1416:	e9 9f       	mul	r30, r25
    1418:	30 0d       	add	r19, r0
    141a:	11 24       	eor	r1, r1
    141c:	20 0f       	add	r18, r16
    141e:	31 1f       	adc	r19, r17
    1420:	f9 01       	movw	r30, r18
    1422:	e4 59       	subi	r30, 0x94	; 148
    1424:	ff 4f       	sbci	r31, 0xFF	; 255
    1426:	80 81       	ld	r24, Z
    1428:	91 81       	ldd	r25, Z+1	; 0x01
    142a:	fc 01       	movw	r30, r24
    142c:	e4 0f       	add	r30, r20
    142e:	f5 1f       	adc	r31, r21
    1430:	10 82       	st	Z, r1
    1432:	f8 01       	movw	r30, r16
    1434:	e8 50       	subi	r30, 0x08	; 8
    1436:	fe 4f       	sbci	r31, 0xFE	; 254
    1438:	f1 82       	std	Z+1, r15	; 0x01
    143a:	e0 82       	st	Z, r14
    143c:	32 97       	sbiw	r30, 0x02	; 2
    143e:	f1 82       	std	Z+1, r15	; 0x01
    1440:	e0 82       	st	Z, r14
    1442:	34 96       	adiw	r30, 0x04	; 4
    1444:	80 81       	ld	r24, Z
    1446:	28 2f       	mov	r18, r24
    1448:	30 e0       	ldi	r19, 0x00	; 0
    144a:	f8 01       	movw	r30, r16
    144c:	43 e4       	ldi	r20, 0x43	; 67
    144e:	84 9f       	mul	r24, r20
    1450:	e0 0d       	add	r30, r0
    1452:	f1 1d       	adc	r31, r1
    1454:	11 24       	eor	r1, r1
    1456:	ee 59       	subi	r30, 0x9E	; 158
    1458:	ff 4f       	sbci	r31, 0xFF	; 255
    145a:	80 81       	ld	r24, Z
    145c:	91 81       	ldd	r25, Z+1	; 0x01
    145e:	a2 81       	ldd	r26, Z+2	; 0x02
    1460:	b3 81       	ldd	r27, Z+3	; 0x03
    1462:	48 16       	cp	r4, r24
    1464:	59 06       	cpc	r5, r25
    1466:	6a 06       	cpc	r6, r26
    1468:	7b 06       	cpc	r7, r27
    146a:	b0 f0       	brcs	.+44     	; 0x1498 <ParseReceived+0x806>
    146c:	f8 01       	movw	r30, r16
    146e:	eb 50       	subi	r30, 0x0B	; 11
    1470:	fe 4f       	sbci	r31, 0xFE	; 254
    1472:	10 82       	st	Z, r1
    1474:	43 e4       	ldi	r20, 0x43	; 67
    1476:	42 9f       	mul	r20, r18
    1478:	c0 01       	movw	r24, r0
    147a:	43 9f       	mul	r20, r19
    147c:	90 0d       	add	r25, r0
    147e:	11 24       	eor	r1, r1
    1480:	80 0f       	add	r24, r16
    1482:	91 1f       	adc	r25, r17
    1484:	fc 01       	movw	r30, r24
    1486:	e2 59       	subi	r30, 0x92	; 146
    1488:	ff 4f       	sbci	r31, 0xFF	; 255
    148a:	51 82       	std	Z+1, r5	; 0x01
    148c:	40 82       	st	Z, r4
    148e:	32 96       	adiw	r30, 0x02	; 2
    1490:	21 e0       	ldi	r18, 0x01	; 1
    1492:	20 83       	st	Z, r18
    1494:	31 96       	adiw	r30, 0x01	; 1
    1496:	20 83       	st	Z, r18
    1498:	f8 01       	movw	r30, r16
    149a:	84 81       	ldd	r24, Z+4	; 0x04
    149c:	95 81       	ldd	r25, Z+5	; 0x05
    149e:	a6 81       	ldd	r26, Z+6	; 0x06
    14a0:	b7 81       	ldd	r27, Z+7	; 0x07
    14a2:	fc 01       	movw	r30, r24
    14a4:	31 97       	sbiw	r30, 0x01	; 1
    14a6:	e1 32       	cpi	r30, 0x21	; 33
    14a8:	f1 05       	cpc	r31, r1
    14aa:	08 f0       	brcs	.+2      	; 0x14ae <ParseReceived+0x81c>
    14ac:	a8 c2       	rjmp	.+1360   	; 0x19fe <ParseReceived+0xd6c>
    14ae:	88 27       	eor	r24, r24
    14b0:	ee 58       	subi	r30, 0x8E	; 142
    14b2:	ff 4f       	sbci	r31, 0xFF	; 255
    14b4:	8f 4f       	sbci	r24, 0xFF	; 255
    14b6:	0c 94 f2 15 	jmp	0x2be4	; 0x2be4 <__tablejump2__>
    14ba:	47 e0       	ldi	r20, 0x07	; 7
    14bc:	50 e0       	ldi	r21, 0x00	; 0
    14be:	63 e8       	ldi	r22, 0x83	; 131
    14c0:	73 e0       	ldi	r23, 0x03	; 3
    14c2:	c6 01       	movw	r24, r12
    14c4:	0e 94 50 17 	call	0x2ea0	; 0x2ea0 <strncmp>
    14c8:	89 2b       	or	r24, r25
    14ca:	89 f4       	brne	.+34     	; 0x14ee <ParseReceived+0x85c>
    14cc:	87 e0       	ldi	r24, 0x07	; 7
    14ce:	ec e7       	ldi	r30, 0x7C	; 124
    14d0:	f3 e0       	ldi	r31, 0x03	; 3
    14d2:	d8 01       	movw	r26, r16
    14d4:	18 96       	adiw	r26, 0x08	; 8
    14d6:	01 90       	ld	r0, Z+
    14d8:	0d 92       	st	X+, r0
    14da:	8a 95       	dec	r24
    14dc:	e1 f7       	brne	.-8      	; 0x14d6 <ParseReceived+0x844>
    14de:	f8 01       	movw	r30, r16
    14e0:	eb 5e       	subi	r30, 0xEB	; 235
    14e2:	fd 4f       	sbci	r31, 0xFD	; 253
    14e4:	d6 01       	movw	r26, r12
    14e6:	17 96       	adiw	r26, 0x07	; 7
    14e8:	8c 91       	ld	r24, X
    14ea:	80 53       	subi	r24, 0x30	; 48
    14ec:	80 83       	st	Z, r24
    14ee:	69 ed       	ldi	r22, 0xD9	; 217
    14f0:	72 e0       	ldi	r23, 0x02	; 2
    14f2:	c6 01       	movw	r24, r12
    14f4:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
    14f8:	89 2b       	or	r24, r25
    14fa:	09 f0       	breq	.+2      	; 0x14fe <ParseReceived+0x86c>
    14fc:	ce c2       	rjmp	.+1436   	; 0x1a9a <ParseReceived+0xe08>
    14fe:	f8 01       	movw	r30, r16
    1500:	14 82       	std	Z+4, r1	; 0x04
    1502:	15 82       	std	Z+5, r1	; 0x05
    1504:	16 82       	std	Z+6, r1	; 0x06
    1506:	17 82       	std	Z+7, r1	; 0x07
    1508:	6c e7       	ldi	r22, 0x7C	; 124
    150a:	73 e0       	ldi	r23, 0x03	; 3
    150c:	c6 01       	movw	r24, r12
    150e:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
    1512:	89 2b       	or	r24, r25
    1514:	09 f0       	breq	.+2      	; 0x1518 <ParseReceived+0x886>
    1516:	73 c2       	rjmp	.+1254   	; 0x19fe <ParseReceived+0xd6c>
    1518:	d8 01       	movw	r26, r16
    151a:	14 96       	adiw	r26, 0x04	; 4
    151c:	1d 92       	st	X+, r1
    151e:	1d 92       	st	X+, r1
    1520:	1d 92       	st	X+, r1
    1522:	1c 92       	st	X, r1
    1524:	17 97       	sbiw	r26, 0x07	; 7
    1526:	c8 01       	movw	r24, r16
    1528:	0e 94 a8 14 	call	0x2950	; 0x2950 <ESP8266_Callback_WifiConnectFailed>
    152c:	68 c2       	rjmp	.+1232   	; 0x19fe <ParseReceived+0xd6c>
    152e:	4b e0       	ldi	r20, 0x0B	; 11
    1530:	50 e0       	ldi	r21, 0x00	; 0
    1532:	6b e8       	ldi	r22, 0x8B	; 139
    1534:	73 e0       	ldi	r23, 0x03	; 3
    1536:	c6 01       	movw	r24, r12
    1538:	0e 94 50 17 	call	0x2ea0	; 0x2ea0 <strncmp>
    153c:	89 2b       	or	r24, r25
    153e:	09 f0       	breq	.+2      	; 0x1542 <ParseReceived+0x8b0>
    1540:	66 c0       	rjmp	.+204    	; 0x160e <ParseReceived+0x97c>
    1542:	67 e9       	ldi	r22, 0x97	; 151
    1544:	73 e0       	ldi	r23, 0x03	; 3
    1546:	c6 01       	movw	r24, r12
    1548:	0e 94 6d 17 	call	0x2eda	; 0x2eda <strstr>
    154c:	89 2b       	or	r24, r25
    154e:	09 f4       	brne	.+2      	; 0x1552 <ParseReceived+0x8c0>
    1550:	5e c0       	rjmp	.+188    	; 0x160e <ParseReceived+0x97c>
    1552:	f6 01       	movw	r30, r12
    1554:	80 81       	ld	r24, Z
    1556:	88 23       	and	r24, r24
    1558:	09 f4       	brne	.+2      	; 0x155c <ParseReceived+0x8ca>
    155a:	59 c0       	rjmp	.+178    	; 0x160e <ParseReceived+0x97c>
    155c:	82 32       	cpi	r24, 0x22	; 34
    155e:	09 f4       	brne	.+2      	; 0x1562 <ParseReceived+0x8d0>
    1560:	a4 c2       	rjmp	.+1352   	; 0x1aaa <ParseReceived+0xe18>
    1562:	31 96       	adiw	r30, 0x01	; 1
    1564:	df 01       	movw	r26, r30
    1566:	81 91       	ld	r24, Z+
    1568:	88 23       	and	r24, r24
    156a:	09 f4       	brne	.+2      	; 0x156e <ParseReceived+0x8dc>
    156c:	50 c0       	rjmp	.+160    	; 0x160e <ParseReceived+0x97c>
    156e:	82 32       	cpi	r24, 0x22	; 34
    1570:	c9 f7       	brne	.-14     	; 0x1564 <ParseReceived+0x8d2>
    1572:	9c c2       	rjmp	.+1336   	; 0x1aac <ParseReceived+0xe1a>
    1574:	61 e0       	ldi	r22, 0x01	; 1
    1576:	69 0f       	add	r22, r25
    1578:	af 01       	movw	r20, r30
    157a:	d8 01       	movw	r26, r16
    157c:	a9 0f       	add	r26, r25
    157e:	b1 1d       	adc	r27, r1
    1580:	a4 50       	subi	r26, 0x04	; 4
    1582:	be 4f       	sbci	r27, 0xFE	; 254
    1584:	8c 93       	st	X, r24
    1586:	81 91       	ld	r24, Z+
    1588:	2f 5f       	subi	r18, 0xFF	; 255
    158a:	3f 4f       	sbci	r19, 0xFF	; 255
    158c:	88 23       	and	r24, r24
    158e:	81 f0       	breq	.+32     	; 0x15b0 <ParseReceived+0x91e>
    1590:	96 2f       	mov	r25, r22
    1592:	af 01       	movw	r20, r30
    1594:	41 50       	subi	r20, 0x01	; 1
    1596:	51 09       	sbc	r21, r1
    1598:	82 32       	cpi	r24, 0x22	; 34
    159a:	61 f7       	brne	.-40     	; 0x1574 <ParseReceived+0x8e2>
    159c:	60 81       	ld	r22, Z
    159e:	6c 32       	cpi	r22, 0x2C	; 44
    15a0:	49 f7       	brne	.-46     	; 0x1574 <ParseReceived+0x8e2>
    15a2:	d9 01       	movw	r26, r18
    15a4:	6c 91       	ld	r22, X
    15a6:	62 32       	cpi	r22, 0x22	; 34
    15a8:	29 f7       	brne	.-54     	; 0x1574 <ParseReceived+0x8e2>
    15aa:	69 2f       	mov	r22, r25
    15ac:	01 c0       	rjmp	.+2      	; 0x15b0 <ParseReceived+0x91e>
    15ae:	60 e0       	ldi	r22, 0x00	; 0
    15b0:	f8 01       	movw	r30, r16
    15b2:	e6 0f       	add	r30, r22
    15b4:	f1 1d       	adc	r31, r1
    15b6:	e4 50       	subi	r30, 0x04	; 4
    15b8:	fe 4f       	sbci	r31, 0xFE	; 254
    15ba:	10 82       	st	Z, r1
    15bc:	7a 01       	movw	r14, r20
    15be:	b3 e0       	ldi	r27, 0x03	; 3
    15c0:	eb 0e       	add	r14, r27
    15c2:	f1 1c       	adc	r15, r1
    15c4:	ae 01       	movw	r20, r28
    15c6:	4e 5f       	subi	r20, 0xFE	; 254
    15c8:	5f 4f       	sbci	r21, 0xFF	; 255
    15ca:	b8 01       	movw	r22, r16
    15cc:	64 5f       	subi	r22, 0xF4	; 244
    15ce:	7d 4f       	sbci	r23, 0xFD	; 253
    15d0:	c7 01       	movw	r24, r14
    15d2:	13 da       	rcall	.-3034   	; 0x9fa <ParseMAC>
    15d4:	2a 81       	ldd	r18, Y+2	; 0x02
    15d6:	30 e0       	ldi	r19, 0x00	; 0
    15d8:	2e 5f       	subi	r18, 0xFE	; 254
    15da:	3f 4f       	sbci	r19, 0xFF	; 255
    15dc:	e2 0e       	add	r14, r18
    15de:	f3 1e       	adc	r15, r19
    15e0:	be 01       	movw	r22, r28
    15e2:	6e 5f       	subi	r22, 0xFE	; 254
    15e4:	7f 4f       	sbci	r23, 0xFF	; 255
    15e6:	c7 01       	movw	r24, r14
    15e8:	2a d8       	rcall	.-4012   	; 0x63e <ParseNumber>
    15ea:	f8 01       	movw	r30, r16
    15ec:	ee 5e       	subi	r30, 0xEE	; 238
    15ee:	fd 4f       	sbci	r31, 0xFD	; 253
    15f0:	60 83       	st	Z, r22
    15f2:	8a 81       	ldd	r24, Y+2	; 0x02
    15f4:	90 e0       	ldi	r25, 0x00	; 0
    15f6:	01 96       	adiw	r24, 0x01	; 1
    15f8:	be 01       	movw	r22, r28
    15fa:	6e 5f       	subi	r22, 0xFE	; 254
    15fc:	7f 4f       	sbci	r23, 0xFF	; 255
    15fe:	8e 0d       	add	r24, r14
    1600:	9f 1d       	adc	r25, r15
    1602:	1d d8       	rcall	.-4038   	; 0x63e <ParseNumber>
    1604:	f8 01       	movw	r30, r16
    1606:	ed 5e       	subi	r30, 0xED	; 237
    1608:	fd 4f       	sbci	r31, 0xFD	; 253
    160a:	71 83       	std	Z+1, r23	; 0x01
    160c:	60 83       	st	Z, r22
    160e:	69 ed       	ldi	r22, 0xD9	; 217
    1610:	72 e0       	ldi	r23, 0x02	; 2
    1612:	c6 01       	movw	r24, r12
    1614:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
    1618:	89 2b       	or	r24, r25
    161a:	09 f0       	breq	.+2      	; 0x161e <ParseReceived+0x98c>
    161c:	0f c2       	rjmp	.+1054   	; 0x1a3c <ParseReceived+0xdaa>
    161e:	f8 01       	movw	r30, r16
    1620:	14 82       	std	Z+4, r1	; 0x04
    1622:	15 82       	std	Z+5, r1	; 0x05
    1624:	16 82       	std	Z+6, r1	; 0x06
    1626:	17 82       	std	Z+7, r1	; 0x07
    1628:	ea c1       	rjmp	.+980    	; 0x19fe <ParseReceived+0xd6c>
    162a:	46 e0       	ldi	r20, 0x06	; 6
    162c:	50 e0       	ldi	r21, 0x00	; 0
    162e:	67 e2       	ldi	r22, 0x27	; 39
    1630:	75 e0       	ldi	r23, 0x05	; 5
    1632:	c6 01       	movw	r24, r12
    1634:	0e 94 50 17 	call	0x2ea0	; 0x2ea0 <strncmp>
    1638:	89 2b       	or	r24, r25
    163a:	09 f0       	breq	.+2      	; 0x163e <ParseReceived+0x9ac>
    163c:	ba c0       	rjmp	.+372    	; 0x17b2 <ParseReceived+0xb20>
    163e:	d6 01       	movw	r26, r12
    1640:	8c 91       	ld	r24, X
    1642:	88 23       	and	r24, r24
    1644:	59 f0       	breq	.+22     	; 0x165c <ParseReceived+0x9ca>
    1646:	8a 33       	cpi	r24, 0x3A	; 58
    1648:	59 f0       	breq	.+22     	; 0x1660 <ParseReceived+0x9ce>
    164a:	11 96       	adiw	r26, 0x01	; 1
    164c:	02 c0       	rjmp	.+4      	; 0x1652 <ParseReceived+0x9c0>
    164e:	8a 33       	cpi	r24, 0x3A	; 58
    1650:	41 f0       	breq	.+16     	; 0x1662 <ParseReceived+0x9d0>
    1652:	fd 01       	movw	r30, r26
    1654:	8d 91       	ld	r24, X+
    1656:	81 11       	cpse	r24, r1
    1658:	fa cf       	rjmp	.-12     	; 0x164e <ParseReceived+0x9bc>
    165a:	03 c0       	rjmp	.+6      	; 0x1662 <ParseReceived+0x9d0>
    165c:	f6 01       	movw	r30, r12
    165e:	01 c0       	rjmp	.+2      	; 0x1662 <ParseReceived+0x9d0>
    1660:	f6 01       	movw	r30, r12
    1662:	30 97       	sbiw	r30, 0x00	; 0
    1664:	09 f4       	brne	.+2      	; 0x1668 <ParseReceived+0x9d6>
    1666:	a5 c0       	rjmp	.+330    	; 0x17b2 <ParseReceived+0xb20>
    1668:	d8 01       	movw	r26, r16
    166a:	a3 53       	subi	r26, 0x33	; 51
    166c:	be 4f       	sbci	r27, 0xFE	; 254
    166e:	1c 92       	st	X, r1
    1670:	81 81       	ldd	r24, Z+1	; 0x01
    1672:	82 32       	cpi	r24, 0x22	; 34
    1674:	29 f0       	breq	.+10     	; 0x1680 <ParseReceived+0x9ee>
    1676:	7f 01       	movw	r14, r30
    1678:	bf ef       	ldi	r27, 0xFF	; 255
    167a:	eb 1a       	sub	r14, r27
    167c:	fb 0a       	sbc	r15, r27
    167e:	04 c0       	rjmp	.+8      	; 0x1688 <ParseReceived+0x9f6>
    1680:	7f 01       	movw	r14, r30
    1682:	22 e0       	ldi	r18, 0x02	; 2
    1684:	e2 0e       	add	r14, r18
    1686:	f1 1c       	adc	r15, r1
    1688:	d7 01       	movw	r26, r14
    168a:	8c 91       	ld	r24, X
    168c:	88 23       	and	r24, r24
    168e:	29 f1       	breq	.+74     	; 0x16da <ParseReceived+0xa48>
    1690:	11 96       	adiw	r26, 0x01	; 1
    1692:	a7 01       	movw	r20, r14
    1694:	4e 5f       	subi	r20, 0xFE	; 254
    1696:	5f 4f       	sbci	r21, 0xFF	; 255
    1698:	90 e0       	ldi	r25, 0x00	; 0
    169a:	10 c0       	rjmp	.+32     	; 0x16bc <ParseReceived+0xa2a>
    169c:	61 e0       	ldi	r22, 0x01	; 1
    169e:	69 0f       	add	r22, r25
    16a0:	7d 01       	movw	r14, r26
    16a2:	98 01       	movw	r18, r16
    16a4:	29 0f       	add	r18, r25
    16a6:	31 1d       	adc	r19, r1
    16a8:	23 53       	subi	r18, 0x33	; 51
    16aa:	3e 4f       	sbci	r19, 0xFE	; 254
    16ac:	f9 01       	movw	r30, r18
    16ae:	80 83       	st	Z, r24
    16b0:	8d 91       	ld	r24, X+
    16b2:	4f 5f       	subi	r20, 0xFF	; 255
    16b4:	5f 4f       	sbci	r21, 0xFF	; 255
    16b6:	88 23       	and	r24, r24
    16b8:	89 f0       	breq	.+34     	; 0x16dc <ParseReceived+0xa4a>
    16ba:	96 2f       	mov	r25, r22
    16bc:	7d 01       	movw	r14, r26
    16be:	f1 e0       	ldi	r31, 0x01	; 1
    16c0:	ef 1a       	sub	r14, r31
    16c2:	f1 08       	sbc	r15, r1
    16c4:	82 32       	cpi	r24, 0x22	; 34
    16c6:	51 f7       	brne	.-44     	; 0x169c <ParseReceived+0xa0a>
    16c8:	2c 91       	ld	r18, X
    16ca:	2c 32       	cpi	r18, 0x2C	; 44
    16cc:	39 f7       	brne	.-50     	; 0x169c <ParseReceived+0xa0a>
    16ce:	fa 01       	movw	r30, r20
    16d0:	20 81       	ld	r18, Z
    16d2:	22 32       	cpi	r18, 0x22	; 34
    16d4:	19 f7       	brne	.-58     	; 0x169c <ParseReceived+0xa0a>
    16d6:	69 2f       	mov	r22, r25
    16d8:	01 c0       	rjmp	.+2      	; 0x16dc <ParseReceived+0xa4a>
    16da:	60 e0       	ldi	r22, 0x00	; 0
    16dc:	d8 01       	movw	r26, r16
    16de:	a6 0f       	add	r26, r22
    16e0:	b1 1d       	adc	r27, r1
    16e2:	a3 53       	subi	r26, 0x33	; 51
    16e4:	be 4f       	sbci	r27, 0xFE	; 254
    16e6:	1c 92       	st	X, r1
    16e8:	97 01       	movw	r18, r14
    16ea:	2d 5f       	subi	r18, 0xFD	; 253
    16ec:	3f 4f       	sbci	r19, 0xFF	; 255
    16ee:	d7 01       	movw	r26, r14
    16f0:	13 96       	adiw	r26, 0x03	; 3
    16f2:	8c 91       	ld	r24, X
    16f4:	88 23       	and	r24, r24
    16f6:	d9 f0       	breq	.+54     	; 0x172e <ParseReceived+0xa9c>
    16f8:	f7 01       	movw	r30, r14
    16fa:	34 96       	adiw	r30, 0x04	; 4
    16fc:	90 e0       	ldi	r25, 0x00	; 0
    16fe:	0d c0       	rjmp	.+26     	; 0x171a <ParseReceived+0xa88>
    1700:	41 e0       	ldi	r20, 0x01	; 1
    1702:	49 0f       	add	r20, r25
    1704:	9f 01       	movw	r18, r30
    1706:	d8 01       	movw	r26, r16
    1708:	a9 0f       	add	r26, r25
    170a:	b1 1d       	adc	r27, r1
    170c:	af 51       	subi	r26, 0x1F	; 31
    170e:	be 4f       	sbci	r27, 0xFE	; 254
    1710:	8c 93       	st	X, r24
    1712:	81 91       	ld	r24, Z+
    1714:	88 23       	and	r24, r24
    1716:	61 f0       	breq	.+24     	; 0x1730 <ParseReceived+0xa9e>
    1718:	94 2f       	mov	r25, r20
    171a:	9f 01       	movw	r18, r30
    171c:	21 50       	subi	r18, 0x01	; 1
    171e:	31 09       	sbc	r19, r1
    1720:	82 32       	cpi	r24, 0x22	; 34
    1722:	71 f7       	brne	.-36     	; 0x1700 <ParseReceived+0xa6e>
    1724:	40 81       	ld	r20, Z
    1726:	4c 32       	cpi	r20, 0x2C	; 44
    1728:	59 f7       	brne	.-42     	; 0x1700 <ParseReceived+0xa6e>
    172a:	49 2f       	mov	r20, r25
    172c:	01 c0       	rjmp	.+2      	; 0x1730 <ParseReceived+0xa9e>
    172e:	40 e0       	ldi	r20, 0x00	; 0
    1730:	f8 01       	movw	r30, r16
    1732:	e4 0f       	add	r30, r20
    1734:	f1 1d       	adc	r31, r1
    1736:	ef 51       	subi	r30, 0x1F	; 31
    1738:	fe 4f       	sbci	r31, 0xFE	; 254
    173a:	10 82       	st	Z, r1
    173c:	79 01       	movw	r14, r18
    173e:	b2 e0       	ldi	r27, 0x02	; 2
    1740:	eb 0e       	add	r14, r27
    1742:	f1 1c       	adc	r15, r1
    1744:	be 01       	movw	r22, r28
    1746:	6e 5f       	subi	r22, 0xFE	; 254
    1748:	7f 4f       	sbci	r23, 0xFF	; 255
    174a:	c7 01       	movw	r24, r14
    174c:	0e 94 1f 03 	call	0x63e	; 0x63e <ParseNumber>
    1750:	f8 01       	movw	r30, r16
    1752:	ee 50       	subi	r30, 0x0E	; 14
    1754:	fe 4f       	sbci	r31, 0xFE	; 254
    1756:	60 83       	st	Z, r22
    1758:	2a 81       	ldd	r18, Y+2	; 0x02
    175a:	30 e0       	ldi	r19, 0x00	; 0
    175c:	2f 5f       	subi	r18, 0xFF	; 255
    175e:	3f 4f       	sbci	r19, 0xFF	; 255
    1760:	e2 0e       	add	r14, r18
    1762:	f3 1e       	adc	r15, r19
    1764:	be 01       	movw	r22, r28
    1766:	6e 5f       	subi	r22, 0xFE	; 254
    1768:	7f 4f       	sbci	r23, 0xFF	; 255
    176a:	c7 01       	movw	r24, r14
    176c:	0e 94 1f 03 	call	0x63e	; 0x63e <ParseNumber>
    1770:	f8 01       	movw	r30, r16
    1772:	ef 50       	subi	r30, 0x0F	; 15
    1774:	fe 4f       	sbci	r31, 0xFE	; 254
    1776:	60 83       	st	Z, r22
    1778:	8a 81       	ldd	r24, Y+2	; 0x02
    177a:	90 e0       	ldi	r25, 0x00	; 0
    177c:	01 96       	adiw	r24, 0x01	; 1
    177e:	e8 0e       	add	r14, r24
    1780:	f9 1e       	adc	r15, r25
    1782:	be 01       	movw	r22, r28
    1784:	6e 5f       	subi	r22, 0xFE	; 254
    1786:	7f 4f       	sbci	r23, 0xFF	; 255
    1788:	c7 01       	movw	r24, r14
    178a:	0e 94 1f 03 	call	0x63e	; 0x63e <ParseNumber>
    178e:	f8 01       	movw	r30, r16
    1790:	ed 50       	subi	r30, 0x0D	; 13
    1792:	fe 4f       	sbci	r31, 0xFE	; 254
    1794:	60 83       	st	Z, r22
    1796:	8a 81       	ldd	r24, Y+2	; 0x02
    1798:	90 e0       	ldi	r25, 0x00	; 0
    179a:	01 96       	adiw	r24, 0x01	; 1
    179c:	be 01       	movw	r22, r28
    179e:	6e 5f       	subi	r22, 0xFE	; 254
    17a0:	7f 4f       	sbci	r23, 0xFF	; 255
    17a2:	8e 0d       	add	r24, r14
    17a4:	9f 1d       	adc	r25, r15
    17a6:	0e 94 1f 03 	call	0x63e	; 0x63e <ParseNumber>
    17aa:	f8 01       	movw	r30, r16
    17ac:	ec 50       	subi	r30, 0x0C	; 12
    17ae:	fe 4f       	sbci	r31, 0xFE	; 254
    17b0:	60 83       	st	Z, r22
    17b2:	69 ed       	ldi	r22, 0xD9	; 217
    17b4:	72 e0       	ldi	r23, 0x02	; 2
    17b6:	c6 01       	movw	r24, r12
    17b8:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
    17bc:	89 2b       	or	r24, r25
    17be:	09 f0       	breq	.+2      	; 0x17c2 <ParseReceived+0xb30>
    17c0:	3d c1       	rjmp	.+634    	; 0x1a3c <ParseReceived+0xdaa>
    17c2:	f8 01       	movw	r30, r16
    17c4:	14 82       	std	Z+4, r1	; 0x04
    17c6:	15 82       	std	Z+5, r1	; 0x05
    17c8:	16 82       	std	Z+6, r1	; 0x06
    17ca:	17 82       	std	Z+7, r1	; 0x07
    17cc:	18 c1       	rjmp	.+560    	; 0x19fe <ParseReceived+0xd6c>
    17ce:	47 e0       	ldi	r20, 0x07	; 7
    17d0:	50 e0       	ldi	r21, 0x00	; 0
    17d2:	6f e9       	ldi	r22, 0x9F	; 159
    17d4:	73 e0       	ldi	r23, 0x03	; 3
    17d6:	c6 01       	movw	r24, r12
    17d8:	0e 94 50 17 	call	0x2ea0	; 0x2ea0 <strncmp>
    17dc:	89 2b       	or	r24, r25
    17de:	19 f4       	brne	.+6      	; 0x17e6 <ParseReceived+0xb54>
    17e0:	b6 01       	movw	r22, r12
    17e2:	c8 01       	movw	r24, r16
    17e4:	15 d8       	rcall	.-4054   	; 0x810 <ParseCIPSTA>
    17e6:	69 ed       	ldi	r22, 0xD9	; 217
    17e8:	72 e0       	ldi	r23, 0x02	; 2
    17ea:	c6 01       	movw	r24, r12
    17ec:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
    17f0:	89 2b       	or	r24, r25
    17f2:	09 f0       	breq	.+2      	; 0x17f6 <ParseReceived+0xb64>
    17f4:	23 c1       	rjmp	.+582    	; 0x1a3c <ParseReceived+0xdaa>
    17f6:	d8 01       	movw	r26, r16
    17f8:	14 96       	adiw	r26, 0x04	; 4
    17fa:	1d 92       	st	X+, r1
    17fc:	1d 92       	st	X+, r1
    17fe:	1d 92       	st	X+, r1
    1800:	1c 92       	st	X, r1
    1802:	17 97       	sbiw	r26, 0x07	; 7
    1804:	c8 01       	movw	r24, r16
    1806:	0e 94 ce 14 	call	0x299c	; 0x299c <ESP8266_Callback_WifiIPSet>
    180a:	f9 c0       	rjmp	.+498    	; 0x19fe <ParseReceived+0xd6c>
    180c:	46 e0       	ldi	r20, 0x06	; 6
    180e:	50 e0       	ldi	r21, 0x00	; 0
    1810:	67 ea       	ldi	r22, 0xA7	; 167
    1812:	73 e0       	ldi	r23, 0x03	; 3
    1814:	c6 01       	movw	r24, r12
    1816:	0e 94 50 17 	call	0x2ea0	; 0x2ea0 <strncmp>
    181a:	89 2b       	or	r24, r25
    181c:	21 f4       	brne	.+8      	; 0x1826 <ParseReceived+0xb94>
    181e:	b6 01       	movw	r22, r12
    1820:	c8 01       	movw	r24, r16
    1822:	0e 94 08 04 	call	0x810	; 0x810 <ParseCIPSTA>
    1826:	69 ed       	ldi	r22, 0xD9	; 217
    1828:	72 e0       	ldi	r23, 0x02	; 2
    182a:	c6 01       	movw	r24, r12
    182c:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
    1830:	89 2b       	or	r24, r25
    1832:	09 f0       	breq	.+2      	; 0x1836 <ParseReceived+0xba4>
    1834:	03 c1       	rjmp	.+518    	; 0x1a3c <ParseReceived+0xdaa>
    1836:	f8 01       	movw	r30, r16
    1838:	14 82       	std	Z+4, r1	; 0x04
    183a:	15 82       	std	Z+5, r1	; 0x05
    183c:	16 82       	std	Z+6, r1	; 0x06
    183e:	17 82       	std	Z+7, r1	; 0x07
    1840:	de c0       	rjmp	.+444    	; 0x19fe <ParseReceived+0xd6c>
    1842:	69 ed       	ldi	r22, 0xD9	; 217
    1844:	72 e0       	ldi	r23, 0x02	; 2
    1846:	c6 01       	movw	r24, r12
    1848:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
    184c:	89 2b       	or	r24, r25
    184e:	09 f0       	breq	.+2      	; 0x1852 <ParseReceived+0xbc0>
    1850:	f5 c0       	rjmp	.+490    	; 0x1a3c <ParseReceived+0xdaa>
    1852:	d8 01       	movw	r26, r16
    1854:	14 96       	adiw	r26, 0x04	; 4
    1856:	1d 92       	st	X+, r1
    1858:	1d 92       	st	X+, r1
    185a:	1d 92       	st	X+, r1
    185c:	1c 92       	st	X, r1
    185e:	17 97       	sbiw	r26, 0x07	; 7
    1860:	f8 01       	movw	r30, r16
    1862:	e5 53       	subi	r30, 0x35	; 53
    1864:	fe 4f       	sbci	r31, 0xFE	; 254
    1866:	80 81       	ld	r24, Z
    1868:	31 96       	adiw	r30, 0x01	; 1
    186a:	80 83       	st	Z, r24
    186c:	c8 c0       	rjmp	.+400    	; 0x19fe <ParseReceived+0xd6c>
    186e:	69 ed       	ldi	r22, 0xD9	; 217
    1870:	72 e0       	ldi	r23, 0x02	; 2
    1872:	c6 01       	movw	r24, r12
    1874:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
    1878:	89 2b       	or	r24, r25
    187a:	09 f0       	breq	.+2      	; 0x187e <ParseReceived+0xbec>
    187c:	df c0       	rjmp	.+446    	; 0x1a3c <ParseReceived+0xdaa>
    187e:	f8 01       	movw	r30, r16
    1880:	14 82       	std	Z+4, r1	; 0x04
    1882:	15 82       	std	Z+5, r1	; 0x05
    1884:	16 82       	std	Z+6, r1	; 0x06
    1886:	17 82       	std	Z+7, r1	; 0x07
    1888:	ba c0       	rjmp	.+372    	; 0x19fe <ParseReceived+0xd6c>
    188a:	69 ed       	ldi	r22, 0xD9	; 217
    188c:	72 e0       	ldi	r23, 0x02	; 2
    188e:	c6 01       	movw	r24, r12
    1890:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
    1894:	89 2b       	or	r24, r25
    1896:	09 f0       	breq	.+2      	; 0x189a <ParseReceived+0xc08>
    1898:	d1 c0       	rjmp	.+418    	; 0x1a3c <ParseReceived+0xdaa>
    189a:	8d e1       	ldi	r24, 0x1D	; 29
    189c:	90 e0       	ldi	r25, 0x00	; 0
    189e:	a0 e0       	ldi	r26, 0x00	; 0
    18a0:	b0 e0       	ldi	r27, 0x00	; 0
    18a2:	f8 01       	movw	r30, r16
    18a4:	84 83       	std	Z+4, r24	; 0x04
    18a6:	95 83       	std	Z+5, r25	; 0x05
    18a8:	a6 83       	std	Z+6, r26	; 0x06
    18aa:	b7 83       	std	Z+7, r27	; 0x07
    18ac:	ef 5d       	subi	r30, 0xDF	; 223
    18ae:	fd 4f       	sbci	r31, 0xFD	; 253
    18b0:	81 81       	ldd	r24, Z+1	; 0x01
    18b2:	81 60       	ori	r24, 0x01	; 1
    18b4:	81 83       	std	Z+1, r24	; 0x01
    18b6:	88 e0       	ldi	r24, 0x08	; 8
    18b8:	ee ea       	ldi	r30, 0xAE	; 174
    18ba:	f3 e0       	ldi	r31, 0x03	; 3
    18bc:	d8 01       	movw	r26, r16
    18be:	18 96       	adiw	r26, 0x08	; 8
    18c0:	01 90       	ld	r0, Z+
    18c2:	0d 92       	st	X+, r0
    18c4:	8a 95       	dec	r24
    18c6:	e1 f7       	brne	.-8      	; 0x18c0 <ParseReceived+0xc2e>
    18c8:	9a c0       	rjmp	.+308    	; 0x19fe <ParseReceived+0xd6c>
    18ca:	69 ed       	ldi	r22, 0xD9	; 217
    18cc:	72 e0       	ldi	r23, 0x02	; 2
    18ce:	c6 01       	movw	r24, r12
    18d0:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
    18d4:	89 2b       	or	r24, r25
    18d6:	09 f0       	breq	.+2      	; 0x18da <ParseReceived+0xc48>
    18d8:	0c c1       	rjmp	.+536    	; 0x1af2 <ParseReceived+0xe60>
    18da:	d8 01       	movw	r26, r16
    18dc:	14 96       	adiw	r26, 0x04	; 4
    18de:	1d 92       	st	X+, r1
    18e0:	1d 92       	st	X+, r1
    18e2:	1d 92       	st	X+, r1
    18e4:	1c 92       	st	X, r1
    18e6:	17 97       	sbiw	r26, 0x07	; 7
    18e8:	6e ed       	ldi	r22, 0xDE	; 222
    18ea:	72 e0       	ldi	r23, 0x02	; 2
    18ec:	c6 01       	movw	r24, r12
    18ee:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
    18f2:	89 2b       	or	r24, r25
    18f4:	09 f0       	breq	.+2      	; 0x18f8 <ParseReceived+0xc66>
    18f6:	ea c0       	rjmp	.+468    	; 0x1acc <ParseReceived+0xe3a>
    18f8:	f8 01       	movw	r30, r16
    18fa:	14 82       	std	Z+4, r1	; 0x04
    18fc:	15 82       	std	Z+5, r1	; 0x05
    18fe:	16 82       	std	Z+6, r1	; 0x06
    1900:	17 82       	std	Z+7, r1	; 0x07
    1902:	ea 5e       	subi	r30, 0xEA	; 234
    1904:	fd 4f       	sbci	r31, 0xFD	; 253
    1906:	80 81       	ld	r24, Z
    1908:	f3 e4       	ldi	r31, 0x43	; 67
    190a:	8f 02       	muls	r24, r31
    190c:	c0 01       	movw	r24, r0
    190e:	11 24       	eor	r1, r1
    1910:	98 01       	movw	r18, r16
    1912:	28 0f       	add	r18, r24
    1914:	39 1f       	adc	r19, r25
    1916:	f9 01       	movw	r30, r18
    1918:	e8 5a       	subi	r30, 0xA8	; 168
    191a:	ff 4f       	sbci	r31, 0xFF	; 255
    191c:	10 82       	st	Z, r1
    191e:	32 96       	adiw	r30, 0x02	; 2
    1920:	10 82       	st	Z, r1
    1922:	ff 96       	adiw	r30, 0x3f	; 63
    1924:	10 82       	st	Z, r1
    1926:	31 97       	sbiw	r30, 0x01	; 1
    1928:	10 82       	st	Z, r1
    192a:	bc 01       	movw	r22, r24
    192c:	68 5a       	subi	r22, 0xA8	; 168
    192e:	7f 4f       	sbci	r23, 0xFF	; 255
    1930:	60 0f       	add	r22, r16
    1932:	71 1f       	adc	r23, r17
    1934:	c8 01       	movw	r24, r16
    1936:	0e 94 0e 15 	call	0x2a1c	; 0x2a1c <ESP8266_Callback_ClientConnectionError>
    193a:	61 c0       	rjmp	.+194    	; 0x19fe <ParseReceived+0xd6c>
    193c:	69 ed       	ldi	r22, 0xD9	; 217
    193e:	72 e0       	ldi	r23, 0x02	; 2
    1940:	c6 01       	movw	r24, r12
    1942:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
    1946:	89 2b       	or	r24, r25
    1948:	09 f0       	breq	.+2      	; 0x194c <ParseReceived+0xcba>
    194a:	78 c0       	rjmp	.+240    	; 0x1a3c <ParseReceived+0xdaa>
    194c:	d8 01       	movw	r26, r16
    194e:	14 96       	adiw	r26, 0x04	; 4
    1950:	1d 92       	st	X+, r1
    1952:	1d 92       	st	X+, r1
    1954:	1d 92       	st	X+, r1
    1956:	1c 92       	st	X, r1
    1958:	17 97       	sbiw	r26, 0x07	; 7
    195a:	51 c0       	rjmp	.+162    	; 0x19fe <ParseReceived+0xd6c>
    195c:	66 ee       	ldi	r22, 0xE6	; 230
    195e:	72 e0       	ldi	r23, 0x02	; 2
    1960:	c6 01       	movw	r24, r12
    1962:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
    1966:	89 2b       	or	r24, r25
    1968:	09 f0       	breq	.+2      	; 0x196c <ParseReceived+0xcda>
    196a:	49 c0       	rjmp	.+146    	; 0x19fe <ParseReceived+0xd6c>
    196c:	f8 01       	movw	r30, r16
    196e:	14 82       	std	Z+4, r1	; 0x04
    1970:	15 82       	std	Z+5, r1	; 0x05
    1972:	16 82       	std	Z+6, r1	; 0x06
    1974:	17 82       	std	Z+7, r1	; 0x07
    1976:	ef 5d       	subi	r30, 0xDF	; 223
    1978:	fd 4f       	sbci	r31, 0xFD	; 253
    197a:	81 81       	ldd	r24, Z+1	; 0x01
    197c:	82 60       	ori	r24, 0x02	; 2
    197e:	81 83       	std	Z+1, r24	; 0x01
    1980:	3e c0       	rjmp	.+124    	; 0x19fe <ParseReceived+0xd6c>
    1982:	4a e0       	ldi	r20, 0x0A	; 10
    1984:	50 e0       	ldi	r21, 0x00	; 0
    1986:	66 eb       	ldi	r22, 0xB6	; 182
    1988:	73 e0       	ldi	r23, 0x03	; 3
    198a:	c6 01       	movw	r24, r12
    198c:	0e 94 50 17 	call	0x2ea0	; 0x2ea0 <strncmp>
    1990:	89 2b       	or	r24, r25
    1992:	41 f4       	brne	.+16     	; 0x19a4 <ParseReceived+0xd12>
    1994:	40 e0       	ldi	r20, 0x00	; 0
    1996:	50 e0       	ldi	r21, 0x00	; 0
    1998:	b8 01       	movw	r22, r16
    199a:	6d 54       	subi	r22, 0x4D	; 77
    199c:	7e 4f       	sbci	r23, 0xFE	; 254
    199e:	c6 01       	movw	r24, r12
    19a0:	0c 96       	adiw	r24, 0x0c	; 12
    19a2:	2b d8       	rcall	.-4010   	; 0x9fa <ParseMAC>
    19a4:	69 ed       	ldi	r22, 0xD9	; 217
    19a6:	72 e0       	ldi	r23, 0x02	; 2
    19a8:	c6 01       	movw	r24, r12
    19aa:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
    19ae:	89 2b       	or	r24, r25
    19b0:	09 f0       	breq	.+2      	; 0x19b4 <ParseReceived+0xd22>
    19b2:	44 c0       	rjmp	.+136    	; 0x1a3c <ParseReceived+0xdaa>
    19b4:	d8 01       	movw	r26, r16
    19b6:	14 96       	adiw	r26, 0x04	; 4
    19b8:	1d 92       	st	X+, r1
    19ba:	1d 92       	st	X+, r1
    19bc:	1d 92       	st	X+, r1
    19be:	1c 92       	st	X, r1
    19c0:	17 97       	sbiw	r26, 0x07	; 7
    19c2:	1d c0       	rjmp	.+58     	; 0x19fe <ParseReceived+0xd6c>
    19c4:	49 e0       	ldi	r20, 0x09	; 9
    19c6:	50 e0       	ldi	r21, 0x00	; 0
    19c8:	61 ec       	ldi	r22, 0xC1	; 193
    19ca:	73 e0       	ldi	r23, 0x03	; 3
    19cc:	c6 01       	movw	r24, r12
    19ce:	0e 94 50 17 	call	0x2ea0	; 0x2ea0 <strncmp>
    19d2:	89 2b       	or	r24, r25
    19d4:	41 f4       	brne	.+16     	; 0x19e6 <ParseReceived+0xd54>
    19d6:	40 e0       	ldi	r20, 0x00	; 0
    19d8:	50 e0       	ldi	r21, 0x00	; 0
    19da:	b8 01       	movw	r22, r16
    19dc:	6b 53       	subi	r22, 0x3B	; 59
    19de:	7e 4f       	sbci	r23, 0xFE	; 254
    19e0:	c6 01       	movw	r24, r12
    19e2:	0b 96       	adiw	r24, 0x0b	; 11
    19e4:	0a d8       	rcall	.-4076   	; 0x9fa <ParseMAC>
    19e6:	69 ed       	ldi	r22, 0xD9	; 217
    19e8:	72 e0       	ldi	r23, 0x02	; 2
    19ea:	c6 01       	movw	r24, r12
    19ec:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
    19f0:	89 2b       	or	r24, r25
    19f2:	21 f5       	brne	.+72     	; 0x1a3c <ParseReceived+0xdaa>
    19f4:	f8 01       	movw	r30, r16
    19f6:	14 82       	std	Z+4, r1	; 0x04
    19f8:	15 82       	std	Z+5, r1	; 0x05
    19fa:	16 82       	std	Z+6, r1	; 0x06
    19fc:	17 82       	std	Z+7, r1	; 0x07
    19fe:	69 ed       	ldi	r22, 0xD9	; 217
    1a00:	72 e0       	ldi	r23, 0x02	; 2
    1a02:	c6 01       	movw	r24, r12
    1a04:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
    1a08:	89 2b       	or	r24, r25
    1a0a:	c1 f4       	brne	.+48     	; 0x1a3c <ParseReceived+0xdaa>
    1a0c:	f8 01       	movw	r30, r16
    1a0e:	ef 5d       	subi	r30, 0xDF	; 223
    1a10:	fd 4f       	sbci	r31, 0xFD	; 253
    1a12:	81 81       	ldd	r24, Z+1	; 0x01
    1a14:	82 60       	ori	r24, 0x02	; 2
    1a16:	81 83       	std	Z+1, r24	; 0x01
    1a18:	f8 01       	movw	r30, r16
    1a1a:	84 81       	ldd	r24, Z+4	; 0x04
    1a1c:	95 81       	ldd	r25, Z+5	; 0x05
    1a1e:	a6 81       	ldd	r26, Z+6	; 0x06
    1a20:	b7 81       	ldd	r27, Z+7	; 0x07
    1a22:	88 30       	cpi	r24, 0x08	; 8
    1a24:	91 05       	cpc	r25, r1
    1a26:	a1 05       	cpc	r26, r1
    1a28:	b1 05       	cpc	r27, r1
    1a2a:	41 f0       	breq	.+16     	; 0x1a3c <ParseReceived+0xdaa>
    1a2c:	4d 97       	sbiw	r24, 0x1d	; 29
    1a2e:	a1 05       	cpc	r26, r1
    1a30:	b1 05       	cpc	r27, r1
    1a32:	21 f0       	breq	.+8      	; 0x1a3c <ParseReceived+0xdaa>
    1a34:	14 82       	std	Z+4, r1	; 0x04
    1a36:	15 82       	std	Z+5, r1	; 0x05
    1a38:	16 82       	std	Z+6, r1	; 0x06
    1a3a:	17 82       	std	Z+7, r1	; 0x07
    1a3c:	6e ed       	ldi	r22, 0xDE	; 222
    1a3e:	72 e0       	ldi	r23, 0x02	; 2
    1a40:	c6 01       	movw	r24, r12
    1a42:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
    1a46:	89 2b       	or	r24, r25
    1a48:	39 f0       	breq	.+14     	; 0x1a58 <ParseReceived+0xdc6>
    1a4a:	6e ee       	ldi	r22, 0xEE	; 238
    1a4c:	72 e0       	ldi	r23, 0x02	; 2
    1a4e:	c6 01       	movw	r24, r12
    1a50:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
    1a54:	89 2b       	or	r24, r25
    1a56:	59 f4       	brne	.+22     	; 0x1a6e <ParseReceived+0xddc>
    1a58:	f8 01       	movw	r30, r16
    1a5a:	ef 5d       	subi	r30, 0xDF	; 223
    1a5c:	fd 4f       	sbci	r31, 0xFD	; 253
    1a5e:	81 81       	ldd	r24, Z+1	; 0x01
    1a60:	8d 7f       	andi	r24, 0xFD	; 253
    1a62:	81 83       	std	Z+1, r24	; 0x01
    1a64:	f8 01       	movw	r30, r16
    1a66:	14 82       	std	Z+4, r1	; 0x04
    1a68:	15 82       	std	Z+5, r1	; 0x05
    1a6a:	16 82       	std	Z+6, r1	; 0x06
    1a6c:	17 82       	std	Z+7, r1	; 0x07
    1a6e:	64 ed       	ldi	r22, 0xD4	; 212
    1a70:	72 e0       	ldi	r23, 0x02	; 2
    1a72:	c6 01       	movw	r24, r12
    1a74:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
    1a78:	89 2b       	or	r24, r25
    1a7a:	09 f0       	breq	.+2      	; 0x1a7e <ParseReceived+0xdec>
    1a7c:	43 c0       	rjmp	.+134    	; 0x1b04 <ParseReceived+0xe72>
    1a7e:	d8 01       	movw	r26, r16
    1a80:	14 96       	adiw	r26, 0x04	; 4
    1a82:	1d 92       	st	X+, r1
    1a84:	1d 92       	st	X+, r1
    1a86:	1d 92       	st	X+, r1
    1a88:	1c 92       	st	X, r1
    1a8a:	17 97       	sbiw	r26, 0x07	; 7
    1a8c:	f8 01       	movw	r30, r16
    1a8e:	ef 5d       	subi	r30, 0xDF	; 223
    1a90:	fd 4f       	sbci	r31, 0xFD	; 253
    1a92:	81 81       	ldd	r24, Z+1	; 0x01
    1a94:	8e 7f       	andi	r24, 0xFE	; 254
    1a96:	81 83       	std	Z+1, r24	; 0x01
    1a98:	35 c0       	rjmp	.+106    	; 0x1b04 <ParseReceived+0xe72>
    1a9a:	6c e7       	ldi	r22, 0x7C	; 124
    1a9c:	73 e0       	ldi	r23, 0x03	; 3
    1a9e:	c6 01       	movw	r24, r12
    1aa0:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
    1aa4:	89 2b       	or	r24, r25
    1aa6:	51 f6       	brne	.-108    	; 0x1a3c <ParseReceived+0xdaa>
    1aa8:	37 cd       	rjmp	.-1426   	; 0x1518 <ParseReceived+0x886>
    1aaa:	d6 01       	movw	r26, r12
    1aac:	ad 01       	movw	r20, r26
    1aae:	4f 5f       	subi	r20, 0xFF	; 255
    1ab0:	5f 4f       	sbci	r21, 0xFF	; 255
    1ab2:	11 96       	adiw	r26, 0x01	; 1
    1ab4:	8c 91       	ld	r24, X
    1ab6:	11 97       	sbiw	r26, 0x01	; 1
    1ab8:	88 23       	and	r24, r24
    1aba:	09 f4       	brne	.+2      	; 0x1abe <ParseReceived+0xe2c>
    1abc:	78 cd       	rjmp	.-1296   	; 0x15ae <ParseReceived+0x91c>
    1abe:	fd 01       	movw	r30, r26
    1ac0:	32 96       	adiw	r30, 0x02	; 2
    1ac2:	9d 01       	movw	r18, r26
    1ac4:	2d 5f       	subi	r18, 0xFD	; 253
    1ac6:	3f 4f       	sbci	r19, 0xFF	; 255
    1ac8:	90 e0       	ldi	r25, 0x00	; 0
    1aca:	63 cd       	rjmp	.-1338   	; 0x1592 <ParseReceived+0x900>
    1acc:	69 ed       	ldi	r22, 0xD9	; 217
    1ace:	72 e0       	ldi	r23, 0x02	; 2
    1ad0:	c6 01       	movw	r24, r12
    1ad2:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
    1ad6:	89 2b       	or	r24, r25
    1ad8:	09 f4       	brne	.+2      	; 0x1adc <ParseReceived+0xe4a>
    1ada:	98 cf       	rjmp	.-208    	; 0x1a0c <ParseReceived+0xd7a>
    1adc:	b6 cf       	rjmp	.-148    	; 0x1a4a <ParseReceived+0xdb8>
    1ade:	34 01       	movw	r6, r8
    1ae0:	ba e0       	ldi	r27, 0x0A	; 10
    1ae2:	6b 1a       	sub	r6, r27
    1ae4:	71 08       	sbc	r7, r1
    1ae6:	eb e0       	ldi	r30, 0x0B	; 11
    1ae8:	8e 16       	cp	r8, r30
    1aea:	91 04       	cpc	r9, r1
    1aec:	08 f0       	brcs	.+2      	; 0x1af0 <ParseReceived+0xe5e>
    1aee:	f1 c9       	rjmp	.-3102   	; 0xed2 <ParseReceived+0x240>
    1af0:	40 ca       	rjmp	.-2944   	; 0xf72 <ParseReceived+0x2e0>
    1af2:	6e ed       	ldi	r22, 0xDE	; 222
    1af4:	72 e0       	ldi	r23, 0x02	; 2
    1af6:	c6 01       	movw	r24, r12
    1af8:	0e 94 40 17 	call	0x2e80	; 0x2e80 <strcmp>
    1afc:	89 2b       	or	r24, r25
    1afe:	09 f0       	breq	.+2      	; 0x1b02 <ParseReceived+0xe70>
    1b00:	a4 cf       	rjmp	.-184    	; 0x1a4a <ParseReceived+0xdb8>
    1b02:	fa ce       	rjmp	.-524    	; 0x18f8 <ParseReceived+0xc66>
    1b04:	0f 90       	pop	r0
    1b06:	0f 90       	pop	r0
    1b08:	df 91       	pop	r29
    1b0a:	cf 91       	pop	r28
    1b0c:	1f 91       	pop	r17
    1b0e:	0f 91       	pop	r16
    1b10:	ff 90       	pop	r15
    1b12:	ef 90       	pop	r14
    1b14:	df 90       	pop	r13
    1b16:	cf 90       	pop	r12
    1b18:	bf 90       	pop	r11
    1b1a:	af 90       	pop	r10
    1b1c:	9f 90       	pop	r9
    1b1e:	8f 90       	pop	r8
    1b20:	7f 90       	pop	r7
    1b22:	6f 90       	pop	r6
    1b24:	5f 90       	pop	r5
    1b26:	4f 90       	pop	r4
    1b28:	3f 90       	pop	r3
    1b2a:	2f 90       	pop	r2
    1b2c:	08 95       	ret

00001b2e <ESP8266_Update>:
    1b2e:	2f 92       	push	r2
    1b30:	3f 92       	push	r3
    1b32:	4f 92       	push	r4
    1b34:	5f 92       	push	r5
    1b36:	7f 92       	push	r7
    1b38:	8f 92       	push	r8
    1b3a:	9f 92       	push	r9
    1b3c:	af 92       	push	r10
    1b3e:	bf 92       	push	r11
    1b40:	cf 92       	push	r12
    1b42:	df 92       	push	r13
    1b44:	ef 92       	push	r14
    1b46:	ff 92       	push	r15
    1b48:	0f 93       	push	r16
    1b4a:	1f 93       	push	r17
    1b4c:	cf 93       	push	r28
    1b4e:	df 93       	push	r29
    1b50:	cd b7       	in	r28, 0x3d	; 61
    1b52:	de b7       	in	r29, 0x3e	; 62
    1b54:	c3 58       	subi	r28, 0x83	; 131
    1b56:	d1 09       	sbc	r29, r1
    1b58:	0f b6       	in	r0, 0x3f	; 63
    1b5a:	f8 94       	cli
    1b5c:	de bf       	out	0x3e, r29	; 62
    1b5e:	0f be       	out	0x3f, r0	; 63
    1b60:	cd bf       	out	0x3d, r28	; 61
    1b62:	8c 01       	movw	r16, r24
    1b64:	fc 01       	movw	r30, r24
    1b66:	ec 5a       	subi	r30, 0xAC	; 172
    1b68:	ff 4f       	sbci	r31, 0xFF	; 255
    1b6a:	80 81       	ld	r24, Z
    1b6c:	91 81       	ldd	r25, Z+1	; 0x01
    1b6e:	a2 81       	ldd	r26, Z+2	; 0x02
    1b70:	b3 81       	ldd	r27, Z+3	; 0x03
    1b72:	89 2b       	or	r24, r25
    1b74:	8a 2b       	or	r24, r26
    1b76:	8b 2b       	or	r24, r27
    1b78:	41 f4       	brne	.+16     	; 0x1b8a <ESP8266_Update+0x5c>
    1b7a:	80 e3       	ldi	r24, 0x30	; 48
    1b7c:	95 e7       	ldi	r25, 0x75	; 117
    1b7e:	a0 e0       	ldi	r26, 0x00	; 0
    1b80:	b0 e0       	ldi	r27, 0x00	; 0
    1b82:	80 83       	st	Z, r24
    1b84:	91 83       	std	Z+1, r25	; 0x01
    1b86:	a2 83       	std	Z+2, r26	; 0x02
    1b88:	b3 83       	std	Z+3, r27	; 0x03
    1b8a:	f8 01       	movw	r30, r16
    1b8c:	e4 5b       	subi	r30, 0xB4	; 180
    1b8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b90:	80 81       	ld	r24, Z
    1b92:	91 81       	ldd	r25, Z+1	; 0x01
    1b94:	a2 81       	ldd	r26, Z+2	; 0x02
    1b96:	b3 81       	ldd	r27, Z+3	; 0x03
    1b98:	34 97       	sbiw	r30, 0x04	; 4
    1b9a:	40 81       	ld	r20, Z
    1b9c:	51 81       	ldd	r21, Z+1	; 0x01
    1b9e:	62 81       	ldd	r22, Z+2	; 0x02
    1ba0:	73 81       	ldd	r23, Z+3	; 0x03
    1ba2:	84 1b       	sub	r24, r20
    1ba4:	95 0b       	sbc	r25, r21
    1ba6:	a6 0b       	sbc	r26, r22
    1ba8:	b7 0b       	sbc	r27, r23
    1baa:	3c 96       	adiw	r30, 0x0c	; 12
    1bac:	40 81       	ld	r20, Z
    1bae:	51 81       	ldd	r21, Z+1	; 0x01
    1bb0:	62 81       	ldd	r22, Z+2	; 0x02
    1bb2:	73 81       	ldd	r23, Z+3	; 0x03
    1bb4:	48 17       	cp	r20, r24
    1bb6:	59 07       	cpc	r21, r25
    1bb8:	6a 07       	cpc	r22, r26
    1bba:	7b 07       	cpc	r23, r27
    1bbc:	30 f5       	brcc	.+76     	; 0x1c0a <ESP8266_Update+0xdc>
    1bbe:	d8 01       	movw	r26, r16
    1bc0:	14 96       	adiw	r26, 0x04	; 4
    1bc2:	8c 91       	ld	r24, X
    1bc4:	f8 01       	movw	r30, r16
    1bc6:	14 82       	std	Z+4, r1	; 0x04
    1bc8:	15 82       	std	Z+5, r1	; 0x05
    1bca:	16 82       	std	Z+6, r1	; 0x06
    1bcc:	17 82       	std	Z+7, r1	; 0x07
    1bce:	8a 30       	cpi	r24, 0x0A	; 10
    1bd0:	09 f0       	breq	.+2      	; 0x1bd4 <ESP8266_Update+0xa6>
    1bd2:	65 c2       	rjmp	.+1226   	; 0x209e <ESP8266_Update+0x570>
    1bd4:	ea 5e       	subi	r30, 0xEA	; 234
    1bd6:	fd 4f       	sbci	r31, 0xFD	; 253
    1bd8:	80 81       	ld	r24, Z
    1bda:	f3 e4       	ldi	r31, 0x43	; 67
    1bdc:	8f 02       	muls	r24, r31
    1bde:	c0 01       	movw	r24, r0
    1be0:	11 24       	eor	r1, r1
    1be2:	98 01       	movw	r18, r16
    1be4:	28 0f       	add	r18, r24
    1be6:	39 1f       	adc	r19, r25
    1be8:	f9 01       	movw	r30, r18
    1bea:	e8 5a       	subi	r30, 0xA8	; 168
    1bec:	ff 4f       	sbci	r31, 0xFF	; 255
    1bee:	10 82       	st	Z, r1
    1bf0:	32 96       	adiw	r30, 0x02	; 2
    1bf2:	10 82       	st	Z, r1
    1bf4:	ff 96       	adiw	r30, 0x3f	; 63
    1bf6:	10 82       	st	Z, r1
    1bf8:	31 97       	sbiw	r30, 0x01	; 1
    1bfa:	10 82       	st	Z, r1
    1bfc:	bc 01       	movw	r22, r24
    1bfe:	68 5a       	subi	r22, 0xA8	; 168
    1c00:	7f 4f       	sbci	r23, 0xFF	; 255
    1c02:	60 0f       	add	r22, r16
    1c04:	71 1f       	adc	r23, r17
    1c06:	c8 01       	movw	r24, r16
    1c08:	bd d7       	rcall	.+3962   	; 0x2b84 <ESP8266_Callback_ClientConnectionTimeout>
    1c0a:	f8 01       	movw	r30, r16
    1c0c:	ee 5d       	subi	r30, 0xDE	; 222
    1c0e:	fd 4f       	sbci	r31, 0xFD	; 253
    1c10:	80 81       	ld	r24, Z
    1c12:	80 ff       	sbrs	r24, 0
    1c14:	86 c0       	rjmp	.+268    	; 0x1d22 <ESP8266_Update+0x1f4>
    1c16:	42 e0       	ldi	r20, 0x02	; 2
    1c18:	50 e0       	ldi	r21, 0x00	; 0
    1c1a:	6b ec       	ldi	r22, 0xCB	; 203
    1c1c:	73 e0       	ldi	r23, 0x03	; 3
    1c1e:	88 e6       	ldi	r24, 0x68	; 104
    1c20:	96 e1       	ldi	r25, 0x16	; 22
    1c22:	0e 94 13 02 	call	0x426	; 0x426 <BUFFER_Find>
    1c26:	99 23       	and	r25, r25
    1c28:	64 f0       	brlt	.+24     	; 0x1c42 <ESP8266_Update+0x114>
    1c2a:	89 2b       	or	r24, r25
    1c2c:	09 f5       	brne	.+66     	; 0x1c70 <ESP8266_Update+0x142>
    1c2e:	42 e0       	ldi	r20, 0x02	; 2
    1c30:	50 e0       	ldi	r21, 0x00	; 0
    1c32:	be 01       	movw	r22, r28
    1c34:	6e 57       	subi	r22, 0x7E	; 126
    1c36:	7f 4f       	sbci	r23, 0xFF	; 255
    1c38:	88 e6       	ldi	r24, 0x68	; 104
    1c3a:	96 e1       	ldi	r25, 0x16	; 22
    1c3c:	0e 94 22 01 	call	0x244	; 0x244 <BUFFER_Read>
    1c40:	17 c0       	rjmp	.+46     	; 0x1c70 <ESP8266_Update+0x142>
    1c42:	40 e0       	ldi	r20, 0x00	; 0
    1c44:	50 e0       	ldi	r21, 0x00	; 0
    1c46:	6b ec       	ldi	r22, 0xCB	; 203
    1c48:	73 e0       	ldi	r23, 0x03	; 3
    1c4a:	84 e7       	ldi	r24, 0x74	; 116
    1c4c:	96 e1       	ldi	r25, 0x16	; 22
    1c4e:	0e 94 13 02 	call	0x426	; 0x426 <BUFFER_Find>
    1c52:	00 97       	sbiw	r24, 0x00	; 0
    1c54:	51 f4       	brne	.+20     	; 0x1c6a <ESP8266_Update+0x13c>
    1c56:	42 e0       	ldi	r20, 0x02	; 2
    1c58:	50 e0       	ldi	r21, 0x00	; 0
    1c5a:	be 01       	movw	r22, r28
    1c5c:	6e 57       	subi	r22, 0x7E	; 126
    1c5e:	7f 4f       	sbci	r23, 0xFF	; 255
    1c60:	84 e7       	ldi	r24, 0x74	; 116
    1c62:	96 e1       	ldi	r25, 0x16	; 22
    1c64:	0e 94 22 01 	call	0x244	; 0x244 <BUFFER_Read>
    1c68:	03 c0       	rjmp	.+6      	; 0x1c70 <ESP8266_Update+0x142>
    1c6a:	99 23       	and	r25, r25
    1c6c:	0c f4       	brge	.+2      	; 0x1c70 <ESP8266_Update+0x142>
    1c6e:	59 c0       	rjmp	.+178    	; 0x1d22 <ESP8266_Update+0x1f4>
    1c70:	f8 01       	movw	r30, r16
    1c72:	e1 5e       	subi	r30, 0xE1	; 225
    1c74:	fd 4f       	sbci	r31, 0xFD	; 253
    1c76:	c0 80       	ld	r12, Z
    1c78:	d1 80       	ldd	r13, Z+1	; 0x01
    1c7a:	32 96       	adiw	r30, 0x02	; 2
    1c7c:	81 81       	ldd	r24, Z+1	; 0x01
    1c7e:	8e 7f       	andi	r24, 0xFE	; 254
    1c80:	81 83       	std	Z+1, r24	; 0x01
    1c82:	8d e1       	ldi	r24, 0x1D	; 29
    1c84:	90 e0       	ldi	r25, 0x00	; 0
    1c86:	a0 e0       	ldi	r26, 0x00	; 0
    1c88:	b0 e0       	ldi	r27, 0x00	; 0
    1c8a:	f8 01       	movw	r30, r16
    1c8c:	84 83       	std	Z+4, r24	; 0x04
    1c8e:	95 83       	std	Z+5, r25	; 0x05
    1c90:	a6 83       	std	Z+6, r26	; 0x06
    1c92:	b7 83       	std	Z+7, r27	; 0x07
    1c94:	d6 01       	movw	r26, r12
    1c96:	12 96       	adiw	r26, 0x02	; 2
    1c98:	8c 91       	ld	r24, X
    1c9a:	12 97       	sbiw	r26, 0x02	; 2
    1c9c:	88 23       	and	r24, r24
    1c9e:	51 f0       	breq	.+20     	; 0x1cb4 <ESP8266_Update+0x186>
    1ca0:	54 96       	adiw	r26, 0x14	; 20
    1ca2:	4d 91       	ld	r20, X+
    1ca4:	5c 91       	ld	r21, X
    1ca6:	55 97       	sbiw	r26, 0x15	; 21
    1ca8:	24 eb       	ldi	r18, 0xB4	; 180
    1caa:	35 e0       	ldi	r19, 0x05	; 5
    1cac:	b6 01       	movw	r22, r12
    1cae:	c8 01       	movw	r24, r16
    1cb0:	c3 d6       	rcall	.+3462   	; 0x2a38 <ESP8266_Callback_ClientConnectionSendData>
    1cb2:	09 c0       	rjmp	.+18     	; 0x1cc6 <ESP8266_Update+0x198>
    1cb4:	f6 01       	movw	r30, r12
    1cb6:	44 89       	ldd	r20, Z+20	; 0x14
    1cb8:	55 89       	ldd	r21, Z+21	; 0x15
    1cba:	24 eb       	ldi	r18, 0xB4	; 180
    1cbc:	35 e0       	ldi	r19, 0x05	; 5
    1cbe:	b6 01       	movw	r22, r12
    1cc0:	c8 01       	movw	r24, r16
    1cc2:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <ESP8266_Callback_ServerConnectionSendData>
    1cc6:	e8 2e       	mov	r14, r24
    1cc8:	f9 2e       	mov	r15, r25
    1cca:	f5 eb       	ldi	r31, 0xB5	; 181
    1ccc:	ef 16       	cp	r14, r31
    1cce:	f5 e0       	ldi	r31, 0x05	; 5
    1cd0:	ff 06       	cpc	r15, r31
    1cd2:	30 f0       	brcs	.+12     	; 0x1ce0 <ESP8266_Update+0x1b2>
    1cd4:	0f 2e       	mov	r0, r31
    1cd6:	f4 eb       	ldi	r31, 0xB4	; 180
    1cd8:	ef 2e       	mov	r14, r31
    1cda:	f5 e0       	ldi	r31, 0x05	; 5
    1cdc:	ff 2e       	mov	r15, r31
    1cde:	f0 2d       	mov	r31, r0
    1ce0:	e1 14       	cp	r14, r1
    1ce2:	f1 04       	cpc	r15, r1
    1ce4:	b1 f0       	breq	.+44     	; 0x1d12 <ESP8266_Update+0x1e4>
    1ce6:	b7 01       	movw	r22, r14
    1ce8:	d6 01       	movw	r26, r12
    1cea:	54 96       	adiw	r26, 0x14	; 20
    1cec:	8d 91       	ld	r24, X+
    1cee:	9c 91       	ld	r25, X
    1cf0:	55 97       	sbiw	r26, 0x15	; 21
    1cf2:	e5 d4       	rcall	.+2506   	; 0x26be <ESP8266_LL_USARTSend>
    1cf4:	f8 01       	movw	r30, r16
    1cf6:	e5 5e       	subi	r30, 0xE5	; 229
    1cf8:	fd 4f       	sbci	r31, 0xFD	; 253
    1cfa:	80 81       	ld	r24, Z
    1cfc:	91 81       	ldd	r25, Z+1	; 0x01
    1cfe:	a2 81       	ldd	r26, Z+2	; 0x02
    1d00:	b3 81       	ldd	r27, Z+3	; 0x03
    1d02:	8e 0d       	add	r24, r14
    1d04:	9f 1d       	adc	r25, r15
    1d06:	a1 1d       	adc	r26, r1
    1d08:	b1 1d       	adc	r27, r1
    1d0a:	80 83       	st	Z, r24
    1d0c:	91 83       	std	Z+1, r25	; 0x01
    1d0e:	a2 83       	std	Z+2, r26	; 0x02
    1d10:	b3 83       	std	Z+3, r27	; 0x03
    1d12:	62 e0       	ldi	r22, 0x02	; 2
    1d14:	70 e0       	ldi	r23, 0x00	; 0
    1d16:	8e ec       	ldi	r24, 0xCE	; 206
    1d18:	93 e0       	ldi	r25, 0x03	; 3
    1d1a:	d1 d4       	rcall	.+2466   	; 0x26be <ESP8266_LL_USARTSend>
    1d1c:	81 e0       	ldi	r24, 0x01	; 1
    1d1e:	f6 01       	movw	r30, r12
    1d20:	83 8b       	std	Z+19, r24	; 0x13
    1d22:	f8 01       	movw	r30, r16
    1d24:	84 81       	ldd	r24, Z+4	; 0x04
    1d26:	95 81       	ldd	r25, Z+5	; 0x05
    1d28:	a6 81       	ldd	r26, Z+6	; 0x06
    1d2a:	b7 81       	ldd	r27, Z+7	; 0x07
    1d2c:	41 97       	sbiw	r24, 0x11	; 17
    1d2e:	a1 05       	cpc	r26, r1
    1d30:	b1 05       	cpc	r27, r1
    1d32:	01 f5       	brne	.+64     	; 0x1d74 <ESP8266_Update+0x246>
    1d34:	eb 50       	subi	r30, 0x0B	; 11
    1d36:	fe 4f       	sbci	r31, 0xFE	; 254
    1d38:	80 81       	ld	r24, Z
    1d3a:	81 11       	cpse	r24, r1
    1d3c:	7d c0       	rjmp	.+250    	; 0x1e38 <ESP8266_Update+0x30a>
    1d3e:	44 e0       	ldi	r20, 0x04	; 4
    1d40:	50 e0       	ldi	r21, 0x00	; 0
    1d42:	69 ed       	ldi	r22, 0xD9	; 217
    1d44:	72 e0       	ldi	r23, 0x02	; 2
    1d46:	88 e6       	ldi	r24, 0x68	; 104
    1d48:	96 e1       	ldi	r25, 0x16	; 22
    1d4a:	0e 94 13 02 	call	0x426	; 0x426 <BUFFER_Find>
    1d4e:	99 23       	and	r25, r25
    1d50:	8c f0       	brlt	.+34     	; 0x1d74 <ESP8266_Update+0x246>
    1d52:	88 e6       	ldi	r24, 0x68	; 104
    1d54:	96 e1       	ldi	r25, 0x16	; 22
    1d56:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <BUFFER_Reset>
    1d5a:	d8 01       	movw	r26, r16
    1d5c:	14 96       	adiw	r26, 0x04	; 4
    1d5e:	1d 92       	st	X+, r1
    1d60:	1d 92       	st	X+, r1
    1d62:	1d 92       	st	X+, r1
    1d64:	1c 92       	st	X, r1
    1d66:	17 97       	sbiw	r26, 0x07	; 7
    1d68:	f8 01       	movw	r30, r16
    1d6a:	ef 5d       	subi	r30, 0xDF	; 223
    1d6c:	fd 4f       	sbci	r31, 0xFD	; 253
    1d6e:	81 81       	ldd	r24, Z+1	; 0x01
    1d70:	82 60       	ori	r24, 0x02	; 2
    1d72:	81 83       	std	Z+1, r24	; 0x01
    1d74:	f8 01       	movw	r30, r16
    1d76:	eb 50       	subi	r30, 0x0B	; 11
    1d78:	fe 4f       	sbci	r31, 0xFE	; 254
    1d7a:	80 81       	ld	r24, Z
    1d7c:	88 23       	and	r24, r24
    1d7e:	f1 f0       	breq	.+60     	; 0x1dbc <ESP8266_Update+0x28e>
    1d80:	54 c0       	rjmp	.+168    	; 0x1e2a <ESP8266_Update+0x2fc>
    1d82:	9c 01       	movw	r18, r24
    1d84:	41 e0       	ldi	r20, 0x01	; 1
    1d86:	be 01       	movw	r22, r28
    1d88:	6f 5f       	subi	r22, 0xFF	; 255
    1d8a:	7f 4f       	sbci	r23, 0xFF	; 255
    1d8c:	c8 01       	movw	r24, r16
    1d8e:	0e 94 49 06 	call	0xc92	; 0xc92 <ParseReceived>
    1d92:	f7 01       	movw	r30, r14
    1d94:	80 81       	ld	r24, Z
    1d96:	88 23       	and	r24, r24
    1d98:	b1 f0       	breq	.+44     	; 0x1dc6 <ESP8266_Update+0x298>
    1d9a:	47 c0       	rjmp	.+142    	; 0x1e2a <ESP8266_Update+0x2fc>
    1d9c:	f8 01       	movw	r30, r16
    1d9e:	eb 50       	subi	r30, 0x0B	; 11
    1da0:	fe 4f       	sbci	r31, 0xFE	; 254
    1da2:	80 81       	ld	r24, Z
    1da4:	81 11       	cpse	r24, r1
    1da6:	48 c0       	rjmp	.+144    	; 0x1e38 <ESP8266_Update+0x30a>
    1da8:	f8 01       	movw	r30, r16
    1daa:	84 81       	ldd	r24, Z+4	; 0x04
    1dac:	95 81       	ldd	r25, Z+5	; 0x05
    1dae:	a6 81       	ldd	r26, Z+6	; 0x06
    1db0:	b7 81       	ldd	r27, Z+7	; 0x07
    1db2:	89 2b       	or	r24, r25
    1db4:	8a 2b       	or	r24, r26
    1db6:	8b 2b       	or	r24, r27
    1db8:	41 f1       	breq	.+80     	; 0x1e0a <ESP8266_Update+0x2dc>
    1dba:	78 c1       	rjmp	.+752    	; 0x20ac <ESP8266_Update+0x57e>
    1dbc:	78 01       	movw	r14, r16
    1dbe:	fb e0       	ldi	r31, 0x0B	; 11
    1dc0:	ef 1a       	sub	r14, r31
    1dc2:	fe ef       	ldi	r31, 0xFE	; 254
    1dc4:	ff 0a       	sbc	r15, r31
    1dc6:	40 e8       	ldi	r20, 0x80	; 128
    1dc8:	50 e0       	ldi	r21, 0x00	; 0
    1dca:	be 01       	movw	r22, r28
    1dcc:	6f 5f       	subi	r22, 0xFF	; 255
    1dce:	7f 4f       	sbci	r23, 0xFF	; 255
    1dd0:	88 e6       	ldi	r24, 0x68	; 104
    1dd2:	96 e1       	ldi	r25, 0x16	; 22
    1dd4:	0e 94 b4 02 	call	0x568	; 0x568 <BUFFER_ReadString>
    1dd8:	00 97       	sbiw	r24, 0x00	; 0
    1dda:	99 f6       	brne	.-90     	; 0x1d82 <ESP8266_Update+0x254>
    1ddc:	df cf       	rjmp	.-66     	; 0x1d9c <ESP8266_Update+0x26e>
    1dde:	9c 01       	movw	r18, r24
    1de0:	40 e0       	ldi	r20, 0x00	; 0
    1de2:	be 01       	movw	r22, r28
    1de4:	6f 5f       	subi	r22, 0xFF	; 255
    1de6:	7f 4f       	sbci	r23, 0xFF	; 255
    1de8:	c8 01       	movw	r24, r16
    1dea:	0e 94 49 06 	call	0xc92	; 0xc92 <ParseReceived>
    1dee:	d7 01       	movw	r26, r14
    1df0:	8c 91       	ld	r24, X
    1df2:	81 11       	cpse	r24, r1
    1df4:	21 c0       	rjmp	.+66     	; 0x1e38 <ESP8266_Update+0x30a>
    1df6:	f8 01       	movw	r30, r16
    1df8:	84 81       	ldd	r24, Z+4	; 0x04
    1dfa:	95 81       	ldd	r25, Z+5	; 0x05
    1dfc:	a6 81       	ldd	r26, Z+6	; 0x06
    1dfe:	b7 81       	ldd	r27, Z+7	; 0x07
    1e00:	89 2b       	or	r24, r25
    1e02:	8a 2b       	or	r24, r26
    1e04:	8b 2b       	or	r24, r27
    1e06:	31 f0       	breq	.+12     	; 0x1e14 <ESP8266_Update+0x2e6>
    1e08:	51 c1       	rjmp	.+674    	; 0x20ac <ESP8266_Update+0x57e>
    1e0a:	78 01       	movw	r14, r16
    1e0c:	fb e0       	ldi	r31, 0x0B	; 11
    1e0e:	ef 1a       	sub	r14, r31
    1e10:	fe ef       	ldi	r31, 0xFE	; 254
    1e12:	ff 0a       	sbc	r15, r31
    1e14:	40 e8       	ldi	r20, 0x80	; 128
    1e16:	50 e0       	ldi	r21, 0x00	; 0
    1e18:	be 01       	movw	r22, r28
    1e1a:	6f 5f       	subi	r22, 0xFF	; 255
    1e1c:	7f 4f       	sbci	r23, 0xFF	; 255
    1e1e:	84 e7       	ldi	r24, 0x74	; 116
    1e20:	96 e1       	ldi	r25, 0x16	; 22
    1e22:	0e 94 b4 02 	call	0x568	; 0x568 <BUFFER_ReadString>
    1e26:	00 97       	sbiw	r24, 0x00	; 0
    1e28:	d1 f6       	brne	.-76     	; 0x1dde <ESP8266_Update+0x2b0>
    1e2a:	f8 01       	movw	r30, r16
    1e2c:	eb 50       	subi	r30, 0x0B	; 11
    1e2e:	fe 4f       	sbci	r31, 0xFE	; 254
    1e30:	80 81       	ld	r24, Z
    1e32:	88 23       	and	r24, r24
    1e34:	09 f4       	brne	.+2      	; 0x1e38 <ESP8266_Update+0x30a>
    1e36:	3a c1       	rjmp	.+628    	; 0x20ac <ESP8266_Update+0x57e>
    1e38:	f8 01       	movw	r30, r16
    1e3a:	e5 50       	subi	r30, 0x05	; 5
    1e3c:	fe 4f       	sbci	r31, 0xFE	; 254
    1e3e:	80 81       	ld	r24, Z
    1e40:	81 11       	cpse	r24, r1
    1e42:	07 c0       	rjmp	.+14     	; 0x1e52 <ESP8266_Update+0x324>
    1e44:	0f 2e       	mov	r0, r31
    1e46:	f4 e7       	ldi	r31, 0x74	; 116
    1e48:	af 2e       	mov	r10, r31
    1e4a:	f6 e1       	ldi	r31, 0x16	; 22
    1e4c:	bf 2e       	mov	r11, r31
    1e4e:	f0 2d       	mov	r31, r0
    1e50:	06 c0       	rjmp	.+12     	; 0x1e5e <ESP8266_Update+0x330>
    1e52:	0f 2e       	mov	r0, r31
    1e54:	f8 e6       	ldi	r31, 0x68	; 104
    1e56:	af 2e       	mov	r10, r31
    1e58:	f6 e1       	ldi	r31, 0x16	; 22
    1e5a:	bf 2e       	mov	r11, r31
    1e5c:	f0 2d       	mov	r31, r0
    1e5e:	78 01       	movw	r14, r16
    1e60:	2a e0       	ldi	r18, 0x0A	; 10
    1e62:	e2 1a       	sub	r14, r18
    1e64:	2e ef       	ldi	r18, 0xFE	; 254
    1e66:	f2 0a       	sbc	r15, r18
    1e68:	68 01       	movw	r12, r16
    1e6a:	36 e0       	ldi	r19, 0x06	; 6
    1e6c:	c3 1a       	sub	r12, r19
    1e6e:	3e ef       	ldi	r19, 0xFE	; 254
    1e70:	d3 0a       	sbc	r13, r19
    1e72:	0f 2e       	mov	r0, r31
    1e74:	f3 e4       	ldi	r31, 0x43	; 67
    1e76:	7f 2e       	mov	r7, r31
    1e78:	f0 2d       	mov	r31, r0
    1e7a:	48 01       	movw	r8, r16
    1e7c:	88 e0       	ldi	r24, 0x08	; 8
    1e7e:	88 1a       	sub	r8, r24
    1e80:	8e ef       	ldi	r24, 0xFE	; 254
    1e82:	98 0a       	sbc	r9, r24
    1e84:	82 c0       	rjmp	.+260    	; 0x1f8a <ESP8266_Update+0x45c>
    1e86:	41 e0       	ldi	r20, 0x01	; 1
    1e88:	50 e0       	ldi	r21, 0x00	; 0
    1e8a:	be 01       	movw	r22, r28
    1e8c:	6f 57       	subi	r22, 0x7F	; 127
    1e8e:	7f 4f       	sbci	r23, 0xFF	; 255
    1e90:	c5 01       	movw	r24, r10
    1e92:	0e 94 22 01 	call	0x244	; 0x244 <BUFFER_Read>
    1e96:	cf 57       	subi	r28, 0x7F	; 127
    1e98:	df 4f       	sbci	r29, 0xFF	; 255
    1e9a:	28 81       	ld	r18, Y
    1e9c:	c1 58       	subi	r28, 0x81	; 129
    1e9e:	d0 40       	sbci	r29, 0x00	; 0
    1ea0:	d6 01       	movw	r26, r12
    1ea2:	8c 91       	ld	r24, X
    1ea4:	f8 01       	movw	r30, r16
    1ea6:	78 9e       	mul	r7, r24
    1ea8:	e0 0d       	add	r30, r0
    1eaa:	f1 1d       	adc	r31, r1
    1eac:	11 24       	eor	r1, r1
    1eae:	e4 59       	subi	r30, 0x94	; 148
    1eb0:	ff 4f       	sbci	r31, 0xFF	; 255
    1eb2:	01 90       	ld	r0, Z+
    1eb4:	f0 81       	ld	r31, Z
    1eb6:	e0 2d       	mov	r30, r0
    1eb8:	d7 01       	movw	r26, r14
    1eba:	8d 91       	ld	r24, X+
    1ebc:	9c 91       	ld	r25, X
    1ebe:	11 97       	sbiw	r26, 0x01	; 1
    1ec0:	e8 0f       	add	r30, r24
    1ec2:	f9 1f       	adc	r31, r25
    1ec4:	20 83       	st	Z, r18
    1ec6:	8d 91       	ld	r24, X+
    1ec8:	9c 91       	ld	r25, X
    1eca:	11 97       	sbiw	r26, 0x01	; 1
    1ecc:	01 96       	adiw	r24, 0x01	; 1
    1ece:	8d 93       	st	X+, r24
    1ed0:	9c 93       	st	X, r25
    1ed2:	f4 01       	movw	r30, r8
    1ed4:	20 81       	ld	r18, Z
    1ed6:	31 81       	ldd	r19, Z+1	; 0x01
    1ed8:	2f 5f       	subi	r18, 0xFF	; 255
    1eda:	3f 4f       	sbci	r19, 0xFF	; 255
    1edc:	31 83       	std	Z+1, r19	; 0x01
    1ede:	20 83       	st	Z, r18
    1ee0:	84 3b       	cpi	r24, 0xB4	; 180
    1ee2:	f5 e0       	ldi	r31, 0x05	; 5
    1ee4:	9f 07       	cpc	r25, r31
    1ee6:	08 f4       	brcc	.+2      	; 0x1eea <ESP8266_Update+0x3bc>
    1ee8:	50 c0       	rjmp	.+160    	; 0x1f8a <ESP8266_Update+0x45c>
    1eea:	d6 01       	movw	r26, r12
    1eec:	2c 91       	ld	r18, X
    1eee:	1c 01       	movw	r2, r24
    1ef0:	41 2c       	mov	r4, r1
    1ef2:	51 2c       	mov	r5, r1
    1ef4:	a2 2f       	mov	r26, r18
    1ef6:	b0 e0       	ldi	r27, 0x00	; 0
    1ef8:	f8 01       	movw	r30, r16
    1efa:	72 9e       	mul	r7, r18
    1efc:	e0 0d       	add	r30, r0
    1efe:	f1 1d       	adc	r31, r1
    1f00:	11 24       	eor	r1, r1
    1f02:	ee 59       	subi	r30, 0x9E	; 158
    1f04:	ff 4f       	sbci	r31, 0xFF	; 255
    1f06:	40 81       	ld	r20, Z
    1f08:	51 81       	ldd	r21, Z+1	; 0x01
    1f0a:	62 81       	ldd	r22, Z+2	; 0x02
    1f0c:	73 81       	ldd	r23, Z+3	; 0x03
    1f0e:	24 16       	cp	r2, r20
    1f10:	35 06       	cpc	r3, r21
    1f12:	46 06       	cpc	r4, r22
    1f14:	57 06       	cpc	r5, r23
    1f16:	c9 f1       	breq	.+114    	; 0x1f8a <ESP8266_Update+0x45c>
    1f18:	7a 9e       	mul	r7, r26
    1f1a:	90 01       	movw	r18, r0
    1f1c:	7b 9e       	mul	r7, r27
    1f1e:	30 0d       	add	r19, r0
    1f20:	11 24       	eor	r1, r1
    1f22:	20 0f       	add	r18, r16
    1f24:	31 1f       	adc	r19, r17
    1f26:	f9 01       	movw	r30, r18
    1f28:	e2 59       	subi	r30, 0x92	; 146
    1f2a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f2c:	91 83       	std	Z+1, r25	; 0x01
    1f2e:	80 83       	st	Z, r24
    1f30:	32 96       	adiw	r30, 0x02	; 2
    1f32:	10 82       	st	Z, r1
    1f34:	76 97       	sbiw	r30, 0x16	; 22
    1f36:	80 81       	ld	r24, Z
    1f38:	88 23       	and	r24, r24
    1f3a:	89 f0       	breq	.+34     	; 0x1f5e <ESP8266_Update+0x430>
    1f3c:	7a 9e       	mul	r7, r26
    1f3e:	b0 01       	movw	r22, r0
    1f40:	7b 9e       	mul	r7, r27
    1f42:	70 0d       	add	r23, r0
    1f44:	11 24       	eor	r1, r1
    1f46:	f9 01       	movw	r30, r18
    1f48:	e4 59       	subi	r30, 0x94	; 148
    1f4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f4c:	40 81       	ld	r20, Z
    1f4e:	51 81       	ldd	r21, Z+1	; 0x01
    1f50:	68 5a       	subi	r22, 0xA8	; 168
    1f52:	7f 4f       	sbci	r23, 0xFF	; 255
    1f54:	60 0f       	add	r22, r16
    1f56:	71 1f       	adc	r23, r17
    1f58:	c8 01       	movw	r24, r16
    1f5a:	aa d5       	rcall	.+2900   	; 0x2ab0 <ESP8266_Callback_ClientConnectionDataReceived>
    1f5c:	13 c0       	rjmp	.+38     	; 0x1f84 <ESP8266_Update+0x456>
    1f5e:	7a 9e       	mul	r7, r26
    1f60:	b0 01       	movw	r22, r0
    1f62:	7b 9e       	mul	r7, r27
    1f64:	70 0d       	add	r23, r0
    1f66:	11 24       	eor	r1, r1
    1f68:	f8 01       	movw	r30, r16
    1f6a:	e6 0f       	add	r30, r22
    1f6c:	f7 1f       	adc	r31, r23
    1f6e:	e4 59       	subi	r30, 0x94	; 148
    1f70:	ff 4f       	sbci	r31, 0xFF	; 255
    1f72:	40 81       	ld	r20, Z
    1f74:	51 81       	ldd	r21, Z+1	; 0x01
    1f76:	68 5a       	subi	r22, 0xA8	; 168
    1f78:	7f 4f       	sbci	r23, 0xFF	; 255
    1f7a:	60 0f       	add	r22, r16
    1f7c:	71 1f       	adc	r23, r17
    1f7e:	c8 01       	movw	r24, r16
    1f80:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <ESP8266_Callback_ServerConnectionDataReceived>
    1f84:	f7 01       	movw	r30, r14
    1f86:	11 82       	std	Z+1, r1	; 0x01
    1f88:	10 82       	st	Z, r1
    1f8a:	d7 01       	movw	r26, r14
    1f8c:	8d 91       	ld	r24, X+
    1f8e:	9c 91       	ld	r25, X
    1f90:	a0 e0       	ldi	r26, 0x00	; 0
    1f92:	b0 e0       	ldi	r27, 0x00	; 0
    1f94:	f6 01       	movw	r30, r12
    1f96:	20 81       	ld	r18, Z
    1f98:	f8 01       	movw	r30, r16
    1f9a:	72 9e       	mul	r7, r18
    1f9c:	e0 0d       	add	r30, r0
    1f9e:	f1 1d       	adc	r31, r1
    1fa0:	11 24       	eor	r1, r1
    1fa2:	ee 59       	subi	r30, 0x9E	; 158
    1fa4:	ff 4f       	sbci	r31, 0xFF	; 255
    1fa6:	40 81       	ld	r20, Z
    1fa8:	51 81       	ldd	r21, Z+1	; 0x01
    1faa:	62 81       	ldd	r22, Z+2	; 0x02
    1fac:	73 81       	ldd	r23, Z+3	; 0x03
    1fae:	84 17       	cp	r24, r20
    1fb0:	95 07       	cpc	r25, r21
    1fb2:	a6 07       	cpc	r26, r22
    1fb4:	b7 07       	cpc	r27, r23
    1fb6:	30 f4       	brcc	.+12     	; 0x1fc4 <ESP8266_Update+0x496>
    1fb8:	c5 01       	movw	r24, r10
    1fba:	0e 94 9d 01 	call	0x33a	; 0x33a <BUFFER_GetFull>
    1fbe:	89 2b       	or	r24, r25
    1fc0:	09 f0       	breq	.+2      	; 0x1fc4 <ESP8266_Update+0x496>
    1fc2:	61 cf       	rjmp	.-318    	; 0x1e86 <ESP8266_Update+0x358>
    1fc4:	f8 01       	movw	r30, r16
    1fc6:	e6 50       	subi	r30, 0x06	; 6
    1fc8:	fe 4f       	sbci	r31, 0xFE	; 254
    1fca:	20 81       	ld	r18, Z
    1fcc:	32 97       	sbiw	r30, 0x02	; 2
    1fce:	80 81       	ld	r24, Z
    1fd0:	91 81       	ldd	r25, Z+1	; 0x01
    1fd2:	a0 e0       	ldi	r26, 0x00	; 0
    1fd4:	b0 e0       	ldi	r27, 0x00	; 0
    1fd6:	e2 2e       	mov	r14, r18
    1fd8:	f1 2c       	mov	r15, r1
    1fda:	f8 01       	movw	r30, r16
    1fdc:	33 e4       	ldi	r19, 0x43	; 67
    1fde:	23 9f       	mul	r18, r19
    1fe0:	e0 0d       	add	r30, r0
    1fe2:	f1 1d       	adc	r31, r1
    1fe4:	11 24       	eor	r1, r1
    1fe6:	ee 59       	subi	r30, 0x9E	; 158
    1fe8:	ff 4f       	sbci	r31, 0xFF	; 255
    1fea:	40 81       	ld	r20, Z
    1fec:	51 81       	ldd	r21, Z+1	; 0x01
    1fee:	62 81       	ldd	r22, Z+2	; 0x02
    1ff0:	73 81       	ldd	r23, Z+3	; 0x03
    1ff2:	84 17       	cp	r24, r20
    1ff4:	95 07       	cpc	r25, r21
    1ff6:	a6 07       	cpc	r26, r22
    1ff8:	b7 07       	cpc	r27, r23
    1ffa:	08 f4       	brcc	.+2      	; 0x1ffe <ESP8266_Update+0x4d0>
    1ffc:	57 c0       	rjmp	.+174    	; 0x20ac <ESP8266_Update+0x57e>
    1ffe:	f8 01       	movw	r30, r16
    2000:	eb 50       	subi	r30, 0x0B	; 11
    2002:	fe 4f       	sbci	r31, 0xFE	; 254
    2004:	10 82       	st	Z, r1
    2006:	23 e4       	ldi	r18, 0x43	; 67
    2008:	2e 9d       	mul	r18, r14
    200a:	c0 01       	movw	r24, r0
    200c:	2f 9d       	mul	r18, r15
    200e:	90 0d       	add	r25, r0
    2010:	11 24       	eor	r1, r1
    2012:	80 0f       	add	r24, r16
    2014:	91 1f       	adc	r25, r17
    2016:	fc 01       	movw	r30, r24
    2018:	e2 59       	subi	r30, 0x92	; 146
    201a:	ff 4f       	sbci	r31, 0xFF	; 255
    201c:	d8 01       	movw	r26, r16
    201e:	aa 50       	subi	r26, 0x0A	; 10
    2020:	be 4f       	sbci	r27, 0xFE	; 254
    2022:	2d 91       	ld	r18, X+
    2024:	3c 91       	ld	r19, X
    2026:	31 83       	std	Z+1, r19	; 0x01
    2028:	20 83       	st	Z, r18
    202a:	32 96       	adiw	r30, 0x02	; 2
    202c:	21 e0       	ldi	r18, 0x01	; 1
    202e:	20 83       	st	Z, r18
    2030:	b9 96       	adiw	r30, 0x29	; 41
    2032:	80 81       	ld	r24, Z
    2034:	88 23       	and	r24, r24
    2036:	21 f1       	breq	.+72     	; 0x2080 <ESP8266_Update+0x552>
    2038:	83 e4       	ldi	r24, 0x43	; 67
    203a:	8e 9d       	mul	r24, r14
    203c:	f0 01       	movw	r30, r0
    203e:	8f 9d       	mul	r24, r15
    2040:	f0 0d       	add	r31, r0
    2042:	11 24       	eor	r1, r1
    2044:	e0 0f       	add	r30, r16
    2046:	f1 1f       	adc	r31, r17
    2048:	e4 59       	subi	r30, 0x94	; 148
    204a:	ff 4f       	sbci	r31, 0xFF	; 255
    204c:	61 ed       	ldi	r22, 0xD1	; 209
    204e:	73 e0       	ldi	r23, 0x03	; 3
    2050:	80 81       	ld	r24, Z
    2052:	91 81       	ldd	r25, Z+1	; 0x01
    2054:	42 d7       	rcall	.+3716   	; 0x2eda <strstr>
    2056:	00 97       	sbiw	r24, 0x00	; 0
    2058:	99 f0       	breq	.+38     	; 0x2080 <ESP8266_Update+0x552>
    205a:	60 e0       	ldi	r22, 0x00	; 0
    205c:	70 e0       	ldi	r23, 0x00	; 0
    205e:	40 96       	adiw	r24, 0x10	; 16
    2060:	0e 94 1f 03 	call	0x63e	; 0x63e <ParseNumber>
    2064:	23 e4       	ldi	r18, 0x43	; 67
    2066:	2e 9d       	mul	r18, r14
    2068:	f0 01       	movw	r30, r0
    206a:	2f 9d       	mul	r18, r15
    206c:	f0 0d       	add	r31, r0
    206e:	11 24       	eor	r1, r1
    2070:	e0 0f       	add	r30, r16
    2072:	f1 1f       	adc	r31, r17
    2074:	ee 58       	subi	r30, 0x8E	; 142
    2076:	ff 4f       	sbci	r31, 0xFF	; 255
    2078:	60 83       	st	Z, r22
    207a:	71 83       	std	Z+1, r23	; 0x01
    207c:	82 83       	std	Z+2, r24	; 0x02
    207e:	93 83       	std	Z+3, r25	; 0x03
    2080:	f8 01       	movw	r30, r16
    2082:	e6 50       	subi	r30, 0x06	; 6
    2084:	fe 4f       	sbci	r31, 0xFE	; 254
    2086:	80 81       	ld	r24, Z
    2088:	f8 01       	movw	r30, r16
    208a:	93 e4       	ldi	r25, 0x43	; 67
    208c:	89 9f       	mul	r24, r25
    208e:	e0 0d       	add	r30, r0
    2090:	f1 1d       	adc	r31, r1
    2092:	11 24       	eor	r1, r1
    2094:	ef 58       	subi	r30, 0x8F	; 143
    2096:	ff 4f       	sbci	r31, 0xFF	; 255
    2098:	81 e0       	ldi	r24, 0x01	; 1
    209a:	80 83       	st	Z, r24
    209c:	07 c0       	rjmp	.+14     	; 0x20ac <ESP8266_Update+0x57e>
    209e:	f8 01       	movw	r30, r16
    20a0:	ee 5d       	subi	r30, 0xDE	; 222
    20a2:	fd 4f       	sbci	r31, 0xFD	; 253
    20a4:	80 81       	ld	r24, Z
    20a6:	80 ff       	sbrs	r24, 0
    20a8:	65 ce       	rjmp	.-822    	; 0x1d74 <ESP8266_Update+0x246>
    20aa:	b5 cd       	rjmp	.-1174   	; 0x1c16 <ESP8266_Update+0xe8>
    20ac:	c8 01       	movw	r24, r16
    20ae:	0e 94 e8 05 	call	0xbd0	; 0xbd0 <CallConnectionCallbacks>
    20b2:	f8 01       	movw	r30, r16
    20b4:	eb 5d       	subi	r30, 0xDB	; 219
    20b6:	fd 4f       	sbci	r31, 0xFD	; 253
    20b8:	10 82       	st	Z, r1
    20ba:	80 e0       	ldi	r24, 0x00	; 0
    20bc:	cd 57       	subi	r28, 0x7D	; 125
    20be:	df 4f       	sbci	r29, 0xFF	; 255
    20c0:	0f b6       	in	r0, 0x3f	; 63
    20c2:	f8 94       	cli
    20c4:	de bf       	out	0x3e, r29	; 62
    20c6:	0f be       	out	0x3f, r0	; 63
    20c8:	cd bf       	out	0x3d, r28	; 61
    20ca:	df 91       	pop	r29
    20cc:	cf 91       	pop	r28
    20ce:	1f 91       	pop	r17
    20d0:	0f 91       	pop	r16
    20d2:	ff 90       	pop	r15
    20d4:	ef 90       	pop	r14
    20d6:	df 90       	pop	r13
    20d8:	cf 90       	pop	r12
    20da:	bf 90       	pop	r11
    20dc:	af 90       	pop	r10
    20de:	9f 90       	pop	r9
    20e0:	8f 90       	pop	r8
    20e2:	7f 90       	pop	r7
    20e4:	5f 90       	pop	r5
    20e6:	4f 90       	pop	r4
    20e8:	3f 90       	pop	r3
    20ea:	2f 90       	pop	r2
    20ec:	08 95       	ret

000020ee <SendCommand>:
    20ee:	cf 92       	push	r12
    20f0:	df 92       	push	r13
    20f2:	ef 92       	push	r14
    20f4:	ff 92       	push	r15
    20f6:	1f 93       	push	r17
    20f8:	cf 93       	push	r28
    20fa:	df 93       	push	r29
    20fc:	ec 01       	movw	r28, r24
    20fe:	16 2f       	mov	r17, r22
    2100:	6a 01       	movw	r12, r20
    2102:	79 01       	movw	r14, r18
    2104:	8c 81       	ldd	r24, Y+4	; 0x04
    2106:	9d 81       	ldd	r25, Y+5	; 0x05
    2108:	ae 81       	ldd	r26, Y+6	; 0x06
    210a:	bf 81       	ldd	r27, Y+7	; 0x07
    210c:	89 2b       	or	r24, r25
    210e:	8a 2b       	or	r24, r26
    2110:	8b 2b       	or	r24, r27
    2112:	39 f0       	breq	.+14     	; 0x2122 <SendCommand+0x34>
    2114:	ce 01       	movw	r24, r28
    2116:	0b dd       	rcall	.-1514   	; 0x1b2e <ESP8266_Update>
    2118:	cb 5d       	subi	r28, 0xDB	; 219
    211a:	dd 4f       	sbci	r29, 0xFD	; 253
    211c:	87 e0       	ldi	r24, 0x07	; 7
    211e:	88 83       	st	Y, r24
    2120:	33 c0       	rjmp	.+102    	; 0x2188 <SendCommand+0x9a>
    2122:	61 31       	cpi	r22, 0x11	; 17
    2124:	21 f4       	brne	.+8      	; 0x212e <SendCommand+0x40>
    2126:	88 e6       	ldi	r24, 0x68	; 104
    2128:	96 e1       	ldi	r25, 0x16	; 22
    212a:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <BUFFER_Reset>
    212e:	c1 14       	cp	r12, r1
    2130:	d1 04       	cpc	r13, r1
    2132:	51 f0       	breq	.+20     	; 0x2148 <SendCommand+0x5a>
    2134:	f6 01       	movw	r30, r12
    2136:	01 90       	ld	r0, Z+
    2138:	00 20       	and	r0, r0
    213a:	e9 f7       	brne	.-6      	; 0x2136 <SendCommand+0x48>
    213c:	31 97       	sbiw	r30, 0x01	; 1
    213e:	bf 01       	movw	r22, r30
    2140:	6c 19       	sub	r22, r12
    2142:	7d 09       	sbc	r23, r13
    2144:	c6 01       	movw	r24, r12
    2146:	bb d2       	rcall	.+1398   	; 0x26be <ESP8266_LL_USARTSend>
    2148:	81 2f       	mov	r24, r17
    214a:	90 e0       	ldi	r25, 0x00	; 0
    214c:	a0 e0       	ldi	r26, 0x00	; 0
    214e:	b0 e0       	ldi	r27, 0x00	; 0
    2150:	8c 83       	std	Y+4, r24	; 0x04
    2152:	9d 83       	std	Y+5, r25	; 0x05
    2154:	ae 83       	std	Y+6, r26	; 0x06
    2156:	bf 83       	std	Y+7, r27	; 0x07
    2158:	18 86       	std	Y+8, r1	; 0x08
    215a:	b7 01       	movw	r22, r14
    215c:	ce 01       	movw	r24, r28
    215e:	08 96       	adiw	r24, 0x08	; 8
    2160:	98 d6       	rcall	.+3376   	; 0x2e92 <strcpy>
    2162:	fe 01       	movw	r30, r28
    2164:	e8 5b       	subi	r30, 0xB8	; 184
    2166:	ff 4f       	sbci	r31, 0xFF	; 255
    2168:	de 01       	movw	r26, r28
    216a:	a4 5b       	subi	r26, 0xB4	; 180
    216c:	bf 4f       	sbci	r27, 0xFF	; 255
    216e:	8d 91       	ld	r24, X+
    2170:	9d 91       	ld	r25, X+
    2172:	0d 90       	ld	r0, X+
    2174:	bc 91       	ld	r27, X
    2176:	a0 2d       	mov	r26, r0
    2178:	80 83       	st	Z, r24
    217a:	91 83       	std	Z+1, r25	; 0x01
    217c:	a2 83       	std	Z+2, r26	; 0x02
    217e:	b3 83       	std	Z+3, r27	; 0x03
    2180:	cb 5d       	subi	r28, 0xDB	; 219
    2182:	dd 4f       	sbci	r29, 0xFD	; 253
    2184:	18 82       	st	Y, r1
    2186:	80 e0       	ldi	r24, 0x00	; 0
    2188:	df 91       	pop	r29
    218a:	cf 91       	pop	r28
    218c:	1f 91       	pop	r17
    218e:	ff 90       	pop	r15
    2190:	ef 90       	pop	r14
    2192:	df 90       	pop	r13
    2194:	cf 90       	pop	r12
    2196:	08 95       	ret

00002198 <ESP8266_WifiDisconnect>:
    2198:	2e ef       	ldi	r18, 0xFE	; 254
    219a:	33 e0       	ldi	r19, 0x03	; 3
    219c:	47 e0       	ldi	r20, 0x07	; 7
    219e:	54 e0       	ldi	r21, 0x04	; 4
    21a0:	61 e0       	ldi	r22, 0x01	; 1
    21a2:	a5 cf       	rjmp	.-182    	; 0x20ee <SendCommand>
    21a4:	08 95       	ret

000021a6 <ESP8266_WifiGetConnected>:
    21a6:	2b e8       	ldi	r18, 0x8B	; 139
    21a8:	33 e0       	ldi	r19, 0x03	; 3
    21aa:	42 e1       	ldi	r20, 0x12	; 18
    21ac:	54 e0       	ldi	r21, 0x04	; 4
    21ae:	63 e1       	ldi	r22, 0x13	; 19
    21b0:	9e cf       	rjmp	.-196    	; 0x20ee <SendCommand>
    21b2:	08 95       	ret

000021b4 <ESP8266_GetSTAIP>:
    21b4:	cf 93       	push	r28
    21b6:	df 93       	push	r29
    21b8:	ec 01       	movw	r28, r24
    21ba:	22 e2       	ldi	r18, 0x22	; 34
    21bc:	34 e0       	ldi	r19, 0x04	; 4
    21be:	4e e2       	ldi	r20, 0x2E	; 46
    21c0:	54 e0       	ldi	r21, 0x04	; 4
    21c2:	66 e1       	ldi	r22, 0x16	; 22
    21c4:	94 df       	rcall	.-216    	; 0x20ee <SendCommand>
    21c6:	fe 01       	movw	r30, r28
    21c8:	eb 5d       	subi	r30, 0xDB	; 219
    21ca:	fd 4f       	sbci	r31, 0xFD	; 253
    21cc:	80 81       	ld	r24, Z
    21ce:	81 11       	cpse	r24, r1
    21d0:	06 c0       	rjmp	.+12     	; 0x21de <ESP8266_GetSTAIP+0x2a>
    21d2:	cf 5d       	subi	r28, 0xDF	; 223
    21d4:	dd 4f       	sbci	r29, 0xFD	; 253
    21d6:	98 81       	ld	r25, Y
    21d8:	9c 7f       	andi	r25, 0xFC	; 252
    21da:	9b 7f       	andi	r25, 0xFB	; 251
    21dc:	98 83       	st	Y, r25
    21de:	df 91       	pop	r29
    21e0:	cf 91       	pop	r28
    21e2:	08 95       	ret

000021e4 <ESP8266_WaitReady>:
    21e4:	0f 93       	push	r16
    21e6:	1f 93       	push	r17
    21e8:	cf 93       	push	r28
    21ea:	df 93       	push	r29
    21ec:	ec 01       	movw	r28, r24
    21ee:	8c 01       	movw	r16, r24
    21f0:	0e 5d       	subi	r16, 0xDE	; 222
    21f2:	1d 4f       	sbci	r17, 0xFD	; 253
    21f4:	f8 01       	movw	r30, r16
    21f6:	80 81       	ld	r24, Z
    21f8:	80 ff       	sbrs	r24, 0
    21fa:	11 c0       	rjmp	.+34     	; 0x221e <__stack+0x1f>
    21fc:	42 e0       	ldi	r20, 0x02	; 2
    21fe:	50 e0       	ldi	r21, 0x00	; 0
    2200:	6b ec       	ldi	r22, 0xCB	; 203
    2202:	73 e0       	ldi	r23, 0x03	; 3
    2204:	88 e6       	ldi	r24, 0x68	; 104
    2206:	96 e1       	ldi	r25, 0x16	; 22
    2208:	0e 94 13 02 	call	0x426	; 0x426 <BUFFER_Find>
    220c:	99 23       	and	r25, r25
    220e:	3c f0       	brlt	.+14     	; 0x221e <__stack+0x1f>
    2210:	fe 01       	movw	r30, r28
    2212:	ef 5d       	subi	r30, 0xDF	; 223
    2214:	fd 4f       	sbci	r31, 0xFD	; 253
    2216:	81 81       	ldd	r24, Z+1	; 0x01
    2218:	8e 7f       	andi	r24, 0xFE	; 254
    221a:	81 83       	std	Z+1, r24	; 0x01
    221c:	0a c0       	rjmp	.+20     	; 0x2232 <__stack+0x33>
    221e:	ce 01       	movw	r24, r28
    2220:	86 dc       	rcall	.-1780   	; 0x1b2e <ESP8266_Update>
    2222:	8c 81       	ldd	r24, Y+4	; 0x04
    2224:	9d 81       	ldd	r25, Y+5	; 0x05
    2226:	ae 81       	ldd	r26, Y+6	; 0x06
    2228:	bf 81       	ldd	r27, Y+7	; 0x07
    222a:	89 2b       	or	r24, r25
    222c:	8a 2b       	or	r24, r26
    222e:	8b 2b       	or	r24, r27
    2230:	09 f7       	brne	.-62     	; 0x21f4 <ESP8266_WaitReady+0x10>
    2232:	cb 5d       	subi	r28, 0xDB	; 219
    2234:	dd 4f       	sbci	r29, 0xFD	; 253
    2236:	18 82       	st	Y, r1
    2238:	80 e0       	ldi	r24, 0x00	; 0
    223a:	df 91       	pop	r29
    223c:	cf 91       	pop	r28
    223e:	1f 91       	pop	r17
    2240:	0f 91       	pop	r16
    2242:	08 95       	ret

00002244 <ESP8266_ServerEnable>:
    2244:	ef 92       	push	r14
    2246:	ff 92       	push	r15
    2248:	0f 93       	push	r16
    224a:	1f 93       	push	r17
    224c:	cf 93       	push	r28
    224e:	df 93       	push	r29
    2250:	cd b7       	in	r28, 0x3d	; 61
    2252:	de b7       	in	r29, 0x3e	; 62
    2254:	63 97       	sbiw	r28, 0x13	; 19
    2256:	0f b6       	in	r0, 0x3f	; 63
    2258:	f8 94       	cli
    225a:	de bf       	out	0x3e, r29	; 62
    225c:	0f be       	out	0x3f, r0	; 63
    225e:	cd bf       	out	0x3d, r28	; 61
    2260:	8c 01       	movw	r16, r24
    2262:	7f 93       	push	r23
    2264:	6f 93       	push	r22
    2266:	86 e9       	ldi	r24, 0x96	; 150
    2268:	94 e0       	ldi	r25, 0x04	; 4
    226a:	9f 93       	push	r25
    226c:	8f 93       	push	r24
    226e:	ce 01       	movw	r24, r28
    2270:	01 96       	adiw	r24, 0x01	; 1
    2272:	7c 01       	movw	r14, r24
    2274:	9f 93       	push	r25
    2276:	8f 93       	push	r24
    2278:	b4 d6       	rcall	.+3432   	; 0x2fe2 <sprintf>
    227a:	2a ea       	ldi	r18, 0xAA	; 170
    227c:	34 e0       	ldi	r19, 0x04	; 4
    227e:	a7 01       	movw	r20, r14
    2280:	66 e0       	ldi	r22, 0x06	; 6
    2282:	c8 01       	movw	r24, r16
    2284:	34 df       	rcall	.-408    	; 0x20ee <SendCommand>
    2286:	f8 2e       	mov	r15, r24
    2288:	0f 90       	pop	r0
    228a:	0f 90       	pop	r0
    228c:	0f 90       	pop	r0
    228e:	0f 90       	pop	r0
    2290:	0f 90       	pop	r0
    2292:	0f 90       	pop	r0
    2294:	88 23       	and	r24, r24
    2296:	29 f0       	breq	.+10     	; 0x22a2 <ESP8266_ServerEnable+0x5e>
    2298:	f8 01       	movw	r30, r16
    229a:	eb 5d       	subi	r30, 0xDB	; 219
    229c:	fd 4f       	sbci	r31, 0xFD	; 253
    229e:	f0 80       	ld	r15, Z
    22a0:	12 c0       	rjmp	.+36     	; 0x22c6 <ESP8266_ServerEnable+0x82>
    22a2:	c8 01       	movw	r24, r16
    22a4:	9f df       	rcall	.-194    	; 0x21e4 <ESP8266_WaitReady>
    22a6:	f8 01       	movw	r30, r16
    22a8:	ee 5d       	subi	r30, 0xDE	; 222
    22aa:	fd 4f       	sbci	r31, 0xFD	; 253
    22ac:	80 81       	ld	r24, Z
    22ae:	81 fd       	sbrc	r24, 1
    22b0:	06 c0       	rjmp	.+12     	; 0x22be <ESP8266_ServerEnable+0x7a>
    22b2:	33 96       	adiw	r30, 0x03	; 3
    22b4:	81 e0       	ldi	r24, 0x01	; 1
    22b6:	80 83       	st	Z, r24
    22b8:	ff 24       	eor	r15, r15
    22ba:	f3 94       	inc	r15
    22bc:	04 c0       	rjmp	.+8      	; 0x22c6 <ESP8266_ServerEnable+0x82>
    22be:	f8 01       	movw	r30, r16
    22c0:	eb 5d       	subi	r30, 0xDB	; 219
    22c2:	fd 4f       	sbci	r31, 0xFD	; 253
    22c4:	10 82       	st	Z, r1
    22c6:	8f 2d       	mov	r24, r15
    22c8:	63 96       	adiw	r28, 0x13	; 19
    22ca:	0f b6       	in	r0, 0x3f	; 63
    22cc:	f8 94       	cli
    22ce:	de bf       	out	0x3e, r29	; 62
    22d0:	0f be       	out	0x3f, r0	; 63
    22d2:	cd bf       	out	0x3d, r28	; 61
    22d4:	df 91       	pop	r29
    22d6:	cf 91       	pop	r28
    22d8:	1f 91       	pop	r17
    22da:	0f 91       	pop	r16
    22dc:	ff 90       	pop	r15
    22de:	ef 90       	pop	r14
    22e0:	08 95       	ret

000022e2 <ESP8266_GetAP>:
    22e2:	cf 93       	push	r28
    22e4:	df 93       	push	r29
    22e6:	ec 01       	movw	r28, r24
    22e8:	27 e2       	ldi	r18, 0x27	; 39
    22ea:	35 e0       	ldi	r19, 0x05	; 5
    22ec:	47 ed       	ldi	r20, 0xD7	; 215
    22ee:	54 e0       	ldi	r21, 0x04	; 4
    22f0:	6c e0       	ldi	r22, 0x0C	; 12
    22f2:	fd de       	rcall	.-518    	; 0x20ee <SendCommand>
    22f4:	88 23       	and	r24, r24
    22f6:	21 f0       	breq	.+8      	; 0x2300 <ESP8266_GetAP+0x1e>
    22f8:	cb 5d       	subi	r28, 0xDB	; 219
    22fa:	dd 4f       	sbci	r29, 0xFD	; 253
    22fc:	88 81       	ld	r24, Y
    22fe:	02 c0       	rjmp	.+4      	; 0x2304 <ESP8266_GetAP+0x22>
    2300:	ce 01       	movw	r24, r28
    2302:	70 df       	rcall	.-288    	; 0x21e4 <ESP8266_WaitReady>
    2304:	df 91       	pop	r29
    2306:	cf 91       	pop	r28
    2308:	08 95       	ret

0000230a <ESP8266_SetMode>:
    230a:	df 92       	push	r13
    230c:	ef 92       	push	r14
    230e:	ff 92       	push	r15
    2310:	0f 93       	push	r16
    2312:	1f 93       	push	r17
    2314:	cf 93       	push	r28
    2316:	df 93       	push	r29
    2318:	cd b7       	in	r28, 0x3d	; 61
    231a:	de b7       	in	r29, 0x3e	; 62
    231c:	61 97       	sbiw	r28, 0x11	; 17
    231e:	0f b6       	in	r0, 0x3f	; 63
    2320:	f8 94       	cli
    2322:	de bf       	out	0x3e, r29	; 62
    2324:	0f be       	out	0x3f, r0	; 63
    2326:	cd bf       	out	0x3d, r28	; 61
    2328:	8c 01       	movw	r16, r24
    232a:	d6 2e       	mov	r13, r22
    232c:	1f 92       	push	r1
    232e:	6f 93       	push	r22
    2330:	83 ee       	ldi	r24, 0xE3	; 227
    2332:	94 e0       	ldi	r25, 0x04	; 4
    2334:	9f 93       	push	r25
    2336:	8f 93       	push	r24
    2338:	ce 01       	movw	r24, r28
    233a:	01 96       	adiw	r24, 0x01	; 1
    233c:	7c 01       	movw	r14, r24
    233e:	9f 93       	push	r25
    2340:	8f 93       	push	r24
    2342:	4f d6       	rcall	.+3230   	; 0x2fe2 <sprintf>
    2344:	26 ef       	ldi	r18, 0xF6	; 246
    2346:	34 e0       	ldi	r19, 0x04	; 4
    2348:	a7 01       	movw	r20, r14
    234a:	65 e0       	ldi	r22, 0x05	; 5
    234c:	c8 01       	movw	r24, r16
    234e:	cf de       	rcall	.-610    	; 0x20ee <SendCommand>
    2350:	0f 90       	pop	r0
    2352:	0f 90       	pop	r0
    2354:	0f 90       	pop	r0
    2356:	0f 90       	pop	r0
    2358:	0f 90       	pop	r0
    235a:	0f 90       	pop	r0
    235c:	88 23       	and	r24, r24
    235e:	29 f0       	breq	.+10     	; 0x236a <ESP8266_SetMode+0x60>
    2360:	f8 01       	movw	r30, r16
    2362:	eb 5d       	subi	r30, 0xDB	; 219
    2364:	fd 4f       	sbci	r31, 0xFD	; 253
    2366:	80 81       	ld	r24, Z
    2368:	13 c0       	rjmp	.+38     	; 0x2390 <ESP8266_SetMode+0x86>
    236a:	f8 01       	movw	r30, r16
    236c:	e5 53       	subi	r30, 0x35	; 53
    236e:	fe 4f       	sbci	r31, 0xFE	; 254
    2370:	d0 82       	st	Z, r13
    2372:	c8 01       	movw	r24, r16
    2374:	37 df       	rcall	.-402    	; 0x21e4 <ESP8266_WaitReady>
    2376:	f8 01       	movw	r30, r16
    2378:	e4 53       	subi	r30, 0x34	; 52
    237a:	fe 4f       	sbci	r31, 0xFE	; 254
    237c:	80 81       	ld	r24, Z
    237e:	8d 15       	cp	r24, r13
    2380:	29 f0       	breq	.+10     	; 0x238c <ESP8266_SetMode+0x82>
    2382:	e7 5a       	subi	r30, 0xA7	; 167
    2384:	ff 4f       	sbci	r31, 0xFF	; 255
    2386:	81 e0       	ldi	r24, 0x01	; 1
    2388:	80 83       	st	Z, r24
    238a:	02 c0       	rjmp	.+4      	; 0x2390 <ESP8266_SetMode+0x86>
    238c:	c8 01       	movw	r24, r16
    238e:	a9 df       	rcall	.-174    	; 0x22e2 <ESP8266_GetAP>
    2390:	61 96       	adiw	r28, 0x11	; 17
    2392:	0f b6       	in	r0, 0x3f	; 63
    2394:	f8 94       	cli
    2396:	de bf       	out	0x3e, r29	; 62
    2398:	0f be       	out	0x3f, r0	; 63
    239a:	cd bf       	out	0x3d, r28	; 61
    239c:	df 91       	pop	r29
    239e:	cf 91       	pop	r28
    23a0:	1f 91       	pop	r17
    23a2:	0f 91       	pop	r16
    23a4:	ff 90       	pop	r15
    23a6:	ef 90       	pop	r14
    23a8:	df 90       	pop	r13
    23aa:	08 95       	ret

000023ac <ESP8266_RequestSendData>:
    23ac:	0f 93       	push	r16
    23ae:	1f 93       	push	r17
    23b0:	cf 93       	push	r28
    23b2:	df 93       	push	r29
    23b4:	ec 01       	movw	r28, r24
    23b6:	8b 01       	movw	r16, r22
    23b8:	8c 81       	ldd	r24, Y+4	; 0x04
    23ba:	9d 81       	ldd	r25, Y+5	; 0x05
    23bc:	ae 81       	ldd	r26, Y+6	; 0x06
    23be:	bf 81       	ldd	r27, Y+7	; 0x07
    23c0:	89 2b       	or	r24, r25
    23c2:	8a 2b       	or	r24, r26
    23c4:	8b 2b       	or	r24, r27
    23c6:	39 f0       	breq	.+14     	; 0x23d6 <ESP8266_RequestSendData+0x2a>
    23c8:	ce 01       	movw	r24, r28
    23ca:	b1 db       	rcall	.-2206   	; 0x1b2e <ESP8266_Update>
    23cc:	cb 5d       	subi	r28, 0xDB	; 219
    23ce:	dd 4f       	sbci	r29, 0xFD	; 253
    23d0:	87 e0       	ldi	r24, 0x07	; 7
    23d2:	88 83       	st	Y, r24
    23d4:	33 c0       	rjmp	.+102    	; 0x243c <ESP8266_RequestSendData+0x90>
    23d6:	fb 01       	movw	r30, r22
    23d8:	81 81       	ldd	r24, Z+1	; 0x01
    23da:	80 5d       	subi	r24, 0xD0	; 208
    23dc:	81 83       	std	Z+1, r24	; 0x01
    23de:	6d e0       	ldi	r22, 0x0D	; 13
    23e0:	70 e0       	ldi	r23, 0x00	; 0
    23e2:	88 e7       	ldi	r24, 0x78	; 120
    23e4:	95 e0       	ldi	r25, 0x05	; 5
    23e6:	6b d1       	rcall	.+726    	; 0x26be <ESP8266_LL_USARTSend>
    23e8:	61 e0       	ldi	r22, 0x01	; 1
    23ea:	70 e0       	ldi	r23, 0x00	; 0
    23ec:	c8 01       	movw	r24, r16
    23ee:	01 96       	adiw	r24, 0x01	; 1
    23f0:	66 d1       	rcall	.+716    	; 0x26be <ESP8266_LL_USARTSend>
    23f2:	67 e0       	ldi	r22, 0x07	; 7
    23f4:	70 e0       	ldi	r23, 0x00	; 0
    23f6:	86 e8       	ldi	r24, 0x86	; 134
    23f8:	95 e0       	ldi	r25, 0x05	; 5
    23fa:	61 d1       	rcall	.+706    	; 0x26be <ESP8266_LL_USARTSend>
    23fc:	f8 01       	movw	r30, r16
    23fe:	81 81       	ldd	r24, Z+1	; 0x01
    2400:	80 53       	subi	r24, 0x30	; 48
    2402:	81 83       	std	Z+1, r24	; 0x01
    2404:	2e e8       	ldi	r18, 0x8E	; 142
    2406:	35 e0       	ldi	r19, 0x05	; 5
    2408:	40 e0       	ldi	r20, 0x00	; 0
    240a:	50 e0       	ldi	r21, 0x00	; 0
    240c:	68 e0       	ldi	r22, 0x08	; 8
    240e:	ce 01       	movw	r24, r28
    2410:	6e de       	rcall	.-804    	; 0x20ee <SendCommand>
    2412:	88 23       	and	r24, r24
    2414:	21 f0       	breq	.+8      	; 0x241e <ESP8266_RequestSendData+0x72>
    2416:	cb 5d       	subi	r28, 0xDB	; 219
    2418:	dd 4f       	sbci	r29, 0xFD	; 253
    241a:	88 81       	ld	r24, Y
    241c:	0f c0       	rjmp	.+30     	; 0x243c <ESP8266_RequestSendData+0x90>
    241e:	81 e0       	ldi	r24, 0x01	; 1
    2420:	f8 01       	movw	r30, r16
    2422:	82 8b       	std	Z+18, r24	; 0x12
    2424:	fe 01       	movw	r30, r28
    2426:	ef 5d       	subi	r30, 0xDF	; 223
    2428:	fd 4f       	sbci	r31, 0xFD	; 253
    242a:	81 81       	ldd	r24, Z+1	; 0x01
    242c:	81 60       	ori	r24, 0x01	; 1
    242e:	81 83       	std	Z+1, r24	; 0x01
    2430:	32 97       	sbiw	r30, 0x02	; 2
    2432:	11 83       	std	Z+1, r17	; 0x01
    2434:	00 83       	st	Z, r16
    2436:	cb 5d       	subi	r28, 0xDB	; 219
    2438:	dd 4f       	sbci	r29, 0xFD	; 253
    243a:	88 81       	ld	r24, Y
    243c:	df 91       	pop	r29
    243e:	cf 91       	pop	r28
    2440:	1f 91       	pop	r17
    2442:	0f 91       	pop	r16
    2444:	08 95       	ret

00002446 <ESP8266_WifiConnect>:
    2446:	cf 92       	push	r12
    2448:	df 92       	push	r13
    244a:	ef 92       	push	r14
    244c:	ff 92       	push	r15
    244e:	0f 93       	push	r16
    2450:	1f 93       	push	r17
    2452:	cf 93       	push	r28
    2454:	df 93       	push	r29
    2456:	ec 01       	movw	r28, r24
    2458:	6b 01       	movw	r12, r22
    245a:	7a 01       	movw	r14, r20
    245c:	0c 81       	ldd	r16, Y+4	; 0x04
    245e:	1d 81       	ldd	r17, Y+5	; 0x05
    2460:	2e 81       	ldd	r18, Y+6	; 0x06
    2462:	3f 81       	ldd	r19, Y+7	; 0x07
    2464:	01 2b       	or	r16, r17
    2466:	02 2b       	or	r16, r18
    2468:	03 2b       	or	r16, r19
    246a:	31 f0       	breq	.+12     	; 0x2478 <ESP8266_WifiConnect+0x32>
    246c:	60 db       	rcall	.-2368   	; 0x1b2e <ESP8266_Update>
    246e:	cb 5d       	subi	r28, 0xDB	; 219
    2470:	dd 4f       	sbci	r29, 0xFD	; 253
    2472:	87 e0       	ldi	r24, 0x07	; 7
    2474:	88 83       	st	Y, r24
    2476:	1c c0       	rjmp	.+56     	; 0x24b0 <ESP8266_WifiConnect+0x6a>
    2478:	6e e0       	ldi	r22, 0x0E	; 14
    247a:	70 e0       	ldi	r23, 0x00	; 0
    247c:	8e ed       	ldi	r24, 0xDE	; 222
    247e:	95 e0       	ldi	r25, 0x05	; 5
    2480:	1e d1       	rcall	.+572    	; 0x26be <ESP8266_LL_USARTSend>
    2482:	c6 01       	movw	r24, r12
    2484:	0e 94 78 03 	call	0x6f0	; 0x6f0 <EscapeStringAndSend>
    2488:	63 e0       	ldi	r22, 0x03	; 3
    248a:	70 e0       	ldi	r23, 0x00	; 0
    248c:	8f e9       	ldi	r24, 0x9F	; 159
    248e:	96 e0       	ldi	r25, 0x06	; 6
    2490:	16 d1       	rcall	.+556    	; 0x26be <ESP8266_LL_USARTSend>
    2492:	c7 01       	movw	r24, r14
    2494:	0e 94 78 03 	call	0x6f0	; 0x6f0 <EscapeStringAndSend>
    2498:	63 e0       	ldi	r22, 0x03	; 3
    249a:	70 e0       	ldi	r23, 0x00	; 0
    249c:	8d ee       	ldi	r24, 0xED	; 237
    249e:	95 e0       	ldi	r25, 0x05	; 5
    24a0:	0e d1       	rcall	.+540    	; 0x26be <ESP8266_LL_USARTSend>
    24a2:	23 e8       	ldi	r18, 0x83	; 131
    24a4:	33 e0       	ldi	r19, 0x03	; 3
    24a6:	40 e0       	ldi	r20, 0x00	; 0
    24a8:	50 e0       	ldi	r21, 0x00	; 0
    24aa:	63 e0       	ldi	r22, 0x03	; 3
    24ac:	ce 01       	movw	r24, r28
    24ae:	1f de       	rcall	.-962    	; 0x20ee <SendCommand>
    24b0:	df 91       	pop	r29
    24b2:	cf 91       	pop	r28
    24b4:	1f 91       	pop	r17
    24b6:	0f 91       	pop	r16
    24b8:	ff 90       	pop	r15
    24ba:	ef 90       	pop	r14
    24bc:	df 90       	pop	r13
    24be:	cf 90       	pop	r12
    24c0:	08 95       	ret

000024c2 <ESP8266_StartClientConnectionTCP>:

/******************************************/
/*               TCP CLIENT               */
/******************************************/
ESP8266_Result_t ESP8266_StartClientConnectionTCP(ESP8266_t* ESP8266, char* name, char* location, uint16_t port, void* user_parameters) {
    24c2:	4f 92       	push	r4
    24c4:	5f 92       	push	r5
    24c6:	6f 92       	push	r6
    24c8:	7f 92       	push	r7
    24ca:	8f 92       	push	r8
    24cc:	9f 92       	push	r9
    24ce:	af 92       	push	r10
    24d0:	bf 92       	push	r11
    24d2:	cf 92       	push	r12
    24d4:	ef 92       	push	r14
    24d6:	ff 92       	push	r15
    24d8:	0f 93       	push	r16
    24da:	1f 93       	push	r17
    24dc:	cf 93       	push	r28
    24de:	df 93       	push	r29
    24e0:	cd b7       	in	r28, 0x3d	; 61
    24e2:	de b7       	in	r29, 0x3e	; 62
    24e4:	27 97       	sbiw	r28, 0x07	; 7
    24e6:	0f b6       	in	r0, 0x3f	; 63
    24e8:	f8 94       	cli
    24ea:	de bf       	out	0x3e, r29	; 62
    24ec:	0f be       	out	0x3f, r0	; 63
    24ee:	cd bf       	out	0x3d, r28	; 61
    24f0:	7c 01       	movw	r14, r24
    24f2:	4b 01       	movw	r8, r22
    24f4:	5a 01       	movw	r10, r20
    24f6:	38 01       	movw	r6, r16
	int8_t conn = -1;
    24f8:	8f ef       	ldi	r24, 0xFF	; 255
    24fa:	89 83       	std	Y+1, r24	; 0x01
	uint8_t i = 0;
	
	/* Check if IDLE */
	ESP8266_CHECK_IDLE(ESP8266);
    24fc:	f7 01       	movw	r30, r14
    24fe:	84 81       	ldd	r24, Z+4	; 0x04
    2500:	95 81       	ldd	r25, Z+5	; 0x05
    2502:	a6 81       	ldd	r26, Z+6	; 0x06
    2504:	b7 81       	ldd	r27, Z+7	; 0x07
    2506:	89 2b       	or	r24, r25
    2508:	8a 2b       	or	r24, r26
    250a:	8b 2b       	or	r24, r27
    250c:	49 f0       	breq	.+18     	; 0x2520 <ESP8266_StartClientConnectionTCP+0x5e>
    250e:	c7 01       	movw	r24, r14
    2510:	0e db       	rcall	.-2532   	; 0x1b2e <ESP8266_Update>
    2512:	f7 01       	movw	r30, r14
    2514:	eb 5d       	subi	r30, 0xDB	; 219
    2516:	fd 4f       	sbci	r31, 0xFD	; 253
    2518:	87 e0       	ldi	r24, 0x07	; 7
    251a:	80 83       	st	Z, r24
    251c:	17 e0       	ldi	r17, 0x07	; 7
    251e:	b8 c0       	rjmp	.+368    	; 0x2690 <ESP8266_StartClientConnectionTCP+0x1ce>
	
	/* Check if connected to network */
	ESP8266_CHECK_WIFICONNECTED(ESP8266);
    2520:	f7 01       	movw	r30, r14
    2522:	ee 5d       	subi	r30, 0xDE	; 222
    2524:	fd 4f       	sbci	r31, 0xFD	; 253
    2526:	80 81       	ld	r24, Z
    2528:	82 ff       	sbrs	r24, 2
    252a:	06 c0       	rjmp	.+12     	; 0x2538 <ESP8266_StartClientConnectionTCP+0x76>
	
	/* Find available connection */
	for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {
		if (!ESP8266->Connection[i].Active) {
    252c:	ea 5c       	subi	r30, 0xCA	; 202
    252e:	f1 40       	sbci	r31, 0x01	; 1
    2530:	80 81       	ld	r24, Z
    2532:	81 11       	cpse	r24, r1
    2534:	08 c0       	rjmp	.+16     	; 0x2546 <ESP8266_StartClientConnectionTCP+0x84>
    2536:	a8 c0       	rjmp	.+336    	; 0x2688 <ESP8266_StartClientConnectionTCP+0x1c6>
	
	/* Check if IDLE */
	ESP8266_CHECK_IDLE(ESP8266);
	
	/* Check if connected to network */
	ESP8266_CHECK_WIFICONNECTED(ESP8266);
    2538:	f7 01       	movw	r30, r14
    253a:	eb 5d       	subi	r30, 0xDB	; 219
    253c:	fd 4f       	sbci	r31, 0xFD	; 253
    253e:	86 e0       	ldi	r24, 0x06	; 6
    2540:	80 83       	st	Z, r24
    2542:	16 e0       	ldi	r17, 0x06	; 6
    2544:	a5 c0       	rjmp	.+330    	; 0x2690 <ESP8266_StartClientConnectionTCP+0x1ce>
    2546:	f7 01       	movw	r30, r14
    2548:	e5 56       	subi	r30, 0x65	; 101
    254a:	ff 4f       	sbci	r31, 0xFF	; 255
	
	/* Find available connection */
	for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {
    254c:	01 e0       	ldi	r16, 0x01	; 1
		if (!ESP8266->Connection[i].Active) {
    254e:	80 81       	ld	r24, Z
    2550:	81 11       	cpse	r24, r1
    2552:	05 c0       	rjmp	.+10     	; 0x255e <ESP8266_StartClientConnectionTCP+0x9c>
			/* Save */
			conn = i;
    2554:	c0 2e       	mov	r12, r16
    2556:	09 83       	std	Y+1, r16	; 0x01
			break;
		}
	}
	
	/* Try it */
	if (conn != -1) {
    2558:	0f 3f       	cpi	r16, 0xFF	; 255
    255a:	39 f4       	brne	.+14     	; 0x256a <ESP8266_StartClientConnectionTCP+0xa8>
    255c:	8e c0       	rjmp	.+284    	; 0x267a <ESP8266_StartClientConnectionTCP+0x1b8>
	
	/* Check if connected to network */
	ESP8266_CHECK_WIFICONNECTED(ESP8266);
	
	/* Find available connection */
	for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {
    255e:	0f 5f       	subi	r16, 0xFF	; 255
    2560:	ed 5b       	subi	r30, 0xBD	; 189
    2562:	ff 4f       	sbci	r31, 0xFF	; 255
    2564:	05 30       	cpi	r16, 0x05	; 5
    2566:	99 f7       	brne	.-26     	; 0x254e <ESP8266_StartClientConnectionTCP+0x8c>
    2568:	88 c0       	rjmp	.+272    	; 0x267a <ESP8266_StartClientConnectionTCP+0x1b8>
	/* Try it */
	if (conn != -1) {
		char tmp[6];
		
		/* Format port */
		Int2String(tmp, port);
    256a:	c9 01       	movw	r24, r18
	return 0;
}

static
void Int2String(char* ptr, long int num) {
	sprintf(ptr, "%ld", num);
    256c:	1f 92       	push	r1
    256e:	1f 92       	push	r1
    2570:	9f 93       	push	r25
    2572:	2f 93       	push	r18
    2574:	86 e8       	ldi	r24, 0x86	; 134
    2576:	94 e0       	ldi	r25, 0x04	; 4
    2578:	9f 93       	push	r25
    257a:	8f 93       	push	r24
    257c:	2e 01       	movw	r4, r28
    257e:	f2 e0       	ldi	r31, 0x02	; 2
    2580:	4f 0e       	add	r4, r31
    2582:	51 1c       	adc	r5, r1
    2584:	5f 92       	push	r5
    2586:	4f 92       	push	r4
    2588:	2c d5       	rcall	.+2648   	; 0x2fe2 <sprintf>
		
		/* Format port */
		Int2String(tmp, port);
		
		/* Go to ASCII number */
		conn += '0';
    258a:	89 81       	ldd	r24, Y+1	; 0x01
    258c:	80 5d       	subi	r24, 0xD0	; 208
    258e:	89 83       	std	Y+1, r24	; 0x01
		
		/* Send separate */
		ESP8266_USARTSENDSTRING("AT+CIPSTART=");
    2590:	6c e0       	ldi	r22, 0x0C	; 12
    2592:	70 e0       	ldi	r23, 0x00	; 0
    2594:	84 e8       	ldi	r24, 0x84	; 132
    2596:	96 e0       	ldi	r25, 0x06	; 6
    2598:	92 d0       	rcall	.+292    	; 0x26be <ESP8266_LL_USARTSend>
		ESP8266_USARTSENDCHAR(&conn);
    259a:	61 e0       	ldi	r22, 0x01	; 1
    259c:	70 e0       	ldi	r23, 0x00	; 0
    259e:	ce 01       	movw	r24, r28
    25a0:	01 96       	adiw	r24, 0x01	; 1
    25a2:	8d d0       	rcall	.+282    	; 0x26be <ESP8266_LL_USARTSend>
		ESP8266_USARTSENDSTRING(",\"TCP\",\"");
    25a4:	68 e0       	ldi	r22, 0x08	; 8
    25a6:	70 e0       	ldi	r23, 0x00	; 0
    25a8:	81 e9       	ldi	r24, 0x91	; 145
    25aa:	96 e0       	ldi	r25, 0x06	; 6
    25ac:	88 d0       	rcall	.+272    	; 0x26be <ESP8266_LL_USARTSend>
		ESP8266_USARTSENDSTRING(location);
    25ae:	f5 01       	movw	r30, r10
    25b0:	01 90       	ld	r0, Z+
    25b2:	00 20       	and	r0, r0
    25b4:	e9 f7       	brne	.-6      	; 0x25b0 <ESP8266_StartClientConnectionTCP+0xee>
    25b6:	31 97       	sbiw	r30, 0x01	; 1
    25b8:	bf 01       	movw	r22, r30
    25ba:	6a 19       	sub	r22, r10
    25bc:	7b 09       	sbc	r23, r11
    25be:	c5 01       	movw	r24, r10
    25c0:	7e d0       	rcall	.+252    	; 0x26be <ESP8266_LL_USARTSend>
		ESP8266_USARTSENDSTRING("\",");
    25c2:	62 e0       	ldi	r22, 0x02	; 2
    25c4:	70 e0       	ldi	r23, 0x00	; 0
    25c6:	82 e7       	ldi	r24, 0x72	; 114
    25c8:	96 e0       	ldi	r25, 0x06	; 6
    25ca:	79 d0       	rcall	.+242    	; 0x26be <ESP8266_LL_USARTSend>
		ESP8266_USARTSENDSTRING(tmp);
    25cc:	f2 01       	movw	r30, r4
    25ce:	01 90       	ld	r0, Z+
    25d0:	00 20       	and	r0, r0
    25d2:	e9 f7       	brne	.-6      	; 0x25ce <ESP8266_StartClientConnectionTCP+0x10c>
    25d4:	31 97       	sbiw	r30, 0x01	; 1
    25d6:	bf 01       	movw	r22, r30
    25d8:	64 19       	sub	r22, r4
    25da:	75 09       	sbc	r23, r5
    25dc:	c2 01       	movw	r24, r4
    25de:	6f d0       	rcall	.+222    	; 0x26be <ESP8266_LL_USARTSend>
		ESP8266_USARTSENDSTRING("\r\n");
    25e0:	62 e0       	ldi	r22, 0x02	; 2
    25e2:	70 e0       	ldi	r23, 0x00	; 0
    25e4:	84 e8       	ldi	r24, 0x84	; 132
    25e6:	99 e0       	ldi	r25, 0x09	; 9
    25e8:	6a d0       	rcall	.+212    	; 0x26be <ESP8266_LL_USARTSend>
		
		/* Send command */
		if (SendCommand(ESP8266, ESP8266_COMMAND_CIPSTART, NULL, NULL) != ESP_OK) {
    25ea:	20 e0       	ldi	r18, 0x00	; 0
    25ec:	30 e0       	ldi	r19, 0x00	; 0
    25ee:	40 e0       	ldi	r20, 0x00	; 0
    25f0:	50 e0       	ldi	r21, 0x00	; 0
    25f2:	6a e0       	ldi	r22, 0x0A	; 10
    25f4:	c7 01       	movw	r24, r14
    25f6:	7b dd       	rcall	.-1290   	; 0x20ee <SendCommand>
    25f8:	18 2f       	mov	r17, r24
    25fa:	0f b6       	in	r0, 0x3f	; 63
    25fc:	f8 94       	cli
    25fe:	de bf       	out	0x3e, r29	; 62
    2600:	0f be       	out	0x3f, r0	; 63
    2602:	cd bf       	out	0x3d, r28	; 61
    2604:	11 23       	and	r17, r17
    2606:	29 f0       	breq	.+10     	; 0x2612 <ESP8266_StartClientConnectionTCP+0x150>
			return ESP8266->Result;
    2608:	f7 01       	movw	r30, r14
    260a:	eb 5d       	subi	r30, 0xDB	; 219
    260c:	fd 4f       	sbci	r31, 0xFD	; 253
    260e:	10 81       	ld	r17, Z
    2610:	3f c0       	rjmp	.+126    	; 0x2690 <ESP8266_StartClientConnectionTCP+0x1ce>
		}
		
		/* Go back from ASCII number to real number */
		conn -= '0';
    2612:	29 81       	ldd	r18, Y+1	; 0x01
    2614:	20 53       	subi	r18, 0x30	; 48
		
		/* We are active now as client */
		ESP8266->Connection[i].Active = 1;
    2616:	e3 e4       	ldi	r30, 0x43	; 67
    2618:	0e 9f       	mul	r16, r30
    261a:	c0 01       	movw	r24, r0
    261c:	11 24       	eor	r1, r1
    261e:	57 01       	movw	r10, r14
    2620:	a8 0e       	add	r10, r24
    2622:	b9 1e       	adc	r11, r25
    2624:	f5 01       	movw	r30, r10
    2626:	e8 5a       	subi	r30, 0xA8	; 168
    2628:	ff 4f       	sbci	r31, 0xFF	; 255
    262a:	31 e0       	ldi	r19, 0x01	; 1
    262c:	30 83       	st	Z, r19
		ESP8266->Connection[i].Client = 1;
    262e:	32 96       	adiw	r30, 0x02	; 2
    2630:	30 83       	st	Z, r19
		ESP8266->Connection[i].Type = ESP8266_ConnectionType_TCP;
    2632:	37 96       	adiw	r30, 0x07	; 7
    2634:	10 82       	st	Z, r1
		ESP8266->Connection[i].TotalBytesReceived = 0;
    2636:	35 96       	adiw	r30, 0x05	; 5
    2638:	10 82       	st	Z, r1
    263a:	11 82       	std	Z+1, r1	; 0x01
    263c:	12 82       	std	Z+2, r1	; 0x02
    263e:	13 82       	std	Z+3, r1	; 0x03
		ESP8266->Connection[i].Number = conn;
    2640:	3d 97       	sbiw	r30, 0x0d	; 13
    2642:	20 83       	st	Z, r18
#if ESP8266_USE_SINGLE_CONNECTION_BUFFER == 1
		ESP8266->Connection[i].Data = ConnectionData;
    2644:	73 96       	adiw	r30, 0x13	; 19
    2646:	24 eb       	ldi	r18, 0xB4	; 180
    2648:	3a e0       	ldi	r19, 0x0A	; 10
    264a:	31 83       	std	Z+1, r19	; 0x01
    264c:	20 83       	st	Z, r18
#endif
		ESP8266->StartConnectionSent = i;
    264e:	f7 01       	movw	r30, r14
    2650:	ea 5e       	subi	r30, 0xEA	; 234
    2652:	fd 4f       	sbci	r31, 0xFD	; 253
    2654:	c0 82       	st	Z, r12
		
		/* Copy values */
		strncpy(ESP8266->Connection[i].Name, name, sizeof(ESP8266->Connection[i].Name));
    2656:	8a 58       	subi	r24, 0x8A	; 138
    2658:	9f 4f       	sbci	r25, 0xFF	; 255
    265a:	40 e2       	ldi	r20, 0x20	; 32
    265c:	50 e0       	ldi	r21, 0x00	; 0
    265e:	b4 01       	movw	r22, r8
    2660:	8e 0d       	add	r24, r14
    2662:	9f 1d       	adc	r25, r15
    2664:	2b d4       	rcall	.+2134   	; 0x2ebc <strncpy>
		ESP8266->Connection[i].UserParameters = user_parameters;
    2666:	f5 01       	movw	r30, r10
    2668:	ea 56       	subi	r30, 0x6A	; 106
    266a:	ff 4f       	sbci	r31, 0xFF	; 255
    266c:	71 82       	std	Z+1, r7	; 0x01
    266e:	60 82       	st	Z, r6
		
		/* Return OK */
		ESP8266_RETURNWITHSTATUS(ESP8266, ESP_OK);
    2670:	f7 01       	movw	r30, r14
    2672:	eb 5d       	subi	r30, 0xDB	; 219
    2674:	fd 4f       	sbci	r31, 0xFD	; 253
    2676:	10 82       	st	Z, r1
    2678:	0b c0       	rjmp	.+22     	; 0x2690 <ESP8266_StartClientConnectionTCP+0x1ce>
	}
	
	/* Return error */
	ESP8266_RETURNWITHSTATUS(ESP8266, ESP_ERROR);
    267a:	f7 01       	movw	r30, r14
    267c:	eb 5d       	subi	r30, 0xDB	; 219
    267e:	fd 4f       	sbci	r31, 0xFD	; 253
    2680:	81 e0       	ldi	r24, 0x01	; 1
    2682:	80 83       	st	Z, r24
    2684:	11 e0       	ldi	r17, 0x01	; 1
    2686:	04 c0       	rjmp	.+8      	; 0x2690 <ESP8266_StartClientConnectionTCP+0x1ce>
	
	/* Find available connection */
	for (i = 0; i < ESP8266_MAX_CONNECTIONS; i++) {
		if (!ESP8266->Connection[i].Active) {
			/* Save */
			conn = i;
    2688:	19 82       	std	Y+1, r1	; 0x01
    268a:	00 e0       	ldi	r16, 0x00	; 0
    268c:	c1 2c       	mov	r12, r1
    268e:	6d cf       	rjmp	.-294    	; 0x256a <ESP8266_StartClientConnectionTCP+0xa8>
		ESP8266_RETURNWITHSTATUS(ESP8266, ESP_OK);
	}
	
	/* Return error */
	ESP8266_RETURNWITHSTATUS(ESP8266, ESP_ERROR);
}
    2690:	81 2f       	mov	r24, r17
    2692:	27 96       	adiw	r28, 0x07	; 7
    2694:	0f b6       	in	r0, 0x3f	; 63
    2696:	f8 94       	cli
    2698:	de bf       	out	0x3e, r29	; 62
    269a:	0f be       	out	0x3f, r0	; 63
    269c:	cd bf       	out	0x3d, r28	; 61
    269e:	df 91       	pop	r29
    26a0:	cf 91       	pop	r28
    26a2:	1f 91       	pop	r17
    26a4:	0f 91       	pop	r16
    26a6:	ff 90       	pop	r15
    26a8:	ef 90       	pop	r14
    26aa:	cf 90       	pop	r12
    26ac:	bf 90       	pop	r11
    26ae:	af 90       	pop	r10
    26b0:	9f 90       	pop	r9
    26b2:	8f 90       	pop	r8
    26b4:	7f 90       	pop	r7
    26b6:	6f 90       	pop	r6
    26b8:	5f 90       	pop	r5
    26ba:	4f 90       	pop	r4
    26bc:	08 95       	ret

000026be <ESP8266_LL_USARTSend>:
	
	/* Return 0 = Successful */
	return 0;
}

uint8_t ESP8266_LL_USARTSend(uint8_t* data, uint16_t count) {
    26be:	cf 93       	push	r28
    26c0:	df 93       	push	r29
    26c2:	9c 01       	movw	r18, r24
	/* Wait till end */
	while ((UCSR1A & (1 << UDRE1)) == 0);
    26c4:	e8 ec       	ldi	r30, 0xC8	; 200
    26c6:	f0 e0       	ldi	r31, 0x00	; 0
    26c8:	90 81       	ld	r25, Z
    26ca:	95 ff       	sbrs	r25, 5
    26cc:	fd cf       	rjmp	.-6      	; 0x26c8 <ESP8266_LL_USARTSend+0xa>
    26ce:	d9 01       	movw	r26, r18
    26d0:	62 0f       	add	r22, r18
    26d2:	73 1f       	adc	r23, r19
	
	/* Send data via USART */
	while (count--) {
		/* Send character */
		UDR1 = *data++;
    26d4:	ce ec       	ldi	r28, 0xCE	; 206
    26d6:	d0 e0       	ldi	r29, 0x00	; 0

		/* Wait till done */
		while ((UCSR1A & (1 << UDRE1)) == 0);
    26d8:	e8 ec       	ldi	r30, 0xC8	; 200
    26da:	f0 e0       	ldi	r31, 0x00	; 0
    26dc:	05 c0       	rjmp	.+10     	; 0x26e8 <ESP8266_LL_USARTSend+0x2a>
	while ((UCSR1A & (1 << UDRE1)) == 0);
	
	/* Send data via USART */
	while (count--) {
		/* Send character */
		UDR1 = *data++;
    26de:	9d 91       	ld	r25, X+
    26e0:	98 83       	st	Y, r25

		/* Wait till done */
		while ((UCSR1A & (1 << UDRE1)) == 0);
    26e2:	90 81       	ld	r25, Z
    26e4:	95 ff       	sbrs	r25, 5
    26e6:	fd cf       	rjmp	.-6      	; 0x26e2 <ESP8266_LL_USARTSend+0x24>
uint8_t ESP8266_LL_USARTSend(uint8_t* data, uint16_t count) {
	/* Wait till end */
	while ((UCSR1A & (1 << UDRE1)) == 0);
	
	/* Send data via USART */
	while (count--) {
    26e8:	a6 17       	cp	r26, r22
    26ea:	b7 07       	cpc	r27, r23
    26ec:	c1 f7       	brne	.-16     	; 0x26de <ESP8266_LL_USARTSend+0x20>
		while ((UCSR1A & (1 << UDRE1)) == 0);
	}
	
	/* Return 0 = Successful */
	return 0;
}
    26ee:	80 e0       	ldi	r24, 0x00	; 0
    26f0:	df 91       	pop	r29
    26f2:	cf 91       	pop	r28
    26f4:	08 95       	ret

000026f6 <__vector_36>:

/* USART receive interrupt handler */
ISR(USART1_RX_vect) {
    26f6:	1f 92       	push	r1
    26f8:	0f 92       	push	r0
    26fa:	0f b6       	in	r0, 0x3f	; 63
    26fc:	0f 92       	push	r0
    26fe:	11 24       	eor	r1, r1
    2700:	0b b6       	in	r0, 0x3b	; 59
    2702:	0f 92       	push	r0
    2704:	2f 93       	push	r18
    2706:	3f 93       	push	r19
    2708:	4f 93       	push	r20
    270a:	5f 93       	push	r21
    270c:	6f 93       	push	r22
    270e:	7f 93       	push	r23
    2710:	8f 93       	push	r24
    2712:	9f 93       	push	r25
    2714:	af 93       	push	r26
    2716:	bf 93       	push	r27
    2718:	ef 93       	push	r30
    271a:	ff 93       	push	r31
    271c:	cf 93       	push	r28
    271e:	df 93       	push	r29
    2720:	1f 92       	push	r1
    2722:	cd b7       	in	r28, 0x3d	; 61
    2724:	de b7       	in	r29, 0x3e	; 62
	uint8_t ch = UDR1;
    2726:	80 91 ce 00 	lds	r24, 0x00CE
    272a:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send received character to ESP stack */
	ESP8266_DataReceived(&ch, 1);
    272c:	61 e0       	ldi	r22, 0x01	; 1
    272e:	70 e0       	ldi	r23, 0x00	; 0
    2730:	ce 01       	movw	r24, r28
    2732:	01 96       	adiw	r24, 0x01	; 1
    2734:	0e 94 db 05 	call	0xbb6	; 0xbb6 <ESP8266_DataReceived>
}
    2738:	0f 90       	pop	r0
    273a:	df 91       	pop	r29
    273c:	cf 91       	pop	r28
    273e:	ff 91       	pop	r31
    2740:	ef 91       	pop	r30
    2742:	bf 91       	pop	r27
    2744:	af 91       	pop	r26
    2746:	9f 91       	pop	r25
    2748:	8f 91       	pop	r24
    274a:	7f 91       	pop	r23
    274c:	6f 91       	pop	r22
    274e:	5f 91       	pop	r21
    2750:	4f 91       	pop	r20
    2752:	3f 91       	pop	r19
    2754:	2f 91       	pop	r18
    2756:	0f 90       	pop	r0
    2758:	0b be       	out	0x3b, r0	; 59
    275a:	0f 90       	pop	r0
    275c:	0f be       	out	0x3f, r0	; 63
    275e:	0f 90       	pop	r0
    2760:	1f 90       	pop	r1
    2762:	18 95       	reti

00002764 <Debug_Putc>:
	printf("Data successfully sent as client!\r\n");
}

/* Called when error returned trying to sent data */
void ESP8266_Callback_ClientConnectionDataSentError(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection) {
	printf("Error while sending data on connection %d!\r\n", Connection->Number);
    2764:	80 93 c6 00 	sts	0x00C6, r24
    2768:	e0 ec       	ldi	r30, 0xC0	; 192
    276a:	f0 e0       	ldi	r31, 0x00	; 0
    276c:	80 81       	ld	r24, Z
    276e:	85 ff       	sbrs	r24, 5
    2770:	fd cf       	rjmp	.-6      	; 0x276c <Debug_Putc+0x8>
    2772:	80 e0       	ldi	r24, 0x00	; 0
    2774:	90 e0       	ldi	r25, 0x00	; 0
    2776:	08 95       	ret

00002778 <TimerInit>:
    2778:	84 b5       	in	r24, 0x24	; 36
    277a:	82 60       	ori	r24, 0x02	; 2
    277c:	84 bd       	out	0x24, r24	; 36
    277e:	85 b5       	in	r24, 0x25	; 37
    2780:	83 60       	ori	r24, 0x03	; 3
    2782:	85 bd       	out	0x25, r24	; 37
    2784:	89 ef       	ldi	r24, 0xF9	; 249
    2786:	87 bd       	out	0x27, r24	; 39
    2788:	ee e6       	ldi	r30, 0x6E	; 110
    278a:	f0 e0       	ldi	r31, 0x00	; 0
    278c:	80 81       	ld	r24, Z
    278e:	82 60       	ori	r24, 0x02	; 2
    2790:	80 83       	st	Z, r24
    2792:	08 95       	ret

00002794 <__vector_21>:
    2794:	1f 92       	push	r1
    2796:	0f 92       	push	r0
    2798:	0f b6       	in	r0, 0x3f	; 63
    279a:	0f 92       	push	r0
    279c:	11 24       	eor	r1, r1
    279e:	0b b6       	in	r0, 0x3b	; 59
    27a0:	0f 92       	push	r0
    27a2:	2f 93       	push	r18
    27a4:	3f 93       	push	r19
    27a6:	4f 93       	push	r20
    27a8:	5f 93       	push	r21
    27aa:	6f 93       	push	r22
    27ac:	7f 93       	push	r23
    27ae:	8f 93       	push	r24
    27b0:	9f 93       	push	r25
    27b2:	af 93       	push	r26
    27b4:	bf 93       	push	r27
    27b6:	ef 93       	push	r30
    27b8:	ff 93       	push	r31
    27ba:	41 e0       	ldi	r20, 0x01	; 1
    27bc:	50 e0       	ldi	r21, 0x00	; 0
    27be:	60 e0       	ldi	r22, 0x00	; 0
    27c0:	70 e0       	ldi	r23, 0x00	; 0
    27c2:	80 e8       	ldi	r24, 0x80	; 128
    27c4:	96 e1       	ldi	r25, 0x16	; 22
    27c6:	0e 94 c7 05 	call	0xb8e	; 0xb8e <ESP8266_TimeUpdate>
    27ca:	ff 91       	pop	r31
    27cc:	ef 91       	pop	r30
    27ce:	bf 91       	pop	r27
    27d0:	af 91       	pop	r26
    27d2:	9f 91       	pop	r25
    27d4:	8f 91       	pop	r24
    27d6:	7f 91       	pop	r23
    27d8:	6f 91       	pop	r22
    27da:	5f 91       	pop	r21
    27dc:	4f 91       	pop	r20
    27de:	3f 91       	pop	r19
    27e0:	2f 91       	pop	r18
    27e2:	0f 90       	pop	r0
    27e4:	0b be       	out	0x3b, r0	; 59
    27e6:	0f 90       	pop	r0
    27e8:	0f be       	out	0x3f, r0	; 63
    27ea:	0f 90       	pop	r0
    27ec:	1f 90       	pop	r1
    27ee:	18 95       	reti

000027f0 <__vector_25>:
    27f0:	1f 92       	push	r1
    27f2:	0f 92       	push	r0
    27f4:	0f b6       	in	r0, 0x3f	; 63
    27f6:	0f 92       	push	r0
    27f8:	11 24       	eor	r1, r1
    27fa:	0b b6       	in	r0, 0x3b	; 59
    27fc:	0f 92       	push	r0
    27fe:	8f 93       	push	r24
    2800:	ef 93       	push	r30
    2802:	ff 93       	push	r31
    2804:	e6 ec       	ldi	r30, 0xC6	; 198
    2806:	f0 e0       	ldi	r31, 0x00	; 0
    2808:	80 81       	ld	r24, Z
    280a:	80 83       	st	Z, r24
    280c:	e0 ec       	ldi	r30, 0xC0	; 192
    280e:	f0 e0       	ldi	r31, 0x00	; 0
    2810:	80 81       	ld	r24, Z
    2812:	85 ff       	sbrs	r24, 5
    2814:	fd cf       	rjmp	.-6      	; 0x2810 <__vector_25+0x20>
    2816:	ff 91       	pop	r31
    2818:	ef 91       	pop	r30
    281a:	8f 91       	pop	r24
    281c:	0f 90       	pop	r0
    281e:	0b be       	out	0x3b, r0	; 59
    2820:	0f 90       	pop	r0
    2822:	0f be       	out	0x3f, r0	; 63
    2824:	0f 90       	pop	r0
    2826:	1f 90       	pop	r1
    2828:	18 95       	reti

0000282a <DebugUARTInit>:
    282a:	9b 01       	movw	r18, r22
    282c:	ac 01       	movw	r20, r24
    282e:	60 e0       	ldi	r22, 0x00	; 0
    2830:	79 e0       	ldi	r23, 0x09	; 9
    2832:	8d e3       	ldi	r24, 0x3D	; 61
    2834:	90 e0       	ldi	r25, 0x00	; 0
    2836:	b4 d1       	rcall	.+872    	; 0x2ba0 <__udivmodsi4>
    2838:	da 01       	movw	r26, r20
    283a:	c9 01       	movw	r24, r18
    283c:	01 97       	sbiw	r24, 0x01	; 1
    283e:	a1 09       	sbc	r26, r1
    2840:	b1 09       	sbc	r27, r1
    2842:	ac 01       	movw	r20, r24
    2844:	bd 01       	movw	r22, r26
    2846:	76 95       	lsr	r23
    2848:	67 95       	ror	r22
    284a:	57 95       	ror	r21
    284c:	47 95       	ror	r20
    284e:	85 2f       	mov	r24, r21
    2850:	99 27       	eor	r25, r25
    2852:	80 93 c5 00 	sts	0x00C5, r24
    2856:	40 93 c4 00 	sts	0x00C4, r20
    285a:	e0 ec       	ldi	r30, 0xC0	; 192
    285c:	f0 e0       	ldi	r31, 0x00	; 0
    285e:	80 81       	ld	r24, Z
    2860:	82 60       	ori	r24, 0x02	; 2
    2862:	80 83       	st	Z, r24
    2864:	e2 ec       	ldi	r30, 0xC2	; 194
    2866:	f0 e0       	ldi	r31, 0x00	; 0
    2868:	80 81       	ld	r24, Z
    286a:	86 60       	ori	r24, 0x06	; 6
    286c:	80 83       	st	Z, r24
    286e:	e1 ec       	ldi	r30, 0xC1	; 193
    2870:	f0 e0       	ldi	r31, 0x00	; 0
    2872:	80 81       	ld	r24, Z
    2874:	88 61       	ori	r24, 0x18	; 24
    2876:	80 83       	st	Z, r24
    2878:	80 81       	ld	r24, Z
    287a:	80 68       	ori	r24, 0x80	; 128
    287c:	80 83       	st	Z, r24
    287e:	08 95       	ret

00002880 <main>:
    2880:	86 e0       	ldi	r24, 0x06	; 6
    2882:	92 e0       	ldi	r25, 0x02	; 2
    2884:	90 93 ad 18 	sts	0x18AD, r25
    2888:	80 93 ac 18 	sts	0x18AC, r24
    288c:	60 e0       	ldi	r22, 0x00	; 0
    288e:	72 ec       	ldi	r23, 0xC2	; 194
    2890:	81 e0       	ldi	r24, 0x01	; 1
    2892:	90 e0       	ldi	r25, 0x00	; 0
    2894:	ca df       	rcall	.-108    	; 0x282a <DebugUARTInit>
    2896:	70 df       	rcall	.-288    	; 0x2778 <TimerInit>
    2898:	78 94       	sei
    289a:	82 eb       	ldi	r24, 0xB2	; 178
    289c:	96 e0       	ldi	r25, 0x06	; 6
    289e:	71 d3       	rcall	.+1762   	; 0x2f82 <puts>
    28a0:	03 c0       	rjmp	.+6      	; 0x28a8 <main+0x28>
    28a2:	86 ee       	ldi	r24, 0xE6	; 230
    28a4:	96 e0       	ldi	r25, 0x06	; 6
    28a6:	6d d3       	rcall	.+1754   	; 0x2f82 <puts>
    28a8:	40 e0       	ldi	r20, 0x00	; 0
    28aa:	52 ec       	ldi	r21, 0xC2	; 194
    28ac:	61 e0       	ldi	r22, 0x01	; 1
    28ae:	70 e0       	ldi	r23, 0x00	; 0
    28b0:	80 e8       	ldi	r24, 0x80	; 128
    28b2:	96 e1       	ldi	r25, 0x16	; 22
    28b4:	0e 94 9a 05 	call	0xb34	; 0xb34 <ESP8266_Init>
    28b8:	81 11       	cpse	r24, r1
    28ba:	f3 cf       	rjmp	.-26     	; 0x28a2 <main+0x22>
    28bc:	63 e0       	ldi	r22, 0x03	; 3
    28be:	80 e8       	ldi	r24, 0x80	; 128
    28c0:	96 e1       	ldi	r25, 0x16	; 22
    28c2:	23 dd       	rcall	.-1466   	; 0x230a <ESP8266_SetMode>
    28c4:	81 11       	cpse	r24, r1
    28c6:	fa cf       	rjmp	.-12     	; 0x28bc <main+0x3c>
    28c8:	60 e5       	ldi	r22, 0x50	; 80
    28ca:	70 e0       	ldi	r23, 0x00	; 0
    28cc:	80 e8       	ldi	r24, 0x80	; 128
    28ce:	96 e1       	ldi	r25, 0x16	; 22
    28d0:	b9 dc       	rcall	.-1678   	; 0x2244 <ESP8266_ServerEnable>
    28d2:	81 11       	cpse	r24, r1
    28d4:	f9 cf       	rjmp	.-14     	; 0x28c8 <main+0x48>
    28d6:	81 e1       	ldi	r24, 0x11	; 17
    28d8:	97 e0       	ldi	r25, 0x07	; 7
    28da:	53 d3       	rcall	.+1702   	; 0x2f82 <puts>
    28dc:	80 e8       	ldi	r24, 0x80	; 128
    28de:	96 e1       	ldi	r25, 0x16	; 22
    28e0:	5b dc       	rcall	.-1866   	; 0x2198 <ESP8266_WifiDisconnect>
    28e2:	80 e8       	ldi	r24, 0x80	; 128
    28e4:	96 e1       	ldi	r25, 0x16	; 22
    28e6:	7e dc       	rcall	.-1796   	; 0x21e4 <ESP8266_WaitReady>
    28e8:	4b e2       	ldi	r20, 0x2B	; 43
    28ea:	57 e0       	ldi	r21, 0x07	; 7
    28ec:	69 e3       	ldi	r22, 0x39	; 57
    28ee:	77 e0       	ldi	r23, 0x07	; 7
    28f0:	80 e8       	ldi	r24, 0x80	; 128
    28f2:	96 e1       	ldi	r25, 0x16	; 22
    28f4:	a8 dd       	rcall	.-1200   	; 0x2446 <ESP8266_WifiConnect>
    28f6:	80 e8       	ldi	r24, 0x80	; 128
    28f8:	96 e1       	ldi	r25, 0x16	; 22
    28fa:	74 dc       	rcall	.-1816   	; 0x21e4 <ESP8266_WaitReady>
    28fc:	80 e8       	ldi	r24, 0x80	; 128
    28fe:	96 e1       	ldi	r25, 0x16	; 22
    2900:	52 dc       	rcall	.-1884   	; 0x21a6 <ESP8266_WifiGetConnected>
    2902:	26 98       	cbi	0x04, 6	; 4
    2904:	2e 9a       	sbi	0x05, 6	; 5
    2906:	80 e8       	ldi	r24, 0x80	; 128
    2908:	96 e1       	ldi	r25, 0x16	; 22
    290a:	11 d9       	rcall	.-3550   	; 0x1b2e <ESP8266_Update>
    290c:	1e 99       	sbic	0x03, 6	; 3
    290e:	fb cf       	rjmp	.-10     	; 0x2906 <main+0x86>
    2910:	1e 9b       	sbis	0x03, 6	; 3
    2912:	fe cf       	rjmp	.-4      	; 0x2910 <main+0x90>
    2914:	00 e0       	ldi	r16, 0x00	; 0
    2916:	10 e0       	ldi	r17, 0x00	; 0
    2918:	20 e5       	ldi	r18, 0x50	; 80
    291a:	30 e0       	ldi	r19, 0x00	; 0
    291c:	43 e4       	ldi	r20, 0x43	; 67
    291e:	57 e0       	ldi	r21, 0x07	; 7
    2920:	69 e5       	ldi	r22, 0x59	; 89
    2922:	77 e0       	ldi	r23, 0x07	; 7
    2924:	80 e8       	ldi	r24, 0x80	; 128
    2926:	96 e1       	ldi	r25, 0x16	; 22
    2928:	cc dd       	rcall	.-1128   	; 0x24c2 <ESP8266_StartClientConnectionTCP>
    292a:	81 11       	cpse	r24, r1
    292c:	f3 cf       	rjmp	.-26     	; 0x2914 <main+0x94>
    292e:	eb cf       	rjmp	.-42     	; 0x2906 <main+0x86>

00002930 <ESP8266_Callback_DeviceReady>:
    2930:	86 e6       	ldi	r24, 0x66	; 102
    2932:	97 e0       	ldi	r25, 0x07	; 7
    2934:	26 c3       	rjmp	.+1612   	; 0x2f82 <puts>
    2936:	08 95       	ret

00002938 <ESP8266_Callback_WatchdogReset>:
    2938:	87 e7       	ldi	r24, 0x77	; 119
    293a:	97 e0       	ldi	r25, 0x07	; 7
    293c:	22 c3       	rjmp	.+1604   	; 0x2f82 <puts>
    293e:	08 95       	ret

00002940 <ESP8266_Callback_WifiDisconnected>:
    2940:	81 e9       	ldi	r24, 0x91	; 145
    2942:	97 e0       	ldi	r25, 0x07	; 7
    2944:	1e c3       	rjmp	.+1596   	; 0x2f82 <puts>
    2946:	08 95       	ret

00002948 <ESP8266_Callback_WifiConnected>:
    2948:	88 ea       	ldi	r24, 0xA8	; 168
    294a:	97 e0       	ldi	r25, 0x07	; 7
    294c:	1a c3       	rjmp	.+1588   	; 0x2f82 <puts>
    294e:	08 95       	ret

00002950 <ESP8266_Callback_WifiConnectFailed>:
    2950:	fc 01       	movw	r30, r24
    2952:	eb 5e       	subi	r30, 0xEB	; 235
    2954:	fd 4f       	sbci	r31, 0xFD	; 253
    2956:	80 81       	ld	r24, Z
    2958:	1f 92       	push	r1
    295a:	8f 93       	push	r24
    295c:	8c eb       	ldi	r24, 0xBC	; 188
    295e:	97 e0       	ldi	r25, 0x07	; 7
    2960:	9f 93       	push	r25
    2962:	8f 93       	push	r24
    2964:	fb d2       	rcall	.+1526   	; 0x2f5c <printf>
    2966:	0f 90       	pop	r0
    2968:	0f 90       	pop	r0
    296a:	0f 90       	pop	r0
    296c:	0f 90       	pop	r0
    296e:	08 95       	ret

00002970 <ESP8266_Callback_WifiGotIP>:
    2970:	cf 93       	push	r28
    2972:	df 93       	push	r29
    2974:	ec 01       	movw	r28, r24
    2976:	8f ee       	ldi	r24, 0xEF	; 239
    2978:	97 e0       	ldi	r25, 0x07	; 7
    297a:	03 d3       	rcall	.+1542   	; 0x2f82 <puts>
    297c:	ce 01       	movw	r24, r28
    297e:	1a dc       	rcall	.-1996   	; 0x21b4 <ESP8266_GetSTAIP>
    2980:	1f 92       	push	r1
    2982:	8f 93       	push	r24
    2984:	87 e0       	ldi	r24, 0x07	; 7
    2986:	98 e0       	ldi	r25, 0x08	; 8
    2988:	9f 93       	push	r25
    298a:	8f 93       	push	r24
    298c:	e7 d2       	rcall	.+1486   	; 0x2f5c <printf>
    298e:	0f 90       	pop	r0
    2990:	0f 90       	pop	r0
    2992:	0f 90       	pop	r0
    2994:	0f 90       	pop	r0
    2996:	df 91       	pop	r29
    2998:	cf 91       	pop	r28
    299a:	08 95       	ret

0000299c <ESP8266_Callback_WifiIPSet>:
    299c:	fc 01       	movw	r30, r24
    299e:	e6 55       	subi	r30, 0x56	; 86
    29a0:	fe 4f       	sbci	r31, 0xFE	; 254
    29a2:	20 81       	ld	r18, Z
    29a4:	1f 92       	push	r1
    29a6:	2f 93       	push	r18
    29a8:	31 97       	sbiw	r30, 0x01	; 1
    29aa:	20 81       	ld	r18, Z
    29ac:	1f 92       	push	r1
    29ae:	2f 93       	push	r18
    29b0:	31 97       	sbiw	r30, 0x01	; 1
    29b2:	20 81       	ld	r18, Z
    29b4:	1f 92       	push	r1
    29b6:	2f 93       	push	r18
    29b8:	31 97       	sbiw	r30, 0x01	; 1
    29ba:	80 81       	ld	r24, Z
    29bc:	1f 92       	push	r1
    29be:	8f 93       	push	r24
    29c0:	80 e2       	ldi	r24, 0x20	; 32
    29c2:	98 e0       	ldi	r25, 0x08	; 8
    29c4:	9f 93       	push	r25
    29c6:	8f 93       	push	r24
    29c8:	c9 d2       	rcall	.+1426   	; 0x2f5c <printf>
    29ca:	8d b7       	in	r24, 0x3d	; 61
    29cc:	9e b7       	in	r25, 0x3e	; 62
    29ce:	0a 96       	adiw	r24, 0x0a	; 10
    29d0:	0f b6       	in	r0, 0x3f	; 63
    29d2:	f8 94       	cli
    29d4:	9e bf       	out	0x3e, r25	; 62
    29d6:	0f be       	out	0x3f, r0	; 63
    29d8:	8d bf       	out	0x3d, r24	; 61
    29da:	08 95       	ret

000029dc <ESP8266_Callback_DHCPTimeout>:
    29dc:	88 e4       	ldi	r24, 0x48	; 72
    29de:	98 e0       	ldi	r25, 0x08	; 8
    29e0:	d0 c2       	rjmp	.+1440   	; 0x2f82 <puts>
    29e2:	08 95       	ret

000029e4 <ESP8266_Callback_ClientConnectionConnected>:
    29e4:	0f 93       	push	r16
    29e6:	1f 93       	push	r17
    29e8:	cf 93       	push	r28
    29ea:	df 93       	push	r29
    29ec:	8c 01       	movw	r16, r24
    29ee:	eb 01       	movw	r28, r22
    29f0:	9b 01       	movw	r18, r22
    29f2:	22 5e       	subi	r18, 0xE2	; 226
    29f4:	3f 4f       	sbci	r19, 0xFF	; 255
    29f6:	3f 93       	push	r19
    29f8:	2f 93       	push	r18
    29fa:	23 e8       	ldi	r18, 0x83	; 131
    29fc:	38 e0       	ldi	r19, 0x08	; 8
    29fe:	3f 93       	push	r19
    2a00:	2f 93       	push	r18
    2a02:	ac d2       	rcall	.+1368   	; 0x2f5c <printf>
    2a04:	be 01       	movw	r22, r28
    2a06:	c8 01       	movw	r24, r16
    2a08:	d1 dc       	rcall	.-1630   	; 0x23ac <ESP8266_RequestSendData>
    2a0a:	0f 90       	pop	r0
    2a0c:	0f 90       	pop	r0
    2a0e:	0f 90       	pop	r0
    2a10:	0f 90       	pop	r0
    2a12:	df 91       	pop	r29
    2a14:	cf 91       	pop	r28
    2a16:	1f 91       	pop	r17
    2a18:	0f 91       	pop	r16
    2a1a:	08 95       	ret

00002a1c <ESP8266_Callback_ClientConnectionError>:
    2a1c:	fb 01       	movw	r30, r22
    2a1e:	81 81       	ldd	r24, Z+1	; 0x01
    2a20:	1f 92       	push	r1
    2a22:	8f 93       	push	r24
    2a24:	87 eb       	ldi	r24, 0xB7	; 183
    2a26:	98 e0       	ldi	r25, 0x08	; 8
    2a28:	9f 93       	push	r25
    2a2a:	8f 93       	push	r24
    2a2c:	97 d2       	rcall	.+1326   	; 0x2f5c <printf>
    2a2e:	0f 90       	pop	r0
    2a30:	0f 90       	pop	r0
    2a32:	0f 90       	pop	r0
    2a34:	0f 90       	pop	r0
    2a36:	08 95       	ret

00002a38 <ESP8266_Callback_ClientConnectionSendData>:
    2a38:	cf 93       	push	r28
    2a3a:	df 93       	push	r29
    2a3c:	81 e1       	ldi	r24, 0x11	; 17
    2a3e:	e4 ef       	ldi	r30, 0xF4	; 244
    2a40:	f8 e0       	ldi	r31, 0x08	; 8
    2a42:	da 01       	movw	r26, r20
    2a44:	01 90       	ld	r0, Z+
    2a46:	0d 92       	st	X+, r0
    2a48:	8a 95       	dec	r24
    2a4a:	e1 f7       	brne	.-8      	; 0x2a44 <ESP8266_Callback_ClientConnectionSendData+0xc>
    2a4c:	da 01       	movw	r26, r20
    2a4e:	0d 90       	ld	r0, X+
    2a50:	00 20       	and	r0, r0
    2a52:	e9 f7       	brne	.-6      	; 0x2a4e <ESP8266_Callback_ClientConnectionSendData+0x16>
    2a54:	11 97       	sbiw	r26, 0x01	; 1
    2a56:	8e e1       	ldi	r24, 0x1E	; 30
    2a58:	e5 e0       	ldi	r30, 0x05	; 5
    2a5a:	f9 e0       	ldi	r31, 0x09	; 9
    2a5c:	01 90       	ld	r0, Z+
    2a5e:	0d 92       	st	X+, r0
    2a60:	8a 95       	dec	r24
    2a62:	e1 f7       	brne	.-8      	; 0x2a5c <ESP8266_Callback_ClientConnectionSendData+0x24>
    2a64:	da 01       	movw	r26, r20
    2a66:	0d 90       	ld	r0, X+
    2a68:	00 20       	and	r0, r0
    2a6a:	e9 f7       	brne	.-6      	; 0x2a66 <ESP8266_Callback_ClientConnectionSendData+0x2e>
    2a6c:	11 97       	sbiw	r26, 0x01	; 1
    2a6e:	84 e1       	ldi	r24, 0x14	; 20
    2a70:	e3 e2       	ldi	r30, 0x23	; 35
    2a72:	f9 e0       	ldi	r31, 0x09	; 9
    2a74:	01 90       	ld	r0, Z+
    2a76:	0d 92       	st	X+, r0
    2a78:	8a 95       	dec	r24
    2a7a:	e1 f7       	brne	.-8      	; 0x2a74 <ESP8266_Callback_ClientConnectionSendData+0x3c>
    2a7c:	fa 01       	movw	r30, r20
    2a7e:	01 90       	ld	r0, Z+
    2a80:	00 20       	and	r0, r0
    2a82:	e9 f7       	brne	.-6      	; 0x2a7e <ESP8266_Callback_ClientConnectionSendData+0x46>
    2a84:	31 97       	sbiw	r30, 0x01	; 1
    2a86:	8d e0       	ldi	r24, 0x0D	; 13
    2a88:	9a e0       	ldi	r25, 0x0A	; 10
    2a8a:	a0 e0       	ldi	r26, 0x00	; 0
    2a8c:	80 83       	st	Z, r24
    2a8e:	91 83       	std	Z+1, r25	; 0x01
    2a90:	a2 83       	std	Z+2, r26	; 0x02
    2a92:	fa 01       	movw	r30, r20
    2a94:	01 90       	ld	r0, Z+
    2a96:	00 20       	and	r0, r0
    2a98:	e9 f7       	brne	.-6      	; 0x2a94 <ESP8266_Callback_ClientConnectionSendData+0x5c>
    2a9a:	cf 01       	movw	r24, r30
    2a9c:	01 97       	sbiw	r24, 0x01	; 1
    2a9e:	84 1b       	sub	r24, r20
    2aa0:	95 0b       	sbc	r25, r21
    2aa2:	df 91       	pop	r29
    2aa4:	cf 91       	pop	r28
    2aa6:	08 95       	ret

00002aa8 <ESP8266_Callback_ClientConnectionDataSent>:
    2aa8:	87 e3       	ldi	r24, 0x37	; 55
    2aaa:	99 e0       	ldi	r25, 0x09	; 9
    2aac:	6a c2       	rjmp	.+1236   	; 0x2f82 <puts>
    2aae:	08 95       	ret

00002ab0 <ESP8266_Callback_ClientConnectionDataReceived>:
}

void ESP8266_Callback_ClientConnectionDataReceived(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection, char* Buffer) {
    2ab0:	cf 93       	push	r28
    2ab2:	df 93       	push	r29
    2ab4:	eb 01       	movw	r28, r22
	/* Data received from server back to client */
	printf("Data received from server on connection: %s; Number of bytes received: %lu; %lu / %lu;\r\n",
    2ab6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2ab8:	8f 93       	push	r24
    2aba:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2abc:	8f 93       	push	r24
    2abe:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2ac0:	8f 93       	push	r24
    2ac2:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2ac4:	8f 93       	push	r24
    2ac6:	89 89       	ldd	r24, Y+17	; 0x11
    2ac8:	8f 93       	push	r24
    2aca:	88 89       	ldd	r24, Y+16	; 0x10
    2acc:	8f 93       	push	r24
    2ace:	8f 85       	ldd	r24, Y+15	; 0x0f
    2ad0:	8f 93       	push	r24
    2ad2:	8e 85       	ldd	r24, Y+14	; 0x0e
    2ad4:	8f 93       	push	r24
    2ad6:	8d 85       	ldd	r24, Y+13	; 0x0d
    2ad8:	8f 93       	push	r24
    2ada:	8c 85       	ldd	r24, Y+12	; 0x0c
    2adc:	8f 93       	push	r24
    2ade:	8b 85       	ldd	r24, Y+11	; 0x0b
    2ae0:	8f 93       	push	r24
    2ae2:	8a 85       	ldd	r24, Y+10	; 0x0a
    2ae4:	8f 93       	push	r24
    2ae6:	cb 01       	movw	r24, r22
    2ae8:	4e 96       	adiw	r24, 0x1e	; 30
    2aea:	9f 93       	push	r25
    2aec:	8f 93       	push	r24
    2aee:	87 e8       	ldi	r24, 0x87	; 135
    2af0:	99 e0       	ldi	r25, 0x09	; 9
    2af2:	9f 93       	push	r25
    2af4:	8f 93       	push	r24
    2af6:	32 d2       	rcall	.+1124   	; 0x2f5c <printf>
	Connection->TotalBytesReceived,
	Connection->ContentLength
	);
	
	/* Print message when first packet */
	if (Connection->FirstPacket) {
    2af8:	fe 01       	movw	r30, r28
    2afa:	ef 5b       	subi	r30, 0xBF	; 191
    2afc:	ff 4f       	sbci	r31, 0xFF	; 255
    2afe:	8d b7       	in	r24, 0x3d	; 61
    2b00:	9e b7       	in	r25, 0x3e	; 62
    2b02:	40 96       	adiw	r24, 0x10	; 16
    2b04:	0f b6       	in	r0, 0x3f	; 63
    2b06:	f8 94       	cli
    2b08:	9e bf       	out	0x3e, r25	; 62
    2b0a:	0f be       	out	0x3f, r0	; 63
    2b0c:	8d bf       	out	0x3d, r24	; 61
    2b0e:	80 81       	ld	r24, Z
    2b10:	88 23       	and	r24, r24
    2b12:	99 f0       	breq	.+38     	; 0x2b3a <ESP8266_Callback_ClientConnectionDataReceived+0x8a>
		
		/* Print first message */
		printf("This is first packet received. Content length on this connection is: %lu\r\n", Connection->ContentLength);
    2b14:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2b16:	8f 93       	push	r24
    2b18:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2b1a:	8f 93       	push	r24
    2b1c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2b1e:	8f 93       	push	r24
    2b20:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2b22:	8f 93       	push	r24
    2b24:	80 ee       	ldi	r24, 0xE0	; 224
    2b26:	99 e0       	ldi	r25, 0x09	; 9
    2b28:	9f 93       	push	r25
    2b2a:	8f 93       	push	r24
    2b2c:	17 d2       	rcall	.+1070   	; 0x2f5c <printf>
    2b2e:	0f 90       	pop	r0
    2b30:	0f 90       	pop	r0
    2b32:	0f 90       	pop	r0
    2b34:	0f 90       	pop	r0
    2b36:	0f 90       	pop	r0
    2b38:	0f 90       	pop	r0
	}
}
    2b3a:	df 91       	pop	r29
    2b3c:	cf 91       	pop	r28
    2b3e:	08 95       	ret

00002b40 <ESP8266_Callback_ClientConnectionClosed>:

/* Called when connection is closed */
void ESP8266_Callback_ClientConnectionClosed(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection) {
    2b40:	fb 01       	movw	r30, r22
	printf("Client connection closed, connection: %d; Total bytes received: %lu; Content-Length header: %lu\r\n",
    2b42:	85 8d       	ldd	r24, Z+29	; 0x1d
    2b44:	8f 93       	push	r24
    2b46:	84 8d       	ldd	r24, Z+28	; 0x1c
    2b48:	8f 93       	push	r24
    2b4a:	83 8d       	ldd	r24, Z+27	; 0x1b
    2b4c:	8f 93       	push	r24
    2b4e:	82 8d       	ldd	r24, Z+26	; 0x1a
    2b50:	8f 93       	push	r24
    2b52:	81 89       	ldd	r24, Z+17	; 0x11
    2b54:	8f 93       	push	r24
    2b56:	80 89       	ldd	r24, Z+16	; 0x10
    2b58:	8f 93       	push	r24
    2b5a:	87 85       	ldd	r24, Z+15	; 0x0f
    2b5c:	8f 93       	push	r24
    2b5e:	86 85       	ldd	r24, Z+14	; 0x0e
    2b60:	8f 93       	push	r24
    2b62:	81 81       	ldd	r24, Z+1	; 0x01
    2b64:	1f 92       	push	r1
    2b66:	8f 93       	push	r24
    2b68:	8b e2       	ldi	r24, 0x2B	; 43
    2b6a:	9a e0       	ldi	r25, 0x0A	; 10
    2b6c:	9f 93       	push	r25
    2b6e:	8f 93       	push	r24
    2b70:	f5 d1       	rcall	.+1002   	; 0x2f5c <printf>
    2b72:	8d b7       	in	r24, 0x3d	; 61
    2b74:	9e b7       	in	r25, 0x3e	; 62
    2b76:	0c 96       	adiw	r24, 0x0c	; 12
    2b78:	0f b6       	in	r0, 0x3f	; 63
    2b7a:	f8 94       	cli
    2b7c:	9e bf       	out	0x3e, r25	; 62
    2b7e:	0f be       	out	0x3f, r0	; 63
    2b80:	8d bf       	out	0x3d, r24	; 61
    2b82:	08 95       	ret

00002b84 <ESP8266_Callback_ClientConnectionTimeout>:
	);
}

/* Called when timeout is reached on connection to server */
void ESP8266_Callback_ClientConnectionTimeout(ESP8266_t* ESP8266, ESP8266_Connection_t* Connection) {
	printf("Timeout reached on connection: %d\r\n", Connection->Number);
    2b84:	fb 01       	movw	r30, r22
    2b86:	81 81       	ldd	r24, Z+1	; 0x01
    2b88:	1f 92       	push	r1
    2b8a:	8f 93       	push	r24
    2b8c:	8d e8       	ldi	r24, 0x8D	; 141
    2b8e:	9a e0       	ldi	r25, 0x0A	; 10
    2b90:	9f 93       	push	r25
    2b92:	8f 93       	push	r24
    2b94:	e3 d1       	rcall	.+966    	; 0x2f5c <printf>
    2b96:	0f 90       	pop	r0
    2b98:	0f 90       	pop	r0
    2b9a:	0f 90       	pop	r0
    2b9c:	0f 90       	pop	r0
    2b9e:	08 95       	ret

00002ba0 <__udivmodsi4>:
    2ba0:	a1 e2       	ldi	r26, 0x21	; 33
    2ba2:	1a 2e       	mov	r1, r26
    2ba4:	aa 1b       	sub	r26, r26
    2ba6:	bb 1b       	sub	r27, r27
    2ba8:	fd 01       	movw	r30, r26
    2baa:	0d c0       	rjmp	.+26     	; 0x2bc6 <__udivmodsi4_ep>

00002bac <__udivmodsi4_loop>:
    2bac:	aa 1f       	adc	r26, r26
    2bae:	bb 1f       	adc	r27, r27
    2bb0:	ee 1f       	adc	r30, r30
    2bb2:	ff 1f       	adc	r31, r31
    2bb4:	a2 17       	cp	r26, r18
    2bb6:	b3 07       	cpc	r27, r19
    2bb8:	e4 07       	cpc	r30, r20
    2bba:	f5 07       	cpc	r31, r21
    2bbc:	20 f0       	brcs	.+8      	; 0x2bc6 <__udivmodsi4_ep>
    2bbe:	a2 1b       	sub	r26, r18
    2bc0:	b3 0b       	sbc	r27, r19
    2bc2:	e4 0b       	sbc	r30, r20
    2bc4:	f5 0b       	sbc	r31, r21

00002bc6 <__udivmodsi4_ep>:
    2bc6:	66 1f       	adc	r22, r22
    2bc8:	77 1f       	adc	r23, r23
    2bca:	88 1f       	adc	r24, r24
    2bcc:	99 1f       	adc	r25, r25
    2bce:	1a 94       	dec	r1
    2bd0:	69 f7       	brne	.-38     	; 0x2bac <__udivmodsi4_loop>
    2bd2:	60 95       	com	r22
    2bd4:	70 95       	com	r23
    2bd6:	80 95       	com	r24
    2bd8:	90 95       	com	r25
    2bda:	9b 01       	movw	r18, r22
    2bdc:	ac 01       	movw	r20, r24
    2bde:	bd 01       	movw	r22, r26
    2be0:	cf 01       	movw	r24, r30
    2be2:	08 95       	ret

00002be4 <__tablejump2__>:
    2be4:	ee 0f       	add	r30, r30
    2be6:	ff 1f       	adc	r31, r31
    2be8:	88 1f       	adc	r24, r24
    2bea:	8b bf       	out	0x3b, r24	; 59
    2bec:	07 90       	elpm	r0, Z+
    2bee:	f6 91       	elpm	r31, Z
    2bf0:	e0 2d       	mov	r30, r0
    2bf2:	19 94       	eijmp

00002bf4 <malloc>:
    2bf4:	cf 93       	push	r28
    2bf6:	df 93       	push	r29
    2bf8:	82 30       	cpi	r24, 0x02	; 2
    2bfa:	91 05       	cpc	r25, r1
    2bfc:	10 f4       	brcc	.+4      	; 0x2c02 <malloc+0xe>
    2bfe:	82 e0       	ldi	r24, 0x02	; 2
    2c00:	90 e0       	ldi	r25, 0x00	; 0
    2c02:	e0 91 a8 18 	lds	r30, 0x18A8
    2c06:	f0 91 a9 18 	lds	r31, 0x18A9
    2c0a:	20 e0       	ldi	r18, 0x00	; 0
    2c0c:	30 e0       	ldi	r19, 0x00	; 0
    2c0e:	c0 e0       	ldi	r28, 0x00	; 0
    2c10:	d0 e0       	ldi	r29, 0x00	; 0
    2c12:	30 97       	sbiw	r30, 0x00	; 0
    2c14:	11 f1       	breq	.+68     	; 0x2c5a <malloc+0x66>
    2c16:	40 81       	ld	r20, Z
    2c18:	51 81       	ldd	r21, Z+1	; 0x01
    2c1a:	48 17       	cp	r20, r24
    2c1c:	59 07       	cpc	r21, r25
    2c1e:	c0 f0       	brcs	.+48     	; 0x2c50 <malloc+0x5c>
    2c20:	48 17       	cp	r20, r24
    2c22:	59 07       	cpc	r21, r25
    2c24:	61 f4       	brne	.+24     	; 0x2c3e <malloc+0x4a>
    2c26:	82 81       	ldd	r24, Z+2	; 0x02
    2c28:	93 81       	ldd	r25, Z+3	; 0x03
    2c2a:	20 97       	sbiw	r28, 0x00	; 0
    2c2c:	19 f0       	breq	.+6      	; 0x2c34 <malloc+0x40>
    2c2e:	9b 83       	std	Y+3, r25	; 0x03
    2c30:	8a 83       	std	Y+2, r24	; 0x02
    2c32:	2b c0       	rjmp	.+86     	; 0x2c8a <malloc+0x96>
    2c34:	90 93 a9 18 	sts	0x18A9, r25
    2c38:	80 93 a8 18 	sts	0x18A8, r24
    2c3c:	26 c0       	rjmp	.+76     	; 0x2c8a <malloc+0x96>
    2c3e:	21 15       	cp	r18, r1
    2c40:	31 05       	cpc	r19, r1
    2c42:	19 f0       	breq	.+6      	; 0x2c4a <malloc+0x56>
    2c44:	42 17       	cp	r20, r18
    2c46:	53 07       	cpc	r21, r19
    2c48:	18 f4       	brcc	.+6      	; 0x2c50 <malloc+0x5c>
    2c4a:	9a 01       	movw	r18, r20
    2c4c:	be 01       	movw	r22, r28
    2c4e:	df 01       	movw	r26, r30
    2c50:	ef 01       	movw	r28, r30
    2c52:	02 80       	ldd	r0, Z+2	; 0x02
    2c54:	f3 81       	ldd	r31, Z+3	; 0x03
    2c56:	e0 2d       	mov	r30, r0
    2c58:	dc cf       	rjmp	.-72     	; 0x2c12 <malloc+0x1e>
    2c5a:	21 15       	cp	r18, r1
    2c5c:	31 05       	cpc	r19, r1
    2c5e:	09 f1       	breq	.+66     	; 0x2ca2 <malloc+0xae>
    2c60:	28 1b       	sub	r18, r24
    2c62:	39 0b       	sbc	r19, r25
    2c64:	24 30       	cpi	r18, 0x04	; 4
    2c66:	31 05       	cpc	r19, r1
    2c68:	90 f4       	brcc	.+36     	; 0x2c8e <malloc+0x9a>
    2c6a:	12 96       	adiw	r26, 0x02	; 2
    2c6c:	8d 91       	ld	r24, X+
    2c6e:	9c 91       	ld	r25, X
    2c70:	13 97       	sbiw	r26, 0x03	; 3
    2c72:	61 15       	cp	r22, r1
    2c74:	71 05       	cpc	r23, r1
    2c76:	21 f0       	breq	.+8      	; 0x2c80 <malloc+0x8c>
    2c78:	fb 01       	movw	r30, r22
    2c7a:	93 83       	std	Z+3, r25	; 0x03
    2c7c:	82 83       	std	Z+2, r24	; 0x02
    2c7e:	04 c0       	rjmp	.+8      	; 0x2c88 <malloc+0x94>
    2c80:	90 93 a9 18 	sts	0x18A9, r25
    2c84:	80 93 a8 18 	sts	0x18A8, r24
    2c88:	fd 01       	movw	r30, r26
    2c8a:	32 96       	adiw	r30, 0x02	; 2
    2c8c:	44 c0       	rjmp	.+136    	; 0x2d16 <malloc+0x122>
    2c8e:	fd 01       	movw	r30, r26
    2c90:	e2 0f       	add	r30, r18
    2c92:	f3 1f       	adc	r31, r19
    2c94:	81 93       	st	Z+, r24
    2c96:	91 93       	st	Z+, r25
    2c98:	22 50       	subi	r18, 0x02	; 2
    2c9a:	31 09       	sbc	r19, r1
    2c9c:	2d 93       	st	X+, r18
    2c9e:	3c 93       	st	X, r19
    2ca0:	3a c0       	rjmp	.+116    	; 0x2d16 <malloc+0x122>
    2ca2:	20 91 a6 18 	lds	r18, 0x18A6
    2ca6:	30 91 a7 18 	lds	r19, 0x18A7
    2caa:	23 2b       	or	r18, r19
    2cac:	41 f4       	brne	.+16     	; 0x2cbe <malloc+0xca>
    2cae:	20 91 02 02 	lds	r18, 0x0202
    2cb2:	30 91 03 02 	lds	r19, 0x0203
    2cb6:	30 93 a7 18 	sts	0x18A7, r19
    2cba:	20 93 a6 18 	sts	0x18A6, r18
    2cbe:	20 91 00 02 	lds	r18, 0x0200
    2cc2:	30 91 01 02 	lds	r19, 0x0201
    2cc6:	21 15       	cp	r18, r1
    2cc8:	31 05       	cpc	r19, r1
    2cca:	41 f4       	brne	.+16     	; 0x2cdc <malloc+0xe8>
    2ccc:	2d b7       	in	r18, 0x3d	; 61
    2cce:	3e b7       	in	r19, 0x3e	; 62
    2cd0:	40 91 04 02 	lds	r20, 0x0204
    2cd4:	50 91 05 02 	lds	r21, 0x0205
    2cd8:	24 1b       	sub	r18, r20
    2cda:	35 0b       	sbc	r19, r21
    2cdc:	e0 91 a6 18 	lds	r30, 0x18A6
    2ce0:	f0 91 a7 18 	lds	r31, 0x18A7
    2ce4:	e2 17       	cp	r30, r18
    2ce6:	f3 07       	cpc	r31, r19
    2ce8:	a0 f4       	brcc	.+40     	; 0x2d12 <malloc+0x11e>
    2cea:	2e 1b       	sub	r18, r30
    2cec:	3f 0b       	sbc	r19, r31
    2cee:	28 17       	cp	r18, r24
    2cf0:	39 07       	cpc	r19, r25
    2cf2:	78 f0       	brcs	.+30     	; 0x2d12 <malloc+0x11e>
    2cf4:	ac 01       	movw	r20, r24
    2cf6:	4e 5f       	subi	r20, 0xFE	; 254
    2cf8:	5f 4f       	sbci	r21, 0xFF	; 255
    2cfa:	24 17       	cp	r18, r20
    2cfc:	35 07       	cpc	r19, r21
    2cfe:	48 f0       	brcs	.+18     	; 0x2d12 <malloc+0x11e>
    2d00:	4e 0f       	add	r20, r30
    2d02:	5f 1f       	adc	r21, r31
    2d04:	50 93 a7 18 	sts	0x18A7, r21
    2d08:	40 93 a6 18 	sts	0x18A6, r20
    2d0c:	81 93       	st	Z+, r24
    2d0e:	91 93       	st	Z+, r25
    2d10:	02 c0       	rjmp	.+4      	; 0x2d16 <malloc+0x122>
    2d12:	e0 e0       	ldi	r30, 0x00	; 0
    2d14:	f0 e0       	ldi	r31, 0x00	; 0
    2d16:	cf 01       	movw	r24, r30
    2d18:	df 91       	pop	r29
    2d1a:	cf 91       	pop	r28
    2d1c:	08 95       	ret

00002d1e <free>:
    2d1e:	0f 93       	push	r16
    2d20:	1f 93       	push	r17
    2d22:	cf 93       	push	r28
    2d24:	df 93       	push	r29
    2d26:	00 97       	sbiw	r24, 0x00	; 0
    2d28:	09 f4       	brne	.+2      	; 0x2d2c <free+0xe>
    2d2a:	8c c0       	rjmp	.+280    	; 0x2e44 <free+0x126>
    2d2c:	fc 01       	movw	r30, r24
    2d2e:	32 97       	sbiw	r30, 0x02	; 2
    2d30:	13 82       	std	Z+3, r1	; 0x03
    2d32:	12 82       	std	Z+2, r1	; 0x02
    2d34:	00 91 a8 18 	lds	r16, 0x18A8
    2d38:	10 91 a9 18 	lds	r17, 0x18A9
    2d3c:	01 15       	cp	r16, r1
    2d3e:	11 05       	cpc	r17, r1
    2d40:	81 f4       	brne	.+32     	; 0x2d62 <free+0x44>
    2d42:	20 81       	ld	r18, Z
    2d44:	31 81       	ldd	r19, Z+1	; 0x01
    2d46:	82 0f       	add	r24, r18
    2d48:	93 1f       	adc	r25, r19
    2d4a:	20 91 a6 18 	lds	r18, 0x18A6
    2d4e:	30 91 a7 18 	lds	r19, 0x18A7
    2d52:	28 17       	cp	r18, r24
    2d54:	39 07       	cpc	r19, r25
    2d56:	79 f5       	brne	.+94     	; 0x2db6 <free+0x98>
    2d58:	f0 93 a7 18 	sts	0x18A7, r31
    2d5c:	e0 93 a6 18 	sts	0x18A6, r30
    2d60:	71 c0       	rjmp	.+226    	; 0x2e44 <free+0x126>
    2d62:	d8 01       	movw	r26, r16
    2d64:	40 e0       	ldi	r20, 0x00	; 0
    2d66:	50 e0       	ldi	r21, 0x00	; 0
    2d68:	ae 17       	cp	r26, r30
    2d6a:	bf 07       	cpc	r27, r31
    2d6c:	50 f4       	brcc	.+20     	; 0x2d82 <free+0x64>
    2d6e:	12 96       	adiw	r26, 0x02	; 2
    2d70:	2d 91       	ld	r18, X+
    2d72:	3c 91       	ld	r19, X
    2d74:	13 97       	sbiw	r26, 0x03	; 3
    2d76:	ad 01       	movw	r20, r26
    2d78:	21 15       	cp	r18, r1
    2d7a:	31 05       	cpc	r19, r1
    2d7c:	09 f1       	breq	.+66     	; 0x2dc0 <free+0xa2>
    2d7e:	d9 01       	movw	r26, r18
    2d80:	f3 cf       	rjmp	.-26     	; 0x2d68 <free+0x4a>
    2d82:	9d 01       	movw	r18, r26
    2d84:	da 01       	movw	r26, r20
    2d86:	33 83       	std	Z+3, r19	; 0x03
    2d88:	22 83       	std	Z+2, r18	; 0x02
    2d8a:	60 81       	ld	r22, Z
    2d8c:	71 81       	ldd	r23, Z+1	; 0x01
    2d8e:	86 0f       	add	r24, r22
    2d90:	97 1f       	adc	r25, r23
    2d92:	82 17       	cp	r24, r18
    2d94:	93 07       	cpc	r25, r19
    2d96:	69 f4       	brne	.+26     	; 0x2db2 <free+0x94>
    2d98:	ec 01       	movw	r28, r24
    2d9a:	28 81       	ld	r18, Y
    2d9c:	39 81       	ldd	r19, Y+1	; 0x01
    2d9e:	26 0f       	add	r18, r22
    2da0:	37 1f       	adc	r19, r23
    2da2:	2e 5f       	subi	r18, 0xFE	; 254
    2da4:	3f 4f       	sbci	r19, 0xFF	; 255
    2da6:	31 83       	std	Z+1, r19	; 0x01
    2da8:	20 83       	st	Z, r18
    2daa:	8a 81       	ldd	r24, Y+2	; 0x02
    2dac:	9b 81       	ldd	r25, Y+3	; 0x03
    2dae:	93 83       	std	Z+3, r25	; 0x03
    2db0:	82 83       	std	Z+2, r24	; 0x02
    2db2:	45 2b       	or	r20, r21
    2db4:	29 f4       	brne	.+10     	; 0x2dc0 <free+0xa2>
    2db6:	f0 93 a9 18 	sts	0x18A9, r31
    2dba:	e0 93 a8 18 	sts	0x18A8, r30
    2dbe:	42 c0       	rjmp	.+132    	; 0x2e44 <free+0x126>
    2dc0:	13 96       	adiw	r26, 0x03	; 3
    2dc2:	fc 93       	st	X, r31
    2dc4:	ee 93       	st	-X, r30
    2dc6:	12 97       	sbiw	r26, 0x02	; 2
    2dc8:	ed 01       	movw	r28, r26
    2dca:	49 91       	ld	r20, Y+
    2dcc:	59 91       	ld	r21, Y+
    2dce:	9e 01       	movw	r18, r28
    2dd0:	24 0f       	add	r18, r20
    2dd2:	35 1f       	adc	r19, r21
    2dd4:	e2 17       	cp	r30, r18
    2dd6:	f3 07       	cpc	r31, r19
    2dd8:	71 f4       	brne	.+28     	; 0x2df6 <free+0xd8>
    2dda:	80 81       	ld	r24, Z
    2ddc:	91 81       	ldd	r25, Z+1	; 0x01
    2dde:	84 0f       	add	r24, r20
    2de0:	95 1f       	adc	r25, r21
    2de2:	02 96       	adiw	r24, 0x02	; 2
    2de4:	11 96       	adiw	r26, 0x01	; 1
    2de6:	9c 93       	st	X, r25
    2de8:	8e 93       	st	-X, r24
    2dea:	82 81       	ldd	r24, Z+2	; 0x02
    2dec:	93 81       	ldd	r25, Z+3	; 0x03
    2dee:	13 96       	adiw	r26, 0x03	; 3
    2df0:	9c 93       	st	X, r25
    2df2:	8e 93       	st	-X, r24
    2df4:	12 97       	sbiw	r26, 0x02	; 2
    2df6:	e0 e0       	ldi	r30, 0x00	; 0
    2df8:	f0 e0       	ldi	r31, 0x00	; 0
    2dfa:	d8 01       	movw	r26, r16
    2dfc:	12 96       	adiw	r26, 0x02	; 2
    2dfe:	8d 91       	ld	r24, X+
    2e00:	9c 91       	ld	r25, X
    2e02:	13 97       	sbiw	r26, 0x03	; 3
    2e04:	00 97       	sbiw	r24, 0x00	; 0
    2e06:	19 f0       	breq	.+6      	; 0x2e0e <free+0xf0>
    2e08:	f8 01       	movw	r30, r16
    2e0a:	8c 01       	movw	r16, r24
    2e0c:	f6 cf       	rjmp	.-20     	; 0x2dfa <free+0xdc>
    2e0e:	8d 91       	ld	r24, X+
    2e10:	9c 91       	ld	r25, X
    2e12:	98 01       	movw	r18, r16
    2e14:	2e 5f       	subi	r18, 0xFE	; 254
    2e16:	3f 4f       	sbci	r19, 0xFF	; 255
    2e18:	82 0f       	add	r24, r18
    2e1a:	93 1f       	adc	r25, r19
    2e1c:	20 91 a6 18 	lds	r18, 0x18A6
    2e20:	30 91 a7 18 	lds	r19, 0x18A7
    2e24:	28 17       	cp	r18, r24
    2e26:	39 07       	cpc	r19, r25
    2e28:	69 f4       	brne	.+26     	; 0x2e44 <free+0x126>
    2e2a:	30 97       	sbiw	r30, 0x00	; 0
    2e2c:	29 f4       	brne	.+10     	; 0x2e38 <free+0x11a>
    2e2e:	10 92 a9 18 	sts	0x18A9, r1
    2e32:	10 92 a8 18 	sts	0x18A8, r1
    2e36:	02 c0       	rjmp	.+4      	; 0x2e3c <free+0x11e>
    2e38:	13 82       	std	Z+3, r1	; 0x03
    2e3a:	12 82       	std	Z+2, r1	; 0x02
    2e3c:	10 93 a7 18 	sts	0x18A7, r17
    2e40:	00 93 a6 18 	sts	0x18A6, r16
    2e44:	df 91       	pop	r29
    2e46:	cf 91       	pop	r28
    2e48:	1f 91       	pop	r17
    2e4a:	0f 91       	pop	r16
    2e4c:	08 95       	ret

00002e4e <strtok>:
    2e4e:	42 eb       	ldi	r20, 0xB2	; 178
    2e50:	5a e0       	ldi	r21, 0x0A	; 10
    2e52:	5d c0       	rjmp	.+186    	; 0x2f0e <strtok_r>

00002e54 <memcmp>:
    2e54:	fb 01       	movw	r30, r22
    2e56:	dc 01       	movw	r26, r24
    2e58:	04 c0       	rjmp	.+8      	; 0x2e62 <memcmp+0xe>
    2e5a:	8d 91       	ld	r24, X+
    2e5c:	01 90       	ld	r0, Z+
    2e5e:	80 19       	sub	r24, r0
    2e60:	21 f4       	brne	.+8      	; 0x2e6a <memcmp+0x16>
    2e62:	41 50       	subi	r20, 0x01	; 1
    2e64:	50 40       	sbci	r21, 0x00	; 0
    2e66:	c8 f7       	brcc	.-14     	; 0x2e5a <memcmp+0x6>
    2e68:	88 1b       	sub	r24, r24
    2e6a:	99 0b       	sbc	r25, r25
    2e6c:	08 95       	ret

00002e6e <memcpy>:
    2e6e:	fb 01       	movw	r30, r22
    2e70:	dc 01       	movw	r26, r24
    2e72:	02 c0       	rjmp	.+4      	; 0x2e78 <memcpy+0xa>
    2e74:	01 90       	ld	r0, Z+
    2e76:	0d 92       	st	X+, r0
    2e78:	41 50       	subi	r20, 0x01	; 1
    2e7a:	50 40       	sbci	r21, 0x00	; 0
    2e7c:	d8 f7       	brcc	.-10     	; 0x2e74 <memcpy+0x6>
    2e7e:	08 95       	ret

00002e80 <strcmp>:
    2e80:	fb 01       	movw	r30, r22
    2e82:	dc 01       	movw	r26, r24
    2e84:	8d 91       	ld	r24, X+
    2e86:	01 90       	ld	r0, Z+
    2e88:	80 19       	sub	r24, r0
    2e8a:	01 10       	cpse	r0, r1
    2e8c:	d9 f3       	breq	.-10     	; 0x2e84 <strcmp+0x4>
    2e8e:	99 0b       	sbc	r25, r25
    2e90:	08 95       	ret

00002e92 <strcpy>:
    2e92:	fb 01       	movw	r30, r22
    2e94:	dc 01       	movw	r26, r24
    2e96:	01 90       	ld	r0, Z+
    2e98:	0d 92       	st	X+, r0
    2e9a:	00 20       	and	r0, r0
    2e9c:	e1 f7       	brne	.-8      	; 0x2e96 <strcpy+0x4>
    2e9e:	08 95       	ret

00002ea0 <strncmp>:
    2ea0:	fb 01       	movw	r30, r22
    2ea2:	dc 01       	movw	r26, r24
    2ea4:	41 50       	subi	r20, 0x01	; 1
    2ea6:	50 40       	sbci	r21, 0x00	; 0
    2ea8:	30 f0       	brcs	.+12     	; 0x2eb6 <strncmp+0x16>
    2eaa:	8d 91       	ld	r24, X+
    2eac:	01 90       	ld	r0, Z+
    2eae:	80 19       	sub	r24, r0
    2eb0:	19 f4       	brne	.+6      	; 0x2eb8 <strncmp+0x18>
    2eb2:	00 20       	and	r0, r0
    2eb4:	b9 f7       	brne	.-18     	; 0x2ea4 <strncmp+0x4>
    2eb6:	88 1b       	sub	r24, r24
    2eb8:	99 0b       	sbc	r25, r25
    2eba:	08 95       	ret

00002ebc <strncpy>:
    2ebc:	fb 01       	movw	r30, r22
    2ebe:	dc 01       	movw	r26, r24
    2ec0:	41 50       	subi	r20, 0x01	; 1
    2ec2:	50 40       	sbci	r21, 0x00	; 0
    2ec4:	48 f0       	brcs	.+18     	; 0x2ed8 <strncpy+0x1c>
    2ec6:	01 90       	ld	r0, Z+
    2ec8:	0d 92       	st	X+, r0
    2eca:	00 20       	and	r0, r0
    2ecc:	c9 f7       	brne	.-14     	; 0x2ec0 <strncpy+0x4>
    2ece:	01 c0       	rjmp	.+2      	; 0x2ed2 <strncpy+0x16>
    2ed0:	1d 92       	st	X+, r1
    2ed2:	41 50       	subi	r20, 0x01	; 1
    2ed4:	50 40       	sbci	r21, 0x00	; 0
    2ed6:	e0 f7       	brcc	.-8      	; 0x2ed0 <strncpy+0x14>
    2ed8:	08 95       	ret

00002eda <strstr>:
    2eda:	fb 01       	movw	r30, r22
    2edc:	51 91       	ld	r21, Z+
    2ede:	55 23       	and	r21, r21
    2ee0:	a9 f0       	breq	.+42     	; 0x2f0c <strstr+0x32>
    2ee2:	bf 01       	movw	r22, r30
    2ee4:	dc 01       	movw	r26, r24
    2ee6:	4d 91       	ld	r20, X+
    2ee8:	45 17       	cp	r20, r21
    2eea:	41 11       	cpse	r20, r1
    2eec:	e1 f7       	brne	.-8      	; 0x2ee6 <strstr+0xc>
    2eee:	59 f4       	brne	.+22     	; 0x2f06 <strstr+0x2c>
    2ef0:	cd 01       	movw	r24, r26
    2ef2:	01 90       	ld	r0, Z+
    2ef4:	00 20       	and	r0, r0
    2ef6:	49 f0       	breq	.+18     	; 0x2f0a <strstr+0x30>
    2ef8:	4d 91       	ld	r20, X+
    2efa:	40 15       	cp	r20, r0
    2efc:	41 11       	cpse	r20, r1
    2efe:	c9 f3       	breq	.-14     	; 0x2ef2 <strstr+0x18>
    2f00:	fb 01       	movw	r30, r22
    2f02:	41 11       	cpse	r20, r1
    2f04:	ef cf       	rjmp	.-34     	; 0x2ee4 <strstr+0xa>
    2f06:	81 e0       	ldi	r24, 0x01	; 1
    2f08:	90 e0       	ldi	r25, 0x00	; 0
    2f0a:	01 97       	sbiw	r24, 0x01	; 1
    2f0c:	08 95       	ret

00002f0e <strtok_r>:
    2f0e:	fa 01       	movw	r30, r20
    2f10:	a1 91       	ld	r26, Z+
    2f12:	b0 81       	ld	r27, Z
    2f14:	00 97       	sbiw	r24, 0x00	; 0
    2f16:	19 f4       	brne	.+6      	; 0x2f1e <strtok_r+0x10>
    2f18:	10 97       	sbiw	r26, 0x00	; 0
    2f1a:	e1 f0       	breq	.+56     	; 0x2f54 <strtok_r+0x46>
    2f1c:	cd 01       	movw	r24, r26
    2f1e:	dc 01       	movw	r26, r24
    2f20:	cd 01       	movw	r24, r26
    2f22:	0d 90       	ld	r0, X+
    2f24:	00 20       	and	r0, r0
    2f26:	11 f4       	brne	.+4      	; 0x2f2c <strtok_r+0x1e>
    2f28:	c0 01       	movw	r24, r0
    2f2a:	13 c0       	rjmp	.+38     	; 0x2f52 <strtok_r+0x44>
    2f2c:	fb 01       	movw	r30, r22
    2f2e:	21 91       	ld	r18, Z+
    2f30:	22 23       	and	r18, r18
    2f32:	19 f0       	breq	.+6      	; 0x2f3a <strtok_r+0x2c>
    2f34:	20 15       	cp	r18, r0
    2f36:	d9 f7       	brne	.-10     	; 0x2f2e <strtok_r+0x20>
    2f38:	f3 cf       	rjmp	.-26     	; 0x2f20 <strtok_r+0x12>
    2f3a:	fb 01       	movw	r30, r22
    2f3c:	21 91       	ld	r18, Z+
    2f3e:	20 15       	cp	r18, r0
    2f40:	19 f4       	brne	.+6      	; 0x2f48 <strtok_r+0x3a>
    2f42:	1e 92       	st	-X, r1
    2f44:	11 96       	adiw	r26, 0x01	; 1
    2f46:	06 c0       	rjmp	.+12     	; 0x2f54 <strtok_r+0x46>
    2f48:	22 23       	and	r18, r18
    2f4a:	c1 f7       	brne	.-16     	; 0x2f3c <strtok_r+0x2e>
    2f4c:	0d 90       	ld	r0, X+
    2f4e:	00 20       	and	r0, r0
    2f50:	a1 f7       	brne	.-24     	; 0x2f3a <strtok_r+0x2c>
    2f52:	d0 01       	movw	r26, r0
    2f54:	fa 01       	movw	r30, r20
    2f56:	a1 93       	st	Z+, r26
    2f58:	b0 83       	st	Z, r27
    2f5a:	08 95       	ret

00002f5c <printf>:
    2f5c:	cf 93       	push	r28
    2f5e:	df 93       	push	r29
    2f60:	cd b7       	in	r28, 0x3d	; 61
    2f62:	de b7       	in	r29, 0x3e	; 62
    2f64:	ae 01       	movw	r20, r28
    2f66:	4a 5f       	subi	r20, 0xFA	; 250
    2f68:	5f 4f       	sbci	r21, 0xFF	; 255
    2f6a:	fa 01       	movw	r30, r20
    2f6c:	61 91       	ld	r22, Z+
    2f6e:	71 91       	ld	r23, Z+
    2f70:	af 01       	movw	r20, r30
    2f72:	80 91 ac 18 	lds	r24, 0x18AC
    2f76:	90 91 ad 18 	lds	r25, 0x18AD
    2f7a:	62 d0       	rcall	.+196    	; 0x3040 <vfprintf>
    2f7c:	df 91       	pop	r29
    2f7e:	cf 91       	pop	r28
    2f80:	08 95       	ret

00002f82 <puts>:
    2f82:	0f 93       	push	r16
    2f84:	1f 93       	push	r17
    2f86:	cf 93       	push	r28
    2f88:	df 93       	push	r29
    2f8a:	e0 91 ac 18 	lds	r30, 0x18AC
    2f8e:	f0 91 ad 18 	lds	r31, 0x18AD
    2f92:	23 81       	ldd	r18, Z+3	; 0x03
    2f94:	21 ff       	sbrs	r18, 1
    2f96:	1b c0       	rjmp	.+54     	; 0x2fce <puts+0x4c>
    2f98:	8c 01       	movw	r16, r24
    2f9a:	d0 e0       	ldi	r29, 0x00	; 0
    2f9c:	c0 e0       	ldi	r28, 0x00	; 0
    2f9e:	f8 01       	movw	r30, r16
    2fa0:	81 91       	ld	r24, Z+
    2fa2:	8f 01       	movw	r16, r30
    2fa4:	60 91 ac 18 	lds	r22, 0x18AC
    2fa8:	70 91 ad 18 	lds	r23, 0x18AD
    2fac:	db 01       	movw	r26, r22
    2fae:	18 96       	adiw	r26, 0x08	; 8
    2fb0:	ed 91       	ld	r30, X+
    2fb2:	fc 91       	ld	r31, X
    2fb4:	19 97       	sbiw	r26, 0x09	; 9
    2fb6:	88 23       	and	r24, r24
    2fb8:	31 f0       	breq	.+12     	; 0x2fc6 <puts+0x44>
    2fba:	19 95       	eicall
    2fbc:	89 2b       	or	r24, r25
    2fbe:	79 f3       	breq	.-34     	; 0x2f9e <puts+0x1c>
    2fc0:	df ef       	ldi	r29, 0xFF	; 255
    2fc2:	cf ef       	ldi	r28, 0xFF	; 255
    2fc4:	ec cf       	rjmp	.-40     	; 0x2f9e <puts+0x1c>
    2fc6:	8a e0       	ldi	r24, 0x0A	; 10
    2fc8:	19 95       	eicall
    2fca:	89 2b       	or	r24, r25
    2fcc:	19 f0       	breq	.+6      	; 0x2fd4 <puts+0x52>
    2fce:	8f ef       	ldi	r24, 0xFF	; 255
    2fd0:	9f ef       	ldi	r25, 0xFF	; 255
    2fd2:	02 c0       	rjmp	.+4      	; 0x2fd8 <puts+0x56>
    2fd4:	8d 2f       	mov	r24, r29
    2fd6:	9c 2f       	mov	r25, r28
    2fd8:	df 91       	pop	r29
    2fda:	cf 91       	pop	r28
    2fdc:	1f 91       	pop	r17
    2fde:	0f 91       	pop	r16
    2fe0:	08 95       	ret

00002fe2 <sprintf>:
    2fe2:	0f 93       	push	r16
    2fe4:	1f 93       	push	r17
    2fe6:	cf 93       	push	r28
    2fe8:	df 93       	push	r29
    2fea:	cd b7       	in	r28, 0x3d	; 61
    2fec:	de b7       	in	r29, 0x3e	; 62
    2fee:	2e 97       	sbiw	r28, 0x0e	; 14
    2ff0:	0f b6       	in	r0, 0x3f	; 63
    2ff2:	f8 94       	cli
    2ff4:	de bf       	out	0x3e, r29	; 62
    2ff6:	0f be       	out	0x3f, r0	; 63
    2ff8:	cd bf       	out	0x3d, r28	; 61
    2ffa:	0e 89       	ldd	r16, Y+22	; 0x16
    2ffc:	1f 89       	ldd	r17, Y+23	; 0x17
    2ffe:	86 e0       	ldi	r24, 0x06	; 6
    3000:	8c 83       	std	Y+4, r24	; 0x04
    3002:	1a 83       	std	Y+2, r17	; 0x02
    3004:	09 83       	std	Y+1, r16	; 0x01
    3006:	8f ef       	ldi	r24, 0xFF	; 255
    3008:	9f e7       	ldi	r25, 0x7F	; 127
    300a:	9e 83       	std	Y+6, r25	; 0x06
    300c:	8d 83       	std	Y+5, r24	; 0x05
    300e:	ae 01       	movw	r20, r28
    3010:	46 5e       	subi	r20, 0xE6	; 230
    3012:	5f 4f       	sbci	r21, 0xFF	; 255
    3014:	68 8d       	ldd	r22, Y+24	; 0x18
    3016:	79 8d       	ldd	r23, Y+25	; 0x19
    3018:	ce 01       	movw	r24, r28
    301a:	01 96       	adiw	r24, 0x01	; 1
    301c:	11 d0       	rcall	.+34     	; 0x3040 <vfprintf>
    301e:	2f 81       	ldd	r18, Y+7	; 0x07
    3020:	38 85       	ldd	r19, Y+8	; 0x08
    3022:	f8 01       	movw	r30, r16
    3024:	e2 0f       	add	r30, r18
    3026:	f3 1f       	adc	r31, r19
    3028:	10 82       	st	Z, r1
    302a:	2e 96       	adiw	r28, 0x0e	; 14
    302c:	0f b6       	in	r0, 0x3f	; 63
    302e:	f8 94       	cli
    3030:	de bf       	out	0x3e, r29	; 62
    3032:	0f be       	out	0x3f, r0	; 63
    3034:	cd bf       	out	0x3d, r28	; 61
    3036:	df 91       	pop	r29
    3038:	cf 91       	pop	r28
    303a:	1f 91       	pop	r17
    303c:	0f 91       	pop	r16
    303e:	08 95       	ret

00003040 <vfprintf>:
    3040:	2f 92       	push	r2
    3042:	3f 92       	push	r3
    3044:	4f 92       	push	r4
    3046:	5f 92       	push	r5
    3048:	6f 92       	push	r6
    304a:	7f 92       	push	r7
    304c:	8f 92       	push	r8
    304e:	9f 92       	push	r9
    3050:	af 92       	push	r10
    3052:	bf 92       	push	r11
    3054:	cf 92       	push	r12
    3056:	df 92       	push	r13
    3058:	ef 92       	push	r14
    305a:	ff 92       	push	r15
    305c:	0f 93       	push	r16
    305e:	1f 93       	push	r17
    3060:	cf 93       	push	r28
    3062:	df 93       	push	r29
    3064:	cd b7       	in	r28, 0x3d	; 61
    3066:	de b7       	in	r29, 0x3e	; 62
    3068:	2c 97       	sbiw	r28, 0x0c	; 12
    306a:	0f b6       	in	r0, 0x3f	; 63
    306c:	f8 94       	cli
    306e:	de bf       	out	0x3e, r29	; 62
    3070:	0f be       	out	0x3f, r0	; 63
    3072:	cd bf       	out	0x3d, r28	; 61
    3074:	7c 01       	movw	r14, r24
    3076:	6b 01       	movw	r12, r22
    3078:	8a 01       	movw	r16, r20
    307a:	fc 01       	movw	r30, r24
    307c:	17 82       	std	Z+7, r1	; 0x07
    307e:	16 82       	std	Z+6, r1	; 0x06
    3080:	83 81       	ldd	r24, Z+3	; 0x03
    3082:	81 ff       	sbrs	r24, 1
    3084:	b0 c1       	rjmp	.+864    	; 0x33e6 <vfprintf+0x3a6>
    3086:	ce 01       	movw	r24, r28
    3088:	01 96       	adiw	r24, 0x01	; 1
    308a:	4c 01       	movw	r8, r24
    308c:	f7 01       	movw	r30, r14
    308e:	93 81       	ldd	r25, Z+3	; 0x03
    3090:	f6 01       	movw	r30, r12
    3092:	93 fd       	sbrc	r25, 3
    3094:	85 91       	lpm	r24, Z+
    3096:	93 ff       	sbrs	r25, 3
    3098:	81 91       	ld	r24, Z+
    309a:	6f 01       	movw	r12, r30
    309c:	88 23       	and	r24, r24
    309e:	09 f4       	brne	.+2      	; 0x30a2 <vfprintf+0x62>
    30a0:	9e c1       	rjmp	.+828    	; 0x33de <vfprintf+0x39e>
    30a2:	85 32       	cpi	r24, 0x25	; 37
    30a4:	39 f4       	brne	.+14     	; 0x30b4 <vfprintf+0x74>
    30a6:	93 fd       	sbrc	r25, 3
    30a8:	85 91       	lpm	r24, Z+
    30aa:	93 ff       	sbrs	r25, 3
    30ac:	81 91       	ld	r24, Z+
    30ae:	6f 01       	movw	r12, r30
    30b0:	85 32       	cpi	r24, 0x25	; 37
    30b2:	21 f4       	brne	.+8      	; 0x30bc <vfprintf+0x7c>
    30b4:	b7 01       	movw	r22, r14
    30b6:	90 e0       	ldi	r25, 0x00	; 0
    30b8:	c7 d1       	rcall	.+910    	; 0x3448 <fputc>
    30ba:	e8 cf       	rjmp	.-48     	; 0x308c <vfprintf+0x4c>
    30bc:	51 2c       	mov	r5, r1
    30be:	31 2c       	mov	r3, r1
    30c0:	20 e0       	ldi	r18, 0x00	; 0
    30c2:	20 32       	cpi	r18, 0x20	; 32
    30c4:	a0 f4       	brcc	.+40     	; 0x30ee <vfprintf+0xae>
    30c6:	8b 32       	cpi	r24, 0x2B	; 43
    30c8:	69 f0       	breq	.+26     	; 0x30e4 <vfprintf+0xa4>
    30ca:	30 f4       	brcc	.+12     	; 0x30d8 <vfprintf+0x98>
    30cc:	80 32       	cpi	r24, 0x20	; 32
    30ce:	59 f0       	breq	.+22     	; 0x30e6 <vfprintf+0xa6>
    30d0:	83 32       	cpi	r24, 0x23	; 35
    30d2:	69 f4       	brne	.+26     	; 0x30ee <vfprintf+0xae>
    30d4:	20 61       	ori	r18, 0x10	; 16
    30d6:	2c c0       	rjmp	.+88     	; 0x3130 <vfprintf+0xf0>
    30d8:	8d 32       	cpi	r24, 0x2D	; 45
    30da:	39 f0       	breq	.+14     	; 0x30ea <vfprintf+0xaa>
    30dc:	80 33       	cpi	r24, 0x30	; 48
    30de:	39 f4       	brne	.+14     	; 0x30ee <vfprintf+0xae>
    30e0:	21 60       	ori	r18, 0x01	; 1
    30e2:	26 c0       	rjmp	.+76     	; 0x3130 <vfprintf+0xf0>
    30e4:	22 60       	ori	r18, 0x02	; 2
    30e6:	24 60       	ori	r18, 0x04	; 4
    30e8:	23 c0       	rjmp	.+70     	; 0x3130 <vfprintf+0xf0>
    30ea:	28 60       	ori	r18, 0x08	; 8
    30ec:	21 c0       	rjmp	.+66     	; 0x3130 <vfprintf+0xf0>
    30ee:	27 fd       	sbrc	r18, 7
    30f0:	27 c0       	rjmp	.+78     	; 0x3140 <vfprintf+0x100>
    30f2:	30 ed       	ldi	r19, 0xD0	; 208
    30f4:	38 0f       	add	r19, r24
    30f6:	3a 30       	cpi	r19, 0x0A	; 10
    30f8:	78 f4       	brcc	.+30     	; 0x3118 <vfprintf+0xd8>
    30fa:	26 ff       	sbrs	r18, 6
    30fc:	06 c0       	rjmp	.+12     	; 0x310a <vfprintf+0xca>
    30fe:	fa e0       	ldi	r31, 0x0A	; 10
    3100:	5f 9e       	mul	r5, r31
    3102:	30 0d       	add	r19, r0
    3104:	11 24       	eor	r1, r1
    3106:	53 2e       	mov	r5, r19
    3108:	13 c0       	rjmp	.+38     	; 0x3130 <vfprintf+0xf0>
    310a:	8a e0       	ldi	r24, 0x0A	; 10
    310c:	38 9e       	mul	r3, r24
    310e:	30 0d       	add	r19, r0
    3110:	11 24       	eor	r1, r1
    3112:	33 2e       	mov	r3, r19
    3114:	20 62       	ori	r18, 0x20	; 32
    3116:	0c c0       	rjmp	.+24     	; 0x3130 <vfprintf+0xf0>
    3118:	8e 32       	cpi	r24, 0x2E	; 46
    311a:	21 f4       	brne	.+8      	; 0x3124 <vfprintf+0xe4>
    311c:	26 fd       	sbrc	r18, 6
    311e:	5f c1       	rjmp	.+702    	; 0x33de <vfprintf+0x39e>
    3120:	20 64       	ori	r18, 0x40	; 64
    3122:	06 c0       	rjmp	.+12     	; 0x3130 <vfprintf+0xf0>
    3124:	8c 36       	cpi	r24, 0x6C	; 108
    3126:	11 f4       	brne	.+4      	; 0x312c <vfprintf+0xec>
    3128:	20 68       	ori	r18, 0x80	; 128
    312a:	02 c0       	rjmp	.+4      	; 0x3130 <vfprintf+0xf0>
    312c:	88 36       	cpi	r24, 0x68	; 104
    312e:	41 f4       	brne	.+16     	; 0x3140 <vfprintf+0x100>
    3130:	f6 01       	movw	r30, r12
    3132:	93 fd       	sbrc	r25, 3
    3134:	85 91       	lpm	r24, Z+
    3136:	93 ff       	sbrs	r25, 3
    3138:	81 91       	ld	r24, Z+
    313a:	6f 01       	movw	r12, r30
    313c:	81 11       	cpse	r24, r1
    313e:	c1 cf       	rjmp	.-126    	; 0x30c2 <vfprintf+0x82>
    3140:	98 2f       	mov	r25, r24
    3142:	9f 7d       	andi	r25, 0xDF	; 223
    3144:	95 54       	subi	r25, 0x45	; 69
    3146:	93 30       	cpi	r25, 0x03	; 3
    3148:	28 f4       	brcc	.+10     	; 0x3154 <vfprintf+0x114>
    314a:	0c 5f       	subi	r16, 0xFC	; 252
    314c:	1f 4f       	sbci	r17, 0xFF	; 255
    314e:	ff e3       	ldi	r31, 0x3F	; 63
    3150:	f9 83       	std	Y+1, r31	; 0x01
    3152:	0d c0       	rjmp	.+26     	; 0x316e <vfprintf+0x12e>
    3154:	83 36       	cpi	r24, 0x63	; 99
    3156:	31 f0       	breq	.+12     	; 0x3164 <vfprintf+0x124>
    3158:	83 37       	cpi	r24, 0x73	; 115
    315a:	71 f0       	breq	.+28     	; 0x3178 <vfprintf+0x138>
    315c:	83 35       	cpi	r24, 0x53	; 83
    315e:	09 f0       	breq	.+2      	; 0x3162 <vfprintf+0x122>
    3160:	57 c0       	rjmp	.+174    	; 0x3210 <vfprintf+0x1d0>
    3162:	21 c0       	rjmp	.+66     	; 0x31a6 <vfprintf+0x166>
    3164:	f8 01       	movw	r30, r16
    3166:	80 81       	ld	r24, Z
    3168:	89 83       	std	Y+1, r24	; 0x01
    316a:	0e 5f       	subi	r16, 0xFE	; 254
    316c:	1f 4f       	sbci	r17, 0xFF	; 255
    316e:	44 24       	eor	r4, r4
    3170:	43 94       	inc	r4
    3172:	51 2c       	mov	r5, r1
    3174:	54 01       	movw	r10, r8
    3176:	14 c0       	rjmp	.+40     	; 0x31a0 <vfprintf+0x160>
    3178:	38 01       	movw	r6, r16
    317a:	f2 e0       	ldi	r31, 0x02	; 2
    317c:	6f 0e       	add	r6, r31
    317e:	71 1c       	adc	r7, r1
    3180:	f8 01       	movw	r30, r16
    3182:	a0 80       	ld	r10, Z
    3184:	b1 80       	ldd	r11, Z+1	; 0x01
    3186:	26 ff       	sbrs	r18, 6
    3188:	03 c0       	rjmp	.+6      	; 0x3190 <vfprintf+0x150>
    318a:	65 2d       	mov	r22, r5
    318c:	70 e0       	ldi	r23, 0x00	; 0
    318e:	02 c0       	rjmp	.+4      	; 0x3194 <vfprintf+0x154>
    3190:	6f ef       	ldi	r22, 0xFF	; 255
    3192:	7f ef       	ldi	r23, 0xFF	; 255
    3194:	c5 01       	movw	r24, r10
    3196:	2c 87       	std	Y+12, r18	; 0x0c
    3198:	4c d1       	rcall	.+664    	; 0x3432 <strnlen>
    319a:	2c 01       	movw	r4, r24
    319c:	83 01       	movw	r16, r6
    319e:	2c 85       	ldd	r18, Y+12	; 0x0c
    31a0:	2f 77       	andi	r18, 0x7F	; 127
    31a2:	22 2e       	mov	r2, r18
    31a4:	16 c0       	rjmp	.+44     	; 0x31d2 <vfprintf+0x192>
    31a6:	38 01       	movw	r6, r16
    31a8:	f2 e0       	ldi	r31, 0x02	; 2
    31aa:	6f 0e       	add	r6, r31
    31ac:	71 1c       	adc	r7, r1
    31ae:	f8 01       	movw	r30, r16
    31b0:	a0 80       	ld	r10, Z
    31b2:	b1 80       	ldd	r11, Z+1	; 0x01
    31b4:	26 ff       	sbrs	r18, 6
    31b6:	03 c0       	rjmp	.+6      	; 0x31be <vfprintf+0x17e>
    31b8:	65 2d       	mov	r22, r5
    31ba:	70 e0       	ldi	r23, 0x00	; 0
    31bc:	02 c0       	rjmp	.+4      	; 0x31c2 <vfprintf+0x182>
    31be:	6f ef       	ldi	r22, 0xFF	; 255
    31c0:	7f ef       	ldi	r23, 0xFF	; 255
    31c2:	c5 01       	movw	r24, r10
    31c4:	2c 87       	std	Y+12, r18	; 0x0c
    31c6:	2a d1       	rcall	.+596    	; 0x341c <strnlen_P>
    31c8:	2c 01       	movw	r4, r24
    31ca:	2c 85       	ldd	r18, Y+12	; 0x0c
    31cc:	20 68       	ori	r18, 0x80	; 128
    31ce:	22 2e       	mov	r2, r18
    31d0:	83 01       	movw	r16, r6
    31d2:	23 fc       	sbrc	r2, 3
    31d4:	19 c0       	rjmp	.+50     	; 0x3208 <vfprintf+0x1c8>
    31d6:	83 2d       	mov	r24, r3
    31d8:	90 e0       	ldi	r25, 0x00	; 0
    31da:	48 16       	cp	r4, r24
    31dc:	59 06       	cpc	r5, r25
    31de:	a0 f4       	brcc	.+40     	; 0x3208 <vfprintf+0x1c8>
    31e0:	b7 01       	movw	r22, r14
    31e2:	80 e2       	ldi	r24, 0x20	; 32
    31e4:	90 e0       	ldi	r25, 0x00	; 0
    31e6:	30 d1       	rcall	.+608    	; 0x3448 <fputc>
    31e8:	3a 94       	dec	r3
    31ea:	f5 cf       	rjmp	.-22     	; 0x31d6 <vfprintf+0x196>
    31ec:	f5 01       	movw	r30, r10
    31ee:	27 fc       	sbrc	r2, 7
    31f0:	85 91       	lpm	r24, Z+
    31f2:	27 fe       	sbrs	r2, 7
    31f4:	81 91       	ld	r24, Z+
    31f6:	5f 01       	movw	r10, r30
    31f8:	b7 01       	movw	r22, r14
    31fa:	90 e0       	ldi	r25, 0x00	; 0
    31fc:	25 d1       	rcall	.+586    	; 0x3448 <fputc>
    31fe:	31 10       	cpse	r3, r1
    3200:	3a 94       	dec	r3
    3202:	f1 e0       	ldi	r31, 0x01	; 1
    3204:	4f 1a       	sub	r4, r31
    3206:	51 08       	sbc	r5, r1
    3208:	41 14       	cp	r4, r1
    320a:	51 04       	cpc	r5, r1
    320c:	79 f7       	brne	.-34     	; 0x31ec <vfprintf+0x1ac>
    320e:	de c0       	rjmp	.+444    	; 0x33cc <vfprintf+0x38c>
    3210:	84 36       	cpi	r24, 0x64	; 100
    3212:	11 f0       	breq	.+4      	; 0x3218 <vfprintf+0x1d8>
    3214:	89 36       	cpi	r24, 0x69	; 105
    3216:	31 f5       	brne	.+76     	; 0x3264 <vfprintf+0x224>
    3218:	f8 01       	movw	r30, r16
    321a:	27 ff       	sbrs	r18, 7
    321c:	07 c0       	rjmp	.+14     	; 0x322c <vfprintf+0x1ec>
    321e:	60 81       	ld	r22, Z
    3220:	71 81       	ldd	r23, Z+1	; 0x01
    3222:	82 81       	ldd	r24, Z+2	; 0x02
    3224:	93 81       	ldd	r25, Z+3	; 0x03
    3226:	0c 5f       	subi	r16, 0xFC	; 252
    3228:	1f 4f       	sbci	r17, 0xFF	; 255
    322a:	08 c0       	rjmp	.+16     	; 0x323c <vfprintf+0x1fc>
    322c:	60 81       	ld	r22, Z
    322e:	71 81       	ldd	r23, Z+1	; 0x01
    3230:	07 2e       	mov	r0, r23
    3232:	00 0c       	add	r0, r0
    3234:	88 0b       	sbc	r24, r24
    3236:	99 0b       	sbc	r25, r25
    3238:	0e 5f       	subi	r16, 0xFE	; 254
    323a:	1f 4f       	sbci	r17, 0xFF	; 255
    323c:	2f 76       	andi	r18, 0x6F	; 111
    323e:	72 2e       	mov	r7, r18
    3240:	97 ff       	sbrs	r25, 7
    3242:	09 c0       	rjmp	.+18     	; 0x3256 <vfprintf+0x216>
    3244:	90 95       	com	r25
    3246:	80 95       	com	r24
    3248:	70 95       	com	r23
    324a:	61 95       	neg	r22
    324c:	7f 4f       	sbci	r23, 0xFF	; 255
    324e:	8f 4f       	sbci	r24, 0xFF	; 255
    3250:	9f 4f       	sbci	r25, 0xFF	; 255
    3252:	20 68       	ori	r18, 0x80	; 128
    3254:	72 2e       	mov	r7, r18
    3256:	2a e0       	ldi	r18, 0x0A	; 10
    3258:	30 e0       	ldi	r19, 0x00	; 0
    325a:	a4 01       	movw	r20, r8
    325c:	2d d1       	rcall	.+602    	; 0x34b8 <__ultoa_invert>
    325e:	a8 2e       	mov	r10, r24
    3260:	a8 18       	sub	r10, r8
    3262:	43 c0       	rjmp	.+134    	; 0x32ea <vfprintf+0x2aa>
    3264:	85 37       	cpi	r24, 0x75	; 117
    3266:	29 f4       	brne	.+10     	; 0x3272 <vfprintf+0x232>
    3268:	2f 7e       	andi	r18, 0xEF	; 239
    326a:	b2 2e       	mov	r11, r18
    326c:	2a e0       	ldi	r18, 0x0A	; 10
    326e:	30 e0       	ldi	r19, 0x00	; 0
    3270:	25 c0       	rjmp	.+74     	; 0x32bc <vfprintf+0x27c>
    3272:	f2 2f       	mov	r31, r18
    3274:	f9 7f       	andi	r31, 0xF9	; 249
    3276:	bf 2e       	mov	r11, r31
    3278:	8f 36       	cpi	r24, 0x6F	; 111
    327a:	c1 f0       	breq	.+48     	; 0x32ac <vfprintf+0x26c>
    327c:	18 f4       	brcc	.+6      	; 0x3284 <vfprintf+0x244>
    327e:	88 35       	cpi	r24, 0x58	; 88
    3280:	79 f0       	breq	.+30     	; 0x32a0 <vfprintf+0x260>
    3282:	ad c0       	rjmp	.+346    	; 0x33de <vfprintf+0x39e>
    3284:	80 37       	cpi	r24, 0x70	; 112
    3286:	19 f0       	breq	.+6      	; 0x328e <vfprintf+0x24e>
    3288:	88 37       	cpi	r24, 0x78	; 120
    328a:	21 f0       	breq	.+8      	; 0x3294 <vfprintf+0x254>
    328c:	a8 c0       	rjmp	.+336    	; 0x33de <vfprintf+0x39e>
    328e:	2f 2f       	mov	r18, r31
    3290:	20 61       	ori	r18, 0x10	; 16
    3292:	b2 2e       	mov	r11, r18
    3294:	b4 fe       	sbrs	r11, 4
    3296:	0d c0       	rjmp	.+26     	; 0x32b2 <vfprintf+0x272>
    3298:	8b 2d       	mov	r24, r11
    329a:	84 60       	ori	r24, 0x04	; 4
    329c:	b8 2e       	mov	r11, r24
    329e:	09 c0       	rjmp	.+18     	; 0x32b2 <vfprintf+0x272>
    32a0:	24 ff       	sbrs	r18, 4
    32a2:	0a c0       	rjmp	.+20     	; 0x32b8 <vfprintf+0x278>
    32a4:	9f 2f       	mov	r25, r31
    32a6:	96 60       	ori	r25, 0x06	; 6
    32a8:	b9 2e       	mov	r11, r25
    32aa:	06 c0       	rjmp	.+12     	; 0x32b8 <vfprintf+0x278>
    32ac:	28 e0       	ldi	r18, 0x08	; 8
    32ae:	30 e0       	ldi	r19, 0x00	; 0
    32b0:	05 c0       	rjmp	.+10     	; 0x32bc <vfprintf+0x27c>
    32b2:	20 e1       	ldi	r18, 0x10	; 16
    32b4:	30 e0       	ldi	r19, 0x00	; 0
    32b6:	02 c0       	rjmp	.+4      	; 0x32bc <vfprintf+0x27c>
    32b8:	20 e1       	ldi	r18, 0x10	; 16
    32ba:	32 e0       	ldi	r19, 0x02	; 2
    32bc:	f8 01       	movw	r30, r16
    32be:	b7 fe       	sbrs	r11, 7
    32c0:	07 c0       	rjmp	.+14     	; 0x32d0 <vfprintf+0x290>
    32c2:	60 81       	ld	r22, Z
    32c4:	71 81       	ldd	r23, Z+1	; 0x01
    32c6:	82 81       	ldd	r24, Z+2	; 0x02
    32c8:	93 81       	ldd	r25, Z+3	; 0x03
    32ca:	0c 5f       	subi	r16, 0xFC	; 252
    32cc:	1f 4f       	sbci	r17, 0xFF	; 255
    32ce:	06 c0       	rjmp	.+12     	; 0x32dc <vfprintf+0x29c>
    32d0:	60 81       	ld	r22, Z
    32d2:	71 81       	ldd	r23, Z+1	; 0x01
    32d4:	80 e0       	ldi	r24, 0x00	; 0
    32d6:	90 e0       	ldi	r25, 0x00	; 0
    32d8:	0e 5f       	subi	r16, 0xFE	; 254
    32da:	1f 4f       	sbci	r17, 0xFF	; 255
    32dc:	a4 01       	movw	r20, r8
    32de:	ec d0       	rcall	.+472    	; 0x34b8 <__ultoa_invert>
    32e0:	a8 2e       	mov	r10, r24
    32e2:	a8 18       	sub	r10, r8
    32e4:	fb 2d       	mov	r31, r11
    32e6:	ff 77       	andi	r31, 0x7F	; 127
    32e8:	7f 2e       	mov	r7, r31
    32ea:	76 fe       	sbrs	r7, 6
    32ec:	0b c0       	rjmp	.+22     	; 0x3304 <vfprintf+0x2c4>
    32ee:	37 2d       	mov	r19, r7
    32f0:	3e 7f       	andi	r19, 0xFE	; 254
    32f2:	a5 14       	cp	r10, r5
    32f4:	50 f4       	brcc	.+20     	; 0x330a <vfprintf+0x2ca>
    32f6:	74 fe       	sbrs	r7, 4
    32f8:	0a c0       	rjmp	.+20     	; 0x330e <vfprintf+0x2ce>
    32fa:	72 fc       	sbrc	r7, 2
    32fc:	08 c0       	rjmp	.+16     	; 0x330e <vfprintf+0x2ce>
    32fe:	37 2d       	mov	r19, r7
    3300:	3e 7e       	andi	r19, 0xEE	; 238
    3302:	05 c0       	rjmp	.+10     	; 0x330e <vfprintf+0x2ce>
    3304:	ba 2c       	mov	r11, r10
    3306:	37 2d       	mov	r19, r7
    3308:	03 c0       	rjmp	.+6      	; 0x3310 <vfprintf+0x2d0>
    330a:	ba 2c       	mov	r11, r10
    330c:	01 c0       	rjmp	.+2      	; 0x3310 <vfprintf+0x2d0>
    330e:	b5 2c       	mov	r11, r5
    3310:	34 ff       	sbrs	r19, 4
    3312:	0d c0       	rjmp	.+26     	; 0x332e <vfprintf+0x2ee>
    3314:	fe 01       	movw	r30, r28
    3316:	ea 0d       	add	r30, r10
    3318:	f1 1d       	adc	r31, r1
    331a:	80 81       	ld	r24, Z
    331c:	80 33       	cpi	r24, 0x30	; 48
    331e:	11 f4       	brne	.+4      	; 0x3324 <vfprintf+0x2e4>
    3320:	39 7e       	andi	r19, 0xE9	; 233
    3322:	09 c0       	rjmp	.+18     	; 0x3336 <vfprintf+0x2f6>
    3324:	32 ff       	sbrs	r19, 2
    3326:	06 c0       	rjmp	.+12     	; 0x3334 <vfprintf+0x2f4>
    3328:	b3 94       	inc	r11
    332a:	b3 94       	inc	r11
    332c:	04 c0       	rjmp	.+8      	; 0x3336 <vfprintf+0x2f6>
    332e:	83 2f       	mov	r24, r19
    3330:	86 78       	andi	r24, 0x86	; 134
    3332:	09 f0       	breq	.+2      	; 0x3336 <vfprintf+0x2f6>
    3334:	b3 94       	inc	r11
    3336:	33 fd       	sbrc	r19, 3
    3338:	12 c0       	rjmp	.+36     	; 0x335e <vfprintf+0x31e>
    333a:	30 ff       	sbrs	r19, 0
    333c:	06 c0       	rjmp	.+12     	; 0x334a <vfprintf+0x30a>
    333e:	5a 2c       	mov	r5, r10
    3340:	b3 14       	cp	r11, r3
    3342:	18 f4       	brcc	.+6      	; 0x334a <vfprintf+0x30a>
    3344:	53 0c       	add	r5, r3
    3346:	5b 18       	sub	r5, r11
    3348:	b3 2c       	mov	r11, r3
    334a:	b3 14       	cp	r11, r3
    334c:	60 f4       	brcc	.+24     	; 0x3366 <vfprintf+0x326>
    334e:	b7 01       	movw	r22, r14
    3350:	80 e2       	ldi	r24, 0x20	; 32
    3352:	90 e0       	ldi	r25, 0x00	; 0
    3354:	3c 87       	std	Y+12, r19	; 0x0c
    3356:	78 d0       	rcall	.+240    	; 0x3448 <fputc>
    3358:	b3 94       	inc	r11
    335a:	3c 85       	ldd	r19, Y+12	; 0x0c
    335c:	f6 cf       	rjmp	.-20     	; 0x334a <vfprintf+0x30a>
    335e:	b3 14       	cp	r11, r3
    3360:	10 f4       	brcc	.+4      	; 0x3366 <vfprintf+0x326>
    3362:	3b 18       	sub	r3, r11
    3364:	01 c0       	rjmp	.+2      	; 0x3368 <vfprintf+0x328>
    3366:	31 2c       	mov	r3, r1
    3368:	34 ff       	sbrs	r19, 4
    336a:	11 c0       	rjmp	.+34     	; 0x338e <vfprintf+0x34e>
    336c:	b7 01       	movw	r22, r14
    336e:	80 e3       	ldi	r24, 0x30	; 48
    3370:	90 e0       	ldi	r25, 0x00	; 0
    3372:	3c 87       	std	Y+12, r19	; 0x0c
    3374:	69 d0       	rcall	.+210    	; 0x3448 <fputc>
    3376:	3c 85       	ldd	r19, Y+12	; 0x0c
    3378:	32 ff       	sbrs	r19, 2
    337a:	16 c0       	rjmp	.+44     	; 0x33a8 <vfprintf+0x368>
    337c:	31 fd       	sbrc	r19, 1
    337e:	03 c0       	rjmp	.+6      	; 0x3386 <vfprintf+0x346>
    3380:	88 e7       	ldi	r24, 0x78	; 120
    3382:	90 e0       	ldi	r25, 0x00	; 0
    3384:	02 c0       	rjmp	.+4      	; 0x338a <vfprintf+0x34a>
    3386:	88 e5       	ldi	r24, 0x58	; 88
    3388:	90 e0       	ldi	r25, 0x00	; 0
    338a:	b7 01       	movw	r22, r14
    338c:	0c c0       	rjmp	.+24     	; 0x33a6 <vfprintf+0x366>
    338e:	83 2f       	mov	r24, r19
    3390:	86 78       	andi	r24, 0x86	; 134
    3392:	51 f0       	breq	.+20     	; 0x33a8 <vfprintf+0x368>
    3394:	31 ff       	sbrs	r19, 1
    3396:	02 c0       	rjmp	.+4      	; 0x339c <vfprintf+0x35c>
    3398:	8b e2       	ldi	r24, 0x2B	; 43
    339a:	01 c0       	rjmp	.+2      	; 0x339e <vfprintf+0x35e>
    339c:	80 e2       	ldi	r24, 0x20	; 32
    339e:	37 fd       	sbrc	r19, 7
    33a0:	8d e2       	ldi	r24, 0x2D	; 45
    33a2:	b7 01       	movw	r22, r14
    33a4:	90 e0       	ldi	r25, 0x00	; 0
    33a6:	50 d0       	rcall	.+160    	; 0x3448 <fputc>
    33a8:	a5 14       	cp	r10, r5
    33aa:	30 f4       	brcc	.+12     	; 0x33b8 <vfprintf+0x378>
    33ac:	b7 01       	movw	r22, r14
    33ae:	80 e3       	ldi	r24, 0x30	; 48
    33b0:	90 e0       	ldi	r25, 0x00	; 0
    33b2:	4a d0       	rcall	.+148    	; 0x3448 <fputc>
    33b4:	5a 94       	dec	r5
    33b6:	f8 cf       	rjmp	.-16     	; 0x33a8 <vfprintf+0x368>
    33b8:	aa 94       	dec	r10
    33ba:	f4 01       	movw	r30, r8
    33bc:	ea 0d       	add	r30, r10
    33be:	f1 1d       	adc	r31, r1
    33c0:	80 81       	ld	r24, Z
    33c2:	b7 01       	movw	r22, r14
    33c4:	90 e0       	ldi	r25, 0x00	; 0
    33c6:	40 d0       	rcall	.+128    	; 0x3448 <fputc>
    33c8:	a1 10       	cpse	r10, r1
    33ca:	f6 cf       	rjmp	.-20     	; 0x33b8 <vfprintf+0x378>
    33cc:	33 20       	and	r3, r3
    33ce:	09 f4       	brne	.+2      	; 0x33d2 <vfprintf+0x392>
    33d0:	5d ce       	rjmp	.-838    	; 0x308c <vfprintf+0x4c>
    33d2:	b7 01       	movw	r22, r14
    33d4:	80 e2       	ldi	r24, 0x20	; 32
    33d6:	90 e0       	ldi	r25, 0x00	; 0
    33d8:	37 d0       	rcall	.+110    	; 0x3448 <fputc>
    33da:	3a 94       	dec	r3
    33dc:	f7 cf       	rjmp	.-18     	; 0x33cc <vfprintf+0x38c>
    33de:	f7 01       	movw	r30, r14
    33e0:	86 81       	ldd	r24, Z+6	; 0x06
    33e2:	97 81       	ldd	r25, Z+7	; 0x07
    33e4:	02 c0       	rjmp	.+4      	; 0x33ea <vfprintf+0x3aa>
    33e6:	8f ef       	ldi	r24, 0xFF	; 255
    33e8:	9f ef       	ldi	r25, 0xFF	; 255
    33ea:	2c 96       	adiw	r28, 0x0c	; 12
    33ec:	0f b6       	in	r0, 0x3f	; 63
    33ee:	f8 94       	cli
    33f0:	de bf       	out	0x3e, r29	; 62
    33f2:	0f be       	out	0x3f, r0	; 63
    33f4:	cd bf       	out	0x3d, r28	; 61
    33f6:	df 91       	pop	r29
    33f8:	cf 91       	pop	r28
    33fa:	1f 91       	pop	r17
    33fc:	0f 91       	pop	r16
    33fe:	ff 90       	pop	r15
    3400:	ef 90       	pop	r14
    3402:	df 90       	pop	r13
    3404:	cf 90       	pop	r12
    3406:	bf 90       	pop	r11
    3408:	af 90       	pop	r10
    340a:	9f 90       	pop	r9
    340c:	8f 90       	pop	r8
    340e:	7f 90       	pop	r7
    3410:	6f 90       	pop	r6
    3412:	5f 90       	pop	r5
    3414:	4f 90       	pop	r4
    3416:	3f 90       	pop	r3
    3418:	2f 90       	pop	r2
    341a:	08 95       	ret

0000341c <strnlen_P>:
    341c:	fc 01       	movw	r30, r24
    341e:	05 90       	lpm	r0, Z+
    3420:	61 50       	subi	r22, 0x01	; 1
    3422:	70 40       	sbci	r23, 0x00	; 0
    3424:	01 10       	cpse	r0, r1
    3426:	d8 f7       	brcc	.-10     	; 0x341e <strnlen_P+0x2>
    3428:	80 95       	com	r24
    342a:	90 95       	com	r25
    342c:	8e 0f       	add	r24, r30
    342e:	9f 1f       	adc	r25, r31
    3430:	08 95       	ret

00003432 <strnlen>:
    3432:	fc 01       	movw	r30, r24
    3434:	61 50       	subi	r22, 0x01	; 1
    3436:	70 40       	sbci	r23, 0x00	; 0
    3438:	01 90       	ld	r0, Z+
    343a:	01 10       	cpse	r0, r1
    343c:	d8 f7       	brcc	.-10     	; 0x3434 <strnlen+0x2>
    343e:	80 95       	com	r24
    3440:	90 95       	com	r25
    3442:	8e 0f       	add	r24, r30
    3444:	9f 1f       	adc	r25, r31
    3446:	08 95       	ret

00003448 <fputc>:
    3448:	0f 93       	push	r16
    344a:	1f 93       	push	r17
    344c:	cf 93       	push	r28
    344e:	df 93       	push	r29
    3450:	fb 01       	movw	r30, r22
    3452:	23 81       	ldd	r18, Z+3	; 0x03
    3454:	21 fd       	sbrc	r18, 1
    3456:	03 c0       	rjmp	.+6      	; 0x345e <fputc+0x16>
    3458:	8f ef       	ldi	r24, 0xFF	; 255
    345a:	9f ef       	ldi	r25, 0xFF	; 255
    345c:	28 c0       	rjmp	.+80     	; 0x34ae <fputc+0x66>
    345e:	22 ff       	sbrs	r18, 2
    3460:	16 c0       	rjmp	.+44     	; 0x348e <fputc+0x46>
    3462:	46 81       	ldd	r20, Z+6	; 0x06
    3464:	57 81       	ldd	r21, Z+7	; 0x07
    3466:	24 81       	ldd	r18, Z+4	; 0x04
    3468:	35 81       	ldd	r19, Z+5	; 0x05
    346a:	42 17       	cp	r20, r18
    346c:	53 07       	cpc	r21, r19
    346e:	44 f4       	brge	.+16     	; 0x3480 <fputc+0x38>
    3470:	a0 81       	ld	r26, Z
    3472:	b1 81       	ldd	r27, Z+1	; 0x01
    3474:	9d 01       	movw	r18, r26
    3476:	2f 5f       	subi	r18, 0xFF	; 255
    3478:	3f 4f       	sbci	r19, 0xFF	; 255
    347a:	31 83       	std	Z+1, r19	; 0x01
    347c:	20 83       	st	Z, r18
    347e:	8c 93       	st	X, r24
    3480:	26 81       	ldd	r18, Z+6	; 0x06
    3482:	37 81       	ldd	r19, Z+7	; 0x07
    3484:	2f 5f       	subi	r18, 0xFF	; 255
    3486:	3f 4f       	sbci	r19, 0xFF	; 255
    3488:	37 83       	std	Z+7, r19	; 0x07
    348a:	26 83       	std	Z+6, r18	; 0x06
    348c:	10 c0       	rjmp	.+32     	; 0x34ae <fputc+0x66>
    348e:	eb 01       	movw	r28, r22
    3490:	09 2f       	mov	r16, r25
    3492:	18 2f       	mov	r17, r24
    3494:	00 84       	ldd	r0, Z+8	; 0x08
    3496:	f1 85       	ldd	r31, Z+9	; 0x09
    3498:	e0 2d       	mov	r30, r0
    349a:	19 95       	eicall
    349c:	89 2b       	or	r24, r25
    349e:	e1 f6       	brne	.-72     	; 0x3458 <fputc+0x10>
    34a0:	8e 81       	ldd	r24, Y+6	; 0x06
    34a2:	9f 81       	ldd	r25, Y+7	; 0x07
    34a4:	01 96       	adiw	r24, 0x01	; 1
    34a6:	9f 83       	std	Y+7, r25	; 0x07
    34a8:	8e 83       	std	Y+6, r24	; 0x06
    34aa:	81 2f       	mov	r24, r17
    34ac:	90 2f       	mov	r25, r16
    34ae:	df 91       	pop	r29
    34b0:	cf 91       	pop	r28
    34b2:	1f 91       	pop	r17
    34b4:	0f 91       	pop	r16
    34b6:	08 95       	ret

000034b8 <__ultoa_invert>:
    34b8:	fa 01       	movw	r30, r20
    34ba:	aa 27       	eor	r26, r26
    34bc:	28 30       	cpi	r18, 0x08	; 8
    34be:	51 f1       	breq	.+84     	; 0x3514 <__ultoa_invert+0x5c>
    34c0:	20 31       	cpi	r18, 0x10	; 16
    34c2:	81 f1       	breq	.+96     	; 0x3524 <__ultoa_invert+0x6c>
    34c4:	e8 94       	clt
    34c6:	6f 93       	push	r22
    34c8:	6e 7f       	andi	r22, 0xFE	; 254
    34ca:	6e 5f       	subi	r22, 0xFE	; 254
    34cc:	7f 4f       	sbci	r23, 0xFF	; 255
    34ce:	8f 4f       	sbci	r24, 0xFF	; 255
    34d0:	9f 4f       	sbci	r25, 0xFF	; 255
    34d2:	af 4f       	sbci	r26, 0xFF	; 255
    34d4:	b1 e0       	ldi	r27, 0x01	; 1
    34d6:	3e d0       	rcall	.+124    	; 0x3554 <__ultoa_invert+0x9c>
    34d8:	b4 e0       	ldi	r27, 0x04	; 4
    34da:	3c d0       	rcall	.+120    	; 0x3554 <__ultoa_invert+0x9c>
    34dc:	67 0f       	add	r22, r23
    34de:	78 1f       	adc	r23, r24
    34e0:	89 1f       	adc	r24, r25
    34e2:	9a 1f       	adc	r25, r26
    34e4:	a1 1d       	adc	r26, r1
    34e6:	68 0f       	add	r22, r24
    34e8:	79 1f       	adc	r23, r25
    34ea:	8a 1f       	adc	r24, r26
    34ec:	91 1d       	adc	r25, r1
    34ee:	a1 1d       	adc	r26, r1
    34f0:	6a 0f       	add	r22, r26
    34f2:	71 1d       	adc	r23, r1
    34f4:	81 1d       	adc	r24, r1
    34f6:	91 1d       	adc	r25, r1
    34f8:	a1 1d       	adc	r26, r1
    34fa:	20 d0       	rcall	.+64     	; 0x353c <__ultoa_invert+0x84>
    34fc:	09 f4       	brne	.+2      	; 0x3500 <__ultoa_invert+0x48>
    34fe:	68 94       	set
    3500:	3f 91       	pop	r19
    3502:	2a e0       	ldi	r18, 0x0A	; 10
    3504:	26 9f       	mul	r18, r22
    3506:	11 24       	eor	r1, r1
    3508:	30 19       	sub	r19, r0
    350a:	30 5d       	subi	r19, 0xD0	; 208
    350c:	31 93       	st	Z+, r19
    350e:	de f6       	brtc	.-74     	; 0x34c6 <__ultoa_invert+0xe>
    3510:	cf 01       	movw	r24, r30
    3512:	08 95       	ret
    3514:	46 2f       	mov	r20, r22
    3516:	47 70       	andi	r20, 0x07	; 7
    3518:	40 5d       	subi	r20, 0xD0	; 208
    351a:	41 93       	st	Z+, r20
    351c:	b3 e0       	ldi	r27, 0x03	; 3
    351e:	0f d0       	rcall	.+30     	; 0x353e <__ultoa_invert+0x86>
    3520:	c9 f7       	brne	.-14     	; 0x3514 <__ultoa_invert+0x5c>
    3522:	f6 cf       	rjmp	.-20     	; 0x3510 <__ultoa_invert+0x58>
    3524:	46 2f       	mov	r20, r22
    3526:	4f 70       	andi	r20, 0x0F	; 15
    3528:	40 5d       	subi	r20, 0xD0	; 208
    352a:	4a 33       	cpi	r20, 0x3A	; 58
    352c:	18 f0       	brcs	.+6      	; 0x3534 <__ultoa_invert+0x7c>
    352e:	49 5d       	subi	r20, 0xD9	; 217
    3530:	31 fd       	sbrc	r19, 1
    3532:	40 52       	subi	r20, 0x20	; 32
    3534:	41 93       	st	Z+, r20
    3536:	02 d0       	rcall	.+4      	; 0x353c <__ultoa_invert+0x84>
    3538:	a9 f7       	brne	.-22     	; 0x3524 <__ultoa_invert+0x6c>
    353a:	ea cf       	rjmp	.-44     	; 0x3510 <__ultoa_invert+0x58>
    353c:	b4 e0       	ldi	r27, 0x04	; 4
    353e:	a6 95       	lsr	r26
    3540:	97 95       	ror	r25
    3542:	87 95       	ror	r24
    3544:	77 95       	ror	r23
    3546:	67 95       	ror	r22
    3548:	ba 95       	dec	r27
    354a:	c9 f7       	brne	.-14     	; 0x353e <__ultoa_invert+0x86>
    354c:	00 97       	sbiw	r24, 0x00	; 0
    354e:	61 05       	cpc	r22, r1
    3550:	71 05       	cpc	r23, r1
    3552:	08 95       	ret
    3554:	9b 01       	movw	r18, r22
    3556:	ac 01       	movw	r20, r24
    3558:	0a 2e       	mov	r0, r26
    355a:	06 94       	lsr	r0
    355c:	57 95       	ror	r21
    355e:	47 95       	ror	r20
    3560:	37 95       	ror	r19
    3562:	27 95       	ror	r18
    3564:	ba 95       	dec	r27
    3566:	c9 f7       	brne	.-14     	; 0x355a <__ultoa_invert+0xa2>
    3568:	62 0f       	add	r22, r18
    356a:	73 1f       	adc	r23, r19
    356c:	84 1f       	adc	r24, r20
    356e:	95 1f       	adc	r25, r21
    3570:	a0 1d       	adc	r26, r0
    3572:	08 95       	ret

00003574 <_exit>:
    3574:	f8 94       	cli

00003576 <__stop_program>:
    3576:	ff cf       	rjmp	.-2      	; 0x3576 <__stop_program>
